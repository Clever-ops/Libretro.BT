!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
AI_PASSIVE	netplay_compat.h	105;"	d
AKEYCODE_ASSIST	android/native/jni/input_autodetect.h	/^   AKEYCODE_ASSIST          = 219,$/;"	e	enum:__anon83
AKEYCODE_BREAK	android/native/jni/input_autodetect.h	/^   AKEYCODE_SYSRQ           = 120, AKEYCODE_BREAK           = 121,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_1	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_1        = 188,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_10	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_10       = 197,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_11	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_11       = 198,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_12	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_12       = 199,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_13	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_13       = 200,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_14	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_14       = 201,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_15	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_15       = 202,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_16	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_16       = 203,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_2	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_2        = 189,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_3	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_3        = 190,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_4	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_4        = 191,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_5	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_5        = 192,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_6	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_6        = 193,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_7	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_7        = 194,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_8	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_8        = 195,$/;"	e	enum:__anon83
AKEYCODE_BUTTON_9	android/native/jni/input_autodetect.h	/^   AKEYCODE_BUTTON_9        = 196,$/;"	e	enum:__anon83
AKEYCODE_CAPS_LOCK	android/native/jni/input_autodetect.h	/^   AKEYCODE_CAPS_LOCK       = 115,$/;"	e	enum:__anon83
AKEYCODE_CTRL_LEFT	android/native/jni/input_autodetect.h	/^   AKEYCODE_CTRL_LEFT       = 113,$/;"	e	enum:__anon83
AKEYCODE_CTRL_RIGHT	android/native/jni/input_autodetect.h	/^   AKEYCODE_CTRL_RIGHT      = 114,$/;"	e	enum:__anon83
AKEYCODE_ESCAPE	android/native/jni/input_autodetect.h	/^   AKEYCODE_ESCAPE          = 111,$/;"	e	enum:__anon83
AKEYCODE_F1	android/native/jni/input_autodetect.h	/^   AKEYCODE_F1              = 131,$/;"	e	enum:__anon83
AKEYCODE_F2	android/native/jni/input_autodetect.h	/^   AKEYCODE_F2              = 132,$/;"	e	enum:__anon83
AKEYCODE_F3	android/native/jni/input_autodetect.h	/^   AKEYCODE_F3              = 133,$/;"	e	enum:__anon83
AKEYCODE_F4	android/native/jni/input_autodetect.h	/^   AKEYCODE_F4              = 134,$/;"	e	enum:__anon83
AKEYCODE_F5	android/native/jni/input_autodetect.h	/^   AKEYCODE_F5              = 135,$/;"	e	enum:__anon83
AKEYCODE_F6	android/native/jni/input_autodetect.h	/^   AKEYCODE_F6              = 136,$/;"	e	enum:__anon83
AKEYCODE_F7	android/native/jni/input_autodetect.h	/^   AKEYCODE_F7              = 137,$/;"	e	enum:__anon83
AKEYCODE_F8	android/native/jni/input_autodetect.h	/^   AKEYCODE_F8              = 138,$/;"	e	enum:__anon83
AKEYCODE_F9	android/native/jni/input_autodetect.h	/^   AKEYCODE_F9              = 139,$/;"	e	enum:__anon83
AKEYCODE_FORWARD	android/native/jni/input_autodetect.h	/^   AKEYCODE_FORWARD         = 125,$/;"	e	enum:__anon83
AKEYCODE_FORWARD_DEL	android/native/jni/input_autodetect.h	/^   AKEYCODE_FORWARD_DEL     = 112,$/;"	e	enum:__anon83
AKEYCODE_INSERT	android/native/jni/input_autodetect.h	/^   AKEYCODE_INSERT          = 124,$/;"	e	enum:__anon83
AKEYCODE_MEDIA_PAUSE	android/native/jni/input_autodetect.h	/^   AKEYCODE_MEDIA_PAUSE     = 127,$/;"	e	enum:__anon83
AKEYCODE_MEDIA_PLAY	android/native/jni/input_autodetect.h	/^   AKEYCODE_MEDIA_PLAY      = 126,$/;"	e	enum:__anon83
AKEYCODE_META_FUNCTION_ON	android/native/jni/input_autodetect.h	/^   AKEYCODE_META_FUNCTION_ON = 8,$/;"	e	enum:__anon83
AKEYCODE_MOVE_END	android/native/jni/input_autodetect.h	/^   AKEYCODE_MOVE_END        = 123,$/;"	e	enum:__anon83
AKEYCODE_MOVE_HOME	android/native/jni/input_autodetect.h	/^   AKEYCODE_MOVE_HOME       = 122,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_1	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_1        = 145,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_2	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_2        = 146,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_3	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_3        = 147,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_4	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_4        = 148,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_5	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_5        = 149,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_6	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_6        = 150,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_7	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_7        = 151,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_8	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_8        = 152,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_9	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_9        = 153,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_0	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_0    = 96,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_1	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_1    = 97,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_2	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_2    = 98,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_3	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_3    = 99,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_4	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_4    = 100,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_5	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_5    = 101,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_6	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_6    = 102,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_7	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_7    = 103,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_8	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_8    = 104,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_LCK_9	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_LCK_9    = 105,$/;"	e	enum:__anon83
AKEYCODE_NUMPAD_SUB	android/native/jni/input_autodetect.h	/^   AKEYCODE_NUMPAD_SUB      = 109,$/;"	e	enum:__anon83
AKEYCODE_OTHR_108	android/native/jni/input_autodetect.h	/^   AKEYCODE_OTHR_108        = 108,$/;"	e	enum:__anon83
AKEYCODE_SCROLL_LOCK	android/native/jni/input_autodetect.h	/^   AKEYCODE_SCROLL_LOCK     = 116,$/;"	e	enum:__anon83
AKEYCODE_SYSRQ	android/native/jni/input_autodetect.h	/^   AKEYCODE_SYSRQ           = 120, AKEYCODE_BREAK           = 121,$/;"	e	enum:__anon83
AKEYCODE_WINDOW	android/native/jni/input_autodetect.h	/^   AKEYCODE_WINDOW          = 171,$/;"	e	enum:__anon83
AKEY_EVENT_NO_ACTION	android/native/jni/input_autodetect.h	23;"	d
ALIGN16	ps3/rgl/include/RGL/Types.h	45;"	d
ALLOC	deps/minizip/unzip.c	78;"	d	file:
ALSA_CFLAGS	config.mk	/^ALSA_CFLAGS = -I\/usr\/include\/alsa$/;"	m
ALSA_LIBS	config.mk	/^ALSA_LIBS = -lasound$/;"	m
ALSA_PCM_NEW_HW_PARAMS_API	blackberry-qnx/alsa_qsa.c	19;"	d	file:
ALSA_PCM_NEW_SW_PARAMS_API	blackberry-qnx/alsa_qsa.c	20;"	d	file:
ALTIVEC_MEM_H	ps3/altivec_mem.h	31;"	d
AL_CFLAGS	config.mk	/^AL_CFLAGS = $/;"	m
AL_LIBS	config.mk	/^AL_LIBS = $/;"	m
AMotionEvent_getAxisValue	android/native/jni/input_android.c	/^extern float AMotionEvent_getAxisValue(const AInputEvent* motion_event,$/;"	p	file:	signature:(const AInputEvent* motion_event, int32_t axis, size_t pointer_index)
AMotionEvent_getAxisValue	android/native/jni/input_android.c	92;"	d	file:
ANALOGSTICK_DEADZONE_HIGH	psp/psp_input.c	36;"	d	file:
ANALOGSTICK_DEADZONE_LOW	psp/psp_input.c	35;"	d	file:
ANALOG_DPAD_DUALANALOG	driver.h	/^   ANALOG_DPAD_DUALANALOG,$/;"	e	enum:analog_dpad_bind_enums
ANALOG_DPAD_LAST	driver.h	/^   ANALOG_DPAD_LAST$/;"	e	enum:analog_dpad_bind_enums
ANALOG_DPAD_LSTICK	driver.h	/^   ANALOG_DPAD_LSTICK,$/;"	e	enum:analog_dpad_bind_enums
ANALOG_DPAD_NONE	driver.h	/^   ANALOG_DPAD_NONE = 0,$/;"	e	enum:analog_dpad_bind_enums
ANALOG_DPAD_RSTICK	driver.h	/^   ANALOG_DPAD_RSTICK,$/;"	e	enum:analog_dpad_bind_enums
ANDROID_CPU_ARM_FEATURE_ARMv7	performance/performance_android.h	/^    ANDROID_CPU_ARM_FEATURE_ARMv7       = (1 << 0),$/;"	e	enum:__anon99
ANDROID_CPU_ARM_FEATURE_LDREX_STREX	performance/performance_android.h	/^    ANDROID_CPU_ARM_FEATURE_LDREX_STREX = (1 << 3),$/;"	e	enum:__anon99
ANDROID_CPU_ARM_FEATURE_NEON	performance/performance_android.h	/^    ANDROID_CPU_ARM_FEATURE_NEON        = (1 << 2),$/;"	e	enum:__anon99
ANDROID_CPU_ARM_FEATURE_VFPv3	performance/performance_android.h	/^    ANDROID_CPU_ARM_FEATURE_VFPv3       = (1 << 1),$/;"	e	enum:__anon99
ANDROID_CPU_FAMILY_ARM	performance/performance_android.h	/^    ANDROID_CPU_FAMILY_ARM,$/;"	e	enum:__anon98
ANDROID_CPU_FAMILY_MAX	performance/performance_android.h	/^    ANDROID_CPU_FAMILY_MAX  \/* do not remove *\/$/;"	e	enum:__anon98
ANDROID_CPU_FAMILY_MIPS	performance/performance_android.h	/^    ANDROID_CPU_FAMILY_MIPS,$/;"	e	enum:__anon98
ANDROID_CPU_FAMILY_UNKNOWN	performance/performance_android.h	/^    ANDROID_CPU_FAMILY_UNKNOWN = 0,$/;"	e	enum:__anon98
ANDROID_CPU_FAMILY_X86	performance/performance_android.h	/^    ANDROID_CPU_FAMILY_X86,$/;"	e	enum:__anon98
ANDROID_CPU_X86_FEATURE_MOVBE	performance/performance_android.h	/^    ANDROID_CPU_X86_FEATURE_MOVBE  = (1 << 2),$/;"	e	enum:__anon100
ANDROID_CPU_X86_FEATURE_POPCNT	performance/performance_android.h	/^    ANDROID_CPU_X86_FEATURE_POPCNT = (1 << 1),$/;"	e	enum:__anon100
ANDROID_CPU_X86_FEATURE_SSSE3	performance/performance_android.h	/^    ANDROID_CPU_X86_FEATURE_SSSE3  = (1 << 0),$/;"	e	enum:__anon100
ANSI_STRING	frontend/platform/platform_xdk.h	/^typedef STRING ANSI_STRING;$/;"	t
ANativeActivity_onCreate	frontend/platform/platform_android.c	/^void ANativeActivity_onCreate(ANativeActivity* activity,$/;"	f	signature:(ANativeActivity* activity, void* savedState, size_t savedStateSize)
APC_LEVEL	frontend/platform/platform_xdk.h	373;"	d
APIENTRY	gfx/glsym/glsym_es2.h	10;"	d
APIENTRY	gfx/glsym/glsym_gl.h	10;"	d
APIENTRY	msvc/msvc-2010/GL/glext.h	43;"	d
APIENTRY	ps3/rgl/include/export/GLES/gl.h	54;"	d
APIENTRYP	gfx/glsym/glsym_es2.h	13;"	d
APIENTRYP	gfx/glsym/glsym_gl.h	13;"	d
APIENTRYP	msvc/msvc-2010/GL/glext.h	46;"	d
APP_ABI	android/native/jni/Application.mk	/^APP_ABI := all$/;"	m
APP_ABI	android/phoenix/jni/Application.mk	/^APP_ABI := all$/;"	m
APP_ABI	libretro-test-gl/jni/Application.mk	/^APP_ABI := all$/;"	m
APP_ABI	libretro-test/jni/Application.mk	/^APP_ABI := all$/;"	m
APP_CMD_CONFIG_CHANGED	frontend/platform/platform_android.h	/^   APP_CMD_CONFIG_CHANGED,$/;"	e	enum:__anon11
APP_CMD_CONTENT_RECT_CHANGED	frontend/platform/platform_android.h	/^   APP_CMD_CONTENT_RECT_CHANGED,$/;"	e	enum:__anon11
APP_CMD_DEAD	frontend/platform/platform_android.h	/^   APP_CMD_DEAD,$/;"	e	enum:__anon11
APP_CMD_DESTROY	frontend/platform/platform_android.h	/^   APP_CMD_DESTROY,$/;"	e	enum:__anon11
APP_CMD_GAINED_FOCUS	frontend/platform/platform_android.h	/^   APP_CMD_GAINED_FOCUS,$/;"	e	enum:__anon11
APP_CMD_INIT_WINDOW	frontend/platform/platform_android.h	/^   APP_CMD_INIT_WINDOW,$/;"	e	enum:__anon11
APP_CMD_INPUT_CHANGED	frontend/platform/platform_android.h	/^   APP_CMD_INPUT_CHANGED,$/;"	e	enum:__anon11
APP_CMD_LOST_FOCUS	frontend/platform/platform_android.h	/^   APP_CMD_LOST_FOCUS,$/;"	e	enum:__anon11
APP_CMD_LOW_MEMORY	frontend/platform/platform_android.h	/^   APP_CMD_LOW_MEMORY,$/;"	e	enum:__anon11
APP_CMD_PAUSE	frontend/platform/platform_android.h	/^   APP_CMD_PAUSE,$/;"	e	enum:__anon11
APP_CMD_RESUME	frontend/platform/platform_android.h	/^   APP_CMD_RESUME,$/;"	e	enum:__anon11
APP_CMD_SAVE_STATE	frontend/platform/platform_android.h	/^   APP_CMD_SAVE_STATE,$/;"	e	enum:__anon11
APP_CMD_START	frontend/platform/platform_android.h	/^   APP_CMD_START,$/;"	e	enum:__anon11
APP_CMD_STOP	frontend/platform/platform_android.h	/^   APP_CMD_STOP,$/;"	e	enum:__anon11
APP_CMD_TERM_WINDOW	frontend/platform/platform_android.h	/^   APP_CMD_TERM_WINDOW,$/;"	e	enum:__anon11
APP_CMD_WINDOW_REDRAW_NEEDED	frontend/platform/platform_android.h	/^   APP_CMD_WINDOW_REDRAW_NEEDED,$/;"	e	enum:__anon11
APP_CMD_WINDOW_RESIZED	frontend/platform/platform_android.h	/^   APP_CMD_WINDOW_RESIZED,$/;"	e	enum:__anon11
APP_DIR	libretro-test/jni/Android.mk	/^APP_DIR := ..\/..\/src$/;"	m
APP_PLATFORM	android/native/jni/Application.mk	/^APP_PLATFORM := android-9$/;"	m
APP_PLATFORM	android/phoenix/jni/Application.mk	/^APP_PLATFORM := android-9$/;"	m
APP_PLATFORM	libretro-test-gl/jni/Application.mk	/^APP_PLATFORM := android-9$/;"	m
AR	libretro-test-gl/Makefile	/^   AR = qcc -Vgcc_ntoarmv7le$/;"	m
ARAMFetch	ngc/ssaram.c	/^void ARAMFetch(char *dst, char *src, int len)$/;"	f	signature:(char *dst, char *src, int len)
ARAMFetch	ngc/ssaram.h	/^void ARAMFetch(char *dst, char *src, int len);$/;"	p	signature:(char *dst, char *src, int len)
ARAMPut	ngc/ssaram.c	/^void ARAMPut(char *src, char *dst, int len)$/;"	f	signature:(char *src, char *dst, int len)
ARAMPut	ngc/ssaram.h	/^void ARAMPut(char *src, char *dst, int len);$/;"	p	signature:(char *src, char *dst, int len)
ARAMSTART	ngc/ssaram.c	15;"	d	file:
ARAM_READ	ngc/ssaram.c	16;"	d	file:
ARAM_WRITE	ngc/ssaram.c	17;"	d	file:
ARENA1_HI_LIMIT	wii/app_booter/dolloader.c	6;"	d	file:
ARGB	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	e	enum:RenderChain::PixelFormat
ARGS_ADDR	frontend/platform/platform_wii.c	14;"	d	file:
ARRAY_SIZE	gfx/rpng/rpng.c	42;"	d	file:
ARRAY_SIZE	libretro-test-gl/libretro-test.c	8;"	d	file:
ARRAY_SIZE	miscellaneous.h	57;"	d
ASFLAGS	config.mk	/^ASFLAGS = $/;"	m
ASM_BLITTER	gx/gx_video.c	494;"	d	file:
ASPECT_RATIO_16_10	gfx/gfx_common.h	/^   ASPECT_RATIO_16_10,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_16_15	gfx/gfx_common.h	/^   ASPECT_RATIO_16_15,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_16_9	gfx/gfx_common.h	/^   ASPECT_RATIO_16_9,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_19_12	gfx/gfx_common.h	/^   ASPECT_RATIO_19_12,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_19_14	gfx/gfx_common.h	/^   ASPECT_RATIO_19_14,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_1_1	gfx/gfx_common.h	/^   ASPECT_RATIO_1_1,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_2_1	gfx/gfx_common.h	/^   ASPECT_RATIO_2_1,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_30_17	gfx/gfx_common.h	/^   ASPECT_RATIO_30_17,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_32_9	gfx/gfx_common.h	/^   ASPECT_RATIO_32_9,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_3_2	gfx/gfx_common.h	/^   ASPECT_RATIO_3_2,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_3_4	gfx/gfx_common.h	/^   ASPECT_RATIO_3_4,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_4_1	gfx/gfx_common.h	/^   ASPECT_RATIO_4_1,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_4_3	gfx/gfx_common.h	/^   ASPECT_RATIO_4_3 = 0,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_4_4	gfx/gfx_common.h	/^   ASPECT_RATIO_4_4,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_5_4	gfx/gfx_common.h	/^   ASPECT_RATIO_5_4,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_6_5	gfx/gfx_common.h	/^   ASPECT_RATIO_6_5,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_7_9	gfx/gfx_common.h	/^   ASPECT_RATIO_7_9,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_8_3	gfx/gfx_common.h	/^   ASPECT_RATIO_8_3,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_8_7	gfx/gfx_common.h	/^   ASPECT_RATIO_8_7,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_CONFIG	gfx/gfx_common.h	/^   ASPECT_RATIO_CONFIG,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_CORE	gfx/gfx_common.h	/^   ASPECT_RATIO_CORE,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_CUSTOM	gfx/gfx_common.h	/^   ASPECT_RATIO_CUSTOM,$/;"	e	enum:aspect_ratio
ASPECT_RATIO_END	gfx/gfx_common.h	/^   ASPECT_RATIO_END$/;"	e	enum:aspect_ratio
ASPECT_RATIO_SQUARE	gfx/gfx_common.h	/^   ASPECT_RATIO_SQUARE,$/;"	e	enum:aspect_ratio
ATT_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	64;"	d
AUDIO_AL	config.def.h	/^   AUDIO_AL,$/;"	e	enum:__anon107
AUDIO_ALSA	config.def.h	/^   AUDIO_ALSA,$/;"	e	enum:__anon107
AUDIO_ALSATHREAD	config.def.h	/^   AUDIO_ALSATHREAD,$/;"	e	enum:__anon107
AUDIO_BLOCKS	ps3/ps3_audio.c	26;"	d	file:
AUDIO_BUFFER_FREE_SAMPLES_COUNT	general.h	476;"	d
AUDIO_CHANNELS	ps3/ps3_audio.c	27;"	d	file:
AUDIO_CHUNK_SIZE_BLOCKING	driver.h	41;"	d
AUDIO_CHUNK_SIZE_NONBLOCKING	driver.h	42;"	d
AUDIO_COREAUDIO	config.def.h	/^   AUDIO_COREAUDIO,$/;"	e	enum:__anon107
AUDIO_DEFAULT_DRIVER	config.def.h	129;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	131;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	133;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	135;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	137;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	139;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	141;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	143;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	145;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	147;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	149;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	151;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	153;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	155;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	157;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	159;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	161;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	163;"	d
AUDIO_DEFAULT_DRIVER	config.def.h	165;"	d
AUDIO_DSOUND	config.def.h	/^   AUDIO_DSOUND,$/;"	e	enum:__anon107
AUDIO_EXT	config.def.h	/^   AUDIO_EXT,$/;"	e	enum:__anon107
AUDIO_JACK	config.def.h	/^   AUDIO_JACK,$/;"	e	enum:__anon107
AUDIO_MAX_RATIO	driver.h	43;"	d
AUDIO_NULL	config.def.h	/^   AUDIO_NULL,$/;"	e	enum:__anon107
AUDIO_OSS	config.def.h	/^   AUDIO_OSS,$/;"	e	enum:__anon107
AUDIO_PS3	config.def.h	/^   AUDIO_PS3,$/;"	e	enum:__anon107
AUDIO_PULSE	config.def.h	/^   AUDIO_PULSE,$/;"	e	enum:__anon107
AUDIO_ROAR	config.def.h	/^   AUDIO_ROAR,$/;"	e	enum:__anon107
AUDIO_RSOUND	config.def.h	/^   AUDIO_RSOUND,$/;"	e	enum:__anon107
AUDIO_RWEBAUDIO	config.def.h	/^   AUDIO_RWEBAUDIO,$/;"	e	enum:__anon107
AUDIO_SDL	config.def.h	/^   AUDIO_SDL,$/;"	e	enum:__anon107
AUDIO_SL	config.def.h	/^   AUDIO_SL,$/;"	e	enum:__anon107
AUDIO_UTILS_H	audio/utils.h	17;"	d
AUDIO_WII	config.def.h	/^   AUDIO_WII,$/;"	e	enum:__anon107
AUDIO_XAUDIO	config.def.h	/^   AUDIO_XAUDIO,$/;"	e	enum:__anon107
AUDIO_XENON360	config.def.h	/^   AUDIO_XENON360,$/;"	e	enum:__anon107
AUTOCONF_BUILTIN_H__	input/autoconf/builtin.h	17;"	d
AVCODEC_CFLAGS	config.mk	/^AVCODEC_CFLAGS = $/;"	m
AVCODEC_LIBS	config.mk	/^AVCODEC_LIBS = $/;"	m
AVFORMAT_CFLAGS	config.mk	/^AVFORMAT_CFLAGS = $/;"	m
AVFORMAT_LIBS	config.mk	/^AVFORMAT_LIBS = $/;"	m
AVI_PR	gfx/context/sunxi_disp_ioctl.h	/^	__s32 AVI_PR;$/;"	m	struct:__disp_video_timing	access:public
AVUTIL_CFLAGS	config.mk	/^AVUTIL_CFLAGS = $/;"	m
AVUTIL_LIBS	config.mk	/^AVUTIL_LIBS = $/;"	m
AXIS_BRAKE	android/native/jni/input_android.c	/^   AXIS_BRAKE = 23,$/;"	e	enum:__anon81	file:
AXIS_DIR_NONE	driver.h	185;"	d
AXIS_GAS	android/native/jni/input_android.c	/^   AXIS_GAS = 22,$/;"	e	enum:__anon81	file:
AXIS_HAT_X	android/native/jni/input_android.c	/^   AXIS_HAT_X = 15,$/;"	e	enum:__anon81	file:
AXIS_HAT_Y	android/native/jni/input_android.c	/^   AXIS_HAT_Y = 16,$/;"	e	enum:__anon81	file:
AXIS_LTRIGGER	android/native/jni/input_android.c	/^   AXIS_LTRIGGER = 17,$/;"	e	enum:__anon81	file:
AXIS_NEG	driver.h	182;"	d
AXIS_NEG_GET	driver.h	187;"	d
AXIS_NONE	driver.h	184;"	d
AXIS_POS	driver.h	183;"	d
AXIS_POS_GET	driver.h	188;"	d
AXIS_RTRIGGER	android/native/jni/input_android.c	/^   AXIS_RTRIGGER = 18,$/;"	e	enum:__anon81	file:
AXIS_RZ	android/native/jni/input_android.c	/^   AXIS_RZ = 14,$/;"	e	enum:__anon81	file:
AXIS_X	android/native/jni/input_android.c	/^   AXIS_X = 0,$/;"	e	enum:__anon81	file:
AXIS_Y	android/native/jni/input_android.c	/^   AXIS_Y = 1,$/;"	e	enum:__anon81	file:
AXIS_Z	android/native/jni/input_android.c	/^   AXIS_Z = 11,$/;"	e	enum:__anon81	file:
Absolute	frontend/platform/platform_xdk.h	/^    UCHAR Absolute;$/;"	m	struct:_DISPATCHER_HEADER	access:public
AccumulateSizeForParamArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^void AccumulateSizeForParamArray( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, unsigned int prefixLength, int elementResourceIndex, size_t* nvParamSize, size_t* nvParamStringsSize, size_t* nvParamOffsetsSize, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, size_t* nvParamDefaultsSize, ELF_section_t* consttab )
AccumulateSizeForParamResource	ps3/rgl/src/rgl_ps3_cg.cpp	/^void AccumulateSizeForParamResource( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, unsigned int prefixLength, int elementResourceIndex, size_t* nvParamSize, size_t* nvParamStringsSize, size_t* nvParamOffsetsSize, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, size_t* nvParamDefaultsSize, ELF_section_t* consttab )
AccumulateSizeForParamStruct	ps3/rgl/src/rgl_ps3_cg.cpp	/^void AccumulateSizeForParamStruct( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, unsigned int prefixLength, int elementResourceIndex, size_t* nvParamSize, size_t* nvParamStringsSize, size_t* nvParamOffsetsSize, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, size_t* nvParamDefaultsSize, ELF_section_t* consttab )
AccumulateSizeForParams	ps3/rgl/src/rgl_ps3_cg.cpp	/^void AccumulateSizeForParams( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, unsigned int prefixLength, int elementResourceIndex, size_t* nvParamSize, size_t* nvParamStringsSize, size_t* nvParamOffsetsSize, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, size_t* nvParamDefaultsSize, ELF_section_t* consttab )
AccumulateSizeForParams	ps3/rgl/src/rgl_ps3_cg.cpp	/^void AccumulateSizeForParams( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	p	file:	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, unsigned int prefixLength, int elementResourceIndex, size_t* nvParamSize, size_t* nvParamStringsSize, size_t* nvParamOffsetsSize, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, size_t* nvParamDefaultsSize, ELF_section_t* consttab )
ActiveTexture	ps3/rgl/include/RGL/Types.h	/^      GLuint			ActiveTexture;$/;"	m	struct:RGLcontext	access:public
AllocateContiguousMemory	xdk/xdk_resources.cpp	/^static inline void* AllocateContiguousMemory( DWORD Size, DWORD Alignment)$/;"	f	file:	signature:( DWORD Size, DWORD Alignment)
AllocationFunction	frontend/platform/platform_xdk.h	/^	(NTAPI *AllocationFunction)($/;"	m	struct:_OBJECT_TYPE	access:public
AlternateSignatureKeys	frontend/platform/platform_xdk.h	/^	UCHAR AlternateSignatureKeys[16][16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
AlternateTitleIds	frontend/platform/platform_xdk.h	/^	ULONG AlternateTitleIds[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
AndroidCpuFamily	performance/performance_android.h	/^} AndroidCpuFamily;$/;"	t	typeref:enum:__anon98
AppInfo	ps3/ps3py/pkg.py	/^class AppInfo(Struct):$/;"	c	inherits:Struct
ArrayBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	ArrayBuffer;$/;"	m	struct:RGLcontext	access:public
Attributes	frontend/platform/platform_xdk.h	/^    ULONG Attributes;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
AudioBytes	audio/xaudio-c/xaudio.h	/^   UINT32 AudioBytes;$/;"	m	struct:XAUDIO2_BUFFER	access:public
AudioPreferenceFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/AudioPreferenceFragment.java	/^public final class AudioPreferenceFragment extends PreferenceListFragment$/;"	c	inherits:PreferenceListFragment
AudioPreferenceFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/AudioPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:AudioPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
AvailableAllocationUnits	frontend/platform/platform_xdk.h	/^	LARGE_INTEGER AvailableAllocationUnits;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
B	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
BACK_BUTTON_GUI_TOGGLE	input/input_common.h	/^   BACK_BUTTON_GUI_TOGGLE,$/;"	e	enum:back_button_enums
BACK_BUTTON_MENU_TOGGLE	input/input_common.h	/^   BACK_BUTTON_MENU_TOGGLE,$/;"	e	enum:back_button_enums
BACK_BUTTON_QUIT	input/input_common.h	/^   BACK_BUTTON_QUIT = 0,$/;"	e	enum:back_button_enums
BASE_HEIGHT	libretro-test-gl/libretro-test.c	14;"	d	file:
BASE_WIDTH	libretro-test-gl/libretro-test.c	13;"	d	file:
BD_ADDR_CMP	apple/iOS/bluetooth/btstack/utils.h	121;"	d
BD_ADDR_COPY	apple/iOS/bluetooth/btstack/utils.h	122;"	d
BD_ADDR_LEN	apple/iOS/bluetooth/btstack/utils.h	57;"	d
BE	ps3/ps3py/pkg.py	/^	BE = '>'$/;"	v	class:Struct
BG_COL	frontend/frontend_xenon.c	49;"	d	file:
BIG_ENDIAN_LONG	apple/common/hidpad/wiimote.h	54;"	d
BIG_ENDIAN_SHORT	apple/common/hidpad/wiimote.h	55;"	d
BINDFOR	apple/common/setting_data.h	81;"	d
BINDLOCATION	ps3/rgl/src/rgl_ps3_cg.cpp	/^} BINDLOCATION;$/;"	t	typeref:struct:__anon47	file:
BIN_TARGET	wii/app_booter/Makefile	/^BIN_TARGET := app_booter.bin$/;"	m
BIT_CLEAR	miscellaneous.h	155;"	d
BIT_CLEAR_ALL	miscellaneous.h	157;"	d
BIT_GET	miscellaneous.h	156;"	d
BIT_SET	miscellaneous.h	154;"	d
BLIT_LINE_16	gx/gx_video.c	568;"	d	file:
BLIT_LINE_16_CONV	gx/gx_video.c	669;"	d	file:
BLIT_LINE_16_CONV	gx/gx_video.c	674;"	d	file:
BLIT_LINE_32	gx/gx_video.c	586;"	d	file:
BLOCKS	gx/gx_audio.c	28;"	d	file:
BLOCKSIZE_MAX_DIMENSIONS	ps3/rgl/src/include/rgl-inline.h	758;"	d
BLUE	gfx/gfx_common.h	109;"	d
BOOTER_ADDR	frontend/platform/platform_wii.c	13;"	d	file:
BORDER_FUNC	gfx/shader_glsl.c	62;"	d	file:
BORDER_FUNC	gfx/shader_glsl.c	64;"	d	file:
BOXFLOAT	apple/common/RetroArch_Apple.h	79;"	d
BOXINT	apple/common/RetroArch_Apple.h	77;"	d
BOXSTRING	apple/common/RetroArch_Apple.h	76;"	d
BOXUINT	apple/common/RetroArch_Apple.h	78;"	d
BSD_LOCAL_INC	Makefile	/^   BSD_LOCAL_INC = -I\/usr\/local\/include$/;"	m
BSV_MAGIC	movie.h	23;"	d
BSV_MOVIE_ARG	retroarch.c	880;"	d	file:
BTDIMPORT	apple/iOS/bluetooth/btdynamic.h	28;"	d
BTDIMPORT	apple/iOS/bluetooth/btdynamic.h	30;"	d
BTPAD_CONNECTED	apple/iOS/bluetooth/btpad.c	/^enum btpad_state { BTPAD_EMPTY, BTPAD_CONNECTING, BTPAD_CONNECTED };$/;"	e	enum:btpad_state	file:
BTPAD_CONNECTING	apple/iOS/bluetooth/btpad.c	/^enum btpad_state { BTPAD_EMPTY, BTPAD_CONNECTING, BTPAD_CONNECTED };$/;"	e	enum:btpad_state	file:
BTPAD_EMPTY	apple/iOS/bluetooth/btpad.c	/^enum btpad_state { BTPAD_EMPTY, BTPAD_CONNECTING, BTPAD_CONNECTED };$/;"	e	enum:btpad_state	file:
BTSTACK_ACL_BUFFERS_FULL	apple/iOS/bluetooth/btstack/hci_cmds.h	204;"	d
BTSTACK_ACTIVATION_FAILED_SYSTEM_BLUETOOTH	apple/iOS/bluetooth/btstack/hci_cmds.h	198;"	d
BTSTACK_ACTIVATION_FAILED_UNKNOWN	apple/iOS/bluetooth/btstack/hci_cmds.h	200;"	d
BTSTACK_ACTIVATION_POWERON_FAILED	apple/iOS/bluetooth/btstack/hci_cmds.h	199;"	d
BTSTACK_BUSY	apple/iOS/bluetooth/btstack/hci_cmds.h	202;"	d
BTSTACK_CONNECTION_TO_BTDAEMON_FAILED	apple/iOS/bluetooth/btstack/hci_cmds.h	197;"	d
BTSTACK_EVENT_DISCOVERABLE_ENABLED	apple/iOS/bluetooth/btstack/hci_cmds.h	144;"	d
BTSTACK_EVENT_NR_CONNECTIONS_CHANGED	apple/iOS/bluetooth/btstack/hci_cmds.h	129;"	d
BTSTACK_EVENT_POWERON_FAILED	apple/iOS/bluetooth/btstack/hci_cmds.h	132;"	d
BTSTACK_EVENT_REMOTE_NAME_CACHED	apple/iOS/bluetooth/btstack/hci_cmds.h	141;"	d
BTSTACK_EVENT_STATE	apple/iOS/bluetooth/btstack/hci_cmds.h	126;"	d
BTSTACK_EVENT_SYSTEM_BLUETOOTH_ENABLED	apple/iOS/bluetooth/btstack/hci_cmds.h	138;"	d
BTSTACK_EVENT_VERSION	apple/iOS/bluetooth/btstack/hci_cmds.h	135;"	d
BTSTACK_MEMORY_ALLOC_FAILED	apple/iOS/bluetooth/btstack/hci_cmds.h	203;"	d
BTSTACK_NOT_ACTIVATED	apple/iOS/bluetooth/btstack/hci_cmds.h	201;"	d
BTSTACK_PORT	apple/iOS/bluetooth/btstack/btstack.h	54;"	d
BTSTACK_UNIX	apple/iOS/bluetooth/btstack/btstack.h	57;"	d
BUFFER_HSYNC_NEGATIVE	ps3/rgl/src/include/rgl-constants.h	313;"	d
BUFFER_HSYNC_POSITIVE	ps3/rgl/src/include/rgl-constants.h	314;"	d
BUFFER_VSYNC_NEGATIVE	ps3/rgl/src/include/rgl-constants.h	315;"	d
BUFFER_VSYNC_POSITIVE	ps3/rgl/src/include/rgl-constants.h	316;"	d
BUFREADCOMMENT	deps/minizip/unzip.c	377;"	d	file:
BUFSIZE	audio/openal.c	34;"	d	file:
BUFSIZE	console/logger/logger.h	20;"	d
BUILDING_BTDYNAMIC	apple/iOS/bluetooth/btdynamic.c	22;"	d	file:
BYESTRING	console/logger/psl1ght_logger.c	44;"	d	file:
BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		private BackStackItem(Parcel in)$/;"	m	class:DirectoryFragment.BackStackItem	file:	access:private	signature:(Parcel in)
BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public BackStackItem(String path, boolean parentIsBack)$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:(String path, boolean parentIsBack)
BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public static final class BackStackItem implements Parcelable$/;"	c	class:DirectoryFragment	inherits:Parcelable	access:public
BandPassFilter	audio/xaudio-c/xaudio.h	/^   BandPassFilter,$/;"	e	enum:XAUDIO2_FILTER_TYPE
BaseAddress	frontend/platform/platform_xdk.h	/^	PVOID BaseAddress;$/;"	m	struct:_XBE_HEADER	access:public
BlendColor	ps3/rgl/include/RGL/Types.h	/^      rglColorRGBAf	BlendColor;$/;"	m	struct:RGLcontext	access:public
BlendEquationAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendEquationAlpha;$/;"	m	struct:RGLcontext	access:public
BlendEquationRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendEquationRGB;$/;"	m	struct:RGLcontext	access:public
BlendFactorDestAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorDestAlpha;$/;"	m	struct:RGLcontext	access:public
BlendFactorDestRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorDestRGB;$/;"	m	struct:RGLcontext	access:public
BlendFactorSrcAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorSrcAlpha;$/;"	m	struct:RGLcontext	access:public
BlendFactorSrcRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorSrcRGB;$/;"	m	struct:RGLcontext	access:public
Blending	ps3/rgl/include/RGL/Types.h	/^      GLboolean		Blending;       \/\/ enable for mrt color target 0$/;"	m	struct:RGLcontext	access:public
BlockListCount	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    BlockListCount[2];$/;"	m	struct:GmmFixedAllocData	access:public
BoundFragmentProgram	ps3/rgl/include/RGL/Types.h	/^      struct _CGprogram*	BoundFragmentProgram;$/;"	m	struct:RGLcontext	typeref:struct:RGLcontext::_CGprogram	access:public
BoundVertexProgram	ps3/rgl/include/RGL/Types.h	/^      struct _CGprogram*	BoundVertexProgram;$/;"	m	struct:RGLcontext	typeref:struct:RGLcontext::_CGprogram	access:public
Buffer	frontend/platform/platform_xdk.h	/^    PCHAR Buffer;$/;"	m	struct:_STRING	access:public
ButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^ButtonMap::ButtonMap(screen_context_t screen_ctx, QString groupId, int coid)$/;"	f	class:ButtonMap	signature:(screen_context_t screen_ctx, QString groupId, int coid)
ButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^    ButtonMap(screen_context_t screen_cxt, QString groupId, int coid);$/;"	p	class:ButtonMap	access:public	signature:(screen_context_t screen_cxt, QString groupId, int coid)
ButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^class ButtonMap: public QObject$/;"	c	inherits:QObject
ButtonMap::ButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^ButtonMap::ButtonMap(screen_context_t screen_ctx, QString groupId, int coid)$/;"	f	class:ButtonMap	signature:(screen_context_t screen_ctx, QString groupId, int coid)
ButtonMap::ButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^    ButtonMap(screen_context_t screen_cxt, QString groupId, int coid);$/;"	p	class:ButtonMap	access:public	signature:(screen_context_t screen_cxt, QString groupId, int coid)
ButtonMap::button	blackberry-qnx/bb10/src/ButtonMap.h	/^    int button;$/;"	m	class:ButtonMap	access:private
ButtonMap::buttonDataModel	blackberry-qnx/bb10/src/ButtonMap.h	/^    ArrayDataModel *buttonDataModel;$/;"	m	class:ButtonMap	access:public
ButtonMap::buttonToString	blackberry-qnx/bb10/src/ButtonMap.cpp	/^QString ButtonMap::buttonToString(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
ButtonMap::buttonToString	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE QString buttonToString(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
ButtonMap::coid	blackberry-qnx/bb10/src/ButtonMap.h	/^    int coid;$/;"	m	class:ButtonMap	access:private
ButtonMap::device	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_device_t device;$/;"	m	class:ButtonMap	access:private
ButtonMap::deviceSelection	blackberry-qnx/bb10/src/ButtonMap.h	/^    DropDown *deviceSelection;$/;"	m	class:ButtonMap	access:public
ButtonMap::getButtonMapping	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::getButtonMapping(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
ButtonMap::getButtonMapping	blackberry-qnx/bb10/src/ButtonMap.h	/^    int getButtonMapping(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
ButtonMap::getLabel	blackberry-qnx/bb10/src/ButtonMap.cpp	/^QString ButtonMap::getLabel(int button)$/;"	f	class:ButtonMap	signature:(int button)
ButtonMap::getLabel	blackberry-qnx/bb10/src/ButtonMap.h	/^    QString getLabel(int button);$/;"	p	class:ButtonMap	access:public	signature:(int button)
ButtonMap::groupId	blackberry-qnx/bb10/src/ButtonMap.h	/^    QString groupId;$/;"	m	class:ButtonMap	access:private
ButtonMap::mapButton	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::mapButton(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
ButtonMap::mapButton	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE int mapButton(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
ButtonMap::mapDevice	blackberry-qnx/bb10/src/ButtonMap.cpp	/^void ButtonMap::mapDevice(int index, int player)$/;"	f	class:ButtonMap	signature:(int index, int player)
ButtonMap::mapDevice	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE void mapDevice(int index, int player);$/;"	p	class:ButtonMap	access:public	signature:(int index, int player)
ButtonMap::mapNextButtonPressed	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::mapNextButtonPressed()$/;"	f	class:ButtonMap	signature:()
ButtonMap::mapNextButtonPressed	blackberry-qnx/bb10/src/ButtonMap.h	/^    int mapNextButtonPressed();$/;"	p	class:ButtonMap	access:public	signature:()
ButtonMap::player	blackberry-qnx/bb10/src/ButtonMap.h	/^    int player;$/;"	m	class:ButtonMap	access:private
ButtonMap::refreshButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^void ButtonMap::refreshButtonMap(int player)$/;"	f	class:ButtonMap	signature:(int player)
ButtonMap::refreshButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE void refreshButtonMap(int player);$/;"	p	class:ButtonMap	access:public	signature:(int player)
ButtonMap::requestButtonMapping	blackberry-qnx/bb10/src/ButtonMap.h	/^    int requestButtonMapping(screen_device_t device, int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(screen_device_t device, int player, int button)
ButtonMap::screen_buf	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_buffer_t screen_buf;$/;"	m	class:ButtonMap	access:private
ButtonMap::screen_cxt	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_context_t screen_cxt;$/;"	m	class:ButtonMap	access:private
ButtonMap::screen_resolution	blackberry-qnx/bb10/src/ButtonMap.h	/^    int screen_resolution[2];$/;"	m	class:ButtonMap	access:private
ButtonMap::screen_win	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_window_t screen_win;$/;"	m	class:ButtonMap	access:private
ButtonMap::~ButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^ButtonMap::~ButtonMap()$/;"	f	class:ButtonMap	signature:()
ButtonMap::~ButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^    ~ ButtonMap();$/;"	p	class:ButtonMap	access:public	signature:()
Byte	deps/miniz/zlib.h	/^  typedef unsigned char Byte;$/;"	t
Bytef	deps/miniz/zlib.h	/^  typedef Byte Bytef;$/;"	t
BytesPerSector	frontend/platform/platform_xdk.h	/^	ULONG BytesPerSector;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
CALCFONTFILEHEADERSIZE	gfx/fonts/xdk360_fonts.cpp	51;"	d	file:
CALL_BOOLEAN_METHOD	android/native/jni/jni_macros.h	73;"	d
CALL_DOUBLE_METHOD	android/native/jni/jni_macros.h	77;"	d
CALL_OBJ_METHOD	android/native/jni/jni_macros.h	49;"	d
CALL_OBJ_METHOD_PARAM	android/native/jni/jni_macros.h	61;"	d
CALL_OBJ_STATIC_METHOD	android/native/jni/jni_macros.h	53;"	d
CALL_OBJ_STATIC_METHOD_PARAM	android/native/jni/jni_macros.h	57;"	d
CALL_VOID_METHOD	android/native/jni/jni_macros.h	65;"	d
CALL_VOID_METHOD_PARAM	android/native/jni/jni_macros.h	69;"	d
CAMERA_ANDROID	config.def.h	/^   CAMERA_ANDROID,$/;"	e	enum:__anon107
CAMERA_DEFAULT_DRIVER	config.def.h	201;"	d
CAMERA_DEFAULT_DRIVER	config.def.h	203;"	d
CAMERA_DEFAULT_DRIVER	config.def.h	205;"	d
CAMERA_DEFAULT_DRIVER	config.def.h	207;"	d
CAMERA_DEFAULT_DRIVER	config.def.h	209;"	d
CAMERA_IOS	config.def.h	/^   CAMERA_IOS,$/;"	e	enum:__anon107
CAMERA_NULL	config.def.h	/^   CAMERA_NULL,$/;"	e	enum:__anon107
CAMERA_RWEBCAM	config.def.h	/^   CAMERA_RWEBCAM,$/;"	e	enum:__anon107
CAMERA_V4L2	config.def.h	/^   CAMERA_V4L2,$/;"	e	enum:__anon107
CAPACITY_INCREMENT	ps3/rgl/src/rgl_ps3.cpp	53;"	d	file:
CASESENSITIVITYDEFAULTVALUE	deps/minizip/unzip.c	347;"	d	file:
CASESENSITIVITYDEFAULTVALUE	deps/minizip/unzip.c	349;"	d	file:
CASESENSITIVITYDEFAULT_NO	deps/minizip/unzip.c	64;"	d	file:
CC	config.mk	/^CC = \/usr\/bin\/gcc$/;"	m
CC	libretro-test-gl/Makefile	/^   CC = clang -arch armv7 -isysroot $(IOSSDK)$/;"	m
CC	libretro-test-gl/Makefile	/^   CC = gcc$/;"	m
CC	libretro-test-gl/Makefile	/^   CC = qcc -Vgcc_ntoarmv7le$/;"	m
CC	libretro-test/Makefile	/^	CC = clang -arch armv7 -isysroot $(IOSSDK)$/;"	m
CC	libretro-test/Makefile	/^   CC = gcc$/;"	m
CC	wii/app_booter/Makefile	/^CC = $(DEVKITPPC)\/bin\/powerpc-eabi-gcc$(EXE_EXT)$/;"	m
CELL_AUDIO_BLOCK_SAMPLES	ps3/sdk_defines.h	68;"	d
CELL_GAME_ATTRIBUTE_APP_HOME	ps3/sdk_defines.h	614;"	d
CELL_GAME_DIRNAME_SIZE	ps3/sdk_defines.h	615;"	d
CELL_GAME_GAMETYPE_DISC	ps3/sdk_defines.h	618;"	d
CELL_GAME_GAMETYPE_GAMEDATA	ps3/sdk_defines.h	620;"	d
CELL_GAME_GAMETYPE_HDD	ps3/sdk_defines.h	619;"	d
CELL_GAME_GAMETYPE_HOME	ps3/sdk_defines.h	621;"	d
CELL_GAME_GAMETYPE_SYS	ps3/sdk_defines.h	617;"	d
CELL_GCM_ALWAYS	ps3/sdk_defines.h	360;"	d
CELL_GCM_CLEAR_A	ps3/sdk_defines.h	390;"	d
CELL_GCM_CLEAR_B	ps3/sdk_defines.h	389;"	d
CELL_GCM_CLEAR_G	ps3/sdk_defines.h	388;"	d
CELL_GCM_CLEAR_R	ps3/sdk_defines.h	387;"	d
CELL_GCM_COMPMODE_DISABLED	ps3/sdk_defines.h	397;"	d
CELL_GCM_DEBUG_LEVEL2	ps3/sdk_defines.h	395;"	d
CELL_GCM_DISPLAY_HSYNC	ps3/sdk_defines.h	384;"	d
CELL_GCM_DISPLAY_VSYNC	ps3/sdk_defines.h	385;"	d
CELL_GCM_FALSE	ps3/sdk_defines.h	355;"	d
CELL_GCM_FUNC_ADD	ps3/sdk_defines.h	392;"	d
CELL_GCM_LOCATION_LOCAL	ps3/sdk_defines.h	362;"	d
CELL_GCM_LOCATION_MAIN	ps3/sdk_defines.h	363;"	d
CELL_GCM_MAX_RT_DIMENSION	ps3/sdk_defines.h	365;"	d
CELL_GCM_MAX_TEXIMAGE_COUNT	ps3/sdk_defines.h	415;"	d
CELL_GCM_METHOD_DATA_TEXTURE_ADDRESS	ps3/sdk_defines.h	562;"	d
CELL_GCM_METHOD_DATA_TEXTURE_CONTROL0	ps3/sdk_defines.h	561;"	d
CELL_GCM_METHOD_DATA_TEXTURE_CONTROL3	ps3/sdk_defines.h	558;"	d
CELL_GCM_METHOD_DATA_TEXTURE_FILTER	ps3/sdk_defines.h	560;"	d
CELL_GCM_METHOD_DATA_TEXTURE_IMAGE_RECT	ps3/sdk_defines.h	559;"	d
CELL_GCM_METHOD_DATA_TEXTURE_OFFSET	ps3/sdk_defines.h	557;"	d
CELL_GCM_METHOD_HEADER_TEXTURE_OFFSET	ps3/sdk_defines.h	556;"	d
CELL_GCM_ONE	ps3/sdk_defines.h	358;"	d
CELL_GCM_REMAP_MODE	ps3/sdk_defines.h	565;"	d
CELL_GCM_SMOOTH	ps3/sdk_defines.h	394;"	d
CELL_GCM_TEXTURE_A1R5G5B5	ps3/sdk_defines.h	376;"	d
CELL_GCM_TEXTURE_A8R8G8B8	ps3/sdk_defines.h	374;"	d
CELL_GCM_TEXTURE_B8	ps3/sdk_defines.h	422;"	d
CELL_GCM_TEXTURE_CLAMP_TO_EDGE	ps3/sdk_defines.h	378;"	d
CELL_GCM_TEXTURE_CONVOLUTION_QUINCUNX	ps3/sdk_defines.h	381;"	d
CELL_GCM_TEXTURE_LINEAR	ps3/sdk_defines.h	372;"	d
CELL_GCM_TEXTURE_LINEAR_LINEAR	ps3/sdk_defines.h	368;"	d
CELL_GCM_TEXTURE_LINEAR_NEAREST	ps3/sdk_defines.h	367;"	d
CELL_GCM_TEXTURE_LN	ps3/sdk_defines.h	420;"	d
CELL_GCM_TEXTURE_MAX_ANISO_1	ps3/sdk_defines.h	380;"	d
CELL_GCM_TEXTURE_NEAREST	ps3/sdk_defines.h	371;"	d
CELL_GCM_TEXTURE_NEAREST_LINEAR	ps3/sdk_defines.h	369;"	d
CELL_GCM_TEXTURE_NEAREST_NEAREST	ps3/sdk_defines.h	370;"	d
CELL_GCM_TEXTURE_NR	ps3/sdk_defines.h	419;"	d
CELL_GCM_TEXTURE_R5G6B5	ps3/sdk_defines.h	375;"	d
CELL_GCM_TEXTURE_REMAP_FROM_A	ps3/sdk_defines.h	406;"	d
CELL_GCM_TEXTURE_REMAP_FROM_B	ps3/sdk_defines.h	409;"	d
CELL_GCM_TEXTURE_REMAP_FROM_G	ps3/sdk_defines.h	408;"	d
CELL_GCM_TEXTURE_REMAP_FROM_R	ps3/sdk_defines.h	407;"	d
CELL_GCM_TEXTURE_REMAP_ONE	ps3/sdk_defines.h	412;"	d
CELL_GCM_TEXTURE_REMAP_ORDER_XXXY	ps3/sdk_defines.h	402;"	d
CELL_GCM_TEXTURE_REMAP_ORDER_XYXY	ps3/sdk_defines.h	401;"	d
CELL_GCM_TEXTURE_REMAP_REMAP	ps3/sdk_defines.h	413;"	d
CELL_GCM_TEXTURE_REMAP_ZERO	ps3/sdk_defines.h	411;"	d
CELL_GCM_TEXTURE_UNSIGNED_REMAP_NORMAL	ps3/sdk_defines.h	404;"	d
CELL_GCM_TEXTURE_WRAP	ps3/sdk_defines.h	417;"	d
CELL_GCM_TEXTURE_ZFUNC_NEVER	ps3/sdk_defines.h	382;"	d
CELL_GCM_TRANSFER_LOCAL_TO_LOCAL	ps3/sdk_defines.h	399;"	d
CELL_GCM_TRUE	ps3/sdk_defines.h	356;"	d
CELL_GCM_ZERO	ps3/sdk_defines.h	359;"	d
CELL_JPGDEC_DEC_STATUS_FINISH	ps3/sdk_defines.h	280;"	d
CELL_JPGDEC_FAST	ps3/sdk_defines.h	275;"	d
CELL_JPGDEC_FILE	ps3/sdk_defines.h	272;"	d
CELL_JPGDEC_SPU_THREAD_ENABLE	ps3/sdk_defines.h	271;"	d
CELL_JPGDEC_SPU_THREAD_ENABLE	ps3/sdk_defines.h	274;"	d
CELL_JPGDEC_TOP_TO_BOTTOM	ps3/sdk_defines.h	276;"	d
CELL_JPG_ARGB	ps3/sdk_defines.h	278;"	d
CELL_MOUSE_BUTTON_1	ps3/sdk_defines.h	127;"	d
CELL_MOUSE_BUTTON_2	ps3/sdk_defines.h	128;"	d
CELL_MOUSE_BUTTON_3	ps3/sdk_defines.h	129;"	d
CELL_MOUSE_BUTTON_4	ps3/sdk_defines.h	130;"	d
CELL_MOUSE_BUTTON_5	ps3/sdk_defines.h	131;"	d
CELL_MOUSE_BUTTON_6	ps3/sdk_defines.h	132;"	d
CELL_MOUSE_BUTTON_7	ps3/sdk_defines.h	133;"	d
CELL_MOUSE_BUTTON_8	ps3/sdk_defines.h	134;"	d
CELL_NET_CTL_STATE_IPObtained	ps3/sdk_defines.h	582;"	d
CELL_OK	ps3/sdk_defines.h	284;"	d
CELL_OSKDIALOG_10KEY_PANEL	ps3/sdk_defines.h	177;"	d
CELL_OSKDIALOG_FULLKEY_PANEL	ps3/sdk_defines.h	178;"	d
CELL_OSKDIALOG_INPUT_FIELD_RESULT_ABORT	ps3/sdk_defines.h	187;"	d
CELL_OSKDIALOG_INPUT_FIELD_RESULT_CANCELED	ps3/sdk_defines.h	186;"	d
CELL_OSKDIALOG_INPUT_FIELD_RESULT_NO_INPUT_TEXT	ps3/sdk_defines.h	188;"	d
CELL_OSKDIALOG_INPUT_FIELD_RESULT_OK	ps3/sdk_defines.h	185;"	d
CELL_OSKDIALOG_LAYOUTMODE_X_ALIGN_CENTER	ps3/sdk_defines.h	179;"	d
CELL_OSKDIALOG_LAYOUTMODE_Y_ALIGN_TOP	ps3/sdk_defines.h	180;"	d
CELL_OSKDIALOG_PANELMODE_ALPHABET	ps3/sdk_defines.h	183;"	d
CELL_OSKDIALOG_PANELMODE_ENGLISH	ps3/sdk_defines.h	184;"	d
CELL_OSKDIALOG_PANELMODE_NUMERAL	ps3/sdk_defines.h	181;"	d
CELL_OSKDIALOG_PANELMODE_NUMERAL_FULL_WIDTH	ps3/sdk_defines.h	182;"	d
CELL_OSKDIALOG_STRING_SIZE	ps3/sdk_defines.h	189;"	d
CELL_PNGDEC_1BYTE_PER_1PIXEL	ps3/sdk_defines.h	282;"	d
CELL_PNGDEC_ARGB	ps3/sdk_defines.h	279;"	d
CELL_PNGDEC_DEC_STATUS_FINISH	ps3/sdk_defines.h	281;"	d
CELL_PNGDEC_FILE	ps3/sdk_defines.h	273;"	d
CELL_PNGDEC_SPU_THREAD_ENABLE	ps3/sdk_defines.h	270;"	d
CELL_PNGDEC_STREAM_ALPHA	ps3/sdk_defines.h	283;"	d
CELL_PNGDEC_TOP_TO_BOTTOM	ps3/sdk_defines.h	277;"	d
CELL_RESC_1280x720	ps3/sdk_defines.h	426;"	d
CELL_RESC_1920x1080	ps3/sdk_defines.h	427;"	d
CELL_RESC_720x480	ps3/sdk_defines.h	424;"	d
CELL_RESC_720x576	ps3/sdk_defines.h	425;"	d
CELL_RESC_CONSTANT_VRAM	ps3/sdk_defines.h	432;"	d
CELL_RESC_ELEMENT_HALF	ps3/sdk_defines.h	444;"	d
CELL_RESC_FULLSCREEN	ps3/sdk_defines.h	429;"	d
CELL_RESC_INTERLACE_FILTER	ps3/sdk_defines.h	441;"	d
CELL_RESC_LETTERBOX	ps3/sdk_defines.h	431;"	d
CELL_RESC_MINIMUM_GPU_LOAD	ps3/sdk_defines.h	433;"	d
CELL_RESC_NORMAL_BILINEAR	ps3/sdk_defines.h	442;"	d
CELL_RESC_PAL_50	ps3/sdk_defines.h	435;"	d
CELL_RESC_PAL_60_DROP	ps3/sdk_defines.h	436;"	d
CELL_RESC_PAL_60_INTERPOLATE	ps3/sdk_defines.h	437;"	d
CELL_RESC_PAL_60_INTERPOLATE_30_DROP	ps3/sdk_defines.h	438;"	d
CELL_RESC_PAL_60_INTERPOLATE_DROP_FLEXIBLE	ps3/sdk_defines.h	439;"	d
CELL_RESC_PANSCAN	ps3/sdk_defines.h	430;"	d
CELL_SYSMODULE_FS	ps3/sdk_defines.h	653;"	d
CELL_SYSMODULE_IO	ps3/sdk_defines.h	652;"	d
CELL_SYSMODULE_JPGDEC	ps3/sdk_defines.h	656;"	d
CELL_SYSMODULE_NET	ps3/sdk_defines.h	654;"	d
CELL_SYSMODULE_PNGDEC	ps3/sdk_defines.h	657;"	d
CELL_SYSMODULE_SYSUTIL_NP	ps3/sdk_defines.h	655;"	d
CELL_SYSUTIL_REQUEST_EXITGAME	ps3/sdk_defines.h	629;"	d
CELL_VIDEO_OUT_ASPECT_16_9	ps3/sdk_defines.h	448;"	d
CELL_VIDEO_OUT_ASPECT_4_3	ps3/sdk_defines.h	447;"	d
CELL_VIDEO_OUT_ASPECT_AUTO	ps3/sdk_defines.h	446;"	d
CELL_VIDEO_OUT_BUFFER_COLOR_FORMAT_R16G16B16X16_FLOAT	ps3/sdk_defines.h	464;"	d
CELL_VIDEO_OUT_BUFFER_COLOR_FORMAT_X8R8G8B8	ps3/sdk_defines.h	463;"	d
CELL_VIDEO_OUT_PRIMARY	ps3/sdk_defines.h	461;"	d
CELL_VIDEO_OUT_RESOLUTION_1080	ps3/sdk_defines.h	453;"	d
CELL_VIDEO_OUT_RESOLUTION_1280x1080	ps3/sdk_defines.h	455;"	d
CELL_VIDEO_OUT_RESOLUTION_1440x1080	ps3/sdk_defines.h	456;"	d
CELL_VIDEO_OUT_RESOLUTION_1600x1080	ps3/sdk_defines.h	457;"	d
CELL_VIDEO_OUT_RESOLUTION_480	ps3/sdk_defines.h	450;"	d
CELL_VIDEO_OUT_RESOLUTION_576	ps3/sdk_defines.h	451;"	d
CELL_VIDEO_OUT_RESOLUTION_720	ps3/sdk_defines.h	452;"	d
CELL_VIDEO_OUT_RESOLUTION_960x1080	ps3/sdk_defines.h	454;"	d
CELL_VIDEO_OUT_SCAN_MODE_PROGRESSIVE	ps3/sdk_defines.h	459;"	d
CFLAGS	config.mk	/^CFLAGS = -Ofast -march=armv7-a -mtune=cortex-a7 -mfloat-abi=hard -mfpu=neon-vfpv4 -ffast-math -funroll-loops$/;"	m
CGBIODATALSB	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATALSB = ELFDATA2LSB,$/;"	e	enum:cgc::bio::__anon33
CGBIODATAMSB	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATAMSB = ELFDATA2MSB$/;"	e	enum:cgc::bio::__anon33
CGBIODATANONE	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATANONE = ELFDATANONE,$/;"	e	enum:cgc::bio::__anon33
CGBIO_ERROR	ps3/rgl/src/cg/cgbio.hpp	/^      enum CGBIO_ERROR$/;"	g	namespace:cgc::bio
CGBIO_ERROR_FILEIO	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_FILEIO,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_FORMAT	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_FORMAT,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_INDEX	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_INDEX,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_LOADED	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_LOADED,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_MEMORY	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_MEMORY,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_NO_ERROR	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_NO_ERROR,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_RELOC	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_RELOC,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_SYMBOL	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_SYMBOL,$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBIO_ERROR_UNKNOWN_TYPE	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_UNKNOWN_TYPE$/;"	e	enum:cgc::bio::CGBIO_ERROR
CGBTYPES_HEADER	ps3/rgl/src/cg/cgbtypes.h	2;"	d
CGC_CGBIO_CGBIO_HPP	ps3/rgl/src/cg/cgbio.hpp	9;"	d
CGC_CGBIO_CGBUTILS_HPP	ps3/rgl/src/cg/cgbutils.hpp	2;"	d
CGC_CGBIO_NVBIIMPL_HPP	ps3/rgl/src/cg/nvbiimpl.hpp	2;"	d
CGC_CGBIO_NVBI_HPP	ps3/rgl/src/cg/nvbi.hpp	2;"	d
CGELFBinary	ps3/rgl/src/rgl_cg.h	/^} CGELFBinary;$/;"	t	typeref:struct:__anon31
CGELFProgram	ps3/rgl/src/rgl_cg.h	/^} CGELFProgram;$/;"	t	typeref:struct:__anon32
CGF_DEPTHREPLACE	ps3/rgl/include/Cg/CgInternal.h	10;"	d
CGF_DEPTHREPLACE	ps3/rgl/src/cg/cgbtypes.h	19;"	d
CGF_OUTPUTFROMH0	ps3/rgl/include/Cg/CgInternal.h	9;"	d
CGF_OUTPUTFROMH0	ps3/rgl/src/cg/cgbtypes.h	18;"	d
CGF_PIXELKILL	ps3/rgl/include/Cg/CgInternal.h	11;"	d
CGF_PIXELKILL	ps3/rgl/src/cg/cgbtypes.h	20;"	d
CGNV2RT_HEADER	ps3/rgl/src/cg/cgnv2rt.h	2;"	d
CGPD_IN	ps3/rgl/include/Cg/CgInternal.h	24;"	d
CGPD_INOUT	ps3/rgl/include/Cg/CgInternal.h	26;"	d
CGPD_MASK	ps3/rgl/include/Cg/CgInternal.h	23;"	d
CGPD_OUT	ps3/rgl/include/Cg/CgInternal.h	25;"	d
CGPF_GLOBAL	ps3/rgl/include/Cg/CgInternal.h	33;"	d
CGPF_REFERENCED	ps3/rgl/include/Cg/CgInternal.h	29;"	d
CGPF_SHARED	ps3/rgl/include/Cg/CgInternal.h	31;"	d
CGPROGRAMGROUP_HEADER	ps3/rgl/include/Cg/CgProgramGroup.h	2;"	d
CGPV_CONSTANT	ps3/rgl/include/Cg/CgInternal.h	19;"	d
CGPV_MASK	ps3/rgl/include/Cg/CgInternal.h	16;"	d
CGPV_MIXED	ps3/rgl/include/Cg/CgInternal.h	20;"	d
CGPV_UNIFORM	ps3/rgl/include/Cg/CgInternal.h	18;"	d
CGPV_VARYING	ps3/rgl/include/Cg/CgInternal.h	17;"	d
CGP_ARRAY	ps3/rgl/include/Cg/CgInternal.h	40;"	d
CGP_CONTIGUOUS	ps3/rgl/include/Cg/CgInternal.h	46;"	d
CGP_INTERNAL	ps3/rgl/include/Cg/CgInternal.h	35;"	d
CGP_INTRINSIC	ps3/rgl/include/Cg/CgInternal.h	38;"	d
CGP_NORMALIZE	ps3/rgl/include/Cg/CgInternal.h	48;"	d
CGP_RTCREATED	ps3/rgl/include/Cg/CgInternal.h	50;"	d
CGP_SCF_BOOL	ps3/rgl/include/Cg/CgInternal.h	53;"	d
CGP_STRUCTURE	ps3/rgl/include/Cg/CgInternal.h	39;"	d
CGP_TYPE_MASK	ps3/rgl/include/Cg/CgInternal.h	41;"	d
CGP_UNPACKED	ps3/rgl/include/Cg/CgInternal.h	45;"	d
CGP_UNROLLED	ps3/rgl/include/Cg/CgInternal.h	44;"	d
CG_BINARY_FORMAT_REVISION	ps3/rgl/include/Cg/cgBinary.h	12;"	d
CG_DATATYPE_MACRO	ps3/rgl/src/rgl_ps3_cg.cpp	3741;"	d	file:
CG_DATATYPE_MACRO	ps3/rgl/src/rgl_ps3_cg.cpp	3747;"	d	file:
CG_DATATYPE_MACRO	ps3/rgl/src/rgl_ps3_cg.cpp	701;"	d	file:
CG_DATATYPE_MACRO	ps3/rgl/src/rgl_ps3_cg.cpp	708;"	d	file:
CG_GETINDEX	ps3/rgl/include/Cg/CgCommon.h	162;"	d
CG_IS_CONTEXT	ps3/rgl/include/Cg/CgCommon.h	155;"	d
CG_IS_PARAMETER	ps3/rgl/include/Cg/CgCommon.h	157;"	d
CG_IS_PROGRAM	ps3/rgl/include/Cg/CgCommon.h	156;"	d
CG_PARAMETERMASK	ps3/rgl/include/Cg/CgCommon.h	161;"	d
CG_PARAMETERSIZE	ps3/rgl/include/Cg/CgCommon.h	160;"	d
CGprogramGroup	ps3/rgl/include/Cg/CgProgramGroup.h	/^typedef struct _CGprogramGroup *CGprogramGroup;$/;"	t	typeref:struct:_CGprogramGroup
CHANNEL	audio/librsound.c	306;"	d	file:
CHUNKSIZE	audio/librsound.c	437;"	d	file:
CHUNK_FRAMES	gx/gx_audio.c	26;"	d	file:
CHUNK_SIZE	audio/dsound.c	80;"	d	file:
CHUNK_SIZE	gx/gx_audio.c	27;"	d	file:
CL0039_MAX_LINES	ps3/rgl/src/include/rgl-inline.h	986;"	d
CL0039_MAX_PITCH	ps3/rgl/src/include/rgl-inline.h	985;"	d
CL0039_MAX_ROWS	ps3/rgl/src/include/rgl-inline.h	987;"	d
CL0039_MIN_PITCH	ps3/rgl/src/include/rgl-inline.h	984;"	d
CLASSIC_CTRL_BUTTON_A	apple/common/hidpad/wiimote.h	152;"	d
CLASSIC_CTRL_BUTTON_ALL	apple/common/hidpad/wiimote.h	163;"	d
CLASSIC_CTRL_BUTTON_B	apple/common/hidpad/wiimote.h	154;"	d
CLASSIC_CTRL_BUTTON_DOWN	apple/common/hidpad/wiimote.h	161;"	d
CLASSIC_CTRL_BUTTON_FULL_L	apple/common/hidpad/wiimote.h	160;"	d
CLASSIC_CTRL_BUTTON_FULL_R	apple/common/hidpad/wiimote.h	156;"	d
CLASSIC_CTRL_BUTTON_HOME	apple/common/hidpad/wiimote.h	158;"	d
CLASSIC_CTRL_BUTTON_LEFT	apple/common/hidpad/wiimote.h	149;"	d
CLASSIC_CTRL_BUTTON_MINUS	apple/common/hidpad/wiimote.h	159;"	d
CLASSIC_CTRL_BUTTON_PLUS	apple/common/hidpad/wiimote.h	157;"	d
CLASSIC_CTRL_BUTTON_RIGHT	apple/common/hidpad/wiimote.h	162;"	d
CLASSIC_CTRL_BUTTON_UP	apple/common/hidpad/wiimote.h	148;"	d
CLASSIC_CTRL_BUTTON_X	apple/common/hidpad/wiimote.h	151;"	d
CLASSIC_CTRL_BUTTON_Y	apple/common/hidpad/wiimote.h	153;"	d
CLASSIC_CTRL_BUTTON_ZL	apple/common/hidpad/wiimote.h	155;"	d
CLASSIC_CTRL_BUTTON_ZR	apple/common/hidpad/wiimote.h	150;"	d
CLOCK_MONOTONIC	performance.c	46;"	d	file:
CMD_ALIVE	gfx/thread_wrapper.c	/^   CMD_ALIVE, \/\/ Blocking alive check. Used when paused.$/;"	e	enum:thread_cmd	file:
CMD_DUMMY	gfx/thread_wrapper.c	/^   CMD_DUMMY = INT_MAX$/;"	e	enum:thread_cmd	file:
CMD_FREE	gfx/thread_wrapper.c	/^   CMD_FREE,$/;"	e	enum:thread_cmd	file:
CMD_INIT	gfx/thread_wrapper.c	/^   CMD_INIT,$/;"	e	enum:thread_cmd	file:
CMD_NONE	gfx/thread_wrapper.c	/^   CMD_NONE = 0,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_ENABLE	gfx/thread_wrapper.c	/^   CMD_OVERLAY_ENABLE,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_FULL_SCREEN	gfx/thread_wrapper.c	/^   CMD_OVERLAY_FULL_SCREEN,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_LOAD	gfx/thread_wrapper.c	/^   CMD_OVERLAY_LOAD,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_SET_ALPHA	gfx/thread_wrapper.c	/^   CMD_OVERLAY_SET_ALPHA,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_TEX_GEOM	gfx/thread_wrapper.c	/^   CMD_OVERLAY_TEX_GEOM,$/;"	e	enum:thread_cmd	file:
CMD_OVERLAY_VERTEX_GEOM	gfx/thread_wrapper.c	/^   CMD_OVERLAY_VERTEX_GEOM,$/;"	e	enum:thread_cmd	file:
CMD_POKE_GET_FBO_STATE	gfx/thread_wrapper.c	/^   CMD_POKE_GET_FBO_STATE,$/;"	e	enum:thread_cmd	file:
CMD_POKE_SET_ASPECT_RATIO	gfx/thread_wrapper.c	/^   CMD_POKE_SET_ASPECT_RATIO,$/;"	e	enum:thread_cmd	file:
CMD_POKE_SET_FBO_STATE	gfx/thread_wrapper.c	/^   CMD_POKE_SET_FBO_STATE,$/;"	e	enum:thread_cmd	file:
CMD_POKE_SET_FILTERING	gfx/thread_wrapper.c	/^   CMD_POKE_SET_FILTERING,$/;"	e	enum:thread_cmd	file:
CMD_READ_VIEWPORT	gfx/thread_wrapper.c	/^   CMD_READ_VIEWPORT,$/;"	e	enum:thread_cmd	file:
CMD_SET_ROTATION	gfx/thread_wrapper.c	/^   CMD_SET_ROTATION,$/;"	e	enum:thread_cmd	file:
CMD_SET_SHADER	gfx/thread_wrapper.c	/^   CMD_SET_SHADER,$/;"	e	enum:thread_cmd	file:
CMP_LT_OR_GT	ps3/altivec_mem.h	65;"	d
CNV2END	ps3/rgl/src/cg/cgnv2rt.h	7;"	d
COL_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	124;"	d	file:
COL_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	357;"	d	file:
COL_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	360;"	d	file:
COMMAND_COMPLETE_EVENT	apple/iOS/bluetooth/btstack/utils.h	87;"	d
COMMAND_STATUS_EVENT	apple/iOS/bluetooth/btstack/utils.h	88;"	d
CONFIG_BIND	apple/common/setting_data.c	316;"	d	file:
CONFIG_BOOL	apple/common/setting_data.c	309;"	d	file:
CONFIG_FILE_MACROS_H__	conf/config_file_macros.h	18;"	d
CONFIG_FLOAT	apple/common/setting_data.c	312;"	d	file:
CONFIG_GET_BOOL	conf/config_file_macros.h	53;"	d
CONFIG_GET_BOOL_BASE	conf/config_file_macros.h	23;"	d
CONFIG_GET_BOOL_EXTERN	conf/config_file_macros.h	60;"	d
CONFIG_GET_FLOAT	conf/config_file_macros.h	56;"	d
CONFIG_GET_FLOAT_BASE	conf/config_file_macros.h	41;"	d
CONFIG_GET_FLOAT_EXTERN	conf/config_file_macros.h	62;"	d
CONFIG_GET_INT	conf/config_file_macros.h	54;"	d
CONFIG_GET_INT_BASE	conf/config_file_macros.h	29;"	d
CONFIG_GET_INT_EXTERN	conf/config_file_macros.h	61;"	d
CONFIG_GET_PATH	conf/config_file_macros.h	58;"	d
CONFIG_GET_PATH_BASE	conf/config_file_macros.h	50;"	d
CONFIG_GET_PATH_EXTERN	conf/config_file_macros.h	64;"	d
CONFIG_GET_STRING	conf/config_file_macros.h	57;"	d
CONFIG_GET_STRING_BASE	conf/config_file_macros.h	47;"	d
CONFIG_GET_STRING_EXTERN	conf/config_file_macros.h	63;"	d
CONFIG_GET_UINT64	conf/config_file_macros.h	55;"	d
CONFIG_GET_UINT64_BASE	conf/config_file_macros.h	35;"	d
CONFIG_HEX	apple/common/setting_data.c	315;"	d	file:
CONFIG_INT	apple/common/setting_data.c	310;"	d	file:
CONFIG_PATH	apple/common/setting_data.c	313;"	d	file:
CONFIG_STRING	apple/common/setting_data.c	314;"	d	file:
CONFIG_UINT	apple/common/setting_data.c	311;"	d	file:
CONNECTION_FAILURE_RESOLUTION_REQUEST	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 0;$/;"	f	class:RetroActivityLocation	file:	access:private
CONSOLE_EXT_H__	console/rarch_console.h	18;"	d
CONST_CAST	netplay_compat.h	61;"	d
CONST_CAST	netplay_compat.h	64;"	d
CORE_INFO_H_	core_info.h	17;"	d
CORE_OPTIONS_H__	core_options.h	17;"	d
CPU_FEATURES_H	performance/performance_android.h	29;"	d
CPU_X86	performance.c	206;"	d	file:
CRC_INDEX	movie.h	27;"	d
CREATE_CLASS	frontend/menu/rmenu_xui.cpp	125;"	d	file:
CREATOR	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public static final Parcelable.Creator<BackStackItem> CREATOR = new Parcelable.Creator<BackStackItem>()$/;"	f	class:DirectoryFragment.BackStackItem	access:public
CRetroArch	frontend/menu/rmenu_xui.cpp	/^class CRetroArch : public CXuiModule$/;"	c	file:	inherits:CXuiModule
CRetroArch::RegisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^      virtual HRESULT RegisterXuiClasses();$/;"	p	class:CRetroArch	file:	access:protected	signature:()
CRetroArch::RegisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArch::RegisterXuiClasses (void)$/;"	f	class:CRetroArch	signature:(void)
CRetroArch::UnregisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^      virtual HRESULT UnregisterXuiClasses();$/;"	p	class:CRetroArch	file:	access:protected	signature:()
CRetroArch::UnregisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArch::UnregisterXuiClasses (void)$/;"	f	class:CRetroArch	signature:(void)
CRetroArchAudioOptions::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchAudioOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchAudioOptions::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchAudioOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchAudioOptions::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchAudioOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchControls::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnControlNavigate($/;"	f	class:CRetroArchControls	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchControls::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchControls	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchControls::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchControls	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchCoreBrowser::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnControlNavigate($/;"	f	class:CRetroArchCoreBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchCoreBrowser::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchCoreBrowser::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchCoreBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
CRetroArchCoreOptions::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchCoreOptions::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchCoreOptions::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchCoreOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchFileBrowser::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnControlNavigate($/;"	f	class:CRetroArchFileBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchFileBrowser::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchFileBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchFileBrowser::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchFileBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
CRetroArchLoadGameHistory::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnControlNavigate($/;"	f	class:CRetroArchLoadGameHistory	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchLoadGameHistory::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchLoadGameHistory	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchLoadGameHistory::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchLoadGameHistory	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchMain::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchMain	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchMain::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchMain	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchMain::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchMain	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchSettings::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchSettings	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchSettings::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchSettings	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchSettings::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchSettings	signature:( HXUIOBJ hObjPressed, int & bHandled )
CRetroArchShaderBrowser::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnControlNavigate($/;"	f	class:CRetroArchShaderBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchShaderBrowser::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchShaderBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchShaderBrowser::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchShaderBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
CRetroArchVideoOptions::OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchVideoOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
CRetroArchVideoOptions::OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchVideoOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
CRetroArchVideoOptions::OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchVideoOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
CSHORT	frontend/platform/platform_xdk.h	/^typedef CONST SHORT CSHORT;$/;"	t
CTL_CODE	frontend/platform/platform_xdk.h	259;"	d
CUTOFF	audio/sinc.c	49;"	d	file:
CUTOFF	audio/sinc.c	57;"	d	file:
CUTOFF	audio/sinc.c	66;"	d	file:
CUTOFF	audio/sinc.c	75;"	d	file:
CUTOFF	audio/sinc.c	84;"	d	file:
CXX	config.mk	/^CXX = \/usr\/bin\/g++$/;"	m
CXXFLAGS	config.mk	/^CXXFLAGS = $/;"	m
CYAN	gfx/gfx_common.h	112;"	d
Callback	gfx/d3d9/d3d9.cpp	/^namespace Callback$/;"	n	file:
Callback::WindowProc	gfx/d3d9/d3d9.cpp	/^   LRESULT CALLBACK WindowProc(HWND hWnd, UINT message,$/;"	f	namespace:Callback	signature:(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
Callback::curD3D	gfx/d3d9/d3d9.cpp	/^   static D3DVideo *curD3D = nullptr;$/;"	m	namespace:Callback	file:
Callback::d3d_err	gfx/d3d9/d3d9.cpp	/^   static HRESULT d3d_err;$/;"	m	namespace:Callback	file:
Callback::dinput	gfx/d3d9/d3d9.cpp	/^   static void *dinput;$/;"	m	namespace:Callback	file:
Callback::quit	gfx/d3d9/d3d9.cpp	/^   static bool quit = false;$/;"	m	namespace:Callback	file:
Cdb	frontend/platform/platform_xdk.h	/^    \/*01C*\/ UCHAR Cdb[16];$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
CdbLength	frontend/platform/platform_xdk.h	/^    \/*006*\/ UCHAR CdbLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
CellAudioPortParam	ps3/sdk_defines.h	43;"	d
CellGameContentSize	ps3/sdk_defines.h	610;"	d
CellGcmConfig	ps3/sdk_defines.h	469;"	d
CellGcmContextData	ps3/sdk_defines.h	468;"	d
CellGcmSurface	ps3/sdk_defines.h	466;"	d
CellGcmTexture	ps3/sdk_defines.h	467;"	d
CellJpgDecDataCtrlParam	ps3/sdk_defines.h	240;"	d
CellJpgDecDataOutInfo	ps3/sdk_defines.h	238;"	d
CellJpgDecInParam	ps3/sdk_defines.h	234;"	d
CellJpgDecInfo	ps3/sdk_defines.h	232;"	d
CellJpgDecMainHandle	ps3/sdk_defines.h	220;"	d
CellJpgDecOpnInfo	ps3/sdk_defines.h	230;"	d
CellJpgDecOutParam	ps3/sdk_defines.h	236;"	d
CellJpgDecSrc	ps3/sdk_defines.h	228;"	d
CellJpgDecSubHandle	ps3/sdk_defines.h	222;"	d
CellJpgDecThreadInParam	ps3/sdk_defines.h	224;"	d
CellJpgDecThreadOutParam	ps3/sdk_defines.h	226;"	d
CellMouseData	ps3/sdk_defines.h	118;"	d
CellMouseInfo	ps3/sdk_defines.h	117;"	d
CellOskDialogCallbackReturnParam	ps3/sdk_defines.h	163;"	d
CellOskDialogInputFieldInfo	ps3/sdk_defines.h	162;"	d
CellOskDialogParam	ps3/sdk_defines.h	164;"	d
CellOskDialogPoint	ps3/sdk_defines.h	161;"	d
CellPadData	ps3/sdk_defines.h	94;"	d
CellPadInfo2	ps3/sdk_defines.h	93;"	d
CellPngDecDataCtrlParam	ps3/sdk_defines.h	241;"	d
CellPngDecDataOutInfo	ps3/sdk_defines.h	239;"	d
CellPngDecInParam	ps3/sdk_defines.h	235;"	d
CellPngDecInfo	ps3/sdk_defines.h	233;"	d
CellPngDecMainHandle	ps3/sdk_defines.h	221;"	d
CellPngDecOpnInfo	ps3/sdk_defines.h	231;"	d
CellPngDecOutParam	ps3/sdk_defines.h	237;"	d
CellPngDecSrc	ps3/sdk_defines.h	229;"	d
CellPngDecSubHandle	ps3/sdk_defines.h	223;"	d
CellPngDecThreadInParam	ps3/sdk_defines.h	225;"	d
CellPngDecThreadOutParam	ps3/sdk_defines.h	227;"	d
CellRescBufferMode	ps3/sdk_defines.h	476;"	d
CellRescInitConfig	ps3/sdk_defines.h	474;"	d
CellRescSrc	ps3/sdk_defines.h	475;"	d
CellVideoOutConfiguration	ps3/sdk_defines.h	470;"	d
CellVideoOutResolution	ps3/sdk_defines.h	471;"	d
CellVideoOutState	ps3/sdk_defines.h	472;"	d
Certificate	frontend/platform/platform_xdk.h	/^	struct _XBE_CERTIFICATE *Certificate;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_CERTIFICATE	access:public
CgArrayType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgArrayType():_elementType(NULL) { _type = (unsigned char)(CG_ARRAY + 128); }$/;"	f	class:CgArrayType	access:public	signature:()
CgArrayType	ps3/rgl/src/rgl_ps3_cg.cpp	/^class CgArrayType : public CgBaseType$/;"	c	file:	inherits:CgBaseType
CgArrayType::CgArrayType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgArrayType():_elementType(NULL) { _type = (unsigned char)(CG_ARRAY + 128); }$/;"	f	class:CgArrayType	access:public	signature:()
CgArrayType::_dimensionCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned char _dimensionCount;$/;"	m	class:CgArrayType	file:	access:public
CgArrayType::_dimensionItemCountsOffset	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _dimensionItemCountsOffset;$/;"	m	class:CgArrayType	file:	access:public
CgArrayType::_elementType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgBaseType *_elementType;$/;"	m	class:CgArrayType	file:	access:public
CgArrayType::~CgArrayType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgArrayType()$/;"	f	class:CgArrayType	access:public	signature:()
CgBaseType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgBaseType() {_type = 0;}$/;"	f	class:CgBaseType	access:public	signature:()
CgBaseType	ps3/rgl/src/rgl_ps3_cg.cpp	/^class CgBaseType$/;"	c	file:
CgBaseType::CgBaseType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgBaseType() {_type = 0;}$/;"	f	class:CgBaseType	access:public	signature:()
CgBaseType::_resource	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _resource; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
CgBaseType::_resourceIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^      short _resourceIndex; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
CgBaseType::_type	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _type; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
CgBaseType::~CgBaseType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgBaseType() {}$/;"	f	class:CgBaseType	access:public	signature:()
CgBinaryEmbeddedConstant	ps3/rgl/include/Cg/cgBinary.h	/^   struct CgBinaryEmbeddedConstant$/;"	s
CgBinaryEmbeddedConstant	ps3/rgl/include/Cg/cgBinary.h	/^   typedef struct CgBinaryEmbeddedConstant CgBinaryEmbeddedConstant;$/;"	t	typeref:struct:CgBinaryEmbeddedConstant
CgBinaryEmbeddedConstant::ucodeCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int ucodeCount;       \/\/ occurances$/;"	m	struct:CgBinaryEmbeddedConstant	access:public
CgBinaryEmbeddedConstant::ucodeOffset	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int ucodeOffset[1];   \/\/ offsets that need to be patched follow$/;"	m	struct:CgBinaryEmbeddedConstant	access:public
CgBinaryEmbeddedConstantOffset	ps3/rgl/include/Cg/cgBinary.h	/^   typedef CgBinaryOffset                  CgBinaryEmbeddedConstantOffset;$/;"	t
CgBinaryFloatOffset	ps3/rgl/include/Cg/cgBinary.h	/^   typedef CgBinaryOffset                  CgBinaryFloatOffset;$/;"	t
CgBinaryFragmentProgram	ps3/rgl/include/Cg/cgBinary.h	/^   struct CgBinaryFragmentProgram$/;"	s
CgBinaryFragmentProgram	ps3/rgl/include/Cg/cgBinary.h	/^   typedef struct CgBinaryFragmentProgram  CgBinaryFragmentProgram;$/;"	t	typeref:struct:CgBinaryFragmentProgram
CgBinaryFragmentProgram::attributeInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeInputMask;       \/\/ attributes fp reads (uses SET_VERTEX_ATTRIB_OUTPUT_MASK bits)$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::depthReplace	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char depthReplace;             \/\/ fp generated z epth value$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::instructionCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionCount;         \/\/ #instructions$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::outputFromH0	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char outputFromH0;             \/\/ final color from R0 or H0$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::partialTexType	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  partialTexType;           \/\/ texid 0..15 use two bits each marking whether the texture format requires partial load: see CgBinaryPartialTexType$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::pixelKill	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char pixelKill;                \/\/ fp uses kill operations$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::registerCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char registerCount;            \/\/ R registers count$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::texCoords2D	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoords2D;             \/\/ tex coords that are 2d        (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::texCoordsCentroid	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoordsCentroid;       \/\/ tex coords that are centroid  (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryFragmentProgram::texCoordsInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoordsInputMask;      \/\/ tex coords used by frag prog. (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
CgBinaryOffset	ps3/rgl/include/Cg/cgBinary.h	/^   typedef unsigned int                    CgBinaryOffset;$/;"	t
CgBinaryPTT1x32	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryPTT1x32 = 2,$/;"	e	enum:__anon73
CgBinaryPTT2x16	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryPTT2x16 = 1,$/;"	e	enum:__anon73
CgBinaryPTTNone	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryPTTNone = 0,$/;"	e	enum:__anon73
CgBinaryParameter	ps3/rgl/include/Cg/cgBinary.h	/^   struct CgBinaryParameter$/;"	s
CgBinaryParameter	ps3/rgl/include/Cg/cgBinary.h	/^   typedef struct CgBinaryParameter        CgBinaryParameter;$/;"	t	typeref:struct:CgBinaryParameter
CgBinaryParameter::defaultValue	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryFloatOffset             defaultValue;  \/\/ default constant value$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::direction	ps3/rgl/include/Cg/cgBinary.h	/^      CGenum                          direction;     \/\/ cgGetParameterDirection()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::embeddedConst	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryEmbeddedConstantOffset  embeddedConst; \/\/ embedded constant information$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::isReferenced	ps3/rgl/include/Cg/cgBinary.h	/^      CGbool                          isReferenced;  \/\/ cgIsParameterReferenced()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::isShared	ps3/rgl/include/Cg/cgBinary.h	/^      CGbool                          isShared;	   \/\/ cgIsParameterShared()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::name	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryStringOffset            name;          \/\/ cgGetParameterName()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::paramno	ps3/rgl/include/Cg/cgBinary.h	/^      int                             paramno;       \/\/ 0..n: cgGetParameterIndex() -1: globals$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::res	ps3/rgl/include/Cg/cgBinary.h	/^      CGresource                      res;           \/\/ cgGetParameterResource()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::resIndex	ps3/rgl/include/Cg/cgBinary.h	/^      int                             resIndex;      \/\/ cgGetParameterResourceIndex()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::semantic	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryStringOffset            semantic;      \/\/ cgGetParameterSemantic()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::type	ps3/rgl/include/Cg/cgBinary.h	/^      CGtype                          type;          \/\/ cgGetParameterType()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameter::var	ps3/rgl/include/Cg/cgBinary.h	/^      CGenum                          var;           \/\/ cgGetParameterVariability()$/;"	m	struct:CgBinaryParameter	access:public
CgBinaryParameterOffset	ps3/rgl/include/Cg/cgBinary.h	/^   typedef CgBinaryOffset                  CgBinaryParameterOffset;$/;"	t
CgBinaryPartialTexType	ps3/rgl/include/Cg/cgBinary.h	/^   } CgBinaryPartialTexType;$/;"	t	typeref:enum:__anon73
CgBinaryProgram	ps3/rgl/include/Cg/cgBinary.h	/^   struct CgBinaryProgram$/;"	s
CgBinaryProgram	ps3/rgl/include/Cg/cgBinary.h	/^   typedef struct CgBinaryProgram          CgBinaryProgram;$/;"	t	typeref:struct:CgBinaryProgram
CgBinaryProgram::binaryFormatRevision	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int binaryFormatRevision;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::data	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char data[1];$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::parameterArray	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryParameterOffset parameterArray;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::parameterCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int parameterCount;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::profile	ps3/rgl/include/Cg/cgBinary.h	/^      CGprofile profile;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::program	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryOffset program;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::totalSize	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int totalSize;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::ucode	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryOffset  ucode;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryProgram::ucodeSize	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int    ucodeSize;$/;"	m	struct:CgBinaryProgram	access:public
CgBinaryStringOffset	ps3/rgl/include/Cg/cgBinary.h	/^   typedef CgBinaryOffset                  CgBinaryStringOffset;$/;"	t
CgBinaryVertexProgram	ps3/rgl/include/Cg/cgBinary.h	/^   struct CgBinaryVertexProgram$/;"	s
CgBinaryVertexProgram	ps3/rgl/include/Cg/cgBinary.h	/^   typedef struct CgBinaryVertexProgram    CgBinaryVertexProgram;$/;"	t	typeref:struct:CgBinaryVertexProgram
CgBinaryVertexProgram::attributeInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeInputMask;       \/\/ attributes vs reads from$/;"	m	struct:CgBinaryVertexProgram	access:public
CgBinaryVertexProgram::attributeOutputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeOutputMask;      \/\/ attributes vs writes (uses SET_VERTEX_ATTRIB_OUTPUT_MASK bits)$/;"	m	struct:CgBinaryVertexProgram	access:public
CgBinaryVertexProgram::instructionCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionCount;         \/\/ #instructions$/;"	m	struct:CgBinaryVertexProgram	access:public
CgBinaryVertexProgram::instructionSlot	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionSlot;          \/\/ load address (indexed reads!)$/;"	m	struct:CgBinaryVertexProgram	access:public
CgBinaryVertexProgram::registerCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  registerCount;            \/\/ R registers count$/;"	m	struct:CgBinaryVertexProgram	access:public
CgParameterArray	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterArray; \/\/padded to 4 bytes$/;"	t	typeref:struct:_CgParameterArray
CgParameterDefaultValue	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterDefaultValue;$/;"	t	typeref:struct:_CgParameterDefaultValue
CgParameterEntry	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterEntry;$/;"	t	typeref:struct:_CgParameterEntry
CgParameterResource	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterResource;$/;"	t	typeref:struct:_CgParameterResource
CgParameterSemantic	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterSemantic;$/;"	t	typeref:struct:_CgParameterSemantic
CgParameterStructure	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterStructure;$/;"	t	typeref:struct:_CgParameterStructure
CgParameterTableHeader	ps3/rgl/include/Cg/CgInternal.h	/^   CgParameterTableHeader;$/;"	t	typeref:struct:_CgParameterTableHeader
CgProgramHeader	ps3/rgl/include/Cg/CgInternal.h	/^   CgProgramHeader;$/;"	t	typeref:struct:CgProgramHeader
CgProgramHeader	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct CgProgramHeader$/;"	s
CgProgramHeader::__anon74::__anon75::attributeOutputMask	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int attributeOutputMask;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
CgProgramHeader::__anon74::__anon75::instructionSlot	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int instructionSlot;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
CgProgramHeader::__anon74::__anon75::registerCount	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int registerCount;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
CgProgramHeader::__anon74::__anon76::flags	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned char flags; \/\/combination of CGF_OUTPUTFROMH0,CGF_DEPTHREPLACE,CGF_PIXELKILL$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::__anon76::partialTexType	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int partialTexType;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::__anon76::registerCount	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned char registerCount;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::__anon76::texcoord2d	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoord2d;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::__anon76::texcoordCentroid	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoordCentroid;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::__anon76::texcoordInputMask	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoordInputMask;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::fragmentProgram	ps3/rgl/include/Cg/CgInternal.h	/^         fragmentProgram;$/;"	m	union:CgProgramHeader::__anon74	typeref:struct:CgProgramHeader::__anon74::__anon76	access:public
CgProgramHeader::__anon74::vertexProgram	ps3/rgl/include/Cg/CgInternal.h	/^         vertexProgram;$/;"	m	union:CgProgramHeader::__anon74	typeref:struct:CgProgramHeader::__anon74::__anon75	access:public
CgProgramHeader::attributeInputMask	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int attributeInputMask;$/;"	m	struct:CgProgramHeader	access:public
CgProgramHeader::compilerVersion	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short compilerVersion;$/;"	m	struct:CgProgramHeader	access:public
CgProgramHeader::instructionCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int instructionCount;$/;"	m	struct:CgProgramHeader	access:public
CgProgramHeader::profile	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short profile; \/\/ Vertex \/ Fragment$/;"	m	struct:CgProgramHeader	access:public
CgRuntimeParameter	ps3/rgl/include/Cg/CgCommon.h	/^typedef struct CgRuntimeParameter$/;"	s
CgRuntimeParameter	ps3/rgl/include/Cg/CgCommon.h	/^} CgRuntimeParameter;$/;"	t	typeref:struct:CgRuntimeParameter
CgRuntimeParameter::glType	ps3/rgl/include/Cg/CgCommon.h	/^   int glType;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::id	ps3/rgl/include/Cg/CgCommon.h	/^   CGparameter id;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::parameterEntry	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterEntry *parameterEntry;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::program	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogram *program;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::pushBufferPointer	ps3/rgl/include/Cg/CgCommon.h	/^   void *pushBufferPointer;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::samplerSetter	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction samplerSetter;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::setterIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction  setterIndex;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::settercIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction settercIndex;$/;"	m	struct:CgRuntimeParameter	access:public
CgRuntimeParameter::setterrIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction setterrIndex;$/;"	m	struct:CgRuntimeParameter	access:public
CgStructuralElement	ps3/rgl/src/rgl_ps3_cg.cpp	/^      class CgStructuralElement$/;"	c	class:CgStructureType	file:	access:public
CgStructureType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgStructureType()$/;"	f	class:CgStructureType	access:public	signature:()
CgStructureType	ps3/rgl/src/rgl_ps3_cg.cpp	/^class CgStructureType : public CgBaseType$/;"	c	file:	inherits:CgBaseType
CgStructureType::CgStructuralElement	ps3/rgl/src/rgl_ps3_cg.cpp	/^      class CgStructuralElement$/;"	c	class:CgStructureType	file:	access:public
CgStructureType::CgStructuralElement::_flags	ps3/rgl/src/rgl_ps3_cg.cpp	/^            unsigned short _flags; \/\/in,out,global,varying,const,uniform,shared, hasDefaults(base types only) -> consecutive reg allocation flag$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
CgStructureType::CgStructuralElement::_index	ps3/rgl/src/rgl_ps3_cg.cpp	/^            unsigned short _index; \/\/helper index ?$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
CgStructureType::CgStructuralElement::_name	ps3/rgl/src/rgl_ps3_cg.cpp	/^            char _name[256];$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
CgStructureType::CgStructuralElement::_semantic	ps3/rgl/src/rgl_ps3_cg.cpp	/^            char _semantic[256];$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
CgStructureType::CgStructuralElement::_type	ps3/rgl/src/rgl_ps3_cg.cpp	/^            CgBaseType *_type;$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
CgStructureType::CgStructureType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgStructureType()$/;"	f	class:CgStructureType	access:public	signature:()
CgStructureType::_elements	ps3/rgl/src/rgl_ps3_cg.cpp	/^      std::vector<CgStructuralElement> _elements;$/;"	m	class:CgStructureType	file:	access:public
CgStructureType::_insideArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bool _insideArray; \/\/modifies the way the resources are stored, they should be sent directly to the resources,$/;"	m	class:CgStructureType	file:	access:public
CgStructureType::_root	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bool _root;$/;"	m	class:CgStructureType	file:	access:public
CgStructureType::~CgStructureType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgStructureType()$/;"	f	class:CgStructureType	access:public	signature:()
CgcontextHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void( * CgcontextHookFunction )( _CGcontext *context );$/;"	t
CgparameterHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void( * CgparameterHookFunction )( CgRuntimeParameter *parameter );$/;"	t
CgprogramCopyHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void( * CgprogramCopyHookFunction )( _CGprogram *newprogram, _CGprogram *oldprogram );$/;"	t
CgprogramHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void( * CgprogramHookFunction )( _CGprogram *program );$/;"	t
Characteristics	frontend/platform/platform_xdk.h	/^    ULONG Characteristics;                                      $/;"	m	struct:_FILE_FS_DEVICE_INFORMATION	access:public
CloseFunction	frontend/platform/platform_xdk.h	/^	void *CloseFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
ColorLogicOp	ps3/rgl/include/RGL/Types.h	/^      GLboolean		ColorLogicOp;$/;"	m	struct:RGLcontext	access:public
Computed	tools/retrolaunch/sha1.h	/^    int Computed;               \/* Is the digest computed?          *\/$/;"	m	struct:SHA1Context	access:public
ConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public ConfigFile()$/;"	m	class:ConfigFile	access:public	signature:()
ConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public ConfigFile(String filePath)$/;"	m	class:ConfigFile	access:public	signature:(String filePath)
ConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^public final class ConfigFile$/;"	c
ConfigFile.ConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public ConfigFile()$/;"	m	class:ConfigFile	access:public	signature:()
ConfigFile.ConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public ConfigFile(String filePath)$/;"	m	class:ConfigFile	access:public	signature:(String filePath)
ConfigFile.append	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void append(InputStream stream) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(InputStream stream)
ConfigFile.clear	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void clear()$/;"	m	class:ConfigFile	access:public	signature:()
ConfigFile.getBoolean	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public boolean getBoolean(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.getDouble	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public double getDouble(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.getFloat	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public float getFloat(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.getInt	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public int getInt(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.getString	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public String getString(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.keyExists	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public boolean keyExists(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
ConfigFile.map	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	private final HashMap<String, String> map = new HashMap<String, String>();$/;"	f	class:ConfigFile	file:	access:private
ConfigFile.open	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void open(String configPath) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(String configPath)
ConfigFile.parseLine	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	private void parseLine(String line)$/;"	m	class:ConfigFile	file:	access:private	signature:(String line)
ConfigFile.setBoolean	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setBoolean(String key, boolean value)$/;"	m	class:ConfigFile	access:public	signature:(String key, boolean value)
ConfigFile.setDouble	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setDouble(String key, double value)$/;"	m	class:ConfigFile	access:public	signature:(String key, double value)
ConfigFile.setFloat	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setFloat(String key, float value)$/;"	m	class:ConfigFile	access:public	signature:(String key, float value)
ConfigFile.setInt	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setInt(String key, int value)$/;"	m	class:ConfigFile	access:public	signature:(String key, int value)
ConfigFile.setString	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setString(String key, String value)$/;"	m	class:ConfigFile	access:public	signature:(String key, String value)
ConfigFile.write	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void write(String path) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(String path)
Coords	gfx/d3d9/d3d9.hpp	/^   struct Coords$/;"	s	struct:__anon222	access:public
CoreInfoAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		public CoreInfoAdapter(Context context, int resourceId)$/;"	m	class:InstalledCoreInfoFragment.CoreInfoAdapter	access:public	signature:(Context context, int resourceId)
CoreInfoAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	private final class CoreInfoAdapter extends ArrayAdapter<InstalledCoreInfoItem>$/;"	c	class:InstalledCoreInfoFragment	inherits:ArrayAdapter	access:private
CoreItem	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public CoreItem(String title, String subtitle)$/;"	m	class:DetectCoreDirectoryFragment.CoreItem	access:public	signature:(String title, String subtitle)
CoreItem	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private static final class CoreItem$/;"	c	class:DetectCoreDirectoryFragment	access:private
CoreManagerActivity	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^public final class CoreManagerActivity extends ActionBarActivity implements TabListener$/;"	c	inherits:ActionBarActivity,TabListener
CoreManagerActivity.ViewPagerAdapter	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private final class ViewPagerAdapter extends FragmentPagerAdapter$/;"	c	class:CoreManagerActivity	inherits:FragmentPagerAdapter	access:private
CoreManagerActivity.ViewPagerAdapter.ViewPagerAdapter	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public ViewPagerAdapter(FragmentManager fm)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(FragmentManager fm)
CoreManagerActivity.ViewPagerAdapter.getCount	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public int getCount()$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:()
CoreManagerActivity.ViewPagerAdapter.getItem	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public Fragment getItem(int position)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(int position)
CoreManagerActivity.ViewPagerAdapter.getPageTitle	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public CharSequence getPageTitle(int position)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(int position)
CoreManagerActivity.onBackPressed	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onBackPressed()$/;"	m	class:CoreManagerActivity	access:public	signature:()
CoreManagerActivity.onCreate	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:CoreManagerActivity	access:public	signature:(Bundle savedInstanceState)
CoreManagerActivity.onTabReselected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabReselected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
CoreManagerActivity.onTabSelected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabSelected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
CoreManagerActivity.onTabUnselected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabUnselected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
CoreManagerActivity.returnBackStackImmediate	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private boolean returnBackStackImmediate(FragmentManager fm)$/;"	m	class:CoreManagerActivity	file:	access:private	signature:(FragmentManager fm)
CoreManagerActivity.viewPager	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private ViewPager viewPager;$/;"	f	class:CoreManagerActivity	file:	access:private
CoreSelection	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^public final class CoreSelection extends DialogFragment$/;"	c	inherits:DialogFragment
CoreSelection.adapter	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	private IconAdapter<ModuleWrapper> adapter;$/;"	f	class:CoreSelection	file:	access:private
CoreSelection.newInstance	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	public static CoreSelection newInstance()$/;"	m	class:CoreSelection	access:public	signature:()
CoreSelection.onClickListener	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	private final OnItemClickListener onClickListener = new OnItemClickListener()$/;"	f	class:CoreSelection	file:	access:private
CoreSelection.onCreateView	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:CoreSelection	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
CoreSelectionAdapter	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public CoreSelectionAdapter(Context context, int resourceId)$/;"	m	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	access:public	signature:(Context context, int resourceId)
CoreSelectionAdapter	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private static final class CoreSelectionAdapter extends ArrayAdapter<CoreItem>$/;"	c	class:DetectCoreDirectoryFragment	inherits:ArrayAdapter	access:private
Corrupted	tools/retrolaunch/sha1.h	/^    int Corrupted;              \/* Is the message digest corruped?  *\/$/;"	m	struct:SHA1Context	access:public
CpuList	performance/performance_android.c	/^} CpuList;$/;"	t	typeref:struct:__anon97	file:
Create	xdk/xdk_resources.cpp	/^HRESULT PackedResource::Create( const char *strFilename,$/;"	f	class:PackedResource	signature:( const char *strFilename, DWORD dwNumResourceTags, XBRESOURCE* pResourceTags)
Create	xdk/xdk_resources.h	/^      HRESULT Create( const char * strFilename );$/;"	p	class:PackedResource	access:public	signature:( const char * strFilename )
Create	xdk/xdk_resources.h	/^      HRESULT Create( const char *strFilename, DWORD dwNumResourceTags = 0L, $/;"	p	class:PackedResource	access:public	signature:( const char *strFilename, DWORD dwNumResourceTags = 0L, XBRESOURCE* pResourceTags = NULL )
CtrlFreeArg	ps3/image.c	/^typedef struct CtrlFreeArg$/;"	s	file:
CtrlFreeArg	ps3/image.c	/^} CtrlFreeArg;$/;"	t	typeref:struct:CtrlFreeArg	file:
CtrlFreeArg::freeCallCounts	ps3/image.c	/^   uint32_t freeCallCounts;$/;"	m	struct:CtrlFreeArg	file:	access:public
CtrlMallocArg	ps3/image.c	/^typedef struct CtrlMallocArg$/;"	s	file:
CtrlMallocArg	ps3/image.c	/^} CtrlMallocArg;$/;"	t	typeref:struct:CtrlMallocArg	file:
CtrlMallocArg::mallocCallCounts	ps3/image.c	/^   uint32_t mallocCallCounts;$/;"	m	struct:CtrlMallocArg	file:	access:public
CtrlReadBufferPositive	psp/sdk_defines.h	78;"	d
CtrlReadBufferPositive	psp/sdk_defines.h	93;"	d
CurrentImageUnit	ps3/rgl/include/RGL/Types.h	/^      rglTextureImageUnit* CurrentImageUnit;$/;"	m	struct:RGLcontext	access:public
CurrentIrql	frontend/platform/platform_xdk.h	/^	KIRQL CurrentIrql;$/;"	m	struct:_FS_STRUCTURE	access:public
D3DFVF_CUSTOMVERTEX	xdk/xdk_d3d.h	31;"	d
D3DLOCK_NOSYSLOCK	xdk/xdk_defines.h	58;"	d
D3DSAMP_ADDRESSU	xdk/xdk_defines.h	60;"	d
D3DSAMP_ADDRESSV	xdk/xdk_defines.h	61;"	d
D3DSAMP_MAGFILTER	xdk/xdk_defines.h	62;"	d
D3DSAMP_MINFILTER	xdk/xdk_defines.h	63;"	d
D3DVERTEXELEMENT	xdk/xdk_defines.h	34;"	d
D3DVERTEXELEMENT	xdk/xdk_defines.h	77;"	d
D3DVIDEO_HPP__	gfx/d3d9/d3d9.hpp	17;"	d
D3DVIEWPORT	xdk/xdk_defines.h	33;"	d
D3DVIEWPORT	xdk/xdk_defines.h	76;"	d
D3DVideo	gfx/d3d9/d3d9.cpp	/^D3DVideo::D3DVideo(const video_info_t *info) :$/;"	f	class:D3DVideo	signature:(const video_info_t *info)
D3DVideo	gfx/d3d9/d3d9.hpp	/^      D3DVideo(const video_info_t* info);$/;"	p	class:D3DVideo	access:public	signature:(const video_info_t* info)
D3DVideo	gfx/d3d9/d3d9.hpp	/^class D3DVideo$/;"	c
D3DVideo::D3DVideo	gfx/d3d9/d3d9.cpp	/^D3DVideo::D3DVideo(const video_info_t *info) :$/;"	f	class:D3DVideo	signature:(const video_info_t *info)
D3DVideo::D3DVideo	gfx/d3d9/d3d9.hpp	/^      D3DVideo(const video_info_t* info);$/;"	p	class:D3DVideo	access:public	signature:(const video_info_t* info)
D3DVideo::alive	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::alive()$/;"	f	class:D3DVideo	signature:()
D3DVideo::alive	gfx/d3d9/d3d9.hpp	/^      bool alive();$/;"	p	class:D3DVideo	access:public	signature:()
D3DVideo::calculate_rect	gfx/d3d9/d3d9.cpp	/^void D3DVideo::calculate_rect(unsigned width, unsigned height,$/;"	f	class:D3DVideo	signature:(unsigned width, unsigned height, bool keep, float desired_aspect)
D3DVideo::calculate_rect	gfx/d3d9/d3d9.hpp	/^      void calculate_rect(unsigned width, unsigned height, bool keep, float aspect);$/;"	p	class:D3DVideo	access:private	signature:(unsigned width, unsigned height, bool keep, float aspect)
D3DVideo::cgCtx	gfx/d3d9/d3d9.hpp	/^      CGcontext cgCtx;$/;"	m	class:D3DVideo	access:private
D3DVideo::cg_shader	gfx/d3d9/d3d9.hpp	/^      std::string cg_shader;$/;"	m	class:D3DVideo	access:private
D3DVideo::chain	gfx/d3d9/d3d9.hpp	/^      std::unique_ptr<RenderChain> chain;$/;"	m	class:D3DVideo	access:private
D3DVideo::deinit	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit()$/;"	f	class:D3DVideo	signature:()
D3DVideo::deinit	gfx/d3d9/d3d9.hpp	/^      void deinit();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::deinit_cg	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_cg()$/;"	f	class:D3DVideo	signature:()
D3DVideo::deinit_cg	gfx/d3d9/d3d9.hpp	/^      void deinit_cg();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::deinit_chain	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_chain()$/;"	f	class:D3DVideo	signature:()
D3DVideo::deinit_chain	gfx/d3d9/d3d9.hpp	/^      void deinit_chain();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::deinit_font	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_font()$/;"	f	class:D3DVideo	signature:()
D3DVideo::deinit_font	gfx/d3d9/d3d9.hpp	/^      void deinit_font();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::dev	gfx/d3d9/d3d9.hpp	/^      IDirect3DDevice9 *dev;$/;"	m	class:D3DVideo	access:private
D3DVideo::final_viewport	gfx/d3d9/d3d9.hpp	/^      D3DVIEWPORT9 final_viewport;$/;"	m	class:D3DVideo	access:private
D3DVideo::focus	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::focus() const$/;"	f	class:D3DVideo	signature:() const
D3DVideo::focus	gfx/d3d9/d3d9.hpp	/^      bool focus() const;$/;"	p	class:D3DVideo	access:public	signature:() const
D3DVideo::font	gfx/d3d9/d3d9.hpp	/^      LPD3DXFONT font;$/;"	m	class:D3DVideo	access:private
D3DVideo::font_color	gfx/d3d9/d3d9.hpp	/^      uint32_t font_color;$/;"	m	class:D3DVideo	access:private
D3DVideo::font_rect	gfx/d3d9/d3d9.hpp	/^      RECT font_rect;$/;"	m	class:D3DVideo	access:private
D3DVideo::font_rect_shifted	gfx/d3d9/d3d9.hpp	/^      RECT font_rect_shifted;$/;"	m	class:D3DVideo	access:private
D3DVideo::frame	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::frame(const void *frame,$/;"	f	class:D3DVideo	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
D3DVideo::frame	gfx/d3d9/d3d9.hpp	/^      bool frame(const void* frame,$/;"	p	class:D3DVideo	access:public	signature:(const void* frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
D3DVideo::free_overlay	gfx/d3d9/d3d9.cpp	/^void D3DVideo::free_overlay(overlay_t &overlay)$/;"	f	class:D3DVideo	signature:(overlay_t &overlay)
D3DVideo::free_overlay	gfx/d3d9/d3d9.hpp	/^      void free_overlay(overlay_t &overlay);$/;"	p	class:D3DVideo	access:private	signature:(overlay_t &overlay)
D3DVideo::free_overlays	gfx/d3d9/d3d9.cpp	/^void D3DVideo::free_overlays()$/;"	f	class:D3DVideo	signature:()
D3DVideo::free_overlays	gfx/d3d9/d3d9.hpp	/^      void free_overlays();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::g_pD3D	gfx/d3d9/d3d9.hpp	/^      IDirect3D9 *g_pD3D;$/;"	m	class:D3DVideo	access:private
D3DVideo::hWnd	gfx/d3d9/d3d9.hpp	/^      HWND hWnd;$/;"	m	class:D3DVideo	access:private
D3DVideo::info	gfx/d3d9/d3d9.hpp	/^      inline video_info_t& info() { return video_info; }$/;"	f	class:D3DVideo	access:public	signature:()
D3DVideo::init	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init(const video_info_t &info)$/;"	f	class:D3DVideo	signature:(const video_info_t &info)
D3DVideo::init	gfx/d3d9/d3d9.hpp	/^      void init(const video_info_t &info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info)
D3DVideo::init_base	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_base(const video_info_t &info)$/;"	f	class:D3DVideo	signature:(const video_info_t &info)
D3DVideo::init_base	gfx/d3d9/d3d9.hpp	/^      void init_base(const video_info_t &info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info)
D3DVideo::init_cg	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_cg()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_cg	gfx/d3d9/d3d9.hpp	/^      bool init_cg();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::init_chain	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_chain(const video_info_t &video_info)$/;"	f	class:D3DVideo	signature:(const video_info_t &video_info)
D3DVideo::init_chain	gfx/d3d9/d3d9.hpp	/^      bool init_chain(const video_info_t &video_info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &video_info)
D3DVideo::init_font	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_font()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_font	gfx/d3d9/d3d9.hpp	/^      bool init_font();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::init_imports	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_imports()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_imports	gfx/d3d9/d3d9.hpp	/^      void init_imports();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::init_luts	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_luts()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_luts	gfx/d3d9/d3d9.hpp	/^      void init_luts();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::init_multipass	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_multipass()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_multipass	gfx/d3d9/d3d9.hpp	/^      void init_multipass();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::init_singlepass	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_singlepass()$/;"	f	class:D3DVideo	signature:()
D3DVideo::init_singlepass	gfx/d3d9/d3d9.hpp	/^      void init_singlepass();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::make_d3dpp	gfx/d3d9/d3d9.cpp	/^void D3DVideo::make_d3dpp(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)$/;"	f	class:D3DVideo	signature:(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)
D3DVideo::make_d3dpp	gfx/d3d9/d3d9.hpp	/^      void make_d3dpp(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)
D3DVideo::monitor_rect	gfx/d3d9/d3d9.cpp	/^RECT D3DVideo::monitor_rect()$/;"	f	class:D3DVideo	signature:()
D3DVideo::monitor_rect	gfx/d3d9/d3d9.hpp	/^      RECT monitor_rect();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::needs_restore	gfx/d3d9/d3d9.hpp	/^      bool needs_restore;$/;"	m	class:D3DVideo	access:private
D3DVideo::overlay_enable	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_enable(bool state)$/;"	f	class:D3DVideo	signature:(bool state)
D3DVideo::overlay_enable	gfx/d3d9/d3d9.hpp	/^      void overlay_enable(bool state);$/;"	p	class:D3DVideo	access:public	signature:(bool state)
D3DVideo::overlay_full_screen	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_full_screen(bool enable)$/;"	f	class:D3DVideo	signature:(bool enable)
D3DVideo::overlay_full_screen	gfx/d3d9/d3d9.hpp	/^      void overlay_full_screen(bool enable);$/;"	p	class:D3DVideo	access:public	signature:(bool enable)
D3DVideo::overlay_load	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::overlay_load(const video_overlay_image *images, unsigned num_images)$/;"	f	class:D3DVideo	signature:(const video_overlay_image *images, unsigned num_images)
D3DVideo::overlay_load	gfx/d3d9/d3d9.hpp	/^      bool overlay_load(const video_overlay_image *images, unsigned num_images);$/;"	p	class:D3DVideo	access:public	signature:(const video_overlay_image *images, unsigned num_images)
D3DVideo::overlay_render	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_render(overlay_t &overlay)$/;"	f	class:D3DVideo	signature:(overlay_t &overlay)
D3DVideo::overlay_render	gfx/d3d9/d3d9.hpp	/^      void overlay_render(overlay_t &overlay);$/;"	p	class:D3DVideo	access:public	signature:(overlay_t &overlay)
D3DVideo::overlay_set_alpha	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_set_alpha(unsigned index, float mod)$/;"	f	class:D3DVideo	signature:(unsigned index, float mod)
D3DVideo::overlay_set_alpha	gfx/d3d9/d3d9.hpp	/^      void overlay_set_alpha(unsigned index, float mod);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float mod)
D3DVideo::overlay_tex_geom	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_tex_geom(unsigned index, float x, float y, float w, float h)$/;"	f	class:D3DVideo	signature:(unsigned index, float x, float y, float w, float h)
D3DVideo::overlay_tex_geom	gfx/d3d9/d3d9.hpp	/^      void overlay_tex_geom(unsigned index, float x, float y, float w, float h);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float x, float y, float w, float h)
D3DVideo::overlay_vertex_geom	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_vertex_geom(unsigned index, float x, float y, float w, float h)$/;"	f	class:D3DVideo	signature:(unsigned index, float x, float y, float w, float h)
D3DVideo::overlay_vertex_geom	gfx/d3d9/d3d9.hpp	/^      void overlay_vertex_geom(unsigned index, float x, float y, float w, float h);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float x, float y, float w, float h)
D3DVideo::overlays	gfx/d3d9/d3d9.hpp	/^      std::vector<overlay_t> overlays;$/;"	m	class:D3DVideo	access:private
D3DVideo::overlays_enabled	gfx/d3d9/d3d9.hpp	/^      bool overlays_enabled;$/;"	m	class:D3DVideo	access:private
D3DVideo::process	gfx/d3d9/d3d9.cpp	/^void D3DVideo::process()$/;"	f	class:D3DVideo	signature:()
D3DVideo::process	gfx/d3d9/d3d9.hpp	/^      void process();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::process_shader	gfx/d3d9/d3d9.cpp	/^void D3DVideo::process_shader()$/;"	f	class:D3DVideo	signature:()
D3DVideo::process_shader	gfx/d3d9/d3d9.hpp	/^      void process_shader();$/;"	p	class:D3DVideo	access:public	signature:()
D3DVideo::read_viewport	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::read_viewport(uint8_t *buffer)$/;"	f	class:D3DVideo	signature:(uint8_t *buffer)
D3DVideo::read_viewport	gfx/d3d9/d3d9.hpp	/^      bool read_viewport(uint8_t *buffer);$/;"	p	class:D3DVideo	access:public	signature:(uint8_t *buffer)
D3DVideo::recompute_pass_sizes	gfx/d3d9/d3d9.cpp	/^void D3DVideo::recompute_pass_sizes()$/;"	f	class:D3DVideo	signature:()
D3DVideo::recompute_pass_sizes	gfx/d3d9/d3d9.hpp	/^      void recompute_pass_sizes();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::render_msg	gfx/d3d9/d3d9.cpp	/^void D3DVideo::render_msg(const char *msg, font_params_t *params)$/;"	f	class:D3DVideo	signature:(const char *msg, font_params_t *params)
D3DVideo::render_msg	gfx/d3d9/d3d9.hpp	/^      void render_msg(const char *msg, font_params_t *params = nullptr);$/;"	p	class:D3DVideo	access:public	signature:(const char *msg, font_params_t *params = nullptr)
D3DVideo::resize	gfx/d3d9/d3d9.cpp	/^void D3DVideo::resize(unsigned new_width, unsigned new_height)$/;"	f	class:D3DVideo	signature:(unsigned new_width, unsigned new_height)
D3DVideo::resize	gfx/d3d9/d3d9.hpp	/^      void resize(unsigned new_width, unsigned new_height);$/;"	p	class:D3DVideo	access:public	signature:(unsigned new_width, unsigned new_height)
D3DVideo::restore	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::restore()$/;"	f	class:D3DVideo	signature:()
D3DVideo::restore	gfx/d3d9/d3d9.hpp	/^      bool restore();$/;"	p	class:D3DVideo	access:public	signature:()
D3DVideo::rgui	gfx/d3d9/d3d9.hpp	/^      overlay_t rgui;$/;"	m	class:D3DVideo	access:private
D3DVideo::rotation	gfx/d3d9/d3d9.hpp	/^      unsigned rotation;$/;"	m	class:D3DVideo	access:private
D3DVideo::screen_height	gfx/d3d9/d3d9.hpp	/^      unsigned screen_height;$/;"	m	class:D3DVideo	access:private
D3DVideo::screen_width	gfx/d3d9/d3d9.hpp	/^      unsigned screen_width;$/;"	m	class:D3DVideo	access:private
D3DVideo::set_filtering	gfx/d3d9/d3d9.hpp	/^      void set_filtering(unsigned index, bool smooth);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, bool smooth)
D3DVideo::set_font_rect	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_font_rect(font_params_t *params)$/;"	f	class:D3DVideo	signature:(font_params_t *params)
D3DVideo::set_font_rect	gfx/d3d9/d3d9.hpp	/^      void set_font_rect(font_params_t *params);$/;"	p	class:D3DVideo	access:public	signature:(font_params_t *params)
D3DVideo::set_nonblock_state	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_nonblock_state(bool state)$/;"	f	class:D3DVideo	signature:(bool state)
D3DVideo::set_nonblock_state	gfx/d3d9/d3d9.hpp	/^      void set_nonblock_state(bool state);$/;"	p	class:D3DVideo	access:public	signature:(bool state)
D3DVideo::set_rgui_texture_enable	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rgui_texture_enable(bool state, bool fullscreen)$/;"	f	class:D3DVideo	signature:(bool state, bool fullscreen)
D3DVideo::set_rgui_texture_enable	gfx/d3d9/d3d9.hpp	/^      void set_rgui_texture_enable(bool state, bool fullscreen);$/;"	p	class:D3DVideo	access:public	signature:(bool state, bool fullscreen)
D3DVideo::set_rgui_texture_frame	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rgui_texture_frame(const void *frame,$/;"	f	class:D3DVideo	signature:(const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
D3DVideo::set_rgui_texture_frame	gfx/d3d9/d3d9.hpp	/^      void set_rgui_texture_frame(const void *frame,$/;"	p	class:D3DVideo	access:public	signature:(const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
D3DVideo::set_rotation	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rotation(unsigned rot)$/;"	f	class:D3DVideo	signature:(unsigned rot)
D3DVideo::set_rotation	gfx/d3d9/d3d9.hpp	/^      void set_rotation(unsigned rot);$/;"	p	class:D3DVideo	access:public	signature:(unsigned rot)
D3DVideo::set_shader	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::set_shader(const std::string &path)$/;"	f	class:D3DVideo	signature:(const std::string &path)
D3DVideo::set_shader	gfx/d3d9/d3d9.hpp	/^      bool set_shader(const std::string &path);$/;"	p	class:D3DVideo	access:public	signature:(const std::string &path)
D3DVideo::set_viewport	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_viewport(int x, int y, unsigned width, unsigned height)$/;"	f	class:D3DVideo	signature:(int x, int y, unsigned width, unsigned height)
D3DVideo::set_viewport	gfx/d3d9/d3d9.hpp	/^      void set_viewport(int x, int y, unsigned width, unsigned height);$/;"	p	class:D3DVideo	access:private	signature:(int x, int y, unsigned width, unsigned height)
D3DVideo::shader	gfx/d3d9/d3d9.hpp	/^      struct gfx_shader shader;$/;"	m	class:D3DVideo	typeref:struct:D3DVideo::gfx_shader	access:private
D3DVideo::should_resize	gfx/d3d9/d3d9.hpp	/^      bool should_resize;$/;"	m	class:D3DVideo	access:public
D3DVideo::update_title	gfx/d3d9/d3d9.cpp	/^void D3DVideo::update_title()$/;"	f	class:D3DVideo	signature:()
D3DVideo::update_title	gfx/d3d9/d3d9.hpp	/^      void update_title();$/;"	p	class:D3DVideo	access:private	signature:()
D3DVideo::video_info	gfx/d3d9/d3d9.hpp	/^      video_info_t video_info;$/;"	m	class:D3DVideo	access:private
D3DVideo::viewport_info	gfx/d3d9/d3d9.cpp	/^void D3DVideo::viewport_info(rarch_viewport &vp)$/;"	f	class:D3DVideo	signature:(rarch_viewport &vp)
D3DVideo::viewport_info	gfx/d3d9/d3d9.hpp	/^      void viewport_info(rarch_viewport &vp);$/;"	p	class:D3DVideo	access:public	signature:(rarch_viewport &vp)
D3DVideo::windowClass	gfx/d3d9/d3d9.hpp	/^      WNDCLASSEX windowClass;$/;"	m	class:D3DVideo	access:private
D3DVideo::~D3DVideo	gfx/d3d9/d3d9.cpp	/^D3DVideo::~D3DVideo()$/;"	f	class:D3DVideo	signature:()
D3DVideo::~D3DVideo	gfx/d3d9/d3d9.hpp	/^      ~D3DVideo();$/;"	p	class:D3DVideo	access:public	signature:()
DAEMON_EVENT_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	55;"	d
DEADZONE	xdk/xdk_xinput_input.c	25;"	d	file:
DEADZONE_HIGH	ps3/ps3_input.c	43;"	d	file:
DEADZONE_LOW	ps3/ps3_input.c	42;"	d	file:
DEBUG_CALLBACK_TYPE	gfx/gl.c	1887;"	d	file:
DEBUG_CALLBACK_TYPE	gfx/gl.c	1889;"	d	file:
DECLARE_BIND	input/input_common.c	804;"	d	file:
DECLARE_C_TYPES	ps3/rgl/src/rgl_ps3.cpp	3345;"	d	file:
DECLARE_INTERFACE	audio/xaudio-c/xaudio.h	/^DECLARE_INTERFACE(IXAudio2Voice)$/;"	f	signature:(IXAudio2Voice)
DECLARE_INTERFACE	audio/xaudio-c/xaudio.h	/^DECLARE_INTERFACE(IXAudio2VoiceCallback)$/;"	f	signature:(IXAudio2VoiceCallback)
DECLARE_INTERFACE_	audio/xaudio-c/xaudio.h	/^DECLARE_INTERFACE_(IXAudio2, IUnknown)$/;"	f	signature:(IXAudio2, IUnknown)
DECLARE_INTERFACE_	audio/xaudio-c/xaudio.h	/^DECLARE_INTERFACE_(IXAudio2MasteringVoice, IXAudio2Voice)$/;"	f	signature:(IXAudio2MasteringVoice, IXAudio2Voice)
DECLARE_INTERFACE_	audio/xaudio-c/xaudio.h	/^DECLARE_INTERFACE_(IXAudio2SourceVoice, IXAudio2Voice)$/;"	f	signature:(IXAudio2SourceVoice, IXAudio2Voice)
DECLARE_META_BIND	input/input_common.c	805;"	d	file:
DECLARE_PACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3444;"	d	file:
DECLARE_PACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3448;"	d	file:
DECLARE_PACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3467;"	d	file:
DECLARE_PACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3471;"	d	file:
DECLARE_PACKED_TYPES	ps3/rgl/src/rgl_ps3.cpp	3366;"	d	file:
DECLARE_PACKED_TYPE_AND_REALTYPE	ps3/rgl/src/rgl_ps3.cpp	3408;"	d	file:
DECLARE_PACKED_TYPE_AND_REV_2	ps3/rgl/src/rgl_ps3.cpp	3396;"	d	file:
DECLARE_PACKED_TYPE_AND_REV_3	ps3/rgl/src/rgl_ps3.cpp	3400;"	d	file:
DECLARE_PACKED_TYPE_AND_REV_4	ps3/rgl/src/rgl_ps3.cpp	3404;"	d	file:
DECLARE_TYPE	ps3/rgl/src/rgl_ps3.cpp	3381;"	d	file:
DECLARE_TYPE	ps3/rgl/src/rgl_ps3.cpp	3386;"	d	file:
DECLARE_UNPACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3450;"	d	file:
DECLARE_UNPACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3454;"	d	file:
DECLARE_UNPACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3473;"	d	file:
DECLARE_UNPACKED_TYPE	ps3/rgl/src/rgl_ps3.cpp	3478;"	d	file:
DECLARE_UNPACKED_TYPES	ps3/rgl/src/rgl_ps3.cpp	3354;"	d	file:
DECL_ATTR_RETRO	gfx/py_state/py_state.c	136;"	d	file:
DECL_AXIS	input/autoconf/builtin.h	21;"	d
DECL_BTN	input/autoconf/builtin.h	20;"	d
DECL_FVF_COLOR	gfx/d3d9/render_chain.cpp	995;"	d	file:
DECL_FVF_POSITION	gfx/d3d9/render_chain.cpp	989;"	d	file:
DECL_FVF_TEXCOORD	gfx/d3d9/render_chain.cpp	992;"	d	file:
DEFAULT_ASPECT_RATIO	config.def.h	225;"	d
DEFAULT_ASPECT_RATIO	config.def.h	227;"	d
DEFAULT_ASPECT_RATIO	config.def.h	229;"	d
DEFAULT_CPU_FAMILY	performance/performance_android.c	65;"	d	file:
DEFAULT_CPU_FAMILY	performance/performance_android.c	67;"	d	file:
DEFAULT_CPU_FAMILY	performance/performance_android.c	69;"	d	file:
DEFAULT_EXE_EXT	file_ext.h	33;"	d
DEFAULT_EXE_EXT	file_ext.h	37;"	d
DEFAULT_EXE_EXT	file_ext.h	42;"	d
DEFAULT_EXE_EXT	file_ext.h	47;"	d
DEFAULT_EXT	retroarch.c	2840;"	d	file:
DEFAULT_EXT	retroarch.c	2842;"	d	file:
DEFAULT_FIFO_BLOCK_SIZE	ps3/rgl/src/include/rgl-constants.h	310;"	d
DEFAULT_GAMMA	config.def.h	237;"	d
DEFAULT_GAMMA	config.def.h	239;"	d
DEFAULT_KEYCODE	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private final int DEFAULT_KEYCODE = 0;$/;"	f	class:KeyBindPreference	file:	access:private
DEFAULT_ME_YO	apple/common/setting_data.c	302;"	d	file:
DEFAULT_NETWORK_CMD_PORT	command.c	35;"	d	file:
DEFAULT_OSS_DEV	audio/oss.c	37;"	d	file:
DEFAULT_OSS_DEV	audio/oss.c	39;"	d	file:
DEFAULT_SAMPLING_MODE	psp/sdk_defines.h	63;"	d
DEFAULT_SAMPLING_MODE	psp/sdk_defines.h	91;"	d
DEFAULT_SHADER_TYPE	driver.h	144;"	d
DEFAULT_SHADER_TYPE	driver.h	146;"	d
DEFAULT_SHADER_TYPE	driver.h	148;"	d
DEFAULT_SHADER_TYPE	driver.h	150;"	d
DEFAULT_SHADER_TYPE	driver.h	152;"	d
DEFINES	Makefile	/^DEFINES = -DHAVE_CONFIG_H -DHAVE_SCREENSHOTS -DRARCH_INTERNAL $/;"	m
DEFINES	libretro-test-gl/Makefile	/^   DEFINES := -DIOS$/;"	m
DEFINES	libretro-test/Makefile	/^	DEFINES := -DIOS$/;"	m
DEFINE_BASIC_SETTING_TYPE	apple/common/setting_data.c	/^DEFINE_BASIC_SETTING_TYPE(bool, bool, boolean, ST_BOOL)$/;"	f
DEFINE_BASIC_SETTING_TYPE	apple/common/setting_data.c	248;"	d	file:
DEFINE_CLSID	audio/xaudio-c/xaudio.h	29;"	d
DEFINE_CLSID_X	audio/xaudio-c/xaudio.h	50;"	d
DEFINE_GUID_X	audio/xaudio-c/xaudio.h	48;"	d
DEFINE_IID	audio/xaudio-c/xaudio.h	31;"	d
DEFINE_IID_X	audio/xaudio-c/xaudio.h	52;"	d
DEVICE_ARCHOS_GAMEPAD	driver.h	/^   DEVICE_ARCHOS_GAMEPAD,$/;"	e	enum:input_devices
DEVICE_BROADCOM_BLUETOOTH_HID	driver.h	/^   DEVICE_BROADCOM_BLUETOOTH_HID,$/;"	e	enum:input_devices
DEVICE_BUFFALO_BGC_FC801	driver.h	/^   DEVICE_BUFFALO_BGC_FC801,$/;"	e	enum:input_devices
DEVICE_CCPCREATIONS_WIIUSE_IME	driver.h	/^   DEVICE_CCPCREATIONS_WIIUSE_IME,$/;"	e	enum:input_devices
DEVICE_CYPRESS_USB	driver.h	/^   DEVICE_CYPRESS_USB,$/;"	e	enum:input_devices
DEVICE_DEFENDER_GAME_RACER_CLASSIC	driver.h	/^   DEVICE_DEFENDER_GAME_RACER_CLASSIC,$/;"	e	enum:input_devices
DEVICE_DRAGONRISE	driver.h	/^   DEVICE_DRAGONRISE,$/;"	e	enum:input_devices
DEVICE_FC30_GAMEPAD	driver.h	/^   DEVICE_FC30_GAMEPAD,$/;"	e	enum:input_devices
DEVICE_GAMEMID	driver.h	/^   DEVICE_GAMEMID,$/;"	e	enum:input_devices
DEVICE_GENERIC_PLAYSTATION2_CONVERTER	driver.h	/^   DEVICE_GENERIC_PLAYSTATION2_CONVERTER,$/;"	e	enum:input_devices
DEVICE_GENIUS_MAXFIRE_G08XU	driver.h	/^   DEVICE_GENIUS_MAXFIRE_G08XU,$/;"	e	enum:input_devices
DEVICE_HOLTEK_JC_U912F	driver.h	/^   DEVICE_HOLTEK_JC_U912F,$/;"	e	enum:input_devices
DEVICE_HUIJIA_USB_SNES	driver.h	/^   DEVICE_HUIJIA_USB_SNES,$/;"	e	enum:input_devices
DEVICE_ICONTROLPAD_BLUEZ_IME	driver.h	/^   DEVICE_ICONTROLPAD_BLUEZ_IME,$/;"	e	enum:input_devices
DEVICE_ICONTROLPAD_HID_JOYSTICK	driver.h	/^   DEVICE_ICONTROLPAD_HID_JOYSTICK,$/;"	e	enum:input_devices
DEVICE_IDROID_CON	driver.h	/^   DEVICE_IDROID_CON,$/;"	e	enum:input_devices
DEVICE_IDROID_X360	driver.h	/^   DEVICE_IDROID_X360,$/;"	e	enum:input_devices
DEVICE_JCPS102_PLAYSTATION2	driver.h	/^   DEVICE_JCPS102_PLAYSTATION2,$/;"	e	enum:input_devices
DEVICE_JXD_S5110	driver.h	/^   DEVICE_JXD_S5110,$/;"	e	enum:input_devices
DEVICE_JXD_S5110_SKELROM	driver.h	/^   DEVICE_JXD_S5110_SKELROM,$/;"	e	enum:input_devices
DEVICE_JXD_S7300B	driver.h	/^   DEVICE_JXD_S7300B,$/;"	e	enum:input_devices
DEVICE_JXD_S7800B	driver.h	/^   DEVICE_JXD_S7800B,$/;"	e	enum:input_devices
DEVICE_KEYBOARD_RETROPAD	driver.h	/^   DEVICE_KEYBOARD_RETROPAD,$/;"	e	enum:input_devices
DEVICE_LAST	driver.h	/^   DEVICE_LAST$/;"	e	enum:input_devices
DEVICE_LOGICOOL_RUMBLEPAD2	driver.h	/^   DEVICE_LOGICOOL_RUMBLEPAD2,$/;"	e	enum:input_devices
DEVICE_LOGITECH_DUAL_ACTION	driver.h	/^   DEVICE_LOGITECH_DUAL_ACTION,$/;"	e	enum:input_devices
DEVICE_LOGITECH_PRECISION_GAMEPAD	driver.h	/^   DEVICE_LOGITECH_PRECISION_GAMEPAD,$/;"	e	enum:input_devices
DEVICE_LOGITECH_RUMBLEPAD2	driver.h	/^   DEVICE_LOGITECH_RUMBLEPAD2,$/;"	e	enum:input_devices
DEVICE_MADCATZ_PC_USB_STICK	driver.h	/^   DEVICE_MADCATZ_PC_USB_STICK,$/;"	e	enum:input_devices
DEVICE_MAYFLASH_WII_CLASSIC	driver.h	/^   DEVICE_MAYFLASH_WII_CLASSIC,$/;"	e	enum:input_devices
DEVICE_MOGA	driver.h	/^   DEVICE_MOGA,$/;"	e	enum:input_devices
DEVICE_MOGA_IME	driver.h	/^   DEVICE_MOGA_IME,$/;"	e	enum:input_devices
DEVICE_MS_SIDEWINDER	driver.h	/^   DEVICE_MS_SIDEWINDER,$/;"	e	enum:input_devices
DEVICE_MS_SIDEWINDER_DUAL_STRIKE	driver.h	/^   DEVICE_MS_SIDEWINDER_DUAL_STRIKE,$/;"	e	enum:input_devices
DEVICE_MS_XBOX	driver.h	/^   DEVICE_MS_XBOX,$/;"	e	enum:input_devices
DEVICE_MUCH_IREADGO_I5	driver.h	/^   DEVICE_MUCH_IREADGO_I5,$/;"	e	enum:input_devices
DEVICE_NAME_LEN	apple/iOS/bluetooth/btstack/utils.h	69;"	d
DEVICE_NONE	driver.h	/^   DEVICE_NONE = 0,$/;"	e	enum:input_devices
DEVICE_NVIDIA_SHIELD	driver.h	/^   DEVICE_NVIDIA_SHIELD,$/;"	e	enum:input_devices
DEVICE_NYKO_PLAYPAD_PRO	driver.h	/^   DEVICE_NYKO_PLAYPAD_PRO,$/;"	e	enum:input_devices
DEVICE_OBJECT	frontend/platform/platform_xdk.h	/^} DEVICE_OBJECT;$/;"	t	typeref:struct:_DEVICE_OBJECT
DEVICE_ONLIVE_WIRELESS_CONTROLLER	driver.h	/^   DEVICE_ONLIVE_WIRELESS_CONTROLLER,$/;"	e	enum:input_devices
DEVICE_OUYA	driver.h	/^   DEVICE_OUYA,$/;"	e	enum:input_devices
DEVICE_PLAYSTATION3_VERSION1	driver.h	/^   DEVICE_PLAYSTATION3_VERSION1,$/;"	e	enum:input_devices
DEVICE_PLAYSTATION3_VERSION2	driver.h	/^   DEVICE_PLAYSTATION3_VERSION2,$/;"	e	enum:input_devices
DEVICE_PSMOVE_NAVI	driver.h	/^   DEVICE_PSMOVE_NAVI,$/;"	e	enum:input_devices
DEVICE_RETROUSB_RETROPAD	driver.h	/^   DEVICE_RETROUSB_RETROPAD,$/;"	e	enum:input_devices
DEVICE_RETROUSB_SNES_RETROPORT	driver.h	/^   DEVICE_RETROUSB_SNES_RETROPORT,$/;"	e	enum:input_devices
DEVICE_SAITEK_RUMBLE_P480	driver.h	/^   DEVICE_SAITEK_RUMBLE_P480,$/;"	e	enum:input_devices
DEVICE_SEGA_VIRTUA_STICK_HIGH_GRADE	driver.h	/^   DEVICE_SEGA_VIRTUA_STICK_HIGH_GRADE,$/;"	e	enum:input_devices
DEVICE_SUPER_SMARTJOY	driver.h	/^   DEVICE_SUPER_SMARTJOY,$/;"	e	enum:input_devices
DEVICE_SZMY_POWER_DUAL_BOX_WII	driver.h	/^   DEVICE_SZMY_POWER_DUAL_BOX_WII,$/;"	e	enum:input_devices
DEVICE_THRUSTMASTER_T_MINI	driver.h	/^   DEVICE_THRUSTMASTER_T_MINI,$/;"	e	enum:input_devices
DEVICE_THRUST_PREDATOR	driver.h	/^   DEVICE_THRUST_PREDATOR,$/;"	e	enum:input_devices
DEVICE_TOMEE_NES_USB	driver.h	/^   DEVICE_TOMEE_NES_USB,$/;"	e	enum:input_devices
DEVICE_TOMMO_NEOGEOX_ARCADE	driver.h	/^   DEVICE_TOMMO_NEOGEOX_ARCADE,$/;"	e	enum:input_devices
DEVICE_TOODLES_2008_CHIMP	driver.h	/^   DEVICE_TOODLES_2008_CHIMP,$/;"	e	enum:input_devices
DEVICE_TTT_THT_ARCADE	driver.h	/^   DEVICE_TTT_THT_ARCADE,$/;"	e	enum:input_devices
DEVICE_TYPE	frontend/platform/platform_xdk.h	185;"	d
DEVICE_USB_2_AXIS_8_BUTTON_GAMEPAD	driver.h	/^   DEVICE_USB_2_AXIS_8_BUTTON_GAMEPAD,$/;"	e	enum:input_devices
DEVICE_WIKIPAD	driver.h	/^   DEVICE_WIKIPAD,$/;"	e	enum:input_devices
DEVICE_WISEGROUP_PLAYSTATION2	driver.h	/^   DEVICE_WISEGROUP_PLAYSTATION2,$/;"	e	enum:input_devices
DEVICE_XPERIA_PLAY	driver.h	/^   DEVICE_XPERIA_PLAY,$/;"	e	enum:input_devices
DEVICE_ZEEMOTE_STEELSERIES	driver.h	/^   DEVICE_ZEEMOTE_STEELSERIES,$/;"	e	enum:input_devices
DE_BOOL	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_BOOL,$/;"	e	enum:__anon152
DE_DEA	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_DEA,$/;"	e	enum:__anon152
DE_DES	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_DES,$/;"	e	enum:__anon152
DE_INT	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_INT,$/;"	e	enum:__anon152
DE_NIL	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_NIL = 0,$/;"	e	enum:__anon152
DE_SIZE_128	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_128,$/;"	e	enum:__anon153
DE_SIZE_16	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_16,$/;"	e	enum:__anon153
DE_SIZE_32	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_32,$/;"	e	enum:__anon153
DE_SIZE_64	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_64,$/;"	e	enum:__anon153
DE_SIZE_8	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_8 = 0,$/;"	e	enum:__anon153
DE_SIZE_VAR_16	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_VAR_16,$/;"	e	enum:__anon153
DE_SIZE_VAR_32	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_VAR_32$/;"	e	enum:__anon153
DE_SIZE_VAR_8	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_SIZE_VAR_8,$/;"	e	enum:__anon153
DE_STRING	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_STRING,$/;"	e	enum:__anon152
DE_UINT	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_UINT,$/;"	e	enum:__anon152
DE_URL	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_URL$/;"	e	enum:__anon152
DE_UUID	apple/iOS/bluetooth/btstack/sdp_util.h	/^    DE_UUID,$/;"	e	enum:__anon152
DFONT_MAX	xdk/xdk_d3d.h	30;"	d
DF_BIND_NOW	wii/app_booter/elf_abi.h	500;"	d
DF_ORIGIN	wii/app_booter/elf_abi.h	497;"	d
DF_STATIC_TLS	wii/app_booter/elf_abi.h	501;"	d
DF_SYMBOLIC	wii/app_booter/elf_abi.h	498;"	d
DF_TEXTREL	wii/app_booter/elf_abi.h	499;"	d
DIFF	ps3/altivec_mem.h	71;"	d
DIRECTINPUT_VERSION	input/dinput.c	20;"	d	file:
DIRECTINPUT_VERSION	input/dinput.c	21;"	d	file:
DIRECTINPUT_VERSION	input/input_common.c	28;"	d	file:
DIRECTINPUT_VERSION	input/input_common.c	29;"	d	file:
DIRSELECT	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int DIRSELECT = 0;$/;"	f	class:FileWrapper	access:public
DISPATCHER_HEADER	frontend/platform/platform_xdk.h	/^} DISPATCHER_HEADER;$/;"	t	typeref:struct:_DISPATCHER_HEADER
DISPATCH_LEVEL	frontend/platform/platform_xdk.h	374;"	d
DISP_3D_OUT_MODE_CI_1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_CI_1 = 0x5, \/* column interlaved 1 *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_CI_2	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_CI_2 = 0x6, \/* column interlaved 2 *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_CI_3	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_CI_3 = 0x7, \/* column interlaved 3 *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_CI_4	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_CI_4 = 0x8, \/* column interlaved 4 *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_FA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_FA = 0xa, \/* field alternative *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_FP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_FP = 0x1, \/* frame packing *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_LI	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_LI = 0x4, \/* line interleaved *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_LIRGB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_LIRGB = 0x9, \/* line interleaved rgb *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_SSF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_SSF = 0x2, \/* side by side full *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_SSH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_SSH = 0x3, \/* side by side half *\/$/;"	e	enum:__anon172
DISP_3D_OUT_MODE_TB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_OUT_MODE_TB = 0x0, \/* top bottom *\/$/;"	e	enum:__anon172
DISP_3D_SRC_MODE_FP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_SRC_MODE_FP = 0x1, \/* frame packing *\/$/;"	e	enum:__anon171
DISP_3D_SRC_MODE_LI	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_SRC_MODE_LI = 0x4, \/* line interleaved *\/$/;"	e	enum:__anon171
DISP_3D_SRC_MODE_SSF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_SRC_MODE_SSF = 0x2, \/* side by side full *\/$/;"	e	enum:__anon171
DISP_3D_SRC_MODE_SSH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_SRC_MODE_SSH = 0x3, \/* side by side half *\/$/;"	e	enum:__anon171
DISP_3D_SRC_MODE_TB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_3D_SRC_MODE_TB = 0x0, \/* top bottom *\/$/;"	e	enum:__anon171
DISP_BT601	gfx/context/sunxi_disp_ioctl.h	/^	DISP_BT601 = 0,$/;"	e	enum:__anon173
DISP_BT709	gfx/context/sunxi_disp_ioctl.h	/^	DISP_BT709 = 1,$/;"	e	enum:__anon173
DISP_CMD_CAPTURE_SCREEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_CAPTURE_SCREEN = 0x20,	\/* caputre screen and scaler to dram *\/$/;"	e	enum:tag_DISP_CMD
DISP_CMD_CLK_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_CLK_OFF = 0x1e,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_CLK_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_CLK_ON = 0x1d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DE_FLICKER_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DE_FLICKER_OFF = 0x22,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DE_FLICKER_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DE_FLICKER_ON = 0x21,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DE_FLICKER_SET_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DE_FLICKER_SET_WINDOW = 0x27,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DRC_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DRC_OFF = 0x25,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DRC_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DRC_ON = 0x29,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_DRC_SET_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_DRC_SET_WINDOW = 0x28,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_ENHANCE_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_ENHANCE_OFF = 0x1b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_ENHANCE_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_ENHANCE_ON = 0x1a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_EXECUTE_CMD_AND_STOP_CACHE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_EXECUTE_CMD_AND_STOP_CACHE = 0x11,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_FB_GET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_FB_GET_PARA = 0x282,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_FB_RELEASE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_FB_RELEASE = 0x281,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_FB_REQUEST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_FB_REQUEST = 0x280,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GAMMA_CORRECTION_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GAMMA_CORRECTION_OFF = 0x0f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GAMMA_CORRECTION_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GAMMA_CORRECTION_ON = 0x0e,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_BKCOLOR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_BKCOLOR = 0x03,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_BRIGHT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_BRIGHT = 0x16,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_COLORKEY	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_COLORKEY = 0x05,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_CONTRAST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_CONTRAST = 0x17,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_DE_FLICKER_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_DE_FLICKER_EN = 0x2a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_DISP_INIT_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_DISP_INIT_PARA = 0x283,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_DRC_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_DRC_EN = 0x26,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_ENHANCE_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_ENHANCE_EN = 0x1c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_HUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_HUE = 0x24,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_OUTPUT_TYPE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_OUTPUT_TYPE = 0x0a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_PALETTE_TBL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_PALETTE_TBL = 0x07,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_GET_SATURATION	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_GET_SATURATION = 0x18,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_GET_HPD_STATUS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_GET_HPD_STATUS = 0x1c5,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_GET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_GET_MODE = 0x1c3,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_OFF = 0x1c1,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_ON = 0x1c0,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_SET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_SET_MODE = 0x1c2,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_SET_SRC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_SET_SRC = 0x1c6,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HDMI_SUPPORT_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HDMI_SUPPORT_MODE = 0x1c4,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_CLOSE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_CLOSE = 0xc1,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_GET_POS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_GET_POS = 0xc3,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_OPEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_OPEN = 0xc0,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_SET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_SET_FB = 0xc4,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_SET_PALETTE_TABLE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_SET_PALETTE_TABLE = 0xc5,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_HWC_SET_POS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_HWC_SET_POS = 0xc2,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_ALPHA_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_ALPHA_OFF = 0x4d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_ALPHA_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_ALPHA_ON = 0x4c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_BOTTOM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_BOTTOM = 0x57,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_CK_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_CK_OFF = 0x52,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_CK_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_CK_ON = 0x51,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_CLOSE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_CLOSE = 0x43,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_ENHANCE_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_ENHANCE_OFF = 0x64,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_ENHANCE_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_ENHANCE_ON = 0x63,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_ALPHA_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_ALPHA_EN = 0x4e,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_ALPHA_VALUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_ALPHA_VALUE = 0x50,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_BLACK_EXTEN_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_BLACK_EXTEN_LEVEL = 0x71,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_BRIGHT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_BRIGHT = 0x5f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_CHROMA_SHARP_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_CHROMA_SHARP_LEVEL = 0x6d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_CK_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_CK_EN = 0x53,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_CONTRAST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_CONTRAST = 0x60,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_ENHANCE_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_ENHANCE_EN = 0x65,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_FB = 0x45,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_HUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_HUE = 0x62,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_LUMA_SHARP_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_LUMA_SHARP_LEVEL = 0x6b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_PARA = 0x4b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_PIPE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_PIPE = 0x55,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_PRIO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_PRIO = 0x58,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_SATURATION	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_SATURATION = 0x61,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_SCN_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_SCN_WINDOW = 0x49,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_SMOOTH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_SMOOTH = 0x5a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_SRC_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_SRC_WINDOW = 0x47,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_VPP_EN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_VPP_EN = 0x69,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_GET_WHITE_EXTEN_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_GET_WHITE_EXTEN_LEVEL = 0x6f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_OPEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_OPEN = 0x42,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_RELEASE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_RELEASE = 0x41,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_REQUEST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_REQUEST = 0x40,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_ALPHA_VALUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_ALPHA_VALUE = 0x4f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_BLACK_EXTEN_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_BLACK_EXTEN_LEVEL = 0x70,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_BRIGHT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_BRIGHT = 0x5b, \/* brightness *\/$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_CHROMA_SHARP_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_CHROMA_SHARP_LEVEL = 0x6c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_CONTRAST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_CONTRAST = 0x5c, \/* contrast *\/$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_FB = 0x44,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_HUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_HUE = 0x5e, \/* hue, chroma *\/$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_LUMA_SHARP_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_LUMA_SHARP_LEVEL = 0x6a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_PARA = 0x4a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_PIPE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_PIPE = 0x54,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_SATURATION	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_SATURATION = 0x5d, \/* saturation *\/$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_SCN_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_SCN_WINDOW = 0x48,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_SMOOTH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_SMOOTH = 0x59,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_SRC_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_SRC_WINDOW = 0x46,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_SET_WHITE_EXTEN_LEVEL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_SET_WHITE_EXTEN_LEVEL = 0x6e,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_TOP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_TOP = 0x56,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_VPP_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_VPP_OFF = 0x68,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LAYER_VPP_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LAYER_VPP_ON = 0x67,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_CHECK_CLOSE_FINISH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_CHECK_CLOSE_FINISH = 0x14b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_CHECK_OPEN_FINISH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_CHECK_OPEN_FINISH = 0x14a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_CPUIF_XY_SWITCH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_CPUIF_XY_SWITCH = 0x146,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_GET_BRIGHTNESS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_GET_BRIGHTNESS = 0x143,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_OFF = 0x141,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_ON = 0x140,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_SET_BRIGHTNESS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_SET_BRIGHTNESS = 0x142,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_SET_SRC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_SET_SRC = 0x14c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_LCD_USER_DEFINED_FUNC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_LCD_USER_DEFINED_FUNC = 0x14d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_MEM_GETADR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_MEM_GETADR = 0x2c2,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_MEM_RELASE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_MEM_RELASE = 0x2c1,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_MEM_REQUEST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_MEM_REQUEST = 0x2c0,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_MEM_SELIDX	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_MEM_SELIDX = 0x2c3,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_PRINT_REG	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_PRINT_REG = 0x2e0,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_PWM_GET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_PWM_GET_PARA = 0x301,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_PWM_SET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_PWM_SET_PARA = 0x300,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_RESERVE1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_RESERVE1 = 0x01,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_RESUME	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_RESUME = 0x2d1,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SCALER_EXECUTE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SCALER_EXECUTE = 0x82,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SCALER_RELEASE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SCALER_RELEASE = 0x81,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SCALER_REQUEST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SCALER_REQUEST = 0x80,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SCN_GET_HEIGHT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SCN_GET_HEIGHT = 0x09,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SCN_GET_WIDTH	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SCN_GET_WIDTH = 0x08,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_BKCOLOR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_BKCOLOR = 0x3f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_BRIGHT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_BRIGHT = 0x12,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_COLORKEY	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_COLORKEY = 0x04,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_CONTRAST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_CONTRAST = 0x13,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_EXIT_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_EXIT_MODE = 0x0c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_GAMMA_TABLE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_GAMMA_TABLE = 0x0d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_HUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_HUE = 0x23,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_PALETTE_TBL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_PALETTE_TBL = 0x06,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_SATURATION	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_SATURATION = 0x14,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SET_SCREEN_SIZE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SET_SCREEN_SIZE = 0x1f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_CLOSE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_CLOSE = 0x258,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_FB = 0x24d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_NEXT_BLOCK	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_NEXT_BLOCK = 0x255,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_PARA = 0x25d,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_PREV_BLOCK	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_PREV_BLOCK = 0x254,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_PRIO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_PRIO = 0x256,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_SCREEN_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_SCREEN_WINDOW = 0x24c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_GET_SOURCE_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_GET_SOURCE_WINDOW = 0x25b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_OPEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_OPEN = 0x257,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_RELEASE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_RELEASE = 0x249,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_REQUEST	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_REQUEST = 0x248,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_BOTTOM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_BOTTOM = 0x24f,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_FB = 0x24b,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_PARA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_PARA = 0x25c,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_SCREEN_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_SCREEN_WINDOW = 0x24a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_SOURCE_WINDOW	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_SOURCE_WINDOW = 0x25a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_BLOCK_SET_TOP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_BLOCK_SET_TOP = 0x24e,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_CLOSE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_CLOSE = 0x241,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GET_BLOCK_NUM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GET_BLOCK_NUM = 0x259,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GET_BOTTOM_BLOCK	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GET_BOTTOM_BLOCK = 0x251,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_ENABLE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_ENABLE = 0x252,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_VALUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GET_GLOBAL_ALPHA_VALUE = 0x253,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GET_TOP_BLOCK	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GET_TOP_BLOCK = 0x250,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GLOBAL_ALPHA_DISABLE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GLOBAL_ALPHA_DISABLE = 0x244,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_GLOBAL_ALPHA_ENABLE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_GLOBAL_ALPHA_ENABLE = 0x243,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_OPEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_OPEN = 0x240,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_SET_FORMAT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_SET_FORMAT = 0x242,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_SET_GLOBAL_ALPHA_VALUE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_SET_GLOBAL_ALPHA_VALUE = 0x245,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_SET_ORDER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_SET_ORDER = 0x246,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SPRITE_SET_PALETTE_TBL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SPRITE_SET_PALETTE_TBL = 0x247,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_START_CMD_CACHE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_START_CMD_CACHE = 0x10,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_SUSPEND	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_SUSPEND = 0x2d0,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_AUTOCHECK_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_AUTOCHECK_OFF = 0x185,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_AUTOCHECK_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_AUTOCHECK_ON = 0x184,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_GET_DAC_SOURCE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_GET_DAC_SOURCE = 0x18a,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_GET_DAC_STATUS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_GET_DAC_STATUS = 0x188,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_GET_INTERFACE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_GET_INTERFACE = 0x186,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_GET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_GET_MODE = 0x183,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_OFF = 0x181,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_ON = 0x180,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_SET_DAC_SOURCE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_SET_DAC_SOURCE = 0x189,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_SET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_SET_MODE = 0x182,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_TV_SET_SRC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_TV_SET_SRC = 0x187,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VERSION	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VERSION = 0x00,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VGA_GET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VGA_GET_MODE = 0x203,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VGA_OFF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VGA_OFF = 0x201,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VGA_ON	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VGA_ON = 0x200,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VGA_SET_MODE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VGA_SET_MODE = 0x202,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VGA_SET_SRC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VGA_SET_SRC = 0x204,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VIDEO_GET_DIT_INFO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VIDEO_GET_DIT_INFO = 0x104,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VIDEO_GET_FRAME_ID	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VIDEO_GET_FRAME_ID = 0x103,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VIDEO_SET_FB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VIDEO_SET_FB = 0x102,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VIDEO_START	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VIDEO_START = 0x100,$/;"	e	enum:tag_DISP_CMD
DISP_CMD_VIDEO_STOP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_CMD_VIDEO_STOP = 0x101,$/;"	e	enum:tag_DISP_CMD
DISP_COLOR_RANGE_0_255	gfx/context/sunxi_disp_ioctl.h	/^	DISP_COLOR_RANGE_0_255 = 1,$/;"	e	enum:__anon174
DISP_COLOR_RANGE_16_235	gfx/context/sunxi_disp_ioctl.h	/^	DISP_COLOR_RANGE_16_235 = 2,$/;"	e	enum:__anon174
DISP_COLOR_RANGE_16_255	gfx/context/sunxi_disp_ioctl.h	/^	DISP_COLOR_RANGE_16_255 = 0,$/;"	e	enum:__anon174
DISP_EXIT_MODE_CLEAN_ALL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_EXIT_MODE_CLEAN_ALL = 0,$/;"	e	enum:__anon184
DISP_EXIT_MODE_CLEAN_PARTLY	gfx/context/sunxi_disp_ioctl.h	/^	DISP_EXIT_MODE_CLEAN_PARTLY = 1, \/* only clean interrupt temply *\/$/;"	e	enum:__anon184
DISP_FORMAT_1BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_1BPP = 0x0,$/;"	e	enum:__anon168
DISP_FORMAT_2BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_2BPP = 0x1,$/;"	e	enum:__anon168
DISP_FORMAT_4BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_4BPP = 0x2,$/;"	e	enum:__anon168
DISP_FORMAT_8BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_8BPP = 0x3,$/;"	e	enum:__anon168
DISP_FORMAT_ARGB1555	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_ARGB1555 = 0x7,$/;"	e	enum:__anon168
DISP_FORMAT_ARGB4444	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_ARGB4444 = 0xc,$/;"	e	enum:__anon168
DISP_FORMAT_ARGB888	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_ARGB888 = 0x9, \/* alpha padding to 0xff *\/$/;"	e	enum:__anon168
DISP_FORMAT_ARGB8888	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_ARGB8888 = 0xa,$/;"	e	enum:__anon168
DISP_FORMAT_CSIRGB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_CSIRGB = 0x14,$/;"	e	enum:__anon168
DISP_FORMAT_RGB556	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_RGB556 = 0x6,$/;"	e	enum:__anon168
DISP_FORMAT_RGB565	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_RGB565 = 0x5,$/;"	e	enum:__anon168
DISP_FORMAT_RGB655	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_RGB655 = 0x4,$/;"	e	enum:__anon168
DISP_FORMAT_RGB888	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_RGB888 = 0xb,$/;"	e	enum:__anon168
DISP_FORMAT_RGBA5551	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_RGBA5551 = 0x8,$/;"	e	enum:__anon168
DISP_FORMAT_YUV411	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_YUV411 = 0x13,$/;"	e	enum:__anon168
DISP_FORMAT_YUV420	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_YUV420 = 0x12,$/;"	e	enum:__anon168
DISP_FORMAT_YUV422	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_YUV422 = 0x11,$/;"	e	enum:__anon168
DISP_FORMAT_YUV444	gfx/context/sunxi_disp_ioctl.h	/^	DISP_FORMAT_YUV444 = 0x10,$/;"	e	enum:__anon168
DISP_HWC_MOD_H32_V32_8BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_HWC_MOD_H32_V32_8BPP = 0,$/;"	e	enum:__anon183
DISP_HWC_MOD_H32_V64_4BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_HWC_MOD_H32_V64_4BPP = 3,$/;"	e	enum:__anon183
DISP_HWC_MOD_H64_V32_4BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_HWC_MOD_H64_V32_4BPP = 2,$/;"	e	enum:__anon183
DISP_HWC_MOD_H64_V64_2BPP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_HWC_MOD_H64_V64_2BPP = 1,$/;"	e	enum:__anon183
DISP_INIT_MODE_SCREEN0	gfx/context/sunxi_disp_ioctl.h	/^	DISP_INIT_MODE_SCREEN0 = 0, \/* fb0 for screen0 *\/$/;"	e	enum:__anon202
DISP_INIT_MODE_SCREEN1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_INIT_MODE_SCREEN1 = 1, \/* fb0 for screen1 *\/$/;"	e	enum:__anon202
DISP_INIT_MODE_TWO_DIFF_SCREEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_INIT_MODE_TWO_DIFF_SCREEN = 2,$/;"	e	enum:__anon202
DISP_INIT_MODE_TWO_DIFF_SCREEN_SAME_CONTENTS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_INIT_MODE_TWO_DIFF_SCREEN_SAME_CONTENTS = 4,$/;"	e	enum:__anon202
DISP_INIT_MODE_TWO_SAME_SCREEN	gfx/context/sunxi_disp_ioctl.h	/^	DISP_INIT_MODE_TWO_SAME_SCREEN = 3,$/;"	e	enum:__anon202
DISP_LAYER_WORK_MODE_GAMMA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LAYER_WORK_MODE_GAMMA = 3, \/* gamma correction work mode *\/$/;"	e	enum:__anon181
DISP_LAYER_WORK_MODE_INTER_BUF	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LAYER_WORK_MODE_INTER_BUF = 2,$/;"	e	enum:__anon181
DISP_LAYER_WORK_MODE_NORMAL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LAYER_WORK_MODE_NORMAL = 0, \/* normal work mode *\/$/;"	e	enum:__anon181
DISP_LAYER_WORK_MODE_PALETTE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LAYER_WORK_MODE_PALETTE = 1, \/* palette work mode *\/$/;"	e	enum:__anon181
DISP_LAYER_WORK_MODE_SCALER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LAYER_WORK_MODE_SCALER = 4, \/* scaler work mode *\/$/;"	e	enum:__anon181
DISP_LCDC_SRC_BLACK	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_BLACK = 4,$/;"	e	enum:__anon180
DISP_LCDC_SRC_BLUT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_BLUT = 5,$/;"	e	enum:__anon180
DISP_LCDC_SRC_DE_CH1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_DE_CH1 = 0,$/;"	e	enum:__anon180
DISP_LCDC_SRC_DE_CH2	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_DE_CH2 = 1,$/;"	e	enum:__anon180
DISP_LCDC_SRC_DMA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_DMA = 2,$/;"	e	enum:__anon180
DISP_LCDC_SRC_WHITE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_LCDC_SRC_WHITE = 3,$/;"	e	enum:__anon180
DISP_MOD_INTERLEAVED	gfx/context/sunxi_disp_ioctl.h	/^	DISP_MOD_INTERLEAVED = 0x1,$/;"	e	enum:__anon169
DISP_MOD_MB_PLANAR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_MOD_MB_PLANAR = 0x4,$/;"	e	enum:__anon169
DISP_MOD_MB_UV_COMBINED	gfx/context/sunxi_disp_ioctl.h	/^	DISP_MOD_MB_UV_COMBINED = 0x6,$/;"	e	enum:__anon169
DISP_MOD_NON_MB_PLANAR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_MOD_NON_MB_PLANAR = 0x0,$/;"	e	enum:__anon169
DISP_MOD_NON_MB_UV_COMBINED	gfx/context/sunxi_disp_ioctl.h	/^	DISP_MOD_NON_MB_UV_COMBINED = 0x2,$/;"	e	enum:__anon169
DISP_OUTPUT_TYPE_HDMI	gfx/context/sunxi_disp_ioctl.h	/^	DISP_OUTPUT_TYPE_HDMI = 4,$/;"	e	enum:__anon175
DISP_OUTPUT_TYPE_LCD	gfx/context/sunxi_disp_ioctl.h	/^	DISP_OUTPUT_TYPE_LCD = 1,$/;"	e	enum:__anon175
DISP_OUTPUT_TYPE_NONE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_OUTPUT_TYPE_NONE = 0,$/;"	e	enum:__anon175
DISP_OUTPUT_TYPE_TV	gfx/context/sunxi_disp_ioctl.h	/^	DISP_OUTPUT_TYPE_TV = 2,$/;"	e	enum:__anon175
DISP_OUTPUT_TYPE_VGA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_OUTPUT_TYPE_VGA = 8,$/;"	e	enum:__anon175
DISP_REG_CCMU	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_CCMU = 8,$/;"	e	enum:__anon185
DISP_REG_IMAGE0	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_IMAGE0 = 2,$/;"	e	enum:__anon185
DISP_REG_IMAGE1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_IMAGE1 = 3,$/;"	e	enum:__anon185
DISP_REG_LCDC0	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_LCDC0 = 4,$/;"	e	enum:__anon185
DISP_REG_LCDC1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_LCDC1 = 5,$/;"	e	enum:__anon185
DISP_REG_PIOC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_PIOC = 9,$/;"	e	enum:__anon185
DISP_REG_PWM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_PWM = 10,$/;"	e	enum:__anon185
DISP_REG_SCALER0	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_SCALER0 = 0,$/;"	e	enum:__anon185
DISP_REG_SCALER1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_SCALER1 = 1,$/;"	e	enum:__anon185
DISP_REG_TVEC0	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_TVEC0 = 6,$/;"	e	enum:__anon185
DISP_REG_TVEC1	gfx/context/sunxi_disp_ioctl.h	/^	DISP_REG_TVEC1 = 7,$/;"	e	enum:__anon185
DISP_SEQ_1BPP_BIG_BIG	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_1BPP_BIG_BIG = 0x19,$/;"	e	enum:__anon170
DISP_SEQ_1BPP_BIG_LITTER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_1BPP_BIG_LITTER = 0x1a,$/;"	e	enum:__anon170
DISP_SEQ_1BPP_LITTER_BIG	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_1BPP_LITTER_BIG = 0x1b,$/;"	e	enum:__anon170
DISP_SEQ_1BPP_LITTER_LITTER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_1BPP_LITTER_LITTER = 0x1c,$/;"	e	enum:__anon170
DISP_SEQ_2BPP_BIG_BIG	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_2BPP_BIG_BIG = 0x15,$/;"	e	enum:__anon170
DISP_SEQ_2BPP_BIG_LITTER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_2BPP_BIG_LITTER = 0x16,$/;"	e	enum:__anon170
DISP_SEQ_2BPP_LITTER_BIG	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_2BPP_LITTER_BIG = 0x17,$/;"	e	enum:__anon170
DISP_SEQ_2BPP_LITTER_LITTER	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_2BPP_LITTER_LITTER = 0x18,$/;"	e	enum:__anon170
DISP_SEQ_ARGB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_ARGB = 0x0,	\/* A at a high level *\/$/;"	e	enum:__anon170
DISP_SEQ_AYUV	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_AYUV = 0x7,$/;"	e	enum:__anon170
DISP_SEQ_BGRA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_BGRA = 0x2,$/;"	e	enum:__anon170
DISP_SEQ_P01	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P01 = 0xe,	\/* p0 high *\/$/;"	e	enum:__anon170
DISP_SEQ_P0123	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P0123 = 0x10,	\/* p0 high *\/$/;"	e	enum:__anon170
DISP_SEQ_P01234567	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P01234567 = 0x14,$/;"	e	enum:__anon170
DISP_SEQ_P10	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P10 = 0xd,	\/* p1 high *\/$/;"	e	enum:__anon170
DISP_SEQ_P10325476	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P10325476 = 0x13,$/;"	e	enum:__anon170
DISP_SEQ_P3210	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P3210 = 0xf,	\/* p3 high *\/$/;"	e	enum:__anon170
DISP_SEQ_P67452301	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P67452301 = 0x12,$/;"	e	enum:__anon170
DISP_SEQ_P76543210	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_P76543210 = 0x11,$/;"	e	enum:__anon170
DISP_SEQ_UVUV	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_UVUV = 0x9,$/;"	e	enum:__anon170
DISP_SEQ_UYVY	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_UYVY = 0x3,$/;"	e	enum:__anon170
DISP_SEQ_VUVU	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_VUVU = 0xa,$/;"	e	enum:__anon170
DISP_SEQ_VUYA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_VUYA = 0x8,$/;"	e	enum:__anon170
DISP_SEQ_VYUY	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_VYUY = 0x5,$/;"	e	enum:__anon170
DISP_SEQ_YUYV	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_YUYV = 0x4,$/;"	e	enum:__anon170
DISP_SEQ_YVYU	gfx/context/sunxi_disp_ioctl.h	/^	DISP_SEQ_YVYU = 0x6,$/;"	e	enum:__anon170
DISP_TV_CVBS	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_CVBS = 1,$/;"	e	enum:__anon176
DISP_TV_DAC_SRC_CHROMA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_CHROMA = 2,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_COMPOSITE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_COMPOSITE = 0,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_LUMA	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_LUMA = 1,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_NONE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_NONE = 7,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_PB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_PB = 5,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_PR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_PR = 6,$/;"	e	enum:__anon178
DISP_TV_DAC_SRC_Y	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_DAC_SRC_Y = 4,$/;"	e	enum:__anon178
DISP_TV_MODE_EDID	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MODE_EDID = 0xff$/;"	e	enum:__anon177
DISP_TV_MODE_NUM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MODE_NUM = 0x1c,$/;"	e	enum:__anon177
DISP_TV_MOD_1080I_50HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080I_50HZ = 6,$/;"	e	enum:__anon177
DISP_TV_MOD_1080I_60HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080I_60HZ = 7,$/;"	e	enum:__anon177
DISP_TV_MOD_1080P_24HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080P_24HZ = 8,$/;"	e	enum:__anon177
DISP_TV_MOD_1080P_24HZ_3D_FP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080P_24HZ_3D_FP = 0x17,$/;"	e	enum:__anon177
DISP_TV_MOD_1080P_50HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080P_50HZ = 9,$/;"	e	enum:__anon177
DISP_TV_MOD_1080P_60HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_1080P_60HZ = 0xa,$/;"	e	enum:__anon177
DISP_TV_MOD_480I	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_480I = 0,$/;"	e	enum:__anon177
DISP_TV_MOD_480P	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_480P = 2,$/;"	e	enum:__anon177
DISP_TV_MOD_576I	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_576I = 1,$/;"	e	enum:__anon177
DISP_TV_MOD_576P	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_576P = 3,$/;"	e	enum:__anon177
DISP_TV_MOD_720P_50HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_720P_50HZ = 4,$/;"	e	enum:__anon177
DISP_TV_MOD_720P_50HZ_3D_FP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_720P_50HZ_3D_FP = 0x18,$/;"	e	enum:__anon177
DISP_TV_MOD_720P_60HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_720P_60HZ = 5,$/;"	e	enum:__anon177
DISP_TV_MOD_720P_60HZ_3D_FP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_720P_60HZ_3D_FP = 0x19,$/;"	e	enum:__anon177
DISP_TV_MOD_H1280_V1024_60HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_H1280_V1024_60HZ = 0x1b,$/;"	e	enum:__anon177
DISP_TV_MOD_H1360_V768_60HZ	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_H1360_V768_60HZ = 0x1a,$/;"	e	enum:__anon177
DISP_TV_MOD_NTSC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_NTSC = 0xe,$/;"	e	enum:__anon177
DISP_TV_MOD_NTSC_SVIDEO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_NTSC_SVIDEO = 0xf,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL = 0xb,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL_M	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL_M = 0x11,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL_M_SVIDEO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL_M_SVIDEO = 0x12,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL_NC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL_NC = 0x14,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL_NC_SVIDEO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL_NC_SVIDEO = 0x15,$/;"	e	enum:__anon177
DISP_TV_MOD_PAL_SVIDEO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_MOD_PAL_SVIDEO = 0xc,$/;"	e	enum:__anon177
DISP_TV_NONE	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_NONE = 0,$/;"	e	enum:__anon176
DISP_TV_SVIDEO	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_SVIDEO = 4,$/;"	e	enum:__anon176
DISP_TV_YPBPR	gfx/context/sunxi_disp_ioctl.h	/^	DISP_TV_YPBPR = 2,$/;"	e	enum:__anon176
DISP_VGA_H1024_V768	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1024_V768 = 4,$/;"	e	enum:__anon179
DISP_VGA_H1280_V1024	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1280_V1024 = 3,$/;"	e	enum:__anon179
DISP_VGA_H1280_V720	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1280_V720 = 0xb,$/;"	e	enum:__anon179
DISP_VGA_H1360_V768	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1360_V768 = 2,$/;"	e	enum:__anon179
DISP_VGA_H1440_V900	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1440_V900 = 1,$/;"	e	enum:__anon179
DISP_VGA_H1440_V900_RB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1440_V900_RB = 7, \/* not support yet *\/$/;"	e	enum:__anon179
DISP_VGA_H1680_V1050	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1680_V1050 = 0,$/;"	e	enum:__anon179
DISP_VGA_H1680_V1050_RB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1680_V1050_RB = 8, \/* not support yet *\/$/;"	e	enum:__anon179
DISP_VGA_H1920_V1080	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1920_V1080 = 0xa,$/;"	e	enum:__anon179
DISP_VGA_H1920_V1080_RB	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H1920_V1080_RB = 9,$/;"	e	enum:__anon179
DISP_VGA_H640_V480	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H640_V480 = 6,$/;"	e	enum:__anon179
DISP_VGA_H800_V600	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_H800_V600 = 5,$/;"	e	enum:__anon179
DISP_VGA_MODE_NUM	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VGA_MODE_NUM = 0xc,$/;"	e	enum:__anon179
DISP_VIDEO_NATUAL	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VIDEO_NATUAL = 0,$/;"	e	enum:__anon182
DISP_VIDEO_SHARP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VIDEO_SHARP = 3,$/;"	e	enum:__anon182
DISP_VIDEO_SOFT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VIDEO_SOFT = 1,$/;"	e	enum:__anon182
DISP_VIDEO_VERYSHARP	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VIDEO_VERYSHARP = 4$/;"	e	enum:__anon182
DISP_VIDEO_VERYSOFT	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VIDEO_VERYSOFT = 2,$/;"	e	enum:__anon182
DISP_VXYCC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_VXYCC = 3,$/;"	e	enum:__anon173
DISP_YCC	gfx/context/sunxi_disp_ioctl.h	/^	DISP_YCC = 2,$/;"	e	enum:__anon173
DONT_HAVE_BITMAPFONTS	griffin/griffin.c	245;"	d	file:
DONT_HAVE_STATE_TRACKER	griffin/griffin.c	334;"	d	file:
DOREPLACE	media/360/hd/rarch_audio_options.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_controls.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_core_options.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_filebrowser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_libretrocore_browser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_load_game_history.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_settings.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_shader_browser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/hd/rarch_video_options.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_audio_options.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_controls.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_core_options.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_filebrowser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_libretrocore_browser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_load_game_history.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_settings.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_shader_browser.bat	/^:DOREPLACE$/;"	l
DOREPLACE	media/360/sd/rarch_video_options.bat	/^:DOREPLACE$/;"	l
DRIVER_OBJECT	frontend/platform/platform_xdk.h	/^} DRIVER_OBJECT;$/;"	t	typeref:struct:_DRIVER_OBJECT
DRM_CFLAGS	config.mk	/^DRM_CFLAGS = -I\/usr\/include\/libdrm$/;"	m
DRM_LIBS	config.mk	/^DRM_LIBS = -ldrm$/;"	m
DSERR_BUFFERLOST	audio/dsound.c	23;"	d	file:
DSERR_INVALIDPARAM	audio/dsound.c	24;"	d	file:
DSERR_PRIOLEVELNEEDED	audio/dsound.c	25;"	d	file:
DST_CHAN_1	ps3/altivec_mem.h	79;"	d
DST_CHAN_2	ps3/altivec_mem.h	80;"	d
DST_CTRL	ps3/altivec_mem.h	82;"	d
DT_BIND_NOW	wii/app_booter/elf_abi.h	480;"	d
DT_DEBUG	wii/app_booter/elf_abi.h	477;"	d
DT_ENCODING	wii/app_booter/elf_abi.h	487;"	d
DT_FINI	wii/app_booter/elf_abi.h	468;"	d
DT_FINI_ARRAY	wii/app_booter/elf_abi.h	482;"	d
DT_FINI_ARRAYSZ	wii/app_booter/elf_abi.h	484;"	d
DT_FLAGS	wii/app_booter/elf_abi.h	486;"	d
DT_HASH	wii/app_booter/elf_abi.h	459;"	d
DT_HIOS	wii/app_booter/elf_abi.h	492;"	d
DT_HIPROC	wii/app_booter/elf_abi.h	494;"	d
DT_INIT	wii/app_booter/elf_abi.h	467;"	d
DT_INIT_ARRAY	wii/app_booter/elf_abi.h	481;"	d
DT_INIT_ARRAYSZ	wii/app_booter/elf_abi.h	483;"	d
DT_JMPREL	wii/app_booter/elf_abi.h	479;"	d
DT_LOOS	wii/app_booter/elf_abi.h	491;"	d
DT_LOPROC	wii/app_booter/elf_abi.h	493;"	d
DT_NEEDED	wii/app_booter/elf_abi.h	456;"	d
DT_NULL	wii/app_booter/elf_abi.h	455;"	d
DT_NUM	wii/app_booter/elf_abi.h	490;"	d
DT_PLTGOT	wii/app_booter/elf_abi.h	458;"	d
DT_PLTREL	wii/app_booter/elf_abi.h	476;"	d
DT_PLTRELSZ	wii/app_booter/elf_abi.h	457;"	d
DT_PREINIT_ARRAY	wii/app_booter/elf_abi.h	488;"	d
DT_PREINIT_ARRAYSZ	wii/app_booter/elf_abi.h	489;"	d
DT_REL	wii/app_booter/elf_abi.h	473;"	d
DT_RELA	wii/app_booter/elf_abi.h	462;"	d
DT_RELAENT	wii/app_booter/elf_abi.h	464;"	d
DT_RELASZ	wii/app_booter/elf_abi.h	463;"	d
DT_RELENT	wii/app_booter/elf_abi.h	475;"	d
DT_RELSZ	wii/app_booter/elf_abi.h	474;"	d
DT_RPATH	wii/app_booter/elf_abi.h	470;"	d
DT_RUNPATH	wii/app_booter/elf_abi.h	485;"	d
DT_SONAME	wii/app_booter/elf_abi.h	469;"	d
DT_STRSZ	wii/app_booter/elf_abi.h	465;"	d
DT_STRTAB	wii/app_booter/elf_abi.h	460;"	d
DT_SYMBOLIC	wii/app_booter/elf_abi.h	472;"	d
DT_SYMENT	wii/app_booter/elf_abi.h	466;"	d
DT_SYMTAB	wii/app_booter/elf_abi.h	461;"	d
DT_TEXTREL	wii/app_booter/elf_abi.h	478;"	d
DYLIB_LIB	config.mk	/^DYLIB_LIB = -ldl$/;"	m
DYNAMIC_ARG	retroarch.c	868;"	d	file:
DYNAMIC_DUMMY_H__	dynamic_dummy.h	19;"	d
DYNAMIC_EXT	dynamic.c	100;"	d	file:
DYNAMIC_EXT	dynamic.c	102;"	d	file:
DYNAMIC_EXT	dynamic.c	104;"	d	file:
DataBuffer	frontend/platform/platform_xdk.h	/^    \/*014*\/ PVOID DataBuffer;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
DataIn	frontend/platform/platform_xdk.h	/^    \/*008*\/ UCHAR DataIn;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
DataTransferLength	frontend/platform/platform_xdk.h	/^    \/*00C*\/ ULONG DataTransferLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
DbgFontConfig	gfx/fonts/ps_libdbgfont.c	23;"	d	file:
DbgFontConfig	gfx/fonts/ps_libdbgfont.c	30;"	d	file:
DbgFontExit	gfx/fonts/ps_libdbgfont.c	25;"	d	file:
DbgFontExit	gfx/fonts/ps_libdbgfont.c	32;"	d	file:
DbgFontInit	gfx/fonts/ps_libdbgfont.c	24;"	d	file:
DbgFontInit	gfx/fonts/ps_libdbgfont.c	31;"	d	file:
DbgFontPrint	gfx/fonts/ps_libdbgfont.c	22;"	d	file:
DbgFontPrint	gfx/fonts/ps_libdbgfont.c	29;"	d	file:
DebugImportTable	frontend/platform/platform_xdk.h	/^	PVOID DebugImportTable;$/;"	m	struct:_XBE_HEADER	access:public
Declare_IXAudio2Voice_Methods	audio/xaudio-c/xaudio.h	157;"	d
DefaultCommunicationsDevice	audio/xaudio-c/xaudio.h	/^   DefaultCommunicationsDevice = 0x4,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultConsoleDevice	audio/xaudio-c/xaudio.h	/^   DefaultConsoleDevice        = 0x1,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultGameDevice	audio/xaudio-c/xaudio.h	/^   DefaultGameDevice           = 0x8,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultMultimediaDevice	audio/xaudio-c/xaudio.h	/^   DefaultMultimediaDevice     = 0x2,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
DefaultObjectMaybe	frontend/platform/platform_xdk.h	/^	void *DefaultObjectMaybe;$/;"	m	struct:_OBJECT_TYPE	access:public
DeferredContext	frontend/platform/platform_xdk.h	/^	PVOID DeferredContext;$/;"	m	struct:_KDPC	access:public
DeferredRoutine	frontend/platform/platform_xdk.h	/^	PKDEFERRED_ROUTINE DeferredRoutine;$/;"	m	struct:_KDPC	access:public
DeleteFunction	frontend/platform/platform_xdk.h	/^	void *DeleteFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
DepthFar	ps3/rgl/include/RGL/Types.h	/^      GLclampf		DepthFar;$/;"	m	struct:RGLcontext	access:public
DepthNear	ps3/rgl/include/RGL/Types.h	/^      GLclampf		DepthNear;$/;"	m	struct:RGLcontext	access:public
Destroy	xdk/xdk_resources.cpp	/^void PackedResource::Destroy()$/;"	f	class:PackedResource	signature:()
Destroy	xdk/xdk_resources.h	/^      void Destroy();$/;"	p	class:PackedResource	access:public	signature:()
DetectCoreDirectoryFragment	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^public final class DetectCoreDirectoryFragment extends DirectoryFragment$/;"	c	inherits:DirectoryFragment
DetectCoreDirectoryFragment.CoreItem	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private static final class CoreItem$/;"	c	class:DetectCoreDirectoryFragment	access:private
DetectCoreDirectoryFragment.CoreItem.CoreItem	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public CoreItem(String title, String subtitle)$/;"	m	class:DetectCoreDirectoryFragment.CoreItem	access:public	signature:(String title, String subtitle)
DetectCoreDirectoryFragment.CoreItem.Subtitle	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public final String Subtitle;$/;"	f	class:DetectCoreDirectoryFragment.CoreItem	access:public
DetectCoreDirectoryFragment.CoreItem.Title	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public final String Title;$/;"	f	class:DetectCoreDirectoryFragment.CoreItem	access:public
DetectCoreDirectoryFragment.CoreSelectionAdapter	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private static final class CoreSelectionAdapter extends ArrayAdapter<CoreItem>$/;"	c	class:DetectCoreDirectoryFragment	inherits:ArrayAdapter	access:private
DetectCoreDirectoryFragment.CoreSelectionAdapter.CoreSelectionAdapter	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public CoreSelectionAdapter(Context context, int resourceId)$/;"	m	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	access:public	signature:(Context context, int resourceId)
DetectCoreDirectoryFragment.CoreSelectionAdapter.getView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent) $/;"	m	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
DetectCoreDirectoryFragment.CoreSelectionAdapter.resourceId	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		private final int resourceId;$/;"	f	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	file:	access:private
DetectCoreDirectoryFragment.backingListView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private ListView backingListView = null;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
DetectCoreDirectoryFragment.chosenFile	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private File chosenFile = null;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
DetectCoreDirectoryFragment.inFileBrowser	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private boolean inFileBrowser = true;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
DetectCoreDirectoryFragment.launchCore	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private void launchCore(String contentPath, String corePath)$/;"	m	class:DetectCoreDirectoryFragment	file:	access:private	signature:(String contentPath, String corePath)
DetectCoreDirectoryFragment.newInstance	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public static DetectCoreDirectoryFragment newInstance(int titleResId)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(int titleResId)
DetectCoreDirectoryFragment.onCreateView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
DetectCoreDirectoryFragment.onItemClickListener	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
DetectCoreDirectoryFragment.onSaveInstanceState	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public void onSaveInstanceState(Bundle outState)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(Bundle outState)
DetectCoreDirectoryFragment.supportedCorePaths	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private ArrayList<String> supportedCorePaths = new ArrayList<String>();$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
DevEnvDir	dist-scripts/xdk1_env.bat	/^@set DevEnvDir=%VSINSTALLDIR%$/;"	v
DevEnvDir	dist-scripts/xdk1_env_bigstack.bat	/^@set DevEnvDir=%VSINSTALLDIR%$/;"	v
DevEnvDir	dist-scripts/xdk360_env.bat	/^@set DevEnvDir=%VSINSTALLDIR%Common7\\IDE\\$/;"	v
DeviceID	audio/xaudio-c/xaudio.h	/^   WCHAR DeviceID[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
DeviceObject	frontend/platform/platform_xdk.h	/^    PDEVICE_OBJECT DeviceObject;$/;"	m	struct:_FILE_OBJECT	access:public
DeviceObject	frontend/platform/platform_xdk.h	/^    struct _DEVICE_OBJECT *DeviceObject;$/;"	m	struct:_DRIVER_OBJECT	typeref:struct:_DRIVER_OBJECT::_DEVICE_OBJECT	access:public
DeviceType	frontend/platform/platform_xdk.h	/^    DEVICE_TYPE DeviceType;                                     $/;"	m	struct:_FILE_FS_DEVICE_INFORMATION	access:public
DigestBlock	ps3/ps3py/pkg.py	/^class DigestBlock(Struct):$/;"	c	inherits:Struct
DirectoryFragment	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^public class DirectoryFragment extends DialogFragment$/;"	c	inherits:DialogFragment
DirectoryFragment.BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public static final class BackStackItem implements Parcelable$/;"	c	class:DirectoryFragment	inherits:Parcelable	access:public
DirectoryFragment.BackStackItem.BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		private BackStackItem(Parcel in)$/;"	m	class:DirectoryFragment.BackStackItem	file:	access:private	signature:(Parcel in)
DirectoryFragment.BackStackItem.BackStackItem	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public BackStackItem(String path, boolean parentIsBack)$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:(String path, boolean parentIsBack)
DirectoryFragment.BackStackItem.CREATOR	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public static final Parcelable.Creator<BackStackItem> CREATOR = new Parcelable.Creator<BackStackItem>()$/;"	f	class:DirectoryFragment.BackStackItem	access:public
DirectoryFragment.BackStackItem.describeContents	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public int describeContents()$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:()
DirectoryFragment.BackStackItem.parentIsBack	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		protected boolean parentIsBack;$/;"	f	class:DirectoryFragment.BackStackItem	access:protected
DirectoryFragment.BackStackItem.path	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		protected final String path;$/;"	f	class:DirectoryFragment.BackStackItem	access:protected
DirectoryFragment.BackStackItem.writeToParcel	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public void writeToParcel(Parcel out, int flags)$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:(Parcel out, int flags)
DirectoryFragment.OnDirectoryFragmentClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public interface OnDirectoryFragmentClosedListener$/;"	i	class:DirectoryFragment	access:public
DirectoryFragment.OnDirectoryFragmentClosedListener.onDirectoryFragmentClosed	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		void onDirectoryFragmentClosed(String path);$/;"	m	interface:DirectoryFragment.OnDirectoryFragmentClosedListener	access:public	signature:(String path)
DirectoryFragment.adapter	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected IconAdapter<FileWrapper> adapter;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.addAllowedExts	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void addAllowedExts(String... exts)$/;"	m	class:DirectoryFragment	access:public	signature:(String... exts)
DirectoryFragment.addDisallowedExts	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void addDisallowedExts(String... exts)$/;"	m	class:DirectoryFragment	access:public	signature:(String... exts)
DirectoryFragment.allowedExt	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private ArrayList<String> allowedExt;$/;"	f	class:DirectoryFragment	file:	access:private
DirectoryFragment.backStack	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected ArrayList<BackStackItem> backStack;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.disallowedExt	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private ArrayList<String> disallowedExt;$/;"	f	class:DirectoryFragment	file:	access:private
DirectoryFragment.filterPath	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private boolean filterPath(String path)$/;"	m	class:DirectoryFragment	file:	access:private	signature:(String path)
DirectoryFragment.finishWithPath	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private void finishWithPath(String path)$/;"	m	class:DirectoryFragment	file:	access:private	signature:(String path)
DirectoryFragment.isDirectoryTarget	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected boolean isDirectoryTarget;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.listedDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected File listedDirectory;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.newInstance	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public static DirectoryFragment newInstance(int titleResId)$/;"	m	class:DirectoryFragment	access:public	signature:(int titleResId)
DirectoryFragment.onClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected OnDirectoryFragmentClosedListener onClosedListener;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.onCreateView	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:DirectoryFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
DirectoryFragment.onItemClickListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:DirectoryFragment	file:	access:private
DirectoryFragment.onKeyDown	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public boolean onKeyDown(int keyCode, KeyEvent event)$/;"	m	class:DirectoryFragment	access:public	signature:(int keyCode, KeyEvent event)
DirectoryFragment.onSaveInstanceState	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void onSaveInstanceState(Bundle outState)$/;"	m	class:DirectoryFragment	access:public	signature:(Bundle outState)
DirectoryFragment.pathSettingKey	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected String pathSettingKey;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.setIsDirectoryTarget	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setIsDirectoryTarget(boolean enable)$/;"	m	class:DirectoryFragment	access:public	signature:(boolean enable)
DirectoryFragment.setOnDirectoryFragmentClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setOnDirectoryFragmentClosedListener(OnDirectoryFragmentClosedListener onClosedListener)$/;"	m	class:DirectoryFragment	access:public	signature:(OnDirectoryFragmentClosedListener onClosedListener)
DirectoryFragment.setPathSettingKey	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setPathSettingKey(String key)$/;"	m	class:DirectoryFragment	access:public	signature:(String key)
DirectoryFragment.setStartDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setStartDirectory(String path)$/;"	m	class:DirectoryFragment	access:public	signature:(String path)
DirectoryFragment.startDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected String startDirectory;$/;"	f	class:DirectoryFragment	access:protected
DirectoryFragment.wrapFiles	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected void wrapFiles()$/;"	m	class:DirectoryFragment	access:protected	signature:()
DirtyMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int DirtyMask; \/\/ 1 == attribute has changed & needs updating$/;"	m	struct:__anon69	access:public
DiskNumber	frontend/platform/platform_xdk.h	/^	ULONG DiskNumber;$/;"	m	struct:_XBE_CERTIFICATE	access:public
DisplayName	audio/xaudio-c/xaudio.h	/^   WCHAR DisplayName[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
DisplayRefreshRateTest	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^public final class DisplayRefreshRateTest extends Activity {$/;"	c	inherits:Activity
DisplayRefreshRateTest.Renderer	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:DisplayRefreshRateTest	inherits:GLSurfaceView.Renderer	access:private
DisplayRefreshRateTest.Renderer.Renderer	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public Renderer(Activity activity) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(Activity activity)
DisplayRefreshRateTest.Renderer.STATE_DEAD	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_DEAD = 4;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.STATE_DONE	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_DONE = 3;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.STATE_START	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_START = 0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.STATE_TEST	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_TEST = 2;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.STATE_WARMUP	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_WARMUP = 1;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.TAG	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final String TAG = "GLESRenderer";$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.TEST_SECONDS	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final double TEST_SECONDS = 10.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.WARMUP_SECONDS	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final double WARMUP_SECONDS = 2.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.activity	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private Activity activity;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.mNumFrames	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private int mNumFrames = 0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.mStartTime	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private double mStartTime = 0.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.mState	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private int mState = STATE_START;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
DisplayRefreshRateTest.Renderer.onDrawFrame	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onDrawFrame(GL10 gl) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl)
DisplayRefreshRateTest.Renderer.onSurfaceChanged	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl, int width, int height)
DisplayRefreshRateTest.Renderer.onSurfaceCreated	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl, EGLConfig config)
DisplayRefreshRateTest.Renderer.setFPSSetting	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private void setFPSSetting(double fps) {$/;"	m	class:DisplayRefreshRateTest.Renderer	file:	access:private	signature:(double fps)
DisplayRefreshRateTest.onCreate	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:DisplayRefreshRateTest	access:protected	signature:(Bundle savedInstanceState)
DisplayRefreshRateTest.onDestroy	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	protected void onDestroy() {$/;"	m	class:DisplayRefreshRateTest	access:protected	signature:()
DisplaySetFrameBuf	psp/sdk_defines.h	35;"	d
DisplaySetFrameBuf	psp/sdk_defines.h	42;"	d
Dithering	ps3/rgl/include/RGL/Types.h	/^      GLboolean		Dithering;$/;"	m	struct:RGLcontext	access:public
DownloadableCoresFragment	android/phoenix/src/com/retroarch/browser/coremanager/fragments/DownloadableCoresFragment.java	/^public final class DownloadableCoresFragment extends ListFragment$/;"	c	inherits:ListFragment
Dpc	frontend/platform/platform_xdk.h	/^    struct _KDPC *Dpc;$/;"	m	struct:_KTIMER	typeref:struct:_KTIMER::_KDPC	access:public
DpcListEntry	frontend/platform/platform_xdk.h	/^	LIST_ENTRY DpcListEntry;$/;"	m	struct:_KDPC	access:public
DpcObject	frontend/platform/platform_xdk.h	99;"	d
DrawBuffer	ps3/rgl/include/RGL/Types.h	/^      GLenum			DrawBuffer, ReadBuffer;$/;"	m	struct:RGLcontext	access:public
DrawVerticeFormats	xdk/xdk_d3d.h	/^typedef struct DrawVerticeFormats$/;"	s
DrawVerticeFormats	xdk/xdk_d3d.h	/^} DrawVerticeFormats;$/;"	t	typeref:struct:DrawVerticeFormats
DrawVerticeFormats	xenon/xenon360_video.c	/^typedef struct DrawVerticeFormats$/;"	s	file:
DrawVerticeFormats	xenon/xenon360_video.c	/^} DrawVerticeFormats;$/;"	t	typeref:struct:DrawVerticeFormats	file:
DrawVerticeFormats::color	xenon/xenon360_video.c	/^   unsigned int color;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::rhw	xdk/xdk_d3d.h	/^   float rhw;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::u	xdk/xdk_d3d.h	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::u	xenon/xenon360_video.c	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::v	xdk/xdk_d3d.h	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::v	xenon/xenon360_video.c	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::w	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::x	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::x	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::y	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::y	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DrawVerticeFormats::z	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
DrawVerticeFormats::z	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
DriverObject	frontend/platform/platform_xdk.h	/^    PDRIVER_OBJECT DriverObject;$/;"	m	struct:_DEVICE_OBJECT	access:public
DueTime	frontend/platform/platform_xdk.h	/^    ULARGE_INTEGER DueTime;$/;"	m	struct:_KTIMER	access:public
EF_PPC_EMB	wii/app_booter/elf_abi.h	514;"	d
EF_PPC_RELOCATABLE	wii/app_booter/elf_abi.h	517;"	d
EF_PPC_RELOCATABLE_LIB	wii/app_booter/elf_abi.h	518;"	d
EGL_ATTRIBS_BASE	gfx/context/drm_egl_ctx.c	378;"	d	file:
EGL_ATTRIBS_BASE	gfx/context/xegl_ctx.c	233;"	d	file:
EGL_CFLAGS	config.mk	/^EGL_CFLAGS = $/;"	m
EGL_LIBS	config.mk	/^EGL_LIBS = -lEGL$/;"	m
EI_ABIVERSION	ps3/rgl/src/cg/cgbdefs.hpp	41;"	d
EI_ABIVERSION	ps3/rgl/src/libelf/elf.h	17;"	d
EI_ABIVERSION	wii/app_booter/elf_abi.h	60;"	d
EI_ABIVERSION_RSX	ps3/rgl/src/cg/cgbdefs.hpp	26;"	d
EI_CLASS	ps3/rgl/src/cg/cgbdefs.hpp	37;"	d
EI_CLASS	ps3/rgl/src/libelf/elf.h	13;"	d
EI_CLASS	wii/app_booter/elf_abi.h	56;"	d
EI_DATA	ps3/rgl/src/cg/cgbdefs.hpp	38;"	d
EI_DATA	ps3/rgl/src/libelf/elf.h	14;"	d
EI_DATA	wii/app_booter/elf_abi.h	57;"	d
EI_MAG0	ps3/rgl/src/cg/cgbdefs.hpp	33;"	d
EI_MAG0	ps3/rgl/src/libelf/elf.h	9;"	d
EI_MAG0	wii/app_booter/elf_abi.h	52;"	d
EI_MAG1	ps3/rgl/src/cg/cgbdefs.hpp	34;"	d
EI_MAG1	ps3/rgl/src/libelf/elf.h	10;"	d
EI_MAG1	wii/app_booter/elf_abi.h	53;"	d
EI_MAG2	ps3/rgl/src/cg/cgbdefs.hpp	35;"	d
EI_MAG2	ps3/rgl/src/libelf/elf.h	11;"	d
EI_MAG2	wii/app_booter/elf_abi.h	54;"	d
EI_MAG3	ps3/rgl/src/cg/cgbdefs.hpp	36;"	d
EI_MAG3	ps3/rgl/src/libelf/elf.h	12;"	d
EI_MAG3	wii/app_booter/elf_abi.h	55;"	d
EI_NIDENT	ps3/rgl/src/cg/cgbdefs.hpp	43;"	d
EI_NIDENT	ps3/rgl/src/libelf/elf.h	19;"	d
EI_NIDENT	wii/app_booter/elf_abi.h	62;"	d
EI_OSABI	ps3/rgl/src/cg/cgbdefs.hpp	40;"	d
EI_OSABI	ps3/rgl/src/libelf/elf.h	16;"	d
EI_OSABI	wii/app_booter/elf_abi.h	59;"	d
EI_PAD	ps3/rgl/src/cg/cgbdefs.hpp	42;"	d
EI_PAD	ps3/rgl/src/libelf/elf.h	18;"	d
EI_PAD	wii/app_booter/elf_abi.h	61;"	d
EI_VERSION	ps3/rgl/src/cg/cgbdefs.hpp	39;"	d
EI_VERSION	ps3/rgl/src/libelf/elf.h	15;"	d
EI_VERSION	wii/app_booter/elf_abi.h	58;"	d
ELF32_R_INFO	ps3/rgl/src/libelf/elf.h	244;"	d
ELF32_R_INFO	wii/app_booter/elf_abi.h	405;"	d
ELF32_R_SYM	ps3/rgl/src/libelf/elf.h	242;"	d
ELF32_R_SYM	wii/app_booter/elf_abi.h	403;"	d
ELF32_R_TYPE	ps3/rgl/src/libelf/elf.h	243;"	d
ELF32_R_TYPE	wii/app_booter/elf_abi.h	404;"	d
ELF32_ST_BIND	ps3/rgl/src/cg/cgbutils.hpp	6;"	d
ELF32_ST_BIND	wii/app_booter/elf_abi.h	352;"	d
ELF32_ST_INFO	ps3/rgl/src/cg/cgbutils.hpp	8;"	d
ELF32_ST_INFO	wii/app_booter/elf_abi.h	354;"	d
ELF32_ST_TYPE	ps3/rgl/src/cg/cgbutils.hpp	7;"	d
ELF32_ST_TYPE	wii/app_booter/elf_abi.h	353;"	d
ELF32_ST_VISIBILITY	ps3/rgl/src/cg/cgbutils.hpp	9;"	d
ELF32_ST_VISIBILITY	wii/app_booter/elf_abi.h	355;"	d
ELF64_R_INFO	ps3/rgl/src/libelf/elf.h	248;"	d
ELF64_R_SYM	ps3/rgl/src/libelf/elf.h	246;"	d
ELF64_R_TYPE	ps3/rgl/src/libelf/elf.h	247;"	d
ELFABIVERSION	wii/app_booter/elf_abi.h	99;"	d
ELFCLASS32	ps3/rgl/src/cg/cgbdefs.hpp	57;"	d
ELFCLASS32	ps3/rgl/src/libelf/elf.h	29;"	d
ELFCLASS32	wii/app_booter/elf_abi.h	74;"	d
ELFCLASS64	ps3/rgl/src/cg/cgbdefs.hpp	58;"	d
ELFCLASS64	ps3/rgl/src/libelf/elf.h	30;"	d
ELFCLASS64	wii/app_booter/elf_abi.h	75;"	d
ELFCLASSNONE	ps3/rgl/src/cg/cgbdefs.hpp	56;"	d
ELFCLASSNONE	ps3/rgl/src/libelf/elf.h	28;"	d
ELFCLASSNONE	wii/app_booter/elf_abi.h	73;"	d
ELFCLASSNUM	wii/app_booter/elf_abi.h	76;"	d
ELFDATA2LSB	ps3/rgl/src/cg/cgbdefs.hpp	62;"	d
ELFDATA2LSB	ps3/rgl/src/libelf/elf.h	34;"	d
ELFDATA2LSB	wii/app_booter/elf_abi.h	80;"	d
ELFDATA2MSB	ps3/rgl/src/cg/cgbdefs.hpp	63;"	d
ELFDATA2MSB	ps3/rgl/src/libelf/elf.h	35;"	d
ELFDATA2MSB	wii/app_booter/elf_abi.h	81;"	d
ELFDATANONE	ps3/rgl/src/cg/cgbdefs.hpp	61;"	d
ELFDATANONE	ps3/rgl/src/libelf/elf.h	33;"	d
ELFDATANONE	wii/app_booter/elf_abi.h	79;"	d
ELFDATANUM	wii/app_booter/elf_abi.h	82;"	d
ELFMAG	wii/app_booter/elf_abi.h	69;"	d
ELFMAG0	ps3/rgl/src/cg/cgbdefs.hpp	48;"	d
ELFMAG0	ps3/rgl/src/libelf/elf.h	22;"	d
ELFMAG0	wii/app_booter/elf_abi.h	65;"	d
ELFMAG1	ps3/rgl/src/cg/cgbdefs.hpp	51;"	d
ELFMAG1	ps3/rgl/src/libelf/elf.h	23;"	d
ELFMAG1	wii/app_booter/elf_abi.h	66;"	d
ELFMAG2	ps3/rgl/src/cg/cgbdefs.hpp	52;"	d
ELFMAG2	ps3/rgl/src/libelf/elf.h	24;"	d
ELFMAG2	wii/app_booter/elf_abi.h	67;"	d
ELFMAG3	ps3/rgl/src/cg/cgbdefs.hpp	53;"	d
ELFMAG3	ps3/rgl/src/libelf/elf.h	25;"	d
ELFMAG3	wii/app_booter/elf_abi.h	68;"	d
ELFOSABI_AIX	ps3/rgl/src/cg/cgbdefs.hpp	71;"	d
ELFOSABI_AIX	wii/app_booter/elf_abi.h	90;"	d
ELFOSABI_CGRUNTIME	ps3/rgl/src/cg/cgbdefs.hpp	77;"	d
ELFOSABI_FREEBSD	ps3/rgl/src/cg/cgbdefs.hpp	73;"	d
ELFOSABI_FREEBSD	wii/app_booter/elf_abi.h	92;"	d
ELFOSABI_HPUX	ps3/rgl/src/cg/cgbdefs.hpp	67;"	d
ELFOSABI_HPUX	wii/app_booter/elf_abi.h	86;"	d
ELFOSABI_IRIX	ps3/rgl/src/cg/cgbdefs.hpp	72;"	d
ELFOSABI_IRIX	wii/app_booter/elf_abi.h	91;"	d
ELFOSABI_LINUX	ps3/rgl/src/cg/cgbdefs.hpp	69;"	d
ELFOSABI_LINUX	wii/app_booter/elf_abi.h	88;"	d
ELFOSABI_MODESTO	ps3/rgl/src/cg/cgbdefs.hpp	75;"	d
ELFOSABI_MODESTO	wii/app_booter/elf_abi.h	94;"	d
ELFOSABI_NETBSD	ps3/rgl/src/cg/cgbdefs.hpp	68;"	d
ELFOSABI_NETBSD	wii/app_booter/elf_abi.h	87;"	d
ELFOSABI_NONE	ps3/rgl/src/cg/cgbdefs.hpp	66;"	d
ELFOSABI_NONE	wii/app_booter/elf_abi.h	85;"	d
ELFOSABI_OPENBSD	ps3/rgl/src/cg/cgbdefs.hpp	76;"	d
ELFOSABI_OPENBSD	wii/app_booter/elf_abi.h	95;"	d
ELFOSABI_SOLARIS	ps3/rgl/src/cg/cgbdefs.hpp	70;"	d
ELFOSABI_SOLARIS	wii/app_booter/elf_abi.h	89;"	d
ELFOSABI_TRU64	ps3/rgl/src/cg/cgbdefs.hpp	74;"	d
ELFOSABI_TRU64	wii/app_booter/elf_abi.h	93;"	d
ELF_BSS	wii/app_booter/elf_abi.h	282;"	d
ELF_COMMENT	wii/app_booter/elf_abi.h	283;"	d
ELF_DATA	wii/app_booter/elf_abi.h	284;"	d
ELF_DATA1	wii/app_booter/elf_abi.h	285;"	d
ELF_DEBUG	wii/app_booter/elf_abi.h	286;"	d
ELF_DYNAMIC	wii/app_booter/elf_abi.h	287;"	d
ELF_DYNSTR	wii/app_booter/elf_abi.h	288;"	d
ELF_DYNSYM	wii/app_booter/elf_abi.h	289;"	d
ELF_FINI	wii/app_booter/elf_abi.h	290;"	d
ELF_FINI_ARRAY	wii/app_booter/elf_abi.h	291;"	d
ELF_GOT	wii/app_booter/elf_abi.h	292;"	d
ELF_H	ps3/rgl/src/libelf/elf.h	2;"	d
ELF_HASH	wii/app_booter/elf_abi.h	293;"	d
ELF_INIT	wii/app_booter/elf_abi.h	294;"	d
ELF_INIT_ARRAY	wii/app_booter/elf_abi.h	295;"	d
ELF_INTERP	wii/app_booter/elf_abi.h	296;"	d
ELF_LINE	wii/app_booter/elf_abi.h	297;"	d
ELF_NOTE	wii/app_booter/elf_abi.h	298;"	d
ELF_PLT	wii/app_booter/elf_abi.h	299;"	d
ELF_PREINIT_ARRAY	wii/app_booter/elf_abi.h	300;"	d
ELF_REL_DATA	wii/app_booter/elf_abi.h	301;"	d
ELF_REL_DYN	wii/app_booter/elf_abi.h	304;"	d
ELF_REL_FINI	wii/app_booter/elf_abi.h	302;"	d
ELF_REL_INIT	wii/app_booter/elf_abi.h	303;"	d
ELF_REL_RODATA	wii/app_booter/elf_abi.h	305;"	d
ELF_REL_TEXT	wii/app_booter/elf_abi.h	306;"	d
ELF_RODATA	wii/app_booter/elf_abi.h	307;"	d
ELF_RODATA1	wii/app_booter/elf_abi.h	308;"	d
ELF_SHSTRTAB	wii/app_booter/elf_abi.h	309;"	d
ELF_STRTAB	wii/app_booter/elf_abi.h	310;"	d
ELF_SYMTAB	wii/app_booter/elf_abi.h	311;"	d
ELF_SYMTAB_SHNDX	wii/app_booter/elf_abi.h	312;"	d
ELF_TARGET	wii/app_booter/Makefile	/^ELF_TARGET := app_booter.elf$/;"	m
ELF_TARG_VER	wii/app_booter/elf_abi.h	506;"	d
ELF_TBSS	wii/app_booter/elf_abi.h	313;"	d
ELF_TDATA	wii/app_booter/elf_abi.h	314;"	d
ELF_TDATA1	wii/app_booter/elf_abi.h	315;"	d
ELF_TEXT	wii/app_booter/elf_abi.h	316;"	d
ELF_rel_type_t	ps3/rgl/src/libelf/readelf.h	/^   } ELF_rel_type_t;$/;"	t	typeref:struct:__anon36
ELF_section_t	ps3/rgl/src/libelf/readelf.h	/^   } ELF_section_t;$/;"	t	typeref:struct:_ELF_section_t
ELF_segment_t	ps3/rgl/src/libelf/readelf.h	/^   } ELF_segment_t;$/;"	t	typeref:struct:_ELF_segment_t
ELF_symbol_t	ps3/rgl/src/libelf/readelf.h	/^   } ELF_symbol_t;$/;"	t	typeref:struct:__anon35
ELF_t	ps3/rgl/src/libelf/readelf.h	/^   } ELF_t;$/;"	t	typeref:struct:_ELF_t
EMULATOR_CONTENT_DIR	frontend/platform/platform_ps3.c	27;"	d	file:
EM_386	wii/app_booter/elf_abi.h	142;"	d
EM_68HC05	wii/app_booter/elf_abi.h	201;"	d
EM_68HC08	wii/app_booter/elf_abi.h	200;"	d
EM_68HC11	wii/app_booter/elf_abi.h	199;"	d
EM_68HC12	wii/app_booter/elf_abi.h	183;"	d
EM_68HC16	wii/app_booter/elf_abi.h	198;"	d
EM_68K	wii/app_booter/elf_abi.h	143;"	d
EM_860	wii/app_booter/elf_abi.h	148;"	d
EM_88K	wii/app_booter/elf_abi.h	144;"	d
EM_960	wii/app_booter/elf_abi.h	161;"	d
EM_ALPHA	wii/app_booter/elf_abi.h	171;"	d
EM_ARC	wii/app_booter/elf_abi.h	175;"	d
EM_ARM	wii/app_booter/elf_abi.h	170;"	d
EM_AVR	wii/app_booter/elf_abi.h	212;"	d
EM_CHRIS	wii/app_booter/elf_abi.h	205;"	d
EM_COLDFIRE	wii/app_booter/elf_abi.h	182;"	d
EM_D10V	wii/app_booter/elf_abi.h	214;"	d
EM_D30V	wii/app_booter/elf_abi.h	215;"	d
EM_FIREPATH	wii/app_booter/elf_abi.h	207;"	d
EM_FR20	wii/app_booter/elf_abi.h	167;"	d
EM_FR30	wii/app_booter/elf_abi.h	213;"	d
EM_FX66	wii/app_booter/elf_abi.h	195;"	d
EM_H8S	wii/app_booter/elf_abi.h	178;"	d
EM_H8_300	wii/app_booter/elf_abi.h	176;"	d
EM_H8_300H	wii/app_booter/elf_abi.h	177;"	d
EM_H8_500	wii/app_booter/elf_abi.h	179;"	d
EM_HUANY	wii/app_booter/elf_abi.h	210;"	d
EM_IA_64	wii/app_booter/elf_abi.h	180;"	d
EM_JAVELIN	wii/app_booter/elf_abi.h	206;"	d
EM_M32	wii/app_booter/elf_abi.h	140;"	d
EM_M32R	wii/app_booter/elf_abi.h	217;"	d
EM_ME16	wii/app_booter/elf_abi.h	189;"	d
EM_MIPS	wii/app_booter/elf_abi.h	149;"	d
EM_MIPS_RS4_BE	wii/app_booter/elf_abi.h	151;"	d
EM_MIPS_X	wii/app_booter/elf_abi.h	181;"	d
EM_MMA	wii/app_booter/elf_abi.h	184;"	d
EM_MMIX	wii/app_booter/elf_abi.h	209;"	d
EM_MN10200	wii/app_booter/elf_abi.h	219;"	d
EM_MN10300	wii/app_booter/elf_abi.h	218;"	d
EM_NCPU	wii/app_booter/elf_abi.h	186;"	d
EM_NDR1	wii/app_booter/elf_abi.h	187;"	d
EM_NONE	ps3/rgl/src/cg/cgbdefs.hpp	19;"	d
EM_NONE	wii/app_booter/elf_abi.h	139;"	d
EM_NUM	wii/app_booter/elf_abi.h	221;"	d
EM_PARISC	wii/app_booter/elf_abi.h	157;"	d
EM_PCP	wii/app_booter/elf_abi.h	185;"	d
EM_PDSP	wii/app_booter/elf_abi.h	193;"	d
EM_PJ	wii/app_booter/elf_abi.h	220;"	d
EM_PPC	ps3/rgl/src/libelf/elf.h	49;"	d
EM_PPC	wii/app_booter/elf_abi.h	162;"	d
EM_PPC64	ps3/rgl/src/libelf/elf.h	50;"	d
EM_PPC64	wii/app_booter/elf_abi.h	163;"	d
EM_PRISM	wii/app_booter/elf_abi.h	211;"	d
EM_RCE	wii/app_booter/elf_abi.h	169;"	d
EM_RH32	wii/app_booter/elf_abi.h	168;"	d
EM_RSX	ps3/rgl/src/cg/cgbdefs.hpp	20;"	d
EM_RSX_NONE	ps3/rgl/src/cg/cgbdefs.hpp	23;"	d
EM_S370	wii/app_booter/elf_abi.h	150;"	d
EM_S390	wii/app_booter/elf_abi.h	164;"	d
EM_SH	wii/app_booter/elf_abi.h	172;"	d
EM_SPARC	wii/app_booter/elf_abi.h	141;"	d
EM_SPARC32PLUS	wii/app_booter/elf_abi.h	160;"	d
EM_SPARCV9	wii/app_booter/elf_abi.h	173;"	d
EM_ST100	wii/app_booter/elf_abi.h	190;"	d
EM_ST19	wii/app_booter/elf_abi.h	203;"	d
EM_ST7	wii/app_booter/elf_abi.h	197;"	d
EM_ST9PLUS	wii/app_booter/elf_abi.h	196;"	d
EM_STARCORE	wii/app_booter/elf_abi.h	188;"	d
EM_SVX	wii/app_booter/elf_abi.h	202;"	d
EM_TINYJ	wii/app_booter/elf_abi.h	191;"	d
EM_TRICORE	wii/app_booter/elf_abi.h	174;"	d
EM_V800	wii/app_booter/elf_abi.h	166;"	d
EM_V850	wii/app_booter/elf_abi.h	216;"	d
EM_VAX	wii/app_booter/elf_abi.h	204;"	d
EM_VPP500	wii/app_booter/elf_abi.h	159;"	d
EM_X86_64	wii/app_booter/elf_abi.h	192;"	d
EM_ZSP	wii/app_booter/elf_abi.h	208;"	d
ENABLE_AVX	audio/sinc.c	54;"	d	file:
ENABLE_AVX	audio/sinc.c	62;"	d	file:
ENABLE_AVX	audio/sinc.c	71;"	d	file:
ENABLE_AVX	audio/sinc.c	80;"	d	file:
ENABLE_AVX	audio/sinc.c	89;"	d	file:
ENDIAN_32	ps3/rgl/src/include/rgl-constants.h	7;"	d
ENDIAN_32	ps3/rgl/src/include/rgl-constants.h	9;"	d
ENDIAN_32	ps3/rgl/src/rgl_ps3_raster.cpp	49;"	d	file:
ENDSWAP	ps3/rgl/src/cg/cgnv2rt.h	8;"	d
END_GROUP	apple/common/setting_data.c	306;"	d	file:
END_SUB_GROUP	apple/common/setting_data.c	308;"	d	file:
ENTRIES_HEIGHT	frontend/menu/disp/rmenu.c	45;"	d	file:
ENTRIES_HEIGHT	frontend/menu/disp/rmenu.c	54;"	d	file:
EOF	media/360/hd/rarch_audio_options.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_controls.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_core_options.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_filebrowser.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_libretrocore_browser.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_load_game_history.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_settings.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_shader_browser.bat	/^:EOF$/;"	l
EOF	media/360/hd/rarch_video_options.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_audio_options.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_controls.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_core_options.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_filebrowser.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_libretrocore_browser.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_load_game_history.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_settings.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_shader_browser.bat	/^:EOF$/;"	l
EOF	media/360/sd/rarch_video_options.bat	/^:EOF$/;"	l
ERROR_DEVICE_NOT_CONNECTED	input/winxinput_joypad.c	80;"	d	file:
ET_CORE	ps3/rgl/src/cg/cgbdefs.hpp	12;"	d
ET_CORE	ps3/rgl/src/libelf/elf.h	46;"	d
ET_CORE	wii/app_booter/elf_abi.h	131;"	d
ET_DYN	ps3/rgl/src/cg/cgbdefs.hpp	11;"	d
ET_DYN	ps3/rgl/src/libelf/elf.h	45;"	d
ET_DYN	wii/app_booter/elf_abi.h	130;"	d
ET_EXEC	ps3/rgl/src/cg/cgbdefs.hpp	10;"	d
ET_EXEC	ps3/rgl/src/libelf/elf.h	44;"	d
ET_EXEC	wii/app_booter/elf_abi.h	129;"	d
ET_HIOS	ps3/rgl/src/cg/cgbdefs.hpp	14;"	d
ET_HIOS	wii/app_booter/elf_abi.h	134;"	d
ET_HIPROC	ps3/rgl/src/cg/cgbdefs.hpp	16;"	d
ET_HIPROC	wii/app_booter/elf_abi.h	136;"	d
ET_LOOS	ps3/rgl/src/cg/cgbdefs.hpp	13;"	d
ET_LOOS	wii/app_booter/elf_abi.h	133;"	d
ET_LOPROC	ps3/rgl/src/cg/cgbdefs.hpp	15;"	d
ET_LOPROC	wii/app_booter/elf_abi.h	135;"	d
ET_NONE	ps3/rgl/src/cg/cgbdefs.hpp	8;"	d
ET_NONE	ps3/rgl/src/libelf/elf.h	42;"	d
ET_NONE	wii/app_booter/elf_abi.h	127;"	d
ET_NUM	wii/app_booter/elf_abi.h	132;"	d
ET_REL	ps3/rgl/src/cg/cgbdefs.hpp	9;"	d
ET_REL	ps3/rgl/src/libelf/elf.h	43;"	d
ET_REL	wii/app_booter/elf_abi.h	128;"	d
EV_CURRENT	ps3/rgl/src/cg/cgbdefs.hpp	30;"	d
EV_CURRENT	ps3/rgl/src/libelf/elf.h	39;"	d
EV_CURRENT	wii/app_booter/elf_abi.h	225;"	d
EV_NONE	ps3/rgl/src/cg/cgbdefs.hpp	29;"	d
EV_NONE	ps3/rgl/src/libelf/elf.h	38;"	d
EV_NONE	wii/app_booter/elf_abi.h	224;"	d
EV_NUM	wii/app_booter/elf_abi.h	226;"	d
EXECUTABLE_MEM_ADDR	wii/app_booter/main.c	13;"	d	file:
EXECUTE_ADDR	frontend/platform/platform_wii.c	12;"	d	file:
EXE_EXT	wii/app_booter/Makefile	/^EXE_EXT = .exe$/;"	m
EXPORTNUM	frontend/platform/platform_xdk.h	39;"	d
EXP_CLASSIC	apple/common/hidpad/wiimote.h	167;"	d
EXP_HANDSHAKE_LEN	apple/common/hidpad/wiimote.h	109;"	d
EXP_ID_CODE_CLASSIC_CONTROLLER	apple/common/hidpad/wiimote.h	101;"	d
EXP_NONE	apple/common/hidpad/wiimote.h	166;"	d
EXT_EXECUTABLES	file_ext.h	22;"	d
EXT_EXECUTABLES	file_ext.h	24;"	d
EXT_EXECUTABLES	file_ext.h	26;"	d
EXT_EXECUTABLES	file_ext.h	30;"	d
EXT_EXECUTABLES	file_ext.h	35;"	d
EXT_EXECUTABLES	file_ext.h	40;"	d
EXT_EXECUTABLES	file_ext.h	45;"	d
EXT_EXECUTABLES	file_ext.h	60;"	d
EbootMeta	ps3/ps3py/pkg.py	/^class EbootMeta(Struct):$/;"	c	inherits:Struct
Elf32_Addr	wii/app_booter/elf_abi.h	/^typedef u32	Elf32_Addr;	\/* Unsigned program address *\/$/;"	t
Elf32_Dyn	ps3/rgl/src/cg/cgbdefs.hpp	/^struct Elf32_Dyn$/;"	s
Elf32_Dyn	wii/app_booter/elf_abi.h	/^} Elf32_Dyn;$/;"	t	typeref:struct:__anon7
Elf32_Dyn::__anon34::d_ptr	ps3/rgl/src/cg/cgbdefs.hpp	/^        unsigned int d_ptr;$/;"	m	union:Elf32_Dyn::__anon34	access:public
Elf32_Dyn::__anon34::d_val	ps3/rgl/src/cg/cgbdefs.hpp	/^        unsigned int d_val;$/;"	m	union:Elf32_Dyn::__anon34	access:public
Elf32_Dyn::d_tag	ps3/rgl/src/cg/cgbdefs.hpp	/^    signed int d_tag;$/;"	m	struct:Elf32_Dyn	access:public
Elf32_Dyn::d_un	ps3/rgl/src/cg/cgbdefs.hpp	/^    } d_un;$/;"	m	struct:Elf32_Dyn	typeref:union:Elf32_Dyn::__anon34	access:public
Elf32_Ehdr	ps3/rgl/src/libelf/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon37
Elf32_Ehdr	wii/app_booter/elf_abi.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:elfhdr
Elf32_Half	wii/app_booter/elf_abi.h	/^typedef u16	Elf32_Half;	\/* Unsigned medium integer *\/$/;"	t
Elf32_Note	ps3/rgl/src/cg/cgbdefs.hpp	/^struct Elf32_Note$/;"	s
Elf32_Note::n_descsz	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_descsz;	\/* Content size *\/$/;"	m	struct:Elf32_Note	access:public
Elf32_Note::n_namesz	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_namesz;	\/* Name size *\/$/;"	m	struct:Elf32_Note	access:public
Elf32_Note::n_type	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_type;		\/* Content type *\/$/;"	m	struct:Elf32_Note	access:public
Elf32_Off	wii/app_booter/elf_abi.h	/^typedef u32	Elf32_Off;	\/* Unsigned file offset *\/$/;"	t
Elf32_Phdr	ps3/rgl/src/libelf/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon39
Elf32_Phdr	wii/app_booter/elf_abi.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon6
Elf32_Rel	ps3/rgl/src/libelf/elf.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon43
Elf32_Rel	wii/app_booter/elf_abi.h	/^} Elf32_Rel;$/;"	t	typeref:struct:__anon4
Elf32_Rela	ps3/rgl/src/libelf/elf.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon45
Elf32_Rela	wii/app_booter/elf_abi.h	/^} Elf32_Rela;$/;"	t	typeref:struct:__anon5
Elf32_Shdr	ps3/rgl/src/libelf/elf.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon41
Elf32_Shdr	wii/app_booter/elf_abi.h	/^} Elf32_Shdr;$/;"	t	typeref:struct:__anon3
Elf32_Sword	wii/app_booter/elf_abi.h	/^typedef s32	Elf32_Sword;	\/* Signed large integer *\/$/;"	t
Elf32_Sym	ps3/rgl/src/libelf/elf.h	/^} Elf32_Sym;$/;"	t	typeref:struct:__anon42
Elf32_Sym	wii/app_booter/elf_abi.h	/^} Elf32_Sym;$/;"	t	typeref:struct:elf32_sym
Elf32_Word	wii/app_booter/elf_abi.h	/^typedef u32	Elf32_Word;	\/* Unsigned large integer *\/$/;"	t
Elf32_cgParameter	ps3/rgl/src/cg/cgbtypes.h	/^} Elf32_cgParameter; \/\/20 bytes$/;"	t	typeref:struct:_Elf32_cgParameter
Elf64_Ehdr	ps3/rgl/src/libelf/elf.h	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon38
Elf64_Phdr	ps3/rgl/src/libelf/elf.h	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon40
Elf64_Rel	ps3/rgl/src/libelf/elf.h	/^} Elf64_Rel;$/;"	t	typeref:struct:__anon44
Elf64_Rela	ps3/rgl/src/libelf/elf.h	/^} Elf64_Rela;$/;"	t	typeref:struct:__anon46
EnabledMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int EnabledMask; \/\/ 1 == attribute is enabled for drawing$/;"	m	struct:__anon69	access:public
EntryPoint	frontend/platform/platform_xdk.h	/^	PVOID EntryPoint;$/;"	m	struct:_XBE_HEADER	access:public
ExceptionFrame	frontend/platform/platform_xdk.h	/^	PVOID *ExceptionFrame;$/;"	m	struct:_FS_STRUCTURE	access:public
F2X	ps3/rgl/include/RGL/TypeUtils.h	86;"	d
FAIL_CPU	retroarch.c	2889;"	d	file:
FASTCALL	frontend/platform/platform_xdk.h	30;"	d
FBIOGET_LAYER_HDL_0	gfx/context/sunxi_disp_ioctl.h	868;"	d
FBIOGET_LAYER_HDL_1	gfx/context/sunxi_disp_ioctl.h	869;"	d
FBIOPUT_ALPHA_VALUE	gfx/context/sunxi_disp_ioctl.h	875;"	d
FBIO_ALPHA_OFF	gfx/context/sunxi_disp_ioctl.h	874;"	d
FBIO_ALPHA_ON	gfx/context/sunxi_disp_ioctl.h	873;"	d
FBIO_CLOSE	gfx/context/sunxi_disp_ioctl.h	871;"	d
FBIO_DISPLAY_SCREEN0_ONLY	gfx/context/sunxi_disp_ioctl.h	877;"	d
FBIO_DISPLAY_SCREEN1_ONLY	gfx/context/sunxi_disp_ioctl.h	878;"	d
FBIO_DISPLAY_TWO_DIFF_SCREEN_SAME_CONTENTS	gfx/context/sunxi_disp_ioctl.h	880;"	d
FBIO_DISPLAY_TWO_SAME_SCREEN_TB	gfx/context/sunxi_disp_ioctl.h	879;"	d
FBIO_OPEN	gfx/context/sunxi_disp_ioctl.h	872;"	d
FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS	gfx/context/sunxi_disp_ioctl.h	/^	FB_MODE_DUAL_DIFF_SCREEN_SAME_CONTENTS = 3,$/;"	e	enum:__anon200
FB_MODE_DUAL_SAME_SCREEN_TB	gfx/context/sunxi_disp_ioctl.h	/^	FB_MODE_DUAL_SAME_SCREEN_TB = 2,$/;"	e	enum:__anon200
FB_MODE_SCREEN0	gfx/context/sunxi_disp_ioctl.h	/^	FB_MODE_SCREEN0 = 0,$/;"	e	enum:__anon200
FB_MODE_SCREEN1	gfx/context/sunxi_disp_ioctl.h	/^	FB_MODE_SCREEN1 = 1,$/;"	e	enum:__anon200
FFEMU_PIX_ARGB8888	record/ffemu.h	/^   FFEMU_PIX_ARGB8888$/;"	e	enum:ffemu_pix_format
FFEMU_PIX_BGR24	record/ffemu.h	/^   FFEMU_PIX_BGR24,$/;"	e	enum:ffemu_pix_format
FFEMU_PIX_RGB565	record/ffemu.h	/^   FFEMU_PIX_RGB565 = 0,$/;"	e	enum:ffemu_pix_format
FFMPEG_RECORD_ARG	retroarch.c	862;"	d	file:
FG_COL	frontend/frontend_xenon.c	48;"	d	file:
FIFO_BUF_TYPEDEF	fifo_buffer.h	28;"	d
FIFO_RESERVE_SIZE	ps3/rgl/src/include/rgl-constants.h	311;"	d
FILE	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int FILE = 2;$/;"	f	class:FileWrapper	access:public
FILE_ANY_ACCESS	frontend/platform/platform_xdk.h	248;"	d
FILE_AUTOGENERATED_DEVICE_NAME	frontend/platform/platform_xdk.h	216;"	d
FILE_COMPLETE_IF_OPLOCKED	frontend/platform/platform_xdk.h	143;"	d
FILE_COPY_STRUCTURED_STORAGE	frontend/platform/platform_xdk.h	155;"	d
FILE_CREATE	frontend/platform/platform_xdk.h	126;"	d
FILE_CREATED	frontend/platform/platform_xdk.h	228;"	d
FILE_CREATE_TREE_CONNECTION	frontend/platform/platform_xdk.h	142;"	d
FILE_DELETE_ON_CLOSE	frontend/platform/platform_xdk.h	147;"	d
FILE_DEVICE_CD_ROM	frontend/platform/platform_xdk.h	194;"	d
FILE_DEVICE_CD_ROM	frontend/platform/platform_xdk.h	238;"	d
FILE_DEVICE_CD_ROM_FILE_SYSTEM	frontend/platform/platform_xdk.h	195;"	d
FILE_DEVICE_CD_ROM_FILE_SYSTEM	frontend/platform/platform_xdk.h	239;"	d
FILE_DEVICE_CONTROLLER	frontend/platform/platform_xdk.h	196;"	d
FILE_DEVICE_CONTROLLER	frontend/platform/platform_xdk.h	240;"	d
FILE_DEVICE_DISK	frontend/platform/platform_xdk.h	197;"	d
FILE_DEVICE_DISK	frontend/platform/platform_xdk.h	243;"	d
FILE_DEVICE_DISK_FILE_SYSTEM	frontend/platform/platform_xdk.h	198;"	d
FILE_DEVICE_DISK_FILE_SYSTEM	frontend/platform/platform_xdk.h	244;"	d
FILE_DEVICE_DVD	frontend/platform/platform_xdk.h	245;"	d
FILE_DEVICE_FILE_SYSTEM	frontend/platform/platform_xdk.h	199;"	d
FILE_DEVICE_FULLSCREEN_VIDEO	frontend/platform/platform_xdk.h	206;"	d
FILE_DEVICE_IS_MOUNTED	frontend/platform/platform_xdk.h	214;"	d
FILE_DEVICE_NULL	frontend/platform/platform_xdk.h	200;"	d
FILE_DEVICE_SCREEN	frontend/platform/platform_xdk.h	201;"	d
FILE_DEVICE_SCSI	frontend/platform/platform_xdk.h	241;"	d
FILE_DEVICE_SECURE_OPEN	frontend/platform/platform_xdk.h	217;"	d
FILE_DEVICE_SOUND	frontend/platform/platform_xdk.h	202;"	d
FILE_DEVICE_UNKNOWN	frontend/platform/platform_xdk.h	203;"	d
FILE_DEVICE_VIDEO	frontend/platform/platform_xdk.h	204;"	d
FILE_DEVICE_VIRTUAL_DISK	frontend/platform/platform_xdk.h	205;"	d
FILE_DIRECTORY_FILE	frontend/platform/platform_xdk.h	135;"	d
FILE_DOES_NOT_EXIST	frontend/platform/platform_xdk.h	231;"	d
FILE_EXISTS	frontend/platform/platform_xdk.h	230;"	d
FILE_EXTRACT_H__	file_extract.h	17;"	d
FILE_FLOPPY_DISKETTE	frontend/platform/platform_xdk.h	211;"	d
FILE_FS_DEVICE_INFORMATION	frontend/platform/platform_xdk.h	/^} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;     $/;"	t	typeref:struct:_FILE_FS_DEVICE_INFORMATION
FILE_FS_SIZE_INFORMATION	frontend/platform/platform_xdk.h	/^} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;$/;"	t	typeref:struct:_FILE_FS_SIZE_INFORMATION
FILE_MAXIMUM_DISPOSITION	frontend/platform/platform_xdk.h	130;"	d
FILE_NON_DIRECTORY_FILE	frontend/platform/platform_xdk.h	141;"	d
FILE_NO_COMPRESSION	frontend/platform/platform_xdk.h	150;"	d
FILE_NO_EA_KNOWLEDGE	frontend/platform/platform_xdk.h	144;"	d
FILE_NO_INTERMEDIATE_BUFFERING	frontend/platform/platform_xdk.h	138;"	d
FILE_OBJECT	frontend/platform/platform_xdk.h	/^} FILE_OBJECT;$/;"	t	typeref:struct:_FILE_OBJECT
FILE_OPEN	frontend/platform/platform_xdk.h	125;"	d
FILE_OPENED	frontend/platform/platform_xdk.h	227;"	d
FILE_OPEN_BY_FILE_ID	frontend/platform/platform_xdk.h	148;"	d
FILE_OPEN_FOR_BACKUP_INTENT	frontend/platform/platform_xdk.h	149;"	d
FILE_OPEN_FOR_FREE_SPACE_QUERY	frontend/platform/platform_xdk.h	154;"	d
FILE_OPEN_FOR_RECOVERY	frontend/platform/platform_xdk.h	145;"	d
FILE_OPEN_IF	frontend/platform/platform_xdk.h	127;"	d
FILE_OPEN_NO_RECALL	frontend/platform/platform_xdk.h	153;"	d
FILE_OPEN_REPARSE_POINT	frontend/platform/platform_xdk.h	152;"	d
FILE_OVERWRITE	frontend/platform/platform_xdk.h	128;"	d
FILE_OVERWRITE_IF	frontend/platform/platform_xdk.h	129;"	d
FILE_OVERWRITTEN	frontend/platform/platform_xdk.h	229;"	d
FILE_RANDOM_ACCESS	frontend/platform/platform_xdk.h	146;"	d
FILE_READ_ACCESS	frontend/platform/platform_xdk.h	249;"	d
FILE_READ_ONLY_DEVICE	frontend/platform/platform_xdk.h	210;"	d
FILE_REMOTE_DEVICE	frontend/platform/platform_xdk.h	213;"	d
FILE_REMOVABLE_MEDIA	frontend/platform/platform_xdk.h	209;"	d
FILE_RESERVE_OPFILTER	frontend/platform/platform_xdk.h	151;"	d
FILE_SEQUENTIAL_ONLY	frontend/platform/platform_xdk.h	137;"	d
FILE_STRUCTURED_STORAGE	frontend/platform/platform_xdk.h	156;"	d
FILE_SUPERSEDE	frontend/platform/platform_xdk.h	124;"	d
FILE_SUPERSEDED	frontend/platform/platform_xdk.h	226;"	d
FILE_SYNCHRONOUS_IO_ALERT	frontend/platform/platform_xdk.h	139;"	d
FILE_SYNCHRONOUS_IO_NONALERT	frontend/platform/platform_xdk.h	140;"	d
FILE_USE_FILE_POINTER_POSITION	frontend/platform/platform_xdk.h	235;"	d
FILE_VALID_MAILSLOT_OPTION_FLAGS	frontend/platform/platform_xdk.h	159;"	d
FILE_VALID_OPTION_FLAGS	frontend/platform/platform_xdk.h	157;"	d
FILE_VALID_PIPE_OPTION_FLAGS	frontend/platform/platform_xdk.h	158;"	d
FILE_VALID_SET_FLAGS	frontend/platform/platform_xdk.h	160;"	d
FILE_VIRTUAL_VOLUME	frontend/platform/platform_xdk.h	215;"	d
FILE_WRITE_ACCESS	frontend/platform/platform_xdk.h	250;"	d
FILE_WRITE_ONCE_MEDIA	frontend/platform/platform_xdk.h	212;"	d
FILE_WRITE_THROUGH	frontend/platform/platform_xdk.h	136;"	d
FILE_WRITE_TO_END_OF_FILE	frontend/platform/platform_xdk.h	234;"	d
FILTER_H__	gfx/scaler/filter.h	18;"	d
FILTER_UNITY	gfx/scaler/scaler.h	24;"	d
FIND_CLASS	android/native/jni/jni_macros.h	29;"	d
FIRST_REQUEST_CODE	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final int FIRST_REQUEST_CODE = 100;$/;"	f	class:PreferenceListFragment	file:	access:private
FNM_NOMATCH	tools/retrolaunch/rl_fnmatch.h	4;"	d
FONTFILEVERSION	gfx/fonts/xdk360_fonts.cpp	52;"	d	file:
FONT_HEIGHT	gfx/fonts/bitmap.h	20;"	d
FONT_HEIGHT_STRIDE	gfx/fonts/bitmap.h	22;"	d
FONT_OFFSET	gfx/fonts/bitmap.h	24;"	d
FONT_SCALE	gfx/fonts/xdk360_fonts.cpp	23;"	d	file:
FONT_SIZE_NORMAL	frontend/menu/disp/rmenu.c	52;"	d	file:
FONT_SIZE_NORMAL	frontend/menu/disp/rmenu.c	61;"	d	file:
FONT_WIDTH	gfx/fonts/bitmap.h	19;"	d
FONT_WIDTH_STRIDE	gfx/fonts/bitmap.h	21;"	d
FORMAT	audio/librsound.c	308;"	d	file:
FPS_UPDATE_INTERVAL	gfx/gfx_common.c	26;"	d	file:
FRAGMENT_PROFILE_INDEX	ps3/rgl/include/Cg/CgCommon.h	253;"	d
FRAGMENT_PROFILE_INDEX	ps3/rgl/src/include/rgl-constants.h	12;"	d
FRAMES	audio/jack.c	30;"	d	file:
FRAMESIZE	audio/librsound.c	307;"	d	file:
FREETYPE_CFLAGS	config.mk	/^FREETYPE_CFLAGS = -I\/usr\/include\/freetype2$/;"	m
FREETYPE_LIBS	config.mk	/^FREETYPE_LIBS = -lfreetype$/;"	m
FS_INFORMATION_CLASS	frontend/platform/platform_xdk.h	/^} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;$/;"	t	typeref:enum:_FSINFOCLASS
FS_STRUCTURE	frontend/platform/platform_xdk.h	/^} FS_STRUCTURE, *PFS_STRUCTURE;$/;"	t	typeref:struct:_FS_STRUCTURE
FVF	gfx/d3d9/render_chain.cpp	51;"	d	file:
FileAddress	frontend/platform/platform_xdk.h	/^	ULONG FileAddress;$/;"	m	struct:_XBE_SECTION	access:public
FileFsAttributeInformation	frontend/platform/platform_xdk.h	/^	FileFsAttributeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsControlInformation	frontend/platform/platform_xdk.h	/^	FileFsControlInformation,$/;"	e	enum:_FSINFOCLASS
FileFsDeviceInformation	frontend/platform/platform_xdk.h	/^	FileFsDeviceInformation,$/;"	e	enum:_FSINFOCLASS
FileFsFullSizeInformation	frontend/platform/platform_xdk.h	/^	FileFsFullSizeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsLabelInformation	frontend/platform/platform_xdk.h	/^	FileFsLabelInformation,$/;"	e	enum:_FSINFOCLASS
FileFsObjectInformation	frontend/platform/platform_xdk.h	/^	FileFsObjectInformation$/;"	e	enum:_FSINFOCLASS
FileFsSizeInformation	frontend/platform/platform_xdk.h	/^	FileFsSizeInformation,$/;"	e	enum:_FSINFOCLASS
FileFsVolumeInformation	frontend/platform/platform_xdk.h	/^	FileFsVolumeInformation = 1,$/;"	e	enum:_FSINFOCLASS
FileHeader	ps3/ps3py/pkg.py	/^class FileHeader(Struct):$/;"	c	inherits:Struct
FileSize	frontend/platform/platform_xdk.h	/^	ULONG FileSize;$/;"	m	struct:_XBE_SECTION	access:public
FileWrapper	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public FileWrapper(File file, int type, boolean isEnabled) {$/;"	m	class:FileWrapper	access:public	signature:(File file, int type, boolean isEnabled)
FileWrapper	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^public final class FileWrapper implements IconAdapterItem, Comparable<FileWrapper> {$/;"	c	inherits:IconAdapterItem,Comparable
FileWrapper.DIRSELECT	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int DIRSELECT = 0;$/;"	f	class:FileWrapper	access:public
FileWrapper.FILE	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int FILE = 2;$/;"	f	class:FileWrapper	access:public
FileWrapper.FileWrapper	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public FileWrapper(File file, int type, boolean isEnabled) {$/;"	m	class:FileWrapper	access:public	signature:(File file, int type, boolean isEnabled)
FileWrapper.PARENT	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int PARENT = 1;$/;"	f	class:FileWrapper	access:public
FileWrapper.compareTo	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public int compareTo(FileWrapper other) {$/;"	m	class:FileWrapper	access:public	signature:(FileWrapper other)
FileWrapper.dirSelectItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean dirSelectItem;$/;"	f	class:FileWrapper	file:	access:private
FileWrapper.enabled	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean enabled;$/;"	f	class:FileWrapper	file:	access:private
FileWrapper.file	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final File file;$/;"	f	class:FileWrapper	file:	access:private
FileWrapper.getFile	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public File getFile() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.getIconDrawable	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public Drawable getIconDrawable() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.getIconResourceId	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public int getIconResourceId() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.getSubText	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public String getSubText() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.getText	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public String getText() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.isDirSelectItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isDirSelectItem() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.isEnabled	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isEnabled() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.isParentItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isParentItem() {$/;"	m	class:FileWrapper	access:public	signature:()
FileWrapper.parentItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean parentItem;$/;"	f	class:FileWrapper	file:	access:private
FileWrapper.typeIndex	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final int typeIndex;$/;"	f	class:FileWrapper	file:	access:private
FindMediaFile	xdk/xdk_resources.cpp	/^static HRESULT FindMediaFile( char *strPath, const char *strFilename, size_t strPathsize)$/;"	f	file:	signature:( char *strPath, const char *strFilename, size_t strPathsize)
Flags	audio/xaudio-c/xaudio.h	/^   UINT32 Flags;$/;"	m	struct:XAUDIO2_BUFFER	access:public
Flags	frontend/platform/platform_xdk.h	/^	ULONG Flags;$/;"	m	struct:_XBE_SECTION	access:public
FlipSem	ps3/rgl/src/rgl_ps3.cpp	/^static sys_semaphore_t FlipSem;$/;"	v	file:
FontFileHeaderImage_t	gfx/fonts/xdk360_fonts.cpp	/^} FontFileHeaderImage_t;$/;"	t	typeref:struct:__anon206	file:
FontFileStrikesImage_t	gfx/fonts/xdk360_fonts.cpp	/^} FontFileStrikesImage_t; $/;"	t	typeref:struct:__anon207	file:
Font_Locals_t	gfx/fonts/xdk360_fonts.cpp	/^} Font_Locals_t;$/;"	t	typeref:struct:__anon208	file:
FragmentProgram	ps3/rgl/include/RGL/Types.h	/^      GLboolean		FragmentProgram;$/;"	m	struct:RGLcontext	access:public
FrameworkDir	dist-scripts/xdk360_env.bat	/^@set FrameworkDir=%FrameworkDir32%$/;"	v
FrameworkVersion	dist-scripts/xdk360_env.bat	/^@set FrameworkVersion=%FrameworkVersion32%$/;"	v
FreeContiguousMemory	xdk/xdk_resources.cpp	/^static inline void FreeContiguousMemory( void* pData )$/;"	f	file:	signature:( void* pData )
FreeFunction	frontend/platform/platform_xdk.h	/^	(NTAPI *FreeFunction)($/;"	m	struct:_OBJECT_TYPE	access:public
G	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
GBM_CFLAGS	config.mk	/^GBM_CFLAGS = $/;"	m
GBM_LIBS	config.mk	/^GBM_LIBS = $/;"	m
GC_JOYSTICK_THRESHOLD	gx/gx_input.c	36;"	d	file:
GET_BITS	ps3/rgl/src/rgl_ps3.cpp	3414;"	d	file:
GET_FIELD_ID	android/native/jni/jni_macros.h	37;"	d
GET_HAT	driver.h	204;"	d
GET_HAT_DIR	driver.h	203;"	d
GET_METHOD_ID	android/native/jni/jni_macros.h	41;"	d
GET_OBJECT_CLASS	android/native/jni/jni_macros.h	33;"	d
GET_POINTERID_WPARAM	input/dinput.c	357;"	d	file:
GET_STATIC_METHOD_ID	android/native/jni/jni_macros.h	45;"	d
GET_TEXTURE_PITCH	ps3/rgl/src/rgl_ps3_raster.cpp	1943;"	d	file:
GET_UMP_SECURE_ID_BUF1	gfx/context/sunxi_disp_ioctl.h	863;"	d
GET_UMP_SECURE_ID_BUF2	gfx/context/sunxi_disp_ioctl.h	864;"	d
GET_UMP_SECURE_ID_SUNXI_FB	gfx/context/sunxi_disp_ioctl.h	866;"	d
GFX_CTX_DIRECT3D8_API	gfx/gfx_context.h	/^   GFX_CTX_DIRECT3D8_API,$/;"	e	enum:gfx_ctx_api
GFX_CTX_DIRECT3D9_API	gfx/gfx_context.h	/^   GFX_CTX_DIRECT3D9_API,$/;"	e	enum:gfx_ctx_api
GFX_CTX_OPENGL_API	gfx/gfx_context.h	/^   GFX_CTX_OPENGL_API,$/;"	e	enum:gfx_ctx_api
GFX_CTX_OPENGL_ES_API	gfx/gfx_context.h	/^   GFX_CTX_OPENGL_ES_API,$/;"	e	enum:gfx_ctx_api
GFX_CTX_OPENVG_API	gfx/gfx_context.h	/^   GFX_CTX_OPENVG_API$/;"	e	enum:gfx_ctx_api
GFX_MAX_SHADERS	gfx/shader_parse.h	28;"	d
GFX_MAX_TEXTURES	gfx/shader_parse.h	29;"	d
GFX_MAX_VARIABLES	gfx/shader_parse.h	30;"	d
GLAPI	msvc/msvc-2010/GL/glext.h	49;"	d
GLAPI	ps3/rgl/include/export/GLES/gl.h	44;"	d
GLAPI	ps3/rgl/include/export/GLES/gl.h	57;"	d
GLDEBUGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCAMD	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCARB	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLES	libretro-test-gl/Makefile	/^   GLES := 1$/;"	m
GLES_CFLAGS	config.mk	/^GLES_CFLAGS = $/;"	m
GLES_LIBS	config.mk	/^GLES_LIBS = $/;"	m
GLEXT_64_TYPES_DEFINED	msvc/msvc-2010/GL/glext.h	6179;"	d
GLOBAL_CONFIG_DIR	Makefile	/^   GLOBAL_CONFIG_DIR = \/etc$/;"	m
GLOBAL_CONFIG_DIR	config.mk	/^GLOBAL_CONFIG_DIR = $/;"	m
GLOBAL_CONFIG_DIR	retroarch.c	613;"	d	file:
GLOBAL_FBDEV	config.mk	/^GLOBAL_FBDEV = $/;"	m
GLOBAL_FBDEV	gfx/context/gles_egl_ctx.c	41;"	d	file:
GLSYM_H__	gfx/glsym/glsym.h	2;"	d
GLYPH_ATTR	gfx/fonts/xdk360_fonts.cpp	/^typedef struct GLYPH_ATTR$/;"	s	file:
GLYPH_ATTR	gfx/fonts/xdk360_fonts.cpp	/^} GLYPH_ATTR;$/;"	t	typeref:struct:GLYPH_ATTR	file:
GLYPH_ATTR::tu1	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::tu2	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::tv1	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::tv2	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::wAdvance	gfx/fonts/xdk360_fonts.cpp	/^   short wAdvance;                      \/\/ Pixels to advance after the glyph$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::wMask	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short wMask;$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::wOffset	gfx/fonts/xdk360_fonts.cpp	/^   short wOffset;                       \/\/ Pixel offset for glyph start$/;"	m	struct:GLYPH_ATTR	file:	access:public
GLYPH_ATTR::wWidth	gfx/fonts/xdk360_fonts.cpp	/^   short wWidth;                        \/\/ Pixel width of the glyph$/;"	m	struct:GLYPH_ATTR	file:	access:public
GL_1PASS_EXT	msvc/msvc-2010/GL/glext.h	4202;"	d
GL_1PASS_SGIS	msvc/msvc-2010/GL/glext.h	3284;"	d
GL_2PASS_0_EXT	msvc/msvc-2010/GL/glext.h	4203;"	d
GL_2PASS_0_SGIS	msvc/msvc-2010/GL/glext.h	3285;"	d
GL_2PASS_1_EXT	msvc/msvc-2010/GL/glext.h	4204;"	d
GL_2PASS_1_SGIS	msvc/msvc-2010/GL/glext.h	3286;"	d
GL_2X_BIT_ATI	msvc/msvc-2010/GL/glext.h	4625;"	d
GL_3DFX_multisample	msvc/msvc-2010/GL/glext.h	10084;"	d
GL_3DFX_tbuffer	msvc/msvc-2010/GL/glext.h	10088;"	d
GL_3DFX_texture_compression_FXT1	msvc/msvc-2010/GL/glext.h	10080;"	d
GL_422_AVERAGE_EXT	msvc/msvc-2010/GL/glext.h	3967;"	d
GL_422_EXT	msvc/msvc-2010/GL/glext.h	3965;"	d
GL_422_REV_AVERAGE_EXT	msvc/msvc-2010/GL/glext.h	3968;"	d
GL_422_REV_EXT	msvc/msvc-2010/GL/glext.h	3966;"	d
GL_4PASS_0_EXT	msvc/msvc-2010/GL/glext.h	4205;"	d
GL_4PASS_0_SGIS	msvc/msvc-2010/GL/glext.h	3287;"	d
GL_4PASS_1_EXT	msvc/msvc-2010/GL/glext.h	4206;"	d
GL_4PASS_1_SGIS	msvc/msvc-2010/GL/glext.h	3288;"	d
GL_4PASS_2_EXT	msvc/msvc-2010/GL/glext.h	4207;"	d
GL_4PASS_2_SGIS	msvc/msvc-2010/GL/glext.h	3289;"	d
GL_4PASS_3_EXT	msvc/msvc-2010/GL/glext.h	4208;"	d
GL_4PASS_3_SGIS	msvc/msvc-2010/GL/glext.h	3290;"	d
GL_4X_BIT_ATI	msvc/msvc-2010/GL/glext.h	4626;"	d
GL_8X_BIT_ATI	msvc/msvc-2010/GL/glext.h	4627;"	d
GL_ABGR	ps3/rgl/include/export/GLES/glext.h	56;"	d
GL_ABGR_EXT	msvc/msvc-2010/GL/glext.h	3042;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	msvc/msvc-2010/GL/glext.h	6024;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2582;"	d
GL_ACTIVE_ATTRIBUTES	msvc/msvc-2010/GL/glext.h	440;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	msvc/msvc-2010/GL/glext.h	441;"	d
GL_ACTIVE_PROGRAM	msvc/msvc-2010/GL/glext.h	2441;"	d
GL_ACTIVE_PROGRAM_EXT	msvc/msvc-2010/GL/glext.h	5696;"	d
GL_ACTIVE_RESOURCES	msvc/msvc-2010/GL/glext.h	2967;"	d
GL_ACTIVE_STENCIL_FACE_EXT	msvc/msvc-2010/GL/glext.h	4850;"	d
GL_ACTIVE_SUBROUTINES	msvc/msvc-2010/GL/glext.h	2334;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	msvc/msvc-2010/GL/glext.h	2337;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2335;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	msvc/msvc-2010/GL/glext.h	2336;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	msvc/msvc-2010/GL/glext.h	2338;"	d
GL_ACTIVE_TEXTURE	msvc/msvc-2010/GL/glext.h	209;"	d
GL_ACTIVE_TEXTURE_ARB	msvc/msvc-2010/GL/glext.h	1460;"	d
GL_ACTIVE_UNIFORMS	msvc/msvc-2010/GL/glext.h	437;"	d
GL_ACTIVE_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2118;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	msvc/msvc-2010/GL/glext.h	2117;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	msvc/msvc-2010/GL/glext.h	438;"	d
GL_ACTIVE_VARIABLES	msvc/msvc-2010/GL/glext.h	2983;"	d
GL_ACTIVE_VARYINGS_NV	msvc/msvc-2010/GL/glext.h	5373;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5374;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1529;"	d
GL_ADD	ps3/rgl/include/export/GLES/gl.h	367;"	d
GL_ADD_ATI	msvc/msvc-2010/GL/glext.h	4597;"	d
GL_ADD_SIGNED	msvc/msvc-2010/GL/glext.h	265;"	d
GL_ADD_SIGNED_ARB	msvc/msvc-2010/GL/glext.h	1602;"	d
GL_ADD_SIGNED_EXT	msvc/msvc-2010/GL/glext.h	3872;"	d
GL_ADJACENT_PAIRS_NV	msvc/msvc-2010/GL/glext.h	6025;"	d
GL_AFFINE_2D_NV	msvc/msvc-2010/GL/glext.h	5997;"	d
GL_AFFINE_3D_NV	msvc/msvc-2010/GL/glext.h	5999;"	d
GL_ALIASED_LINE_WIDTH_RANGE	msvc/msvc-2010/GL/glext.h	90;"	d
GL_ALIASED_LINE_WIDTH_RANGE	ps3/rgl/include/export/GLES/gl.h	223;"	d
GL_ALIASED_POINT_SIZE_RANGE	msvc/msvc-2010/GL/glext.h	95;"	d
GL_ALIASED_POINT_SIZE_RANGE	ps3/rgl/include/export/GLES/gl.h	222;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	msvc/msvc-2010/GL/glext.h	3587;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	msvc/msvc-2010/GL/glext.h	3588;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	msvc/msvc-2010/GL/glext.h	3585;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	msvc/msvc-2010/GL/glext.h	3586;"	d
GL_ALLOW_SCAN_OUT_BIT_SCE	ps3/rgl/include/export/GLES/glext.h	204;"	d
GL_ALL_BARRIER_BITS	msvc/msvc-2010/GL/glext.h	2600;"	d
GL_ALL_BARRIER_BITS_EXT	msvc/msvc-2010/GL/glext.h	5804;"	d
GL_ALL_COMPLETED_NV	msvc/msvc-2010/GL/glext.h	4260;"	d
GL_ALL_COMPLETED_NV	ps3/rgl/include/export/GLES/glext.h	252;"	d
GL_ALL_SHADER_BITS	msvc/msvc-2010/GL/glext.h	2439;"	d
GL_ALPHA	ps3/rgl/include/export/GLES/gl.h	315;"	d
GL_ALPHA12	ps3/rgl/include/export/GLES/glext.h	43;"	d
GL_ALPHA12_EXT	msvc/msvc-2010/GL/glext.h	3062;"	d
GL_ALPHA16	ps3/rgl/include/export/GLES/glext.h	44;"	d
GL_ALPHA16F_ARB	msvc/msvc-2010/GL/glext.h	1909;"	d
GL_ALPHA16F_ARB	ps3/rgl/include/export/GLES/glext.h	67;"	d
GL_ALPHA16I_EXT	msvc/msvc-2010/GL/glext.h	5432;"	d
GL_ALPHA16UI_EXT	msvc/msvc-2010/GL/glext.h	5414;"	d
GL_ALPHA16_EXT	msvc/msvc-2010/GL/glext.h	3063;"	d
GL_ALPHA16_SNORM	msvc/msvc-2010/GL/glext.h	5575;"	d
GL_ALPHA32F_ARB	msvc/msvc-2010/GL/glext.h	1903;"	d
GL_ALPHA32F_ARB	ps3/rgl/include/export/GLES/glext.h	64;"	d
GL_ALPHA32I_EXT	msvc/msvc-2010/GL/glext.h	5426;"	d
GL_ALPHA32UI_EXT	msvc/msvc-2010/GL/glext.h	5408;"	d
GL_ALPHA4	ps3/rgl/include/export/GLES/glext.h	42;"	d
GL_ALPHA4_EXT	msvc/msvc-2010/GL/glext.h	3060;"	d
GL_ALPHA8I_EXT	msvc/msvc-2010/GL/glext.h	5438;"	d
GL_ALPHA8UI_EXT	msvc/msvc-2010/GL/glext.h	5420;"	d
GL_ALPHA8_EXT	msvc/msvc-2010/GL/glext.h	3061;"	d
GL_ALPHA8_SNORM	msvc/msvc-2010/GL/glext.h	5571;"	d
GL_ALPHA_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5616;"	d
GL_ALPHA_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4941;"	d
GL_ALPHA_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5610;"	d
GL_ALPHA_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4935;"	d
GL_ALPHA_INTEGER	msvc/msvc-2010/GL/glext.h	710;"	d
GL_ALPHA_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5445;"	d
GL_ALPHA_MAX_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3952;"	d
GL_ALPHA_MAX_SGIX	msvc/msvc-2010/GL/glext.h	3739;"	d
GL_ALPHA_MIN_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3948;"	d
GL_ALPHA_MIN_SGIX	msvc/msvc-2010/GL/glext.h	3738;"	d
GL_ALPHA_SNORM	msvc/msvc-2010/GL/glext.h	5567;"	d
GL_ALREADY_SIGNALED	msvc/msvc-2010/GL/glext.h	2183;"	d
GL_ALWAYS	ps3/rgl/include/export/GLES/gl.h	111;"	d
GL_ALWAYS_FAST_HINT_PGI	msvc/msvc-2010/GL/glext.h	3583;"	d
GL_ALWAYS_SOFT_HINT_PGI	msvc/msvc-2010/GL/glext.h	3584;"	d
GL_AMBIENT	ps3/rgl/include/export/GLES/gl.h	255;"	d
GL_AMBIENT_AND_DIFFUSE	ps3/rgl/include/export/GLES/gl.h	298;"	d
GL_AMD_blend_minmax_factor	msvc/msvc-2010/GL/glext.h	12528;"	d
GL_AMD_conservative_depth	msvc/msvc-2010/GL/glext.h	12266;"	d
GL_AMD_debug_output	msvc/msvc-2010/GL/glext.h	12458;"	d
GL_AMD_depth_clamp_separate	msvc/msvc-2010/GL/glext.h	12502;"	d
GL_AMD_draw_buffers_blend	msvc/msvc-2010/GL/glext.h	12060;"	d
GL_AMD_multi_draw_indirect	msvc/msvc-2010/GL/glext.h	12548;"	d
GL_AMD_name_gen_delete	msvc/msvc-2010/GL/glext.h	12446;"	d
GL_AMD_performance_monitor	msvc/msvc-2010/GL/glext.h	12006;"	d
GL_AMD_pinned_memory	msvc/msvc-2010/GL/glext.h	12666;"	d
GL_AMD_query_buffer_object	msvc/msvc-2010/GL/glext.h	12722;"	d
GL_AMD_sample_positions	msvc/msvc-2010/GL/glext.h	12532;"	d
GL_AMD_seamless_cubemap_per_texture	msvc/msvc-2010/GL/glext.h	12262;"	d
GL_AMD_shader_stencil_export	msvc/msvc-2010/GL/glext.h	12258;"	d
GL_AMD_sparse_texture	msvc/msvc-2010/GL/glext.h	12726;"	d
GL_AMD_stencil_operation_extended	msvc/msvc-2010/GL/glext.h	12670;"	d
GL_AMD_texture_texture4	msvc/msvc-2010/GL/glext.h	12034;"	d
GL_AMD_transform_feedback3_lines_triangles	msvc/msvc-2010/GL/glext.h	12498;"	d
GL_AMD_vertex_shader_layer	msvc/msvc-2010/GL/glext.h	12682;"	d
GL_AMD_vertex_shader_tesselator	msvc/msvc-2010/GL/glext.h	12038;"	d
GL_AMD_vertex_shader_viewport_index	msvc/msvc-2010/GL/glext.h	12678;"	d
GL_AND	ps3/rgl/include/export/GLES/gl.h	276;"	d
GL_AND_INVERTED	ps3/rgl/include/export/GLES/gl.h	279;"	d
GL_AND_REVERSE	ps3/rgl/include/export/GLES/gl.h	277;"	d
GL_ANTIALIASED_BIT_SCE	ps3/rgl/include/export/GLES/glext.h	206;"	d
GL_ANY_SAMPLES_PASSED	msvc/msvc-2010/GL/glext.h	2271;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	msvc/msvc-2010/GL/glext.h	2799;"	d
GL_APPLE_aux_depth_stencil	msvc/msvc-2010/GL/glext.h	12108;"	d
GL_APPLE_client_storage	msvc/msvc-2010/GL/glext.h	10742;"	d
GL_APPLE_element_array	msvc/msvc-2010/GL/glext.h	10746;"	d
GL_APPLE_fence	msvc/msvc-2010/GL/glext.h	10762;"	d
GL_APPLE_float_pixels	msvc/msvc-2010/GL/glext.h	12084;"	d
GL_APPLE_flush_buffer_range	msvc/msvc-2010/GL/glext.h	11178;"	d
GL_APPLE_object_purgeable	msvc/msvc-2010/GL/glext.h	12112;"	d
GL_APPLE_rgb_422	msvc/msvc-2010/GL/glext.h	12128;"	d
GL_APPLE_row_bytes	msvc/msvc-2010/GL/glext.h	12124;"	d
GL_APPLE_specular_vector	msvc/msvc-2010/GL/glext.h	9692;"	d
GL_APPLE_texture_range	msvc/msvc-2010/GL/glext.h	12074;"	d
GL_APPLE_transform_hint	msvc/msvc-2010/GL/glext.h	9696;"	d
GL_APPLE_vertex_array_object	msvc/msvc-2010/GL/glext.h	10784;"	d
GL_APPLE_vertex_array_range	msvc/msvc-2010/GL/glext.h	10798;"	d
GL_APPLE_vertex_program_evaluators	msvc/msvc-2010/GL/glext.h	12088;"	d
GL_APPLE_ycbcr_422	msvc/msvc-2010/GL/glext.h	10810;"	d
GL_ARB_ES2_compatibility	msvc/msvc-2010/GL/glext.h	8196;"	d
GL_ARB_ES3_compatibility	msvc/msvc-2010/GL/glext.h	8668;"	d
GL_ARB_arrays_of_arrays	msvc/msvc-2010/GL/glext.h	8590;"	d
GL_ARB_base_instance	msvc/msvc-2010/GL/glext.h	8474;"	d
GL_ARB_blend_func_extended	msvc/msvc-2010/GL/glext.h	7912;"	d
GL_ARB_cl_event	msvc/msvc-2010/GL/glext.h	8402;"	d
GL_ARB_clear_buffer_object	msvc/msvc-2010/GL/glext.h	8594;"	d
GL_ARB_color_buffer_float	msvc/msvc-2010/GL/glext.h	7598;"	d
GL_ARB_compatibility	msvc/msvc-2010/GL/glext.h	7768;"	d
GL_ARB_compressed_texture_pixel_storage	msvc/msvc-2010/GL/glext.h	8500;"	d
GL_ARB_compute_shader	msvc/msvc-2010/GL/glext.h	8608;"	d
GL_ARB_conservative_depth	msvc/msvc-2010/GL/glext.h	8504;"	d
GL_ARB_copy_buffer	msvc/msvc-2010/GL/glext.h	7772;"	d
GL_ARB_copy_image	msvc/msvc-2010/GL/glext.h	8618;"	d
GL_ARB_debug_output	msvc/msvc-2010/GL/glext.h	8410;"	d
GL_ARB_depth_buffer_float	msvc/msvc-2010/GL/glext.h	7618;"	d
GL_ARB_depth_clamp	msvc/msvc-2010/GL/glext.h	7784;"	d
GL_ARB_depth_texture	msvc/msvc-2010/GL/glext.h	7235;"	d
GL_ARB_draw_buffers	msvc/msvc-2010/GL/glext.h	7586;"	d
GL_ARB_draw_buffers_blend	msvc/msvc-2010/GL/glext.h	7856;"	d
GL_ARB_draw_elements_base_vertex	msvc/msvc-2010/GL/glext.h	7788;"	d
GL_ARB_draw_indirect	msvc/msvc-2010/GL/glext.h	8070;"	d
GL_ARB_draw_instanced	msvc/msvc-2010/GL/glext.h	7622;"	d
GL_ARB_explicit_attrib_location	msvc/msvc-2010/GL/glext.h	7922;"	d
GL_ARB_explicit_uniform_location	msvc/msvc-2010/GL/glext.h	8672;"	d
GL_ARB_fragment_coord_conventions	msvc/msvc-2010/GL/glext.h	7802;"	d
GL_ARB_fragment_layer_viewport	msvc/msvc-2010/GL/glext.h	8676;"	d
GL_ARB_fragment_program	msvc/msvc-2010/GL/glext.h	7415;"	d
GL_ARB_fragment_program_shadow	msvc/msvc-2010/GL/glext.h	7582;"	d
GL_ARB_fragment_shader	msvc/msvc-2010/GL/glext.h	7566;"	d
GL_ARB_framebuffer_no_attachments	msvc/msvc-2010/GL/glext.h	8680;"	d
GL_ARB_framebuffer_object	msvc/msvc-2010/GL/glext.h	7632;"	d
GL_ARB_framebuffer_sRGB	msvc/msvc-2010/GL/glext.h	7678;"	d
GL_ARB_geometry_shader4	msvc/msvc-2010/GL/glext.h	7682;"	d
GL_ARB_get_program_binary	msvc/msvc-2010/GL/glext.h	8212;"	d
GL_ARB_gpu_shader5	msvc/msvc-2010/GL/glext.h	8080;"	d
GL_ARB_gpu_shader_fp64	msvc/msvc-2010/GL/glext.h	8084;"	d
GL_ARB_half_float_pixel	msvc/msvc-2010/GL/glext.h	7606;"	d
GL_ARB_half_float_vertex	msvc/msvc-2010/GL/glext.h	7696;"	d
GL_ARB_instanced_arrays	msvc/msvc-2010/GL/glext.h	7700;"	d
GL_ARB_internalformat_query	msvc/msvc-2010/GL/glext.h	8508;"	d
GL_ARB_internalformat_query2	msvc/msvc-2010/GL/glext.h	8694;"	d
GL_ARB_invalidate_subdata	msvc/msvc-2010/GL/glext.h	8702;"	d
GL_ARB_map_buffer_alignment	msvc/msvc-2010/GL/glext.h	8516;"	d
GL_ARB_map_buffer_range	msvc/msvc-2010/GL/glext.h	7708;"	d
GL_ARB_matrix_palette	msvc/msvc-2010/GL/glext.h	7203;"	d
GL_ARB_multi_draw_indirect	msvc/msvc-2010/GL/glext.h	8720;"	d
GL_ARB_multisample	msvc/msvc-2010/GL/glext.h	7127;"	d
GL_ARB_multitexture	msvc/msvc-2010/GL/glext.h	7039;"	d
GL_ARB_occlusion_query	msvc/msvc-2010/GL/glext.h	7448;"	d
GL_ARB_occlusion_query2	msvc/msvc-2010/GL/glext.h	7926;"	d
GL_ARB_pixel_buffer_object	msvc/msvc-2010/GL/glext.h	7614;"	d
GL_ARB_point_parameters	msvc/msvc-2010/GL/glext.h	7167;"	d
GL_ARB_point_sprite	msvc/msvc-2010/GL/glext.h	7578;"	d
GL_ARB_program_interface_query	msvc/msvc-2010/GL/glext.h	8730;"	d
GL_ARB_provoking_vertex	msvc/msvc-2010/GL/glext.h	7806;"	d
GL_ARB_robust_buffer_access_behavior	msvc/msvc-2010/GL/glext.h	8748;"	d
GL_ARB_robustness	msvc/msvc-2010/GL/glext.h	8424;"	d
GL_ARB_robustness_isolation	msvc/msvc-2010/GL/glext.h	8664;"	d
GL_ARB_sample_shading	msvc/msvc-2010/GL/glext.h	7870;"	d
GL_ARB_sampler_objects	msvc/msvc-2010/GL/glext.h	7930;"	d
GL_ARB_seamless_cube_map	msvc/msvc-2010/GL/glext.h	7814;"	d
GL_ARB_separate_shader_objects	msvc/msvc-2010/GL/glext.h	8224;"	d
GL_ARB_shader_atomic_counters	msvc/msvc-2010/GL/glext.h	8520;"	d
GL_ARB_shader_bit_encoding	msvc/msvc-2010/GL/glext.h	7964;"	d
GL_ARB_shader_image_load_store	msvc/msvc-2010/GL/glext.h	8528;"	d
GL_ARB_shader_image_size	msvc/msvc-2010/GL/glext.h	8752;"	d
GL_ARB_shader_objects	msvc/msvc-2010/GL/glext.h	7470;"	d
GL_ARB_shader_stencil_export	msvc/msvc-2010/GL/glext.h	8470;"	d
GL_ARB_shader_storage_buffer_object	msvc/msvc-2010/GL/glext.h	8756;"	d
GL_ARB_shader_subroutine	msvc/msvc-2010/GL/glext.h	8126;"	d
GL_ARB_shader_texture_lod	msvc/msvc-2010/GL/glext.h	7780;"	d
GL_ARB_shading_language_100	msvc/msvc-2010/GL/glext.h	7570;"	d
GL_ARB_shading_language_420pack	msvc/msvc-2010/GL/glext.h	8486;"	d
GL_ARB_shading_language_include	msvc/msvc-2010/GL/glext.h	7890;"	d
GL_ARB_shading_language_packing	msvc/msvc-2010/GL/glext.h	8538;"	d
GL_ARB_shadow	msvc/msvc-2010/GL/glext.h	7239;"	d
GL_ARB_shadow_ambient	msvc/msvc-2010/GL/glext.h	7243;"	d
GL_ARB_stencil_texturing	msvc/msvc-2010/GL/glext.h	8764;"	d
GL_ARB_sync	msvc/msvc-2010/GL/glext.h	7818;"	d
GL_ARB_tessellation_shader	msvc/msvc-2010/GL/glext.h	8148;"	d
GL_ARB_texture_border_clamp	msvc/msvc-2010/GL/glext.h	7163;"	d
GL_ARB_texture_buffer_object	msvc/msvc-2010/GL/glext.h	7718;"	d
GL_ARB_texture_buffer_object_rgb32	msvc/msvc-2010/GL/glext.h	8158;"	d
GL_ARB_texture_buffer_range	msvc/msvc-2010/GL/glext.h	8768;"	d
GL_ARB_texture_compression	msvc/msvc-2010/GL/glext.h	7143;"	d
GL_ARB_texture_compression_bptc	msvc/msvc-2010/GL/glext.h	7908;"	d
GL_ARB_texture_compression_rgtc	msvc/msvc-2010/GL/glext.h	7726;"	d
GL_ARB_texture_cube_map	msvc/msvc-2010/GL/glext.h	7139;"	d
GL_ARB_texture_cube_map_array	msvc/msvc-2010/GL/glext.h	7878;"	d
GL_ARB_texture_env_add	msvc/msvc-2010/GL/glext.h	7135;"	d
GL_ARB_texture_env_combine	msvc/msvc-2010/GL/glext.h	7219;"	d
GL_ARB_texture_env_crossbar	msvc/msvc-2010/GL/glext.h	7223;"	d
GL_ARB_texture_env_dot3	msvc/msvc-2010/GL/glext.h	7227;"	d
GL_ARB_texture_float	msvc/msvc-2010/GL/glext.h	7610;"	d
GL_ARB_texture_gather	msvc/msvc-2010/GL/glext.h	7882;"	d
GL_ARB_texture_mirrored_repeat	msvc/msvc-2010/GL/glext.h	7231;"	d
GL_ARB_texture_multisample	msvc/msvc-2010/GL/glext.h	7838;"	d
GL_ARB_texture_non_power_of_two	msvc/msvc-2010/GL/glext.h	7574;"	d
GL_ARB_texture_query_levels	msvc/msvc-2010/GL/glext.h	8778;"	d
GL_ARB_texture_query_lod	msvc/msvc-2010/GL/glext.h	7886;"	d
GL_ARB_texture_rectangle	msvc/msvc-2010/GL/glext.h	7594;"	d
GL_ARB_texture_rg	msvc/msvc-2010/GL/glext.h	7730;"	d
GL_ARB_texture_rgb10_a2ui	msvc/msvc-2010/GL/glext.h	7968;"	d
GL_ARB_texture_storage	msvc/msvc-2010/GL/glext.h	8542;"	d
GL_ARB_texture_storage_multisample	msvc/msvc-2010/GL/glext.h	8782;"	d
GL_ARB_texture_swizzle	msvc/msvc-2010/GL/glext.h	7972;"	d
GL_ARB_texture_view	msvc/msvc-2010/GL/glext.h	8626;"	d
GL_ARB_timer_query	msvc/msvc-2010/GL/glext.h	7976;"	d
GL_ARB_transform_feedback2	msvc/msvc-2010/GL/glext.h	8162;"	d
GL_ARB_transform_feedback3	msvc/msvc-2010/GL/glext.h	8182;"	d
GL_ARB_transform_feedback_instanced	msvc/msvc-2010/GL/glext.h	8490;"	d
GL_ARB_transpose_matrix	msvc/msvc-2010/GL/glext.h	7113;"	d
GL_ARB_uniform_buffer_object	msvc/msvc-2010/GL/glext.h	7748;"	d
GL_ARB_vertex_array_bgra	msvc/msvc-2010/GL/glext.h	7852;"	d
GL_ARB_vertex_array_object	msvc/msvc-2010/GL/glext.h	7734;"	d
GL_ARB_vertex_attrib_64bit	msvc/msvc-2010/GL/glext.h	8350;"	d
GL_ARB_vertex_attrib_binding	msvc/msvc-2010/GL/glext.h	8634;"	d
GL_ARB_vertex_blend	msvc/msvc-2010/GL/glext.h	7177;"	d
GL_ARB_vertex_buffer_object	msvc/msvc-2010/GL/glext.h	7420;"	d
GL_ARB_vertex_program	msvc/msvc-2010/GL/glext.h	7285;"	d
GL_ARB_vertex_shader	msvc/msvc-2010/GL/glext.h	7554;"	d
GL_ARB_vertex_type_2_10_10_10_rev	msvc/msvc-2010/GL/glext.h	7988;"	d
GL_ARB_viewport_array	msvc/msvc-2010/GL/glext.h	8376;"	d
GL_ARB_window_pos	msvc/msvc-2010/GL/glext.h	7247;"	d
GL_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6072;"	d
GL_ARGB_SCE	ps3/rgl/include/export/GLES/glext.h	60;"	d
GL_ARRAY_BUFFER	msvc/msvc-2010/GL/glext.h	324;"	d
GL_ARRAY_BUFFER	ps3/rgl/include/export/GLES/glext.h	209;"	d
GL_ARRAY_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	1746;"	d
GL_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	326;"	d
GL_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1748;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3663;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	msvc/msvc-2010/GL/glext.h	3662;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	msvc/msvc-2010/GL/glext.h	4656;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	msvc/msvc-2010/GL/glext.h	4657;"	d
GL_ARRAY_SIZE	msvc/msvc-2010/GL/glext.h	2973;"	d
GL_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	2976;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	msvc/msvc-2010/GL/glext.h	3763;"	d
GL_ASYNC_HISTOGRAM_SGIX	msvc/msvc-2010/GL/glext.h	3771;"	d
GL_ASYNC_MARKER_SGIX	msvc/msvc-2010/GL/glext.h	3758;"	d
GL_ASYNC_READ_PIXELS_SGIX	msvc/msvc-2010/GL/glext.h	3764;"	d
GL_ASYNC_TEX_IMAGE_SGIX	msvc/msvc-2010/GL/glext.h	3762;"	d
GL_ATI_draw_buffers	msvc/msvc-2010/GL/glext.h	10818;"	d
GL_ATI_element_array	msvc/msvc-2010/GL/glext.h	10656;"	d
GL_ATI_envmap_bumpmap	msvc/msvc-2010/GL/glext.h	10382;"	d
GL_ATI_fragment_shader	msvc/msvc-2010/GL/glext.h	10396;"	d
GL_ATI_map_object_buffer	msvc/msvc-2010/GL/glext.h	10990;"	d
GL_ATI_meminfo	msvc/msvc-2010/GL/glext.h	12002;"	d
GL_ATI_pixel_format_float	msvc/msvc-2010/GL/glext.h	10826;"	d
GL_ATI_pn_triangles	msvc/msvc-2010/GL/glext.h	10430;"	d
GL_ATI_separate_stencil	msvc/msvc-2010/GL/glext.h	11000;"	d
GL_ATI_text_fragment_shader	msvc/msvc-2010/GL/glext.h	10738;"	d
GL_ATI_texture_env_combine3	msvc/msvc-2010/GL/glext.h	10833;"	d
GL_ATI_texture_float	msvc/msvc-2010/GL/glext.h	10837;"	d
GL_ATI_texture_mirror_once	msvc/msvc-2010/GL/glext.h	10142;"	d
GL_ATI_vertex_array_object	msvc/msvc-2010/GL/glext.h	10440;"	d
GL_ATI_vertex_attrib_array_object	msvc/msvc-2010/GL/glext.h	11010;"	d
GL_ATI_vertex_streams	msvc/msvc-2010/GL/glext.h	10560;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2599;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5803;"	d
GL_ATOMIC_COUNTER_BUFFER	msvc/msvc-2010/GL/glext.h	2556;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2561;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	msvc/msvc-2010/GL/glext.h	2562;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2557;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	msvc/msvc-2010/GL/glext.h	2560;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	msvc/msvc-2010/GL/glext.h	2979;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	msvc/msvc-2010/GL/glext.h	2757;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	msvc/msvc-2010/GL/glext.h	2567;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	msvc/msvc-2010/GL/glext.h	2566;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	msvc/msvc-2010/GL/glext.h	2564;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	msvc/msvc-2010/GL/glext.h	2565;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	msvc/msvc-2010/GL/glext.h	2563;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	2559;"	d
GL_ATOMIC_COUNTER_BUFFER_START	msvc/msvc-2010/GL/glext.h	2558;"	d
GL_ATTACHED_SHADERS	msvc/msvc-2010/GL/glext.h	436;"	d
GL_ATTENUATION_EXT	msvc/msvc-2010/GL/glext.h	3728;"	d
GL_ATTRIB_ARRAY_POINTER_NV	msvc/msvc-2010/GL/glext.h	4428;"	d
GL_ATTRIB_ARRAY_SIZE_NV	msvc/msvc-2010/GL/glext.h	4402;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	msvc/msvc-2010/GL/glext.h	4403;"	d
GL_ATTRIB_ARRAY_TYPE_NV	msvc/msvc-2010/GL/glext.h	4404;"	d
GL_AUTO_GENERATE_MIPMAP	msvc/msvc-2010/GL/glext.h	2877;"	d
GL_AUX_DEPTH_STENCIL_APPLE	msvc/msvc-2010/GL/glext.h	5637;"	d
GL_AVERAGE_EXT	msvc/msvc-2010/GL/glext.h	3797;"	d
GL_AVERAGE_HP	msvc/msvc-2010/GL/glext.h	3528;"	d
GL_BACK	ps3/rgl/include/export/GLES/gl.h	147;"	d
GL_BACK_NORMALS_HINT_PGI	msvc/msvc-2010/GL/glext.h	3596;"	d
GL_BACK_PRIMARY_COLOR_NV	msvc/msvc-2010/GL/glext.h	5363;"	d
GL_BACK_SECONDARY_COLOR_NV	msvc/msvc-2010/GL/glext.h	5364;"	d
GL_BEVEL_NV	msvc/msvc-2010/GL/glext.h	6017;"	d
GL_BGR	msvc/msvc-2010/GL/glext.h	77;"	d
GL_BGR	ps3/rgl/include/export/GLES/glext.h	54;"	d
GL_BGRA	msvc/msvc-2010/GL/glext.h	78;"	d
GL_BGRA	ps3/rgl/include/export/GLES/glext.h	55;"	d
GL_BGRA_EXT	gfx/gl_common.h	277;"	d
GL_BGRA_EXT	msvc/msvc-2010/GL/glext.h	3754;"	d
GL_BGRA_INTEGER	msvc/msvc-2010/GL/glext.h	556;"	d
GL_BGRA_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5449;"	d
GL_BGR_EXT	msvc/msvc-2010/GL/glext.h	3753;"	d
GL_BGR_INTEGER	msvc/msvc-2010/GL/glext.h	555;"	d
GL_BGR_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5448;"	d
GL_BIAS_BIT_ATI	msvc/msvc-2010/GL/glext.h	4634;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	msvc/msvc-2010/GL/glext.h	4067;"	d
GL_BINORMAL_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3852;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3860;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3858;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3857;"	d
GL_BLEND	ps3/rgl/include/export/GLES/gl.h	165;"	d
GL_BLEND_COLOR	msvc/msvc-2010/GL/glext.h	103;"	d
GL_BLEND_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3050;"	d
GL_BLEND_DST_ALPHA	msvc/msvc-2010/GL/glext.h	278;"	d
GL_BLEND_DST_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3940;"	d
GL_BLEND_DST_RGB	msvc/msvc-2010/GL/glext.h	276;"	d
GL_BLEND_DST_RGB_EXT	msvc/msvc-2010/GL/glext.h	3938;"	d
GL_BLEND_EQUATION	msvc/msvc-2010/GL/glext.h	107;"	d
GL_BLEND_EQUATION	ps3/rgl/include/export/GLES/glext.h	103;"	d
GL_BLEND_EQUATION_ALPHA	msvc/msvc-2010/GL/glext.h	400;"	d
GL_BLEND_EQUATION_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	5030;"	d
GL_BLEND_EQUATION_EXT	msvc/msvc-2010/GL/glext.h	3379;"	d
GL_BLEND_EQUATION_RGB	msvc/msvc-2010/GL/glext.h	371;"	d
GL_BLEND_EQUATION_RGB_EXT	msvc/msvc-2010/GL/glext.h	5029;"	d
GL_BLEND_MRT0_SCE	ps3/rgl/include/export/GLES/glext.h	316;"	d
GL_BLEND_MRT1_SCE	ps3/rgl/include/export/GLES/glext.h	317;"	d
GL_BLEND_MRT2_SCE	ps3/rgl/include/export/GLES/glext.h	318;"	d
GL_BLEND_MRT3_SCE	ps3/rgl/include/export/GLES/glext.h	319;"	d
GL_BLEND_SRC_ALPHA	msvc/msvc-2010/GL/glext.h	279;"	d
GL_BLEND_SRC_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3941;"	d
GL_BLEND_SRC_RGB	msvc/msvc-2010/GL/glext.h	277;"	d
GL_BLEND_SRC_RGB_EXT	msvc/msvc-2010/GL/glext.h	3939;"	d
GL_BLOCK_INDEX	msvc/msvc-2010/GL/glext.h	2975;"	d
GL_BLUE	ps3/rgl/include/export/GLES/glext.h	59;"	d
GL_BLUE_BIT_ATI	msvc/msvc-2010/GL/glext.h	4624;"	d
GL_BLUE_INTEGER	msvc/msvc-2010/GL/glext.h	552;"	d
GL_BLUE_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5444;"	d
GL_BLUE_MAX_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3951;"	d
GL_BLUE_MIN_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3947;"	d
GL_BOLD_BIT_NV	msvc/msvc-2010/GL/glext.h	6074;"	d
GL_BOOL	msvc/msvc-2010/GL/glext.h	418;"	d
GL_BOOL_ARB	msvc/msvc-2010/GL/glext.h	1796;"	d
GL_BOOL_VEC2	msvc/msvc-2010/GL/glext.h	419;"	d
GL_BOOL_VEC2_ARB	msvc/msvc-2010/GL/glext.h	1797;"	d
GL_BOOL_VEC3	msvc/msvc-2010/GL/glext.h	420;"	d
GL_BOOL_VEC3_ARB	msvc/msvc-2010/GL/glext.h	1798;"	d
GL_BOOL_VEC4	msvc/msvc-2010/GL/glext.h	421;"	d
GL_BOOL_VEC4_ARB	msvc/msvc-2010/GL/glext.h	1799;"	d
GL_BOUNDING_BOX_NV	msvc/msvc-2010/GL/glext.h	5992;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	msvc/msvc-2010/GL/glext.h	6007;"	d
GL_BUFFER	msvc/msvc-2010/GL/glext.h	2715;"	d
GL_BUFFER_ACCESS	msvc/msvc-2010/GL/glext.h	332;"	d
GL_BUFFER_ACCESS_ARB	msvc/msvc-2010/GL/glext.h	1763;"	d
GL_BUFFER_ACCESS_FLAGS	msvc/msvc-2010/GL/glext.h	581;"	d
GL_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2980;"	d
GL_BUFFER_DATA_SIZE	msvc/msvc-2010/GL/glext.h	2981;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	msvc/msvc-2010/GL/glext.h	5189;"	d
GL_BUFFER_GPU_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5703;"	d
GL_BUFFER_MAPPED	msvc/msvc-2010/GL/glext.h	333;"	d
GL_BUFFER_MAPPED_ARB	msvc/msvc-2010/GL/glext.h	1764;"	d
GL_BUFFER_MAP_LENGTH	msvc/msvc-2010/GL/glext.h	582;"	d
GL_BUFFER_MAP_OFFSET	msvc/msvc-2010/GL/glext.h	583;"	d
GL_BUFFER_MAP_POINTER	msvc/msvc-2010/GL/glext.h	334;"	d
GL_BUFFER_MAP_POINTER_ARB	msvc/msvc-2010/GL/glext.h	1765;"	d
GL_BUFFER_OBJECT_APPLE	msvc/msvc-2010/GL/glext.h	5641;"	d
GL_BUFFER_PITCH_SCE	ps3/rgl/include/export/GLES/glext.h	360;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	msvc/msvc-2010/GL/glext.h	5188;"	d
GL_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	318;"	d
GL_BUFFER_SIZE	ps3/rgl/include/export/GLES/glext.h	359;"	d
GL_BUFFER_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1744;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2596;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5800;"	d
GL_BUFFER_USAGE	msvc/msvc-2010/GL/glext.h	319;"	d
GL_BUFFER_USAGE_ARB	msvc/msvc-2010/GL/glext.h	1745;"	d
GL_BUFFER_VARIABLE	msvc/msvc-2010/GL/glext.h	2951;"	d
GL_BUMP_ENVMAP_ATI	msvc/msvc-2010/GL/glext.h	4526;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	msvc/msvc-2010/GL/glext.h	4522;"	d
GL_BUMP_ROT_MATRIX_ATI	msvc/msvc-2010/GL/glext.h	4520;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	msvc/msvc-2010/GL/glext.h	4521;"	d
GL_BUMP_TARGET_ATI	msvc/msvc-2010/GL/glext.h	4527;"	d
GL_BUMP_TEX_UNITS_ATI	msvc/msvc-2010/GL/glext.h	4523;"	d
GL_BYTE	ps3/rgl/include/export/GLES/gl.h	267;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	msvc/msvc-2010/GL/glext.h	3622;"	d
GL_CAVEAT_SUPPORT	msvc/msvc-2010/GL/glext.h	2910;"	d
GL_CCW	ps3/rgl/include/export/GLES/gl.h	217;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6069;"	d
GL_CIRCULAR_CW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6070;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6071;"	d
GL_CLAMP	ps3/rgl/include/export/GLES/glext.h	148;"	d
GL_CLAMP_FRAGMENT_COLOR	msvc/msvc-2010/GL/glext.h	709;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	msvc/msvc-2010/GL/glext.h	1883;"	d
GL_CLAMP_READ_COLOR	msvc/msvc-2010/GL/glext.h	509;"	d
GL_CLAMP_READ_COLOR_ARB	msvc/msvc-2010/GL/glext.h	1884;"	d
GL_CLAMP_TO_BORDER	msvc/msvc-2010/GL/glext.h	235;"	d
GL_CLAMP_TO_BORDER	ps3/rgl/include/export/GLES/glext.h	153;"	d
GL_CLAMP_TO_BORDER_ARB	msvc/msvc-2010/GL/glext.h	1517;"	d
GL_CLAMP_TO_BORDER_SGIS	msvc/msvc-2010/GL/glext.h	3372;"	d
GL_CLAMP_TO_EDGE	msvc/msvc-2010/GL/glext.h	81;"	d
GL_CLAMP_TO_EDGE	ps3/rgl/include/export/GLES/gl.h	434;"	d
GL_CLAMP_TO_EDGE_SGIS	msvc/msvc-2010/GL/glext.h	3368;"	d
GL_CLAMP_VERTEX_COLOR	msvc/msvc-2010/GL/glext.h	708;"	d
GL_CLAMP_VERTEX_COLOR_ARB	msvc/msvc-2010/GL/glext.h	1882;"	d
GL_CLEAR	ps3/rgl/include/export/GLES/gl.h	275;"	d
GL_CLEAR_BUFFER	msvc/msvc-2010/GL/glext.h	2906;"	d
GL_CLIENT_ACTIVE_TEXTURE	msvc/msvc-2010/GL/glext.h	236;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	msvc/msvc-2010/GL/glext.h	1461;"	d
GL_CLIP_DISTANCE0	msvc/msvc-2010/GL/glext.h	485;"	d
GL_CLIP_DISTANCE1	msvc/msvc-2010/GL/glext.h	486;"	d
GL_CLIP_DISTANCE2	msvc/msvc-2010/GL/glext.h	487;"	d
GL_CLIP_DISTANCE3	msvc/msvc-2010/GL/glext.h	488;"	d
GL_CLIP_DISTANCE4	msvc/msvc-2010/GL/glext.h	489;"	d
GL_CLIP_DISTANCE5	msvc/msvc-2010/GL/glext.h	490;"	d
GL_CLIP_DISTANCE6	msvc/msvc-2010/GL/glext.h	491;"	d
GL_CLIP_DISTANCE7	msvc/msvc-2010/GL/glext.h	492;"	d
GL_CLIP_DISTANCE_NV	msvc/msvc-2010/GL/glext.h	5366;"	d
GL_CLIP_FAR_HINT_PGI	msvc/msvc-2010/GL/glext.h	3594;"	d
GL_CLIP_NEAR_HINT_PGI	msvc/msvc-2010/GL/glext.h	3593;"	d
GL_CLIP_PLANE0	ps3/rgl/include/export/GLES/glext.h	258;"	d
GL_CLIP_PLANE1	ps3/rgl/include/export/GLES/glext.h	259;"	d
GL_CLIP_PLANE2	ps3/rgl/include/export/GLES/glext.h	260;"	d
GL_CLIP_PLANE3	ps3/rgl/include/export/GLES/glext.h	261;"	d
GL_CLIP_PLANE4	ps3/rgl/include/export/GLES/glext.h	262;"	d
GL_CLIP_PLANE5	ps3/rgl/include/export/GLES/glext.h	263;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	msvc/msvc-2010/GL/glext.h	3610;"	d
GL_CLOSE_PATH_NV	msvc/msvc-2010/GL/glext.h	6040;"	d
GL_CMYKA_EXT	msvc/msvc-2010/GL/glext.h	3233;"	d
GL_CMYK_EXT	msvc/msvc-2010/GL/glext.h	3232;"	d
GL_CND0_ATI	msvc/msvc-2010/GL/glext.h	4605;"	d
GL_CND_ATI	msvc/msvc-2010/GL/glext.h	4604;"	d
GL_COLOR3_BIT_PGI	msvc/msvc-2010/GL/glext.h	3556;"	d
GL_COLOR4_BIT_PGI	msvc/msvc-2010/GL/glext.h	3557;"	d
GL_COLOR_ALPHA_PAIRING_ATI	msvc/msvc-2010/GL/glext.h	4615;"	d
GL_COLOR_ARRAY	ps3/rgl/include/export/GLES/gl.h	187;"	d
GL_COLOR_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5714;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	348;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1752;"	d
GL_COLOR_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3319;"	d
GL_COLOR_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3305;"	d
GL_COLOR_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5724;"	d
GL_COLOR_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4144;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4152;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	msvc/msvc-2010/GL/glext.h	3782;"	d
GL_COLOR_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3331;"	d
GL_COLOR_ARRAY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3316;"	d
GL_COLOR_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3318;"	d
GL_COLOR_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3317;"	d
GL_COLOR_ATTACHMENT0	gfx/gl.c	180;"	d	file:
GL_COLOR_ATTACHMENT0	msvc/msvc-2010/GL/glext.h	1974;"	d
GL_COLOR_ATTACHMENT0_EXT	msvc/msvc-2010/GL/glext.h	5089;"	d
GL_COLOR_ATTACHMENT0_EXT	ps3/rgl/include/export/GLES/glext.h	288;"	d
GL_COLOR_ATTACHMENT1	msvc/msvc-2010/GL/glext.h	1975;"	d
GL_COLOR_ATTACHMENT10	msvc/msvc-2010/GL/glext.h	1984;"	d
GL_COLOR_ATTACHMENT10_EXT	msvc/msvc-2010/GL/glext.h	5099;"	d
GL_COLOR_ATTACHMENT10_EXT	ps3/rgl/include/export/GLES/glext.h	298;"	d
GL_COLOR_ATTACHMENT11	msvc/msvc-2010/GL/glext.h	1985;"	d
GL_COLOR_ATTACHMENT11_EXT	msvc/msvc-2010/GL/glext.h	5100;"	d
GL_COLOR_ATTACHMENT11_EXT	ps3/rgl/include/export/GLES/glext.h	299;"	d
GL_COLOR_ATTACHMENT12	msvc/msvc-2010/GL/glext.h	1986;"	d
GL_COLOR_ATTACHMENT12_EXT	msvc/msvc-2010/GL/glext.h	5101;"	d
GL_COLOR_ATTACHMENT12_EXT	ps3/rgl/include/export/GLES/glext.h	300;"	d
GL_COLOR_ATTACHMENT13	msvc/msvc-2010/GL/glext.h	1987;"	d
GL_COLOR_ATTACHMENT13_EXT	msvc/msvc-2010/GL/glext.h	5102;"	d
GL_COLOR_ATTACHMENT13_EXT	ps3/rgl/include/export/GLES/glext.h	301;"	d
GL_COLOR_ATTACHMENT14	msvc/msvc-2010/GL/glext.h	1988;"	d
GL_COLOR_ATTACHMENT14_EXT	msvc/msvc-2010/GL/glext.h	5103;"	d
GL_COLOR_ATTACHMENT14_EXT	ps3/rgl/include/export/GLES/glext.h	302;"	d
GL_COLOR_ATTACHMENT15	msvc/msvc-2010/GL/glext.h	1989;"	d
GL_COLOR_ATTACHMENT15_EXT	msvc/msvc-2010/GL/glext.h	5104;"	d
GL_COLOR_ATTACHMENT15_EXT	ps3/rgl/include/export/GLES/glext.h	303;"	d
GL_COLOR_ATTACHMENT1_EXT	msvc/msvc-2010/GL/glext.h	5090;"	d
GL_COLOR_ATTACHMENT1_EXT	ps3/rgl/include/export/GLES/glext.h	289;"	d
GL_COLOR_ATTACHMENT2	msvc/msvc-2010/GL/glext.h	1976;"	d
GL_COLOR_ATTACHMENT2_EXT	msvc/msvc-2010/GL/glext.h	5091;"	d
GL_COLOR_ATTACHMENT2_EXT	ps3/rgl/include/export/GLES/glext.h	290;"	d
GL_COLOR_ATTACHMENT3	msvc/msvc-2010/GL/glext.h	1977;"	d
GL_COLOR_ATTACHMENT3_EXT	msvc/msvc-2010/GL/glext.h	5092;"	d
GL_COLOR_ATTACHMENT3_EXT	ps3/rgl/include/export/GLES/glext.h	291;"	d
GL_COLOR_ATTACHMENT4	msvc/msvc-2010/GL/glext.h	1978;"	d
GL_COLOR_ATTACHMENT4_EXT	msvc/msvc-2010/GL/glext.h	5093;"	d
GL_COLOR_ATTACHMENT4_EXT	ps3/rgl/include/export/GLES/glext.h	292;"	d
GL_COLOR_ATTACHMENT5	msvc/msvc-2010/GL/glext.h	1979;"	d
GL_COLOR_ATTACHMENT5_EXT	msvc/msvc-2010/GL/glext.h	5094;"	d
GL_COLOR_ATTACHMENT5_EXT	ps3/rgl/include/export/GLES/glext.h	293;"	d
GL_COLOR_ATTACHMENT6	msvc/msvc-2010/GL/glext.h	1980;"	d
GL_COLOR_ATTACHMENT6_EXT	msvc/msvc-2010/GL/glext.h	5095;"	d
GL_COLOR_ATTACHMENT6_EXT	ps3/rgl/include/export/GLES/glext.h	294;"	d
GL_COLOR_ATTACHMENT7	msvc/msvc-2010/GL/glext.h	1981;"	d
GL_COLOR_ATTACHMENT7_EXT	msvc/msvc-2010/GL/glext.h	5096;"	d
GL_COLOR_ATTACHMENT7_EXT	ps3/rgl/include/export/GLES/glext.h	295;"	d
GL_COLOR_ATTACHMENT8	msvc/msvc-2010/GL/glext.h	1982;"	d
GL_COLOR_ATTACHMENT8_EXT	msvc/msvc-2010/GL/glext.h	5097;"	d
GL_COLOR_ATTACHMENT8_EXT	ps3/rgl/include/export/GLES/glext.h	296;"	d
GL_COLOR_ATTACHMENT9	msvc/msvc-2010/GL/glext.h	1983;"	d
GL_COLOR_ATTACHMENT9_EXT	msvc/msvc-2010/GL/glext.h	5098;"	d
GL_COLOR_ATTACHMENT9_EXT	ps3/rgl/include/export/GLES/glext.h	297;"	d
GL_COLOR_BUFFER_BIT	ps3/rgl/include/export/GLES/gl.h	88;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	msvc/msvc-2010/GL/glext.h	4923;"	d
GL_COLOR_COMPONENTS	msvc/msvc-2010/GL/glext.h	2859;"	d
GL_COLOR_ENCODING	msvc/msvc-2010/GL/glext.h	2878;"	d
GL_COLOR_FLOAT_APPLE	msvc/msvc-2010/GL/glext.h	5620;"	d
GL_COLOR_INDEX12_EXT	msvc/msvc-2010/GL/glext.h	3604;"	d
GL_COLOR_INDEX16_EXT	msvc/msvc-2010/GL/glext.h	3605;"	d
GL_COLOR_INDEX1_EXT	msvc/msvc-2010/GL/glext.h	3600;"	d
GL_COLOR_INDEX2_EXT	msvc/msvc-2010/GL/glext.h	3601;"	d
GL_COLOR_INDEX4_EXT	msvc/msvc-2010/GL/glext.h	3602;"	d
GL_COLOR_INDEX8_EXT	msvc/msvc-2010/GL/glext.h	3603;"	d
GL_COLOR_LOGIC_OP	ps3/rgl/include/export/GLES/gl.h	166;"	d
GL_COLOR_MATERIAL	ps3/rgl/include/export/GLES/gl.h	181;"	d
GL_COLOR_MATRIX	msvc/msvc-2010/GL/glext.h	144;"	d
GL_COLOR_MATRIX_SGI	msvc/msvc-2010/GL/glext.h	3169;"	d
GL_COLOR_MATRIX_STACK_DEPTH	msvc/msvc-2010/GL/glext.h	145;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	msvc/msvc-2010/GL/glext.h	3170;"	d
GL_COLOR_RENDERABLE	msvc/msvc-2010/GL/glext.h	2862;"	d
GL_COLOR_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5887;"	d
GL_COLOR_SUM	msvc/msvc-2010/GL/glext.h	305;"	d
GL_COLOR_SUM_ARB	msvc/msvc-2010/GL/glext.h	1644;"	d
GL_COLOR_SUM_CLAMP_NV	msvc/msvc-2010/GL/glext.h	4081;"	d
GL_COLOR_SUM_EXT	msvc/msvc-2010/GL/glext.h	3817;"	d
GL_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	155;"	d
GL_COLOR_TABLE_ALPHA_SIZE	msvc/msvc-2010/GL/glext.h	168;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3196;"	d
GL_COLOR_TABLE_BIAS	msvc/msvc-2010/GL/glext.h	162;"	d
GL_COLOR_TABLE_BIAS_SGI	msvc/msvc-2010/GL/glext.h	3190;"	d
GL_COLOR_TABLE_BLUE_SIZE	msvc/msvc-2010/GL/glext.h	167;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3195;"	d
GL_COLOR_TABLE_FORMAT	msvc/msvc-2010/GL/glext.h	163;"	d
GL_COLOR_TABLE_FORMAT_SGI	msvc/msvc-2010/GL/glext.h	3191;"	d
GL_COLOR_TABLE_GREEN_SIZE	msvc/msvc-2010/GL/glext.h	166;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3194;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	msvc/msvc-2010/GL/glext.h	170;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3198;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	msvc/msvc-2010/GL/glext.h	169;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3197;"	d
GL_COLOR_TABLE_RED_SIZE	msvc/msvc-2010/GL/glext.h	165;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	msvc/msvc-2010/GL/glext.h	3193;"	d
GL_COLOR_TABLE_SCALE	msvc/msvc-2010/GL/glext.h	161;"	d
GL_COLOR_TABLE_SCALE_SGI	msvc/msvc-2010/GL/glext.h	3189;"	d
GL_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3183;"	d
GL_COLOR_TABLE_WIDTH	msvc/msvc-2010/GL/glext.h	164;"	d
GL_COLOR_TABLE_WIDTH_SGI	msvc/msvc-2010/GL/glext.h	3192;"	d
GL_COMBINE	msvc/msvc-2010/GL/glext.h	249;"	d
GL_COMBINE4_NV	msvc/msvc-2010/GL/glext.h	4114;"	d
GL_COMBINER0_NV	msvc/msvc-2010/GL/glext.h	4082;"	d
GL_COMBINER1_NV	msvc/msvc-2010/GL/glext.h	4083;"	d
GL_COMBINER2_NV	msvc/msvc-2010/GL/glext.h	4084;"	d
GL_COMBINER3_NV	msvc/msvc-2010/GL/glext.h	4085;"	d
GL_COMBINER4_NV	msvc/msvc-2010/GL/glext.h	4086;"	d
GL_COMBINER5_NV	msvc/msvc-2010/GL/glext.h	4087;"	d
GL_COMBINER6_NV	msvc/msvc-2010/GL/glext.h	4088;"	d
GL_COMBINER7_NV	msvc/msvc-2010/GL/glext.h	4089;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	msvc/msvc-2010/GL/glext.h	4071;"	d
GL_COMBINER_AB_OUTPUT_NV	msvc/msvc-2010/GL/glext.h	4076;"	d
GL_COMBINER_BIAS_NV	msvc/msvc-2010/GL/glext.h	4075;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	msvc/msvc-2010/GL/glext.h	4072;"	d
GL_COMBINER_CD_OUTPUT_NV	msvc/msvc-2010/GL/glext.h	4077;"	d
GL_COMBINER_COMPONENT_USAGE_NV	msvc/msvc-2010/GL/glext.h	4070;"	d
GL_COMBINER_INPUT_NV	msvc/msvc-2010/GL/glext.h	4068;"	d
GL_COMBINER_MAPPING_NV	msvc/msvc-2010/GL/glext.h	4069;"	d
GL_COMBINER_MUX_SUM_NV	msvc/msvc-2010/GL/glext.h	4073;"	d
GL_COMBINER_SCALE_NV	msvc/msvc-2010/GL/glext.h	4074;"	d
GL_COMBINER_SUM_OUTPUT_NV	msvc/msvc-2010/GL/glext.h	4078;"	d
GL_COMBINE_ALPHA	msvc/msvc-2010/GL/glext.h	251;"	d
GL_COMBINE_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1588;"	d
GL_COMBINE_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3870;"	d
GL_COMBINE_ARB	msvc/msvc-2010/GL/glext.h	1586;"	d
GL_COMBINE_EXT	msvc/msvc-2010/GL/glext.h	3868;"	d
GL_COMBINE_RGB	msvc/msvc-2010/GL/glext.h	250;"	d
GL_COMBINE_RGB_ARB	msvc/msvc-2010/GL/glext.h	1587;"	d
GL_COMBINE_RGB_EXT	msvc/msvc-2010/GL/glext.h	3869;"	d
GL_COMMAND_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2593;"	d
GL_COMMAND_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5797;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	msvc/msvc-2010/GL/glext.h	5294;"	d
GL_COMPARE_REF_TO_TEXTURE	msvc/msvc-2010/GL/glext.h	484;"	d
GL_COMPARE_R_TO_TEXTURE	msvc/msvc-2010/GL/glext.h	314;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	msvc/msvc-2010/GL/glext.h	1633;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	ps3/rgl/include/export/GLES/glext.h	145;"	d
GL_COMPATIBLE_SUBROUTINES	msvc/msvc-2010/GL/glext.h	2342;"	d
GL_COMPILE_STATUS	msvc/msvc-2010/GL/glext.h	432;"	d
GL_COMPRESSED_ALPHA	msvc/msvc-2010/GL/glext.h	245;"	d
GL_COMPRESSED_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1503;"	d
GL_COMPRESSED_INTENSITY	msvc/msvc-2010/GL/glext.h	248;"	d
GL_COMPRESSED_INTENSITY_ARB	msvc/msvc-2010/GL/glext.h	1506;"	d
GL_COMPRESSED_LUMINANCE	msvc/msvc-2010/GL/glext.h	246;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	msvc/msvc-2010/GL/glext.h	247;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1505;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	msvc/msvc-2010/GL/glext.h	5309;"	d
GL_COMPRESSED_LUMINANCE_ARB	msvc/msvc-2010/GL/glext.h	1504;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	msvc/msvc-2010/GL/glext.h	5307;"	d
GL_COMPRESSED_R11_EAC	msvc/msvc-2010/GL/glext.h	2794;"	d
GL_COMPRESSED_RED	msvc/msvc-2010/GL/glext.h	498;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	msvc/msvc-2010/GL/glext.h	5316;"	d
GL_COMPRESSED_RED_RGTC1	msvc/msvc-2010/GL/glext.h	2067;"	d
GL_COMPRESSED_RED_RGTC1_EXT	msvc/msvc-2010/GL/glext.h	5314;"	d
GL_COMPRESSED_RG	msvc/msvc-2010/GL/glext.h	499;"	d
GL_COMPRESSED_RG11_EAC	msvc/msvc-2010/GL/glext.h	2796;"	d
GL_COMPRESSED_RGB	msvc/msvc-2010/GL/glext.h	228;"	d
GL_COMPRESSED_RGB8_ETC2	msvc/msvc-2010/GL/glext.h	2788;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	msvc/msvc-2010/GL/glext.h	2790;"	d
GL_COMPRESSED_RGBA	msvc/msvc-2010/GL/glext.h	229;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	msvc/msvc-2010/GL/glext.h	2792;"	d
GL_COMPRESSED_RGBA_ARB	msvc/msvc-2010/GL/glext.h	1508;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	msvc/msvc-2010/GL/glext.h	2673;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	msvc/msvc-2010/GL/glext.h	2670;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	msvc/msvc-2010/GL/glext.h	2671;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	msvc/msvc-2010/GL/glext.h	2672;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	msvc/msvc-2010/GL/glext.h	2674;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	msvc/msvc-2010/GL/glext.h	2675;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	msvc/msvc-2010/GL/glext.h	2662;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	msvc/msvc-2010/GL/glext.h	2663;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	msvc/msvc-2010/GL/glext.h	2664;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	msvc/msvc-2010/GL/glext.h	2665;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	msvc/msvc-2010/GL/glext.h	2666;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	msvc/msvc-2010/GL/glext.h	2667;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	msvc/msvc-2010/GL/glext.h	2668;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	msvc/msvc-2010/GL/glext.h	2669;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	msvc/msvc-2010/GL/glext.h	2253;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	msvc/msvc-2010/GL/glext.h	4184;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	msvc/msvc-2010/GL/glext.h	4129;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	ps3/rgl/include/export/GLES/glext.h	75;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	msvc/msvc-2010/GL/glext.h	4130;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	ps3/rgl/include/export/GLES/glext.h	76;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	msvc/msvc-2010/GL/glext.h	4131;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	ps3/rgl/include/export/GLES/glext.h	77;"	d
GL_COMPRESSED_RGB_ARB	msvc/msvc-2010/GL/glext.h	1507;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	msvc/msvc-2010/GL/glext.h	2255;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	msvc/msvc-2010/GL/glext.h	2256;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	msvc/msvc-2010/GL/glext.h	4183;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	msvc/msvc-2010/GL/glext.h	4128;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	ps3/rgl/include/export/GLES/glext.h	74;"	d
GL_COMPRESSED_RG_RGTC2	msvc/msvc-2010/GL/glext.h	2069;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	msvc/msvc-2010/GL/glext.h	5310;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	msvc/msvc-2010/GL/glext.h	5308;"	d
GL_COMPRESSED_SIGNED_R11_EAC	msvc/msvc-2010/GL/glext.h	2795;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	msvc/msvc-2010/GL/glext.h	5317;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	msvc/msvc-2010/GL/glext.h	2068;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	msvc/msvc-2010/GL/glext.h	5315;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	msvc/msvc-2010/GL/glext.h	2797;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	msvc/msvc-2010/GL/glext.h	2070;"	d
GL_COMPRESSED_SLUMINANCE	msvc/msvc-2010/GL/glext.h	479;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	msvc/msvc-2010/GL/glext.h	480;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	5151;"	d
GL_COMPRESSED_SLUMINANCE_EXT	msvc/msvc-2010/GL/glext.h	5150;"	d
GL_COMPRESSED_SRGB	msvc/msvc-2010/GL/glext.h	472;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	msvc/msvc-2010/GL/glext.h	2687;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	msvc/msvc-2010/GL/glext.h	2684;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	msvc/msvc-2010/GL/glext.h	2685;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	msvc/msvc-2010/GL/glext.h	2686;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	msvc/msvc-2010/GL/glext.h	2688;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	msvc/msvc-2010/GL/glext.h	2689;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	msvc/msvc-2010/GL/glext.h	2676;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	msvc/msvc-2010/GL/glext.h	2677;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	msvc/msvc-2010/GL/glext.h	2678;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	msvc/msvc-2010/GL/glext.h	2679;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	msvc/msvc-2010/GL/glext.h	2680;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	msvc/msvc-2010/GL/glext.h	2681;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	msvc/msvc-2010/GL/glext.h	2682;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	msvc/msvc-2010/GL/glext.h	2683;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	msvc/msvc-2010/GL/glext.h	2793;"	d
GL_COMPRESSED_SRGB8_ETC2	msvc/msvc-2010/GL/glext.h	2789;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	msvc/msvc-2010/GL/glext.h	2791;"	d
GL_COMPRESSED_SRGB_ALPHA	msvc/msvc-2010/GL/glext.h	473;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	msvc/msvc-2010/GL/glext.h	2254;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	5149;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	msvc/msvc-2010/GL/glext.h	5153;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	msvc/msvc-2010/GL/glext.h	5154;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	msvc/msvc-2010/GL/glext.h	5155;"	d
GL_COMPRESSED_SRGB_EXT	msvc/msvc-2010/GL/glext.h	5148;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	msvc/msvc-2010/GL/glext.h	5152;"	d
GL_COMPRESSED_TEXTURE_FORMATS	msvc/msvc-2010/GL/glext.h	234;"	d
GL_COMPRESSED_TEXTURE_FORMATS	ps3/rgl/include/export/GLES/gl.h	235;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	msvc/msvc-2010/GL/glext.h	1513;"	d
GL_COMPUTE_LOCAL_WORK_SIZE	msvc/msvc-2010/GL/glext.h	2755;"	d
GL_COMPUTE_SHADER	msvc/msvc-2010/GL/glext.h	2743;"	d
GL_COMPUTE_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2760;"	d
GL_COMPUTE_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2959;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2965;"	d
GL_COMPUTE_TEXTURE	msvc/msvc-2010/GL/glext.h	2888;"	d
GL_COMP_BIT_ATI	msvc/msvc-2010/GL/glext.h	4632;"	d
GL_CONDITION_SATISFIED	msvc/msvc-2010/GL/glext.h	2185;"	d
GL_CONSERVE_MEMORY_HINT_PGI	msvc/msvc-2010/GL/glext.h	3578;"	d
GL_CONSTANT	msvc/msvc-2010/GL/glext.h	268;"	d
GL_CONSTANT_ALPHA	msvc/msvc-2010/GL/glext.h	101;"	d
GL_CONSTANT_ALPHA	ps3/rgl/include/export/GLES/glext.h	101;"	d
GL_CONSTANT_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3048;"	d
GL_CONSTANT_ARB	msvc/msvc-2010/GL/glext.h	1605;"	d
GL_CONSTANT_ATTENUATION	ps3/rgl/include/export/GLES/gl.h	262;"	d
GL_CONSTANT_BORDER	msvc/msvc-2010/GL/glext.h	171;"	d
GL_CONSTANT_BORDER_HP	msvc/msvc-2010/GL/glext.h	3536;"	d
GL_CONSTANT_COLOR	msvc/msvc-2010/GL/glext.h	99;"	d
GL_CONSTANT_COLOR	ps3/rgl/include/export/GLES/glext.h	99;"	d
GL_CONSTANT_COLOR0_NV	msvc/msvc-2010/GL/glext.h	4047;"	d
GL_CONSTANT_COLOR1_NV	msvc/msvc-2010/GL/glext.h	4048;"	d
GL_CONSTANT_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3046;"	d
GL_CONSTANT_EXT	msvc/msvc-2010/GL/glext.h	3874;"	d
GL_CONST_EYE_NV	msvc/msvc-2010/GL/glext.h	4334;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	msvc/msvc-2010/GL/glext.h	786;"	d
GL_CONTEXT_CORE_PROFILE_BIT	msvc/msvc-2010/GL/glext.h	785;"	d
GL_CONTEXT_FLAGS	msvc/msvc-2010/GL/glext.h	497;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	msvc/msvc-2010/GL/glext.h	2731;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	msvc/msvc-2010/GL/glext.h	500;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	msvc/msvc-2010/GL/glext.h	2512;"	d
GL_CONTEXT_PROFILE_MASK	msvc/msvc-2010/GL/glext.h	806;"	d
GL_CONTINUOUS_AMD	msvc/msvc-2010/GL/glext.h	5556;"	d
GL_CONVEX_HULL_NV	msvc/msvc-2010/GL/glext.h	5990;"	d
GL_CONVOLUTION_1D	msvc/msvc-2010/GL/glext.h	110;"	d
GL_CONVOLUTION_1D_EXT	msvc/msvc-2010/GL/glext.h	3146;"	d
GL_CONVOLUTION_2D	msvc/msvc-2010/GL/glext.h	111;"	d
GL_CONVOLUTION_2D_EXT	msvc/msvc-2010/GL/glext.h	3147;"	d
GL_CONVOLUTION_BORDER_COLOR	msvc/msvc-2010/GL/glext.h	173;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	msvc/msvc-2010/GL/glext.h	3538;"	d
GL_CONVOLUTION_BORDER_MODE	msvc/msvc-2010/GL/glext.h	113;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	msvc/msvc-2010/GL/glext.h	3149;"	d
GL_CONVOLUTION_FILTER_BIAS	msvc/msvc-2010/GL/glext.h	115;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3151;"	d
GL_CONVOLUTION_FILTER_SCALE	msvc/msvc-2010/GL/glext.h	114;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3150;"	d
GL_CONVOLUTION_FORMAT	msvc/msvc-2010/GL/glext.h	117;"	d
GL_CONVOLUTION_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	3153;"	d
GL_CONVOLUTION_HEIGHT	msvc/msvc-2010/GL/glext.h	119;"	d
GL_CONVOLUTION_HEIGHT_EXT	msvc/msvc-2010/GL/glext.h	3155;"	d
GL_CONVOLUTION_HINT_SGIX	msvc/msvc-2010/GL/glext.h	4223;"	d
GL_CONVOLUTION_WIDTH	msvc/msvc-2010/GL/glext.h	118;"	d
GL_CONVOLUTION_WIDTH_EXT	msvc/msvc-2010/GL/glext.h	3154;"	d
GL_CON_0_ATI	msvc/msvc-2010/GL/glext.h	4564;"	d
GL_CON_10_ATI	msvc/msvc-2010/GL/glext.h	4574;"	d
GL_CON_11_ATI	msvc/msvc-2010/GL/glext.h	4575;"	d
GL_CON_12_ATI	msvc/msvc-2010/GL/glext.h	4576;"	d
GL_CON_13_ATI	msvc/msvc-2010/GL/glext.h	4577;"	d
GL_CON_14_ATI	msvc/msvc-2010/GL/glext.h	4578;"	d
GL_CON_15_ATI	msvc/msvc-2010/GL/glext.h	4579;"	d
GL_CON_16_ATI	msvc/msvc-2010/GL/glext.h	4580;"	d
GL_CON_17_ATI	msvc/msvc-2010/GL/glext.h	4581;"	d
GL_CON_18_ATI	msvc/msvc-2010/GL/glext.h	4582;"	d
GL_CON_19_ATI	msvc/msvc-2010/GL/glext.h	4583;"	d
GL_CON_1_ATI	msvc/msvc-2010/GL/glext.h	4565;"	d
GL_CON_20_ATI	msvc/msvc-2010/GL/glext.h	4584;"	d
GL_CON_21_ATI	msvc/msvc-2010/GL/glext.h	4585;"	d
GL_CON_22_ATI	msvc/msvc-2010/GL/glext.h	4586;"	d
GL_CON_23_ATI	msvc/msvc-2010/GL/glext.h	4587;"	d
GL_CON_24_ATI	msvc/msvc-2010/GL/glext.h	4588;"	d
GL_CON_25_ATI	msvc/msvc-2010/GL/glext.h	4589;"	d
GL_CON_26_ATI	msvc/msvc-2010/GL/glext.h	4590;"	d
GL_CON_27_ATI	msvc/msvc-2010/GL/glext.h	4591;"	d
GL_CON_28_ATI	msvc/msvc-2010/GL/glext.h	4592;"	d
GL_CON_29_ATI	msvc/msvc-2010/GL/glext.h	4593;"	d
GL_CON_2_ATI	msvc/msvc-2010/GL/glext.h	4566;"	d
GL_CON_30_ATI	msvc/msvc-2010/GL/glext.h	4594;"	d
GL_CON_31_ATI	msvc/msvc-2010/GL/glext.h	4595;"	d
GL_CON_3_ATI	msvc/msvc-2010/GL/glext.h	4567;"	d
GL_CON_4_ATI	msvc/msvc-2010/GL/glext.h	4568;"	d
GL_CON_5_ATI	msvc/msvc-2010/GL/glext.h	4569;"	d
GL_CON_6_ATI	msvc/msvc-2010/GL/glext.h	4570;"	d
GL_CON_7_ATI	msvc/msvc-2010/GL/glext.h	4571;"	d
GL_CON_8_ATI	msvc/msvc-2010/GL/glext.h	4572;"	d
GL_CON_9_ATI	msvc/msvc-2010/GL/glext.h	4573;"	d
GL_COORD_REPLACE	msvc/msvc-2010/GL/glext.h	453;"	d
GL_COORD_REPLACE_ARB	msvc/msvc-2010/GL/glext.h	1847;"	d
GL_COORD_REPLACE_NV	msvc/msvc-2010/GL/glext.h	4818;"	d
GL_COORD_REPLACE_OES	ps3/rgl/include/export/GLES/glext.h	267;"	d
GL_COPY	ps3/rgl/include/export/GLES/gl.h	278;"	d
GL_COPY_INVERTED	ps3/rgl/include/export/GLES/gl.h	287;"	d
GL_COPY_READ_BUFFER	msvc/msvc-2010/GL/glext.h	2144;"	d
GL_COPY_READ_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2143;"	d
GL_COPY_WRITE_BUFFER	msvc/msvc-2010/GL/glext.h	2146;"	d
GL_COPY_WRITE_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2145;"	d
GL_COUNTER_RANGE_AMD	msvc/msvc-2010/GL/glext.h	5538;"	d
GL_COUNTER_TYPE_AMD	msvc/msvc-2010/GL/glext.h	5537;"	d
GL_COUNT_DOWN_NV	msvc/msvc-2010/GL/glext.h	5988;"	d
GL_COUNT_UP_NV	msvc/msvc-2010/GL/glext.h	5987;"	d
GL_COVERAGE_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5886;"	d
GL_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6051;"	d
GL_CUBIC_EXT	msvc/msvc-2010/GL/glext.h	3796;"	d
GL_CUBIC_HP	msvc/msvc-2010/GL/glext.h	3527;"	d
GL_CULL_FACE	ps3/rgl/include/export/GLES/gl.h	164;"	d
GL_CULL_FRAGMENT_NV	msvc/msvc-2010/GL/glext.h	4336;"	d
GL_CULL_MODES_NV	msvc/msvc-2010/GL/glext.h	4326;"	d
GL_CULL_VERTEX_EXT	msvc/msvc-2010/GL/glext.h	3667;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	msvc/msvc-2010/GL/glext.h	3668;"	d
GL_CULL_VERTEX_IBM	msvc/msvc-2010/GL/glext.h	4135;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	msvc/msvc-2010/GL/glext.h	3669;"	d
GL_CURRENT_ATTRIB_NV	msvc/msvc-2010/GL/glext.h	4405;"	d
GL_CURRENT_BINORMAL_EXT	msvc/msvc-2010/GL/glext.h	3854;"	d
GL_CURRENT_FOG_COORD	msvc/msvc-2010/GL/glext.h	357;"	d
GL_CURRENT_FOG_COORDINATE	msvc/msvc-2010/GL/glext.h	300;"	d
GL_CURRENT_FOG_COORDINATE_EXT	msvc/msvc-2010/GL/glext.h	3838;"	d
GL_CURRENT_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1656;"	d
GL_CURRENT_MATRIX_INDEX_ARB	msvc/msvc-2010/GL/glext.h	1578;"	d
GL_CURRENT_MATRIX_NV	msvc/msvc-2010/GL/glext.h	4424;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	msvc/msvc-2010/GL/glext.h	1655;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	msvc/msvc-2010/GL/glext.h	4423;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	msvc/msvc-2010/GL/glext.h	4811;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1576;"	d
GL_CURRENT_PROGRAM	msvc/msvc-2010/GL/glext.h	444;"	d
GL_CURRENT_QUERY	msvc/msvc-2010/GL/glext.h	321;"	d
GL_CURRENT_QUERY_ARB	msvc/msvc-2010/GL/glext.h	1779;"	d
GL_CURRENT_QUERY_ARB	ps3/rgl/include/export/GLES/glext.h	332;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	msvc/msvc-2010/GL/glext.h	3684;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	msvc/msvc-2010/GL/glext.h	474;"	d
GL_CURRENT_SECONDARY_COLOR	msvc/msvc-2010/GL/glext.h	306;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3818;"	d
GL_CURRENT_TANGENT_EXT	msvc/msvc-2010/GL/glext.h	3853;"	d
GL_CURRENT_TIME_NV	msvc/msvc-2010/GL/glext.h	5468;"	d
GL_CURRENT_VERTEX_ATTRIB	msvc/msvc-2010/GL/glext.h	376;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	msvc/msvc-2010/GL/glext.h	1650;"	d
GL_CURRENT_VERTEX_EXT	msvc/msvc-2010/GL/glext.h	4759;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	msvc/msvc-2010/GL/glext.h	4017;"	d
GL_CURRENT_WEIGHT_ARB	msvc/msvc-2010/GL/glext.h	1532;"	d
GL_CW	ps3/rgl/include/export/GLES/gl.h	216;"	d
GL_DATA_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	5891;"	d
GL_DEBUG_CALLBACK_FUNCTION	msvc/msvc-2010/GL/glext.h	2695;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	msvc/msvc-2010/GL/glext.h	2488;"	d
GL_DEBUG_CALLBACK_USER_PARAM	msvc/msvc-2010/GL/glext.h	2696;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	msvc/msvc-2010/GL/glext.h	2489;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	msvc/msvc-2010/GL/glext.h	5905;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	msvc/msvc-2010/GL/glext.h	5911;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	msvc/msvc-2010/GL/glext.h	5907;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	msvc/msvc-2010/GL/glext.h	5912;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	msvc/msvc-2010/GL/glext.h	5909;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	msvc/msvc-2010/GL/glext.h	5910;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	msvc/msvc-2010/GL/glext.h	5908;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	msvc/msvc-2010/GL/glext.h	5906;"	d
GL_DEBUG_GROUP_STACK_DEPTH	msvc/msvc-2010/GL/glext.h	2714;"	d
GL_DEBUG_LOGGED_MESSAGES	msvc/msvc-2010/GL/glext.h	2726;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	msvc/msvc-2010/GL/glext.h	5901;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	msvc/msvc-2010/GL/glext.h	2504;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	msvc/msvc-2010/GL/glext.h	2694;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	2487;"	d
GL_DEBUG_OUTPUT	msvc/msvc-2010/GL/glext.h	2730;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	msvc/msvc-2010/GL/glext.h	2693;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	msvc/msvc-2010/GL/glext.h	2486;"	d
GL_DEBUG_SEVERITY_HIGH	msvc/msvc-2010/GL/glext.h	2727;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	msvc/msvc-2010/GL/glext.h	5902;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	msvc/msvc-2010/GL/glext.h	2505;"	d
GL_DEBUG_SEVERITY_LOW	msvc/msvc-2010/GL/glext.h	2729;"	d
GL_DEBUG_SEVERITY_LOW_AMD	msvc/msvc-2010/GL/glext.h	5904;"	d
GL_DEBUG_SEVERITY_LOW_ARB	msvc/msvc-2010/GL/glext.h	2507;"	d
GL_DEBUG_SEVERITY_MEDIUM	msvc/msvc-2010/GL/glext.h	2728;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	msvc/msvc-2010/GL/glext.h	5903;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	msvc/msvc-2010/GL/glext.h	2506;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	msvc/msvc-2010/GL/glext.h	2712;"	d
GL_DEBUG_SOURCE_API	msvc/msvc-2010/GL/glext.h	2697;"	d
GL_DEBUG_SOURCE_API_ARB	msvc/msvc-2010/GL/glext.h	2490;"	d
GL_DEBUG_SOURCE_APPLICATION	msvc/msvc-2010/GL/glext.h	2701;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	msvc/msvc-2010/GL/glext.h	2494;"	d
GL_DEBUG_SOURCE_OTHER	msvc/msvc-2010/GL/glext.h	2702;"	d
GL_DEBUG_SOURCE_OTHER_ARB	msvc/msvc-2010/GL/glext.h	2495;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	msvc/msvc-2010/GL/glext.h	2699;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	msvc/msvc-2010/GL/glext.h	2492;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	msvc/msvc-2010/GL/glext.h	2700;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	msvc/msvc-2010/GL/glext.h	2493;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	msvc/msvc-2010/GL/glext.h	2698;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	msvc/msvc-2010/GL/glext.h	2491;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	msvc/msvc-2010/GL/glext.h	2704;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	msvc/msvc-2010/GL/glext.h	2497;"	d
GL_DEBUG_TYPE_ERROR	msvc/msvc-2010/GL/glext.h	2703;"	d
GL_DEBUG_TYPE_ERROR_ARB	msvc/msvc-2010/GL/glext.h	2496;"	d
GL_DEBUG_TYPE_MARKER	msvc/msvc-2010/GL/glext.h	2709;"	d
GL_DEBUG_TYPE_OTHER	msvc/msvc-2010/GL/glext.h	2708;"	d
GL_DEBUG_TYPE_OTHER_ARB	msvc/msvc-2010/GL/glext.h	2501;"	d
GL_DEBUG_TYPE_PERFORMANCE	msvc/msvc-2010/GL/glext.h	2707;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	msvc/msvc-2010/GL/glext.h	2500;"	d
GL_DEBUG_TYPE_POP_GROUP	msvc/msvc-2010/GL/glext.h	2711;"	d
GL_DEBUG_TYPE_PORTABILITY	msvc/msvc-2010/GL/glext.h	2706;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	msvc/msvc-2010/GL/glext.h	2499;"	d
GL_DEBUG_TYPE_PUSH_GROUP	msvc/msvc-2010/GL/glext.h	2710;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	msvc/msvc-2010/GL/glext.h	2705;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	msvc/msvc-2010/GL/glext.h	2498;"	d
GL_DECAL	ps3/rgl/include/export/GLES/gl.h	365;"	d
GL_DECODE_EXT	msvc/msvc-2010/GL/glext.h	5932;"	d
GL_DECR	ps3/rgl/include/export/GLES/gl.h	348;"	d
GL_DECR_WRAP	msvc/msvc-2010/GL/glext.h	288;"	d
GL_DECR_WRAP	ps3/rgl/include/export/GLES/glext.h	339;"	d
GL_DECR_WRAP_EXT	msvc/msvc-2010/GL/glext.h	3961;"	d
GL_DEFORMATIONS_MASK_SGIX	msvc/msvc-2010/GL/glext.h	3487;"	d
GL_DELETE_STATUS	msvc/msvc-2010/GL/glext.h	431;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4338;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4339;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4831;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	msvc/msvc-2010/GL/glext.h	4832;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	msvc/msvc-2010/GL/glext.h	4833;"	d
GL_DEPTH24_STENCIL8	msvc/msvc-2010/GL/glext.h	1947;"	d
GL_DEPTH24_STENCIL8_EXT	msvc/msvc-2010/GL/glext.h	5130;"	d
GL_DEPTH24_STENCIL8_SCE	ps3/rgl/include/export/GLES/glext.h	195;"	d
GL_DEPTH32F_STENCIL8	msvc/msvc-2010/GL/glext.h	1924;"	d
GL_DEPTH32F_STENCIL8_NV	msvc/msvc-2010/GL/glext.h	5328;"	d
GL_DEPTH_ATTACHMENT	msvc/msvc-2010/GL/glext.h	1990;"	d
GL_DEPTH_ATTACHMENT_EXT	msvc/msvc-2010/GL/glext.h	5105;"	d
GL_DEPTH_ATTACHMENT_OES	ps3/rgl/include/export/GLES/glext.h	304;"	d
GL_DEPTH_BOUNDS_EXT	msvc/msvc-2010/GL/glext.h	5019;"	d
GL_DEPTH_BOUNDS_TEST_EXT	msvc/msvc-2010/GL/glext.h	5018;"	d
GL_DEPTH_BUFFER_BIT	ps3/rgl/include/export/GLES/gl.h	86;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	msvc/msvc-2010/GL/glext.h	5330;"	d
GL_DEPTH_CLAMP	msvc/msvc-2010/GL/glext.h	2153;"	d
GL_DEPTH_CLAMP_FAR_AMD	msvc/msvc-2010/GL/glext.h	5927;"	d
GL_DEPTH_CLAMP_NEAR_AMD	msvc/msvc-2010/GL/glext.h	5926;"	d
GL_DEPTH_CLAMP_NV	msvc/msvc-2010/GL/glext.h	4806;"	d
GL_DEPTH_CLAMP_NV	ps3/rgl/include/export/GLES/glext.h	342;"	d
GL_DEPTH_COMPONENT	ps3/rgl/include/export/GLES/glext.h	197;"	d
GL_DEPTH_COMPONENT16	msvc/msvc-2010/GL/glext.h	281;"	d
GL_DEPTH_COMPONENT16	ps3/rgl/include/export/GLES/glext.h	198;"	d
GL_DEPTH_COMPONENT16_ARB	msvc/msvc-2010/GL/glext.h	1623;"	d
GL_DEPTH_COMPONENT16_SGIX	msvc/msvc-2010/GL/glext.h	3500;"	d
GL_DEPTH_COMPONENT24	msvc/msvc-2010/GL/glext.h	282;"	d
GL_DEPTH_COMPONENT24	ps3/rgl/include/export/GLES/glext.h	199;"	d
GL_DEPTH_COMPONENT24_ARB	msvc/msvc-2010/GL/glext.h	1624;"	d
GL_DEPTH_COMPONENT24_SGIX	msvc/msvc-2010/GL/glext.h	3501;"	d
GL_DEPTH_COMPONENT32	msvc/msvc-2010/GL/glext.h	283;"	d
GL_DEPTH_COMPONENT32	ps3/rgl/include/export/GLES/glext.h	200;"	d
GL_DEPTH_COMPONENT32F	msvc/msvc-2010/GL/glext.h	1923;"	d
GL_DEPTH_COMPONENT32F_NV	msvc/msvc-2010/GL/glext.h	5327;"	d
GL_DEPTH_COMPONENT32_ARB	msvc/msvc-2010/GL/glext.h	1625;"	d
GL_DEPTH_COMPONENT32_SGIX	msvc/msvc-2010/GL/glext.h	3502;"	d
GL_DEPTH_COMPONENTS	msvc/msvc-2010/GL/glext.h	2860;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	msvc/msvc-2010/GL/glext.h	4178;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	msvc/msvc-2010/GL/glext.h	4179;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	msvc/msvc-2010/GL/glext.h	4177;"	d
GL_DEPTH_RENDERABLE	msvc/msvc-2010/GL/glext.h	2863;"	d
GL_DEPTH_STENCIL	msvc/msvc-2010/GL/glext.h	1945;"	d
GL_DEPTH_STENCIL_ATTACHMENT	msvc/msvc-2010/GL/glext.h	1943;"	d
GL_DEPTH_STENCIL_EXT	msvc/msvc-2010/GL/glext.h	5128;"	d
GL_DEPTH_STENCIL_NV	msvc/msvc-2010/GL/glext.h	4297;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	msvc/msvc-2010/GL/glext.h	3026;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	msvc/msvc-2010/GL/glext.h	4516;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	msvc/msvc-2010/GL/glext.h	4515;"	d
GL_DEPTH_TEST	ps3/rgl/include/export/GLES/gl.h	169;"	d
GL_DEPTH_TEXTURE_MODE	msvc/msvc-2010/GL/glext.h	313;"	d
GL_DEPTH_TEXTURE_MODE_ARB	msvc/msvc-2010/GL/glext.h	1627;"	d
GL_DEPTH_TEXTURE_MODE_ARB	ps3/rgl/include/export/GLES/glext.h	142;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	msvc/msvc-2010/GL/glext.h	3248;"	d
GL_DETAIL_TEXTURE_2D_SGIS	msvc/msvc-2010/GL/glext.h	3247;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	msvc/msvc-2010/GL/glext.h	3254;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	msvc/msvc-2010/GL/glext.h	3252;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	msvc/msvc-2010/GL/glext.h	3253;"	d
GL_DIFFUSE	ps3/rgl/include/export/GLES/gl.h	256;"	d
GL_DISCARD_ATI	msvc/msvc-2010/GL/glext.h	4653;"	d
GL_DISCARD_NV	msvc/msvc-2010/GL/glext.h	4053;"	d
GL_DISCRETE_AMD	msvc/msvc-2010/GL/glext.h	5555;"	d
GL_DISPATCH_INDIRECT_BUFFER	msvc/msvc-2010/GL/glext.h	2758;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2759;"	d
GL_DISPLAY_LIST	msvc/msvc-2010/GL/glext.h	2721;"	d
GL_DISTANCE_ATTENUATION_EXT	msvc/msvc-2010/GL/glext.h	3448;"	d
GL_DISTANCE_ATTENUATION_SGIS	msvc/msvc-2010/GL/glext.h	3455;"	d
GL_DITHER	ps3/rgl/include/export/GLES/gl.h	167;"	d
GL_DIVIDE_SCE	ps3/rgl/include/export/GLES/glext.h	239;"	d
GL_DONT_CARE	ps3/rgl/include/export/GLES/gl.h	239;"	d
GL_DOT2_ADD_ATI	msvc/msvc-2010/GL/glext.h	4606;"	d
GL_DOT3_ATI	msvc/msvc-2010/GL/glext.h	4600;"	d
GL_DOT3_RGB	msvc/msvc-2010/GL/glext.h	271;"	d
GL_DOT3_RGBA	msvc/msvc-2010/GL/glext.h	272;"	d
GL_DOT3_RGBA_ARB	msvc/msvc-2010/GL/glext.h	1615;"	d
GL_DOT3_RGBA_EXT	msvc/msvc-2010/GL/glext.h	4251;"	d
GL_DOT3_RGB_ARB	msvc/msvc-2010/GL/glext.h	1614;"	d
GL_DOT3_RGB_EXT	msvc/msvc-2010/GL/glext.h	4250;"	d
GL_DOT4_ATI	msvc/msvc-2010/GL/glext.h	4601;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	msvc/msvc-2010/GL/glext.h	4836;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	msvc/msvc-2010/GL/glext.h	4346;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	msvc/msvc-2010/GL/glext.h	4341;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	msvc/msvc-2010/GL/glext.h	4344;"	d
GL_DOT_PRODUCT_NV	msvc/msvc-2010/GL/glext.h	4340;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	msvc/msvc-2010/GL/glext.h	4834;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	msvc/msvc-2010/GL/glext.h	4345;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	msvc/msvc-2010/GL/glext.h	4835;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4342;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	msvc/msvc-2010/GL/glext.h	4392;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	msvc/msvc-2010/GL/glext.h	4343;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4318;"	d
GL_DOUBLE_MAT2	msvc/msvc-2010/GL/glext.h	2322;"	d
GL_DOUBLE_MAT2_EXT	msvc/msvc-2010/GL/glext.h	5812;"	d
GL_DOUBLE_MAT2x3	msvc/msvc-2010/GL/glext.h	2325;"	d
GL_DOUBLE_MAT2x3_EXT	msvc/msvc-2010/GL/glext.h	5815;"	d
GL_DOUBLE_MAT2x4	msvc/msvc-2010/GL/glext.h	2326;"	d
GL_DOUBLE_MAT2x4_EXT	msvc/msvc-2010/GL/glext.h	5816;"	d
GL_DOUBLE_MAT3	msvc/msvc-2010/GL/glext.h	2323;"	d
GL_DOUBLE_MAT3_EXT	msvc/msvc-2010/GL/glext.h	5813;"	d
GL_DOUBLE_MAT3x2	msvc/msvc-2010/GL/glext.h	2327;"	d
GL_DOUBLE_MAT3x2_EXT	msvc/msvc-2010/GL/glext.h	5817;"	d
GL_DOUBLE_MAT3x4	msvc/msvc-2010/GL/glext.h	2328;"	d
GL_DOUBLE_MAT3x4_EXT	msvc/msvc-2010/GL/glext.h	5818;"	d
GL_DOUBLE_MAT4	msvc/msvc-2010/GL/glext.h	2324;"	d
GL_DOUBLE_MAT4_EXT	msvc/msvc-2010/GL/glext.h	5814;"	d
GL_DOUBLE_MAT4x2	msvc/msvc-2010/GL/glext.h	2329;"	d
GL_DOUBLE_MAT4x2_EXT	msvc/msvc-2010/GL/glext.h	5819;"	d
GL_DOUBLE_MAT4x3	msvc/msvc-2010/GL/glext.h	2330;"	d
GL_DOUBLE_MAT4x3_EXT	msvc/msvc-2010/GL/glext.h	5820;"	d
GL_DOUBLE_VEC2	msvc/msvc-2010/GL/glext.h	2319;"	d
GL_DOUBLE_VEC2_EXT	msvc/msvc-2010/GL/glext.h	5809;"	d
GL_DOUBLE_VEC3	msvc/msvc-2010/GL/glext.h	2320;"	d
GL_DOUBLE_VEC3_EXT	msvc/msvc-2010/GL/glext.h	5810;"	d
GL_DOUBLE_VEC4	msvc/msvc-2010/GL/glext.h	2321;"	d
GL_DOUBLE_VEC4_EXT	msvc/msvc-2010/GL/glext.h	5811;"	d
GL_DRAWABLE_BIT_SCE	ps3/rgl/include/export/GLES/glext.h	203;"	d
GL_DRAW_BUFFER0	msvc/msvc-2010/GL/glext.h	384;"	d
GL_DRAW_BUFFER0_ARB	msvc/msvc-2010/GL/glext.h	1855;"	d
GL_DRAW_BUFFER0_ATI	msvc/msvc-2010/GL/glext.h	4903;"	d
GL_DRAW_BUFFER0_ATI	ps3/rgl/include/export/GLES/glext.h	172;"	d
GL_DRAW_BUFFER1	msvc/msvc-2010/GL/glext.h	385;"	d
GL_DRAW_BUFFER10	msvc/msvc-2010/GL/glext.h	394;"	d
GL_DRAW_BUFFER10_ARB	msvc/msvc-2010/GL/glext.h	1865;"	d
GL_DRAW_BUFFER10_ATI	msvc/msvc-2010/GL/glext.h	4913;"	d
GL_DRAW_BUFFER10_ATI	ps3/rgl/include/export/GLES/glext.h	182;"	d
GL_DRAW_BUFFER11	msvc/msvc-2010/GL/glext.h	395;"	d
GL_DRAW_BUFFER11_ARB	msvc/msvc-2010/GL/glext.h	1866;"	d
GL_DRAW_BUFFER11_ATI	msvc/msvc-2010/GL/glext.h	4914;"	d
GL_DRAW_BUFFER11_ATI	ps3/rgl/include/export/GLES/glext.h	183;"	d
GL_DRAW_BUFFER12	msvc/msvc-2010/GL/glext.h	396;"	d
GL_DRAW_BUFFER12_ARB	msvc/msvc-2010/GL/glext.h	1867;"	d
GL_DRAW_BUFFER12_ATI	msvc/msvc-2010/GL/glext.h	4915;"	d
GL_DRAW_BUFFER12_ATI	ps3/rgl/include/export/GLES/glext.h	184;"	d
GL_DRAW_BUFFER13	msvc/msvc-2010/GL/glext.h	397;"	d
GL_DRAW_BUFFER13_ARB	msvc/msvc-2010/GL/glext.h	1868;"	d
GL_DRAW_BUFFER13_ATI	msvc/msvc-2010/GL/glext.h	4916;"	d
GL_DRAW_BUFFER13_ATI	ps3/rgl/include/export/GLES/glext.h	185;"	d
GL_DRAW_BUFFER14	msvc/msvc-2010/GL/glext.h	398;"	d
GL_DRAW_BUFFER14_ARB	msvc/msvc-2010/GL/glext.h	1869;"	d
GL_DRAW_BUFFER14_ATI	msvc/msvc-2010/GL/glext.h	4917;"	d
GL_DRAW_BUFFER14_ATI	ps3/rgl/include/export/GLES/glext.h	186;"	d
GL_DRAW_BUFFER15	msvc/msvc-2010/GL/glext.h	399;"	d
GL_DRAW_BUFFER15_ARB	msvc/msvc-2010/GL/glext.h	1870;"	d
GL_DRAW_BUFFER15_ATI	msvc/msvc-2010/GL/glext.h	4918;"	d
GL_DRAW_BUFFER15_ATI	ps3/rgl/include/export/GLES/glext.h	187;"	d
GL_DRAW_BUFFER1_ARB	msvc/msvc-2010/GL/glext.h	1856;"	d
GL_DRAW_BUFFER1_ATI	msvc/msvc-2010/GL/glext.h	4904;"	d
GL_DRAW_BUFFER1_ATI	ps3/rgl/include/export/GLES/glext.h	173;"	d
GL_DRAW_BUFFER2	msvc/msvc-2010/GL/glext.h	386;"	d
GL_DRAW_BUFFER2_ARB	msvc/msvc-2010/GL/glext.h	1857;"	d
GL_DRAW_BUFFER2_ATI	msvc/msvc-2010/GL/glext.h	4905;"	d
GL_DRAW_BUFFER2_ATI	ps3/rgl/include/export/GLES/glext.h	174;"	d
GL_DRAW_BUFFER3	msvc/msvc-2010/GL/glext.h	387;"	d
GL_DRAW_BUFFER3_ARB	msvc/msvc-2010/GL/glext.h	1858;"	d
GL_DRAW_BUFFER3_ATI	msvc/msvc-2010/GL/glext.h	4906;"	d
GL_DRAW_BUFFER3_ATI	ps3/rgl/include/export/GLES/glext.h	175;"	d
GL_DRAW_BUFFER4	msvc/msvc-2010/GL/glext.h	388;"	d
GL_DRAW_BUFFER4_ARB	msvc/msvc-2010/GL/glext.h	1859;"	d
GL_DRAW_BUFFER4_ATI	msvc/msvc-2010/GL/glext.h	4907;"	d
GL_DRAW_BUFFER4_ATI	ps3/rgl/include/export/GLES/glext.h	176;"	d
GL_DRAW_BUFFER5	msvc/msvc-2010/GL/glext.h	389;"	d
GL_DRAW_BUFFER5_ARB	msvc/msvc-2010/GL/glext.h	1860;"	d
GL_DRAW_BUFFER5_ATI	msvc/msvc-2010/GL/glext.h	4908;"	d
GL_DRAW_BUFFER5_ATI	ps3/rgl/include/export/GLES/glext.h	177;"	d
GL_DRAW_BUFFER6	msvc/msvc-2010/GL/glext.h	390;"	d
GL_DRAW_BUFFER6_ARB	msvc/msvc-2010/GL/glext.h	1861;"	d
GL_DRAW_BUFFER6_ATI	msvc/msvc-2010/GL/glext.h	4909;"	d
GL_DRAW_BUFFER6_ATI	ps3/rgl/include/export/GLES/glext.h	178;"	d
GL_DRAW_BUFFER7	msvc/msvc-2010/GL/glext.h	391;"	d
GL_DRAW_BUFFER7_ARB	msvc/msvc-2010/GL/glext.h	1862;"	d
GL_DRAW_BUFFER7_ATI	msvc/msvc-2010/GL/glext.h	4910;"	d
GL_DRAW_BUFFER7_ATI	ps3/rgl/include/export/GLES/glext.h	179;"	d
GL_DRAW_BUFFER8	msvc/msvc-2010/GL/glext.h	392;"	d
GL_DRAW_BUFFER8_ARB	msvc/msvc-2010/GL/glext.h	1863;"	d
GL_DRAW_BUFFER8_ATI	msvc/msvc-2010/GL/glext.h	4911;"	d
GL_DRAW_BUFFER8_ATI	ps3/rgl/include/export/GLES/glext.h	180;"	d
GL_DRAW_BUFFER9	msvc/msvc-2010/GL/glext.h	393;"	d
GL_DRAW_BUFFER9_ARB	msvc/msvc-2010/GL/glext.h	1864;"	d
GL_DRAW_BUFFER9_ATI	msvc/msvc-2010/GL/glext.h	4912;"	d
GL_DRAW_BUFFER9_ATI	ps3/rgl/include/export/GLES/glext.h	181;"	d
GL_DRAW_DEPTH_SCE	ps3/rgl/include/export/GLES/glext.h	188;"	d
GL_DRAW_FRAMEBUFFER	msvc/msvc-2010/GL/glext.h	1959;"	d
GL_DRAW_FRAMEBUFFER_BINDING	msvc/msvc-2010/GL/glext.h	1956;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5161;"	d
GL_DRAW_FRAMEBUFFER_EXT	msvc/msvc-2010/GL/glext.h	5160;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5732;"	d
GL_DRAW_INDIRECT_BUFFER	msvc/msvc-2010/GL/glext.h	2304;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2305;"	d
GL_DRAW_INDIRECT_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5733;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	msvc/msvc-2010/GL/glext.h	5731;"	d
GL_DRAW_PIXELS_APPLE	msvc/msvc-2010/GL/glext.h	4868;"	d
GL_DRAW_STENCIL_SCE	ps3/rgl/include/export/GLES/glext.h	189;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	msvc/msvc-2010/GL/glext.h	4368;"	d
GL_DSDT8_MAG8_NV	msvc/msvc-2010/GL/glext.h	4367;"	d
GL_DSDT8_NV	msvc/msvc-2010/GL/glext.h	4366;"	d
GL_DSDT_MAG_INTENSITY_NV	msvc/msvc-2010/GL/glext.h	4322;"	d
GL_DSDT_MAG_NV	msvc/msvc-2010/GL/glext.h	4349;"	d
GL_DSDT_MAG_VIB_NV	msvc/msvc-2010/GL/glext.h	4350;"	d
GL_DSDT_NV	msvc/msvc-2010/GL/glext.h	4348;"	d
GL_DST_ALPHA	ps3/rgl/include/export/GLES/gl.h	120;"	d
GL_DST_COLOR	ps3/rgl/include/export/GLES/gl.h	126;"	d
GL_DS_BIAS_NV	msvc/msvc-2010/GL/glext.h	4379;"	d
GL_DS_SCALE_NV	msvc/msvc-2010/GL/glext.h	4373;"	d
GL_DT_BIAS_NV	msvc/msvc-2010/GL/glext.h	4380;"	d
GL_DT_SCALE_NV	msvc/msvc-2010/GL/glext.h	4374;"	d
GL_DU8DV8_ATI	msvc/msvc-2010/GL/glext.h	4525;"	d
GL_DUAL_ALPHA12_SGIS	msvc/msvc-2010/GL/glext.h	3408;"	d
GL_DUAL_ALPHA16_SGIS	msvc/msvc-2010/GL/glext.h	3409;"	d
GL_DUAL_ALPHA4_SGIS	msvc/msvc-2010/GL/glext.h	3406;"	d
GL_DUAL_ALPHA8_SGIS	msvc/msvc-2010/GL/glext.h	3407;"	d
GL_DUAL_INTENSITY12_SGIS	msvc/msvc-2010/GL/glext.h	3416;"	d
GL_DUAL_INTENSITY16_SGIS	msvc/msvc-2010/GL/glext.h	3417;"	d
GL_DUAL_INTENSITY4_SGIS	msvc/msvc-2010/GL/glext.h	3414;"	d
GL_DUAL_INTENSITY8_SGIS	msvc/msvc-2010/GL/glext.h	3415;"	d
GL_DUAL_LUMINANCE12_SGIS	msvc/msvc-2010/GL/glext.h	3412;"	d
GL_DUAL_LUMINANCE16_SGIS	msvc/msvc-2010/GL/glext.h	3413;"	d
GL_DUAL_LUMINANCE4_SGIS	msvc/msvc-2010/GL/glext.h	3410;"	d
GL_DUAL_LUMINANCE8_SGIS	msvc/msvc-2010/GL/glext.h	3411;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	msvc/msvc-2010/GL/glext.h	3418;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	msvc/msvc-2010/GL/glext.h	3419;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	msvc/msvc-2010/GL/glext.h	3426;"	d
GL_DUDV_ATI	msvc/msvc-2010/GL/glext.h	4524;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6066;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6067;"	d
GL_DYNAMIC_ATI	msvc/msvc-2010/GL/glext.h	4651;"	d
GL_DYNAMIC_COPY	msvc/msvc-2010/GL/glext.h	343;"	d
GL_DYNAMIC_COPY	ps3/rgl/include/export/GLES/glext.h	221;"	d
GL_DYNAMIC_COPY_ARB	msvc/msvc-2010/GL/glext.h	1774;"	d
GL_DYNAMIC_DRAW	msvc/msvc-2010/GL/glext.h	341;"	d
GL_DYNAMIC_DRAW	ps3/rgl/include/export/GLES/glext.h	219;"	d
GL_DYNAMIC_DRAW_ARB	msvc/msvc-2010/GL/glext.h	1772;"	d
GL_DYNAMIC_READ	msvc/msvc-2010/GL/glext.h	342;"	d
GL_DYNAMIC_READ	ps3/rgl/include/export/GLES/glext.h	220;"	d
GL_DYNAMIC_READ_ARB	msvc/msvc-2010/GL/glext.h	1773;"	d
GL_EDGEFLAG_BIT_PGI	msvc/msvc-2010/GL/glext.h	3558;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5717;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	351;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1755;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3328;"	d
GL_EDGE_FLAG_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3308;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5727;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4147;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4155;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3334;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3327;"	d
GL_EIGHTH_BIT_ATI	msvc/msvc-2010/GL/glext.h	4630;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5720;"	d
GL_ELEMENT_ARRAY_APPLE	msvc/msvc-2010/GL/glext.h	4862;"	d
GL_ELEMENT_ARRAY_ATI	msvc/msvc-2010/GL/glext.h	4787;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2589;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5793;"	d
GL_ELEMENT_ARRAY_BUFFER	msvc/msvc-2010/GL/glext.h	325;"	d
GL_ELEMENT_ARRAY_BUFFER	ps3/rgl/include/export/GLES/glext.h	210;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	1747;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	327;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1749;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5730;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	msvc/msvc-2010/GL/glext.h	4864;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	msvc/msvc-2010/GL/glext.h	4789;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	msvc/msvc-2010/GL/glext.h	4863;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	msvc/msvc-2010/GL/glext.h	4788;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	msvc/msvc-2010/GL/glext.h	5710;"	d
GL_EMBOSS_CONSTANT_NV	msvc/msvc-2010/GL/glext.h	4106;"	d
GL_EMBOSS_LIGHT_NV	msvc/msvc-2010/GL/glext.h	4105;"	d
GL_EMBOSS_MAP_NV	msvc/msvc-2010/GL/glext.h	4107;"	d
GL_EMISSION	ps3/rgl/include/export/GLES/gl.h	296;"	d
GL_EQUAL	ps3/rgl/include/export/GLES/gl.h	106;"	d
GL_EQUIV	ps3/rgl/include/export/GLES/gl.h	284;"	d
GL_EVAL_2D_NV	msvc/msvc-2010/GL/glext.h	4270;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	msvc/msvc-2010/GL/glext.h	4275;"	d
GL_EVAL_TRIANGULAR_2D_NV	msvc/msvc-2010/GL/glext.h	4271;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	msvc/msvc-2010/GL/glext.h	4276;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	msvc/msvc-2010/GL/glext.h	4286;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	msvc/msvc-2010/GL/glext.h	4287;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	msvc/msvc-2010/GL/glext.h	4288;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	msvc/msvc-2010/GL/glext.h	4289;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	msvc/msvc-2010/GL/glext.h	4290;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	msvc/msvc-2010/GL/glext.h	4291;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	msvc/msvc-2010/GL/glext.h	4277;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	msvc/msvc-2010/GL/glext.h	4278;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	msvc/msvc-2010/GL/glext.h	4279;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	msvc/msvc-2010/GL/glext.h	4280;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	msvc/msvc-2010/GL/glext.h	4281;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	msvc/msvc-2010/GL/glext.h	4282;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	msvc/msvc-2010/GL/glext.h	4283;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	msvc/msvc-2010/GL/glext.h	4284;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	msvc/msvc-2010/GL/glext.h	4285;"	d
GL_EXP	ps3/rgl/include/export/GLES/gl.h	205;"	d
GL_EXP2	ps3/rgl/include/export/GLES/gl.h	206;"	d
GL_EXPAND_NEGATE_NV	msvc/msvc-2010/GL/glext.h	4059;"	d
GL_EXPAND_NORMAL_NV	msvc/msvc-2010/GL/glext.h	4058;"	d
GL_EXTENSIONS	ps3/rgl/include/export/GLES/gl.h	355;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	6101;"	d
GL_EXT_422_pixels	msvc/msvc-2010/GL/glext.h	9868;"	d
GL_EXT_abgr	msvc/msvc-2010/GL/glext.h	8796;"	d
GL_EXT_bgra	msvc/msvc-2010/GL/glext.h	9482;"	d
GL_EXT_bindable_uniform	msvc/msvc-2010/GL/glext.h	11458;"	d
GL_EXT_blend_color	msvc/msvc-2010/GL/glext.h	8800;"	d
GL_EXT_blend_equation_separate	msvc/msvc-2010/GL/glext.h	11038;"	d
GL_EXT_blend_func_separate	msvc/msvc-2010/GL/glext.h	9840;"	d
GL_EXT_blend_logic_op	msvc/msvc-2010/GL/glext.h	9112;"	d
GL_EXT_blend_minmax	msvc/msvc-2010/GL/glext.h	9100;"	d
GL_EXT_blend_subtract	msvc/msvc-2010/GL/glext.h	9108;"	d
GL_EXT_clip_volume_hint	msvc/msvc-2010/GL/glext.h	9314;"	d
GL_EXT_cmyka	msvc/msvc-2010/GL/glext.h	8988;"	d
GL_EXT_color_subtable	msvc/msvc-2010/GL/glext.h	9278;"	d
GL_EXT_compiled_vertex_array	msvc/msvc-2010/GL/glext.h	9376;"	d
GL_EXT_convolution	msvc/msvc-2010/GL/glext.h	8892;"	d
GL_EXT_coordinate_frame	msvc/msvc-2010/GL/glext.h	9638;"	d
GL_EXT_copy_texture	msvc/msvc-2010/GL/glext.h	8850;"	d
GL_EXT_cull_vertex	msvc/msvc-2010/GL/glext.h	9386;"	d
GL_EXT_depth_bounds_test	msvc/msvc-2010/GL/glext.h	11026;"	d
GL_EXT_direct_state_access	msvc/msvc-2010/GL/glext.h	11544;"	d
GL_EXT_draw_buffers2	msvc/msvc-2010/GL/glext.h	11410;"	d
GL_EXT_draw_instanced	msvc/msvc-2010/GL/glext.h	11328;"	d
GL_EXT_draw_range_elements	msvc/msvc-2010/GL/glext.h	9450;"	d
GL_EXT_fog_coord	msvc/msvc-2010/GL/glext.h	9618;"	d
GL_EXT_framebuffer_blit	msvc/msvc-2010/GL/glext.h	11138;"	d
GL_EXT_framebuffer_multisample	msvc/msvc-2010/GL/glext.h	11146;"	d
GL_EXT_framebuffer_multisample_blit_scaled	msvc/msvc-2010/GL/glext.h	12558;"	d
GL_EXT_framebuffer_object	msvc/msvc-2010/GL/glext.h	11074;"	d
GL_EXT_framebuffer_sRGB	msvc/msvc-2010/GL/glext.h	11390;"	d
GL_EXT_geometry_shader4	msvc/msvc-2010/GL/glext.h	11240;"	d
GL_EXT_gpu_program_parameters	msvc/msvc-2010/GL/glext.h	11168;"	d
GL_EXT_gpu_shader4	msvc/msvc-2010/GL/glext.h	11300;"	d
GL_EXT_histogram	msvc/msvc-2010/GL/glext.h	8866;"	d
GL_EXT_index_array_formats	msvc/msvc-2010/GL/glext.h	9372;"	d
GL_EXT_index_func	msvc/msvc-2010/GL/glext.h	9364;"	d
GL_EXT_index_material	msvc/msvc-2010/GL/glext.h	9356;"	d
GL_EXT_index_texture	msvc/msvc-2010/GL/glext.h	9352;"	d
GL_EXT_light_texture	msvc/msvc-2010/GL/glext.h	9466;"	d
GL_EXT_misc_attribute	msvc/msvc-2010/GL/glext.h	9076;"	d
GL_EXT_multi_draw_arrays	msvc/msvc-2010/GL/glext.h	9608;"	d
GL_EXT_multisample	msvc/msvc-2010/GL/glext.h	10096;"	d
GL_EXT_packed_depth_stencil	msvc/msvc-2010/GL/glext.h	11122;"	d
GL_EXT_packed_float	msvc/msvc-2010/GL/glext.h	11338;"	d
GL_EXT_packed_pixels	msvc/msvc-2010/GL/glext.h	9030;"	d
GL_EXT_paletted_texture	msvc/msvc-2010/GL/glext.h	9300;"	d
GL_EXT_pixel_buffer_object	msvc/msvc-2010/GL/glext.h	11054;"	d
GL_EXT_pixel_transform	msvc/msvc-2010/GL/glext.h	9530;"	d
GL_EXT_pixel_transform_color_table	msvc/msvc-2010/GL/glext.h	9548;"	d
GL_EXT_point_parameters	msvc/msvc-2010/GL/glext.h	9146;"	d
GL_EXT_polygon_offset	msvc/msvc-2010/GL/glext.h	8808;"	d
GL_EXT_provoking_vertex	msvc/msvc-2010/GL/glext.h	12048;"	d
GL_EXT_rescale_normal	msvc/msvc-2010/GL/glext.h	9048;"	d
GL_EXT_secondary_color	msvc/msvc-2010/GL/glext.h	9560;"	d
GL_EXT_separate_shader_objects	msvc/msvc-2010/GL/glext.h	12170;"	d
GL_EXT_separate_specular_color	msvc/msvc-2010/GL/glext.h	9556;"	d
GL_EXT_shader_image_load_store	msvc/msvc-2010/GL/glext.h	12270;"	d
GL_EXT_shadow_funcs	msvc/msvc-2010/GL/glext.h	10726;"	d
GL_EXT_shared_texture_palette	msvc/msvc-2010/GL/glext.h	9552;"	d
GL_EXT_stencil_clear_tag	msvc/msvc-2010/GL/glext.h	11126;"	d
GL_EXT_stencil_two_side	msvc/msvc-2010/GL/glext.h	10730;"	d
GL_EXT_stencil_wrap	msvc/msvc-2010/GL/glext.h	9864;"	d
GL_EXT_subtexture	msvc/msvc-2010/GL/glext.h	8840;"	d
GL_EXT_texture	msvc/msvc-2010/GL/glext.h	8816;"	d
GL_EXT_texture3D	msvc/msvc-2010/GL/glext.h	8820;"	d
GL_EXT_texture_array	msvc/msvc-2010/GL/glext.h	11342;"	d
GL_EXT_texture_buffer_object	msvc/msvc-2010/GL/glext.h	11346;"	d
GL_EXT_texture_compression_latc	msvc/msvc-2010/GL/glext.h	11354;"	d
GL_EXT_texture_compression_rgtc	msvc/msvc-2010/GL/glext.h	11358;"	d
GL_EXT_texture_env_add	msvc/msvc-2010/GL/glext.h	9880;"	d
GL_EXT_texture_env_combine	msvc/msvc-2010/GL/glext.h	9688;"	d
GL_EXT_texture_env_dot3	msvc/msvc-2010/GL/glext.h	10138;"	d
GL_EXT_texture_filter_anisotropic	msvc/msvc-2010/GL/glext.h	9888;"	d
GL_EXT_texture_integer	msvc/msvc-2010/GL/glext.h	11470;"	d
GL_EXT_texture_lod_bias	msvc/msvc-2010/GL/glext.h	9884;"	d
GL_EXT_texture_mirror_clamp	msvc/msvc-2010/GL/glext.h	11034;"	d
GL_EXT_texture_object	msvc/msvc-2010/GL/glext.h	8992;"	d
GL_EXT_texture_perturb_normal	msvc/msvc-2010/GL/glext.h	9600;"	d
GL_EXT_texture_sRGB	msvc/msvc-2010/GL/glext.h	11134;"	d
GL_EXT_texture_sRGB_decode	msvc/msvc-2010/GL/glext.h	12506;"	d
GL_EXT_texture_shared_exponent	msvc/msvc-2010/GL/glext.h	11362;"	d
GL_EXT_texture_snorm	msvc/msvc-2010/GL/glext.h	12056;"	d
GL_EXT_texture_swizzle	msvc/msvc-2010/GL/glext.h	11966;"	d
GL_EXT_timer_query	msvc/msvc-2010/GL/glext.h	11158;"	d
GL_EXT_transform_feedback	msvc/msvc-2010/GL/glext.h	11524;"	d
GL_EXT_vertex_array	msvc/msvc-2010/GL/glext.h	9052;"	d
GL_EXT_vertex_array_bgra	msvc/msvc-2010/GL/glext.h	11962;"	d
GL_EXT_vertex_attrib_64bit	msvc/msvc-2010/GL/glext.h	12280;"	d
GL_EXT_vertex_shader	msvc/msvc-2010/GL/glext.h	10470;"	d
GL_EXT_vertex_weighting	msvc/msvc-2010/GL/glext.h	9892;"	d
GL_EXT_x11_sync_object	msvc/msvc-2010/GL/glext.h	12540;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	msvc/msvc-2010/GL/glext.h	4237;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	msvc/msvc-2010/GL/glext.h	4235;"	d
GL_EYE_LINEAR	ps3/rgl/include/export/GLES/glext.h	81;"	d
GL_EYE_LINE_SGIS	msvc/msvc-2010/GL/glext.h	4241;"	d
GL_EYE_PLANE	ps3/rgl/include/export/GLES/glext.h	91;"	d
GL_EYE_PLANE_ABSOLUTE_NV	msvc/msvc-2010/GL/glext.h	4100;"	d
GL_EYE_POINT_SGIS	msvc/msvc-2010/GL/glext.h	4239;"	d
GL_EYE_RADIAL_NV	msvc/msvc-2010/GL/glext.h	4099;"	d
GL_E_TIMES_F_NV	msvc/msvc-2010/GL/glext.h	4054;"	d
GL_FACTOR_MAX_AMD	msvc/msvc-2010/GL/glext.h	5943;"	d
GL_FACTOR_MIN_AMD	msvc/msvc-2010/GL/glext.h	5942;"	d
GL_FAILURE_NV	msvc/msvc-2010/GL/glext.h	5677;"	d
GL_FALSE	ps3/rgl/include/export/GLES/gl.h	91;"	d
GL_FASTEST	ps3/rgl/include/export/GLES/gl.h	240;"	d
GL_FENCE_APPLE	msvc/msvc-2010/GL/glext.h	4869;"	d
GL_FENCE_CONDITION_NV	msvc/msvc-2010/GL/glext.h	4262;"	d
GL_FENCE_CONDITION_NV	ps3/rgl/include/export/GLES/glext.h	254;"	d
GL_FENCE_STATUS_NV	msvc/msvc-2010/GL/glext.h	4261;"	d
GL_FENCE_STATUS_NV	ps3/rgl/include/export/GLES/glext.h	253;"	d
GL_FIELDS_NV	msvc/msvc-2010/GL/glext.h	5467;"	d
GL_FIELD_LOWER_NV	msvc/msvc-2010/GL/glext.h	5664;"	d
GL_FIELD_UPPER_NV	msvc/msvc-2010/GL/glext.h	5663;"	d
GL_FILE_NAME_NV	msvc/msvc-2010/GL/glext.h	5967;"	d
GL_FILL	ps3/rgl/include/export/GLES/glext.h	127;"	d
GL_FILTER	msvc/msvc-2010/GL/glext.h	2882;"	d
GL_FILTER4_SGIS	msvc/msvc-2010/GL/glext.h	3118;"	d
GL_FIRST_TO_REST_NV	msvc/msvc-2010/GL/glext.h	6026;"	d
GL_FIRST_VERTEX_CONVENTION	msvc/msvc-2010/GL/glext.h	2164;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	msvc/msvc-2010/GL/glext.h	5561;"	d
GL_FIXED	msvc/msvc-2010/GL/glext.h	2408;"	d
GL_FIXED	ps3/rgl/include/export/GLES/gl.h	272;"	d
GL_FIXED_11_11_10_SCE	ps3/rgl/include/export/GLES/glext.h	345;"	d
GL_FIXED_ONLY	msvc/msvc-2010/GL/glext.h	510;"	d
GL_FIXED_ONLY_ARB	msvc/msvc-2010/GL/glext.h	1885;"	d
GL_FLAT	ps3/rgl/include/export/GLES/gl.h	330;"	d
GL_FLOAT	ps3/rgl/include/export/GLES/gl.h	271;"	d
GL_FLOAT16_NV	msvc/msvc-2010/GL/glext.h	5859;"	d
GL_FLOAT16_VEC2_NV	msvc/msvc-2010/GL/glext.h	5860;"	d
GL_FLOAT16_VEC3_NV	msvc/msvc-2010/GL/glext.h	5861;"	d
GL_FLOAT16_VEC4_NV	msvc/msvc-2010/GL/glext.h	5862;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	msvc/msvc-2010/GL/glext.h	1925;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	msvc/msvc-2010/GL/glext.h	5329;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	msvc/msvc-2010/GL/glext.h	4961;"	d
GL_FLOAT_DEPTH_COMPONENT16_SCE	ps3/rgl/include/export/GLES/glext.h	193;"	d
GL_FLOAT_DEPTH_COMPONENT32_SCE	ps3/rgl/include/export/GLES/glext.h	194;"	d
GL_FLOAT_MAT2	msvc/msvc-2010/GL/glext.h	422;"	d
GL_FLOAT_MAT2_ARB	msvc/msvc-2010/GL/glext.h	1800;"	d
GL_FLOAT_MAT2x3	msvc/msvc-2010/GL/glext.h	462;"	d
GL_FLOAT_MAT2x4	msvc/msvc-2010/GL/glext.h	463;"	d
GL_FLOAT_MAT3	msvc/msvc-2010/GL/glext.h	423;"	d
GL_FLOAT_MAT3_ARB	msvc/msvc-2010/GL/glext.h	1801;"	d
GL_FLOAT_MAT3x2	msvc/msvc-2010/GL/glext.h	464;"	d
GL_FLOAT_MAT3x4	msvc/msvc-2010/GL/glext.h	465;"	d
GL_FLOAT_MAT4	msvc/msvc-2010/GL/glext.h	424;"	d
GL_FLOAT_MAT4_ARB	msvc/msvc-2010/GL/glext.h	1802;"	d
GL_FLOAT_MAT4x2	msvc/msvc-2010/GL/glext.h	466;"	d
GL_FLOAT_MAT4x3	msvc/msvc-2010/GL/glext.h	467;"	d
GL_FLOAT_R16_NV	msvc/msvc-2010/GL/glext.h	4952;"	d
GL_FLOAT_R32_NV	msvc/msvc-2010/GL/glext.h	4953;"	d
GL_FLOAT_RG16_NV	msvc/msvc-2010/GL/glext.h	4954;"	d
GL_FLOAT_RG32_NV	msvc/msvc-2010/GL/glext.h	4955;"	d
GL_FLOAT_RGB16_NV	msvc/msvc-2010/GL/glext.h	4956;"	d
GL_FLOAT_RGB32_NV	msvc/msvc-2010/GL/glext.h	4957;"	d
GL_FLOAT_RGBA16_NV	msvc/msvc-2010/GL/glext.h	4958;"	d
GL_FLOAT_RGBA32	ps3/rgl/include/RGL/private.h	30;"	d
GL_FLOAT_RGBA32_NV	msvc/msvc-2010/GL/glext.h	4959;"	d
GL_FLOAT_RGBA_MODE_NV	msvc/msvc-2010/GL/glext.h	4962;"	d
GL_FLOAT_RGBA_NV	msvc/msvc-2010/GL/glext.h	4951;"	d
GL_FLOAT_RGB_NV	msvc/msvc-2010/GL/glext.h	4950;"	d
GL_FLOAT_RG_NV	msvc/msvc-2010/GL/glext.h	4949;"	d
GL_FLOAT_R_NV	msvc/msvc-2010/GL/glext.h	4948;"	d
GL_FLOAT_VEC2	msvc/msvc-2010/GL/glext.h	412;"	d
GL_FLOAT_VEC2_ARB	msvc/msvc-2010/GL/glext.h	1790;"	d
GL_FLOAT_VEC3	msvc/msvc-2010/GL/glext.h	413;"	d
GL_FLOAT_VEC3_ARB	msvc/msvc-2010/GL/glext.h	1791;"	d
GL_FLOAT_VEC4	msvc/msvc-2010/GL/glext.h	414;"	d
GL_FLOAT_VEC4_ARB	msvc/msvc-2010/GL/glext.h	1792;"	d
GL_FOG	ps3/rgl/include/export/GLES/gl.h	161;"	d
GL_FOG_COLOR	ps3/rgl/include/export/GLES/gl.h	213;"	d
GL_FOG_COORD	msvc/msvc-2010/GL/glext.h	356;"	d
GL_FOG_COORDINATE	msvc/msvc-2010/GL/glext.h	298;"	d
GL_FOG_COORDINATE	ps3/rgl/include/export/GLES/glext.h	157;"	d
GL_FOG_COORDINATE_ARRAY	msvc/msvc-2010/GL/glext.h	304;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	353;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1757;"	d
GL_FOG_COORDINATE_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3842;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4148;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4156;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	msvc/msvc-2010/GL/glext.h	303;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3841;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	302;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3840;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	msvc/msvc-2010/GL/glext.h	301;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3839;"	d
GL_FOG_COORDINATE_EXT	msvc/msvc-2010/GL/glext.h	3836;"	d
GL_FOG_COORDINATE_SOURCE	msvc/msvc-2010/GL/glext.h	297;"	d
GL_FOG_COORDINATE_SOURCE	ps3/rgl/include/export/GLES/glext.h	156;"	d
GL_FOG_COORDINATE_SOURCE_EXT	msvc/msvc-2010/GL/glext.h	3835;"	d
GL_FOG_COORD_ARRAY	msvc/msvc-2010/GL/glext.h	361;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5719;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	362;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5729;"	d
GL_FOG_COORD_ARRAY_POINTER	msvc/msvc-2010/GL/glext.h	360;"	d
GL_FOG_COORD_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	359;"	d
GL_FOG_COORD_ARRAY_TYPE	msvc/msvc-2010/GL/glext.h	358;"	d
GL_FOG_COORD_SRC	msvc/msvc-2010/GL/glext.h	355;"	d
GL_FOG_DENSITY	ps3/rgl/include/export/GLES/gl.h	209;"	d
GL_FOG_DISTANCE_MODE_NV	msvc/msvc-2010/GL/glext.h	4098;"	d
GL_FOG_END	ps3/rgl/include/export/GLES/gl.h	211;"	d
GL_FOG_FUNC_POINTS_SGIS	msvc/msvc-2010/GL/glext.h	3507;"	d
GL_FOG_FUNC_SGIS	msvc/msvc-2010/GL/glext.h	3506;"	d
GL_FOG_HINT	ps3/rgl/include/export/GLES/gl.h	248;"	d
GL_FOG_MODE	ps3/rgl/include/export/GLES/gl.h	212;"	d
GL_FOG_OFFSET_SGIX	msvc/msvc-2010/GL/glext.h	3512;"	d
GL_FOG_OFFSET_VALUE_SGIX	msvc/msvc-2010/GL/glext.h	3513;"	d
GL_FOG_SCALE_SGIX	msvc/msvc-2010/GL/glext.h	3900;"	d
GL_FOG_SCALE_VALUE_SGIX	msvc/msvc-2010/GL/glext.h	3901;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	msvc/msvc-2010/GL/glext.h	3721;"	d
GL_FOG_START	ps3/rgl/include/export/GLES/gl.h	210;"	d
GL_FONT_ASCENDER_NV	msvc/msvc-2010/GL/glext.h	6090;"	d
GL_FONT_DESCENDER_NV	msvc/msvc-2010/GL/glext.h	6091;"	d
GL_FONT_HAS_KERNING_NV	msvc/msvc-2010/GL/glext.h	6097;"	d
GL_FONT_HEIGHT_NV	msvc/msvc-2010/GL/glext.h	6092;"	d
GL_FONT_H__	gfx/fonts/d3d_font.h	17;"	d
GL_FONT_H__	gfx/fonts/gl_font.h	17;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_NV	msvc/msvc-2010/GL/glext.h	6094;"	d
GL_FONT_MAX_ADVANCE_WIDTH_NV	msvc/msvc-2010/GL/glext.h	6093;"	d
GL_FONT_UNDERLINE_POSITION_NV	msvc/msvc-2010/GL/glext.h	6095;"	d
GL_FONT_UNDERLINE_THICKNESS_NV	msvc/msvc-2010/GL/glext.h	6096;"	d
GL_FONT_UNITS_PER_EM_NV	msvc/msvc-2010/GL/glext.h	6089;"	d
GL_FONT_X_MAX_BOUNDS_NV	msvc/msvc-2010/GL/glext.h	6087;"	d
GL_FONT_X_MIN_BOUNDS_NV	msvc/msvc-2010/GL/glext.h	6085;"	d
GL_FONT_Y_MAX_BOUNDS_NV	msvc/msvc-2010/GL/glext.h	6088;"	d
GL_FONT_Y_MIN_BOUNDS_NV	msvc/msvc-2010/GL/glext.h	6086;"	d
GL_FORCE_BLUE_TO_ONE_NV	msvc/msvc-2010/GL/glext.h	4839;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	msvc/msvc-2010/GL/glext.h	4502;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	msvc/msvc-2010/GL/glext.h	4501;"	d
GL_FRACTIONAL_EVEN	msvc/msvc-2010/GL/glext.h	2362;"	d
GL_FRACTIONAL_ODD	msvc/msvc-2010/GL/glext.h	2361;"	d
GL_FRAGMENT_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3727;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	msvc/msvc-2010/GL/glext.h	3680;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	msvc/msvc-2010/GL/glext.h	3681;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	msvc/msvc-2010/GL/glext.h	3679;"	d
GL_FRAGMENT_DEPTH	msvc/msvc-2010/GL/glext.h	299;"	d
GL_FRAGMENT_DEPTH	ps3/rgl/include/export/GLES/glext.h	158;"	d
GL_FRAGMENT_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	3837;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	msvc/msvc-2010/GL/glext.h	2313;"	d
GL_FRAGMENT_LIGHT0_SGIX	msvc/msvc-2010/GL/glext.h	3690;"	d
GL_FRAGMENT_LIGHT1_SGIX	msvc/msvc-2010/GL/glext.h	3691;"	d
GL_FRAGMENT_LIGHT2_SGIX	msvc/msvc-2010/GL/glext.h	3692;"	d
GL_FRAGMENT_LIGHT3_SGIX	msvc/msvc-2010/GL/glext.h	3693;"	d
GL_FRAGMENT_LIGHT4_SGIX	msvc/msvc-2010/GL/glext.h	3694;"	d
GL_FRAGMENT_LIGHT5_SGIX	msvc/msvc-2010/GL/glext.h	3695;"	d
GL_FRAGMENT_LIGHT6_SGIX	msvc/msvc-2010/GL/glext.h	3696;"	d
GL_FRAGMENT_LIGHT7_SGIX	msvc/msvc-2010/GL/glext.h	3697;"	d
GL_FRAGMENT_LIGHTING_SGIX	msvc/msvc-2010/GL/glext.h	3678;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	msvc/msvc-2010/GL/glext.h	3688;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	msvc/msvc-2010/GL/glext.h	3686;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	msvc/msvc-2010/GL/glext.h	3689;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	msvc/msvc-2010/GL/glext.h	3687;"	d
GL_FRAGMENT_MATERIAL_EXT	msvc/msvc-2010/GL/glext.h	3725;"	d
GL_FRAGMENT_NORMAL_EXT	msvc/msvc-2010/GL/glext.h	3726;"	d
GL_FRAGMENT_PROGRAM_ARB	msvc/msvc-2010/GL/glext.h	1726;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	msvc/msvc-2010/GL/glext.h	4970;"	d
GL_FRAGMENT_PROGRAM_CONTROL_CONTROLTXP_SCE	ps3/rgl/include/export/GLES/glext.h	161;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	msvc/msvc-2010/GL/glext.h	5827;"	d
GL_FRAGMENT_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	4967;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5356;"	d
GL_FRAGMENT_SHADER	msvc/msvc-2010/GL/glext.h	404;"	d
GL_FRAGMENT_SHADER_ARB	msvc/msvc-2010/GL/glext.h	1833;"	d
GL_FRAGMENT_SHADER_ATI	msvc/msvc-2010/GL/glext.h	4531;"	d
GL_FRAGMENT_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2435;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	msvc/msvc-2010/GL/glext.h	442;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	msvc/msvc-2010/GL/glext.h	1835;"	d
GL_FRAGMENT_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2958;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2964;"	d
GL_FRAGMENT_TEXTURE	msvc/msvc-2010/GL/glext.h	2887;"	d
GL_FRAMEBUFFER	gfx/gl.c	179;"	d	file:
GL_FRAMEBUFFER	msvc/msvc-2010/GL/glext.h	1992;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	msvc/msvc-2010/GL/glext.h	1938;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	msvc/msvc-2010/GL/glext.h	1937;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	msvc/msvc-2010/GL/glext.h	1933;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	msvc/msvc-2010/GL/glext.h	1934;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	msvc/msvc-2010/GL/glext.h	1939;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	msvc/msvc-2010/GL/glext.h	1936;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	msvc/msvc-2010/GL/glext.h	793;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	msvc/msvc-2010/GL/glext.h	2025;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	msvc/msvc-2010/GL/glext.h	5215;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	msvc/msvc-2010/GL/glext.h	1963;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	msvc/msvc-2010/GL/glext.h	5076;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES	ps3/rgl/include/export/GLES/glext.h	276;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	msvc/msvc-2010/GL/glext.h	1962;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	msvc/msvc-2010/GL/glext.h	5075;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES	ps3/rgl/include/export/GLES/glext.h	275;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	msvc/msvc-2010/GL/glext.h	1935;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	msvc/msvc-2010/GL/glext.h	1940;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	msvc/msvc-2010/GL/glext.h	5079;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	ps3/rgl/include/export/GLES/glext.h	279;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	msvc/msvc-2010/GL/glext.h	1965;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	msvc/msvc-2010/GL/glext.h	5078;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES	ps3/rgl/include/export/GLES/glext.h	278;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	msvc/msvc-2010/GL/glext.h	1966;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	msvc/msvc-2010/GL/glext.h	5218;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	msvc/msvc-2010/GL/glext.h	1964;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	msvc/msvc-2010/GL/glext.h	5077;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES	ps3/rgl/include/export/GLES/glext.h	277;"	d
GL_FRAMEBUFFER_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2597;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5801;"	d
GL_FRAMEBUFFER_BINDING	msvc/msvc-2010/GL/glext.h	1955;"	d
GL_FRAMEBUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5073;"	d
GL_FRAMEBUFFER_BINDING_OES	ps3/rgl/include/export/GLES/glext.h	273;"	d
GL_FRAMEBUFFER_BLEND	msvc/msvc-2010/GL/glext.h	2867;"	d
GL_FRAMEBUFFER_COMPLETE	gfx/gl.c	181;"	d	file:
GL_FRAMEBUFFER_COMPLETE	msvc/msvc-2010/GL/glext.h	1967;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	msvc/msvc-2010/GL/glext.h	5080;"	d
GL_FRAMEBUFFER_COMPLETE_OES	ps3/rgl/include/export/GLES/glext.h	280;"	d
GL_FRAMEBUFFER_DEFAULT	msvc/msvc-2010/GL/glext.h	1941;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	msvc/msvc-2010/GL/glext.h	2815;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	msvc/msvc-2010/GL/glext.h	2812;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	msvc/msvc-2010/GL/glext.h	2813;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	msvc/msvc-2010/GL/glext.h	2814;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	msvc/msvc-2010/GL/glext.h	2811;"	d
GL_FRAMEBUFFER_EXT	msvc/msvc-2010/GL/glext.h	5107;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	msvc/msvc-2010/GL/glext.h	1968;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	msvc/msvc-2010/GL/glext.h	5081;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES	ps3/rgl/include/export/GLES/glext.h	281;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	msvc/msvc-2010/GL/glext.h	5083;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES	ps3/rgl/include/export/GLES/glext.h	284;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	msvc/msvc-2010/GL/glext.h	1970;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5085;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_OES	ps3/rgl/include/export/GLES/glext.h	283;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	msvc/msvc-2010/GL/glext.h	5084;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES	ps3/rgl/include/export/GLES/glext.h	285;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	msvc/msvc-2010/GL/glext.h	2027;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	msvc/msvc-2010/GL/glext.h	5217;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	msvc/msvc-2010/GL/glext.h	794;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	msvc/msvc-2010/GL/glext.h	2026;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	msvc/msvc-2010/GL/glext.h	5216;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	msvc/msvc-2010/GL/glext.h	1969;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	msvc/msvc-2010/GL/glext.h	5082;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES	ps3/rgl/include/export/GLES/glext.h	282;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2007;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	msvc/msvc-2010/GL/glext.h	5167;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	msvc/msvc-2010/GL/glext.h	1971;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5086;"	d
GL_FRAMEBUFFER_MULTISAMPLING_MODE_SCE	ps3/rgl/include/export/GLES/glext.h	350;"	d
GL_FRAMEBUFFER_OES	ps3/rgl/include/export/GLES/glext.h	306;"	d
GL_FRAMEBUFFER_RENDERABLE	msvc/msvc-2010/GL/glext.h	2865;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	msvc/msvc-2010/GL/glext.h	2866;"	d
GL_FRAMEBUFFER_SRGB	msvc/msvc-2010/GL/glext.h	2015;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	msvc/msvc-2010/GL/glext.h	5345;"	d
GL_FRAMEBUFFER_SRGB_EXT	msvc/msvc-2010/GL/glext.h	5344;"	d
GL_FRAMEBUFFER_UNDEFINED	msvc/msvc-2010/GL/glext.h	1942;"	d
GL_FRAMEBUFFER_UNSUPPORTED	msvc/msvc-2010/GL/glext.h	1972;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	msvc/msvc-2010/GL/glext.h	5087;"	d
GL_FRAMEBUFFER_UNSUPPORTED_OES	ps3/rgl/include/export/GLES/glext.h	286;"	d
GL_FRAMEZOOM_FACTOR_SGIX	msvc/msvc-2010/GL/glext.h	3472;"	d
GL_FRAMEZOOM_SGIX	msvc/msvc-2010/GL/glext.h	3471;"	d
GL_FRAME_NV	msvc/msvc-2010/GL/glext.h	5466;"	d
GL_FRONT	ps3/rgl/include/export/GLES/gl.h	146;"	d
GL_FRONT_AND_BACK	ps3/rgl/include/export/GLES/gl.h	148;"	d
GL_FULL_RANGE_EXT	msvc/msvc-2010/GL/glext.h	4758;"	d
GL_FULL_STIPPLE_HINT_PGI	msvc/msvc-2010/GL/glext.h	3592;"	d
GL_FULL_SUPPORT	msvc/msvc-2010/GL/glext.h	2909;"	d
GL_FUNC_ADD	msvc/msvc-2010/GL/glext.h	104;"	d
GL_FUNC_ADD	ps3/rgl/include/export/GLES/glext.h	104;"	d
GL_FUNC_ADD_EXT	msvc/msvc-2010/GL/glext.h	3376;"	d
GL_FUNC_REVERSE_SUBTRACT	msvc/msvc-2010/GL/glext.h	109;"	d
GL_FUNC_REVERSE_SUBTRACT	ps3/rgl/include/export/GLES/glext.h	108;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	msvc/msvc-2010/GL/glext.h	3384;"	d
GL_FUNC_SUBTRACT	msvc/msvc-2010/GL/glext.h	108;"	d
GL_FUNC_SUBTRACT	ps3/rgl/include/export/GLES/glext.h	107;"	d
GL_FUNC_SUBTRACT_EXT	msvc/msvc-2010/GL/glext.h	3383;"	d
GL_GENERATE_MIPMAP	msvc/msvc-2010/GL/glext.h	295;"	d
GL_GENERATE_MIPMAP_HINT	msvc/msvc-2010/GL/glext.h	296;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	msvc/msvc-2010/GL/glext.h	3342;"	d
GL_GENERATE_MIPMAP_SGIS	msvc/msvc-2010/GL/glext.h	3341;"	d
GL_GENERIC_ATTRIB_NV	msvc/msvc-2010/GL/glext.h	5369;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	msvc/msvc-2010/GL/glext.h	3481;"	d
GL_GEOMETRY_DEFORMATION_SGIX	msvc/msvc-2010/GL/glext.h	3485;"	d
GL_GEOMETRY_INPUT_TYPE	msvc/msvc-2010/GL/glext.h	797;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	msvc/msvc-2010/GL/glext.h	2030;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	msvc/msvc-2010/GL/glext.h	5212;"	d
GL_GEOMETRY_OUTPUT_TYPE	msvc/msvc-2010/GL/glext.h	798;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	msvc/msvc-2010/GL/glext.h	2031;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	msvc/msvc-2010/GL/glext.h	5213;"	d
GL_GEOMETRY_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	5208;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5355;"	d
GL_GEOMETRY_SHADER	msvc/msvc-2010/GL/glext.h	795;"	d
GL_GEOMETRY_SHADER_ARB	msvc/msvc-2010/GL/glext.h	2028;"	d
GL_GEOMETRY_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2436;"	d
GL_GEOMETRY_SHADER_EXT	msvc/msvc-2010/GL/glext.h	5223;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	msvc/msvc-2010/GL/glext.h	2309;"	d
GL_GEOMETRY_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2957;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2963;"	d
GL_GEOMETRY_TEXTURE	msvc/msvc-2010/GL/glext.h	2886;"	d
GL_GEOMETRY_VERTICES_OUT	msvc/msvc-2010/GL/glext.h	796;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	msvc/msvc-2010/GL/glext.h	2029;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	msvc/msvc-2010/GL/glext.h	5211;"	d
GL_GEQUAL	ps3/rgl/include/export/GLES/gl.h	110;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	msvc/msvc-2010/GL/glext.h	2873;"	d
GL_GET_TEXTURE_IMAGE_TYPE	msvc/msvc-2010/GL/glext.h	2874;"	d
GL_GLEXT_PROTOTYPES	gfx/shader_glsl.c	50;"	d	file:
GL_GLEXT_VERSION	msvc/msvc-2010/GL/glext.h	34;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	msvc/msvc-2010/GL/glext.h	3911;"	d
GL_GLOBAL_ALPHA_SUN	msvc/msvc-2010/GL/glext.h	3910;"	d
GL_GLYPH_HAS_KERNING_NV	msvc/msvc-2010/GL/glext.h	6084;"	d
GL_GLYPH_HEIGHT_BIT_NV	msvc/msvc-2010/GL/glext.h	6077;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	msvc/msvc-2010/GL/glext.h	6080;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	msvc/msvc-2010/GL/glext.h	6078;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	msvc/msvc-2010/GL/glext.h	6079;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	msvc/msvc-2010/GL/glext.h	6083;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	msvc/msvc-2010/GL/glext.h	6081;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	msvc/msvc-2010/GL/glext.h	6082;"	d
GL_GLYPH_WIDTH_BIT_NV	msvc/msvc-2010/GL/glext.h	6076;"	d
GL_GPU_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5704;"	d
GL_GREATER	ps3/rgl/include/export/GLES/gl.h	108;"	d
GL_GREEN	ps3/rgl/include/export/GLES/glext.h	58;"	d
GL_GREEN_BIT_ATI	msvc/msvc-2010/GL/glext.h	4623;"	d
GL_GREEN_INTEGER	msvc/msvc-2010/GL/glext.h	551;"	d
GL_GREEN_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5443;"	d
GL_GREEN_MAX_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3950;"	d
GL_GREEN_MIN_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3946;"	d
GL_GREMEDY_frame_terminator	msvc/msvc-2010/GL/glext.h	11488;"	d
GL_GREMEDY_string_marker	msvc/msvc-2010/GL/glext.h	11114;"	d
GL_GUILTY_CONTEXT_RESET_ARB	msvc/msvc-2010/GL/glext.h	2514;"	d
GL_HALF_APPLE	msvc/msvc-2010/GL/glext.h	5607;"	d
GL_HALF_BIAS_NEGATE_NV	msvc/msvc-2010/GL/glext.h	4061;"	d
GL_HALF_BIAS_NORMAL_NV	msvc/msvc-2010/GL/glext.h	4060;"	d
GL_HALF_BIT_ATI	msvc/msvc-2010/GL/glext.h	4628;"	d
GL_HALF_FLOAT	msvc/msvc-2010/GL/glext.h	2042;"	d
GL_HALF_FLOAT_ARB	msvc/msvc-2010/GL/glext.h	1889;"	d
GL_HALF_FLOAT_ARB	ps3/rgl/include/export/GLES/glext.h	39;"	d
GL_HALF_FLOAT_NV	msvc/msvc-2010/GL/glext.h	4975;"	d
GL_HIGH_FLOAT	msvc/msvc-2010/GL/glext.h	2413;"	d
GL_HIGH_INT	msvc/msvc-2010/GL/glext.h	2416;"	d
GL_HILO16_NV	msvc/msvc-2010/GL/glext.h	4351;"	d
GL_HILO8_NV	msvc/msvc-2010/GL/glext.h	4837;"	d
GL_HILO_NV	msvc/msvc-2010/GL/glext.h	4347;"	d
GL_HISTOGRAM	msvc/msvc-2010/GL/glext.h	130;"	d
GL_HISTOGRAM_ALPHA_SIZE	msvc/msvc-2010/GL/glext.h	137;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3136;"	d
GL_HISTOGRAM_BLUE_SIZE	msvc/msvc-2010/GL/glext.h	136;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3135;"	d
GL_HISTOGRAM_EXT	msvc/msvc-2010/GL/glext.h	3129;"	d
GL_HISTOGRAM_FORMAT	msvc/msvc-2010/GL/glext.h	133;"	d
GL_HISTOGRAM_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	3132;"	d
GL_HISTOGRAM_GREEN_SIZE	msvc/msvc-2010/GL/glext.h	135;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3134;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	msvc/msvc-2010/GL/glext.h	138;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3137;"	d
GL_HISTOGRAM_RED_SIZE	msvc/msvc-2010/GL/glext.h	134;"	d
GL_HISTOGRAM_RED_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3133;"	d
GL_HISTOGRAM_SINK	msvc/msvc-2010/GL/glext.h	139;"	d
GL_HISTOGRAM_SINK_EXT	msvc/msvc-2010/GL/glext.h	3138;"	d
GL_HISTOGRAM_WIDTH	msvc/msvc-2010/GL/glext.h	132;"	d
GL_HISTOGRAM_WIDTH_EXT	msvc/msvc-2010/GL/glext.h	3131;"	d
GL_HI_BIAS_NV	msvc/msvc-2010/GL/glext.h	4377;"	d
GL_HI_SCALE_NV	msvc/msvc-2010/GL/glext.h	4371;"	d
GL_HORIZONTAL_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6045;"	d
GL_HP_convolution_border_modes	msvc/msvc-2010/GL/glext.h	9270;"	d
GL_HP_image_transform	msvc/msvc-2010/GL/glext.h	9252;"	d
GL_HP_occlusion_test	msvc/msvc-2010/GL/glext.h	9526;"	d
GL_HP_texture_lighting	msvc/msvc-2010/GL/glext.h	9446;"	d
GL_IBM_cull_vertex	msvc/msvc-2010/GL/glext.h	10028;"	d
GL_IBM_multimode_draw_arrays	msvc/msvc-2010/GL/glext.h	10032;"	d
GL_IBM_rasterpos_clip	msvc/msvc-2010/GL/glext.h	9442;"	d
GL_IBM_vertex_array_lists	msvc/msvc-2010/GL/glext.h	10042;"	d
GL_IDENTITY_NV	msvc/msvc-2010/GL/glext.h	4409;"	d
GL_IGNORE_BORDER_HP	msvc/msvc-2010/GL/glext.h	3535;"	d
GL_IMAGE_1D	msvc/msvc-2010/GL/glext.h	2608;"	d
GL_IMAGE_1D_ARRAY	msvc/msvc-2010/GL/glext.h	2614;"	d
GL_IMAGE_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5763;"	d
GL_IMAGE_1D_EXT	msvc/msvc-2010/GL/glext.h	5757;"	d
GL_IMAGE_2D	msvc/msvc-2010/GL/glext.h	2609;"	d
GL_IMAGE_2D_ARRAY	msvc/msvc-2010/GL/glext.h	2615;"	d
GL_IMAGE_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5764;"	d
GL_IMAGE_2D_EXT	msvc/msvc-2010/GL/glext.h	5758;"	d
GL_IMAGE_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2617;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2618;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5767;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	msvc/msvc-2010/GL/glext.h	5766;"	d
GL_IMAGE_2D_RECT	msvc/msvc-2010/GL/glext.h	2611;"	d
GL_IMAGE_2D_RECT_EXT	msvc/msvc-2010/GL/glext.h	5760;"	d
GL_IMAGE_3D	msvc/msvc-2010/GL/glext.h	2610;"	d
GL_IMAGE_3D_EXT	msvc/msvc-2010/GL/glext.h	5759;"	d
GL_IMAGE_BINDING_ACCESS	msvc/msvc-2010/GL/glext.h	2607;"	d
GL_IMAGE_BINDING_ACCESS_EXT	msvc/msvc-2010/GL/glext.h	5756;"	d
GL_IMAGE_BINDING_FORMAT	msvc/msvc-2010/GL/glext.h	2642;"	d
GL_IMAGE_BINDING_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	5791;"	d
GL_IMAGE_BINDING_LAYER	msvc/msvc-2010/GL/glext.h	2606;"	d
GL_IMAGE_BINDING_LAYERED	msvc/msvc-2010/GL/glext.h	2605;"	d
GL_IMAGE_BINDING_LAYERED_EXT	msvc/msvc-2010/GL/glext.h	5754;"	d
GL_IMAGE_BINDING_LAYER_EXT	msvc/msvc-2010/GL/glext.h	5755;"	d
GL_IMAGE_BINDING_LEVEL	msvc/msvc-2010/GL/glext.h	2604;"	d
GL_IMAGE_BINDING_LEVEL_EXT	msvc/msvc-2010/GL/glext.h	5753;"	d
GL_IMAGE_BINDING_NAME	msvc/msvc-2010/GL/glext.h	2603;"	d
GL_IMAGE_BINDING_NAME_EXT	msvc/msvc-2010/GL/glext.h	5752;"	d
GL_IMAGE_BUFFER	msvc/msvc-2010/GL/glext.h	2613;"	d
GL_IMAGE_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5762;"	d
GL_IMAGE_CLASS_10_10_10_2	msvc/msvc-2010/GL/glext.h	2921;"	d
GL_IMAGE_CLASS_11_11_10	msvc/msvc-2010/GL/glext.h	2920;"	d
GL_IMAGE_CLASS_1_X_16	msvc/msvc-2010/GL/glext.h	2916;"	d
GL_IMAGE_CLASS_1_X_32	msvc/msvc-2010/GL/glext.h	2913;"	d
GL_IMAGE_CLASS_1_X_8	msvc/msvc-2010/GL/glext.h	2919;"	d
GL_IMAGE_CLASS_2_X_16	msvc/msvc-2010/GL/glext.h	2915;"	d
GL_IMAGE_CLASS_2_X_32	msvc/msvc-2010/GL/glext.h	2912;"	d
GL_IMAGE_CLASS_2_X_8	msvc/msvc-2010/GL/glext.h	2918;"	d
GL_IMAGE_CLASS_4_X_16	msvc/msvc-2010/GL/glext.h	2914;"	d
GL_IMAGE_CLASS_4_X_32	msvc/msvc-2010/GL/glext.h	2911;"	d
GL_IMAGE_CLASS_4_X_8	msvc/msvc-2010/GL/glext.h	2917;"	d
GL_IMAGE_COMPATIBILITY_CLASS	msvc/msvc-2010/GL/glext.h	2896;"	d
GL_IMAGE_CUBE	msvc/msvc-2010/GL/glext.h	2612;"	d
GL_IMAGE_CUBE_EXT	msvc/msvc-2010/GL/glext.h	5761;"	d
GL_IMAGE_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	2616;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5765;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	msvc/msvc-2010/GL/glext.h	3526;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	msvc/msvc-2010/GL/glext.h	2645;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	msvc/msvc-2010/GL/glext.h	2644;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	msvc/msvc-2010/GL/glext.h	2643;"	d
GL_IMAGE_MAG_FILTER_HP	msvc/msvc-2010/GL/glext.h	3524;"	d
GL_IMAGE_MIN_FILTER_HP	msvc/msvc-2010/GL/glext.h	3525;"	d
GL_IMAGE_PIXEL_FORMAT	msvc/msvc-2010/GL/glext.h	2897;"	d
GL_IMAGE_PIXEL_TYPE	msvc/msvc-2010/GL/glext.h	2898;"	d
GL_IMAGE_ROTATE_ANGLE_HP	msvc/msvc-2010/GL/glext.h	3521;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	msvc/msvc-2010/GL/glext.h	3522;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	msvc/msvc-2010/GL/glext.h	3523;"	d
GL_IMAGE_SCALE_X_HP	msvc/msvc-2010/GL/glext.h	3517;"	d
GL_IMAGE_SCALE_Y_HP	msvc/msvc-2010/GL/glext.h	3518;"	d
GL_IMAGE_TEXEL_SIZE	msvc/msvc-2010/GL/glext.h	2895;"	d
GL_IMAGE_TRANSFORM_2D_HP	msvc/msvc-2010/GL/glext.h	3529;"	d
GL_IMAGE_TRANSLATE_X_HP	msvc/msvc-2010/GL/glext.h	3519;"	d
GL_IMAGE_TRANSLATE_Y_HP	msvc/msvc-2010/GL/glext.h	3520;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	msvc/msvc-2010/GL/glext.h	2410;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	msvc/msvc-2010/GL/glext.h	5014;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	ps3/rgl/include/export/GLES/gl.h	225;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	msvc/msvc-2010/GL/glext.h	2409;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	msvc/msvc-2010/GL/glext.h	5013;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	ps3/rgl/include/export/GLES/gl.h	224;"	d
GL_INCR	ps3/rgl/include/export/GLES/gl.h	347;"	d
GL_INCR_WRAP	msvc/msvc-2010/GL/glext.h	287;"	d
GL_INCR_WRAP	ps3/rgl/include/export/GLES/glext.h	338;"	d
GL_INCR_WRAP_EXT	msvc/msvc-2010/GL/glext.h	3960;"	d
GL_INDEX	msvc/msvc-2010/GL/glext.h	2009;"	d
GL_INDEX_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5715;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	349;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1753;"	d
GL_INDEX_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3322;"	d
GL_INDEX_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3306;"	d
GL_INDEX_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5725;"	d
GL_INDEX_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4145;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4153;"	d
GL_INDEX_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3332;"	d
GL_INDEX_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3321;"	d
GL_INDEX_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3320;"	d
GL_INDEX_BIT_PGI	msvc/msvc-2010/GL/glext.h	3559;"	d
GL_INDEX_MATERIAL_EXT	msvc/msvc-2010/GL/glext.h	3639;"	d
GL_INDEX_MATERIAL_FACE_EXT	msvc/msvc-2010/GL/glext.h	3641;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	msvc/msvc-2010/GL/glext.h	3640;"	d
GL_INDEX_TEST_EXT	msvc/msvc-2010/GL/glext.h	3645;"	d
GL_INDEX_TEST_FUNC_EXT	msvc/msvc-2010/GL/glext.h	3646;"	d
GL_INDEX_TEST_REF_EXT	msvc/msvc-2010/GL/glext.h	3647;"	d
GL_INFO_LOG_LENGTH	msvc/msvc-2010/GL/glext.h	435;"	d
GL_INGR_blend_func_separate	msvc/msvc-2010/GL/glext.h	9848;"	d
GL_INGR_color_clamp	msvc/msvc-2010/GL/glext.h	9856;"	d
GL_INGR_interlace_read	msvc/msvc-2010/GL/glext.h	9860;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	msvc/msvc-2010/GL/glext.h	2515;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	msvc/msvc-2010/GL/glext.h	3459;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	msvc/msvc-2010/GL/glext.h	3460;"	d
GL_INT	ps3/rgl/include/export/GLES/glext.h	23;"	d
GL_INT16_NV	msvc/msvc-2010/GL/glext.h	5841;"	d
GL_INT16_VEC2_NV	msvc/msvc-2010/GL/glext.h	5842;"	d
GL_INT16_VEC3_NV	msvc/msvc-2010/GL/glext.h	5843;"	d
GL_INT16_VEC4_NV	msvc/msvc-2010/GL/glext.h	5844;"	d
GL_INT64_NV	msvc/msvc-2010/GL/glext.h	5835;"	d
GL_INT64_VEC2_NV	msvc/msvc-2010/GL/glext.h	5845;"	d
GL_INT64_VEC3_NV	msvc/msvc-2010/GL/glext.h	5846;"	d
GL_INT64_VEC4_NV	msvc/msvc-2010/GL/glext.h	5847;"	d
GL_INT8_NV	msvc/msvc-2010/GL/glext.h	5837;"	d
GL_INT8_VEC2_NV	msvc/msvc-2010/GL/glext.h	5838;"	d
GL_INT8_VEC3_NV	msvc/msvc-2010/GL/glext.h	5839;"	d
GL_INT8_VEC4_NV	msvc/msvc-2010/GL/glext.h	5840;"	d
GL_INTEL_parallel_arrays	msvc/msvc-2010/GL/glext.h	9512;"	d
GL_INTENSITY12_EXT	msvc/msvc-2010/GL/glext.h	3077;"	d
GL_INTENSITY16F_ARB	msvc/msvc-2010/GL/glext.h	1910;"	d
GL_INTENSITY16I_EXT	msvc/msvc-2010/GL/glext.h	5433;"	d
GL_INTENSITY16UI_EXT	msvc/msvc-2010/GL/glext.h	5415;"	d
GL_INTENSITY16_EXT	msvc/msvc-2010/GL/glext.h	3078;"	d
GL_INTENSITY16_SNORM	msvc/msvc-2010/GL/glext.h	5578;"	d
GL_INTENSITY32F_ARB	msvc/msvc-2010/GL/glext.h	1904;"	d
GL_INTENSITY32I_EXT	msvc/msvc-2010/GL/glext.h	5427;"	d
GL_INTENSITY32UI_EXT	msvc/msvc-2010/GL/glext.h	5409;"	d
GL_INTENSITY4_EXT	msvc/msvc-2010/GL/glext.h	3075;"	d
GL_INTENSITY8I_EXT	msvc/msvc-2010/GL/glext.h	5439;"	d
GL_INTENSITY8UI_EXT	msvc/msvc-2010/GL/glext.h	5421;"	d
GL_INTENSITY8_EXT	msvc/msvc-2010/GL/glext.h	3076;"	d
GL_INTENSITY8_SNORM	msvc/msvc-2010/GL/glext.h	5574;"	d
GL_INTENSITY_EXT	msvc/msvc-2010/GL/glext.h	3074;"	d
GL_INTENSITY_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5617;"	d
GL_INTENSITY_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4942;"	d
GL_INTENSITY_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5611;"	d
GL_INTENSITY_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4936;"	d
GL_INTENSITY_SNORM	msvc/msvc-2010/GL/glext.h	5570;"	d
GL_INTERLACE_OML	msvc/msvc-2010/GL/glext.h	4496;"	d
GL_INTERLACE_READ_INGR	msvc/msvc-2010/GL/glext.h	3956;"	d
GL_INTERLACE_READ_OML	msvc/msvc-2010/GL/glext.h	4497;"	d
GL_INTERLACE_SGIX	msvc/msvc-2010/GL/glext.h	3391;"	d
GL_INTERLEAVED_ATTRIBS	msvc/msvc-2010/GL/glext.h	534;"	d
GL_INTERLEAVED_ATTRIBS_EXT	msvc/msvc-2010/GL/glext.h	5479;"	d
GL_INTERLEAVED_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5384;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	msvc/msvc-2010/GL/glext.h	2844;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	msvc/msvc-2010/GL/glext.h	2851;"	d
GL_INTERNALFORMAT_BLUE_SIZE	msvc/msvc-2010/GL/glext.h	2843;"	d
GL_INTERNALFORMAT_BLUE_TYPE	msvc/msvc-2010/GL/glext.h	2850;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	msvc/msvc-2010/GL/glext.h	2845;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	msvc/msvc-2010/GL/glext.h	2852;"	d
GL_INTERNALFORMAT_GREEN_SIZE	msvc/msvc-2010/GL/glext.h	2842;"	d
GL_INTERNALFORMAT_GREEN_TYPE	msvc/msvc-2010/GL/glext.h	2849;"	d
GL_INTERNALFORMAT_PREFERRED	msvc/msvc-2010/GL/glext.h	2840;"	d
GL_INTERNALFORMAT_RED_SIZE	msvc/msvc-2010/GL/glext.h	2841;"	d
GL_INTERNALFORMAT_RED_TYPE	msvc/msvc-2010/GL/glext.h	2848;"	d
GL_INTERNALFORMAT_SHARED_SIZE	msvc/msvc-2010/GL/glext.h	2847;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	msvc/msvc-2010/GL/glext.h	2846;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	msvc/msvc-2010/GL/glext.h	2853;"	d
GL_INTERNALFORMAT_SUPPORTED	msvc/msvc-2010/GL/glext.h	2839;"	d
GL_INTERPOLATE	msvc/msvc-2010/GL/glext.h	266;"	d
GL_INTERPOLATE_ARB	msvc/msvc-2010/GL/glext.h	1603;"	d
GL_INTERPOLATE_EXT	msvc/msvc-2010/GL/glext.h	3873;"	d
GL_INT_2_10_10_10_REV	msvc/msvc-2010/GL/glext.h	2300;"	d
GL_INT_IMAGE_1D	msvc/msvc-2010/GL/glext.h	2619;"	d
GL_INT_IMAGE_1D_ARRAY	msvc/msvc-2010/GL/glext.h	2625;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5774;"	d
GL_INT_IMAGE_1D_EXT	msvc/msvc-2010/GL/glext.h	5768;"	d
GL_INT_IMAGE_2D	msvc/msvc-2010/GL/glext.h	2620;"	d
GL_INT_IMAGE_2D_ARRAY	msvc/msvc-2010/GL/glext.h	2626;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5775;"	d
GL_INT_IMAGE_2D_EXT	msvc/msvc-2010/GL/glext.h	5769;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2628;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2629;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5778;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	msvc/msvc-2010/GL/glext.h	5777;"	d
GL_INT_IMAGE_2D_RECT	msvc/msvc-2010/GL/glext.h	2622;"	d
GL_INT_IMAGE_2D_RECT_EXT	msvc/msvc-2010/GL/glext.h	5771;"	d
GL_INT_IMAGE_3D	msvc/msvc-2010/GL/glext.h	2621;"	d
GL_INT_IMAGE_3D_EXT	msvc/msvc-2010/GL/glext.h	5770;"	d
GL_INT_IMAGE_BUFFER	msvc/msvc-2010/GL/glext.h	2624;"	d
GL_INT_IMAGE_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5773;"	d
GL_INT_IMAGE_CUBE	msvc/msvc-2010/GL/glext.h	2623;"	d
GL_INT_IMAGE_CUBE_EXT	msvc/msvc-2010/GL/glext.h	5772;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	2627;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5776;"	d
GL_INT_SAMPLER_1D	msvc/msvc-2010/GL/glext.h	565;"	d
GL_INT_SAMPLER_1D_ARRAY	msvc/msvc-2010/GL/glext.h	569;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5264;"	d
GL_INT_SAMPLER_1D_EXT	msvc/msvc-2010/GL/glext.h	5259;"	d
GL_INT_SAMPLER_2D	msvc/msvc-2010/GL/glext.h	566;"	d
GL_INT_SAMPLER_2D_ARRAY	msvc/msvc-2010/GL/glext.h	570;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5265;"	d
GL_INT_SAMPLER_2D_EXT	msvc/msvc-2010/GL/glext.h	5260;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2205;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2208;"	d
GL_INT_SAMPLER_2D_RECT	msvc/msvc-2010/GL/glext.h	720;"	d
GL_INT_SAMPLER_2D_RECT_EXT	msvc/msvc-2010/GL/glext.h	5263;"	d
GL_INT_SAMPLER_3D	msvc/msvc-2010/GL/glext.h	567;"	d
GL_INT_SAMPLER_3D_EXT	msvc/msvc-2010/GL/glext.h	5261;"	d
GL_INT_SAMPLER_BUFFER	msvc/msvc-2010/GL/glext.h	721;"	d
GL_INT_SAMPLER_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	5551;"	d
GL_INT_SAMPLER_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5266;"	d
GL_INT_SAMPLER_CUBE	msvc/msvc-2010/GL/glext.h	568;"	d
GL_INT_SAMPLER_CUBE_EXT	msvc/msvc-2010/GL/glext.h	5262;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	900;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2233;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	msvc/msvc-2010/GL/glext.h	5518;"	d
GL_INT_VEC2	msvc/msvc-2010/GL/glext.h	415;"	d
GL_INT_VEC2_ARB	msvc/msvc-2010/GL/glext.h	1793;"	d
GL_INT_VEC3	msvc/msvc-2010/GL/glext.h	416;"	d
GL_INT_VEC3_ARB	msvc/msvc-2010/GL/glext.h	1794;"	d
GL_INT_VEC4	msvc/msvc-2010/GL/glext.h	417;"	d
GL_INT_VEC4_ARB	msvc/msvc-2010/GL/glext.h	1795;"	d
GL_INVALID_ENUM	ps3/rgl/include/export/GLES/gl.h	196;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	msvc/msvc-2010/GL/glext.h	1932;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	msvc/msvc-2010/GL/glext.h	5071;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_OES	ps3/rgl/include/export/GLES/glext.h	271;"	d
GL_INVALID_INDEX	msvc/msvc-2010/GL/glext.h	2135;"	d
GL_INVALID_OPERATION	ps3/rgl/include/export/GLES/gl.h	198;"	d
GL_INVALID_VALUE	ps3/rgl/include/export/GLES/gl.h	197;"	d
GL_INVARIANT_DATATYPE_EXT	msvc/msvc-2010/GL/glext.h	4768;"	d
GL_INVARIANT_EXT	msvc/msvc-2010/GL/glext.h	4727;"	d
GL_INVARIANT_VALUE_EXT	msvc/msvc-2010/GL/glext.h	4767;"	d
GL_INVERSE_NV	msvc/msvc-2010/GL/glext.h	4410;"	d
GL_INVERSE_TRANSPOSE_NV	msvc/msvc-2010/GL/glext.h	4412;"	d
GL_INVERT	ps3/rgl/include/export/GLES/gl.h	285;"	d
GL_INVERTED_SCREEN_W_REND	msvc/msvc-2010/GL/glext.h	3847;"	d
GL_IR_INSTRUMENT1_SGIX	msvc/msvc-2010/GL/glext.h	3618;"	d
GL_ISOLINES	msvc/msvc-2010/GL/glext.h	2359;"	d
GL_IS_PER_PATCH	msvc/msvc-2010/GL/glext.h	2994;"	d
GL_IS_ROW_MAJOR	msvc/msvc-2010/GL/glext.h	2978;"	d
GL_ITALIC_BIT_NV	msvc/msvc-2010/GL/glext.h	6075;"	d
GL_IUI_N3F_V2F_EXT	msvc/msvc-2010/GL/glext.h	3653;"	d
GL_IUI_N3F_V3F_EXT	msvc/msvc-2010/GL/glext.h	3654;"	d
GL_IUI_V2F_EXT	msvc/msvc-2010/GL/glext.h	3651;"	d
GL_IUI_V3F_EXT	msvc/msvc-2010/GL/glext.h	3652;"	d
GL_KEEP	ps3/rgl/include/export/GLES/gl.h	345;"	d
GL_KHR_debug	msvc/msvc-2010/GL/glext.h	8564;"	d
GL_KHR_texture_compression_astc_ldr	msvc/msvc-2010/GL/glext.h	8560;"	d
GL_LARGE_CCW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6061;"	d
GL_LARGE_CW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6063;"	d
GL_LAST_VERTEX_CONVENTION	msvc/msvc-2010/GL/glext.h	2165;"	d
GL_LAST_VERTEX_CONVENTION_EXT	msvc/msvc-2010/GL/glext.h	5562;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	msvc/msvc-2010/GL/glext.h	5668;"	d
GL_LAYER_NV	msvc/msvc-2010/GL/glext.h	5388;"	d
GL_LAYER_PROVOKING_VERTEX	msvc/msvc-2010/GL/glext.h	2472;"	d
GL_LEQUAL	ps3/rgl/include/export/GLES/gl.h	107;"	d
GL_LERP_ATI	msvc/msvc-2010/GL/glext.h	4603;"	d
GL_LESS	ps3/rgl/include/export/GLES/gl.h	105;"	d
GL_LIB	libretro-test-gl/Makefile	/^   GL_LIB := -framework OpenGL$/;"	m
GL_LIB	libretro-test-gl/Makefile	/^   GL_LIB := -framework OpenGLES$/;"	m
GL_LIB	libretro-test-gl/Makefile	/^   GL_LIB := -lGL$/;"	m
GL_LIB	libretro-test-gl/Makefile	/^   GL_LIB := -lGLESv2$/;"	m
GL_LIB	libretro-test-gl/Makefile	/^   GL_LIB := -lopengl32$/;"	m
GL_LIGHT0	ps3/rgl/include/export/GLES/gl.h	455;"	d
GL_LIGHT1	ps3/rgl/include/export/GLES/gl.h	456;"	d
GL_LIGHT2	ps3/rgl/include/export/GLES/gl.h	457;"	d
GL_LIGHT3	ps3/rgl/include/export/GLES/gl.h	458;"	d
GL_LIGHT4	ps3/rgl/include/export/GLES/gl.h	459;"	d
GL_LIGHT5	ps3/rgl/include/export/GLES/gl.h	460;"	d
GL_LIGHT6	ps3/rgl/include/export/GLES/gl.h	461;"	d
GL_LIGHT7	ps3/rgl/include/export/GLES/gl.h	462;"	d
GL_LIGHTING	ps3/rgl/include/export/GLES/gl.h	162;"	d
GL_LIGHT_ENV_MODE_SGIX	msvc/msvc-2010/GL/glext.h	3685;"	d
GL_LIGHT_MODEL_AMBIENT	ps3/rgl/include/export/GLES/gl.h	251;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	msvc/msvc-2010/GL/glext.h	92;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	msvc/msvc-2010/GL/glext.h	3811;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	msvc/msvc-2010/GL/glext.h	3892;"	d
GL_LIGHT_MODEL_TWO_SIDE	ps3/rgl/include/export/GLES/gl.h	252;"	d
GL_LINE	ps3/rgl/include/export/GLES/glext.h	126;"	d
GL_LINEAR	ps3/rgl/include/export/GLES/gl.h	379;"	d
GL_LINEAR_ATTENUATION	ps3/rgl/include/export/GLES/gl.h	263;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	msvc/msvc-2010/GL/glext.h	3346;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	msvc/msvc-2010/GL/glext.h	3357;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	msvc/msvc-2010/GL/glext.h	3250;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	msvc/msvc-2010/GL/glext.h	3251;"	d
GL_LINEAR_DETAIL_SGIS	msvc/msvc-2010/GL/glext.h	3249;"	d
GL_LINEAR_MIPMAP_LINEAR	ps3/rgl/include/export/GLES/gl.h	387;"	d
GL_LINEAR_MIPMAP_NEAREST	ps3/rgl/include/export/GLES/gl.h	385;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	msvc/msvc-2010/GL/glext.h	3259;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	msvc/msvc-2010/GL/glext.h	3260;"	d
GL_LINEAR_SHARPEN_SGIS	msvc/msvc-2010/GL/glext.h	3258;"	d
GL_LINES	ps3/rgl/include/export/GLES/gl.h	96;"	d
GL_LINES_ADJACENCY	msvc/msvc-2010/GL/glext.h	787;"	d
GL_LINES_ADJACENCY_ARB	msvc/msvc-2010/GL/glext.h	2019;"	d
GL_LINES_ADJACENCY_EXT	msvc/msvc-2010/GL/glext.h	5204;"	d
GL_LINE_LOOP	ps3/rgl/include/export/GLES/gl.h	97;"	d
GL_LINE_SMOOTH	ps3/rgl/include/export/GLES/gl.h	179;"	d
GL_LINE_SMOOTH_HINT	ps3/rgl/include/export/GLES/gl.h	246;"	d
GL_LINE_STRIP	ps3/rgl/include/export/GLES/gl.h	98;"	d
GL_LINE_STRIP_ADJACENCY	msvc/msvc-2010/GL/glext.h	788;"	d
GL_LINE_STRIP_ADJACENCY_ARB	msvc/msvc-2010/GL/glext.h	2020;"	d
GL_LINE_STRIP_ADJACENCY_EXT	msvc/msvc-2010/GL/glext.h	5205;"	d
GL_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6043;"	d
GL_LINK_STATUS	msvc/msvc-2010/GL/glext.h	433;"	d
GL_LIST_PRIORITY_SGIX	msvc/msvc-2010/GL/glext.h	3614;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	msvc/msvc-2010/GL/glext.h	4770;"	d
GL_LOCAL_CONSTANT_EXT	msvc/msvc-2010/GL/glext.h	4728;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	msvc/msvc-2010/GL/glext.h	4769;"	d
GL_LOCAL_EXT	msvc/msvc-2010/GL/glext.h	4729;"	d
GL_LOCATION	msvc/msvc-2010/GL/glext.h	2992;"	d
GL_LOCATION_INDEX	msvc/msvc-2010/GL/glext.h	2993;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	msvc/msvc-2010/GL/glext.h	2513;"	d
GL_LOWER_LEFT	msvc/msvc-2010/GL/glext.h	446;"	d
GL_LOW_FLOAT	msvc/msvc-2010/GL/glext.h	2411;"	d
GL_LOW_INT	msvc/msvc-2010/GL/glext.h	2414;"	d
GL_LO_BIAS_NV	msvc/msvc-2010/GL/glext.h	4378;"	d
GL_LO_SCALE_NV	msvc/msvc-2010/GL/glext.h	4372;"	d
GL_LUMINANCE12_ALPHA12_EXT	msvc/msvc-2010/GL/glext.h	3072;"	d
GL_LUMINANCE12_ALPHA4_EXT	msvc/msvc-2010/GL/glext.h	3071;"	d
GL_LUMINANCE12_EXT	msvc/msvc-2010/GL/glext.h	3066;"	d
GL_LUMINANCE16F_ARB	msvc/msvc-2010/GL/glext.h	1911;"	d
GL_LUMINANCE16I_EXT	msvc/msvc-2010/GL/glext.h	5434;"	d
GL_LUMINANCE16UI_EXT	msvc/msvc-2010/GL/glext.h	5416;"	d
GL_LUMINANCE16_ALPHA16_EXT	msvc/msvc-2010/GL/glext.h	3073;"	d
GL_LUMINANCE16_ALPHA16_SNORM	msvc/msvc-2010/GL/glext.h	5577;"	d
GL_LUMINANCE16_EXT	msvc/msvc-2010/GL/glext.h	3067;"	d
GL_LUMINANCE16_SNORM	msvc/msvc-2010/GL/glext.h	5576;"	d
GL_LUMINANCE32F_ARB	msvc/msvc-2010/GL/glext.h	1905;"	d
GL_LUMINANCE32I_EXT	msvc/msvc-2010/GL/glext.h	5428;"	d
GL_LUMINANCE32UI_EXT	msvc/msvc-2010/GL/glext.h	5410;"	d
GL_LUMINANCE4_ALPHA4_EXT	msvc/msvc-2010/GL/glext.h	3068;"	d
GL_LUMINANCE4_EXT	msvc/msvc-2010/GL/glext.h	3064;"	d
GL_LUMINANCE6_ALPHA2_EXT	msvc/msvc-2010/GL/glext.h	3069;"	d
GL_LUMINANCE8I_EXT	msvc/msvc-2010/GL/glext.h	5440;"	d
GL_LUMINANCE8UI_EXT	msvc/msvc-2010/GL/glext.h	5422;"	d
GL_LUMINANCE8_ALPHA8_EXT	msvc/msvc-2010/GL/glext.h	3070;"	d
GL_LUMINANCE8_ALPHA8_SNORM	msvc/msvc-2010/GL/glext.h	5573;"	d
GL_LUMINANCE8_EXT	msvc/msvc-2010/GL/glext.h	3065;"	d
GL_LUMINANCE8_SNORM	msvc/msvc-2010/GL/glext.h	5572;"	d
GL_LUMINANCE_ALPHA16F_ARB	msvc/msvc-2010/GL/glext.h	1912;"	d
GL_LUMINANCE_ALPHA16I_EXT	msvc/msvc-2010/GL/glext.h	5435;"	d
GL_LUMINANCE_ALPHA16UI_EXT	msvc/msvc-2010/GL/glext.h	5417;"	d
GL_LUMINANCE_ALPHA32F_ARB	msvc/msvc-2010/GL/glext.h	1906;"	d
GL_LUMINANCE_ALPHA32I_EXT	msvc/msvc-2010/GL/glext.h	5429;"	d
GL_LUMINANCE_ALPHA32UI_EXT	msvc/msvc-2010/GL/glext.h	5411;"	d
GL_LUMINANCE_ALPHA8I_EXT	msvc/msvc-2010/GL/glext.h	5441;"	d
GL_LUMINANCE_ALPHA8UI_EXT	msvc/msvc-2010/GL/glext.h	5423;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5619;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4944;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5613;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4938;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5451;"	d
GL_LUMINANCE_ALPHA_SNORM	msvc/msvc-2010/GL/glext.h	5569;"	d
GL_LUMINANCE_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5618;"	d
GL_LUMINANCE_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4943;"	d
GL_LUMINANCE_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5612;"	d
GL_LUMINANCE_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4937;"	d
GL_LUMINANCE_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5450;"	d
GL_LUMINANCE_SNORM	msvc/msvc-2010/GL/glext.h	5568;"	d
GL_MAD_ATI	msvc/msvc-2010/GL/glext.h	4602;"	d
GL_MAGNITUDE_BIAS_NV	msvc/msvc-2010/GL/glext.h	4381;"	d
GL_MAGNITUDE_SCALE_NV	msvc/msvc-2010/GL/glext.h	4375;"	d
GL_MAJOR_VERSION	msvc/msvc-2010/GL/glext.h	494;"	d
GL_MANUAL_GENERATE_MIPMAP	msvc/msvc-2010/GL/glext.h	2876;"	d
GL_MAP1_BINORMAL_EXT	msvc/msvc-2010/GL/glext.h	3863;"	d
GL_MAP1_TANGENT_EXT	msvc/msvc-2010/GL/glext.h	3861;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	msvc/msvc-2010/GL/glext.h	4451;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	msvc/msvc-2010/GL/glext.h	4461;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	msvc/msvc-2010/GL/glext.h	4462;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	msvc/msvc-2010/GL/glext.h	4463;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	msvc/msvc-2010/GL/glext.h	4464;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	msvc/msvc-2010/GL/glext.h	4465;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	msvc/msvc-2010/GL/glext.h	4466;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	msvc/msvc-2010/GL/glext.h	4452;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	msvc/msvc-2010/GL/glext.h	4453;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	msvc/msvc-2010/GL/glext.h	4454;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	msvc/msvc-2010/GL/glext.h	4455;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	msvc/msvc-2010/GL/glext.h	4456;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	msvc/msvc-2010/GL/glext.h	4457;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	msvc/msvc-2010/GL/glext.h	4458;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	msvc/msvc-2010/GL/glext.h	4459;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	msvc/msvc-2010/GL/glext.h	4460;"	d
GL_MAP2_BINORMAL_EXT	msvc/msvc-2010/GL/glext.h	3864;"	d
GL_MAP2_TANGENT_EXT	msvc/msvc-2010/GL/glext.h	3862;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	msvc/msvc-2010/GL/glext.h	4467;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	msvc/msvc-2010/GL/glext.h	4477;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	msvc/msvc-2010/GL/glext.h	4478;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	msvc/msvc-2010/GL/glext.h	4479;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	msvc/msvc-2010/GL/glext.h	4480;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	msvc/msvc-2010/GL/glext.h	4481;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	msvc/msvc-2010/GL/glext.h	4482;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	msvc/msvc-2010/GL/glext.h	4468;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	msvc/msvc-2010/GL/glext.h	4469;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	msvc/msvc-2010/GL/glext.h	4470;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	msvc/msvc-2010/GL/glext.h	4471;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	msvc/msvc-2010/GL/glext.h	4472;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	msvc/msvc-2010/GL/glext.h	4473;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	msvc/msvc-2010/GL/glext.h	4474;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	msvc/msvc-2010/GL/glext.h	4475;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	msvc/msvc-2010/GL/glext.h	4476;"	d
GL_MAP_ATTRIB_U_ORDER_NV	msvc/msvc-2010/GL/glext.h	4273;"	d
GL_MAP_ATTRIB_V_ORDER_NV	msvc/msvc-2010/GL/glext.h	4274;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	msvc/msvc-2010/GL/glext.h	2054;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	msvc/msvc-2010/GL/glext.h	2053;"	d
GL_MAP_INVALIDATE_RANGE_BIT	msvc/msvc-2010/GL/glext.h	2052;"	d
GL_MAP_READ_BIT	msvc/msvc-2010/GL/glext.h	2050;"	d
GL_MAP_TESSELLATION_NV	msvc/msvc-2010/GL/glext.h	4272;"	d
GL_MAP_UNSYNCHRONIZED_BIT	msvc/msvc-2010/GL/glext.h	2055;"	d
GL_MAP_WRITE_BIT	msvc/msvc-2010/GL/glext.h	2051;"	d
GL_MATERIAL_SIDE_HINT_PGI	msvc/msvc-2010/GL/glext.h	3554;"	d
GL_MATRIX0_ARB	msvc/msvc-2010/GL/glext.h	1691;"	d
GL_MATRIX0_NV	msvc/msvc-2010/GL/glext.h	4415;"	d
GL_MATRIX10_ARB	msvc/msvc-2010/GL/glext.h	1701;"	d
GL_MATRIX11_ARB	msvc/msvc-2010/GL/glext.h	1702;"	d
GL_MATRIX12_ARB	msvc/msvc-2010/GL/glext.h	1703;"	d
GL_MATRIX13_ARB	msvc/msvc-2010/GL/glext.h	1704;"	d
GL_MATRIX14_ARB	msvc/msvc-2010/GL/glext.h	1705;"	d
GL_MATRIX15_ARB	msvc/msvc-2010/GL/glext.h	1706;"	d
GL_MATRIX16_ARB	msvc/msvc-2010/GL/glext.h	1707;"	d
GL_MATRIX17_ARB	msvc/msvc-2010/GL/glext.h	1708;"	d
GL_MATRIX18_ARB	msvc/msvc-2010/GL/glext.h	1709;"	d
GL_MATRIX19_ARB	msvc/msvc-2010/GL/glext.h	1710;"	d
GL_MATRIX1_ARB	msvc/msvc-2010/GL/glext.h	1692;"	d
GL_MATRIX1_NV	msvc/msvc-2010/GL/glext.h	4416;"	d
GL_MATRIX20_ARB	msvc/msvc-2010/GL/glext.h	1711;"	d
GL_MATRIX21_ARB	msvc/msvc-2010/GL/glext.h	1712;"	d
GL_MATRIX22_ARB	msvc/msvc-2010/GL/glext.h	1713;"	d
GL_MATRIX23_ARB	msvc/msvc-2010/GL/glext.h	1714;"	d
GL_MATRIX24_ARB	msvc/msvc-2010/GL/glext.h	1715;"	d
GL_MATRIX25_ARB	msvc/msvc-2010/GL/glext.h	1716;"	d
GL_MATRIX26_ARB	msvc/msvc-2010/GL/glext.h	1717;"	d
GL_MATRIX27_ARB	msvc/msvc-2010/GL/glext.h	1718;"	d
GL_MATRIX28_ARB	msvc/msvc-2010/GL/glext.h	1719;"	d
GL_MATRIX29_ARB	msvc/msvc-2010/GL/glext.h	1720;"	d
GL_MATRIX2_ARB	msvc/msvc-2010/GL/glext.h	1693;"	d
GL_MATRIX2_NV	msvc/msvc-2010/GL/glext.h	4417;"	d
GL_MATRIX30_ARB	msvc/msvc-2010/GL/glext.h	1721;"	d
GL_MATRIX31_ARB	msvc/msvc-2010/GL/glext.h	1722;"	d
GL_MATRIX3_ARB	msvc/msvc-2010/GL/glext.h	1694;"	d
GL_MATRIX3_NV	msvc/msvc-2010/GL/glext.h	4418;"	d
GL_MATRIX4_ARB	msvc/msvc-2010/GL/glext.h	1695;"	d
GL_MATRIX4_NV	msvc/msvc-2010/GL/glext.h	4419;"	d
GL_MATRIX5_ARB	msvc/msvc-2010/GL/glext.h	1696;"	d
GL_MATRIX5_NV	msvc/msvc-2010/GL/glext.h	4420;"	d
GL_MATRIX6_ARB	msvc/msvc-2010/GL/glext.h	1697;"	d
GL_MATRIX6_NV	msvc/msvc-2010/GL/glext.h	4421;"	d
GL_MATRIX7_ARB	msvc/msvc-2010/GL/glext.h	1698;"	d
GL_MATRIX7_NV	msvc/msvc-2010/GL/glext.h	4422;"	d
GL_MATRIX8_ARB	msvc/msvc-2010/GL/glext.h	1699;"	d
GL_MATRIX9_ARB	msvc/msvc-2010/GL/glext.h	1700;"	d
GL_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	4725;"	d
GL_MATRIX_INDEX_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	1577;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	msvc/msvc-2010/GL/glext.h	1582;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1579;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	msvc/msvc-2010/GL/glext.h	1581;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1580;"	d
GL_MATRIX_PALETTE_ARB	msvc/msvc-2010/GL/glext.h	1573;"	d
GL_MATRIX_STRIDE	msvc/msvc-2010/GL/glext.h	2977;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	msvc/msvc-2010/GL/glext.h	3561;"	d
GL_MAT_AMBIENT_BIT_PGI	msvc/msvc-2010/GL/glext.h	3560;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	msvc/msvc-2010/GL/glext.h	3564;"	d
GL_MAT_DIFFUSE_BIT_PGI	msvc/msvc-2010/GL/glext.h	3562;"	d
GL_MAT_EMISSION_BIT_PGI	msvc/msvc-2010/GL/glext.h	3563;"	d
GL_MAT_SHININESS_BIT_PGI	msvc/msvc-2010/GL/glext.h	3565;"	d
GL_MAT_SPECULAR_BIT_PGI	msvc/msvc-2010/GL/glext.h	3566;"	d
GL_MAX	msvc/msvc-2010/GL/glext.h	106;"	d
GL_MAX	ps3/rgl/include/export/GLES/glext.h	106;"	d
GL_MAX_3D_TEXTURE_SIZE	msvc/msvc-2010/GL/glext.h	69;"	d
GL_MAX_3D_TEXTURE_SIZE	ps3/rgl/include/export/GLES/glext.h	113;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3114;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	msvc/msvc-2010/GL/glext.h	3222;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	msvc/msvc-2010/GL/glext.h	3683;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	msvc/msvc-2010/GL/glext.h	506;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	msvc/msvc-2010/GL/glext.h	5293;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	msvc/msvc-2010/GL/glext.h	3766;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	msvc/msvc-2010/GL/glext.h	3772;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	msvc/msvc-2010/GL/glext.h	3767;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	msvc/msvc-2010/GL/glext.h	3765;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	msvc/msvc-2010/GL/glext.h	2581;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	2580;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5400;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	msvc/msvc-2010/GL/glext.h	3353;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	msvc/msvc-2010/GL/glext.h	3354;"	d
GL_MAX_CLIP_DISTANCES	msvc/msvc-2010/GL/glext.h	493;"	d
GL_MAX_CLIP_PLANES	ps3/rgl/include/export/GLES/glext.h	257;"	d
GL_MAX_COLOR_ATTACHMENTS	msvc/msvc-2010/GL/glext.h	1973;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	msvc/msvc-2010/GL/glext.h	5088;"	d
GL_MAX_COLOR_ATTACHMENTS_OES	ps3/rgl/include/export/GLES/glext.h	287;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	msvc/msvc-2010/GL/glext.h	146;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	msvc/msvc-2010/GL/glext.h	3171;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	msvc/msvc-2010/GL/glext.h	2210;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2579;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2573;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2751;"	d
GL_MAX_COMBINED_DIMENSIONS	msvc/msvc-2010/GL/glext.h	2858;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2115;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2114;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2651;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	msvc/msvc-2010/GL/glext.h	2602;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	msvc/msvc-2010/GL/glext.h	5751;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	msvc/msvc-2010/GL/glext.h	3021;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3016;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2379;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2380;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	410;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1827;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2110;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2113;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2750;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2749;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2746;"	d
GL_MAX_COMPUTE_LOCAL_INVOCATIONS	msvc/msvc-2010/GL/glext.h	2752;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3015;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	msvc/msvc-2010/GL/glext.h	2747;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	2745;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2744;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2748;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	msvc/msvc-2010/GL/glext.h	2753;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	msvc/msvc-2010/GL/glext.h	2754;"	d
GL_MAX_CONVOLUTION_HEIGHT	msvc/msvc-2010/GL/glext.h	121;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	msvc/msvc-2010/GL/glext.h	3157;"	d
GL_MAX_CONVOLUTION_WIDTH	msvc/msvc-2010/GL/glext.h	120;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	msvc/msvc-2010/GL/glext.h	3156;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	msvc/msvc-2010/GL/glext.h	227;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1499;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3988;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	msvc/msvc-2010/GL/glext.h	2713;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	msvc/msvc-2010/GL/glext.h	2725;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	msvc/msvc-2010/GL/glext.h	5900;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	msvc/msvc-2010/GL/glext.h	2503;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	msvc/msvc-2010/GL/glext.h	2724;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	msvc/msvc-2010/GL/glext.h	5899;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	2502;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	msvc/msvc-2010/GL/glext.h	3488;"	d
GL_MAX_DEPTH	msvc/msvc-2010/GL/glext.h	2856;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	msvc/msvc-2010/GL/glext.h	2211;"	d
GL_MAX_DRAW_BUFFERS	msvc/msvc-2010/GL/glext.h	383;"	d
GL_MAX_DRAW_BUFFERS_ARB	msvc/msvc-2010/GL/glext.h	1854;"	d
GL_MAX_DRAW_BUFFERS_ATI	msvc/msvc-2010/GL/glext.h	4902;"	d
GL_MAX_DRAW_BUFFERS_ATI	ps3/rgl/include/export/GLES/glext.h	171;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	msvc/msvc-2010/GL/glext.h	2264;"	d
GL_MAX_ELEMENTS_INDICES	msvc/msvc-2010/GL/glext.h	80;"	d
GL_MAX_ELEMENTS_INDICES	ps3/rgl/include/export/GLES/gl.h	233;"	d
GL_MAX_ELEMENTS_INDICES_EXT	msvc/msvc-2010/GL/glext.h	3712;"	d
GL_MAX_ELEMENTS_VERTICES	msvc/msvc-2010/GL/glext.h	79;"	d
GL_MAX_ELEMENTS_VERTICES	ps3/rgl/include/export/GLES/gl.h	232;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	msvc/msvc-2010/GL/glext.h	3711;"	d
GL_MAX_ELEMENT_INDEX	msvc/msvc-2010/GL/glext.h	2800;"	d
GL_MAX_EXT	msvc/msvc-2010/GL/glext.h	3378;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	msvc/msvc-2010/GL/glext.h	3508;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2578;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2572;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	msvc/msvc-2010/GL/glext.h	5398;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2650;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	805;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	msvc/msvc-2010/GL/glext.h	2312;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5826;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	msvc/msvc-2010/GL/glext.h	3682;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	msvc/msvc-2010/GL/glext.h	4966;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3014;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2109;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	406;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	1834;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	msvc/msvc-2010/GL/glext.h	2422;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	msvc/msvc-2010/GL/glext.h	2817;"	d
GL_MAX_FRAMEBUFFER_LAYERS	msvc/msvc-2010/GL/glext.h	2818;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	msvc/msvc-2010/GL/glext.h	2819;"	d
GL_MAX_FRAMEBUFFER_WIDTH	msvc/msvc-2010/GL/glext.h	2816;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	msvc/msvc-2010/GL/glext.h	3473;"	d
GL_MAX_GENERAL_COMBINERS_NV	msvc/msvc-2010/GL/glext.h	4079;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2577;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2571;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	msvc/msvc-2010/GL/glext.h	5399;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2649;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	803;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	804;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	msvc/msvc-2010/GL/glext.h	800;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	msvc/msvc-2010/GL/glext.h	2035;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	msvc/msvc-2010/GL/glext.h	5232;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	msvc/msvc-2010/GL/glext.h	5824;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	msvc/msvc-2010/GL/glext.h	2310;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3011;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	792;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	msvc/msvc-2010/GL/glext.h	2024;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	msvc/msvc-2010/GL/glext.h	5214;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	801;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	2036;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5233;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2108;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	799;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	2034;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5231;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	2032;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5228;"	d
GL_MAX_HEIGHT	msvc/msvc-2010/GL/glext.h	2855;"	d
GL_MAX_IMAGE_SAMPLES	msvc/msvc-2010/GL/glext.h	2641;"	d
GL_MAX_IMAGE_SAMPLES_EXT	msvc/msvc-2010/GL/glext.h	5790;"	d
GL_MAX_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	2601;"	d
GL_MAX_IMAGE_UNITS_EXT	msvc/msvc-2010/GL/glext.h	5750;"	d
GL_MAX_INTEGER_SAMPLES	msvc/msvc-2010/GL/glext.h	2212;"	d
GL_MAX_LABEL_LENGTH	msvc/msvc-2010/GL/glext.h	2723;"	d
GL_MAX_LAYERS	msvc/msvc-2010/GL/glext.h	2857;"	d
GL_MAX_LIGHTS	ps3/rgl/include/export/GLES/gl.h	226;"	d
GL_MAX_MAP_TESSELLATION_NV	msvc/msvc-2010/GL/glext.h	4292;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	msvc/msvc-2010/GL/glext.h	1574;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	ps3/rgl/include/export/GLES/gl.h	228;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	msvc/msvc-2010/GL/glext.h	5339;"	d
GL_MAX_NAME_LENGTH	msvc/msvc-2010/GL/glext.h	2968;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	msvc/msvc-2010/GL/glext.h	2969;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	msvc/msvc-2010/GL/glext.h	2970;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	msvc/msvc-2010/GL/glext.h	4735;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4738;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	msvc/msvc-2010/GL/glext.h	4739;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	msvc/msvc-2010/GL/glext.h	4737;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4736;"	d
GL_MAX_PALETTE_MATRICES_ARB	msvc/msvc-2010/GL/glext.h	1575;"	d
GL_MAX_PATCH_VERTICES	msvc/msvc-2010/GL/glext.h	2365;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	3799;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	msvc/msvc-2010/GL/glext.h	4639;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	msvc/msvc-2010/GL/glext.h	1684;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1733;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	msvc/msvc-2010/GL/glext.h	1680;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5197;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	msvc/msvc-2010/GL/glext.h	5055;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1688;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	msvc/msvc-2010/GL/glext.h	5054;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5199;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	msvc/msvc-2010/GL/glext.h	5200;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	msvc/msvc-2010/GL/glext.h	5056;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1668;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1687;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	msvc/msvc-2010/GL/glext.h	5058;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	msvc/msvc-2010/GL/glext.h	5057;"	d
GL_MAX_PROGRAM_MATRICES_ARB	msvc/msvc-2010/GL/glext.h	1654;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	msvc/msvc-2010/GL/glext.h	1653;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	msvc/msvc-2010/GL/glext.h	1686;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1736;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	msvc/msvc-2010/GL/glext.h	1682;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1670;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1678;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	msvc/msvc-2010/GL/glext.h	1674;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	msvc/msvc-2010/GL/glext.h	1738;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1737;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	msvc/msvc-2010/GL/glext.h	5209;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1676;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	msvc/msvc-2010/GL/glext.h	5352;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	msvc/msvc-2010/GL/glext.h	5353;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5873;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5198;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	msvc/msvc-2010/GL/glext.h	5831;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	msvc/msvc-2010/GL/glext.h	5830;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	msvc/msvc-2010/GL/glext.h	1672;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	msvc/msvc-2010/GL/glext.h	508;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5194;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	2240;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	msvc/msvc-2010/GL/glext.h	894;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	msvc/msvc-2010/GL/glext.h	2239;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5829;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	msvc/msvc-2010/GL/glext.h	1735;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1734;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5210;"	d
GL_MAX_PROJECTION_STACK_DEPTH	ps3/rgl/include/export/GLES/gl.h	229;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	msvc/msvc-2010/GL/glext.h	4293;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	msvc/msvc-2010/GL/glext.h	731;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1877;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	msvc/msvc-2010/GL/glext.h	4312;"	d
GL_MAX_RENDERBUFFER_SIZE	msvc/msvc-2010/GL/glext.h	1944;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5072;"	d
GL_MAX_RENDERBUFFER_SIZE_OES	ps3/rgl/include/export/GLES/glext.h	272;"	d
GL_MAX_SAMPLES	msvc/msvc-2010/GL/glext.h	2008;"	d
GL_MAX_SAMPLES_EXT	msvc/msvc-2010/GL/glext.h	5168;"	d
GL_MAX_SAMPLE_MASK_WORDS	msvc/msvc-2010/GL/glext.h	2195;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	msvc/msvc-2010/GL/glext.h	5520;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	msvc/msvc-2010/GL/glext.h	2174;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5705;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	msvc/msvc-2010/GL/glext.h	3018;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	msvc/msvc-2010/GL/glext.h	3017;"	d
GL_MAX_SHININESS_NV	msvc/msvc-2010/GL/glext.h	4026;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	msvc/msvc-2010/GL/glext.h	6134;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	msvc/msvc-2010/GL/glext.h	6135;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	msvc/msvc-2010/GL/glext.h	6133;"	d
GL_MAX_SPOT_EXPONENT_NV	msvc/msvc-2010/GL/glext.h	4027;"	d
GL_MAX_SUBROUTINES	msvc/msvc-2010/GL/glext.h	2339;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	msvc/msvc-2010/GL/glext.h	2340;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2575;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2569;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2647;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	2377;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	2371;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3012;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	2369;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	2373;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2375;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2367;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2576;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2570;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2648;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	2378;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	2374;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3013;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	2370;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2376;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	2368;"	d
GL_MAX_TESS_GEN_LEVEL	msvc/msvc-2010/GL/glext.h	2366;"	d
GL_MAX_TESS_PATCH_COMPONENTS	msvc/msvc-2010/GL/glext.h	2372;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	725;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	msvc/msvc-2010/GL/glext.h	2060;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5300;"	d
GL_MAX_TEXTURE_COORDS	msvc/msvc-2010/GL/glext.h	454;"	d
GL_MAX_TEXTURE_COORDS_ARB	msvc/msvc-2010/GL/glext.h	1739;"	d
GL_MAX_TEXTURE_COORDS_NV	msvc/msvc-2010/GL/glext.h	4968;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	403;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1740;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	ps3/rgl/include/export/GLES/glext.h	167;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	msvc/msvc-2010/GL/glext.h	4969;"	d
GL_MAX_TEXTURE_LOD_BIAS	msvc/msvc-2010/GL/glext.h	285;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3999;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	msvc/msvc-2010/GL/glext.h	4006;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	ps3/rgl/include/export/GLES/glext.h	249;"	d
GL_MAX_TEXTURE_SIZE	ps3/rgl/include/export/GLES/gl.h	227;"	d
GL_MAX_TEXTURE_STACK_DEPTH	ps3/rgl/include/export/GLES/gl.h	230;"	d
GL_MAX_TEXTURE_UNITS	msvc/msvc-2010/GL/glext.h	237;"	d
GL_MAX_TEXTURE_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1462;"	d
GL_MAX_TRACK_MATRICES_NV	msvc/msvc-2010/GL/glext.h	4414;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	msvc/msvc-2010/GL/glext.h	4413;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	msvc/msvc-2010/GL/glext.h	2403;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	msvc/msvc-2010/GL/glext.h	532;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5484;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5382;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	msvc/msvc-2010/GL/glext.h	533;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	msvc/msvc-2010/GL/glext.h	5485;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5383;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	msvc/msvc-2010/GL/glext.h	525;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5486;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5372;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	msvc/msvc-2010/GL/glext.h	2112;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	msvc/msvc-2010/GL/glext.h	2111;"	d
GL_MAX_UNIFORM_LOCATIONS	msvc/msvc-2010/GL/glext.h	2804;"	d
GL_MAX_VARYING_COMPONENTS	msvc/msvc-2010/GL/glext.h	511;"	d
GL_MAX_VARYING_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5230;"	d
GL_MAX_VARYING_FLOATS	msvc/msvc-2010/GL/glext.h	408;"	d
GL_MAX_VARYING_FLOATS_ARB	msvc/msvc-2010/GL/glext.h	1825;"	d
GL_MAX_VARYING_VECTORS	msvc/msvc-2010/GL/glext.h	2421;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	msvc/msvc-2010/GL/glext.h	4034;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	msvc/msvc-2010/GL/glext.h	2574;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	msvc/msvc-2010/GL/glext.h	2568;"	d
GL_MAX_VERTEX_ATTRIBS	msvc/msvc-2010/GL/glext.h	401;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	msvc/msvc-2010/GL/glext.h	1662;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	msvc/msvc-2010/GL/glext.h	2781;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	msvc/msvc-2010/GL/glext.h	2780;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	msvc/msvc-2010/GL/glext.h	5397;"	d
GL_MAX_VERTEX_HINT_PGI	msvc/msvc-2010/GL/glext.h	3555;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2646;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	msvc/msvc-2010/GL/glext.h	802;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	msvc/msvc-2010/GL/glext.h	4730;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4732;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	msvc/msvc-2010/GL/glext.h	4734;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	msvc/msvc-2010/GL/glext.h	4733;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	msvc/msvc-2010/GL/glext.h	3010;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4731;"	d
GL_MAX_VERTEX_STREAMS	msvc/msvc-2010/GL/glext.h	2404;"	d
GL_MAX_VERTEX_STREAMS_ATI	msvc/msvc-2010/GL/glext.h	4774;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	msvc/msvc-2010/GL/glext.h	409;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1826;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	msvc/msvc-2010/GL/glext.h	2107;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	msvc/msvc-2010/GL/glext.h	407;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	1824;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	msvc/msvc-2010/GL/glext.h	2420;"	d
GL_MAX_VERTEX_UNITS_ARB	msvc/msvc-2010/GL/glext.h	1528;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	msvc/msvc-2010/GL/glext.h	2033;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5229;"	d
GL_MAX_VIEWPORTS	msvc/msvc-2010/GL/glext.h	2469;"	d
GL_MAX_VIEWPORT_DIMS	ps3/rgl/include/export/GLES/gl.h	231;"	d
GL_MAX_WIDTH	msvc/msvc-2010/GL/glext.h	2854;"	d
GL_MEDIUM_FLOAT	msvc/msvc-2010/GL/glext.h	2412;"	d
GL_MEDIUM_INT	msvc/msvc-2010/GL/glext.h	2415;"	d
GL_MESAX_texture_stack	msvc/msvc-2010/GL/glext.h	11154;"	d
GL_MESA_pack_invert	msvc/msvc-2010/GL/glext.h	11046;"	d
GL_MESA_resize_buffers	msvc/msvc-2010/GL/glext.h	9966;"	d
GL_MESA_window_pos	msvc/msvc-2010/GL/glext.h	9974;"	d
GL_MESA_ycbcr_texture	msvc/msvc-2010/GL/glext.h	11050;"	d
GL_MIN	msvc/msvc-2010/GL/glext.h	105;"	d
GL_MIN	ps3/rgl/include/export/GLES/glext.h	105;"	d
GL_MINMAX	msvc/msvc-2010/GL/glext.h	140;"	d
GL_MINMAX_EXT	msvc/msvc-2010/GL/glext.h	3139;"	d
GL_MINMAX_FORMAT	msvc/msvc-2010/GL/glext.h	141;"	d
GL_MINMAX_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	3140;"	d
GL_MINMAX_SINK	msvc/msvc-2010/GL/glext.h	142;"	d
GL_MINMAX_SINK_EXT	msvc/msvc-2010/GL/glext.h	3141;"	d
GL_MINOR_VERSION	msvc/msvc-2010/GL/glext.h	495;"	d
GL_MIN_EXT	msvc/msvc-2010/GL/glext.h	3377;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	msvc/msvc-2010/GL/glext.h	2311;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5825;"	d
GL_MIN_LOD_WARNING_AMD	msvc/msvc-2010/GL/glext.h	6137;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	msvc/msvc-2010/GL/glext.h	2552;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	msvc/msvc-2010/GL/glext.h	507;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5193;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	msvc/msvc-2010/GL/glext.h	893;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	msvc/msvc-2010/GL/glext.h	2238;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5828;"	d
GL_MIN_SAMPLE_SHADING_VALUE	msvc/msvc-2010/GL/glext.h	892;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	msvc/msvc-2010/GL/glext.h	2224;"	d
GL_MIN_SPARSE_LEVEL_AMD	msvc/msvc-2010/GL/glext.h	6136;"	d
GL_MIPMAP	msvc/msvc-2010/GL/glext.h	2875;"	d
GL_MIRRORED_REPEAT	msvc/msvc-2010/GL/glext.h	284;"	d
GL_MIRRORED_REPEAT	ps3/rgl/include/export/GLES/glext.h	149;"	d
GL_MIRRORED_REPEAT_ARB	msvc/msvc-2010/GL/glext.h	1619;"	d
GL_MIRRORED_REPEAT_IBM	msvc/msvc-2010/GL/glext.h	4266;"	d
GL_MIRROR_CLAMP_ATI	msvc/msvc-2010/GL/glext.h	4255;"	d
GL_MIRROR_CLAMP_EXT	msvc/msvc-2010/GL/glext.h	5023;"	d
GL_MIRROR_CLAMP_EXT	ps3/rgl/include/export/GLES/glext.h	150;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	msvc/msvc-2010/GL/glext.h	5025;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	ps3/rgl/include/export/GLES/glext.h	152;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	msvc/msvc-2010/GL/glext.h	4256;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	msvc/msvc-2010/GL/glext.h	5024;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	ps3/rgl/include/export/GLES/glext.h	151;"	d
GL_MITER_REVERT_NV	msvc/msvc-2010/GL/glext.h	6018;"	d
GL_MITER_TRUNCATE_NV	msvc/msvc-2010/GL/glext.h	6019;"	d
GL_MODELVIEW	ps3/rgl/include/export/GLES/gl.h	304;"	d
GL_MODELVIEW0_ARB	msvc/msvc-2010/GL/glext.h	1538;"	d
GL_MODELVIEW0_EXT	msvc/msvc-2010/GL/glext.h	4015;"	d
GL_MODELVIEW0_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	4012;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	4010;"	d
GL_MODELVIEW10_ARB	msvc/msvc-2010/GL/glext.h	1548;"	d
GL_MODELVIEW11_ARB	msvc/msvc-2010/GL/glext.h	1549;"	d
GL_MODELVIEW12_ARB	msvc/msvc-2010/GL/glext.h	1550;"	d
GL_MODELVIEW13_ARB	msvc/msvc-2010/GL/glext.h	1551;"	d
GL_MODELVIEW14_ARB	msvc/msvc-2010/GL/glext.h	1552;"	d
GL_MODELVIEW15_ARB	msvc/msvc-2010/GL/glext.h	1553;"	d
GL_MODELVIEW16_ARB	msvc/msvc-2010/GL/glext.h	1554;"	d
GL_MODELVIEW17_ARB	msvc/msvc-2010/GL/glext.h	1555;"	d
GL_MODELVIEW18_ARB	msvc/msvc-2010/GL/glext.h	1556;"	d
GL_MODELVIEW19_ARB	msvc/msvc-2010/GL/glext.h	1557;"	d
GL_MODELVIEW1_ARB	msvc/msvc-2010/GL/glext.h	1539;"	d
GL_MODELVIEW1_EXT	msvc/msvc-2010/GL/glext.h	4016;"	d
GL_MODELVIEW1_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	4013;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	4011;"	d
GL_MODELVIEW20_ARB	msvc/msvc-2010/GL/glext.h	1558;"	d
GL_MODELVIEW21_ARB	msvc/msvc-2010/GL/glext.h	1559;"	d
GL_MODELVIEW22_ARB	msvc/msvc-2010/GL/glext.h	1560;"	d
GL_MODELVIEW23_ARB	msvc/msvc-2010/GL/glext.h	1561;"	d
GL_MODELVIEW24_ARB	msvc/msvc-2010/GL/glext.h	1562;"	d
GL_MODELVIEW25_ARB	msvc/msvc-2010/GL/glext.h	1563;"	d
GL_MODELVIEW26_ARB	msvc/msvc-2010/GL/glext.h	1564;"	d
GL_MODELVIEW27_ARB	msvc/msvc-2010/GL/glext.h	1565;"	d
GL_MODELVIEW28_ARB	msvc/msvc-2010/GL/glext.h	1566;"	d
GL_MODELVIEW29_ARB	msvc/msvc-2010/GL/glext.h	1567;"	d
GL_MODELVIEW2_ARB	msvc/msvc-2010/GL/glext.h	1540;"	d
GL_MODELVIEW30_ARB	msvc/msvc-2010/GL/glext.h	1568;"	d
GL_MODELVIEW31_ARB	msvc/msvc-2010/GL/glext.h	1569;"	d
GL_MODELVIEW3_ARB	msvc/msvc-2010/GL/glext.h	1541;"	d
GL_MODELVIEW4_ARB	msvc/msvc-2010/GL/glext.h	1542;"	d
GL_MODELVIEW5_ARB	msvc/msvc-2010/GL/glext.h	1543;"	d
GL_MODELVIEW6_ARB	msvc/msvc-2010/GL/glext.h	1544;"	d
GL_MODELVIEW7_ARB	msvc/msvc-2010/GL/glext.h	1545;"	d
GL_MODELVIEW8_ARB	msvc/msvc-2010/GL/glext.h	1546;"	d
GL_MODELVIEW9_ARB	msvc/msvc-2010/GL/glext.h	1547;"	d
GL_MODELVIEW_MATRIX	ps3/rgl/include/export/GLES/glext.h	164;"	d
GL_MODELVIEW_PROJECTION_NV	msvc/msvc-2010/GL/glext.h	4408;"	d
GL_MODULATE	ps3/rgl/include/export/GLES/gl.h	364;"	d
GL_MODULATE_ADD_ATI	msvc/msvc-2010/GL/glext.h	4927;"	d
GL_MODULATE_SIGNED_ADD_ATI	msvc/msvc-2010/GL/glext.h	4928;"	d
GL_MODULATE_SUBTRACT_ATI	msvc/msvc-2010/GL/glext.h	4929;"	d
GL_MODULO_SCE	ps3/rgl/include/export/GLES/glext.h	240;"	d
GL_MOVE_TO_CONTINUES_NV	msvc/msvc-2010/GL/glext.h	6039;"	d
GL_MOVE_TO_NV	msvc/msvc-2010/GL/glext.h	6041;"	d
GL_MOVE_TO_RESETS_NV	msvc/msvc-2010/GL/glext.h	6038;"	d
GL_MOV_ATI	msvc/msvc-2010/GL/glext.h	4596;"	d
GL_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	210;"	d
GL_MULTISAMPLE	ps3/rgl/include/export/GLES/gl.h	189;"	d
GL_MULTISAMPLE_3DFX	msvc/msvc-2010/GL/glext.h	4188;"	d
GL_MULTISAMPLE_ARB	msvc/msvc-2010/GL/glext.h	1473;"	d
GL_MULTISAMPLE_BIT	msvc/msvc-2010/GL/glext.h	242;"	d
GL_MULTISAMPLE_BIT_3DFX	msvc/msvc-2010/GL/glext.h	4191;"	d
GL_MULTISAMPLE_BIT_ARB	msvc/msvc-2010/GL/glext.h	1481;"	d
GL_MULTISAMPLE_BIT_EXT	msvc/msvc-2010/GL/glext.h	4214;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	msvc/msvc-2010/GL/glext.h	5340;"	d
GL_MULTISAMPLE_EXT	msvc/msvc-2010/GL/glext.h	4198;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	msvc/msvc-2010/GL/glext.h	4802;"	d
GL_MULTISAMPLE_SGIS	msvc/msvc-2010/GL/glext.h	3280;"	d
GL_MULTISAMPLING_2X_DIAGONAL_CENTERED_SCE	ps3/rgl/include/export/GLES/glext.h	353;"	d
GL_MULTISAMPLING_4X_SQUARE_CENTERED_SCE	ps3/rgl/include/export/GLES/glext.h	354;"	d
GL_MULTISAMPLING_4X_SQUARE_ROTATED_SCE	ps3/rgl/include/export/GLES/glext.h	355;"	d
GL_MULTISAMPLING_NONE_SCE	ps3/rgl/include/export/GLES/glext.h	352;"	d
GL_MULTI_HULLS_NV	msvc/msvc-2010/GL/glext.h	5991;"	d
GL_MUL_ATI	msvc/msvc-2010/GL/glext.h	4598;"	d
GL_MVP_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	4760;"	d
GL_NAMED_STRING_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	2248;"	d
GL_NAMED_STRING_TYPE_ARB	msvc/msvc-2010/GL/glext.h	2249;"	d
GL_NAME_LENGTH	msvc/msvc-2010/GL/glext.h	2971;"	d
GL_NAND	ps3/rgl/include/export/GLES/gl.h	289;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	msvc/msvc-2010/GL/glext.h	3581;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	msvc/msvc-2010/GL/glext.h	3582;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	msvc/msvc-2010/GL/glext.h	3580;"	d
GL_NEAREST	ps3/rgl/include/export/GLES/gl.h	378;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	msvc/msvc-2010/GL/glext.h	3356;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	msvc/msvc-2010/GL/glext.h	3355;"	d
GL_NEAREST_MIPMAP_LINEAR	ps3/rgl/include/export/GLES/gl.h	386;"	d
GL_NEAREST_MIPMAP_NEAREST	ps3/rgl/include/export/GLES/gl.h	384;"	d
GL_NEGATE_BIT_ATI	msvc/msvc-2010/GL/glext.h	4633;"	d
GL_NEGATIVE_ONE_EXT	msvc/msvc-2010/GL/glext.h	4756;"	d
GL_NEGATIVE_W_EXT	msvc/msvc-2010/GL/glext.h	4753;"	d
GL_NEGATIVE_X_EXT	msvc/msvc-2010/GL/glext.h	4750;"	d
GL_NEGATIVE_Y_EXT	msvc/msvc-2010/GL/glext.h	4751;"	d
GL_NEGATIVE_Z_EXT	msvc/msvc-2010/GL/glext.h	4752;"	d
GL_NEVER	ps3/rgl/include/export/GLES/gl.h	104;"	d
GL_NEXT_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5389;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	msvc/msvc-2010/GL/glext.h	5666;"	d
GL_NICEST	ps3/rgl/include/export/GLES/gl.h	241;"	d
GL_NONE	ps3/rgl/include/export/GLES/glext.h	141;"	d
GL_NOOP	ps3/rgl/include/export/GLES/gl.h	280;"	d
GL_NOR	ps3/rgl/include/export/GLES/gl.h	283;"	d
GL_NORMALIZE	ps3/rgl/include/export/GLES/gl.h	182;"	d
GL_NORMALIZED_RANGE_EXT	msvc/msvc-2010/GL/glext.h	4757;"	d
GL_NORMAL_ARRAY	ps3/rgl/include/export/GLES/gl.h	186;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5713;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	347;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1751;"	d
GL_NORMAL_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3315;"	d
GL_NORMAL_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3304;"	d
GL_NORMAL_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5723;"	d
GL_NORMAL_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4143;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4151;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	msvc/msvc-2010/GL/glext.h	3781;"	d
GL_NORMAL_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3330;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3314;"	d
GL_NORMAL_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3313;"	d
GL_NORMAL_BIT_PGI	msvc/msvc-2010/GL/glext.h	3567;"	d
GL_NORMAL_MAP	msvc/msvc-2010/GL/glext.h	243;"	d
GL_NORMAL_MAP	ps3/rgl/include/export/GLES/glext.h	84;"	d
GL_NORMAL_MAP_ARB	msvc/msvc-2010/GL/glext.h	1488;"	d
GL_NORMAL_MAP_EXT	msvc/msvc-2010/GL/glext.h	3977;"	d
GL_NORMAL_MAP_NV	msvc/msvc-2010/GL/glext.h	3972;"	d
GL_NOTEQUAL	ps3/rgl/include/export/GLES/gl.h	109;"	d
GL_NO_ERROR	ps3/rgl/include/export/GLES/gl.h	195;"	d
GL_NO_RESET_NOTIFICATION_ARB	msvc/msvc-2010/GL/glext.h	2518;"	d
GL_NUM_ACTIVE_VARIABLES	msvc/msvc-2010/GL/glext.h	2982;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	msvc/msvc-2010/GL/glext.h	2341;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	msvc/msvc-2010/GL/glext.h	233;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	ps3/rgl/include/export/GLES/gl.h	234;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	msvc/msvc-2010/GL/glext.h	1512;"	d
GL_NUM_EXTENSIONS	msvc/msvc-2010/GL/glext.h	496;"	d
GL_NUM_FILL_STREAMS_NV	msvc/msvc-2010/GL/glext.h	5469;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	msvc/msvc-2010/GL/glext.h	4609;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	msvc/msvc-2010/GL/glext.h	4608;"	d
GL_NUM_GENERAL_COMBINERS_NV	msvc/msvc-2010/GL/glext.h	4080;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	msvc/msvc-2010/GL/glext.h	4613;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	msvc/msvc-2010/GL/glext.h	4611;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	msvc/msvc-2010/GL/glext.h	4612;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	msvc/msvc-2010/GL/glext.h	4614;"	d
GL_NUM_PASSES_ATI	msvc/msvc-2010/GL/glext.h	4610;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	msvc/msvc-2010/GL/glext.h	2429;"	d
GL_NUM_SAMPLE_COUNTS	msvc/msvc-2010/GL/glext.h	2548;"	d
GL_NUM_SHADER_BINARY_FORMATS	msvc/msvc-2010/GL/glext.h	2419;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	msvc/msvc-2010/GL/glext.h	1144;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	msvc/msvc-2010/GL/glext.h	5665;"	d
GL_NV_bindless_texture	msvc/msvc-2010/GL/glext.h	12686;"	d
GL_NV_blend_square	msvc/msvc-2010/GL/glext.h	9958;"	d
GL_NV_conditional_render	msvc/msvc-2010/GL/glext.h	11496;"	d
GL_NV_copy_depth_to_color	msvc/msvc-2010/GL/glext.h	10378;"	d
GL_NV_copy_image	msvc/msvc-2010/GL/glext.h	12162;"	d
GL_NV_depth_buffer_float	msvc/msvc-2010/GL/glext.h	11366;"	d
GL_NV_depth_clamp	msvc/msvc-2010/GL/glext.h	10684;"	d
GL_NV_evaluators	msvc/msvc-2010/GL/glext.h	10166;"	d
GL_NV_explicit_multisample	msvc/msvc-2010/GL/glext.h	11970;"	d
GL_NV_fence	msvc/msvc-2010/GL/glext.h	10146;"	d
GL_NV_float_buffer	msvc/msvc-2010/GL/glext.h	10841;"	d
GL_NV_fog_distance	msvc/msvc-2010/GL/glext.h	9950;"	d
GL_NV_fragment_program	msvc/msvc-2010/GL/glext.h	10845;"	d
GL_NV_fragment_program2	msvc/msvc-2010/GL/glext.h	11062;"	d
GL_NV_fragment_program4	msvc/msvc-2010/GL/glext.h	11378;"	d
GL_NV_fragment_program_option	msvc/msvc-2010/GL/glext.h	11058;"	d
GL_NV_framebuffer_multisample_coverage	msvc/msvc-2010/GL/glext.h	11382;"	d
GL_NV_geometry_program4	msvc/msvc-2010/GL/glext.h	11226;"	d
GL_NV_geometry_shader4	msvc/msvc-2010/GL/glext.h	11394;"	d
GL_NV_gpu_program4	msvc/msvc-2010/GL/glext.h	11188;"	d
GL_NV_gpu_program5	msvc/msvc-2010/GL/glext.h	12308;"	d
GL_NV_gpu_shader5	msvc/msvc-2010/GL/glext.h	12318;"	d
GL_NV_half_float	msvc/msvc-2010/GL/glext.h	10864;"	d
GL_NV_light_max_exponent	msvc/msvc-2010/GL/glext.h	9904;"	d
GL_NV_multisample_coverage	msvc/msvc-2010/GL/glext.h	12442;"	d
GL_NV_multisample_filter_hint	msvc/msvc-2010/GL/glext.h	10680;"	d
GL_NV_occlusion_query	msvc/msvc-2010/GL/glext.h	10688;"	d
GL_NV_packed_depth_stencil	msvc/msvc-2010/GL/glext.h	10190;"	d
GL_NV_parameter_buffer_object	msvc/msvc-2010/GL/glext.h	11398;"	d
GL_NV_parameter_buffer_object2	msvc/msvc-2010/GL/glext.h	12182;"	d
GL_NV_path_rendering	msvc/msvc-2010/GL/glext.h	12562;"	d
GL_NV_pixel_data_range	msvc/msvc-2010/GL/glext.h	10962;"	d
GL_NV_point_sprite	msvc/msvc-2010/GL/glext.h	10708;"	d
GL_NV_present_video	msvc/msvc-2010/GL/glext.h	11506;"	d
GL_NV_primitive_restart	msvc/msvc-2010/GL/glext.h	10972;"	d
GL_NV_register_combiners	msvc/msvc-2010/GL/glext.h	9918;"	d
GL_NV_register_combiners2	msvc/msvc-2010/GL/glext.h	10194;"	d
GL_NV_shader_atomic_float	msvc/msvc-2010/GL/glext.h	12718;"	d
GL_NV_shader_buffer_load	msvc/msvc-2010/GL/glext.h	12186;"	d
GL_NV_shader_buffer_store	msvc/msvc-2010/GL/glext.h	12390;"	d
GL_NV_tessellation_program5	msvc/msvc-2010/GL/glext.h	12394;"	d
GL_NV_texgen_emboss	msvc/msvc-2010/GL/glext.h	9954;"	d
GL_NV_texgen_reflection	msvc/msvc-2010/GL/glext.h	9872;"	d
GL_NV_texture_barrier	msvc/msvc-2010/GL/glext.h	12250;"	d
GL_NV_texture_compression_vtc	msvc/msvc-2010/GL/glext.h	10204;"	d
GL_NV_texture_env_combine4	msvc/msvc-2010/GL/glext.h	9962;"	d
GL_NV_texture_expand_normal	msvc/msvc-2010/GL/glext.h	10982;"	d
GL_NV_texture_multisample	msvc/msvc-2010/GL/glext.h	12510;"	d
GL_NV_texture_rectangle	msvc/msvc-2010/GL/glext.h	10208;"	d
GL_NV_texture_shader	msvc/msvc-2010/GL/glext.h	10212;"	d
GL_NV_texture_shader2	msvc/msvc-2010/GL/glext.h	10216;"	d
GL_NV_texture_shader3	msvc/msvc-2010/GL/glext.h	10718;"	d
GL_NV_transform_feedback	msvc/msvc-2010/GL/glext.h	11428;"	d
GL_NV_transform_feedback2	msvc/msvc-2010/GL/glext.h	11982;"	d
GL_NV_vdpau_interop	msvc/msvc-2010/GL/glext.h	12472;"	d
GL_NV_vertex_array_range	msvc/msvc-2010/GL/glext.h	9908;"	d
GL_NV_vertex_array_range2	msvc/msvc-2010/GL/glext.h	10220;"	d
GL_NV_vertex_attrib_integer_64bit	msvc/msvc-2010/GL/glext.h	12398;"	d
GL_NV_vertex_buffer_unified_memory	msvc/msvc-2010/GL/glext.h	12220;"	d
GL_NV_vertex_program	msvc/msvc-2010/GL/glext.h	10224;"	d
GL_NV_vertex_program1_1	msvc/msvc-2010/GL/glext.h	10722;"	d
GL_NV_vertex_program2	msvc/msvc-2010/GL/glext.h	10986;"	d
GL_NV_vertex_program2_option	msvc/msvc-2010/GL/glext.h	11066;"	d
GL_NV_vertex_program3	msvc/msvc-2010/GL/glext.h	11070;"	d
GL_NV_vertex_program4	msvc/msvc-2010/GL/glext.h	11248;"	d
GL_NV_video_capture	msvc/msvc-2010/GL/glext.h	12132;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	msvc/msvc-2010/GL/glext.h	1828;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	1829;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	msvc/msvc-2010/GL/glext.h	1817;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	1818;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	msvc/msvc-2010/GL/glext.h	1816;"	d
GL_OBJECT_BUFFER_SIZE_ATI	msvc/msvc-2010/GL/glext.h	4654;"	d
GL_OBJECT_BUFFER_USAGE_ATI	msvc/msvc-2010/GL/glext.h	4655;"	d
GL_OBJECT_COMPILE_STATUS_ARB	msvc/msvc-2010/GL/glext.h	1812;"	d
GL_OBJECT_DELETE_STATUS_ARB	msvc/msvc-2010/GL/glext.h	1811;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	msvc/msvc-2010/GL/glext.h	4238;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	msvc/msvc-2010/GL/glext.h	4236;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	1815;"	d
GL_OBJECT_LINEAR	ps3/rgl/include/export/GLES/glext.h	82;"	d
GL_OBJECT_LINE_SGIS	msvc/msvc-2010/GL/glext.h	4242;"	d
GL_OBJECT_LINK_STATUS_ARB	msvc/msvc-2010/GL/glext.h	1813;"	d
GL_OBJECT_PLANE	ps3/rgl/include/export/GLES/glext.h	90;"	d
GL_OBJECT_POINT_SGIS	msvc/msvc-2010/GL/glext.h	4240;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	1819;"	d
GL_OBJECT_SUBTYPE_ARB	msvc/msvc-2010/GL/glext.h	1789;"	d
GL_OBJECT_TYPE	msvc/msvc-2010/GL/glext.h	2175;"	d
GL_OBJECT_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1788;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	msvc/msvc-2010/GL/glext.h	1814;"	d
GL_OCCLUSION_TEST_HP	msvc/msvc-2010/GL/glext.h	3787;"	d
GL_OCCLUSION_TEST_RESULT_HP	msvc/msvc-2010/GL/glext.h	3788;"	d
GL_OES_VERSION_1_0	ps3/rgl/include/export/GLES/gl.h	81;"	d
GL_OES_compressed_paletted_texture	ps3/rgl/include/export/GLES/gl.h	83;"	d
GL_OES_read_format	msvc/msvc-2010/GL/glext.h	11022;"	d
GL_OES_read_format	ps3/rgl/include/export/GLES/gl.h	82;"	d
GL_OFFSET	msvc/msvc-2010/GL/glext.h	2974;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4829;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4830;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4827;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4828;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4823;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	msvc/msvc-2010/GL/glext.h	4824;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4825;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	msvc/msvc-2010/GL/glext.h	4826;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	msvc/msvc-2010/GL/glext.h	4332;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	msvc/msvc-2010/GL/glext.h	4330;"	d
GL_OFFSET_TEXTURE_2D_NV	msvc/msvc-2010/GL/glext.h	4337;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	msvc/msvc-2010/GL/glext.h	4331;"	d
GL_OFFSET_TEXTURE_BIAS_NV	msvc/msvc-2010/GL/glext.h	4329;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	msvc/msvc-2010/GL/glext.h	4327;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4316;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	msvc/msvc-2010/GL/glext.h	4317;"	d
GL_OFFSET_TEXTURE_SCALE_NV	msvc/msvc-2010/GL/glext.h	4328;"	d
GL_OML_interlace	msvc/msvc-2010/GL/glext.h	10366;"	d
GL_OML_resample	msvc/msvc-2010/GL/glext.h	10374;"	d
GL_OML_subsample	msvc/msvc-2010/GL/glext.h	10370;"	d
GL_ONE	ps3/rgl/include/export/GLES/gl.h	115;"	d
GL_ONE_EXT	msvc/msvc-2010/GL/glext.h	4755;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	msvc/msvc-2010/GL/glext.h	102;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	ps3/rgl/include/export/GLES/glext.h	102;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3049;"	d
GL_ONE_MINUS_CONSTANT_COLOR	msvc/msvc-2010/GL/glext.h	100;"	d
GL_ONE_MINUS_CONSTANT_COLOR	ps3/rgl/include/export/GLES/glext.h	100;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3047;"	d
GL_ONE_MINUS_DST_ALPHA	ps3/rgl/include/export/GLES/gl.h	121;"	d
GL_ONE_MINUS_DST_COLOR	ps3/rgl/include/export/GLES/gl.h	127;"	d
GL_ONE_MINUS_SRC1_ALPHA	msvc/msvc-2010/GL/glext.h	2263;"	d
GL_ONE_MINUS_SRC1_COLOR	msvc/msvc-2010/GL/glext.h	2262;"	d
GL_ONE_MINUS_SRC_ALPHA	ps3/rgl/include/export/GLES/gl.h	119;"	d
GL_ONE_MINUS_SRC_COLOR	ps3/rgl/include/export/GLES/gl.h	117;"	d
GL_OPERAND0_ALPHA	msvc/msvc-2010/GL/glext.h	261;"	d
GL_OPERAND0_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1598;"	d
GL_OPERAND0_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3886;"	d
GL_OPERAND0_RGB	msvc/msvc-2010/GL/glext.h	258;"	d
GL_OPERAND0_RGB_ARB	msvc/msvc-2010/GL/glext.h	1595;"	d
GL_OPERAND0_RGB_EXT	msvc/msvc-2010/GL/glext.h	3883;"	d
GL_OPERAND1_ALPHA	msvc/msvc-2010/GL/glext.h	262;"	d
GL_OPERAND1_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1599;"	d
GL_OPERAND1_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3887;"	d
GL_OPERAND1_RGB	msvc/msvc-2010/GL/glext.h	259;"	d
GL_OPERAND1_RGB_ARB	msvc/msvc-2010/GL/glext.h	1596;"	d
GL_OPERAND1_RGB_EXT	msvc/msvc-2010/GL/glext.h	3884;"	d
GL_OPERAND2_ALPHA	msvc/msvc-2010/GL/glext.h	263;"	d
GL_OPERAND2_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1600;"	d
GL_OPERAND2_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3888;"	d
GL_OPERAND2_RGB	msvc/msvc-2010/GL/glext.h	260;"	d
GL_OPERAND2_RGB_ARB	msvc/msvc-2010/GL/glext.h	1597;"	d
GL_OPERAND2_RGB_EXT	msvc/msvc-2010/GL/glext.h	3885;"	d
GL_OPERAND3_ALPHA_NV	msvc/msvc-2010/GL/glext.h	4118;"	d
GL_OPERAND3_RGB_NV	msvc/msvc-2010/GL/glext.h	4117;"	d
GL_OP_ADD_EXT	msvc/msvc-2010/GL/glext.h	4668;"	d
GL_OP_CLAMP_EXT	msvc/msvc-2010/GL/glext.h	4675;"	d
GL_OP_CROSS_PRODUCT_EXT	msvc/msvc-2010/GL/glext.h	4684;"	d
GL_OP_DOT3_EXT	msvc/msvc-2010/GL/glext.h	4665;"	d
GL_OP_DOT4_EXT	msvc/msvc-2010/GL/glext.h	4666;"	d
GL_OP_EXP_BASE_2_EXT	msvc/msvc-2010/GL/glext.h	4678;"	d
GL_OP_FLOOR_EXT	msvc/msvc-2010/GL/glext.h	4676;"	d
GL_OP_FRAC_EXT	msvc/msvc-2010/GL/glext.h	4670;"	d
GL_OP_INDEX_EXT	msvc/msvc-2010/GL/glext.h	4663;"	d
GL_OP_LOG_BASE_2_EXT	msvc/msvc-2010/GL/glext.h	4679;"	d
GL_OP_MADD_EXT	msvc/msvc-2010/GL/glext.h	4669;"	d
GL_OP_MAX_EXT	msvc/msvc-2010/GL/glext.h	4671;"	d
GL_OP_MIN_EXT	msvc/msvc-2010/GL/glext.h	4672;"	d
GL_OP_MOV_EXT	msvc/msvc-2010/GL/glext.h	4686;"	d
GL_OP_MULTIPLY_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	4685;"	d
GL_OP_MUL_EXT	msvc/msvc-2010/GL/glext.h	4667;"	d
GL_OP_NEGATE_EXT	msvc/msvc-2010/GL/glext.h	4664;"	d
GL_OP_POWER_EXT	msvc/msvc-2010/GL/glext.h	4680;"	d
GL_OP_RECIP_EXT	msvc/msvc-2010/GL/glext.h	4681;"	d
GL_OP_RECIP_SQRT_EXT	msvc/msvc-2010/GL/glext.h	4682;"	d
GL_OP_ROUND_EXT	msvc/msvc-2010/GL/glext.h	4677;"	d
GL_OP_SET_GE_EXT	msvc/msvc-2010/GL/glext.h	4673;"	d
GL_OP_SET_LT_EXT	msvc/msvc-2010/GL/glext.h	4674;"	d
GL_OP_SUB_EXT	msvc/msvc-2010/GL/glext.h	4683;"	d
GL_OR	ps3/rgl/include/export/GLES/gl.h	282;"	d
GL_OR_INVERTED	ps3/rgl/include/export/GLES/gl.h	288;"	d
GL_OR_REVERSE	ps3/rgl/include/export/GLES/gl.h	286;"	d
GL_OUTPUT_COLOR0_EXT	msvc/msvc-2010/GL/glext.h	4688;"	d
GL_OUTPUT_COLOR1_EXT	msvc/msvc-2010/GL/glext.h	4689;"	d
GL_OUTPUT_FOG_EXT	msvc/msvc-2010/GL/glext.h	4722;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	msvc/msvc-2010/GL/glext.h	4690;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	msvc/msvc-2010/GL/glext.h	4700;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	msvc/msvc-2010/GL/glext.h	4701;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	msvc/msvc-2010/GL/glext.h	4702;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	msvc/msvc-2010/GL/glext.h	4703;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	msvc/msvc-2010/GL/glext.h	4704;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	msvc/msvc-2010/GL/glext.h	4705;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	msvc/msvc-2010/GL/glext.h	4706;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	msvc/msvc-2010/GL/glext.h	4707;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	msvc/msvc-2010/GL/glext.h	4708;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	msvc/msvc-2010/GL/glext.h	4709;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	msvc/msvc-2010/GL/glext.h	4691;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	msvc/msvc-2010/GL/glext.h	4710;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	msvc/msvc-2010/GL/glext.h	4711;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	msvc/msvc-2010/GL/glext.h	4712;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	msvc/msvc-2010/GL/glext.h	4713;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	msvc/msvc-2010/GL/glext.h	4714;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	msvc/msvc-2010/GL/glext.h	4715;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	msvc/msvc-2010/GL/glext.h	4716;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	msvc/msvc-2010/GL/glext.h	4717;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	msvc/msvc-2010/GL/glext.h	4718;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	msvc/msvc-2010/GL/glext.h	4719;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	msvc/msvc-2010/GL/glext.h	4692;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	msvc/msvc-2010/GL/glext.h	4720;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	msvc/msvc-2010/GL/glext.h	4721;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	msvc/msvc-2010/GL/glext.h	4693;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	msvc/msvc-2010/GL/glext.h	4694;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	msvc/msvc-2010/GL/glext.h	4695;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	msvc/msvc-2010/GL/glext.h	4696;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	msvc/msvc-2010/GL/glext.h	4697;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	msvc/msvc-2010/GL/glext.h	4698;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	msvc/msvc-2010/GL/glext.h	4699;"	d
GL_OUTPUT_VERTEX_EXT	msvc/msvc-2010/GL/glext.h	4687;"	d
GL_OUT_OF_MEMORY	ps3/rgl/include/export/GLES/gl.h	201;"	d
GL_PACK_ALIGNMENT	ps3/rgl/include/export/GLES/gl.h	321;"	d
GL_PACK_CMYK_HINT_EXT	msvc/msvc-2010/GL/glext.h	3234;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	msvc/msvc-2010/GL/glext.h	2540;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	msvc/msvc-2010/GL/glext.h	2539;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	msvc/msvc-2010/GL/glext.h	2541;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	msvc/msvc-2010/GL/glext.h	2538;"	d
GL_PACK_IMAGE_DEPTH_SGIS	msvc/msvc-2010/GL/glext.h	3215;"	d
GL_PACK_IMAGE_HEIGHT	msvc/msvc-2010/GL/glext.h	62;"	d
GL_PACK_IMAGE_HEIGHT_EXT	msvc/msvc-2010/GL/glext.h	3107;"	d
GL_PACK_INVERT_MESA	msvc/msvc-2010/GL/glext.h	5034;"	d
GL_PACK_RESAMPLE_OML	msvc/msvc-2010/GL/glext.h	4506;"	d
GL_PACK_RESAMPLE_SGIX	msvc/msvc-2010/GL/glext.h	4227;"	d
GL_PACK_ROW_BYTES_APPLE	msvc/msvc-2010/GL/glext.h	5650;"	d
GL_PACK_SKIP_IMAGES	msvc/msvc-2010/GL/glext.h	61;"	d
GL_PACK_SKIP_IMAGES_EXT	msvc/msvc-2010/GL/glext.h	3106;"	d
GL_PACK_SKIP_VOLUMES_SGIS	msvc/msvc-2010/GL/glext.h	3214;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	msvc/msvc-2010/GL/glext.h	4161;"	d
GL_PALETTE4_R5_G6_B5_OES	ps3/rgl/include/export/GLES/gl.h	439;"	d
GL_PALETTE4_RGB5_A1_OES	ps3/rgl/include/export/GLES/gl.h	441;"	d
GL_PALETTE4_RGB8_OES	ps3/rgl/include/export/GLES/gl.h	437;"	d
GL_PALETTE4_RGBA4_OES	ps3/rgl/include/export/GLES/gl.h	440;"	d
GL_PALETTE4_RGBA8_OES	ps3/rgl/include/export/GLES/gl.h	438;"	d
GL_PALETTE8_R5_G6_B5_OES	ps3/rgl/include/export/GLES/gl.h	444;"	d
GL_PALETTE8_RGB5_A1_OES	ps3/rgl/include/export/GLES/gl.h	446;"	d
GL_PALETTE8_RGB8_OES	ps3/rgl/include/export/GLES/gl.h	442;"	d
GL_PALETTE8_RGBA4_OES	ps3/rgl/include/export/GLES/gl.h	445;"	d
GL_PALETTE8_RGBA8_OES	ps3/rgl/include/export/GLES/gl.h	443;"	d
GL_PARALLEL_ARRAYS_INTEL	msvc/msvc-2010/GL/glext.h	3779;"	d
GL_PARTIAL_SUCCESS_NV	msvc/msvc-2010/GL/glext.h	5675;"	d
GL_PASS_THROUGH_NV	msvc/msvc-2010/GL/glext.h	4335;"	d
GL_PATCHES	msvc/msvc-2010/GL/glext.h	2348;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	msvc/msvc-2010/GL/glext.h	2350;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	msvc/msvc-2010/GL/glext.h	2351;"	d
GL_PATCH_VERTICES	msvc/msvc-2010/GL/glext.h	2349;"	d
GL_PATH_CLIENT_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5978;"	d
GL_PATH_COMMAND_COUNT_NV	msvc/msvc-2010/GL/glext.h	6008;"	d
GL_PATH_COMPUTED_LENGTH_NV	msvc/msvc-2010/GL/glext.h	6011;"	d
GL_PATH_COORD_COUNT_NV	msvc/msvc-2010/GL/glext.h	6009;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	msvc/msvc-2010/GL/glext.h	6036;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	msvc/msvc-2010/GL/glext.h	6010;"	d
GL_PATH_DASH_CAPS_NV	msvc/msvc-2010/GL/glext.h	5974;"	d
GL_PATH_DASH_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5977;"	d
GL_PATH_DASH_OFFSET_RESET_NV	msvc/msvc-2010/GL/glext.h	6037;"	d
GL_PATH_END_CAPS_NV	msvc/msvc-2010/GL/glext.h	5969;"	d
GL_PATH_ERROR_POSITION_NV	msvc/msvc-2010/GL/glext.h	6022;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	msvc/msvc-2010/GL/glext.h	6012;"	d
GL_PATH_FILL_COVER_MODE_NV	msvc/msvc-2010/GL/glext.h	5981;"	d
GL_PATH_FILL_MASK_NV	msvc/msvc-2010/GL/glext.h	5980;"	d
GL_PATH_FILL_MODE_NV	msvc/msvc-2010/GL/glext.h	5979;"	d
GL_PATH_FOG_GEN_MODE_NV	msvc/msvc-2010/GL/glext.h	6023;"	d
GL_PATH_FORMAT_PS_NV	msvc/msvc-2010/GL/glext.h	5964;"	d
GL_PATH_FORMAT_SVG_NV	msvc/msvc-2010/GL/glext.h	5963;"	d
GL_PATH_GEN_COEFF_NV	msvc/msvc-2010/GL/glext.h	6028;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	msvc/msvc-2010/GL/glext.h	6029;"	d
GL_PATH_GEN_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	6030;"	d
GL_PATH_GEN_MODE_NV	msvc/msvc-2010/GL/glext.h	6027;"	d
GL_PATH_INITIAL_DASH_CAP_NV	msvc/msvc-2010/GL/glext.h	5975;"	d
GL_PATH_INITIAL_END_CAP_NV	msvc/msvc-2010/GL/glext.h	5970;"	d
GL_PATH_JOIN_STYLE_NV	msvc/msvc-2010/GL/glext.h	5972;"	d
GL_PATH_MITER_LIMIT_NV	msvc/msvc-2010/GL/glext.h	5973;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	msvc/msvc-2010/GL/glext.h	5989;"	d
GL_PATH_SAMPLE_QUALITY_NV	msvc/msvc-2010/GL/glext.h	5984;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	msvc/msvc-2010/GL/glext.h	6034;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	msvc/msvc-2010/GL/glext.h	6035;"	d
GL_PATH_STENCIL_FUNC_NV	msvc/msvc-2010/GL/glext.h	6031;"	d
GL_PATH_STENCIL_REF_NV	msvc/msvc-2010/GL/glext.h	6032;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	msvc/msvc-2010/GL/glext.h	6033;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	msvc/msvc-2010/GL/glext.h	6013;"	d
GL_PATH_STROKE_BOUND_NV	msvc/msvc-2010/GL/glext.h	5985;"	d
GL_PATH_STROKE_COVER_MODE_NV	msvc/msvc-2010/GL/glext.h	5982;"	d
GL_PATH_STROKE_MASK_NV	msvc/msvc-2010/GL/glext.h	5983;"	d
GL_PATH_STROKE_OVERSAMPLE_COUNT_NV	msvc/msvc-2010/GL/glext.h	5986;"	d
GL_PATH_STROKE_WIDTH_NV	msvc/msvc-2010/GL/glext.h	5968;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	msvc/msvc-2010/GL/glext.h	5976;"	d
GL_PATH_TERMINAL_END_CAP_NV	msvc/msvc-2010/GL/glext.h	5971;"	d
GL_PERCENTAGE_AMD	msvc/msvc-2010/GL/glext.h	5540;"	d
GL_PERFMON_RESULT_AMD	msvc/msvc-2010/GL/glext.h	5543;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	msvc/msvc-2010/GL/glext.h	5541;"	d
GL_PERFMON_RESULT_SIZE_AMD	msvc/msvc-2010/GL/glext.h	5542;"	d
GL_PERFORMANCE_MONITOR_AMD	msvc/msvc-2010/GL/glext.h	5892;"	d
GL_PERSPECTIVE_CORRECTION_HINT	ps3/rgl/include/export/GLES/gl.h	244;"	d
GL_PERTURB_EXT	msvc/msvc-2010/GL/glext.h	3827;"	d
GL_PER_STAGE_CONSTANTS_NV	msvc/msvc-2010/GL/glext.h	4302;"	d
GL_PGI_misc_hints	msvc/msvc-2010/GL/glext.h	9292;"	d
GL_PGI_vertex_hints	msvc/msvc-2010/GL/glext.h	9288;"	d
GL_PHONG_HINT_WIN	msvc/msvc-2010/GL/glext.h	3717;"	d
GL_PHONG_WIN	msvc/msvc-2010/GL/glext.h	3716;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2594;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5798;"	d
GL_PIXEL_COUNTER_BITS_NV	msvc/msvc-2010/GL/glext.h	4810;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	msvc/msvc-2010/GL/glext.h	4813;"	d
GL_PIXEL_COUNT_NV	msvc/msvc-2010/GL/glext.h	4812;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	msvc/msvc-2010/GL/glext.h	3795;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	msvc/msvc-2010/GL/glext.h	3204;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	msvc/msvc-2010/GL/glext.h	3203;"	d
GL_PIXEL_GROUP_COLOR_SGIS	msvc/msvc-2010/GL/glext.h	3205;"	d
GL_PIXEL_MAG_FILTER_EXT	msvc/msvc-2010/GL/glext.h	3793;"	d
GL_PIXEL_MIN_FILTER_EXT	msvc/msvc-2010/GL/glext.h	3794;"	d
GL_PIXEL_PACK_BUFFER	msvc/msvc-2010/GL/glext.h	458;"	d
GL_PIXEL_PACK_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	1916;"	d
GL_PIXEL_PACK_BUFFER_ARB	ps3/rgl/include/export/GLES/glext.h	211;"	d
GL_PIXEL_PACK_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	460;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1918;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5046;"	d
GL_PIXEL_PACK_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5044;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	msvc/msvc-2010/GL/glext.h	4164;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	msvc/msvc-2010/GL/glext.h	4165;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	msvc/msvc-2010/GL/glext.h	4163;"	d
GL_PIXEL_TEXTURE_SGIS	msvc/msvc-2010/GL/glext.h	3202;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	msvc/msvc-2010/GL/glext.h	3748;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	msvc/msvc-2010/GL/glext.h	3749;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	msvc/msvc-2010/GL/glext.h	3747;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	msvc/msvc-2010/GL/glext.h	3746;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	msvc/msvc-2010/GL/glext.h	3210;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	msvc/msvc-2010/GL/glext.h	3743;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	msvc/msvc-2010/GL/glext.h	3745;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	msvc/msvc-2010/GL/glext.h	3744;"	d
GL_PIXEL_TEX_GEN_SGIX	msvc/msvc-2010/GL/glext.h	3209;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	msvc/msvc-2010/GL/glext.h	3395;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	msvc/msvc-2010/GL/glext.h	3396;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	msvc/msvc-2010/GL/glext.h	3402;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	msvc/msvc-2010/GL/glext.h	3401;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	msvc/msvc-2010/GL/glext.h	3400;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	msvc/msvc-2010/GL/glext.h	3399;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	msvc/msvc-2010/GL/glext.h	3398;"	d
GL_PIXEL_TILE_WIDTH_SGIX	msvc/msvc-2010/GL/glext.h	3397;"	d
GL_PIXEL_TRANSFORM_2D_EXT	msvc/msvc-2010/GL/glext.h	3792;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	3800;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	3798;"	d
GL_PIXEL_UNPACK_BUFFER	msvc/msvc-2010/GL/glext.h	459;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	1917;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	ps3/rgl/include/export/GLES/glext.h	212;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	461;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1919;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5047;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5045;"	d
GL_PN_TRIANGLES_ATI	msvc/msvc-2010/GL/glext.h	4638;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	msvc/msvc-2010/GL/glext.h	4641;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	msvc/msvc-2010/GL/glext.h	4645;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	msvc/msvc-2010/GL/glext.h	4646;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	msvc/msvc-2010/GL/glext.h	4640;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	msvc/msvc-2010/GL/glext.h	4644;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	msvc/msvc-2010/GL/glext.h	4643;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	msvc/msvc-2010/GL/glext.h	4642;"	d
GL_POINT	ps3/rgl/include/export/GLES/glext.h	125;"	d
GL_POINTS	ps3/rgl/include/export/GLES/gl.h	95;"	d
GL_POINT_DISTANCE_ATTENUATION	msvc/msvc-2010/GL/glext.h	294;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	msvc/msvc-2010/GL/glext.h	1524;"	d
GL_POINT_FADE_THRESHOLD_SIZE	msvc/msvc-2010/GL/glext.h	280;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1523;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3447;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	msvc/msvc-2010/GL/glext.h	3454;"	d
GL_POINT_SIZE_MAX	msvc/msvc-2010/GL/glext.h	293;"	d
GL_POINT_SIZE_MAX_ARB	msvc/msvc-2010/GL/glext.h	1522;"	d
GL_POINT_SIZE_MAX_EXT	msvc/msvc-2010/GL/glext.h	3446;"	d
GL_POINT_SIZE_MAX_SGIS	msvc/msvc-2010/GL/glext.h	3453;"	d
GL_POINT_SIZE_MIN	msvc/msvc-2010/GL/glext.h	292;"	d
GL_POINT_SIZE_MIN_ARB	msvc/msvc-2010/GL/glext.h	1521;"	d
GL_POINT_SIZE_MIN_EXT	msvc/msvc-2010/GL/glext.h	3445;"	d
GL_POINT_SIZE_MIN_SGIS	msvc/msvc-2010/GL/glext.h	3452;"	d
GL_POINT_SMOOTH	ps3/rgl/include/export/GLES/gl.h	178;"	d
GL_POINT_SMOOTH_HINT	ps3/rgl/include/export/GLES/gl.h	245;"	d
GL_POINT_SPRITE	msvc/msvc-2010/GL/glext.h	452;"	d
GL_POINT_SPRITE_ARB	msvc/msvc-2010/GL/glext.h	1846;"	d
GL_POINT_SPRITE_COORD_ORIGIN	msvc/msvc-2010/GL/glext.h	445;"	d
GL_POINT_SPRITE_NV	msvc/msvc-2010/GL/glext.h	4817;"	d
GL_POINT_SPRITE_OES	ps3/rgl/include/export/GLES/glext.h	266;"	d
GL_POINT_SPRITE_R_MODE_NV	msvc/msvc-2010/GL/glext.h	4819;"	d
GL_POLYGON_OFFSET_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3056;"	d
GL_POLYGON_OFFSET_EXT	msvc/msvc-2010/GL/glext.h	3054;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	msvc/msvc-2010/GL/glext.h	3055;"	d
GL_POLYGON_OFFSET_FILL	ps3/rgl/include/export/GLES/gl.h	184;"	d
GL_POLYGON_OFFSET_LINE	ps3/rgl/include/export/GLES/glext.h	130;"	d
GL_POLYGON_SMOOTH_HINT	ps3/rgl/include/export/GLES/gl.h	247;"	d
GL_POSITION	ps3/rgl/include/export/GLES/gl.h	258;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	msvc/msvc-2010/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	msvc/msvc-2010/GL/glext.h	3179;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	msvc/msvc-2010/GL/glext.h	150;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	msvc/msvc-2010/GL/glext.h	3175;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	msvc/msvc-2010/GL/glext.h	153;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	msvc/msvc-2010/GL/glext.h	3178;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	msvc/msvc-2010/GL/glext.h	149;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	msvc/msvc-2010/GL/glext.h	3174;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3185;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	msvc/msvc-2010/GL/glext.h	152;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	msvc/msvc-2010/GL/glext.h	3177;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	msvc/msvc-2010/GL/glext.h	148;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	msvc/msvc-2010/GL/glext.h	3173;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	msvc/msvc-2010/GL/glext.h	151;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	msvc/msvc-2010/GL/glext.h	3176;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	msvc/msvc-2010/GL/glext.h	147;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	msvc/msvc-2010/GL/glext.h	3172;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	msvc/msvc-2010/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3165;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	msvc/msvc-2010/GL/glext.h	125;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3161;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	msvc/msvc-2010/GL/glext.h	128;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3164;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	msvc/msvc-2010/GL/glext.h	124;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3160;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	156;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3184;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	msvc/msvc-2010/GL/glext.h	127;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3163;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	msvc/msvc-2010/GL/glext.h	123;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3159;"	d
GL_POST_CONVOLUTION_RED_BIAS	msvc/msvc-2010/GL/glext.h	126;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	msvc/msvc-2010/GL/glext.h	3162;"	d
GL_POST_CONVOLUTION_RED_SCALE	msvc/msvc-2010/GL/glext.h	122;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3158;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	msvc/msvc-2010/GL/glext.h	3530;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	msvc/msvc-2010/GL/glext.h	3466;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	msvc/msvc-2010/GL/glext.h	3464;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	msvc/msvc-2010/GL/glext.h	3467;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	msvc/msvc-2010/GL/glext.h	3465;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	msvc/msvc-2010/GL/glext.h	3577;"	d
GL_PRESENT_DURATION_NV	msvc/msvc-2010/GL/glext.h	5471;"	d
GL_PRESENT_TIME_NV	msvc/msvc-2010/GL/glext.h	5470;"	d
GL_PRESERVE_ATI	msvc/msvc-2010/GL/glext.h	4652;"	d
GL_PREVIOUS	msvc/msvc-2010/GL/glext.h	270;"	d
GL_PREVIOUS_ARB	msvc/msvc-2010/GL/glext.h	1607;"	d
GL_PREVIOUS_EXT	msvc/msvc-2010/GL/glext.h	3876;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	msvc/msvc-2010/GL/glext.h	4333;"	d
GL_PRIMARY_COLOR	msvc/msvc-2010/GL/glext.h	269;"	d
GL_PRIMARY_COLOR_ARB	msvc/msvc-2010/GL/glext.h	1606;"	d
GL_PRIMARY_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3875;"	d
GL_PRIMARY_COLOR_NV	msvc/msvc-2010/GL/glext.h	4049;"	d
GL_PRIMITIVES_GENERATED	msvc/msvc-2010/GL/glext.h	529;"	d
GL_PRIMITIVES_GENERATED_EXT	msvc/msvc-2010/GL/glext.h	5481;"	d
GL_PRIMITIVES_GENERATED_NV	msvc/msvc-2010/GL/glext.h	5379;"	d
GL_PRIMITIVE_ID_NV	msvc/msvc-2010/GL/glext.h	5368;"	d
GL_PRIMITIVE_RESTART	msvc/msvc-2010/GL/glext.h	745;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	msvc/msvc-2010/GL/glext.h	2798;"	d
GL_PRIMITIVE_RESTART_INDEX	msvc/msvc-2010/GL/glext.h	746;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	msvc/msvc-2010/GL/glext.h	4989;"	d
GL_PRIMITIVE_RESTART_NV	msvc/msvc-2010/GL/glext.h	4988;"	d
GL_PRIMITIVE_RESTART_NV	ps3/rgl/include/export/GLES/glext.h	245;"	d
GL_PROGRAM	msvc/msvc-2010/GL/glext.h	2717;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	msvc/msvc-2010/GL/glext.h	1683;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1727;"	d
GL_PROGRAM_ATTRIBS_ARB	msvc/msvc-2010/GL/glext.h	1679;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5195;"	d
GL_PROGRAM_BINARY_FORMATS	msvc/msvc-2010/GL/glext.h	2430;"	d
GL_PROGRAM_BINARY_LENGTH	msvc/msvc-2010/GL/glext.h	2428;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	msvc/msvc-2010/GL/glext.h	2427;"	d
GL_PROGRAM_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1661;"	d
GL_PROGRAM_ERROR_POSITION_ARB	msvc/msvc-2010/GL/glext.h	1660;"	d
GL_PROGRAM_ERROR_POSITION_NV	msvc/msvc-2010/GL/glext.h	4434;"	d
GL_PROGRAM_ERROR_STRING_ARB	msvc/msvc-2010/GL/glext.h	1664;"	d
GL_PROGRAM_ERROR_STRING_NV	msvc/msvc-2010/GL/glext.h	4971;"	d
GL_PROGRAM_FORMAT_ARB	msvc/msvc-2010/GL/glext.h	1666;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	msvc/msvc-2010/GL/glext.h	1665;"	d
GL_PROGRAM_INPUT	msvc/msvc-2010/GL/glext.h	2949;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1667;"	d
GL_PROGRAM_LENGTH_ARB	msvc/msvc-2010/GL/glext.h	1651;"	d
GL_PROGRAM_LENGTH_NV	msvc/msvc-2010/GL/glext.h	4406;"	d
GL_PROGRAM_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	5493;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	5495;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	msvc/msvc-2010/GL/glext.h	1685;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1730;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	msvc/msvc-2010/GL/glext.h	1681;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1669;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1677;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	msvc/msvc-2010/GL/glext.h	1673;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	msvc/msvc-2010/GL/glext.h	1732;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1731;"	d
GL_PROGRAM_OBJECT_ARB	msvc/msvc-2010/GL/glext.h	1786;"	d
GL_PROGRAM_OUTPUT	msvc/msvc-2010/GL/glext.h	2950;"	d
GL_PROGRAM_PARAMETERS_ARB	msvc/msvc-2010/GL/glext.h	1675;"	d
GL_PROGRAM_PARAMETER_NV	msvc/msvc-2010/GL/glext.h	4427;"	d
GL_PROGRAM_PIPELINE	msvc/msvc-2010/GL/glext.h	2719;"	d
GL_PROGRAM_PIPELINE_BINDING	msvc/msvc-2010/GL/glext.h	2442;"	d
GL_PROGRAM_POINT_SIZE	msvc/msvc-2010/GL/glext.h	791;"	d
GL_PROGRAM_POINT_SIZE_ARB	msvc/msvc-2010/GL/glext.h	2023;"	d
GL_PROGRAM_POINT_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5219;"	d
GL_PROGRAM_RESIDENT_NV	msvc/msvc-2010/GL/glext.h	4430;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	5196;"	d
GL_PROGRAM_SEPARABLE	msvc/msvc-2010/GL/glext.h	2440;"	d
GL_PROGRAM_STRING_ARB	msvc/msvc-2010/GL/glext.h	1652;"	d
GL_PROGRAM_STRING_NV	msvc/msvc-2010/GL/glext.h	4407;"	d
GL_PROGRAM_TARGET_NV	msvc/msvc-2010/GL/glext.h	4429;"	d
GL_PROGRAM_TEMPORARIES_ARB	msvc/msvc-2010/GL/glext.h	1671;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	msvc/msvc-2010/GL/glext.h	1729;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	msvc/msvc-2010/GL/glext.h	1728;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	msvc/msvc-2010/GL/glext.h	1689;"	d
GL_PROJECTION	ps3/rgl/include/export/GLES/gl.h	305;"	d
GL_PROJECTION_MATRIX	ps3/rgl/include/export/GLES/glext.h	166;"	d
GL_PROJECTIVE_2D_NV	msvc/msvc-2010/GL/glext.h	5998;"	d
GL_PROJECTIVE_3D_NV	msvc/msvc-2010/GL/glext.h	6000;"	d
GL_PROVOKING_VERTEX	msvc/msvc-2010/GL/glext.h	2166;"	d
GL_PROVOKING_VERTEX_EXT	msvc/msvc-2010/GL/glext.h	5563;"	d
GL_PROXY_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	158;"	d
GL_PROXY_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3186;"	d
GL_PROXY_HISTOGRAM	msvc/msvc-2010/GL/glext.h	131;"	d
GL_PROXY_HISTOGRAM_EXT	msvc/msvc-2010/GL/glext.h	3130;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	160;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3188;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	msvc/msvc-2010/GL/glext.h	159;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3187;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	msvc/msvc-2010/GL/glext.h	3531;"	d
GL_PROXY_TEXTURE_1D_ARRAY	msvc/msvc-2010/GL/glext.h	513;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5288;"	d
GL_PROXY_TEXTURE_1D_EXT	msvc/msvc-2010/GL/glext.h	3100;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	msvc/msvc-2010/GL/glext.h	5174;"	d
GL_PROXY_TEXTURE_2D_ARRAY	msvc/msvc-2010/GL/glext.h	515;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5290;"	d
GL_PROXY_TEXTURE_2D_EXT	msvc/msvc-2010/GL/glext.h	3101;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2197;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2199;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	msvc/msvc-2010/GL/glext.h	5175;"	d
GL_PROXY_TEXTURE_3D	msvc/msvc-2010/GL/glext.h	66;"	d
GL_PROXY_TEXTURE_3D_EXT	msvc/msvc-2010/GL/glext.h	3111;"	d
GL_PROXY_TEXTURE_4D_SGIS	msvc/msvc-2010/GL/glext.h	3219;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3228;"	d
GL_PROXY_TEXTURE_CUBE_MAP	msvc/msvc-2010/GL/glext.h	226;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	msvc/msvc-2010/GL/glext.h	1498;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	897;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2230;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	msvc/msvc-2010/GL/glext.h	3987;"	d
GL_PROXY_TEXTURE_RECTANGLE	msvc/msvc-2010/GL/glext.h	730;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	msvc/msvc-2010/GL/glext.h	1876;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4311;"	d
GL_PURGEABLE_APPLE	msvc/msvc-2010/GL/glext.h	5646;"	d
GL_Q	ps3/rgl/include/export/GLES/glext.h	89;"	d
GL_QUADRATIC_ATTENUATION	ps3/rgl/include/export/GLES/gl.h	264;"	d
GL_QUADRATIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6049;"	d
GL_QUADS	ps3/rgl/include/export/GLES/glext.h	20;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	msvc/msvc-2010/GL/glext.h	2163;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	msvc/msvc-2010/GL/glext.h	5560;"	d
GL_QUAD_ALPHA4_SGIS	msvc/msvc-2010/GL/glext.h	3420;"	d
GL_QUAD_ALPHA8_SGIS	msvc/msvc-2010/GL/glext.h	3421;"	d
GL_QUAD_INTENSITY4_SGIS	msvc/msvc-2010/GL/glext.h	3424;"	d
GL_QUAD_INTENSITY8_SGIS	msvc/msvc-2010/GL/glext.h	3425;"	d
GL_QUAD_LUMINANCE4_SGIS	msvc/msvc-2010/GL/glext.h	3422;"	d
GL_QUAD_LUMINANCE8_SGIS	msvc/msvc-2010/GL/glext.h	3423;"	d
GL_QUAD_MESH_SUN	msvc/msvc-2010/GL/glext.h	4793;"	d
GL_QUAD_STRIP	ps3/rgl/include/export/GLES/glext.h	21;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	msvc/msvc-2010/GL/glext.h	3427;"	d
GL_QUARTER_BIT_ATI	msvc/msvc-2010/GL/glext.h	4629;"	d
GL_QUERY	msvc/msvc-2010/GL/glext.h	2718;"	d
GL_QUERY_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	6124;"	d
GL_QUERY_BUFFER_BINDING_AMD	msvc/msvc-2010/GL/glext.h	6125;"	d
GL_QUERY_BY_REGION_NO_WAIT	msvc/msvc-2010/GL/glext.h	580;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	msvc/msvc-2010/GL/glext.h	5462;"	d
GL_QUERY_BY_REGION_WAIT	msvc/msvc-2010/GL/glext.h	579;"	d
GL_QUERY_BY_REGION_WAIT_NV	msvc/msvc-2010/GL/glext.h	5461;"	d
GL_QUERY_COUNTER_BITS	msvc/msvc-2010/GL/glext.h	320;"	d
GL_QUERY_COUNTER_BITS_ARB	msvc/msvc-2010/GL/glext.h	1778;"	d
GL_QUERY_COUNTER_BITS_ARB	ps3/rgl/include/export/GLES/glext.h	331;"	d
GL_QUERY_NO_WAIT	msvc/msvc-2010/GL/glext.h	578;"	d
GL_QUERY_NO_WAIT_NV	msvc/msvc-2010/GL/glext.h	5460;"	d
GL_QUERY_OBJECT_AMD	msvc/msvc-2010/GL/glext.h	5893;"	d
GL_QUERY_RESULT	msvc/msvc-2010/GL/glext.h	322;"	d
GL_QUERY_RESULT_ARB	msvc/msvc-2010/GL/glext.h	1780;"	d
GL_QUERY_RESULT_ARB	ps3/rgl/include/export/GLES/glext.h	333;"	d
GL_QUERY_RESULT_AVAILABLE	msvc/msvc-2010/GL/glext.h	323;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	msvc/msvc-2010/GL/glext.h	1781;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	ps3/rgl/include/export/GLES/glext.h	334;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	msvc/msvc-2010/GL/glext.h	6126;"	d
GL_QUERY_WAIT	msvc/msvc-2010/GL/glext.h	577;"	d
GL_QUERY_WAIT_NV	msvc/msvc-2010/GL/glext.h	5459;"	d
GL_R	ps3/rgl/include/export/GLES/glext.h	88;"	d
GL_R11F_G11F_B10F	msvc/msvc-2010/GL/glext.h	518;"	d
GL_R11F_G11F_B10F_EXT	msvc/msvc-2010/GL/glext.h	5281;"	d
GL_R16	msvc/msvc-2010/GL/glext.h	2077;"	d
GL_R16F	msvc/msvc-2010/GL/glext.h	2080;"	d
GL_R16I	msvc/msvc-2010/GL/glext.h	2086;"	d
GL_R16UI	msvc/msvc-2010/GL/glext.h	2087;"	d
GL_R16_SNORM	msvc/msvc-2010/GL/glext.h	740;"	d
GL_R1UI_C3F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3926;"	d
GL_R1UI_C4F_N3F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3928;"	d
GL_R1UI_C4UB_V3F_SUN	msvc/msvc-2010/GL/glext.h	3925;"	d
GL_R1UI_N3F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3927;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3931;"	d
GL_R1UI_T2F_N3F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3930;"	d
GL_R1UI_T2F_V3F_SUN	msvc/msvc-2010/GL/glext.h	3929;"	d
GL_R1UI_V3F_SUN	msvc/msvc-2010/GL/glext.h	3924;"	d
GL_R32F	msvc/msvc-2010/GL/glext.h	2081;"	d
GL_R32I	msvc/msvc-2010/GL/glext.h	2088;"	d
GL_R32UI	msvc/msvc-2010/GL/glext.h	2089;"	d
GL_R3_G3_B2	ps3/rgl/include/export/GLES/glext.h	45;"	d
GL_R8	msvc/msvc-2010/GL/glext.h	2076;"	d
GL_R8I	msvc/msvc-2010/GL/glext.h	2084;"	d
GL_R8UI	msvc/msvc-2010/GL/glext.h	2085;"	d
GL_R8_SNORM	msvc/msvc-2010/GL/glext.h	736;"	d
GL_RASTERIZER_DISCARD	msvc/msvc-2010/GL/glext.h	531;"	d
GL_RASTERIZER_DISCARD_EXT	msvc/msvc-2010/GL/glext.h	5483;"	d
GL_RASTERIZER_DISCARD_NV	msvc/msvc-2010/GL/glext.h	5381;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	msvc/msvc-2010/GL/glext.h	3701;"	d
GL_READ_FRAMEBUFFER	msvc/msvc-2010/GL/glext.h	1958;"	d
GL_READ_FRAMEBUFFER_BINDING	msvc/msvc-2010/GL/glext.h	1960;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5162;"	d
GL_READ_FRAMEBUFFER_EXT	msvc/msvc-2010/GL/glext.h	5159;"	d
GL_READ_ONLY	msvc/msvc-2010/GL/glext.h	329;"	d
GL_READ_ONLY	ps3/rgl/include/export/GLES/glext.h	225;"	d
GL_READ_ONLY_ARB	msvc/msvc-2010/GL/glext.h	1760;"	d
GL_READ_PIXELS	msvc/msvc-2010/GL/glext.h	2868;"	d
GL_READ_PIXELS_FORMAT	msvc/msvc-2010/GL/glext.h	2869;"	d
GL_READ_PIXELS_TYPE	msvc/msvc-2010/GL/glext.h	2870;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	msvc/msvc-2010/GL/glext.h	4982;"	d
GL_READ_PIXEL_DATA_RANGE_NV	msvc/msvc-2010/GL/glext.h	4980;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	msvc/msvc-2010/GL/glext.h	4984;"	d
GL_READ_WRITE	msvc/msvc-2010/GL/glext.h	331;"	d
GL_READ_WRITE	ps3/rgl/include/export/GLES/glext.h	227;"	d
GL_READ_WRITE_ARB	msvc/msvc-2010/GL/glext.h	1762;"	d
GL_RECLAIM_MEMORY_HINT_PGI	msvc/msvc-2010/GL/glext.h	3579;"	d
GL_RECT_NV	msvc/msvc-2010/GL/glext.h	6068;"	d
GL_RED	ps3/rgl/include/export/GLES/glext.h	57;"	d
GL_REDUCE	msvc/msvc-2010/GL/glext.h	116;"	d
GL_REDUCE_DST_COLOR_SCE	ps3/rgl/include/export/GLES/glext.h	348;"	d
GL_REDUCE_EXT	msvc/msvc-2010/GL/glext.h	3152;"	d
GL_RED_BIT_ATI	msvc/msvc-2010/GL/glext.h	4622;"	d
GL_RED_INTEGER	msvc/msvc-2010/GL/glext.h	550;"	d
GL_RED_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5442;"	d
GL_RED_MAX_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3949;"	d
GL_RED_MIN_CLAMP_INGR	msvc/msvc-2010/GL/glext.h	3945;"	d
GL_RED_SNORM	msvc/msvc-2010/GL/glext.h	732;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	msvc/msvc-2010/GL/glext.h	2989;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	msvc/msvc-2010/GL/glext.h	2988;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	msvc/msvc-2010/GL/glext.h	2987;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	msvc/msvc-2010/GL/glext.h	2985;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	msvc/msvc-2010/GL/glext.h	2986;"	d
GL_REFERENCED_BY_VERTEX_SHADER	msvc/msvc-2010/GL/glext.h	2984;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	msvc/msvc-2010/GL/glext.h	3493;"	d
GL_REFERENCE_PLANE_SGIX	msvc/msvc-2010/GL/glext.h	3492;"	d
GL_REFLECTION_MAP	msvc/msvc-2010/GL/glext.h	244;"	d
GL_REFLECTION_MAP	ps3/rgl/include/export/GLES/glext.h	85;"	d
GL_REFLECTION_MAP_ARB	msvc/msvc-2010/GL/glext.h	1489;"	d
GL_REFLECTION_MAP_EXT	msvc/msvc-2010/GL/glext.h	3978;"	d
GL_REFLECTION_MAP_NV	msvc/msvc-2010/GL/glext.h	3973;"	d
GL_REGISTER_COMBINERS_NV	msvc/msvc-2010/GL/glext.h	4039;"	d
GL_REG_0_ATI	msvc/msvc-2010/GL/glext.h	4532;"	d
GL_REG_10_ATI	msvc/msvc-2010/GL/glext.h	4542;"	d
GL_REG_11_ATI	msvc/msvc-2010/GL/glext.h	4543;"	d
GL_REG_12_ATI	msvc/msvc-2010/GL/glext.h	4544;"	d
GL_REG_13_ATI	msvc/msvc-2010/GL/glext.h	4545;"	d
GL_REG_14_ATI	msvc/msvc-2010/GL/glext.h	4546;"	d
GL_REG_15_ATI	msvc/msvc-2010/GL/glext.h	4547;"	d
GL_REG_16_ATI	msvc/msvc-2010/GL/glext.h	4548;"	d
GL_REG_17_ATI	msvc/msvc-2010/GL/glext.h	4549;"	d
GL_REG_18_ATI	msvc/msvc-2010/GL/glext.h	4550;"	d
GL_REG_19_ATI	msvc/msvc-2010/GL/glext.h	4551;"	d
GL_REG_1_ATI	msvc/msvc-2010/GL/glext.h	4533;"	d
GL_REG_20_ATI	msvc/msvc-2010/GL/glext.h	4552;"	d
GL_REG_21_ATI	msvc/msvc-2010/GL/glext.h	4553;"	d
GL_REG_22_ATI	msvc/msvc-2010/GL/glext.h	4554;"	d
GL_REG_23_ATI	msvc/msvc-2010/GL/glext.h	4555;"	d
GL_REG_24_ATI	msvc/msvc-2010/GL/glext.h	4556;"	d
GL_REG_25_ATI	msvc/msvc-2010/GL/glext.h	4557;"	d
GL_REG_26_ATI	msvc/msvc-2010/GL/glext.h	4558;"	d
GL_REG_27_ATI	msvc/msvc-2010/GL/glext.h	4559;"	d
GL_REG_28_ATI	msvc/msvc-2010/GL/glext.h	4560;"	d
GL_REG_29_ATI	msvc/msvc-2010/GL/glext.h	4561;"	d
GL_REG_2_ATI	msvc/msvc-2010/GL/glext.h	4534;"	d
GL_REG_30_ATI	msvc/msvc-2010/GL/glext.h	4562;"	d
GL_REG_31_ATI	msvc/msvc-2010/GL/glext.h	4563;"	d
GL_REG_3_ATI	msvc/msvc-2010/GL/glext.h	4535;"	d
GL_REG_4_ATI	msvc/msvc-2010/GL/glext.h	4536;"	d
GL_REG_5_ATI	msvc/msvc-2010/GL/glext.h	4537;"	d
GL_REG_6_ATI	msvc/msvc-2010/GL/glext.h	4538;"	d
GL_REG_7_ATI	msvc/msvc-2010/GL/glext.h	4539;"	d
GL_REG_8_ATI	msvc/msvc-2010/GL/glext.h	4540;"	d
GL_REG_9_ATI	msvc/msvc-2010/GL/glext.h	4541;"	d
GL_RELATIVE_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6073;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6052;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6046;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6062;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6064;"	d
GL_RELATIVE_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6044;"	d
GL_RELATIVE_MOVE_TO_NV	msvc/msvc-2010/GL/glext.h	6042;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6050;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6058;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6060;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6056;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6054;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6048;"	d
GL_RELEASED_APPLE	msvc/msvc-2010/GL/glext.h	5642;"	d
GL_RENDERBUFFER	msvc/msvc-2010/GL/glext.h	1993;"	d
GL_RENDERBUFFER_ALPHA_SIZE	msvc/msvc-2010/GL/glext.h	2004;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5119;"	d
GL_RENDERBUFFER_BINDING	msvc/msvc-2010/GL/glext.h	1957;"	d
GL_RENDERBUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5074;"	d
GL_RENDERBUFFER_BINDING_OES	ps3/rgl/include/export/GLES/glext.h	274;"	d
GL_RENDERBUFFER_BLUE_SIZE	msvc/msvc-2010/GL/glext.h	2003;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5118;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5338;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5337;"	d
GL_RENDERBUFFER_DEPTH_SIZE	msvc/msvc-2010/GL/glext.h	2005;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5120;"	d
GL_RENDERBUFFER_EXT	msvc/msvc-2010/GL/glext.h	5108;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	msvc/msvc-2010/GL/glext.h	5533;"	d
GL_RENDERBUFFER_GREEN_SIZE	msvc/msvc-2010/GL/glext.h	2002;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5117;"	d
GL_RENDERBUFFER_HEIGHT	msvc/msvc-2010/GL/glext.h	1995;"	d
GL_RENDERBUFFER_HEIGHT_EXT	msvc/msvc-2010/GL/glext.h	5110;"	d
GL_RENDERBUFFER_HEIGHT_OES	ps3/rgl/include/export/GLES/glext.h	309;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	msvc/msvc-2010/GL/glext.h	1996;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	5111;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_OES	ps3/rgl/include/export/GLES/glext.h	310;"	d
GL_RENDERBUFFER_OES	ps3/rgl/include/export/GLES/glext.h	307;"	d
GL_RENDERBUFFER_RED_SIZE	msvc/msvc-2010/GL/glext.h	2001;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5116;"	d
GL_RENDERBUFFER_SAMPLES	msvc/msvc-2010/GL/glext.h	1961;"	d
GL_RENDERBUFFER_SAMPLES_EXT	msvc/msvc-2010/GL/glext.h	5166;"	d
GL_RENDERBUFFER_STENCIL_SIZE	msvc/msvc-2010/GL/glext.h	2006;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5121;"	d
GL_RENDERBUFFER_WIDTH	msvc/msvc-2010/GL/glext.h	1994;"	d
GL_RENDERBUFFER_WIDTH_EXT	msvc/msvc-2010/GL/glext.h	5109;"	d
GL_RENDERBUFFER_WIDTH_OES	ps3/rgl/include/export/GLES/glext.h	308;"	d
GL_RENDERER	ps3/rgl/include/export/GLES/gl.h	353;"	d
GL_REND_screen_coordinates	msvc/msvc-2010/GL/glext.h	9634;"	d
GL_REPEAT	ps3/rgl/include/export/GLES/gl.h	433;"	d
GL_REPLACE	ps3/rgl/include/export/GLES/gl.h	346;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	msvc/msvc-2010/GL/glext.h	3923;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	msvc/msvc-2010/GL/glext.h	3922;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	msvc/msvc-2010/GL/glext.h	3920;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	msvc/msvc-2010/GL/glext.h	3921;"	d
GL_REPLACEMENT_CODE_SUN	msvc/msvc-2010/GL/glext.h	3919;"	d
GL_REPLACE_EXT	msvc/msvc-2010/GL/glext.h	3099;"	d
GL_REPLACE_MIDDLE_SUN	msvc/msvc-2010/GL/glext.h	3916;"	d
GL_REPLACE_OLDEST_SUN	msvc/msvc-2010/GL/glext.h	3917;"	d
GL_REPLACE_VALUE_AMD	msvc/msvc-2010/GL/glext.h	6106;"	d
GL_REPLICATE_BORDER	msvc/msvc-2010/GL/glext.h	172;"	d
GL_REPLICATE_BORDER_HP	msvc/msvc-2010/GL/glext.h	3537;"	d
GL_RESAMPLE_AVERAGE_OML	msvc/msvc-2010/GL/glext.h	4510;"	d
GL_RESAMPLE_DECIMATE_OML	msvc/msvc-2010/GL/glext.h	4511;"	d
GL_RESAMPLE_DECIMATE_SGIX	msvc/msvc-2010/GL/glext.h	4231;"	d
GL_RESAMPLE_REPLICATE_OML	msvc/msvc-2010/GL/glext.h	4508;"	d
GL_RESAMPLE_REPLICATE_SGIX	msvc/msvc-2010/GL/glext.h	4229;"	d
GL_RESAMPLE_ZERO_FILL_OML	msvc/msvc-2010/GL/glext.h	4509;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	msvc/msvc-2010/GL/glext.h	4230;"	d
GL_RESCALE_NORMAL	msvc/msvc-2010/GL/glext.h	91;"	d
GL_RESCALE_NORMAL	ps3/rgl/include/export/GLES/gl.h	183;"	d
GL_RESCALE_NORMAL_EXT	msvc/msvc-2010/GL/glext.h	3299;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	msvc/msvc-2010/GL/glext.h	2517;"	d
GL_RESTART_PATH_NV	msvc/msvc-2010/GL/glext.h	6065;"	d
GL_RESTART_SUN	msvc/msvc-2010/GL/glext.h	3915;"	d
GL_RETAINED_APPLE	msvc/msvc-2010/GL/glext.h	5644;"	d
GL_RG	msvc/msvc-2010/GL/glext.h	2074;"	d
GL_RG16	msvc/msvc-2010/GL/glext.h	2079;"	d
GL_RG16F	msvc/msvc-2010/GL/glext.h	2082;"	d
GL_RG16I	msvc/msvc-2010/GL/glext.h	2092;"	d
GL_RG16UI	msvc/msvc-2010/GL/glext.h	2093;"	d
GL_RG16_SNORM	msvc/msvc-2010/GL/glext.h	741;"	d
GL_RG32F	msvc/msvc-2010/GL/glext.h	2083;"	d
GL_RG32I	msvc/msvc-2010/GL/glext.h	2094;"	d
GL_RG32UI	msvc/msvc-2010/GL/glext.h	2095;"	d
GL_RG8	msvc/msvc-2010/GL/glext.h	2078;"	d
GL_RG8I	msvc/msvc-2010/GL/glext.h	2090;"	d
GL_RG8UI	msvc/msvc-2010/GL/glext.h	2091;"	d
GL_RG8_SNORM	msvc/msvc-2010/GL/glext.h	737;"	d
GL_RGB	ps3/rgl/include/export/GLES/gl.h	316;"	d
GL_RGB10_A2UI	msvc/msvc-2010/GL/glext.h	2282;"	d
GL_RGB10_A2_EXT	msvc/msvc-2010/GL/glext.h	3090;"	d
GL_RGB10_EXT	msvc/msvc-2010/GL/glext.h	3083;"	d
GL_RGB12_EXT	msvc/msvc-2010/GL/glext.h	3084;"	d
GL_RGB16F	msvc/msvc-2010/GL/glext.h	504;"	d
GL_RGB16F_ARB	msvc/msvc-2010/GL/glext.h	1908;"	d
GL_RGB16F_ARB	ps3/rgl/include/export/GLES/glext.h	66;"	d
GL_RGB16I	msvc/msvc-2010/GL/glext.h	547;"	d
GL_RGB16I_EXT	msvc/msvc-2010/GL/glext.h	5431;"	d
GL_RGB16UI	msvc/msvc-2010/GL/glext.h	541;"	d
GL_RGB16UI_EXT	msvc/msvc-2010/GL/glext.h	5413;"	d
GL_RGB16_EXT	msvc/msvc-2010/GL/glext.h	3085;"	d
GL_RGB16_SNORM	msvc/msvc-2010/GL/glext.h	742;"	d
GL_RGB2_EXT	msvc/msvc-2010/GL/glext.h	3079;"	d
GL_RGB32F	msvc/msvc-2010/GL/glext.h	502;"	d
GL_RGB32F_ARB	msvc/msvc-2010/GL/glext.h	1902;"	d
GL_RGB32F_ARB	ps3/rgl/include/export/GLES/glext.h	63;"	d
GL_RGB32I	msvc/msvc-2010/GL/glext.h	545;"	d
GL_RGB32I_EXT	msvc/msvc-2010/GL/glext.h	5425;"	d
GL_RGB32UI	msvc/msvc-2010/GL/glext.h	539;"	d
GL_RGB32UI_EXT	msvc/msvc-2010/GL/glext.h	5407;"	d
GL_RGB4	ps3/rgl/include/export/GLES/glext.h	46;"	d
GL_RGB4_EXT	msvc/msvc-2010/GL/glext.h	3080;"	d
GL_RGB4_S3TC	msvc/msvc-2010/GL/glext.h	4894;"	d
GL_RGB5	ps3/rgl/include/export/GLES/glext.h	47;"	d
GL_RGB565	msvc/msvc-2010/GL/glext.h	2423;"	d
GL_RGB5_A1	ps3/rgl/include/export/GLES/glext.h	51;"	d
GL_RGB5_A1_EXT	msvc/msvc-2010/GL/glext.h	3088;"	d
GL_RGB5_EXT	msvc/msvc-2010/GL/glext.h	3081;"	d
GL_RGB8	ps3/rgl/include/export/GLES/glext.h	48;"	d
GL_RGB8I	msvc/msvc-2010/GL/glext.h	549;"	d
GL_RGB8I_EXT	msvc/msvc-2010/GL/glext.h	5437;"	d
GL_RGB8UI	msvc/msvc-2010/GL/glext.h	543;"	d
GL_RGB8UI_EXT	msvc/msvc-2010/GL/glext.h	5419;"	d
GL_RGB8_EXT	msvc/msvc-2010/GL/glext.h	3082;"	d
GL_RGB8_SNORM	msvc/msvc-2010/GL/glext.h	738;"	d
GL_RGB9_E5	msvc/msvc-2010/GL/glext.h	520;"	d
GL_RGB9_E5_EXT	msvc/msvc-2010/GL/glext.h	5321;"	d
GL_RGBA	ps3/rgl/include/export/GLES/gl.h	317;"	d
GL_RGBA12	ps3/rgl/include/export/GLES/glext.h	52;"	d
GL_RGBA12_EXT	msvc/msvc-2010/GL/glext.h	3091;"	d
GL_RGBA16	ps3/rgl/include/export/GLES/glext.h	53;"	d
GL_RGBA16F	msvc/msvc-2010/GL/glext.h	503;"	d
GL_RGBA16F_ARB	msvc/msvc-2010/GL/glext.h	1907;"	d
GL_RGBA16F_ARB	ps3/rgl/include/export/GLES/glext.h	65;"	d
GL_RGBA16I	msvc/msvc-2010/GL/glext.h	546;"	d
GL_RGBA16I_EXT	msvc/msvc-2010/GL/glext.h	5430;"	d
GL_RGBA16UI	msvc/msvc-2010/GL/glext.h	540;"	d
GL_RGBA16UI_EXT	msvc/msvc-2010/GL/glext.h	5412;"	d
GL_RGBA16_EXT	msvc/msvc-2010/GL/glext.h	3092;"	d
GL_RGBA16_SNORM	msvc/msvc-2010/GL/glext.h	743;"	d
GL_RGBA2	ps3/rgl/include/export/GLES/glext.h	49;"	d
GL_RGBA2_EXT	msvc/msvc-2010/GL/glext.h	3086;"	d
GL_RGBA32F	gfx/gl.c	199;"	d	file:
GL_RGBA32F	msvc/msvc-2010/GL/glext.h	501;"	d
GL_RGBA32F_ARB	msvc/msvc-2010/GL/glext.h	1901;"	d
GL_RGBA32F_ARB	ps3/rgl/include/export/GLES/glext.h	62;"	d
GL_RGBA32I	msvc/msvc-2010/GL/glext.h	544;"	d
GL_RGBA32I_EXT	msvc/msvc-2010/GL/glext.h	5424;"	d
GL_RGBA32UI	msvc/msvc-2010/GL/glext.h	538;"	d
GL_RGBA32UI_EXT	msvc/msvc-2010/GL/glext.h	5406;"	d
GL_RGBA4	ps3/rgl/include/export/GLES/glext.h	50;"	d
GL_RGBA4_DXT5_S3TC	msvc/msvc-2010/GL/glext.h	4898;"	d
GL_RGBA4_EXT	msvc/msvc-2010/GL/glext.h	3087;"	d
GL_RGBA4_S3TC	msvc/msvc-2010/GL/glext.h	4896;"	d
GL_RGBA8	ps3/rgl/include/export/GLES/glext.h	192;"	d
GL_RGBA8I	msvc/msvc-2010/GL/glext.h	548;"	d
GL_RGBA8I_EXT	msvc/msvc-2010/GL/glext.h	5436;"	d
GL_RGBA8UI	msvc/msvc-2010/GL/glext.h	542;"	d
GL_RGBA8UI_EXT	msvc/msvc-2010/GL/glext.h	5418;"	d
GL_RGBA8_EXT	msvc/msvc-2010/GL/glext.h	3089;"	d
GL_RGBA8_SNORM	msvc/msvc-2010/GL/glext.h	739;"	d
GL_RGBA_DXT5_S3TC	msvc/msvc-2010/GL/glext.h	4897;"	d
GL_RGBA_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5614;"	d
GL_RGBA_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4939;"	d
GL_RGBA_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5608;"	d
GL_RGBA_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4933;"	d
GL_RGBA_FLOAT_MODE_ARB	msvc/msvc-2010/GL/glext.h	1881;"	d
GL_RGBA_FLOAT_MODE_ATI	msvc/msvc-2010/GL/glext.h	4922;"	d
GL_RGBA_INTEGER	msvc/msvc-2010/GL/glext.h	554;"	d
GL_RGBA_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5447;"	d
GL_RGBA_INTEGER_MODE_EXT	msvc/msvc-2010/GL/glext.h	5452;"	d
GL_RGBA_S3TC	msvc/msvc-2010/GL/glext.h	4895;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	msvc/msvc-2010/GL/glext.h	5283;"	d
GL_RGBA_SNORM	msvc/msvc-2010/GL/glext.h	735;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	msvc/msvc-2010/GL/glext.h	4319;"	d
GL_RGB_422_APPLE	msvc/msvc-2010/GL/glext.h	5655;"	d
GL_RGB_FLOAT16_APPLE	msvc/msvc-2010/GL/glext.h	5615;"	d
GL_RGB_FLOAT16_ATI	msvc/msvc-2010/GL/glext.h	4940;"	d
GL_RGB_FLOAT32_APPLE	msvc/msvc-2010/GL/glext.h	5609;"	d
GL_RGB_FLOAT32_ATI	msvc/msvc-2010/GL/glext.h	4934;"	d
GL_RGB_INTEGER	msvc/msvc-2010/GL/glext.h	553;"	d
GL_RGB_INTEGER_EXT	msvc/msvc-2010/GL/glext.h	5446;"	d
GL_RGB_S3TC	msvc/msvc-2010/GL/glext.h	4893;"	d
GL_RGB_SCALE	msvc/msvc-2010/GL/glext.h	264;"	d
GL_RGB_SCALE_ARB	msvc/msvc-2010/GL/glext.h	1601;"	d
GL_RGB_SCALE_EXT	msvc/msvc-2010/GL/glext.h	3871;"	d
GL_RGB_SNORM	msvc/msvc-2010/GL/glext.h	734;"	d
GL_RG_INTEGER	msvc/msvc-2010/GL/glext.h	2075;"	d
GL_RG_SNORM	msvc/msvc-2010/GL/glext.h	733;"	d
GL_ROUND_NV	msvc/msvc-2010/GL/glext.h	6015;"	d
GL_S	ps3/rgl/include/export/GLES/glext.h	86;"	d
GL_S3_s3tc	msvc/msvc-2010/GL/glext.h	10814;"	d
GL_SAMPLER	msvc/msvc-2010/GL/glext.h	2720;"	d
GL_SAMPLER_1D	msvc/msvc-2010/GL/glext.h	425;"	d
GL_SAMPLER_1D_ARB	msvc/msvc-2010/GL/glext.h	1803;"	d
GL_SAMPLER_1D_ARRAY	msvc/msvc-2010/GL/glext.h	557;"	d
GL_SAMPLER_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5250;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	msvc/msvc-2010/GL/glext.h	559;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	msvc/msvc-2010/GL/glext.h	5253;"	d
GL_SAMPLER_1D_SHADOW	msvc/msvc-2010/GL/glext.h	429;"	d
GL_SAMPLER_1D_SHADOW_ARB	msvc/msvc-2010/GL/glext.h	1807;"	d
GL_SAMPLER_2D	msvc/msvc-2010/GL/glext.h	426;"	d
GL_SAMPLER_2D_ARB	msvc/msvc-2010/GL/glext.h	1804;"	d
GL_SAMPLER_2D_ARRAY	msvc/msvc-2010/GL/glext.h	558;"	d
GL_SAMPLER_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5251;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	msvc/msvc-2010/GL/glext.h	560;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	msvc/msvc-2010/GL/glext.h	5254;"	d
GL_SAMPLER_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2204;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2207;"	d
GL_SAMPLER_2D_RECT	msvc/msvc-2010/GL/glext.h	717;"	d
GL_SAMPLER_2D_RECT_ARB	msvc/msvc-2010/GL/glext.h	1809;"	d
GL_SAMPLER_2D_RECT_SHADOW	msvc/msvc-2010/GL/glext.h	718;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	msvc/msvc-2010/GL/glext.h	1810;"	d
GL_SAMPLER_2D_SHADOW	msvc/msvc-2010/GL/glext.h	430;"	d
GL_SAMPLER_2D_SHADOW_ARB	msvc/msvc-2010/GL/glext.h	1808;"	d
GL_SAMPLER_3D	msvc/msvc-2010/GL/glext.h	427;"	d
GL_SAMPLER_3D_ARB	msvc/msvc-2010/GL/glext.h	1805;"	d
GL_SAMPLER_BINDING	msvc/msvc-2010/GL/glext.h	2275;"	d
GL_SAMPLER_BUFFER	msvc/msvc-2010/GL/glext.h	719;"	d
GL_SAMPLER_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	5550;"	d
GL_SAMPLER_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5252;"	d
GL_SAMPLER_CUBE	msvc/msvc-2010/GL/glext.h	428;"	d
GL_SAMPLER_CUBE_ARB	msvc/msvc-2010/GL/glext.h	1806;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	898;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2231;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	msvc/msvc-2010/GL/glext.h	899;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	msvc/msvc-2010/GL/glext.h	2232;"	d
GL_SAMPLER_CUBE_SHADOW	msvc/msvc-2010/GL/glext.h	561;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	msvc/msvc-2010/GL/glext.h	5255;"	d
GL_SAMPLER_OBJECT_AMD	msvc/msvc-2010/GL/glext.h	5895;"	d
GL_SAMPLER_RENDERBUFFER_NV	msvc/msvc-2010/GL/glext.h	5517;"	d
GL_SAMPLES	msvc/msvc-2010/GL/glext.h	215;"	d
GL_SAMPLES_3DFX	msvc/msvc-2010/GL/glext.h	4190;"	d
GL_SAMPLES_ARB	msvc/msvc-2010/GL/glext.h	1478;"	d
GL_SAMPLES_EXT	msvc/msvc-2010/GL/glext.h	4210;"	d
GL_SAMPLES_PASSED	msvc/msvc-2010/GL/glext.h	344;"	d
GL_SAMPLES_PASSED_ARB	msvc/msvc-2010/GL/glext.h	1782;"	d
GL_SAMPLES_PASSED_ARB	ps3/rgl/include/export/GLES/glext.h	330;"	d
GL_SAMPLES_SGIS	msvc/msvc-2010/GL/glext.h	3292;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	msvc/msvc-2010/GL/glext.h	211;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	ps3/rgl/include/export/GLES/gl.h	190;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	msvc/msvc-2010/GL/glext.h	1474;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	msvc/msvc-2010/GL/glext.h	4199;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	msvc/msvc-2010/GL/glext.h	3281;"	d
GL_SAMPLE_ALPHA_TO_ONE	msvc/msvc-2010/GL/glext.h	212;"	d
GL_SAMPLE_ALPHA_TO_ONE	ps3/rgl/include/export/GLES/gl.h	191;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	msvc/msvc-2010/GL/glext.h	1475;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	msvc/msvc-2010/GL/glext.h	4200;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	msvc/msvc-2010/GL/glext.h	3282;"	d
GL_SAMPLE_BUFFERS	msvc/msvc-2010/GL/glext.h	214;"	d
GL_SAMPLE_BUFFERS_3DFX	msvc/msvc-2010/GL/glext.h	4189;"	d
GL_SAMPLE_BUFFERS_ARB	msvc/msvc-2010/GL/glext.h	1477;"	d
GL_SAMPLE_BUFFERS_EXT	msvc/msvc-2010/GL/glext.h	4209;"	d
GL_SAMPLE_BUFFERS_SGIS	msvc/msvc-2010/GL/glext.h	3291;"	d
GL_SAMPLE_COVERAGE	msvc/msvc-2010/GL/glext.h	213;"	d
GL_SAMPLE_COVERAGE	ps3/rgl/include/export/GLES/gl.h	192;"	d
GL_SAMPLE_COVERAGE_ARB	msvc/msvc-2010/GL/glext.h	1476;"	d
GL_SAMPLE_COVERAGE_INVERT	msvc/msvc-2010/GL/glext.h	217;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	msvc/msvc-2010/GL/glext.h	1480;"	d
GL_SAMPLE_COVERAGE_VALUE	msvc/msvc-2010/GL/glext.h	216;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	msvc/msvc-2010/GL/glext.h	1479;"	d
GL_SAMPLE_MASK	msvc/msvc-2010/GL/glext.h	2193;"	d
GL_SAMPLE_MASK_EXT	msvc/msvc-2010/GL/glext.h	4201;"	d
GL_SAMPLE_MASK_INVERT_EXT	msvc/msvc-2010/GL/glext.h	4212;"	d
GL_SAMPLE_MASK_INVERT_SGIS	msvc/msvc-2010/GL/glext.h	3294;"	d
GL_SAMPLE_MASK_NV	msvc/msvc-2010/GL/glext.h	5512;"	d
GL_SAMPLE_MASK_SGIS	msvc/msvc-2010/GL/glext.h	3283;"	d
GL_SAMPLE_MASK_VALUE	msvc/msvc-2010/GL/glext.h	2194;"	d
GL_SAMPLE_MASK_VALUE_EXT	msvc/msvc-2010/GL/glext.h	4211;"	d
GL_SAMPLE_MASK_VALUE_NV	msvc/msvc-2010/GL/glext.h	5513;"	d
GL_SAMPLE_MASK_VALUE_SGIS	msvc/msvc-2010/GL/glext.h	3293;"	d
GL_SAMPLE_PATTERN_EXT	msvc/msvc-2010/GL/glext.h	4213;"	d
GL_SAMPLE_PATTERN_SGIS	msvc/msvc-2010/GL/glext.h	3295;"	d
GL_SAMPLE_POSITION	msvc/msvc-2010/GL/glext.h	2192;"	d
GL_SAMPLE_POSITION_NV	msvc/msvc-2010/GL/glext.h	5511;"	d
GL_SAMPLE_SHADING	msvc/msvc-2010/GL/glext.h	891;"	d
GL_SAMPLE_SHADING_ARB	msvc/msvc-2010/GL/glext.h	2223;"	d
GL_SATURATE_BIT_ATI	msvc/msvc-2010/GL/glext.h	4631;"	d
GL_SCALAR_EXT	msvc/msvc-2010/GL/glext.h	4723;"	d
GL_SCALEBIAS_HINT_SGIX	msvc/msvc-2010/GL/glext.h	4492;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	msvc/msvc-2010/GL/glext.h	5958;"	d
GL_SCALED_RESOLVE_NICEST_EXT	msvc/msvc-2010/GL/glext.h	5959;"	d
GL_SCALE_BY_FOUR_NV	msvc/msvc-2010/GL/glext.h	4065;"	d
GL_SCALE_BY_ONE_HALF_NV	msvc/msvc-2010/GL/glext.h	4066;"	d
GL_SCALE_BY_TWO_NV	msvc/msvc-2010/GL/glext.h	4064;"	d
GL_SCISSOR_TEST	ps3/rgl/include/export/GLES/gl.h	180;"	d
GL_SCREEN_COORDINATES_REND	msvc/msvc-2010/GL/glext.h	3846;"	d
GL_SECONDARY_COLOR_ARRAY	msvc/msvc-2010/GL/glext.h	311;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5718;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	352;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1756;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3823;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5728;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4149;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4157;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	msvc/msvc-2010/GL/glext.h	310;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3822;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	msvc/msvc-2010/GL/glext.h	307;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3819;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	309;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3821;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	msvc/msvc-2010/GL/glext.h	308;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3820;"	d
GL_SECONDARY_COLOR_NV	msvc/msvc-2010/GL/glext.h	4050;"	d
GL_SECONDARY_INTERPOLATOR_ATI	msvc/msvc-2010/GL/glext.h	4607;"	d
GL_SEPARABLE_2D	msvc/msvc-2010/GL/glext.h	112;"	d
GL_SEPARABLE_2D_EXT	msvc/msvc-2010/GL/glext.h	3148;"	d
GL_SEPARATE_ATTRIBS	msvc/msvc-2010/GL/glext.h	535;"	d
GL_SEPARATE_ATTRIBS_EXT	msvc/msvc-2010/GL/glext.h	5480;"	d
GL_SEPARATE_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5385;"	d
GL_SEPARATE_SPECULAR_COLOR	msvc/msvc-2010/GL/glext.h	94;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3813;"	d
GL_SET	ps3/rgl/include/export/GLES/gl.h	290;"	d
GL_SET_AMD	msvc/msvc-2010/GL/glext.h	6105;"	d
GL_SGIS_detail_texture	msvc/msvc-2010/GL/glext.h	9010;"	d
GL_SGIS_fog_function	msvc/msvc-2010/GL/glext.h	9238;"	d
GL_SGIS_generate_mipmap	msvc/msvc-2010/GL/glext.h	9080;"	d
GL_SGIS_multisample	msvc/msvc-2010/GL/glext.h	9038;"	d
GL_SGIS_pixel_texture	msvc/msvc-2010/GL/glext.h	8956;"	d
GL_SGIS_point_line_texgen	msvc/msvc-2010/GL/glext.h	10118;"	d
GL_SGIS_point_parameters	msvc/msvc-2010/GL/glext.h	9156;"	d
GL_SGIS_sharpen_texture	msvc/msvc-2010/GL/glext.h	9020;"	d
GL_SGIS_texture4D	msvc/msvc-2010/GL/glext.h	8974;"	d
GL_SGIS_texture_border_clamp	msvc/msvc-2010/GL/glext.h	9096;"	d
GL_SGIS_texture_color_mask	msvc/msvc-2010/GL/glext.h	10122;"	d
GL_SGIS_texture_edge_clamp	msvc/msvc-2010/GL/glext.h	9092;"	d
GL_SGIS_texture_filter4	msvc/msvc-2010/GL/glext.h	8830;"	d
GL_SGIS_texture_lod	msvc/msvc-2010/GL/glext.h	9034;"	d
GL_SGIX_async	msvc/msvc-2010/GL/glext.h	9486;"	d
GL_SGIX_async_histogram	msvc/msvc-2010/GL/glext.h	9508;"	d
GL_SGIX_async_pixel	msvc/msvc-2010/GL/glext.h	9504;"	d
GL_SGIX_blend_alpha_minmax	msvc/msvc-2010/GL/glext.h	9478;"	d
GL_SGIX_calligraphic_fragment	msvc/msvc-2010/GL/glext.h	9340;"	d
GL_SGIX_clipmap	msvc/msvc-2010/GL/glext.h	9084;"	d
GL_SGIX_convolution_accuracy	msvc/msvc-2010/GL/glext.h	10110;"	d
GL_SGIX_depth_pass_instrument	msvc/msvc-2010/GL/glext.h	10076;"	d
GL_SGIX_depth_texture	msvc/msvc-2010/GL/glext.h	9234;"	d
GL_SGIX_flush_raster	msvc/msvc-2010/GL/glext.h	9226;"	d
GL_SGIX_fog_offset	msvc/msvc-2010/GL/glext.h	9248;"	d
GL_SGIX_fog_scale	msvc/msvc-2010/GL/glext.h	9700;"	d
GL_SGIX_fragment_lighting	msvc/msvc-2010/GL/glext.h	9400;"	d
GL_SGIX_framezoom	msvc/msvc-2010/GL/glext.h	9188;"	d
GL_SGIX_igloo_interface	msvc/msvc-2010/GL/glext.h	10130;"	d
GL_SGIX_instruments	msvc/msvc-2010/GL/glext.h	9166;"	d
GL_SGIX_interlace	msvc/msvc-2010/GL/glext.h	9116;"	d
GL_SGIX_ir_instrument1	msvc/msvc-2010/GL/glext.h	9336;"	d
GL_SGIX_list_priority	msvc/msvc-2010/GL/glext.h	9318;"	d
GL_SGIX_pixel_texture	msvc/msvc-2010/GL/glext.h	8948;"	d
GL_SGIX_pixel_tiles	msvc/msvc-2010/GL/glext.h	9120;"	d
GL_SGIX_polynomial_ffd	msvc/msvc-2010/GL/glext.h	9204;"	d
GL_SGIX_reference_plane	msvc/msvc-2010/GL/glext.h	9218;"	d
GL_SGIX_resample	msvc/msvc-2010/GL/glext.h	10114;"	d
GL_SGIX_scalebias_hint	msvc/msvc-2010/GL/glext.h	10362;"	d
GL_SGIX_shadow	msvc/msvc-2010/GL/glext.h	9088;"	d
GL_SGIX_shadow_ambient	msvc/msvc-2010/GL/glext.h	9348;"	d
GL_SGIX_sprite	msvc/msvc-2010/GL/glext.h	9128;"	d
GL_SGIX_subsample	msvc/msvc-2010/GL/glext.h	10064;"	d
GL_SGIX_tag_sample_buffer	msvc/msvc-2010/GL/glext.h	9196;"	d
GL_SGIX_texture_add_env	msvc/msvc-2010/GL/glext.h	9274;"	d
GL_SGIX_texture_coordinate_clamp	msvc/msvc-2010/GL/glext.h	10358;"	d
GL_SGIX_texture_lod_bias	msvc/msvc-2010/GL/glext.h	9344;"	d
GL_SGIX_texture_multi_buffer	msvc/msvc-2010/GL/glext.h	9142;"	d
GL_SGIX_texture_scale_bias	msvc/msvc-2010/GL/glext.h	9184;"	d
GL_SGIX_texture_select	msvc/msvc-2010/GL/glext.h	9124;"	d
GL_SGIX_vertex_preclip	msvc/msvc-2010/GL/glext.h	10106;"	d
GL_SGIX_ycrcb	msvc/msvc-2010/GL/glext.h	9396;"	d
GL_SGIX_ycrcb_subsample	msvc/msvc-2010/GL/glext.h	10072;"	d
GL_SGIX_ycrcba	msvc/msvc-2010/GL/glext.h	10068;"	d
GL_SGI_color_matrix	msvc/msvc-2010/GL/glext.h	8924;"	d
GL_SGI_color_table	msvc/msvc-2010/GL/glext.h	8928;"	d
GL_SGI_texture_color_table	msvc/msvc-2010/GL/glext.h	8984;"	d
GL_SHADER	msvc/msvc-2010/GL/glext.h	2716;"	d
GL_SHADER_BINARY_FORMATS	msvc/msvc-2010/GL/glext.h	2418;"	d
GL_SHADER_COMPILER	msvc/msvc-2010/GL/glext.h	2417;"	d
GL_SHADER_CONSISTENT_NV	msvc/msvc-2010/GL/glext.h	4323;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	msvc/msvc-2010/GL/glext.h	5867;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2592;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5796;"	d
GL_SHADER_IMAGE_ATOMIC	msvc/msvc-2010/GL/glext.h	2894;"	d
GL_SHADER_IMAGE_LOAD	msvc/msvc-2010/GL/glext.h	2892;"	d
GL_SHADER_IMAGE_STORE	msvc/msvc-2010/GL/glext.h	2893;"	d
GL_SHADER_INCLUDE_ARB	msvc/msvc-2010/GL/glext.h	2247;"	d
GL_SHADER_OBJECT_ARB	msvc/msvc-2010/GL/glext.h	1787;"	d
GL_SHADER_OPERATION_NV	msvc/msvc-2010/GL/glext.h	4325;"	d
GL_SHADER_SOURCE_LENGTH	msvc/msvc-2010/GL/glext.h	439;"	d
GL_SHADER_SRGB_REMAP_SCE	ps3/rgl/include/export/GLES/glext.h	237;"	d
GL_SHADER_STOCK_BLEND	gfx/shader_common.h	33;"	d
GL_SHADER_STORAGE_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	3020;"	d
GL_SHADER_STORAGE_BLOCK	msvc/msvc-2010/GL/glext.h	2952;"	d
GL_SHADER_STORAGE_BUFFER	msvc/msvc-2010/GL/glext.h	3006;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	3007;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	msvc/msvc-2010/GL/glext.h	3019;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	3009;"	d
GL_SHADER_STORAGE_BUFFER_START	msvc/msvc-2010/GL/glext.h	3008;"	d
GL_SHADER_TYPE	msvc/msvc-2010/GL/glext.h	411;"	d
GL_SHADING_LANGUAGE_VERSION	msvc/msvc-2010/GL/glext.h	443;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	msvc/msvc-2010/GL/glext.h	1839;"	d
GL_SHADOW_AMBIENT_SGIX	msvc/msvc-2010/GL/glext.h	3632;"	d
GL_SHADOW_ATTENUATION_EXT	msvc/msvc-2010/GL/glext.h	3729;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	msvc/msvc-2010/GL/glext.h	3807;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	msvc/msvc-2010/GL/glext.h	3261;"	d
GL_SHININESS	ps3/rgl/include/export/GLES/gl.h	297;"	d
GL_SHORT	ps3/rgl/include/export/GLES/gl.h	269;"	d
GL_SIGNALED	msvc/msvc-2010/GL/glext.h	2182;"	d
GL_SIGNED_ALPHA8_NV	msvc/msvc-2010/GL/glext.h	4363;"	d
GL_SIGNED_ALPHA_NV	msvc/msvc-2010/GL/glext.h	4362;"	d
GL_SIGNED_HILO16_NV	msvc/msvc-2010/GL/glext.h	4353;"	d
GL_SIGNED_HILO8_NV	msvc/msvc-2010/GL/glext.h	4838;"	d
GL_SIGNED_HILO_NV	msvc/msvc-2010/GL/glext.h	4352;"	d
GL_SIGNED_IDENTITY_NV	msvc/msvc-2010/GL/glext.h	4062;"	d
GL_SIGNED_INTENSITY8_NV	msvc/msvc-2010/GL/glext.h	4365;"	d
GL_SIGNED_INTENSITY_NV	msvc/msvc-2010/GL/glext.h	4364;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	msvc/msvc-2010/GL/glext.h	4361;"	d
GL_SIGNED_LUMINANCE8_NV	msvc/msvc-2010/GL/glext.h	4359;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	msvc/msvc-2010/GL/glext.h	4360;"	d
GL_SIGNED_LUMINANCE_NV	msvc/msvc-2010/GL/glext.h	4358;"	d
GL_SIGNED_NEGATE_NV	msvc/msvc-2010/GL/glext.h	4063;"	d
GL_SIGNED_NORMALIZED	msvc/msvc-2010/GL/glext.h	744;"	d
GL_SIGNED_RGB8_NV	msvc/msvc-2010/GL/glext.h	4357;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	msvc/msvc-2010/GL/glext.h	4370;"	d
GL_SIGNED_RGBA8_NV	msvc/msvc-2010/GL/glext.h	4355;"	d
GL_SIGNED_RGBA_NV	msvc/msvc-2010/GL/glext.h	4354;"	d
GL_SIGNED_RGB_NV	msvc/msvc-2010/GL/glext.h	4356;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	msvc/msvc-2010/GL/glext.h	4369;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	msvc/msvc-2010/GL/glext.h	2899;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	msvc/msvc-2010/GL/glext.h	2901;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	msvc/msvc-2010/GL/glext.h	2900;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	msvc/msvc-2010/GL/glext.h	2902;"	d
GL_SINGLE_COLOR	msvc/msvc-2010/GL/glext.h	93;"	d
GL_SINGLE_COLOR_EXT	msvc/msvc-2010/GL/glext.h	3812;"	d
GL_SKIP_COMPONENTS1_NV	msvc/msvc-2010/GL/glext.h	5393;"	d
GL_SKIP_COMPONENTS2_NV	msvc/msvc-2010/GL/glext.h	5392;"	d
GL_SKIP_COMPONENTS3_NV	msvc/msvc-2010/GL/glext.h	5391;"	d
GL_SKIP_COMPONENTS4_NV	msvc/msvc-2010/GL/glext.h	5390;"	d
GL_SKIP_DECODE_EXT	msvc/msvc-2010/GL/glext.h	5933;"	d
GL_SKIP_MISSING_GLYPH_NV	msvc/msvc-2010/GL/glext.h	6020;"	d
GL_SLICE_ACCUM_SUN	msvc/msvc-2010/GL/glext.h	4798;"	d
GL_SLUMINANCE	msvc/msvc-2010/GL/glext.h	477;"	d
GL_SLUMINANCE8	msvc/msvc-2010/GL/glext.h	478;"	d
GL_SLUMINANCE8_ALPHA8	msvc/msvc-2010/GL/glext.h	476;"	d
GL_SLUMINANCE8_ALPHA8_EXT	msvc/msvc-2010/GL/glext.h	5145;"	d
GL_SLUMINANCE8_EXT	msvc/msvc-2010/GL/glext.h	5147;"	d
GL_SLUMINANCE_ALPHA	msvc/msvc-2010/GL/glext.h	475;"	d
GL_SLUMINANCE_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	5144;"	d
GL_SLUMINANCE_EXT	msvc/msvc-2010/GL/glext.h	5146;"	d
GL_SMALL_CCW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6057;"	d
GL_SMALL_CW_ARC_TO_NV	msvc/msvc-2010/GL/glext.h	6059;"	d
GL_SMOOTH	ps3/rgl/include/export/GLES/gl.h	331;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6055;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	msvc/msvc-2010/GL/glext.h	89;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	msvc/msvc-2010/GL/glext.h	88;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	ps3/rgl/include/export/GLES/gl.h	221;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	msvc/msvc-2010/GL/glext.h	87;"	d
GL_SMOOTH_POINT_SIZE_RANGE	msvc/msvc-2010/GL/glext.h	86;"	d
GL_SMOOTH_POINT_SIZE_RANGE	ps3/rgl/include/export/GLES/gl.h	220;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	msvc/msvc-2010/GL/glext.h	6053;"	d
GL_SOURCE0_ALPHA	msvc/msvc-2010/GL/glext.h	255;"	d
GL_SOURCE0_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1592;"	d
GL_SOURCE0_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3880;"	d
GL_SOURCE0_RGB	msvc/msvc-2010/GL/glext.h	252;"	d
GL_SOURCE0_RGB_ARB	msvc/msvc-2010/GL/glext.h	1589;"	d
GL_SOURCE0_RGB_EXT	msvc/msvc-2010/GL/glext.h	3877;"	d
GL_SOURCE1_ALPHA	msvc/msvc-2010/GL/glext.h	256;"	d
GL_SOURCE1_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1593;"	d
GL_SOURCE1_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3881;"	d
GL_SOURCE1_RGB	msvc/msvc-2010/GL/glext.h	253;"	d
GL_SOURCE1_RGB_ARB	msvc/msvc-2010/GL/glext.h	1590;"	d
GL_SOURCE1_RGB_EXT	msvc/msvc-2010/GL/glext.h	3878;"	d
GL_SOURCE2_ALPHA	msvc/msvc-2010/GL/glext.h	257;"	d
GL_SOURCE2_ALPHA_ARB	msvc/msvc-2010/GL/glext.h	1594;"	d
GL_SOURCE2_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	3882;"	d
GL_SOURCE2_RGB	msvc/msvc-2010/GL/glext.h	254;"	d
GL_SOURCE2_RGB_ARB	msvc/msvc-2010/GL/glext.h	1591;"	d
GL_SOURCE2_RGB_EXT	msvc/msvc-2010/GL/glext.h	3879;"	d
GL_SOURCE3_ALPHA_NV	msvc/msvc-2010/GL/glext.h	4116;"	d
GL_SOURCE3_RGB_NV	msvc/msvc-2010/GL/glext.h	4115;"	d
GL_SPARE0_NV	msvc/msvc-2010/GL/glext.h	4051;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	msvc/msvc-2010/GL/glext.h	4055;"	d
GL_SPARE1_NV	msvc/msvc-2010/GL/glext.h	4052;"	d
GL_SPECULAR	ps3/rgl/include/export/GLES/gl.h	257;"	d
GL_SPHERE_MAP	ps3/rgl/include/export/GLES/glext.h	83;"	d
GL_SPOT_CUTOFF	ps3/rgl/include/export/GLES/gl.h	261;"	d
GL_SPOT_DIRECTION	ps3/rgl/include/export/GLES/gl.h	259;"	d
GL_SPOT_EXPONENT	ps3/rgl/include/export/GLES/gl.h	260;"	d
GL_SPRITE_AXIAL_SGIX	msvc/msvc-2010/GL/glext.h	3435;"	d
GL_SPRITE_AXIS_SGIX	msvc/msvc-2010/GL/glext.h	3433;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	msvc/msvc-2010/GL/glext.h	3437;"	d
GL_SPRITE_MODE_SGIX	msvc/msvc-2010/GL/glext.h	3432;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	msvc/msvc-2010/GL/glext.h	3436;"	d
GL_SPRITE_SGIX	msvc/msvc-2010/GL/glext.h	3431;"	d
GL_SPRITE_TRANSLATION_SGIX	msvc/msvc-2010/GL/glext.h	3434;"	d
GL_SQUARE_NV	msvc/msvc-2010/GL/glext.h	6014;"	d
GL_SRC0_ALPHA	msvc/msvc-2010/GL/glext.h	366;"	d
GL_SRC0_RGB	msvc/msvc-2010/GL/glext.h	363;"	d
GL_SRC1_ALPHA	msvc/msvc-2010/GL/glext.h	345;"	d
GL_SRC1_COLOR	msvc/msvc-2010/GL/glext.h	2260;"	d
GL_SRC1_RGB	msvc/msvc-2010/GL/glext.h	364;"	d
GL_SRC2_ALPHA	msvc/msvc-2010/GL/glext.h	367;"	d
GL_SRC2_RGB	msvc/msvc-2010/GL/glext.h	365;"	d
GL_SRC_ALPHA	ps3/rgl/include/export/GLES/gl.h	118;"	d
GL_SRC_ALPHA_SATURATE	ps3/rgl/include/export/GLES/gl.h	128;"	d
GL_SRC_COLOR	ps3/rgl/include/export/GLES/gl.h	116;"	d
GL_SRGB	msvc/msvc-2010/GL/glext.h	468;"	d
GL_SRGB8	msvc/msvc-2010/GL/glext.h	469;"	d
GL_SRGB8_ALPHA8	msvc/msvc-2010/GL/glext.h	471;"	d
GL_SRGB8_ALPHA8_EXT	msvc/msvc-2010/GL/glext.h	5143;"	d
GL_SRGB8_EXT	msvc/msvc-2010/GL/glext.h	5141;"	d
GL_SRGB_ALPHA	msvc/msvc-2010/GL/glext.h	470;"	d
GL_SRGB_ALPHA_EXT	msvc/msvc-2010/GL/glext.h	5142;"	d
GL_SRGB_DECODE_ARB	msvc/msvc-2010/GL/glext.h	2881;"	d
GL_SRGB_EXT	msvc/msvc-2010/GL/glext.h	5140;"	d
GL_SRGB_READ	msvc/msvc-2010/GL/glext.h	2879;"	d
GL_SRGB_WRITE	msvc/msvc-2010/GL/glext.h	2880;"	d
GL_STACK_OVERFLOW	ps3/rgl/include/export/GLES/gl.h	199;"	d
GL_STACK_UNDERFLOW	ps3/rgl/include/export/GLES/gl.h	200;"	d
GL_STANDARD_FONT_NAME_NV	msvc/msvc-2010/GL/glext.h	5965;"	d
GL_STATIC_ATI	msvc/msvc-2010/GL/glext.h	4650;"	d
GL_STATIC_COPY	msvc/msvc-2010/GL/glext.h	340;"	d
GL_STATIC_COPY	ps3/rgl/include/export/GLES/glext.h	218;"	d
GL_STATIC_COPY_ARB	msvc/msvc-2010/GL/glext.h	1771;"	d
GL_STATIC_DRAW	msvc/msvc-2010/GL/glext.h	338;"	d
GL_STATIC_DRAW	ps3/rgl/include/export/GLES/glext.h	216;"	d
GL_STATIC_DRAW_ARB	msvc/msvc-2010/GL/glext.h	1769;"	d
GL_STATIC_READ	msvc/msvc-2010/GL/glext.h	339;"	d
GL_STATIC_READ	ps3/rgl/include/export/GLES/glext.h	217;"	d
GL_STATIC_READ_ARB	msvc/msvc-2010/GL/glext.h	1770;"	d
GL_STENCIL8_SCE	ps3/rgl/include/export/GLES/glext.h	196;"	d
GL_STENCIL_ATTACHMENT	msvc/msvc-2010/GL/glext.h	1991;"	d
GL_STENCIL_ATTACHMENT_EXT	msvc/msvc-2010/GL/glext.h	5106;"	d
GL_STENCIL_ATTACHMENT_OES	ps3/rgl/include/export/GLES/glext.h	305;"	d
GL_STENCIL_BACK_FAIL	msvc/msvc-2010/GL/glext.h	380;"	d
GL_STENCIL_BACK_FAIL_ATI	msvc/msvc-2010/GL/glext.h	5004;"	d
GL_STENCIL_BACK_FUNC	msvc/msvc-2010/GL/glext.h	379;"	d
GL_STENCIL_BACK_FUNC_ATI	msvc/msvc-2010/GL/glext.h	5003;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	msvc/msvc-2010/GL/glext.h	6108;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	msvc/msvc-2010/GL/glext.h	381;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	msvc/msvc-2010/GL/glext.h	5005;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	msvc/msvc-2010/GL/glext.h	382;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	msvc/msvc-2010/GL/glext.h	5006;"	d
GL_STENCIL_BACK_REF	msvc/msvc-2010/GL/glext.h	448;"	d
GL_STENCIL_BACK_VALUE_MASK	msvc/msvc-2010/GL/glext.h	449;"	d
GL_STENCIL_BACK_WRITEMASK	msvc/msvc-2010/GL/glext.h	450;"	d
GL_STENCIL_BUFFER_BIT	ps3/rgl/include/export/GLES/gl.h	87;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	msvc/msvc-2010/GL/glext.h	5136;"	d
GL_STENCIL_COMPONENTS	msvc/msvc-2010/GL/glext.h	2861;"	d
GL_STENCIL_INDEX	ps3/rgl/include/export/GLES/glext.h	201;"	d
GL_STENCIL_INDEX1	msvc/msvc-2010/GL/glext.h	1997;"	d
GL_STENCIL_INDEX16	msvc/msvc-2010/GL/glext.h	2000;"	d
GL_STENCIL_INDEX16_EXT	msvc/msvc-2010/GL/glext.h	5115;"	d
GL_STENCIL_INDEX1_EXT	msvc/msvc-2010/GL/glext.h	5112;"	d
GL_STENCIL_INDEX4	msvc/msvc-2010/GL/glext.h	1998;"	d
GL_STENCIL_INDEX4_EXT	msvc/msvc-2010/GL/glext.h	5113;"	d
GL_STENCIL_INDEX4_OES	ps3/rgl/include/export/GLES/glext.h	312;"	d
GL_STENCIL_INDEX8	msvc/msvc-2010/GL/glext.h	1999;"	d
GL_STENCIL_INDEX8_EXT	msvc/msvc-2010/GL/glext.h	5114;"	d
GL_STENCIL_INDEX8_OES	ps3/rgl/include/export/GLES/glext.h	313;"	d
GL_STENCIL_INDEX_OES	ps3/rgl/include/export/GLES/glext.h	311;"	d
GL_STENCIL_OP_VALUE_AMD	msvc/msvc-2010/GL/glext.h	6107;"	d
GL_STENCIL_RENDERABLE	msvc/msvc-2010/GL/glext.h	2864;"	d
GL_STENCIL_TAG_BITS_EXT	msvc/msvc-2010/GL/glext.h	5135;"	d
GL_STENCIL_TEST	ps3/rgl/include/export/GLES/gl.h	168;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	msvc/msvc-2010/GL/glext.h	4849;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	ps3/rgl/include/export/GLES/glext.h	337;"	d
GL_STORAGE_CACHED_APPLE	msvc/msvc-2010/GL/glext.h	4882;"	d
GL_STORAGE_CLIENT_APPLE	msvc/msvc-2010/GL/glext.h	4881;"	d
GL_STORAGE_PRIVATE_APPLE	msvc/msvc-2010/GL/glext.h	5601;"	d
GL_STORAGE_SHARED_APPLE	msvc/msvc-2010/GL/glext.h	4883;"	d
GL_STREAM_COPY	msvc/msvc-2010/GL/glext.h	337;"	d
GL_STREAM_COPY	ps3/rgl/include/export/GLES/glext.h	215;"	d
GL_STREAM_COPY_ARB	msvc/msvc-2010/GL/glext.h	1768;"	d
GL_STREAM_DRAW	msvc/msvc-2010/GL/glext.h	335;"	d
GL_STREAM_DRAW	ps3/rgl/include/export/GLES/glext.h	213;"	d
GL_STREAM_DRAW_ARB	msvc/msvc-2010/GL/glext.h	1766;"	d
GL_STREAM_READ	msvc/msvc-2010/GL/glext.h	336;"	d
GL_STREAM_READ	ps3/rgl/include/export/GLES/glext.h	214;"	d
GL_STREAM_READ_ARB	msvc/msvc-2010/GL/glext.h	1767;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	msvc/msvc-2010/GL/glext.h	3589;"	d
GL_STRICT_LIGHTING_HINT_PGI	msvc/msvc-2010/GL/glext.h	3590;"	d
GL_STRICT_SCISSOR_HINT_PGI	msvc/msvc-2010/GL/glext.h	3591;"	d
GL_SUBPIXEL_BITS	ps3/rgl/include/export/GLES/gl.h	236;"	d
GL_SUBSAMPLE_DISTANCE_AMD	msvc/msvc-2010/GL/glext.h	5947;"	d
GL_SUBTRACT	msvc/msvc-2010/GL/glext.h	267;"	d
GL_SUBTRACT_ARB	msvc/msvc-2010/GL/glext.h	1604;"	d
GL_SUB_ATI	msvc/msvc-2010/GL/glext.h	4599;"	d
GL_SUCCESS_NV	msvc/msvc-2010/GL/glext.h	5676;"	d
GL_SUNX_constant_data	msvc/msvc-2010/GL/glext.h	9704;"	d
GL_SUN_convolution_border_modes	msvc/msvc-2010/GL/glext.h	9876;"	d
GL_SUN_global_alpha	msvc/msvc-2010/GL/glext.h	9712;"	d
GL_SUN_mesh_array	msvc/msvc-2010/GL/glext.h	10668;"	d
GL_SUN_slice_accum	msvc/msvc-2010/GL/glext.h	10676;"	d
GL_SUN_triangle_list	msvc/msvc-2010/GL/glext.h	9734;"	d
GL_SUN_vertex	msvc/msvc-2010/GL/glext.h	9754;"	d
GL_SURFACE_MAPPED_NV	msvc/msvc-2010/GL/glext.h	5918;"	d
GL_SURFACE_REGISTERED_NV	msvc/msvc-2010/GL/glext.h	5917;"	d
GL_SURFACE_STATE_NV	msvc/msvc-2010/GL/glext.h	5916;"	d
GL_SWIZZLE_STQ_ATI	msvc/msvc-2010/GL/glext.h	4617;"	d
GL_SWIZZLE_STQ_DQ_ATI	msvc/msvc-2010/GL/glext.h	4619;"	d
GL_SWIZZLE_STRQ_ATI	msvc/msvc-2010/GL/glext.h	4620;"	d
GL_SWIZZLE_STRQ_DQ_ATI	msvc/msvc-2010/GL/glext.h	4621;"	d
GL_SWIZZLE_STR_ATI	msvc/msvc-2010/GL/glext.h	4616;"	d
GL_SWIZZLE_STR_DR_ATI	msvc/msvc-2010/GL/glext.h	4618;"	d
GL_SYNC_CL_EVENT_ARB	msvc/msvc-2010/GL/glext.h	2481;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	msvc/msvc-2010/GL/glext.h	2482;"	d
GL_SYNC_CONDITION	msvc/msvc-2010/GL/glext.h	2176;"	d
GL_SYNC_FENCE	msvc/msvc-2010/GL/glext.h	2179;"	d
GL_SYNC_FLAGS	msvc/msvc-2010/GL/glext.h	2178;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	msvc/msvc-2010/GL/glext.h	2187;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	msvc/msvc-2010/GL/glext.h	2180;"	d
GL_SYNC_STATUS	msvc/msvc-2010/GL/glext.h	2177;"	d
GL_SYNC_X11_FENCE_EXT	msvc/msvc-2010/GL/glext.h	5951;"	d
GL_SYSTEM_DRAW	ps3/rgl/include/export/GLES/glext.h	222;"	d
GL_SYSTEM_FONT_NAME_NV	msvc/msvc-2010/GL/glext.h	5966;"	d
GL_T	ps3/rgl/include/export/GLES/glext.h	87;"	d
GL_T2F_IUI_N3F_V2F_EXT	msvc/msvc-2010/GL/glext.h	3657;"	d
GL_T2F_IUI_N3F_V3F_EXT	msvc/msvc-2010/GL/glext.h	3658;"	d
GL_T2F_IUI_V2F_EXT	msvc/msvc-2010/GL/glext.h	3655;"	d
GL_T2F_IUI_V3F_EXT	msvc/msvc-2010/GL/glext.h	3656;"	d
GL_TABLE_TOO_LARGE	msvc/msvc-2010/GL/glext.h	143;"	d
GL_TABLE_TOO_LARGE_EXT	msvc/msvc-2010/GL/glext.h	3142;"	d
GL_TANGENT_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3851;"	d
GL_TANGENT_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3859;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3856;"	d
GL_TANGENT_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3855;"	d
GL_TESSELLATION_FACTOR_AMD	msvc/msvc-2010/GL/glext.h	5554;"	d
GL_TESSELLATION_MODE_AMD	msvc/msvc-2010/GL/glext.h	5553;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	msvc/msvc-2010/GL/glext.h	2352;"	d
GL_TESS_CONTROL_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	5874;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5876;"	d
GL_TESS_CONTROL_SHADER	msvc/msvc-2010/GL/glext.h	2384;"	d
GL_TESS_CONTROL_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2437;"	d
GL_TESS_CONTROL_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2955;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2961;"	d
GL_TESS_CONTROL_TEXTURE	msvc/msvc-2010/GL/glext.h	2884;"	d
GL_TESS_EVALUATION_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	5875;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5877;"	d
GL_TESS_EVALUATION_SHADER	msvc/msvc-2010/GL/glext.h	2383;"	d
GL_TESS_EVALUATION_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2438;"	d
GL_TESS_EVALUATION_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2956;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2962;"	d
GL_TESS_EVALUATION_TEXTURE	msvc/msvc-2010/GL/glext.h	2885;"	d
GL_TESS_GEN_MODE	msvc/msvc-2010/GL/glext.h	2353;"	d
GL_TESS_GEN_POINT_MODE	msvc/msvc-2010/GL/glext.h	2356;"	d
GL_TESS_GEN_SPACING	msvc/msvc-2010/GL/glext.h	2354;"	d
GL_TESS_GEN_VERTEX_ORDER	msvc/msvc-2010/GL/glext.h	2355;"	d
GL_TEXCOORD1_BIT_PGI	msvc/msvc-2010/GL/glext.h	3568;"	d
GL_TEXCOORD2_BIT_PGI	msvc/msvc-2010/GL/glext.h	3569;"	d
GL_TEXCOORD3_BIT_PGI	msvc/msvc-2010/GL/glext.h	3570;"	d
GL_TEXCOORD4_BIT_PGI	msvc/msvc-2010/GL/glext.h	3571;"	d
GL_TEXTURE	ps3/rgl/include/export/GLES/gl.h	306;"	d
GL_TEXTURE0	msvc/msvc-2010/GL/glext.h	177;"	d
GL_TEXTURE0	ps3/rgl/include/export/GLES/gl.h	399;"	d
GL_TEXTURE0_ARB	msvc/msvc-2010/GL/glext.h	1428;"	d
GL_TEXTURE1	msvc/msvc-2010/GL/glext.h	178;"	d
GL_TEXTURE1	ps3/rgl/include/export/GLES/gl.h	400;"	d
GL_TEXTURE10	msvc/msvc-2010/GL/glext.h	187;"	d
GL_TEXTURE10	ps3/rgl/include/export/GLES/gl.h	409;"	d
GL_TEXTURE10_ARB	msvc/msvc-2010/GL/glext.h	1438;"	d
GL_TEXTURE11	msvc/msvc-2010/GL/glext.h	188;"	d
GL_TEXTURE11	ps3/rgl/include/export/GLES/gl.h	410;"	d
GL_TEXTURE11_ARB	msvc/msvc-2010/GL/glext.h	1439;"	d
GL_TEXTURE12	msvc/msvc-2010/GL/glext.h	189;"	d
GL_TEXTURE12	ps3/rgl/include/export/GLES/gl.h	411;"	d
GL_TEXTURE12_ARB	msvc/msvc-2010/GL/glext.h	1440;"	d
GL_TEXTURE13	msvc/msvc-2010/GL/glext.h	190;"	d
GL_TEXTURE13	ps3/rgl/include/export/GLES/gl.h	412;"	d
GL_TEXTURE13_ARB	msvc/msvc-2010/GL/glext.h	1441;"	d
GL_TEXTURE14	msvc/msvc-2010/GL/glext.h	191;"	d
GL_TEXTURE14	ps3/rgl/include/export/GLES/gl.h	413;"	d
GL_TEXTURE14_ARB	msvc/msvc-2010/GL/glext.h	1442;"	d
GL_TEXTURE15	msvc/msvc-2010/GL/glext.h	192;"	d
GL_TEXTURE15	ps3/rgl/include/export/GLES/gl.h	414;"	d
GL_TEXTURE15_ARB	msvc/msvc-2010/GL/glext.h	1443;"	d
GL_TEXTURE16	msvc/msvc-2010/GL/glext.h	193;"	d
GL_TEXTURE16	ps3/rgl/include/export/GLES/gl.h	415;"	d
GL_TEXTURE16_ARB	msvc/msvc-2010/GL/glext.h	1444;"	d
GL_TEXTURE17	msvc/msvc-2010/GL/glext.h	194;"	d
GL_TEXTURE17	ps3/rgl/include/export/GLES/gl.h	416;"	d
GL_TEXTURE17_ARB	msvc/msvc-2010/GL/glext.h	1445;"	d
GL_TEXTURE18	msvc/msvc-2010/GL/glext.h	195;"	d
GL_TEXTURE18	ps3/rgl/include/export/GLES/gl.h	417;"	d
GL_TEXTURE18_ARB	msvc/msvc-2010/GL/glext.h	1446;"	d
GL_TEXTURE19	msvc/msvc-2010/GL/glext.h	196;"	d
GL_TEXTURE19	ps3/rgl/include/export/GLES/gl.h	418;"	d
GL_TEXTURE19_ARB	msvc/msvc-2010/GL/glext.h	1447;"	d
GL_TEXTURE1_ARB	msvc/msvc-2010/GL/glext.h	1429;"	d
GL_TEXTURE2	msvc/msvc-2010/GL/glext.h	179;"	d
GL_TEXTURE2	ps3/rgl/include/export/GLES/gl.h	401;"	d
GL_TEXTURE20	msvc/msvc-2010/GL/glext.h	197;"	d
GL_TEXTURE20	ps3/rgl/include/export/GLES/gl.h	419;"	d
GL_TEXTURE20_ARB	msvc/msvc-2010/GL/glext.h	1448;"	d
GL_TEXTURE21	msvc/msvc-2010/GL/glext.h	198;"	d
GL_TEXTURE21	ps3/rgl/include/export/GLES/gl.h	420;"	d
GL_TEXTURE21_ARB	msvc/msvc-2010/GL/glext.h	1449;"	d
GL_TEXTURE22	msvc/msvc-2010/GL/glext.h	199;"	d
GL_TEXTURE22	ps3/rgl/include/export/GLES/gl.h	421;"	d
GL_TEXTURE22_ARB	msvc/msvc-2010/GL/glext.h	1450;"	d
GL_TEXTURE23	msvc/msvc-2010/GL/glext.h	200;"	d
GL_TEXTURE23	ps3/rgl/include/export/GLES/gl.h	422;"	d
GL_TEXTURE23_ARB	msvc/msvc-2010/GL/glext.h	1451;"	d
GL_TEXTURE24	msvc/msvc-2010/GL/glext.h	201;"	d
GL_TEXTURE24	ps3/rgl/include/export/GLES/gl.h	423;"	d
GL_TEXTURE24_ARB	msvc/msvc-2010/GL/glext.h	1452;"	d
GL_TEXTURE25	msvc/msvc-2010/GL/glext.h	202;"	d
GL_TEXTURE25	ps3/rgl/include/export/GLES/gl.h	424;"	d
GL_TEXTURE25_ARB	msvc/msvc-2010/GL/glext.h	1453;"	d
GL_TEXTURE26	msvc/msvc-2010/GL/glext.h	203;"	d
GL_TEXTURE26	ps3/rgl/include/export/GLES/gl.h	425;"	d
GL_TEXTURE26_ARB	msvc/msvc-2010/GL/glext.h	1454;"	d
GL_TEXTURE27	msvc/msvc-2010/GL/glext.h	204;"	d
GL_TEXTURE27	ps3/rgl/include/export/GLES/gl.h	426;"	d
GL_TEXTURE27_ARB	msvc/msvc-2010/GL/glext.h	1455;"	d
GL_TEXTURE28	msvc/msvc-2010/GL/glext.h	205;"	d
GL_TEXTURE28	ps3/rgl/include/export/GLES/gl.h	427;"	d
GL_TEXTURE28_ARB	msvc/msvc-2010/GL/glext.h	1456;"	d
GL_TEXTURE29	msvc/msvc-2010/GL/glext.h	206;"	d
GL_TEXTURE29	ps3/rgl/include/export/GLES/gl.h	428;"	d
GL_TEXTURE29_ARB	msvc/msvc-2010/GL/glext.h	1457;"	d
GL_TEXTURE2_ARB	msvc/msvc-2010/GL/glext.h	1430;"	d
GL_TEXTURE3	msvc/msvc-2010/GL/glext.h	180;"	d
GL_TEXTURE3	ps3/rgl/include/export/GLES/gl.h	402;"	d
GL_TEXTURE30	msvc/msvc-2010/GL/glext.h	207;"	d
GL_TEXTURE30	ps3/rgl/include/export/GLES/gl.h	429;"	d
GL_TEXTURE30_ARB	msvc/msvc-2010/GL/glext.h	1458;"	d
GL_TEXTURE31	msvc/msvc-2010/GL/glext.h	208;"	d
GL_TEXTURE31	ps3/rgl/include/export/GLES/gl.h	430;"	d
GL_TEXTURE31_ARB	msvc/msvc-2010/GL/glext.h	1459;"	d
GL_TEXTURE3_ARB	msvc/msvc-2010/GL/glext.h	1431;"	d
GL_TEXTURE4	msvc/msvc-2010/GL/glext.h	181;"	d
GL_TEXTURE4	ps3/rgl/include/export/GLES/gl.h	403;"	d
GL_TEXTURE4_ARB	msvc/msvc-2010/GL/glext.h	1432;"	d
GL_TEXTURE5	msvc/msvc-2010/GL/glext.h	182;"	d
GL_TEXTURE5	ps3/rgl/include/export/GLES/gl.h	404;"	d
GL_TEXTURE5_ARB	msvc/msvc-2010/GL/glext.h	1433;"	d
GL_TEXTURE6	msvc/msvc-2010/GL/glext.h	183;"	d
GL_TEXTURE6	ps3/rgl/include/export/GLES/gl.h	405;"	d
GL_TEXTURE6_ARB	msvc/msvc-2010/GL/glext.h	1434;"	d
GL_TEXTURE7	msvc/msvc-2010/GL/glext.h	184;"	d
GL_TEXTURE7	ps3/rgl/include/export/GLES/gl.h	406;"	d
GL_TEXTURE7_ARB	msvc/msvc-2010/GL/glext.h	1435;"	d
GL_TEXTURE8	msvc/msvc-2010/GL/glext.h	185;"	d
GL_TEXTURE8	ps3/rgl/include/export/GLES/gl.h	407;"	d
GL_TEXTURE8_ARB	msvc/msvc-2010/GL/glext.h	1436;"	d
GL_TEXTURE9	msvc/msvc-2010/GL/glext.h	186;"	d
GL_TEXTURE9	ps3/rgl/include/export/GLES/gl.h	408;"	d
GL_TEXTURE9_ARB	msvc/msvc-2010/GL/glext.h	1437;"	d
GL_TEXTURE_1D_ARRAY	msvc/msvc-2010/GL/glext.h	512;"	d
GL_TEXTURE_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5287;"	d
GL_TEXTURE_1D_BINDING_EXT	msvc/msvc-2010/GL/glext.h	3241;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	msvc/msvc-2010/GL/glext.h	5176;"	d
GL_TEXTURE_1D_STACK_MESAX	msvc/msvc-2010/GL/glext.h	5172;"	d
GL_TEXTURE_2D	ps3/rgl/include/export/GLES/gl.h	163;"	d
GL_TEXTURE_2D_ARRAY	msvc/msvc-2010/GL/glext.h	514;"	d
GL_TEXTURE_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5289;"	d
GL_TEXTURE_2D_BINDING_EXT	msvc/msvc-2010/GL/glext.h	3242;"	d
GL_TEXTURE_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2196;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2198;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	msvc/msvc-2010/GL/glext.h	5177;"	d
GL_TEXTURE_2D_STACK_MESAX	msvc/msvc-2010/GL/glext.h	5173;"	d
GL_TEXTURE_3D	msvc/msvc-2010/GL/glext.h	65;"	d
GL_TEXTURE_3D	ps3/rgl/include/export/GLES/glext.h	111;"	d
GL_TEXTURE_3D_BINDING_EXT	msvc/msvc-2010/GL/glext.h	3243;"	d
GL_TEXTURE_3D_EXT	msvc/msvc-2010/GL/glext.h	3110;"	d
GL_TEXTURE_4DSIZE_SGIS	msvc/msvc-2010/GL/glext.h	3220;"	d
GL_TEXTURE_4D_BINDING_SGIS	msvc/msvc-2010/GL/glext.h	3223;"	d
GL_TEXTURE_4D_SGIS	msvc/msvc-2010/GL/glext.h	3218;"	d
GL_TEXTURE_ALLOCATION_HINT_SCE	ps3/rgl/include/export/GLES/glext.h	322;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3096;"	d
GL_TEXTURE_ALPHA_TYPE	msvc/msvc-2010/GL/glext.h	1952;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1896;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	msvc/msvc-2010/GL/glext.h	3730;"	d
GL_TEXTURE_BASE_LEVEL	msvc/msvc-2010/GL/glext.h	84;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	msvc/msvc-2010/GL/glext.h	3275;"	d
GL_TEXTURE_BINDING_1D_ARRAY	msvc/msvc-2010/GL/glext.h	516;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5291;"	d
GL_TEXTURE_BINDING_2D_ARRAY	msvc/msvc-2010/GL/glext.h	517;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5292;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2200;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2201;"	d
GL_TEXTURE_BINDING_3D	msvc/msvc-2010/GL/glext.h	60;"	d
GL_TEXTURE_BINDING_BUFFER	msvc/msvc-2010/GL/glext.h	726;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	2061;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5301;"	d
GL_TEXTURE_BINDING_CUBE_MAP	msvc/msvc-2010/GL/glext.h	219;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	msvc/msvc-2010/GL/glext.h	1491;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	896;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2229;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	msvc/msvc-2010/GL/glext.h	3980;"	d
GL_TEXTURE_BINDING_RECTANGLE	msvc/msvc-2010/GL/glext.h	729;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	msvc/msvc-2010/GL/glext.h	1875;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4310;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	msvc/msvc-2010/GL/glext.h	5514;"	d
GL_TEXTURE_BLUE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3095;"	d
GL_TEXTURE_BLUE_TYPE	msvc/msvc-2010/GL/glext.h	1951;"	d
GL_TEXTURE_BLUE_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1895;"	d
GL_TEXTURE_BORDER_COLOR	ps3/rgl/include/export/GLES/glext.h	138;"	d
GL_TEXTURE_BORDER_VALUES_NV	msvc/msvc-2010/GL/glext.h	4383;"	d
GL_TEXTURE_BUFFER	msvc/msvc-2010/GL/glext.h	724;"	d
GL_TEXTURE_BUFFER_ARB	msvc/msvc-2010/GL/glext.h	2059;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	msvc/msvc-2010/GL/glext.h	727;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	msvc/msvc-2010/GL/glext.h	2062;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5302;"	d
GL_TEXTURE_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5299;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	msvc/msvc-2010/GL/glext.h	2063;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	msvc/msvc-2010/GL/glext.h	5303;"	d
GL_TEXTURE_BUFFER_OFFSET	msvc/msvc-2010/GL/glext.h	3030;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	msvc/msvc-2010/GL/glext.h	3032;"	d
GL_TEXTURE_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	3031;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	msvc/msvc-2010/GL/glext.h	3347;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	msvc/msvc-2010/GL/glext.h	3352;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	msvc/msvc-2010/GL/glext.h	3348;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	msvc/msvc-2010/GL/glext.h	3351;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	msvc/msvc-2010/GL/glext.h	3349;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	msvc/msvc-2010/GL/glext.h	3350;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5938;"	d
GL_TEXTURE_COLOR_TABLE_SGI	msvc/msvc-2010/GL/glext.h	3227;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	msvc/msvc-2010/GL/glext.h	4246;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	msvc/msvc-2010/GL/glext.h	1637;"	d
GL_TEXTURE_COMPARE_FUNC	msvc/msvc-2010/GL/glext.h	291;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	msvc/msvc-2010/GL/glext.h	1632;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	ps3/rgl/include/export/GLES/glext.h	144;"	d
GL_TEXTURE_COMPARE_MODE	msvc/msvc-2010/GL/glext.h	290;"	d
GL_TEXTURE_COMPARE_MODE_ARB	msvc/msvc-2010/GL/glext.h	1631;"	d
GL_TEXTURE_COMPARE_MODE_ARB	ps3/rgl/include/export/GLES/glext.h	143;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	msvc/msvc-2010/GL/glext.h	3362;"	d
GL_TEXTURE_COMPARE_SGIX	msvc/msvc-2010/GL/glext.h	3361;"	d
GL_TEXTURE_COMPRESSED	msvc/msvc-2010/GL/glext.h	232;"	d
GL_TEXTURE_COMPRESSED_ARB	msvc/msvc-2010/GL/glext.h	1511;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	msvc/msvc-2010/GL/glext.h	2904;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	msvc/msvc-2010/GL/glext.h	2905;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	msvc/msvc-2010/GL/glext.h	2903;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	msvc/msvc-2010/GL/glext.h	231;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1510;"	d
GL_TEXTURE_COMPRESSION_HINT	msvc/msvc-2010/GL/glext.h	230;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	msvc/msvc-2010/GL/glext.h	1509;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	msvc/msvc-2010/GL/glext.h	3906;"	d
GL_TEXTURE_COORD_ARRAY	ps3/rgl/include/export/GLES/gl.h	188;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5716;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	350;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1754;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3326;"	d
GL_TEXTURE_COORD_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3307;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5726;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4146;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4154;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	msvc/msvc-2010/GL/glext.h	3783;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3333;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3323;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3325;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3324;"	d
GL_TEXTURE_COORD_NV	msvc/msvc-2010/GL/glext.h	5365;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	msvc/msvc-2010/GL/glext.h	5937;"	d
GL_TEXTURE_CUBE_MAP	msvc/msvc-2010/GL/glext.h	218;"	d
GL_TEXTURE_CUBE_MAP	ps3/rgl/include/export/GLES/glext.h	116;"	d
GL_TEXTURE_CUBE_MAP_ARB	msvc/msvc-2010/GL/glext.h	1490;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	895;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2228;"	d
GL_TEXTURE_CUBE_MAP_EXT	msvc/msvc-2010/GL/glext.h	3979;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	msvc/msvc-2010/GL/glext.h	221;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	ps3/rgl/include/export/GLES/glext.h	118;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	msvc/msvc-2010/GL/glext.h	1493;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	msvc/msvc-2010/GL/glext.h	3982;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	msvc/msvc-2010/GL/glext.h	223;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	ps3/rgl/include/export/GLES/glext.h	120;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	msvc/msvc-2010/GL/glext.h	1495;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	msvc/msvc-2010/GL/glext.h	3984;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	msvc/msvc-2010/GL/glext.h	225;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	ps3/rgl/include/export/GLES/glext.h	122;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	msvc/msvc-2010/GL/glext.h	1497;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	msvc/msvc-2010/GL/glext.h	3986;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	msvc/msvc-2010/GL/glext.h	220;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	ps3/rgl/include/export/GLES/glext.h	117;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	msvc/msvc-2010/GL/glext.h	1492;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	msvc/msvc-2010/GL/glext.h	3981;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	msvc/msvc-2010/GL/glext.h	222;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	ps3/rgl/include/export/GLES/glext.h	119;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	msvc/msvc-2010/GL/glext.h	1494;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	msvc/msvc-2010/GL/glext.h	3983;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	msvc/msvc-2010/GL/glext.h	224;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	ps3/rgl/include/export/GLES/glext.h	121;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	msvc/msvc-2010/GL/glext.h	1496;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	msvc/msvc-2010/GL/glext.h	3985;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	msvc/msvc-2010/GL/glext.h	2170;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	msvc/msvc-2010/GL/glext.h	3480;"	d
GL_TEXTURE_DEFORMATION_SGIX	msvc/msvc-2010/GL/glext.h	3486;"	d
GL_TEXTURE_DEPTH	msvc/msvc-2010/GL/glext.h	67;"	d
GL_TEXTURE_DEPTH_EXT	msvc/msvc-2010/GL/glext.h	3112;"	d
GL_TEXTURE_DEPTH_SIZE	msvc/msvc-2010/GL/glext.h	289;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1626;"	d
GL_TEXTURE_DEPTH_TYPE	msvc/msvc-2010/GL/glext.h	1953;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1899;"	d
GL_TEXTURE_DS_SIZE_NV	msvc/msvc-2010/GL/glext.h	4386;"	d
GL_TEXTURE_DT_SIZE_NV	msvc/msvc-2010/GL/glext.h	4387;"	d
GL_TEXTURE_ENV	ps3/rgl/include/export/GLES/gl.h	375;"	d
GL_TEXTURE_ENV_BIAS_SGIX	msvc/msvc-2010/GL/glext.h	3545;"	d
GL_TEXTURE_ENV_COLOR	ps3/rgl/include/export/GLES/gl.h	372;"	d
GL_TEXTURE_ENV_MODE	ps3/rgl/include/export/GLES/gl.h	371;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2591;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5795;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	msvc/msvc-2010/GL/glext.h	3119;"	d
GL_TEXTURE_FILTER_CONTROL	msvc/msvc-2010/GL/glext.h	312;"	d
GL_TEXTURE_FILTER_CONTROL	ps3/rgl/include/export/GLES/glext.h	133;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	msvc/msvc-2010/GL/glext.h	4000;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	msvc/msvc-2010/GL/glext.h	2203;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	msvc/msvc-2010/GL/glext.h	4960;"	d
GL_TEXTURE_FREE_MEMORY_ATI	msvc/msvc-2010/GL/glext.h	5532;"	d
GL_TEXTURE_FROM_VERTEX_PROGRAM_SCE	ps3/rgl/include/export/GLES/glext.h	242;"	d
GL_TEXTURE_GAMMA_REMAP_A_SCE	ps3/rgl/include/export/GLES/glext.h	235;"	d
GL_TEXTURE_GAMMA_REMAP_B_SCE	ps3/rgl/include/export/GLES/glext.h	234;"	d
GL_TEXTURE_GAMMA_REMAP_G_SCE	ps3/rgl/include/export/GLES/glext.h	233;"	d
GL_TEXTURE_GAMMA_REMAP_R_SCE	ps3/rgl/include/export/GLES/glext.h	232;"	d
GL_TEXTURE_GATHER	msvc/msvc-2010/GL/glext.h	2890;"	d
GL_TEXTURE_GATHER_SHADOW	msvc/msvc-2010/GL/glext.h	2891;"	d
GL_TEXTURE_GEN_MODE	ps3/rgl/include/export/GLES/glext.h	92;"	d
GL_TEXTURE_GEN_Q	ps3/rgl/include/export/GLES/glext.h	96;"	d
GL_TEXTURE_GEN_R	ps3/rgl/include/export/GLES/glext.h	95;"	d
GL_TEXTURE_GEN_S	ps3/rgl/include/export/GLES/glext.h	93;"	d
GL_TEXTURE_GEN_T	ps3/rgl/include/export/GLES/glext.h	94;"	d
GL_TEXTURE_GEQUAL_R_SGIX	msvc/msvc-2010/GL/glext.h	3364;"	d
GL_TEXTURE_GREEN_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3094;"	d
GL_TEXTURE_GREEN_TYPE	msvc/msvc-2010/GL/glext.h	1950;"	d
GL_TEXTURE_GREEN_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1894;"	d
GL_TEXTURE_HI_SIZE_NV	msvc/msvc-2010/GL/glext.h	4384;"	d
GL_TEXTURE_IMAGE_FORMAT	msvc/msvc-2010/GL/glext.h	2871;"	d
GL_TEXTURE_IMAGE_TYPE	msvc/msvc-2010/GL/glext.h	2872;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	msvc/msvc-2010/GL/glext.h	2658;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	msvc/msvc-2010/GL/glext.h	2771;"	d
GL_TEXTURE_INDEX_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3606;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3098;"	d
GL_TEXTURE_INTENSITY_TYPE	msvc/msvc-2010/GL/glext.h	2011;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1898;"	d
GL_TEXTURE_LEQUAL_R_SGIX	msvc/msvc-2010/GL/glext.h	3363;"	d
GL_TEXTURE_LIGHTING_MODE_HP	msvc/msvc-2010/GL/glext.h	3705;"	d
GL_TEXTURE_LIGHT_EXT	msvc/msvc-2010/GL/glext.h	3731;"	d
GL_TEXTURE_LINEAR_GPU_SCE	ps3/rgl/include/export/GLES/glext.h	324;"	d
GL_TEXTURE_LINEAR_SYSTEM_SCE	ps3/rgl/include/export/GLES/glext.h	326;"	d
GL_TEXTURE_LOD_BIAS	msvc/msvc-2010/GL/glext.h	286;"	d
GL_TEXTURE_LOD_BIAS	ps3/rgl/include/export/GLES/glext.h	134;"	d
GL_TEXTURE_LOD_BIAS_EXT	msvc/msvc-2010/GL/glext.h	4001;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	msvc/msvc-2010/GL/glext.h	3628;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	msvc/msvc-2010/GL/glext.h	3626;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	msvc/msvc-2010/GL/glext.h	3627;"	d
GL_TEXTURE_LO_SIZE_NV	msvc/msvc-2010/GL/glext.h	4385;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3097;"	d
GL_TEXTURE_LUMINANCE_TYPE	msvc/msvc-2010/GL/glext.h	2010;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1897;"	d
GL_TEXTURE_MAG_FILTER	ps3/rgl/include/export/GLES/gl.h	390;"	d
GL_TEXTURE_MAG_SIZE_NV	msvc/msvc-2010/GL/glext.h	4388;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	msvc/msvc-2010/GL/glext.h	3732;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	msvc/msvc-2010/GL/glext.h	3733;"	d
GL_TEXTURE_MATRIX	ps3/rgl/include/export/GLES/glext.h	165;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	msvc/msvc-2010/GL/glext.h	4005;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	ps3/rgl/include/export/GLES/glext.h	248;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	msvc/msvc-2010/GL/glext.h	4488;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	msvc/msvc-2010/GL/glext.h	4486;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	msvc/msvc-2010/GL/glext.h	4487;"	d
GL_TEXTURE_MAX_LEVEL	msvc/msvc-2010/GL/glext.h	85;"	d
GL_TEXTURE_MAX_LEVEL	ps3/rgl/include/export/GLES/glext.h	137;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	msvc/msvc-2010/GL/glext.h	3276;"	d
GL_TEXTURE_MAX_LOD	msvc/msvc-2010/GL/glext.h	83;"	d
GL_TEXTURE_MAX_LOD	ps3/rgl/include/export/GLES/glext.h	136;"	d
GL_TEXTURE_MAX_LOD_SGIS	msvc/msvc-2010/GL/glext.h	3274;"	d
GL_TEXTURE_MIN_FILTER	ps3/rgl/include/export/GLES/gl.h	391;"	d
GL_TEXTURE_MIN_LOD	msvc/msvc-2010/GL/glext.h	82;"	d
GL_TEXTURE_MIN_LOD	ps3/rgl/include/export/GLES/glext.h	135;"	d
GL_TEXTURE_MIN_LOD_SGIS	msvc/msvc-2010/GL/glext.h	3273;"	d
GL_TEXTURE_MULTISAMPLING_HINT_SCE	ps3/rgl/include/export/GLES/glext.h	349;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	msvc/msvc-2010/GL/glext.h	3441;"	d
GL_TEXTURE_NORMAL_EXT	msvc/msvc-2010/GL/glext.h	3828;"	d
GL_TEXTURE_POST_SPECULAR_HP	msvc/msvc-2010/GL/glext.h	3706;"	d
GL_TEXTURE_PRE_SPECULAR_HP	msvc/msvc-2010/GL/glext.h	3707;"	d
GL_TEXTURE_PRIORITY_EXT	msvc/msvc-2010/GL/glext.h	3239;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	msvc/msvc-2010/GL/glext.h	5598;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	msvc/msvc-2010/GL/glext.h	5599;"	d
GL_TEXTURE_READ_BIT_SCE	ps3/rgl/include/export/GLES/glext.h	205;"	d
GL_TEXTURE_RECTANGLE	msvc/msvc-2010/GL/glext.h	728;"	d
GL_TEXTURE_RECTANGLE_ARB	msvc/msvc-2010/GL/glext.h	1874;"	d
GL_TEXTURE_RECTANGLE_NV	msvc/msvc-2010/GL/glext.h	4309;"	d
GL_TEXTURE_RED_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3093;"	d
GL_TEXTURE_RED_TYPE	msvc/msvc-2010/GL/glext.h	1949;"	d
GL_TEXTURE_RED_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1893;"	d
GL_TEXTURE_REFERENCE_BUFFER_SCE	ps3/rgl/include/export/GLES/glext.h	358;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	msvc/msvc-2010/GL/glext.h	5515;"	d
GL_TEXTURE_RENDERBUFFER_NV	msvc/msvc-2010/GL/glext.h	5516;"	d
GL_TEXTURE_RESIDENT_EXT	msvc/msvc-2010/GL/glext.h	3240;"	d
GL_TEXTURE_SAMPLES	msvc/msvc-2010/GL/glext.h	2202;"	d
GL_TEXTURE_SHADER_NV	msvc/msvc-2010/GL/glext.h	4324;"	d
GL_TEXTURE_SHADOW	msvc/msvc-2010/GL/glext.h	2889;"	d
GL_TEXTURE_SHARED_SIZE	msvc/msvc-2010/GL/glext.h	522;"	d
GL_TEXTURE_SHARED_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5323;"	d
GL_TEXTURE_SRGB_DECODE_EXT	msvc/msvc-2010/GL/glext.h	5931;"	d
GL_TEXTURE_STENCIL_SIZE	msvc/msvc-2010/GL/glext.h	1948;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5131;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	msvc/msvc-2010/GL/glext.h	5600;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	msvc/msvc-2010/GL/glext.h	6138;"	d
GL_TEXTURE_SWIZZLED_GPU_SCE	ps3/rgl/include/export/GLES/glext.h	325;"	d
GL_TEXTURE_SWIZZLED_SYSTEM_SCE	ps3/rgl/include/export/GLES/glext.h	327;"	d
GL_TEXTURE_SWIZZLE_A	msvc/msvc-2010/GL/glext.h	2289;"	d
GL_TEXTURE_SWIZZLE_A_EXT	msvc/msvc-2010/GL/glext.h	5506;"	d
GL_TEXTURE_SWIZZLE_B	msvc/msvc-2010/GL/glext.h	2288;"	d
GL_TEXTURE_SWIZZLE_B_EXT	msvc/msvc-2010/GL/glext.h	5505;"	d
GL_TEXTURE_SWIZZLE_G	msvc/msvc-2010/GL/glext.h	2287;"	d
GL_TEXTURE_SWIZZLE_G_EXT	msvc/msvc-2010/GL/glext.h	5504;"	d
GL_TEXTURE_SWIZZLE_R	msvc/msvc-2010/GL/glext.h	2286;"	d
GL_TEXTURE_SWIZZLE_RGBA	msvc/msvc-2010/GL/glext.h	2290;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	msvc/msvc-2010/GL/glext.h	5507;"	d
GL_TEXTURE_SWIZZLE_R_EXT	msvc/msvc-2010/GL/glext.h	5503;"	d
GL_TEXTURE_TILED_GPU_SCE	ps3/rgl/include/export/GLES/glext.h	323;"	d
GL_TEXTURE_TOO_LARGE_EXT	msvc/msvc-2010/GL/glext.h	3102;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	msvc/msvc-2010/GL/glext.h	4993;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2595;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5799;"	d
GL_TEXTURE_VIEW	msvc/msvc-2010/GL/glext.h	2907;"	d
GL_TEXTURE_VIEW_MIN_LAYER	msvc/msvc-2010/GL/glext.h	2769;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	msvc/msvc-2010/GL/glext.h	2767;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	msvc/msvc-2010/GL/glext.h	2770;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	msvc/msvc-2010/GL/glext.h	2768;"	d
GL_TEXTURE_WRAP_Q_SGIS	msvc/msvc-2010/GL/glext.h	3221;"	d
GL_TEXTURE_WRAP_R	msvc/msvc-2010/GL/glext.h	68;"	d
GL_TEXTURE_WRAP_R	ps3/rgl/include/export/GLES/glext.h	112;"	d
GL_TEXTURE_WRAP_R_EXT	msvc/msvc-2010/GL/glext.h	3113;"	d
GL_TEXTURE_WRAP_S	ps3/rgl/include/export/GLES/gl.h	392;"	d
GL_TEXTURE_WRAP_T	ps3/rgl/include/export/GLES/gl.h	393;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	msvc/msvc-2010/GL/glext.h	4854;"	d
GL_TIMEOUT_EXPIRED	msvc/msvc-2010/GL/glext.h	2184;"	d
GL_TIMEOUT_IGNORED	msvc/msvc-2010/GL/glext.h	2188;"	d
GL_TIMESTAMP	msvc/msvc-2010/GL/glext.h	2295;"	d
GL_TIME_ELAPSED	msvc/msvc-2010/GL/glext.h	2294;"	d
GL_TIME_ELAPSED_EXT	msvc/msvc-2010/GL/glext.h	5181;"	d
GL_TOP_LEVEL_ARRAY_SIZE	msvc/msvc-2010/GL/glext.h	2990;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	2991;"	d
GL_TRACK_MATRIX_NV	msvc/msvc-2010/GL/glext.h	4431;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	msvc/msvc-2010/GL/glext.h	4432;"	d
GL_TRANSFORM_FEEDBACK	msvc/msvc-2010/GL/glext.h	2394;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	msvc/msvc-2010/GL/glext.h	2397;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	msvc/msvc-2010/GL/glext.h	5370;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2598;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5802;"	d
GL_TRANSFORM_FEEDBACK_BINDING	msvc/msvc-2010/GL/glext.h	2399;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	msvc/msvc-2010/GL/glext.h	5527;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	msvc/msvc-2010/GL/glext.h	536;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	msvc/msvc-2010/GL/glext.h	2398;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	msvc/msvc-2010/GL/glext.h	5526;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	537;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5478;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	msvc/msvc-2010/GL/glext.h	5387;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5475;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	msvc/msvc-2010/GL/glext.h	524;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	msvc/msvc-2010/GL/glext.h	5488;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	msvc/msvc-2010/GL/glext.h	5371;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5386;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	msvc/msvc-2010/GL/glext.h	2396;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	msvc/msvc-2010/GL/glext.h	5525;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	528;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	msvc/msvc-2010/GL/glext.h	5477;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	msvc/msvc-2010/GL/glext.h	5377;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	msvc/msvc-2010/GL/glext.h	527;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	msvc/msvc-2010/GL/glext.h	5476;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	msvc/msvc-2010/GL/glext.h	5376;"	d
GL_TRANSFORM_FEEDBACK_NV	msvc/msvc-2010/GL/glext.h	5524;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	msvc/msvc-2010/GL/glext.h	2395;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	msvc/msvc-2010/GL/glext.h	530;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	msvc/msvc-2010/GL/glext.h	5482;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	msvc/msvc-2010/GL/glext.h	5380;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	msvc/msvc-2010/GL/glext.h	5378;"	d
GL_TRANSFORM_FEEDBACK_VARYING	msvc/msvc-2010/GL/glext.h	2966;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	msvc/msvc-2010/GL/glext.h	526;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	msvc/msvc-2010/GL/glext.h	5487;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	msvc/msvc-2010/GL/glext.h	5375;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	msvc/msvc-2010/GL/glext.h	523;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	msvc/msvc-2010/GL/glext.h	5489;"	d
GL_TRANSFORM_HINT_APPLE	msvc/msvc-2010/GL/glext.h	3896;"	d
GL_TRANSLATE_2D_NV	msvc/msvc-2010/GL/glext.h	5995;"	d
GL_TRANSLATE_3D_NV	msvc/msvc-2010/GL/glext.h	5996;"	d
GL_TRANSLATE_X_NV	msvc/msvc-2010/GL/glext.h	5993;"	d
GL_TRANSLATE_Y_NV	msvc/msvc-2010/GL/glext.h	5994;"	d
GL_TRANSPOSE_AFFINE_2D_NV	msvc/msvc-2010/GL/glext.h	6001;"	d
GL_TRANSPOSE_AFFINE_3D_NV	msvc/msvc-2010/GL/glext.h	6003;"	d
GL_TRANSPOSE_COLOR_MATRIX	msvc/msvc-2010/GL/glext.h	241;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1469;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1690;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	msvc/msvc-2010/GL/glext.h	238;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1466;"	d
GL_TRANSPOSE_NV	msvc/msvc-2010/GL/glext.h	4411;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	msvc/msvc-2010/GL/glext.h	5494;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	msvc/msvc-2010/GL/glext.h	239;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1467;"	d
GL_TRANSPOSE_PROJECTIVE_2D_NV	msvc/msvc-2010/GL/glext.h	6002;"	d
GL_TRANSPOSE_PROJECTIVE_3D_NV	msvc/msvc-2010/GL/glext.h	6004;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	msvc/msvc-2010/GL/glext.h	240;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	msvc/msvc-2010/GL/glext.h	1468;"	d
GL_TRIANGLES	ps3/rgl/include/export/GLES/gl.h	99;"	d
GL_TRIANGLES_ADJACENCY	msvc/msvc-2010/GL/glext.h	789;"	d
GL_TRIANGLES_ADJACENCY_ARB	msvc/msvc-2010/GL/glext.h	2021;"	d
GL_TRIANGLES_ADJACENCY_EXT	msvc/msvc-2010/GL/glext.h	5206;"	d
GL_TRIANGLE_FAN	ps3/rgl/include/export/GLES/gl.h	101;"	d
GL_TRIANGLE_LIST_SUN	msvc/msvc-2010/GL/glext.h	3918;"	d
GL_TRIANGLE_MESH_SUN	msvc/msvc-2010/GL/glext.h	4794;"	d
GL_TRIANGLE_STRIP	ps3/rgl/include/export/GLES/gl.h	100;"	d
GL_TRIANGLE_STRIP_ADJACENCY	msvc/msvc-2010/GL/glext.h	790;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	msvc/msvc-2010/GL/glext.h	2022;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	msvc/msvc-2010/GL/glext.h	5207;"	d
GL_TRIANGULAR_NV	msvc/msvc-2010/GL/glext.h	6016;"	d
GL_TRUE	ps3/rgl/include/export/GLES/gl.h	92;"	d
GL_TYPE	msvc/msvc-2010/GL/glext.h	2972;"	d
GL_UNDEFINED_APPLE	msvc/msvc-2010/GL/glext.h	5645;"	d
GL_UNDEFINED_VERTEX	msvc/msvc-2010/GL/glext.h	2474;"	d
GL_UNIFORM	msvc/msvc-2010/GL/glext.h	2947;"	d
GL_UNIFORM_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	2124;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	msvc/msvc-2010/GL/glext.h	2583;"	d
GL_UNIFORM_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2590;"	d
GL_UNIFORM_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5794;"	d
GL_UNIFORM_BLOCK	msvc/msvc-2010/GL/glext.h	2948;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	msvc/msvc-2010/GL/glext.h	2130;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	msvc/msvc-2010/GL/glext.h	2131;"	d
GL_UNIFORM_BLOCK_BINDING	msvc/msvc-2010/GL/glext.h	2127;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	msvc/msvc-2010/GL/glext.h	2128;"	d
GL_UNIFORM_BLOCK_INDEX	msvc/msvc-2010/GL/glext.h	2122;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	msvc/msvc-2010/GL/glext.h	2129;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	msvc/msvc-2010/GL/glext.h	2756;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	msvc/msvc-2010/GL/glext.h	2134;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	msvc/msvc-2010/GL/glext.h	2133;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	msvc/msvc-2010/GL/glext.h	2381;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	msvc/msvc-2010/GL/glext.h	2382;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	msvc/msvc-2010/GL/glext.h	2132;"	d
GL_UNIFORM_BUFFER	msvc/msvc-2010/GL/glext.h	2103;"	d
GL_UNIFORM_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	2104;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	5402;"	d
GL_UNIFORM_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5401;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	msvc/msvc-2010/GL/glext.h	2116;"	d
GL_UNIFORM_BUFFER_SIZE	msvc/msvc-2010/GL/glext.h	2106;"	d
GL_UNIFORM_BUFFER_START	msvc/msvc-2010/GL/glext.h	2105;"	d
GL_UNIFORM_IS_ROW_MAJOR	msvc/msvc-2010/GL/glext.h	2126;"	d
GL_UNIFORM_MATRIX_STRIDE	msvc/msvc-2010/GL/glext.h	2125;"	d
GL_UNIFORM_NAME_LENGTH	msvc/msvc-2010/GL/glext.h	2121;"	d
GL_UNIFORM_OFFSET	msvc/msvc-2010/GL/glext.h	2123;"	d
GL_UNIFORM_SIZE	msvc/msvc-2010/GL/glext.h	2120;"	d
GL_UNIFORM_TYPE	msvc/msvc-2010/GL/glext.h	2119;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	msvc/msvc-2010/GL/glext.h	2516;"	d
GL_UNPACK_ALIGNMENT	ps3/rgl/include/export/GLES/gl.h	320;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	msvc/msvc-2010/GL/glext.h	4858;"	d
GL_UNPACK_CMYK_HINT_EXT	msvc/msvc-2010/GL/glext.h	3235;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	msvc/msvc-2010/GL/glext.h	2536;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	msvc/msvc-2010/GL/glext.h	2535;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	msvc/msvc-2010/GL/glext.h	2537;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	msvc/msvc-2010/GL/glext.h	2534;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	msvc/msvc-2010/GL/glext.h	3905;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	msvc/msvc-2010/GL/glext.h	3217;"	d
GL_UNPACK_IMAGE_HEIGHT	msvc/msvc-2010/GL/glext.h	64;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	msvc/msvc-2010/GL/glext.h	3109;"	d
GL_UNPACK_RESAMPLE_OML	msvc/msvc-2010/GL/glext.h	4507;"	d
GL_UNPACK_RESAMPLE_SGIX	msvc/msvc-2010/GL/glext.h	4228;"	d
GL_UNPACK_ROW_BYTES_APPLE	msvc/msvc-2010/GL/glext.h	5651;"	d
GL_UNPACK_ROW_LENGTH	gfx/gl_common.h	329;"	d
GL_UNPACK_SKIP_IMAGES	msvc/msvc-2010/GL/glext.h	63;"	d
GL_UNPACK_SKIP_IMAGES_EXT	msvc/msvc-2010/GL/glext.h	3108;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	msvc/msvc-2010/GL/glext.h	3216;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	msvc/msvc-2010/GL/glext.h	4162;"	d
GL_UNSIGNALED	msvc/msvc-2010/GL/glext.h	2181;"	d
GL_UNSIGNED_BYTE	ps3/rgl/include/export/GLES/gl.h	268;"	d
GL_UNSIGNED_BYTE_2_2_2_2	ps3/rgl/include/RGL/private.h	27;"	d
GL_UNSIGNED_BYTE_2_2_2_2_REV	ps3/rgl/include/RGL/private.h	28;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	msvc/msvc-2010/GL/glext.h	70;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	ps3/rgl/include/export/GLES/glext.h	28;"	d
GL_UNSIGNED_BYTE_2_6_REV	ps3/rgl/include/RGL/private.h	24;"	d
GL_UNSIGNED_BYTE_3_3_2	msvc/msvc-2010/GL/glext.h	55;"	d
GL_UNSIGNED_BYTE_3_3_2	ps3/rgl/include/export/GLES/glext.h	27;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	msvc/msvc-2010/GL/glext.h	3265;"	d
GL_UNSIGNED_BYTE_4_4	ps3/rgl/include/RGL/private.h	21;"	d
GL_UNSIGNED_BYTE_4_4_REV	ps3/rgl/include/RGL/private.h	22;"	d
GL_UNSIGNED_BYTE_6_2	ps3/rgl/include/RGL/private.h	23;"	d
GL_UNSIGNED_IDENTITY_NV	msvc/msvc-2010/GL/glext.h	4056;"	d
GL_UNSIGNED_INT	ps3/rgl/include/export/GLES/glext.h	24;"	d
GL_UNSIGNED_INT16_NV	msvc/msvc-2010/GL/glext.h	5852;"	d
GL_UNSIGNED_INT16_VEC2_NV	msvc/msvc-2010/GL/glext.h	5853;"	d
GL_UNSIGNED_INT16_VEC3_NV	msvc/msvc-2010/GL/glext.h	5854;"	d
GL_UNSIGNED_INT16_VEC4_NV	msvc/msvc-2010/GL/glext.h	5855;"	d
GL_UNSIGNED_INT64_AMD	msvc/msvc-2010/GL/glext.h	5539;"	d
GL_UNSIGNED_INT64_NV	msvc/msvc-2010/GL/glext.h	5836;"	d
GL_UNSIGNED_INT64_VEC2_NV	msvc/msvc-2010/GL/glext.h	5856;"	d
GL_UNSIGNED_INT64_VEC3_NV	msvc/msvc-2010/GL/glext.h	5857;"	d
GL_UNSIGNED_INT64_VEC4_NV	msvc/msvc-2010/GL/glext.h	5858;"	d
GL_UNSIGNED_INT8_NV	msvc/msvc-2010/GL/glext.h	5848;"	d
GL_UNSIGNED_INT8_VEC2_NV	msvc/msvc-2010/GL/glext.h	5849;"	d
GL_UNSIGNED_INT8_VEC3_NV	msvc/msvc-2010/GL/glext.h	5850;"	d
GL_UNSIGNED_INT8_VEC4_NV	msvc/msvc-2010/GL/glext.h	5851;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	msvc/msvc-2010/GL/glext.h	519;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	msvc/msvc-2010/GL/glext.h	5282;"	d
GL_UNSIGNED_INT_10_10_10_2	msvc/msvc-2010/GL/glext.h	59;"	d
GL_UNSIGNED_INT_10_10_10_2	ps3/rgl/include/export/GLES/glext.h	34;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	msvc/msvc-2010/GL/glext.h	3269;"	d
GL_UNSIGNED_INT_16_16	ps3/rgl/src/rgl_ps3.cpp	3342;"	d	file:
GL_UNSIGNED_INT_16_16_REV	ps3/rgl/src/rgl_ps3.cpp	3343;"	d	file:
GL_UNSIGNED_INT_16_16_REV_SCE	ps3/rgl/include/export/GLES/glext.h	72;"	d
GL_UNSIGNED_INT_16_16_SCE	ps3/rgl/include/export/GLES/glext.h	71;"	d
GL_UNSIGNED_INT_24_8	msvc/msvc-2010/GL/glext.h	1946;"	d
GL_UNSIGNED_INT_24_8	ps3/rgl/src/rgl_ps3.cpp	3337;"	d	file:
GL_UNSIGNED_INT_24_8_EXT	msvc/msvc-2010/GL/glext.h	5129;"	d
GL_UNSIGNED_INT_24_8_NV	msvc/msvc-2010/GL/glext.h	4298;"	d
GL_UNSIGNED_INT_24_8_SCE	ps3/rgl/include/export/GLES/glext.h	36;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	msvc/msvc-2010/GL/glext.h	76;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	ps3/rgl/include/export/GLES/glext.h	35;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	msvc/msvc-2010/GL/glext.h	521;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	msvc/msvc-2010/GL/glext.h	5322;"	d
GL_UNSIGNED_INT_8_24_REV	ps3/rgl/src/rgl_ps3.cpp	3338;"	d	file:
GL_UNSIGNED_INT_8_24_REV_SCE	ps3/rgl/include/export/GLES/glext.h	37;"	d
GL_UNSIGNED_INT_8_8_8_8	msvc/msvc-2010/GL/glext.h	58;"	d
GL_UNSIGNED_INT_8_8_8_8	ps3/rgl/include/export/GLES/glext.h	32;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	msvc/msvc-2010/GL/glext.h	3268;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	msvc/msvc-2010/GL/glext.h	75;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	ps3/rgl/include/export/GLES/glext.h	33;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	msvc/msvc-2010/GL/glext.h	4321;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	msvc/msvc-2010/GL/glext.h	2584;"	d
GL_UNSIGNED_INT_IMAGE_1D	msvc/msvc-2010/GL/glext.h	2630;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	msvc/msvc-2010/GL/glext.h	2636;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5785;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	msvc/msvc-2010/GL/glext.h	5779;"	d
GL_UNSIGNED_INT_IMAGE_2D	msvc/msvc-2010/GL/glext.h	2631;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	msvc/msvc-2010/GL/glext.h	2637;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5786;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	msvc/msvc-2010/GL/glext.h	5780;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2639;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2640;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5789;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	msvc/msvc-2010/GL/glext.h	5788;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	msvc/msvc-2010/GL/glext.h	2633;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	msvc/msvc-2010/GL/glext.h	5782;"	d
GL_UNSIGNED_INT_IMAGE_3D	msvc/msvc-2010/GL/glext.h	2632;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	msvc/msvc-2010/GL/glext.h	5781;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	msvc/msvc-2010/GL/glext.h	2635;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5784;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	msvc/msvc-2010/GL/glext.h	2634;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	msvc/msvc-2010/GL/glext.h	5783;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	2638;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5787;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	msvc/msvc-2010/GL/glext.h	4320;"	d
GL_UNSIGNED_INT_SAMPLER_1D	msvc/msvc-2010/GL/glext.h	571;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	msvc/msvc-2010/GL/glext.h	575;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5272;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	msvc/msvc-2010/GL/glext.h	5267;"	d
GL_UNSIGNED_INT_SAMPLER_2D	msvc/msvc-2010/GL/glext.h	572;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	msvc/msvc-2010/GL/glext.h	576;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	5273;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	msvc/msvc-2010/GL/glext.h	5268;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	msvc/msvc-2010/GL/glext.h	2206;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	msvc/msvc-2010/GL/glext.h	2209;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	msvc/msvc-2010/GL/glext.h	722;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	msvc/msvc-2010/GL/glext.h	5271;"	d
GL_UNSIGNED_INT_SAMPLER_3D	msvc/msvc-2010/GL/glext.h	573;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	msvc/msvc-2010/GL/glext.h	5269;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	msvc/msvc-2010/GL/glext.h	723;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	msvc/msvc-2010/GL/glext.h	5552;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	msvc/msvc-2010/GL/glext.h	5274;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	msvc/msvc-2010/GL/glext.h	574;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	msvc/msvc-2010/GL/glext.h	5270;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	msvc/msvc-2010/GL/glext.h	901;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	2234;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	msvc/msvc-2010/GL/glext.h	5519;"	d
GL_UNSIGNED_INT_VEC2	msvc/msvc-2010/GL/glext.h	562;"	d
GL_UNSIGNED_INT_VEC2_EXT	msvc/msvc-2010/GL/glext.h	5256;"	d
GL_UNSIGNED_INT_VEC3	msvc/msvc-2010/GL/glext.h	563;"	d
GL_UNSIGNED_INT_VEC3_EXT	msvc/msvc-2010/GL/glext.h	5257;"	d
GL_UNSIGNED_INT_VEC4	msvc/msvc-2010/GL/glext.h	564;"	d
GL_UNSIGNED_INT_VEC4_EXT	msvc/msvc-2010/GL/glext.h	5258;"	d
GL_UNSIGNED_INVERT_NV	msvc/msvc-2010/GL/glext.h	4057;"	d
GL_UNSIGNED_NORMALIZED	msvc/msvc-2010/GL/glext.h	1954;"	d
GL_UNSIGNED_NORMALIZED_ARB	msvc/msvc-2010/GL/glext.h	1900;"	d
GL_UNSIGNED_SHORT	ps3/rgl/include/export/GLES/gl.h	270;"	d
GL_UNSIGNED_SHORT_12_4	ps3/rgl/include/RGL/private.h	25;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	msvc/msvc-2010/GL/glext.h	74;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	ps3/rgl/include/export/GLES/glext.h	31;"	d
GL_UNSIGNED_SHORT_4_12_REV	ps3/rgl/include/RGL/private.h	26;"	d
GL_UNSIGNED_SHORT_4_4_4_4	msvc/msvc-2010/GL/glext.h	56;"	d
GL_UNSIGNED_SHORT_4_4_4_4	ps3/rgl/include/export/GLES/gl.h	325;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	msvc/msvc-2010/GL/glext.h	3266;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	msvc/msvc-2010/GL/glext.h	73;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	ps3/rgl/include/export/GLES/glext.h	30;"	d
GL_UNSIGNED_SHORT_5_5_5_1	msvc/msvc-2010/GL/glext.h	57;"	d
GL_UNSIGNED_SHORT_5_5_5_1	ps3/rgl/include/export/GLES/gl.h	326;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	msvc/msvc-2010/GL/glext.h	3267;"	d
GL_UNSIGNED_SHORT_5_6_5	msvc/msvc-2010/GL/glext.h	71;"	d
GL_UNSIGNED_SHORT_5_6_5	ps3/rgl/include/export/GLES/gl.h	327;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	msvc/msvc-2010/GL/glext.h	72;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	ps3/rgl/include/export/GLES/glext.h	29;"	d
GL_UNSIGNED_SHORT_8_8	ps3/rgl/src/rgl_ps3.cpp	3340;"	d	file:
GL_UNSIGNED_SHORT_8_8_APPLE	msvc/msvc-2010/GL/glext.h	4888;"	d
GL_UNSIGNED_SHORT_8_8_MESA	msvc/msvc-2010/GL/glext.h	5038;"	d
GL_UNSIGNED_SHORT_8_8_REV	ps3/rgl/src/rgl_ps3.cpp	3341;"	d	file:
GL_UNSIGNED_SHORT_8_8_REV_APPLE	msvc/msvc-2010/GL/glext.h	4889;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	msvc/msvc-2010/GL/glext.h	5039;"	d
GL_UNSIGNED_SHORT_8_8_REV_SCE	ps3/rgl/include/export/GLES/glext.h	70;"	d
GL_UNSIGNED_SHORT_8_8_SCE	ps3/rgl/include/export/GLES/glext.h	69;"	d
GL_UPPER_LEFT	msvc/msvc-2010/GL/glext.h	447;"	d
GL_USE_MISSING_GLYPH_NV	msvc/msvc-2010/GL/glext.h	6021;"	d
GL_UTF16_NV	msvc/msvc-2010/GL/glext.h	6006;"	d
GL_UTF8_NV	msvc/msvc-2010/GL/glext.h	6005;"	d
GL_VALIDATE_STATUS	msvc/msvc-2010/GL/glext.h	434;"	d
GL_VARIABLE_A_NV	msvc/msvc-2010/GL/glext.h	4040;"	d
GL_VARIABLE_B_NV	msvc/msvc-2010/GL/glext.h	4041;"	d
GL_VARIABLE_C_NV	msvc/msvc-2010/GL/glext.h	4042;"	d
GL_VARIABLE_D_NV	msvc/msvc-2010/GL/glext.h	4043;"	d
GL_VARIABLE_E_NV	msvc/msvc-2010/GL/glext.h	4044;"	d
GL_VARIABLE_F_NV	msvc/msvc-2010/GL/glext.h	4045;"	d
GL_VARIABLE_G_NV	msvc/msvc-2010/GL/glext.h	4046;"	d
GL_VARIANT_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	4765;"	d
GL_VARIANT_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	4766;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	4763;"	d
GL_VARIANT_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	4764;"	d
GL_VARIANT_DATATYPE_EXT	msvc/msvc-2010/GL/glext.h	4762;"	d
GL_VARIANT_EXT	msvc/msvc-2010/GL/glext.h	4726;"	d
GL_VARIANT_VALUE_EXT	msvc/msvc-2010/GL/glext.h	4761;"	d
GL_VBO_FREE_MEMORY_ATI	msvc/msvc-2010/GL/glext.h	5531;"	d
GL_VECTOR_EXT	msvc/msvc-2010/GL/glext.h	4724;"	d
GL_VENDOR	ps3/rgl/include/export/GLES/gl.h	352;"	d
GL_VERSION	ps3/rgl/include/export/GLES/gl.h	354;"	d
GL_VERSION_1_2	msvc/msvc-2010/GL/glext.h	6249;"	d
GL_VERSION_1_3	msvc/msvc-2010/GL/glext.h	6331;"	d
GL_VERSION_1_4	msvc/msvc-2010/GL/glext.h	6429;"	d
GL_VERSION_1_5	msvc/msvc-2010/GL/glext.h	6525;"	d
GL_VERSION_2_0	msvc/msvc-2010/GL/glext.h	6569;"	d
GL_VERSION_2_1	msvc/msvc-2010/GL/glext.h	6761;"	d
GL_VERSION_3_0	msvc/msvc-2010/GL/glext.h	6779;"	d
GL_VERSION_3_1	msvc/msvc-2010/GL/glext.h	6905;"	d
GL_VERSION_3_2	msvc/msvc-2010/GL/glext.h	6922;"	d
GL_VERSION_3_3	msvc/msvc-2010/GL/glext.h	6939;"	d
GL_VERSION_4_0	msvc/msvc-2010/GL/glext.h	6957;"	d
GL_VERSION_4_1	msvc/msvc-2010/GL/glext.h	6985;"	d
GL_VERSION_4_2	msvc/msvc-2010/GL/glext.h	6996;"	d
GL_VERSION_4_3	msvc/msvc-2010/GL/glext.h	7012;"	d
GL_VERTEX23_BIT_PGI	msvc/msvc-2010/GL/glext.h	3572;"	d
GL_VERTEX4_BIT_PGI	msvc/msvc-2010/GL/glext.h	3573;"	d
GL_VERTEX_ARRAY	ps3/rgl/include/export/GLES/gl.h	185;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5712;"	d
GL_VERTEX_ARRAY_BINDING	msvc/msvc-2010/GL/glext.h	2099;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	msvc/msvc-2010/GL/glext.h	4873;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	346;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1750;"	d
GL_VERTEX_ARRAY_COUNT_EXT	msvc/msvc-2010/GL/glext.h	3312;"	d
GL_VERTEX_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	3303;"	d
GL_VERTEX_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5722;"	d
GL_VERTEX_ARRAY_LIST_IBM	msvc/msvc-2010/GL/glext.h	4142;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	msvc/msvc-2010/GL/glext.h	4150;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	msvc/msvc-2010/GL/glext.h	5894;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	msvc/msvc-2010/GL/glext.h	3780;"	d
GL_VERTEX_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	3329;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	msvc/msvc-2010/GL/glext.h	4877;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	msvc/msvc-2010/GL/glext.h	4878;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	msvc/msvc-2010/GL/glext.h	4032;"	d
GL_VERTEX_ARRAY_RANGE_NV	msvc/msvc-2010/GL/glext.h	4031;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	msvc/msvc-2010/GL/glext.h	4880;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	msvc/msvc-2010/GL/glext.h	4035;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	msvc/msvc-2010/GL/glext.h	4033;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	msvc/msvc-2010/GL/glext.h	4396;"	d
GL_VERTEX_ARRAY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	3309;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	msvc/msvc-2010/GL/glext.h	4879;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	3311;"	d
GL_VERTEX_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	3310;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	msvc/msvc-2010/GL/glext.h	4435;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	msvc/msvc-2010/GL/glext.h	4445;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	msvc/msvc-2010/GL/glext.h	4446;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	msvc/msvc-2010/GL/glext.h	4447;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	msvc/msvc-2010/GL/glext.h	4448;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	msvc/msvc-2010/GL/glext.h	4449;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	msvc/msvc-2010/GL/glext.h	4450;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	msvc/msvc-2010/GL/glext.h	4436;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	msvc/msvc-2010/GL/glext.h	4437;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	msvc/msvc-2010/GL/glext.h	4438;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	msvc/msvc-2010/GL/glext.h	4439;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	msvc/msvc-2010/GL/glext.h	4440;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	msvc/msvc-2010/GL/glext.h	4441;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	msvc/msvc-2010/GL/glext.h	4442;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	msvc/msvc-2010/GL/glext.h	4443;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	msvc/msvc-2010/GL/glext.h	4444;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	msvc/msvc-2010/GL/glext.h	5711;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	msvc/msvc-2010/GL/glext.h	2588;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	msvc/msvc-2010/GL/glext.h	5792;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	328;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1759;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	msvc/msvc-2010/GL/glext.h	863;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	msvc/msvc-2010/GL/glext.h	2046;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	msvc/msvc-2010/GL/glext.h	372;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	msvc/msvc-2010/GL/glext.h	1646;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	msvc/msvc-2010/GL/glext.h	505;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	msvc/msvc-2010/GL/glext.h	5246;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	msvc/msvc-2010/GL/glext.h	5721;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	msvc/msvc-2010/GL/glext.h	1145;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	msvc/msvc-2010/GL/glext.h	402;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	msvc/msvc-2010/GL/glext.h	1663;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	msvc/msvc-2010/GL/glext.h	378;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	msvc/msvc-2010/GL/glext.h	1659;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	msvc/msvc-2010/GL/glext.h	373;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1647;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	msvc/msvc-2010/GL/glext.h	374;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	msvc/msvc-2010/GL/glext.h	1648;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	msvc/msvc-2010/GL/glext.h	375;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1649;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	msvc/msvc-2010/GL/glext.h	5709;"	d
GL_VERTEX_ATTRIB_BINDING	msvc/msvc-2010/GL/glext.h	2775;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	msvc/msvc-2010/GL/glext.h	5624;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	msvc/msvc-2010/GL/glext.h	5627;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	msvc/msvc-2010/GL/glext.h	5629;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	msvc/msvc-2010/GL/glext.h	5628;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	msvc/msvc-2010/GL/glext.h	5626;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	msvc/msvc-2010/GL/glext.h	5625;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	msvc/msvc-2010/GL/glext.h	5631;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	msvc/msvc-2010/GL/glext.h	5633;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	msvc/msvc-2010/GL/glext.h	5632;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	msvc/msvc-2010/GL/glext.h	5630;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	msvc/msvc-2010/GL/glext.h	2776;"	d
GL_VERTEX_BINDING_DIVISOR	msvc/msvc-2010/GL/glext.h	2777;"	d
GL_VERTEX_BINDING_OFFSET	msvc/msvc-2010/GL/glext.h	2778;"	d
GL_VERTEX_BINDING_STRIDE	msvc/msvc-2010/GL/glext.h	2779;"	d
GL_VERTEX_BLEND_ARB	msvc/msvc-2010/GL/glext.h	1531;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	msvc/msvc-2010/GL/glext.h	3553;"	d
GL_VERTEX_DATA_HINT_PGI	msvc/msvc-2010/GL/glext.h	3552;"	d
GL_VERTEX_ID_NV	msvc/msvc-2010/GL/glext.h	5367;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	msvc/msvc-2010/GL/glext.h	4219;"	d
GL_VERTEX_PRECLIP_SGIX	msvc/msvc-2010/GL/glext.h	4218;"	d
GL_VERTEX_PROGRAM_ARB	msvc/msvc-2010/GL/glext.h	1645;"	d
GL_VERTEX_PROGRAM_BINDING_NV	msvc/msvc-2010/GL/glext.h	4433;"	d
GL_VERTEX_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	4400;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5354;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	msvc/msvc-2010/GL/glext.h	377;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1657;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	ps3/rgl/include/export/GLES/glext.h	268;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	msvc/msvc-2010/GL/glext.h	4425;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	msvc/msvc-2010/GL/glext.h	451;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	msvc/msvc-2010/GL/glext.h	1658;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	msvc/msvc-2010/GL/glext.h	4426;"	d
GL_VERTEX_SHADER	msvc/msvc-2010/GL/glext.h	405;"	d
GL_VERTEX_SHADER_ARB	msvc/msvc-2010/GL/glext.h	1823;"	d
GL_VERTEX_SHADER_BINDING_EXT	msvc/msvc-2010/GL/glext.h	4662;"	d
GL_VERTEX_SHADER_BIT	msvc/msvc-2010/GL/glext.h	2434;"	d
GL_VERTEX_SHADER_EXT	msvc/msvc-2010/GL/glext.h	4661;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	msvc/msvc-2010/GL/glext.h	4740;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4742;"	d
GL_VERTEX_SHADER_LOCALS_EXT	msvc/msvc-2010/GL/glext.h	4744;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	msvc/msvc-2010/GL/glext.h	4743;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	msvc/msvc-2010/GL/glext.h	4745;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	msvc/msvc-2010/GL/glext.h	4741;"	d
GL_VERTEX_SOURCE_ATI	msvc/msvc-2010/GL/glext.h	4783;"	d
GL_VERTEX_STATE_PROGRAM_NV	msvc/msvc-2010/GL/glext.h	4401;"	d
GL_VERTEX_STREAM0_ATI	msvc/msvc-2010/GL/glext.h	4775;"	d
GL_VERTEX_STREAM1_ATI	msvc/msvc-2010/GL/glext.h	4776;"	d
GL_VERTEX_STREAM2_ATI	msvc/msvc-2010/GL/glext.h	4777;"	d
GL_VERTEX_STREAM3_ATI	msvc/msvc-2010/GL/glext.h	4778;"	d
GL_VERTEX_STREAM4_ATI	msvc/msvc-2010/GL/glext.h	4779;"	d
GL_VERTEX_STREAM5_ATI	msvc/msvc-2010/GL/glext.h	4780;"	d
GL_VERTEX_STREAM6_ATI	msvc/msvc-2010/GL/glext.h	4781;"	d
GL_VERTEX_STREAM7_ATI	msvc/msvc-2010/GL/glext.h	4782;"	d
GL_VERTEX_SUBROUTINE	msvc/msvc-2010/GL/glext.h	2954;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	msvc/msvc-2010/GL/glext.h	2960;"	d
GL_VERTEX_TEXTURE	msvc/msvc-2010/GL/glext.h	2883;"	d
GL_VERTEX_WEIGHTING_EXT	msvc/msvc-2010/GL/glext.h	4014;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	msvc/msvc-2010/GL/glext.h	4018;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	msvc/msvc-2010/GL/glext.h	4022;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	msvc/msvc-2010/GL/glext.h	4019;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	msvc/msvc-2010/GL/glext.h	4021;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	msvc/msvc-2010/GL/glext.h	4020;"	d
GL_VERTICAL_LINE_TO_NV	msvc/msvc-2010/GL/glext.h	6047;"	d
GL_VIBRANCE_BIAS_NV	msvc/msvc-2010/GL/glext.h	4382;"	d
GL_VIBRANCE_SCALE_NV	msvc/msvc-2010/GL/glext.h	4376;"	d
GL_VIDEO_BUFFER_BINDING_NV	msvc/msvc-2010/GL/glext.h	5662;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	msvc/msvc-2010/GL/glext.h	5674;"	d
GL_VIDEO_BUFFER_NV	msvc/msvc-2010/GL/glext.h	5661;"	d
GL_VIDEO_BUFFER_PITCH_NV	msvc/msvc-2010/GL/glext.h	5669;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	msvc/msvc-2010/GL/glext.h	5688;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	msvc/msvc-2010/GL/glext.h	5687;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	msvc/msvc-2010/GL/glext.h	5686;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	msvc/msvc-2010/GL/glext.h	5685;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	msvc/msvc-2010/GL/glext.h	5689;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	msvc/msvc-2010/GL/glext.h	5667;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	msvc/msvc-2010/GL/glext.h	5670;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	msvc/msvc-2010/GL/glext.h	5671;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	msvc/msvc-2010/GL/glext.h	5672;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	msvc/msvc-2010/GL/glext.h	5673;"	d
GL_VIEWPORT_BOUNDS_RANGE	msvc/msvc-2010/GL/glext.h	2471;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	msvc/msvc-2010/GL/glext.h	2473;"	d
GL_VIEWPORT_SUBPIXEL_BITS	msvc/msvc-2010/GL/glext.h	2470;"	d
GL_VIEW_CLASS_128_BITS	msvc/msvc-2010/GL/glext.h	2922;"	d
GL_VIEW_CLASS_16_BITS	msvc/msvc-2010/GL/glext.h	2928;"	d
GL_VIEW_CLASS_24_BITS	msvc/msvc-2010/GL/glext.h	2927;"	d
GL_VIEW_CLASS_32_BITS	msvc/msvc-2010/GL/glext.h	2926;"	d
GL_VIEW_CLASS_48_BITS	msvc/msvc-2010/GL/glext.h	2925;"	d
GL_VIEW_CLASS_64_BITS	msvc/msvc-2010/GL/glext.h	2924;"	d
GL_VIEW_CLASS_8_BITS	msvc/msvc-2010/GL/glext.h	2929;"	d
GL_VIEW_CLASS_96_BITS	msvc/msvc-2010/GL/glext.h	2923;"	d
GL_VIEW_CLASS_BPTC_FLOAT	msvc/msvc-2010/GL/glext.h	2937;"	d
GL_VIEW_CLASS_BPTC_UNORM	msvc/msvc-2010/GL/glext.h	2936;"	d
GL_VIEW_CLASS_RGTC1_RED	msvc/msvc-2010/GL/glext.h	2934;"	d
GL_VIEW_CLASS_RGTC2_RG	msvc/msvc-2010/GL/glext.h	2935;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	msvc/msvc-2010/GL/glext.h	2930;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	msvc/msvc-2010/GL/glext.h	2931;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	msvc/msvc-2010/GL/glext.h	2932;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	msvc/msvc-2010/GL/glext.h	2933;"	d
GL_VIEW_COMPATIBILITY_CLASS	msvc/msvc-2010/GL/glext.h	2908;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	msvc/msvc-2010/GL/glext.h	6130;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	msvc/msvc-2010/GL/glext.h	6131;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	msvc/msvc-2010/GL/glext.h	6132;"	d
GL_VOLATILE_APPLE	msvc/msvc-2010/GL/glext.h	5643;"	d
GL_VSYNC_SCE	ps3/rgl/include/export/GLES/glext.h	230;"	d
GL_WAIT_FAILED	msvc/msvc-2010/GL/glext.h	2186;"	d
GL_WEIGHT_ARRAY_ARB	msvc/msvc-2010/GL/glext.h	1537;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	msvc/msvc-2010/GL/glext.h	354;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	msvc/msvc-2010/GL/glext.h	1758;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	msvc/msvc-2010/GL/glext.h	1536;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	msvc/msvc-2010/GL/glext.h	1535;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	msvc/msvc-2010/GL/glext.h	1534;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	msvc/msvc-2010/GL/glext.h	1533;"	d
GL_WEIGHT_SUM_UNITY_ARB	msvc/msvc-2010/GL/glext.h	1530;"	d
GL_WIDE_LINE_HINT_PGI	msvc/msvc-2010/GL/glext.h	3595;"	d
GL_WIN_phong_shading	msvc/msvc-2010/GL/glext.h	9458;"	d
GL_WIN_specular_fog	msvc/msvc-2010/GL/glext.h	9462;"	d
GL_WRAP_BORDER_SUN	msvc/msvc-2010/GL/glext.h	3992;"	d
GL_WRITE_DISCARD_NV	msvc/msvc-2010/GL/glext.h	5919;"	d
GL_WRITE_ONLY	msvc/msvc-2010/GL/glext.h	330;"	d
GL_WRITE_ONLY	ps3/rgl/include/export/GLES/glext.h	226;"	d
GL_WRITE_ONLY_ARB	msvc/msvc-2010/GL/glext.h	1761;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	msvc/msvc-2010/GL/glext.h	4981;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	msvc/msvc-2010/GL/glext.h	4979;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	msvc/msvc-2010/GL/glext.h	4983;"	d
GL_W_EXT	msvc/msvc-2010/GL/glext.h	4749;"	d
GL_XOR	ps3/rgl/include/export/GLES/gl.h	281;"	d
GL_X_EXT	msvc/msvc-2010/GL/glext.h	4746;"	d
GL_YCBAYCR8A_4224_NV	msvc/msvc-2010/GL/glext.h	5679;"	d
GL_YCBCR_422_APPLE	msvc/msvc-2010/GL/glext.h	4887;"	d
GL_YCBCR_MESA	msvc/msvc-2010/GL/glext.h	5040;"	d
GL_YCBYCR8_422_NV	msvc/msvc-2010/GL/glext.h	5678;"	d
GL_YCRCBA_SGIX	msvc/msvc-2010/GL/glext.h	4173;"	d
GL_YCRCB_422_SGIX	msvc/msvc-2010/GL/glext.h	3673;"	d
GL_YCRCB_444_SGIX	msvc/msvc-2010/GL/glext.h	3674;"	d
GL_YCRCB_SGIX	msvc/msvc-2010/GL/glext.h	4172;"	d
GL_Y_EXT	msvc/msvc-2010/GL/glext.h	4747;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	msvc/msvc-2010/GL/glext.h	5683;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	msvc/msvc-2010/GL/glext.h	5684;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	msvc/msvc-2010/GL/glext.h	5682;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	msvc/msvc-2010/GL/glext.h	5681;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	msvc/msvc-2010/GL/glext.h	5680;"	d
GL_ZERO	ps3/rgl/include/export/GLES/gl.h	114;"	d
GL_ZERO_EXT	msvc/msvc-2010/GL/glext.h	4754;"	d
GL_Z_EXT	msvc/msvc-2010/GL/glext.h	4748;"	d
GLbitfield	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned int GLbitfield;$/;"	t
GLboolean	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned char GLboolean;$/;"	t
GLbyte	ps3/rgl/include/export/GLES/gl.h	/^   typedef signed char GLbyte;$/;"	t
GLchar	msvc/msvc-2010/GL/glext.h	/^typedef char GLchar;$/;"	t
GLcharARB	msvc/msvc-2010/GL/glext.h	/^typedef char GLcharARB;$/;"	t
GLclampf	ps3/rgl/include/export/GLES/gl.h	/^   typedef float GLclampf;$/;"	t
GLclampx	ps3/rgl/include/export/GLES/gl.h	/^   typedef int GLclampx;$/;"	t
GLeglImageOES	gfx/glsym/glsym_es2.h	/^typedef void *GLeglImageOES;$/;"	t
GLeglImageOES	gfx/glsym/glsym_gl.h	/^typedef void *GLeglImageOES;$/;"	t
GLenum	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned int GLenum;$/;"	t
GLfixed	gfx/glsym/glsym_es2.h	/^typedef GLint GLfixed;$/;"	t
GLfixed	gfx/glsym/glsym_gl.h	/^typedef GLint GLfixed;$/;"	t
GLfixed	ps3/rgl/include/export/GLES/gl.h	/^   typedef int GLfixed;$/;"	t
GLfloat	ps3/rgl/include/export/GLES/gl.h	/^   typedef float GLfloat;$/;"	t
GLhalfARB	msvc/msvc-2010/GL/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfARB	ps3/rgl/include/export/GLES/glext.h	/^   typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	msvc/msvc-2010/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	msvc/msvc-2010/GL/glext.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLint	ps3/rgl/include/export/GLES/gl.h	/^   typedef int GLint;$/;"	t
GLint64	msvc/msvc-2010/GL/glext.h	/^typedef int64_t GLint64;$/;"	t
GLint64EXT	msvc/msvc-2010/GL/glext.h	/^typedef int64_t GLint64EXT;$/;"	t
GLintptr	msvc/msvc-2010/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptr	ps3/rgl/include/export/GLES/glext.h	/^   typedef intptr_t GLintptr;$/;"	t
GLintptrARB	msvc/msvc-2010/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	ps3/rgl/include/export/GLES/gl.h	/^   typedef short GLshort;$/;"	t
GLsizei	ps3/rgl/include/export/GLES/gl.h	/^   typedef int GLsizei;$/;"	t
GLsizeiptr	msvc/msvc-2010/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptr	ps3/rgl/include/export/GLES/glext.h	/^   typedef intptr_t GLsizeiptr;$/;"	t
GLsizeiptrARB	msvc/msvc-2010/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	msvc/msvc-2010/GL/glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned char GLubyte;$/;"	t
GLuint	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned int GLuint;$/;"	t
GLuint64	msvc/msvc-2010/GL/glext.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64EXT	msvc/msvc-2010/GL/glext.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLushort	ps3/rgl/include/export/GLES/gl.h	/^   typedef unsigned short GLushort;$/;"	t
GLvdpauSurfaceNV	msvc/msvc-2010/GL/glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvoid	ps3/rgl/include/export/GLES/gl.h	/^   typedef void GLvoid;$/;"	t
GMM_ADDRESS_TO_OFFSET	ps3/rgl/src/include/GmmAlloc.h	119;"	d
GMM_ALIGNMENT	ps3/rgl/src/include/GmmAlloc.h	10;"	d
GMM_ALLOC_FIXED_BLOCK	ps3/rgl/src/rgl_ps3.cpp	436;"	d	file:
GMM_ASSERT	ps3/rgl/src/include/GmmAlloc.h	6;"	d
GMM_BLOCK_COUNT	ps3/rgl/src/include/GmmAlloc.h	13;"	d
GMM_ERROR	ps3/rgl/src/include/GmmAlloc.h	8;"	d
GMM_FREE_BIN_0	ps3/rgl/src/include/GmmAlloc.h	17;"	d
GMM_FREE_BIN_1	ps3/rgl/src/include/GmmAlloc.h	18;"	d
GMM_FREE_BIN_10	ps3/rgl/src/include/GmmAlloc.h	27;"	d
GMM_FREE_BIN_11	ps3/rgl/src/include/GmmAlloc.h	28;"	d
GMM_FREE_BIN_12	ps3/rgl/src/include/GmmAlloc.h	29;"	d
GMM_FREE_BIN_13	ps3/rgl/src/include/GmmAlloc.h	30;"	d
GMM_FREE_BIN_14	ps3/rgl/src/include/GmmAlloc.h	31;"	d
GMM_FREE_BIN_15	ps3/rgl/src/include/GmmAlloc.h	32;"	d
GMM_FREE_BIN_16	ps3/rgl/src/include/GmmAlloc.h	33;"	d
GMM_FREE_BIN_17	ps3/rgl/src/include/GmmAlloc.h	34;"	d
GMM_FREE_BIN_18	ps3/rgl/src/include/GmmAlloc.h	35;"	d
GMM_FREE_BIN_19	ps3/rgl/src/include/GmmAlloc.h	36;"	d
GMM_FREE_BIN_2	ps3/rgl/src/include/GmmAlloc.h	19;"	d
GMM_FREE_BIN_20	ps3/rgl/src/include/GmmAlloc.h	37;"	d
GMM_FREE_BIN_21	ps3/rgl/src/include/GmmAlloc.h	38;"	d
GMM_FREE_BIN_3	ps3/rgl/src/include/GmmAlloc.h	20;"	d
GMM_FREE_BIN_4	ps3/rgl/src/include/GmmAlloc.h	21;"	d
GMM_FREE_BIN_5	ps3/rgl/src/include/GmmAlloc.h	22;"	d
GMM_FREE_BIN_6	ps3/rgl/src/include/GmmAlloc.h	23;"	d
GMM_FREE_BIN_7	ps3/rgl/src/include/GmmAlloc.h	24;"	d
GMM_FREE_BIN_8	ps3/rgl/src/include/GmmAlloc.h	25;"	d
GMM_FREE_BIN_9	ps3/rgl/src/include/GmmAlloc.h	26;"	d
GMM_NUM_FREE_BINS	ps3/rgl/src/include/GmmAlloc.h	16;"	d
GMM_PPU_WAIT_INDEX	ps3/rgl/src/include/GmmAlloc.h	12;"	d
GMM_RSX_WAIT_INDEX	ps3/rgl/src/include/GmmAlloc.h	11;"	d
GMM_TILE_ALIGNMENT	ps3/rgl/src/include/GmmAlloc.h	9;"	d
GMM_TILE_BLOCK_COUNT	ps3/rgl/src/include/GmmAlloc.h	14;"	d
GOTO_END_ERROR	file_extract.c	176;"	d	file:
GOTO_END_ERROR	file_extract.c	177;"	d	file:
GOTO_END_ERROR	gfx/rpng/rpng.c	34;"	d	file:
GOTO_END_ERROR	gfx/rpng/rpng.c	35;"	d	file:
GOTO_IF_FAIL	audio/opensl.c	66;"	d	file:
GPLWaiverDialogFragment	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^public final class GPLWaiverDialogFragment extends DialogFragment$/;"	c	inherits:DialogFragment
GPLWaiverDialogFragment.newInstance	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^	public static GPLWaiverDialogFragment newInstance()$/;"	m	class:GPLWaiverDialogFragment	access:public	signature:()
GPLWaiverDialogFragment.onCreateDialog	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^	public Dialog onCreateDialog(Bundle savedInstanceState)$/;"	m	class:GPLWaiverDialogFragment	access:public	signature:(Bundle savedInstanceState)
GRAB	apple/iOS/bluetooth/btdynamic.c	25;"	d	file:
GREEN	gfx/gfx_common.h	108;"	d
GRP_COMDAT	ps3/rgl/src/cg/cgbdefs.hpp	196;"	d
GRP_COMDAT	wii/app_booter/elf_abi.h	334;"	d
GRP_MASKOS	ps3/rgl/src/cg/cgbdefs.hpp	197;"	d
GRP_MASKOS	wii/app_booter/elf_abi.h	335;"	d
GRP_MASKPROC	ps3/rgl/src/cg/cgbdefs.hpp	198;"	d
GRP_MASKPROC	wii/app_booter/elf_abi.h	336;"	d
GSEVENT_TYPE_KEYDOWN	apple/common/RetroArch_Apple.h	28;"	d
GSEVENT_TYPE_KEYUP	apple/common/RetroArch_Apple.h	29;"	d
GX_CLASSIC_A	gx/gx_input.h	/^   GX_CLASSIC_A            = 1ULL << 20,$/;"	e	enum:__anon248
GX_CLASSIC_B	gx/gx_input.h	/^   GX_CLASSIC_B            = 1ULL << 21,$/;"	e	enum:__anon248
GX_CLASSIC_DOWN	gx/gx_input.h	/^   GX_CLASSIC_DOWN         = 1ULL << 32,$/;"	e	enum:__anon248
GX_CLASSIC_HOME	gx/gx_input.h	/^   GX_CLASSIC_HOME         = 1ULL << 26,$/;"	e	enum:__anon248
GX_CLASSIC_LEFT	gx/gx_input.h	/^   GX_CLASSIC_LEFT         = 1ULL << 33,$/;"	e	enum:__anon248
GX_CLASSIC_L_TRIGGER	gx/gx_input.h	/^   GX_CLASSIC_L_TRIGGER    = 1ULL << 27,$/;"	e	enum:__anon248
GX_CLASSIC_MINUS	gx/gx_input.h	/^   GX_CLASSIC_MINUS        = 1ULL << 25,$/;"	e	enum:__anon248
GX_CLASSIC_PLUS	gx/gx_input.h	/^   GX_CLASSIC_PLUS         = 1ULL << 24,$/;"	e	enum:__anon248
GX_CLASSIC_RIGHT	gx/gx_input.h	/^   GX_CLASSIC_RIGHT        = 1ULL << 34,$/;"	e	enum:__anon248
GX_CLASSIC_R_TRIGGER	gx/gx_input.h	/^   GX_CLASSIC_R_TRIGGER    = 1ULL << 28,$/;"	e	enum:__anon248
GX_CLASSIC_UP	gx/gx_input.h	/^   GX_CLASSIC_UP           = 1ULL << 31,$/;"	e	enum:__anon248
GX_CLASSIC_X	gx/gx_input.h	/^   GX_CLASSIC_X            = 1ULL << 22,$/;"	e	enum:__anon248
GX_CLASSIC_Y	gx/gx_input.h	/^   GX_CLASSIC_Y            = 1ULL << 23,$/;"	e	enum:__anon248
GX_CLASSIC_ZL_TRIGGER	gx/gx_input.h	/^   GX_CLASSIC_ZL_TRIGGER   = 1ULL << 29,$/;"	e	enum:__anon248
GX_CLASSIC_ZR_TRIGGER	gx/gx_input.h	/^   GX_CLASSIC_ZR_TRIGGER   = 1ULL << 30,$/;"	e	enum:__anon248
GX_CopyDisp	gx/gx_video_inl.h	137;"	d
GX_DEVICE_CLASSIC_ID_JOYPAD_A	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_A,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_B	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_B,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_DOWN	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_DOWN,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_HOME	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_HOME,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_LEFT	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_LEFT,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_L_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_L_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_MINUS	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_MINUS,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_PLUS	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_PLUS,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_RIGHT	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_RIGHT,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_R_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_R_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_UP	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_UP,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_X	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_X,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_Y	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_Y,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_ZL_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_ZL_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_CLASSIC_ID_JOYPAD_ZR_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_CLASSIC_ID_JOYPAD_ZR_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_END	frontend/platform/platform_gx.c	/^   GX_DEVICE_END$/;"	e	enum:__anon12	file:
GX_DEVICE_GC_ID_JOYPAD_A	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_A = 0,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_B	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_B,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_DOWN	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_DOWN,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_LEFT	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_LEFT,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_L_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_L_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_RIGHT	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_RIGHT,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_R_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_R_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_START	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_START,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_UP	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_UP,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_X	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_X,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_Y	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_Y,$/;"	e	enum:gx_device_id
GX_DEVICE_GC_ID_JOYPAD_Z_TRIGGER	gx/gx_input.h	/^   GX_DEVICE_GC_ID_JOYPAD_Z_TRIGGER,$/;"	e	enum:gx_device_id
GX_DEVICE_SD	frontend/platform/platform_gx.c	/^   GX_DEVICE_SD = 0,$/;"	e	enum:__anon12	file:
GX_DEVICE_USB	frontend/platform/platform_gx.c	/^   GX_DEVICE_USB,$/;"	e	enum:__anon12	file:
GX_DEVICE_WIIMOTE_ID_JOYPAD_1	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_1,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_2	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_2,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_A	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_A,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_B	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_B,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_C	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_C,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_DOWN	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_DOWN,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_HOME	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_HOME,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_LEFT	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_LEFT,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_MINUS	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_MINUS,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_PLUS	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_PLUS,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_RIGHT	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_RIGHT,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_UP	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_UP,$/;"	e	enum:gx_device_id
GX_DEVICE_WIIMOTE_ID_JOYPAD_Z	gx/gx_input.h	/^   GX_DEVICE_WIIMOTE_ID_JOYPAD_Z,$/;"	e	enum:gx_device_id
GX_GC_A	gx/gx_input.h	/^   GX_GC_A                 = 1ULL << 0,$/;"	e	enum:__anon248
GX_GC_B	gx/gx_input.h	/^   GX_GC_B                 = 1ULL << 1,$/;"	e	enum:__anon248
GX_GC_DOWN	gx/gx_input.h	/^   GX_GC_DOWN              = 1ULL << 9,$/;"	e	enum:__anon248
GX_GC_LEFT	gx/gx_input.h	/^   GX_GC_LEFT              = 1ULL << 10,$/;"	e	enum:__anon248
GX_GC_L_TRIGGER	gx/gx_input.h	/^   GX_GC_L_TRIGGER         = 1ULL << 6,$/;"	e	enum:__anon248
GX_GC_RIGHT	gx/gx_input.h	/^   GX_GC_RIGHT             = 1ULL << 11,$/;"	e	enum:__anon248
GX_GC_R_TRIGGER	gx/gx_input.h	/^   GX_GC_R_TRIGGER         = 1ULL << 7,$/;"	e	enum:__anon248
GX_GC_START	gx/gx_input.h	/^   GX_GC_START             = 1ULL << 4,$/;"	e	enum:__anon248
GX_GC_UP	gx/gx_input.h	/^   GX_GC_UP                = 1ULL << 8,$/;"	e	enum:__anon248
GX_GC_X	gx/gx_input.h	/^   GX_GC_X                 = 1ULL << 2,$/;"	e	enum:__anon248
GX_GC_Y	gx/gx_input.h	/^   GX_GC_Y                 = 1ULL << 3,$/;"	e	enum:__anon248
GX_GC_Z_TRIGGER	gx/gx_input.h	/^   GX_GC_Z_TRIGGER         = 1ULL << 5,$/;"	e	enum:__anon248
GX_InvalidateTexAll	gx/gx_video_inl.h	126;"	d
GX_LOAD_BP_REG	gx/gx_video_inl.h	120;"	d
GX_LoadTexObj	gx/gx_video_inl.h	170;"	d
GX_NUNCHUK_C	gx/gx_input.h	/^   GX_NUNCHUK_C            = 1ULL << 55,$/;"	e	enum:__anon248
GX_NUNCHUK_DOWN	gx/gx_input.h	/^   GX_NUNCHUK_DOWN         = 1ULL << 57,$/;"	e	enum:__anon248
GX_NUNCHUK_LEFT	gx/gx_input.h	/^   GX_NUNCHUK_LEFT         = 1ULL << 58,$/;"	e	enum:__anon248
GX_NUNCHUK_RIGHT	gx/gx_input.h	/^   GX_NUNCHUK_RIGHT        = 1ULL << 59,$/;"	e	enum:__anon248
GX_NUNCHUK_UP	gx/gx_input.h	/^   GX_NUNCHUK_UP           = 1ULL << 56,$/;"	e	enum:__anon248
GX_NUNCHUK_Z	gx/gx_input.h	/^   GX_NUNCHUK_Z            = 1ULL << 54,$/;"	e	enum:__anon248
GX_OPTS	gx/gx_video.c	35;"	d	file:
GX_QUIT_KEY	gx/gx_input.h	/^   GX_QUIT_KEY             = 1ULL << 60,$/;"	e	enum:__anon248
GX_RESOLUTIONS_336_240	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_336_240,$/;"	e	enum:__anon24
GX_RESOLUTIONS_340_232	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_340_232,$/;"	e	enum:__anon24
GX_RESOLUTIONS_384_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_384_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_384_240	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_384_240,$/;"	e	enum:__anon24
GX_RESOLUTIONS_448_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_448_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_480_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_480_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_192	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_192 = 0,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_232	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_232,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_236	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_236,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_240	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_240,$/;"	e	enum:__anon24
GX_RESOLUTIONS_512_448	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_512_448,$/;"	e	enum:__anon24
GX_RESOLUTIONS_530_240	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_530_240,$/;"	e	enum:__anon24
GX_RESOLUTIONS_576_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_576_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_598_200	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_598_200,$/;"	e	enum:__anon24
GX_RESOLUTIONS_608_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_608_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_640_200	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_640_200,$/;"	e	enum:__anon24
GX_RESOLUTIONS_640_224	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_640_224,$/;"	e	enum:__anon24
GX_RESOLUTIONS_640_240	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_640_240,$/;"	e	enum:__anon24
GX_RESOLUTIONS_640_448	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_640_448, $/;"	e	enum:__anon24
GX_RESOLUTIONS_640_480	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_640_480,$/;"	e	enum:__anon24
GX_RESOLUTIONS_LAST	frontend/menu/menu_common.h	/^   GX_RESOLUTIONS_LAST,$/;"	e	enum:__anon24
GX_SetCurrentMtx	gx/gx_video_inl.h	132;"	d
GX_WIIMOTE_1	gx/gx_input.h	/^   GX_WIIMOTE_1            = 1ULL << 45,$/;"	e	enum:__anon248
GX_WIIMOTE_2	gx/gx_input.h	/^   GX_WIIMOTE_2            = 1ULL << 46,$/;"	e	enum:__anon248
GX_WIIMOTE_A	gx/gx_input.h	/^   GX_WIIMOTE_A            = 1ULL << 43,$/;"	e	enum:__anon248
GX_WIIMOTE_B	gx/gx_input.h	/^   GX_WIIMOTE_B            = 1ULL << 44,$/;"	e	enum:__anon248
GX_WIIMOTE_DOWN	gx/gx_input.h	/^   GX_WIIMOTE_DOWN         = 1ULL << 51,$/;"	e	enum:__anon248
GX_WIIMOTE_HOME	gx/gx_input.h	/^   GX_WIIMOTE_HOME         = 1ULL << 49, \/\/ needed on GameCube as "fake" menu button$/;"	e	enum:__anon248
GX_WIIMOTE_LEFT	gx/gx_input.h	/^   GX_WIIMOTE_LEFT         = 1ULL << 52,$/;"	e	enum:__anon248
GX_WIIMOTE_MINUS	gx/gx_input.h	/^   GX_WIIMOTE_MINUS        = 1ULL << 48,$/;"	e	enum:__anon248
GX_WIIMOTE_PLUS	gx/gx_input.h	/^   GX_WIIMOTE_PLUS         = 1ULL << 47,$/;"	e	enum:__anon248
GX_WIIMOTE_RIGHT	gx/gx_input.h	/^   GX_WIIMOTE_RIGHT        = 1ULL << 53,$/;"	e	enum:__anon248
GX_WIIMOTE_UP	gx/gx_input.h	/^   GX_WIIMOTE_UP           = 1ULL << 50,$/;"	e	enum:__anon248
GameRating	frontend/platform/platform_xdk.h	/^	ULONG GameRating;$/;"	m	struct:_XBE_CERTIFICATE	access:public
GameRegion	frontend/platform/platform_xdk.h	/^	ULONG GameRegion;$/;"	m	struct:_XBE_CERTIFICATE	access:public
Gamepad	input/winxinput_joypad.c	/^   XINPUT_GAMEPAD Gamepad;$/;"	m	struct:__anon87	file:	access:public
GeneralPreferenceFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/GeneralPreferenceFragment.java	/^public final class GeneralPreferenceFragment extends PreferenceListFragment$/;"	c	inherits:PreferenceListFragment
GeneralPreferenceFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/GeneralPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:GeneralPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
Get	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Get;                     \/* get offset, read only            0044-0047*\/$/;"	m	struct:__anon54	access:public
GetData	xdk/xdk_resources.cpp	/^void *PackedResource::GetData( const char *strName ) const$/;"	f	class:PackedResource	signature:( const char *strName ) const
GetData	xdk/xdk_resources.h	/^      void *GetData( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
GetData	xdk/xdk_resources.h	/^      void *GetData( const CHAR* strName ) const;$/;"	p	class:PackedResource	access:public	signature:( const CHAR* strName ) const
GetResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE GetResource( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
GetResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE GetResource( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
GetResourceTags	xdk/xdk_resources.cpp	/^void PackedResource::GetResourceTags( DWORD* pdwNumResourceTags,$/;"	f	class:PackedResource	signature:( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags )
GetResourceTags	xdk/xdk_resources.h	/^      void GetResourceTags( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags );$/;"	p	class:PackedResource	access:public	signature:( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags )
GetTexture	xdk/xdk_resources.h	/^      LPDIRECT3DTEXTURE GetTexture( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
GetTexture	xdk/xdk_resources.h	/^      LPDIRECT3DTEXTURE GetTexture( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
GetVSCommonToolsDir	dist-scripts/xdk360_env.bat	/^:GetVSCommonToolsDir$/;"	l
GetVSCommonToolsDirHelper32	dist-scripts/xdk360_env.bat	/^:GetVSCommonToolsDirHelper32$/;"	l
GetVSCommonToolsDirHelper64	dist-scripts/xdk360_env.bat	/^:GetVSCommonToolsDirHelper64$/;"	l
GetVertexBuffer	xdk/xdk_resources.h	/^      LPDIRECT3DVERTEXBUFFER GetVertexBuffer( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
GetVertexBuffer	xdk/xdk_resources.h	/^      LPDIRECT3DVERTEXBUFFER GetVertexBuffer( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
Global	gfx/d3d9/render_chain.cpp	/^namespace Global$/;"	n	file:
Global::stock_program	gfx/d3d9/render_chain.cpp	/^   static const char *stock_program =$/;"	m	namespace:Global	file:
GlobalDefaultDevice	audio/xaudio-c/xaudio.h	/^   GlobalDefaultDevice         = 0xf,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
GmmAllocator	ps3/rgl/src/include/GmmAlloc.h	/^typedef struct GmmAllocator$/;"	s
GmmAllocator	ps3/rgl/src/include/GmmAlloc.h	/^} GmmAllocator;$/;"	t	typeref:struct:GmmAllocator
GmmAllocator::freeAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    freeAddress;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::freedSinceSweep	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    freedSinceSweep;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::memoryBase	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    memoryBase;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pFreeHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pFreeHead[GMM_NUM_FREE_BINS];$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pFreeTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pFreeTail[GMM_NUM_FREE_BINS];$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pHead;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pPendingFreeHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pPendingFreeHead;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pPendingFreeTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pPendingFreeTail;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pSweepHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pSweepHead;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pTail;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pTileHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmTileBlock    *pTileHead;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::pTileTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmTileBlock    *pTileTail;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::size	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    size;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::startAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    startAddress;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::tileSize	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileSize;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::tileStartAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileStartAddress;$/;"	m	struct:GmmAllocator	access:public
GmmAllocator::totalSize	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    totalSize;		\/\/ == size + tileSize$/;"	m	struct:GmmAllocator	access:public
GmmBaseBlock	ps3/rgl/src/include/GmmAlloc.h	/^typedef struct GmmBaseBlock{$/;"	s
GmmBaseBlock	ps3/rgl/src/include/GmmAlloc.h	/^}GmmBaseBlock;$/;"	t	typeref:struct:GmmBaseBlock
GmmBaseBlock::address	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    address;$/;"	m	struct:GmmBaseBlock	access:public
GmmBaseBlock::isTile	ps3/rgl/src/include/GmmAlloc.h	/^   uint8_t     isTile;$/;"	m	struct:GmmBaseBlock	access:public
GmmBaseBlock::size	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    size;$/;"	m	struct:GmmBaseBlock	access:public
GmmBlock	ps3/rgl/src/include/GmmAlloc.h	/^typedef struct GmmBlock{$/;"	s
GmmBlock	ps3/rgl/src/include/GmmAlloc.h	/^}GmmBlock;$/;"	t	typeref:struct:GmmBlock
GmmBlock::base	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBaseBlock    base;	\/\/ inheritence$/;"	m	struct:GmmBlock	access:public
GmmBlock::fence	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    fence;$/;"	m	struct:GmmBlock	access:public
GmmBlock::isPinned	ps3/rgl/src/include/GmmAlloc.h	/^   uint8_t     isPinned;$/;"	m	struct:GmmBlock	access:public
GmmBlock::pNext	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pNext;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
GmmBlock::pNextFree	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pNextFree;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
GmmBlock::pPrev	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pPrev;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
GmmBlock::pPrevFree	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pPrevFree;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
GmmFixedAllocData	ps3/rgl/src/include/GmmAlloc.h	/^typedef struct GmmFixedAllocData{$/;"	s
GmmFixedAllocData	ps3/rgl/src/include/GmmAlloc.h	/^}GmmFixedAllocData;$/;"	t	typeref:struct:GmmFixedAllocData
GmmFixedAllocData::BlockListCount	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    BlockListCount[2];$/;"	m	struct:GmmFixedAllocData	access:public
GmmFixedAllocData::pBlocksUsed	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    *pBlocksUsed[2];$/;"	m	struct:GmmFixedAllocData	access:public
GmmFixedAllocData::ppBlockList	ps3/rgl/src/include/GmmAlloc.h	/^   char        **ppBlockList[2];		\/\/ pre-allocated list of block descriptors$/;"	m	struct:GmmFixedAllocData	access:public
GmmFixedAllocData::ppFreeBlockList	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    **ppFreeBlockList[2];$/;"	m	struct:GmmFixedAllocData	access:public
GmmTileBlock	ps3/rgl/src/include/GmmAlloc.h	/^typedef struct GmmTileBlock$/;"	s
GmmTileBlock	ps3/rgl/src/include/GmmAlloc.h	/^} GmmTileBlock;$/;"	t	typeref:struct:GmmTileBlock
GmmTileBlock::base	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBaseBlock        base;	\/\/ inheritence$/;"	m	struct:GmmTileBlock	access:public
GmmTileBlock::pData	ps3/rgl/src/include/GmmAlloc.h	/^   void        *pData;$/;"	m	struct:GmmTileBlock	access:public
GmmTileBlock::pNext	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmTileBlock *pNext;$/;"	m	struct:GmmTileBlock	typeref:struct:GmmTileBlock::GmmTileBlock	access:public
GmmTileBlock::pPrev	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmTileBlock *pPrev;$/;"	m	struct:GmmTileBlock	typeref:struct:GmmTileBlock::GmmTileBlock	access:public
GmmTileBlock::tileTag	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileTag;$/;"	m	struct:GmmTileBlock	access:public
GraphicsClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint GraphicsClock;$/;"	m	struct:rglGcmResource	access:public
GraphicsClock	ps3/rgl/src/rgl_ps3.cpp	/^static GLuint GraphicsClock = 0;$/;"	v	file:
HASH_LEN	tools/retrolaunch/main.c	24;"	d	file:
HAT_DOWN_MASK	driver.h	197;"	d
HAT_DOWN_SHIFT	driver.h	193;"	d
HAT_LEFT_MASK	driver.h	198;"	d
HAT_LEFT_SHIFT	driver.h	194;"	d
HAT_MAP	driver.h	200;"	d
HAT_MASK	driver.h	202;"	d
HAT_RIGHT_MASK	driver.h	199;"	d
HAT_RIGHT_SHIFT	driver.h	195;"	d
HAT_UP_MASK	driver.h	196;"	d
HAT_UP_SHIFT	driver.h	192;"	d
HAVE_AL	config.mk	/^HAVE_AL = 0$/;"	m
HAVE_ALSA	config.h	6;"	d
HAVE_ALSA	config.mk	/^HAVE_ALSA = 1$/;"	m
HAVE_AVCODEC	config.mk	/^HAVE_AVCODEC = 0$/;"	m
HAVE_AVFORMAT	config.mk	/^HAVE_AVFORMAT = 0$/;"	m
HAVE_AVUTIL	config.mk	/^HAVE_AVUTIL = 0$/;"	m
HAVE_BSV_MOVIE	config.mk	/^HAVE_BSV_MOVIE = 0$/;"	m
HAVE_CG	config.mk	/^HAVE_CG = 0$/;"	m
HAVE_COMMAND	config.h	48;"	d
HAVE_COMMAND	config.mk	/^HAVE_COMMAND = 1$/;"	m
HAVE_COREAUDIO	config.mk	/^HAVE_COREAUDIO = 0$/;"	m
HAVE_DRM	config.h	25;"	d
HAVE_DRM	config.mk	/^HAVE_DRM = 1$/;"	m
HAVE_DYLIB	config.h	26;"	d
HAVE_DYLIB	config.mk	/^HAVE_DYLIB = 1$/;"	m
HAVE_DYNAMIC	config.h	33;"	d
HAVE_DYNAMIC	config.mk	/^HAVE_DYNAMIC = 1$/;"	m
HAVE_EGL	config.h	22;"	d
HAVE_EGL	config.mk	/^HAVE_EGL = 1$/;"	m
HAVE_FBO	config.h	49;"	d
HAVE_FBO	config.mk	/^HAVE_FBO = 1$/;"	m
HAVE_FLOATHARD	config.mk	/^HAVE_FLOATHARD = 0$/;"	m
HAVE_FLOATSOFTFP	config.mk	/^HAVE_FLOATSOFTFP = 0$/;"	m
HAVE_FREETYPE	config.h	38;"	d
HAVE_FREETYPE	config.mk	/^HAVE_FREETYPE = 1$/;"	m
HAVE_GBM	config.mk	/^HAVE_GBM = 0$/;"	m
HAVE_GETOPT_LONG	config.h	27;"	d
HAVE_GETOPT_LONG	config.mk	/^HAVE_GETOPT_LONG = 1$/;"	m
HAVE_GLES	config.h	19;"	d
HAVE_GLES	config.mk	/^HAVE_GLES = 1$/;"	m
HAVE_GLES3	config.mk	/^HAVE_GLES3 = 0$/;"	m
HAVE_JACK	config.mk	/^HAVE_JACK = 0$/;"	m
HAVE_KMS	config.mk	/^HAVE_KMS = 0$/;"	m
HAVE_LIBXML2	config.mk	/^HAVE_LIBXML2 = 0$/;"	m
HAVE_LIMA	config.mk	/^HAVE_LIMA = 0$/;"	m
HAVE_LOGGER	android/native/jni/Android.mk	/^HAVE_LOGGER := 1$/;"	m
HAVE_MMAP	config.h	52;"	d
HAVE_MMAP	config.mk	/^HAVE_MMAP = 1$/;"	m
HAVE_NEON	android/native/jni/Android.mk	/^HAVE_NEON := 1$/;"	m
HAVE_NEON	config.mk	/^HAVE_NEON = 0$/;"	m
HAVE_NEON	libretro-test-gl/Makefile	/^   HAVE_NEON = 1$/;"	m
HAVE_NETPLAY	config.mk	/^HAVE_NETPLAY = 0$/;"	m
HAVE_NETWORK_CMD	config.mk	/^HAVE_NETWORK_CMD = 0$/;"	m
HAVE_OMAP	config.mk	/^HAVE_OMAP = 0$/;"	m
HAVE_OPENGL	config.h	17;"	d
HAVE_OPENGL	config.mk	/^HAVE_OPENGL = 1$/;"	m
HAVE_OSS	config.mk	/^HAVE_OSS = 0$/;"	m
HAVE_OSS_BSD	config.mk	/^HAVE_OSS_BSD = 0$/;"	m
HAVE_OSS_LIB	config.mk	/^HAVE_OSS_LIB = 0$/;"	m
HAVE_PULSE	config.mk	/^HAVE_PULSE = 0$/;"	m
HAVE_PYTHON	config.mk	/^HAVE_PYTHON = 0$/;"	m
HAVE_RGUI	config.h	5;"	d
HAVE_RGUI	config.mk	/^HAVE_RGUI = 1$/;"	m
HAVE_ROAR	config.mk	/^HAVE_ROAR = 0$/;"	m
HAVE_RSOUND	config.mk	/^HAVE_RSOUND = 0$/;"	m
HAVE_SDL	config.mk	/^HAVE_SDL = 0$/;"	m
HAVE_SDL_IMAGE	config.mk	/^HAVE_SDL_IMAGE = 0$/;"	m
HAVE_SHADER_MANAGER	frontend/menu/disp/rgui.c	41;"	d	file:
HAVE_SHADER_MANAGER	frontend/menu/disp/rmenu.c	41;"	d	file:
HAVE_SHADER_MANAGER	frontend/menu/menu_common.h	45;"	d
HAVE_STDIN_CMD	config.h	47;"	d
HAVE_STDIN_CMD	config.mk	/^HAVE_STDIN_CMD = 1$/;"	m
HAVE_STRCASESTR	config.h	51;"	d
HAVE_STRCASESTR	config.mk	/^HAVE_STRCASESTR = 1$/;"	m
HAVE_STRL	config.mk	/^HAVE_STRL = 0$/;"	m
HAVE_SWSCALE	config.mk	/^HAVE_SWSCALE = 0$/;"	m
HAVE_THREADS	config.h	28;"	d
HAVE_THREADS	config.mk	/^HAVE_THREADS = 1$/;"	m
HAVE_TIME	apple/iOS/bluetooth/btstack/run_loop.h	41;"	d
HAVE_UDEV	config.mk	/^HAVE_UDEV = 0$/;"	m
HAVE_V4L2	config.mk	/^HAVE_V4L2 = 0$/;"	m
HAVE_VG	config.mk	/^HAVE_VG = 0$/;"	m
HAVE_VIDEOCORE	config.mk	/^HAVE_VIDEOCORE = 0$/;"	m
HAVE_X11	config.mk	/^HAVE_X11 = 0$/;"	m
HAVE_XEXT	config.mk	/^HAVE_XEXT = 0$/;"	m
HAVE_XF86VM	config.mk	/^HAVE_XF86VM = 0$/;"	m
HAVE_XINERAMA	config.mk	/^HAVE_XINERAMA = 0$/;"	m
HAVE_XKBCOMMON	config.mk	/^HAVE_XKBCOMMON = 0$/;"	m
HAVE_XVIDEO	config.mk	/^HAVE_XVIDEO = 0$/;"	m
HAVE_ZLIB	config.h	32;"	d
HAVE_ZLIB	config.mk	/^HAVE_ZLIB = 1$/;"	m
HBP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HBP;$/;"	m	struct:__disp_video_timing	access:public
HCI_ACL_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	50;"	d
HCI_COMMAND_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	49;"	d
HCI_EVENT_AUTHENTICATION_COMPLETE_EVENT	apple/iOS/bluetooth/btstack/hci_cmds.h	85;"	d
HCI_EVENT_CHANGE_CONNECTION_LINK_KEY_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	88;"	d
HCI_EVENT_COMMAND_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	93;"	d
HCI_EVENT_COMMAND_STATUS	apple/iOS/bluetooth/btstack/hci_cmds.h	94;"	d
HCI_EVENT_CONNECTION_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	82;"	d
HCI_EVENT_CONNECTION_REQUEST	apple/iOS/bluetooth/btstack/hci_cmds.h	83;"	d
HCI_EVENT_DATA_BUFFER_OVERFLOW	apple/iOS/bluetooth/btstack/hci_cmds.h	104;"	d
HCI_EVENT_DISCONNECTION_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	84;"	d
HCI_EVENT_ENCRYPTION_CHANGE	apple/iOS/bluetooth/btstack/hci_cmds.h	87;"	d
HCI_EVENT_EXTENDED_INQUIRY_RESPONSE	apple/iOS/bluetooth/btstack/hci_cmds.h	109;"	d
HCI_EVENT_FLUSH_OCCURED	apple/iOS/bluetooth/btstack/hci_cmds.h	96;"	d
HCI_EVENT_HARDWARE_ERROR	apple/iOS/bluetooth/btstack/hci_cmds.h	95;"	d
HCI_EVENT_INQUIRY_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	80;"	d
HCI_EVENT_INQUIRY_RESULT	apple/iOS/bluetooth/btstack/hci_cmds.h	81;"	d
HCI_EVENT_INQUIRY_RESULT_WITH_RSSI	apple/iOS/bluetooth/btstack/hci_cmds.h	108;"	d
HCI_EVENT_LE_META	apple/iOS/bluetooth/btstack/hci_cmds.h	110;"	d
HCI_EVENT_LINK_KEY_NOTIFICATION	apple/iOS/bluetooth/btstack/hci_cmds.h	103;"	d
HCI_EVENT_LINK_KEY_REQUEST	apple/iOS/bluetooth/btstack/hci_cmds.h	102;"	d
HCI_EVENT_MASTER_LINK_KEY_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	89;"	d
HCI_EVENT_MAX_SLOTS_CHANGED	apple/iOS/bluetooth/btstack/hci_cmds.h	105;"	d
HCI_EVENT_MODE_CHANGE_EVENT	apple/iOS/bluetooth/btstack/hci_cmds.h	99;"	d
HCI_EVENT_NUMBER_OF_COMPLETED_PACKETS	apple/iOS/bluetooth/btstack/hci_cmds.h	98;"	d
HCI_EVENT_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	52;"	d
HCI_EVENT_PACKET_TYPE_CHANGED	apple/iOS/bluetooth/btstack/hci_cmds.h	107;"	d
HCI_EVENT_PIN_CODE_REQUEST	apple/iOS/bluetooth/btstack/hci_cmds.h	101;"	d
HCI_EVENT_QOS_SETUP_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	92;"	d
HCI_EVENT_READ_CLOCK_OFFSET_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	106;"	d
HCI_EVENT_READ_REMOTE_SUPPORTED_FEATURES_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	90;"	d
HCI_EVENT_READ_REMOTE_VERSION_INFORMATION_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	91;"	d
HCI_EVENT_REMOTE_NAME_REQUEST_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	86;"	d
HCI_EVENT_RETURN_LINK_KEYS	apple/iOS/bluetooth/btstack/hci_cmds.h	100;"	d
HCI_EVENT_ROLE_CHANGE	apple/iOS/bluetooth/btstack/hci_cmds.h	97;"	d
HCI_EVENT_VENDOR_SPECIFIC	apple/iOS/bluetooth/btstack/hci_cmds.h	111;"	d
HCI_INQUIRY_LAP	apple/iOS/bluetooth/btstack/hci_cmds.h	232;"	d
HCI_POWER_MODE	apple/iOS/bluetooth/btstack/hci_cmds.h	/^} HCI_POWER_MODE;$/;"	t	typeref:enum:__anon148
HCI_POWER_OFF	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_POWER_OFF = 0,$/;"	e	enum:__anon148
HCI_POWER_ON	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_POWER_ON,$/;"	e	enum:__anon148
HCI_POWER_SLEEP	apple/iOS/bluetooth/btstack/hci_cmds.h	/^	HCI_POWER_SLEEP$/;"	e	enum:__anon148
HCI_SCO_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	51;"	d
HCI_STATE	apple/iOS/bluetooth/btstack/hci_cmds.h	/^} HCI_STATE;$/;"	t	typeref:enum:__anon149
HCI_STATE_FALLING_ASLEEP	apple/iOS/bluetooth/btstack/hci_cmds.h	/^	HCI_STATE_FALLING_ASLEEP$/;"	e	enum:__anon149
HCI_STATE_HALTING	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_STATE_HALTING,$/;"	e	enum:__anon149
HCI_STATE_INITIALIZING	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_STATE_INITIALIZING,$/;"	e	enum:__anon149
HCI_STATE_OFF	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_STATE_OFF = 0,$/;"	e	enum:__anon149
HCI_STATE_SLEEPING	apple/iOS/bluetooth/btstack/hci_cmds.h	/^	HCI_STATE_SLEEPING,$/;"	e	enum:__anon149
HCI_STATE_WORKING	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    HCI_STATE_WORKING,$/;"	e	enum:__anon149
HCI_SUBEVENT_LE_ADVERTISING_REPORT	apple/iOS/bluetooth/btstack/hci_cmds.h	114;"	d
HCI_SUBEVENT_LE_CONNECTION_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	113;"	d
HCI_SUBEVENT_LE_CONNECTION_UPDATE_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	115;"	d
HCI_SUBEVENT_LE_LONG_TERM_KEY_REQUEST	apple/iOS/bluetooth/btstack/hci_cmds.h	117;"	d
HCI_SUBEVENT_LE_READ_REMOTE_USED_FEATURES_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	116;"	d
HEADERS	Makefile	/^HEADERS = $(wildcard *\/*.h) $(wildcard *.h)$/;"	m
HEADER_SIZE	audio/librsound.c	290;"	d	file:
HFP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HFP;$/;"	m	struct:__disp_video_timing	access:public
HIDKEY	apple/common/apple_input.c	45;"	d	file:
HIDKEY	apple/common/apple_input.c	47;"	d	file:
HOST_ENDIANNESS	ps3/rgl/src/cg/cgbutils.hpp	/^      } HOST_ENDIANNESS; \/\/ endianness$/;"	t	namespace:cgc::bio	typeref:enum:cgc::bio::__anon33
HPSW	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HPSW;$/;"	m	struct:__disp_video_timing	access:public
HSYNC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HSYNC;	\/* 0: Negative 1: Positive *\/$/;"	m	struct:__disp_video_timing	access:public
HT	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HT;$/;"	m	struct:__disp_video_timing	access:public
HalEnableSecureTrayEject	frontend/platform/platform_xdk.h	/^HalEnableSecureTrayEject($/;"	p	signature:( VOID )
HalReadSMCTrayState	frontend/platform/platform_xdk.h	/^	extern VOID  WINAPI HalReadSMCTrayState(DWORD* state, DWORD* count);$/;"	p	signature:(DWORD* state, DWORD* count)
HalReturnToFirmware	frontend/platform/platform_xdk.h	/^	extern VOID	 WINAPI HalReturnToFirmware(DWORD);$/;"	p	signature:(DWORD)
HalWriteSMBusValue	frontend/platform/platform_xdk.h	/^	extern VOID  WINAPI HalWriteSMBusValue(BYTE, BYTE, BOOL, BYTE);$/;"	p	signature:(BYTE, BYTE, BOOL, BYTE)
HasVBOMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int HasVBOMask; \/\/ 1 == attribute is in a VBO (ie server-side)$/;"	m	struct:__anon69	access:public
Hdmi_close	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*Hdmi_close) (void);$/;"	m	struct:__anon195	access:public
Hdmi_open	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*Hdmi_open) (void);$/;"	m	struct:__anon195	access:public
HeadReferenceCount	frontend/platform/platform_xdk.h	/^	WORD *HeadReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
Header	frontend/platform/platform_xdk.h	/^	DISPATCHER_HEADER Header;$/;"	m	struct:_KCRITICAL_SECTION	access:public
Header	frontend/platform/platform_xdk.h	/^	DISPATCHER_HEADER Header;$/;"	m	struct:_KTHREAD	access:public
Header	frontend/platform/platform_xdk.h	/^    DISPATCHER_HEADER Header;$/;"	m	struct:_KTIMER	access:public
Header	ps3/ps3py/pkg.py	/^class Header(Struct):$/;"	c	inherits:Struct
HeaderSignature	frontend/platform/platform_xdk.h	/^	UCHAR HeaderSignature[256];$/;"	m	struct:_XBE_HEADER	access:public
HeaderSize	frontend/platform/platform_xdk.h	/^	ULONG HeaderSize;$/;"	m	struct:_XBE_HEADER	access:public
HeapCommit	frontend/platform/platform_xdk.h	/^	ULONG HeapCommit;$/;"	m	struct:_XBE_HEADER	access:public
HeapReserve	frontend/platform/platform_xdk.h	/^	ULONG HeapReserve;$/;"	m	struct:_XBE_HEADER	access:public
HighPassFilter	audio/xaudio-c/xaudio.h	/^   HighPassFilter $/;"	e	enum:XAUDIO2_FILTER_TYPE
HistorySelection	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^public final class HistorySelection extends DialogFragment$/;"	c	inherits:DialogFragment
HistorySelection.adapter	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private IconAdapter<HistoryWrapper> adapter;$/;"	f	class:HistorySelection	file:	access:private
HistorySelection.ctx	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private FragmentActivity ctx;$/;"	f	class:HistorySelection	file:	access:private
HistorySelection.getRetroActivity	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public Intent getRetroActivity()$/;"	m	class:HistorySelection	access:public	signature:()
HistorySelection.newInstance	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public static HistorySelection newInstance()$/;"	m	class:HistorySelection	access:public	signature:()
HistorySelection.onCreate	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:HistorySelection	access:public	signature:(Bundle savedInstanceState)
HistorySelection.onCreateView	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:HistorySelection	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
HistorySelection.onItemClickListener	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:HistorySelection	file:	access:private
HistoryWrapper	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public HistoryWrapper(String gamePath, String corePath, String coreName) {$/;"	m	class:HistoryWrapper	access:public	signature:(String gamePath, String corePath, String coreName)
HistoryWrapper	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^public final class HistoryWrapper implements IconAdapterItem {$/;"	c	inherits:IconAdapterItem
HistoryWrapper.HistoryWrapper	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public HistoryWrapper(String gamePath, String corePath, String coreName) {$/;"	m	class:HistoryWrapper	access:public	signature:(String gamePath, String corePath, String coreName)
HistoryWrapper.coreName	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String coreName;$/;"	f	class:HistoryWrapper	file:	access:private
HistoryWrapper.corePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String corePath;$/;"	f	class:HistoryWrapper	file:	access:private
HistoryWrapper.gamePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String gamePath;$/;"	f	class:HistoryWrapper	file:	access:private
HistoryWrapper.gamePathShort	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String gamePathShort;$/;"	f	class:HistoryWrapper	file:	access:private
HistoryWrapper.getCoreName	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getCoreName() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getCorePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getCorePath() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getGamePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getGamePath() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getIconDrawable	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public Drawable getIconDrawable() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getIconResourceId	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public int getIconResourceId() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getSubText	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getSubText() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.getText	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getText() {$/;"	m	class:HistoryWrapper	access:public	signature:()
HistoryWrapper.isEnabled	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public boolean isEnabled() {$/;"	m	class:HistoryWrapper	access:public	signature:()
I	gfx/context/sunxi_disp_ioctl.h	/^	__s32 I;	\/* 0: Progressive 1: Interlaced *\/$/;"	m	struct:__disp_video_timing	access:public
I18N_DIR	blackberry-qnx/bb10/Makefile	/^I18N_DIR	  := $(PROJECT_DIR)\/translations$/;"	m
ICADE_PROFILE_G910	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_G910,$/;"	e	enum:__anon82
ICADE_PROFILE_GAMESTOP_WIRELESS	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_GAMESTOP_WIRELESS,$/;"	e	enum:__anon82
ICADE_PROFILE_IPEGA_PG9017	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_IPEGA_PG9017,$/;"	e	enum:__anon82
ICADE_PROFILE_IPEGA_PG9017_MODE2	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_IPEGA_PG9017_MODE2,$/;"	e	enum:__anon82
ICADE_PROFILE_MOGA_HERO_POWER	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_MOGA_HERO_POWER,$/;"	e	enum:__anon82
ICADE_PROFILE_RED_SAMURAI	android/native/jni/input_autodetect.h	/^   ICADE_PROFILE_RED_SAMURAI = 0,$/;"	e	enum:__anon82
IDI_ICON	gfx/context/wgl_ctx.c	33;"	d	file:
IDI_ICON	gfx/d3d9/d3d9.cpp	50;"	d	file:
IDirect3DVertexBuffer	xdk/xdk_defines.h	37;"	d
IDirect3DVertexDeclaration	xdk/xdk_defines.h	80;"	d
IMG_EXT	screenshot.c	159;"	d	file:
INCLUDE	dist-scripts/xdk1_env.bat	/^@set INCLUDE=%MSVCDir%\\ATLMFC\\INCLUDE;%MSVCDir%\\INCLUDE;%FrameworkSDKDir%\\include;%INCLUDE%;%XDK%\\xbox\\include$/;"	v
INCLUDE	dist-scripts/xdk1_env_bigstack.bat	/^@set INCLUDE=%MSVCDir%\\ATLMFC\\INCLUDE;%MSVCDir%\\INCLUDE;%FrameworkSDKDir%\\include;%INCLUDE%;%XDK%\\xbox\\include$/;"	v
INCLUDE	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\INCLUDE" set INCLUDE=%VCINSTALLDIR%ATLMFC\\INCLUDE;%INCLUDE%$/;"	v
INCLUDE	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%INCLUDE" set INCLUDE=%VCINSTALLDIR%INCLUDE;%INCLUDE%$/;"	v
INCLUDE	wii/app_booter/Makefile	/^INCLUDE := -I. -I$(DEVKITPRO)\/libogc\/include$/;"	m
INCLUDE_DIRS	config.mk	/^INCLUDE_DIRS = $/;"	m
INCPOS	apple/iOS/bluetooth/btpad_queue.c	65;"	d	file:
INDEX	ps3/rgl/src/rgl_ps3.cpp	3411;"	d	file:
INDEX_REV	ps3/rgl/src/rgl_ps3.cpp	3412;"	d	file:
INGAME_MENU_AUDIO_OPTIONS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_AUDIO_OPTIONS_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_CHANGE_GAME	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_CHANGE_GAME,$/;"	e	enum:__anon17	file:
INGAME_MENU_CHANGE_LIBRETRO_CORE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_CHANGE_LIBRETRO_CORE = 0,$/;"	e	enum:__anon17	file:
INGAME_MENU_CORE_OPTIONS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_CORE_OPTIONS_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_INPUT_OPTIONS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_INPUT_OPTIONS_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_LOAD_GAME_HISTORY_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_LOAD_GAME_HISTORY_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_LOAD_STATE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_LOAD_STATE,$/;"	e	enum:__anon17	file:
INGAME_MENU_MAIN_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_MAIN_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_PATH_OPTIONS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_PATH_OPTIONS_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_QUIT_RETROARCH	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_QUIT_RETROARCH,$/;"	e	enum:__anon17	file:
INGAME_MENU_RESET	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_RESET,$/;"	e	enum:__anon17	file:
INGAME_MENU_RETURN_TO_GAME	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_RETURN_TO_GAME,$/;"	e	enum:__anon17	file:
INGAME_MENU_REWIND_ENABLED	frontend/menu/rmenu_xui.cpp	/^   INGAME_MENU_REWIND_ENABLED = 0,$/;"	e	enum:__anon20	file:
INGAME_MENU_REWIND_GRANULARITY	frontend/menu/rmenu_xui.cpp	/^   INGAME_MENU_REWIND_GRANULARITY,$/;"	e	enum:__anon20	file:
INGAME_MENU_SAVE_STATE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_SAVE_STATE,$/;"	e	enum:__anon17	file:
INGAME_MENU_SCREENSHOT_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_SCREENSHOT_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_SETTINGS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_SETTINGS_MODE,$/;"	e	enum:__anon17	file:
INGAME_MENU_VIDEO_OPTIONS_MODE	frontend/menu/rmenu_xui.cpp	/^    INGAME_MENU_VIDEO_OPTIONS_MODE,$/;"	e	enum:__anon17	file:
INITSTRING	console/logger/psl1ght_logger.c	43;"	d	file:
INPUTX	gfx/context/sunxi_disp_ioctl.h	/^	__s32 INPUTX;$/;"	m	struct:__disp_video_timing	access:public
INPUTY	gfx/context/sunxi_disp_ioctl.h	/^	__s32 INPUTY;$/;"	m	struct:__disp_video_timing	access:public
INPUT_ANDROID	config.def.h	/^   INPUT_ANDROID,$/;"	e	enum:__anon107
INPUT_APPLE	config.def.h	/^   INPUT_APPLE,$/;"	e	enum:__anon107
INPUT_COMMON_H__	input/input_common.h	17;"	d
INPUT_DEFAULT_DRIVER	config.def.h	169;"	d
INPUT_DEFAULT_DRIVER	config.def.h	171;"	d
INPUT_DEFAULT_DRIVER	config.def.h	173;"	d
INPUT_DEFAULT_DRIVER	config.def.h	175;"	d
INPUT_DEFAULT_DRIVER	config.def.h	177;"	d
INPUT_DEFAULT_DRIVER	config.def.h	179;"	d
INPUT_DEFAULT_DRIVER	config.def.h	181;"	d
INPUT_DEFAULT_DRIVER	config.def.h	183;"	d
INPUT_DEFAULT_DRIVER	config.def.h	185;"	d
INPUT_DEFAULT_DRIVER	config.def.h	187;"	d
INPUT_DEFAULT_DRIVER	config.def.h	189;"	d
INPUT_DEFAULT_DRIVER	config.def.h	191;"	d
INPUT_DEFAULT_DRIVER	config.def.h	193;"	d
INPUT_DEFAULT_DRIVER	config.def.h	195;"	d
INPUT_DEFAULT_DRIVER	config.def.h	197;"	d
INPUT_DINPUT	config.def.h	/^   INPUT_DINPUT,$/;"	e	enum:__anon107
INPUT_LINUXRAW	config.def.h	/^   INPUT_LINUXRAW,$/;"	e	enum:__anon107
INPUT_LOOP_FILEBROWSER	frontend/menu/rmenu_xui.cpp	/^   INPUT_LOOP_FILEBROWSER$/;"	e	enum:__anon16	file:
INPUT_LOOP_NONE	frontend/menu/rmenu_xui.cpp	/^   INPUT_LOOP_NONE = 0,$/;"	e	enum:__anon16	file:
INPUT_LOOP_RESIZE_MODE	frontend/menu/rmenu_xui.cpp	/^   INPUT_LOOP_RESIZE_MODE,$/;"	e	enum:__anon16	file:
INPUT_NULL	config.def.h	/^   INPUT_NULL,$/;"	e	enum:__anon107
INPUT_OVERLAY_H__	input/overlay.h	17;"	d
INPUT_PS3	config.def.h	/^   INPUT_PS3,$/;"	e	enum:__anon107
INPUT_PSP	config.def.h	/^   INPUT_PSP,$/;"	e	enum:__anon107
INPUT_QNX	config.def.h	/^   INPUT_QNX,$/;"	e	enum:__anon107
INPUT_RWEBINPUT	config.def.h	/^   INPUT_RWEBINPUT,$/;"	e	enum:__anon107
INPUT_SDL	config.def.h	/^   INPUT_SDL,$/;"	e	enum:__anon107
INPUT_UDEV	config.def.h	/^   INPUT_UDEV,$/;"	e	enum:__anon107
INPUT_WII	config.def.h	/^   INPUT_WII,$/;"	e	enum:__anon107
INPUT_X	config.def.h	/^   INPUT_X,$/;"	e	enum:__anon107
INPUT_XENON360	config.def.h	/^   INPUT_XENON360,$/;"	e	enum:__anon107
INPUT_XINPUT	config.def.h	/^   INPUT_XINPUT,$/;"	e	enum:__anon107
INT16_C	msvc/msvc-stdint/stdint.h	229;"	d
INT16_MAX	msvc/msvc-stdint/stdint.h	133;"	d
INT16_MIN	msvc/msvc-stdint/stdint.h	132;"	d
INT32_C	msvc/msvc-stdint/stdint.h	230;"	d
INT32_MAX	msvc/msvc-stdint/stdint.h	135;"	d
INT32_MIN	msvc/msvc-stdint/stdint.h	134;"	d
INT64_C	msvc/msvc-stdint/stdint.h	231;"	d
INT64_MAX	msvc/msvc-stdint/stdint.h	137;"	d
INT64_MIN	msvc/msvc-stdint/stdint.h	136;"	d
INT8_C	msvc/msvc-stdint/stdint.h	228;"	d
INT8_MAX	msvc/msvc-stdint/stdint.h	131;"	d
INT8_MIN	msvc/msvc-stdint/stdint.h	130;"	d
INTMAX_C	msvc/msvc-stdint/stdint.h	239;"	d
INTMAX_MAX	msvc/msvc-stdint/stdint.h	184;"	d
INTMAX_MIN	msvc/msvc-stdint/stdint.h	183;"	d
INTPTR_MAX	msvc/msvc-stdint/stdint.h	174;"	d
INTPTR_MAX	msvc/msvc-stdint/stdint.h	178;"	d
INTPTR_MIN	msvc/msvc-stdint/stdint.h	173;"	d
INTPTR_MIN	msvc/msvc-stdint/stdint.h	177;"	d
INT_FAST16_MAX	msvc/msvc-stdint/stdint.h	161;"	d
INT_FAST16_MIN	msvc/msvc-stdint/stdint.h	160;"	d
INT_FAST32_MAX	msvc/msvc-stdint/stdint.h	163;"	d
INT_FAST32_MIN	msvc/msvc-stdint/stdint.h	162;"	d
INT_FAST64_MAX	msvc/msvc-stdint/stdint.h	165;"	d
INT_FAST64_MIN	msvc/msvc-stdint/stdint.h	164;"	d
INT_FAST8_MAX	msvc/msvc-stdint/stdint.h	159;"	d
INT_FAST8_MIN	msvc/msvc-stdint/stdint.h	158;"	d
INT_LEAST16_MAX	msvc/msvc-stdint/stdint.h	147;"	d
INT_LEAST16_MIN	msvc/msvc-stdint/stdint.h	146;"	d
INT_LEAST32_MAX	msvc/msvc-stdint/stdint.h	149;"	d
INT_LEAST32_MIN	msvc/msvc-stdint/stdint.h	148;"	d
INT_LEAST64_MAX	msvc/msvc-stdint/stdint.h	151;"	d
INT_LEAST64_MIN	msvc/msvc-stdint/stdint.h	150;"	d
INT_LEAST8_MAX	msvc/msvc-stdint/stdint.h	145;"	d
INT_LEAST8_MIN	msvc/msvc-stdint/stdint.h	144;"	d
INVALID_FILE_ATTRIBUTES	file.c	34;"	d	file:
INVALID_FILE_ATTRIBUTES	file_path.c	44;"	d	file:
IOCTL_CDROM_AUTHENTICATE_DISK	frontend/platform/platform_xdk.h	278;"	d
IOCTL_IDE_PASS_THROUGH	frontend/platform/platform_xdk.h	275;"	d
IOCTL_SCSI_BASE	frontend/platform/platform_xdk.h	242;"	d
IOCTL_SCSI_FREE_DUMP_POINTERS	frontend/platform/platform_xdk.h	274;"	d
IOCTL_SCSI_GET_ADDRESS	frontend/platform/platform_xdk.h	271;"	d
IOCTL_SCSI_GET_CAPABILITIES	frontend/platform/platform_xdk.h	269;"	d
IOCTL_SCSI_GET_DUMP_POINTERS	frontend/platform/platform_xdk.h	273;"	d
IOCTL_SCSI_GET_INQUIRY_DATA	frontend/platform/platform_xdk.h	268;"	d
IOCTL_SCSI_MINIPORT	frontend/platform/platform_xdk.h	267;"	d
IOCTL_SCSI_PASS_THROUGH	frontend/platform/platform_xdk.h	266;"	d
IOCTL_SCSI_PASS_THROUGH_DIRECT	frontend/platform/platform_xdk.h	270;"	d
IOCTL_SCSI_RESCAN_BUS	frontend/platform/platform_xdk.h	272;"	d
IO_STATUS_BLOCK	frontend/platform/platform_xdk.h	/^} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;$/;"	t	typeref:struct:_IO_STATUS_BLOCK
IS_ELF	wii/app_booter/elf_abi.h	102;"	d
IS_PRESSED	apple/common/hidpad/wiimote.h	251;"	d
IconAdapter	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public IconAdapter(Context context, int resourceId) {$/;"	m	class:IconAdapter	access:public	signature:(Context context, int resourceId)
IconAdapter	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public IconAdapter(Context context, int resourceId, List<T> items) {$/;"	m	class:IconAdapter	access:public	signature:(Context context, int resourceId, List<T> items)
IconAdapter	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^public final class IconAdapter<T extends IconAdapterItem> extends ArrayAdapter<T> {$/;"	c	inherits:ArrayAdapter
IconAdapter.IconAdapter	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public IconAdapter(Context context, int resourceId) {$/;"	m	class:IconAdapter	access:public	signature:(Context context, int resourceId)
IconAdapter.IconAdapter	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public IconAdapter(Context context, int resourceId, List<T> items) {$/;"	m	class:IconAdapter	access:public	signature:(Context context, int resourceId, List<T> items)
IconAdapter.context	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	private final Context context;$/;"	f	class:IconAdapter	file:	access:private
IconAdapter.getView	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public View getView(int position, View convertView, ViewGroup parent) {$/;"	m	class:IconAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
IconAdapter.isEnabled	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public boolean isEnabled(int aPosition) {$/;"	m	class:IconAdapter	access:public	signature:(int aPosition)
IconAdapter.resourceId	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	private final int resourceId;$/;"	f	class:IconAdapter	file:	access:private
IconAdapterItem	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^interface IconAdapterItem {$/;"	i
IconAdapterItem.getIconDrawable	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public Drawable getIconDrawable();$/;"	m	interface:IconAdapterItem	access:public	signature:()
IconAdapterItem.getIconResourceId	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public int getIconResourceId();$/;"	m	interface:IconAdapterItem	access:public	signature:()
IconAdapterItem.getSubText	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public String getSubText();$/;"	m	interface:IconAdapterItem	access:public	signature:()
IconAdapterItem.getText	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public String getText();$/;"	m	interface:IconAdapterItem	access:public	signature:()
IconAdapterItem.isEnabled	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public boolean isEnabled();$/;"	m	interface:IconAdapterItem	access:public	signature:()
Ignored00	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored00[0x010];$/;"	m	struct:__anon54	access:public
Ignored01	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored01[0x1];$/;"	m	struct:__anon54	access:public
Ignored02	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored02[0x2];$/;"	m	struct:__anon54	access:public
Ignored03	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored03[0x7e4];$/;"	m	struct:__anon54	access:public
ImageSize	frontend/platform/platform_xdk.h	/^	ULONG ImageSize;$/;"	m	struct:_XBE_HEADER	access:public
Importance	frontend/platform/platform_xdk.h	/^	UCHAR Importance;$/;"	m	struct:_KDPC	access:public
Information	frontend/platform/platform_xdk.h	/^    ULONG_PTR Information;$/;"	m	struct:_IO_STATUS_BLOCK	access:public
InitFlags	frontend/platform/platform_xdk.h	/^	ULONG InitFlags;$/;"	m	struct:_XBE_HEADER	access:public
Initialized	xdk/xdk_resources.cpp	/^BOOL PackedResource::Initialized() const$/;"	f	class:PackedResource	signature:() const
Initialized	xdk/xdk_resources.h	/^      BOOL    Initialized() const;$/;"	p	class:PackedResource	access:public	signature:() const
InputPreferenceFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^public final class InputPreferenceFragment extends PreferenceListFragment implements OnPreferenceClickListener$/;"	c	inherits:PreferenceListFragment,OnPreferenceClickListener
InputPreferenceFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:InputPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
InputPreferenceFragment.onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:InputPreferenceFragment	access:public	signature:(Preference preference)
Inserted	frontend/platform/platform_xdk.h	/^    UCHAR Inserted;$/;"	m	struct:_DISPATCHER_HEADER	access:public
InstalledCoreInfoFragment	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^public final class InstalledCoreInfoFragment extends ListFragment$/;"	c	inherits:ListFragment
InstalledCoreInfoFragment.CoreInfoAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	private final class CoreInfoAdapter extends ArrayAdapter<InstalledCoreInfoItem>$/;"	c	class:InstalledCoreInfoFragment	inherits:ArrayAdapter	access:private
InstalledCoreInfoFragment.CoreInfoAdapter.CoreInfoAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		public CoreInfoAdapter(Context context, int resourceId)$/;"	m	class:InstalledCoreInfoFragment.CoreInfoAdapter	access:public	signature:(Context context, int resourceId)
InstalledCoreInfoFragment.CoreInfoAdapter.context	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		private final Context context;$/;"	f	class:InstalledCoreInfoFragment.CoreInfoAdapter	file:	access:private
InstalledCoreInfoFragment.CoreInfoAdapter.getView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent)$/;"	m	class:InstalledCoreInfoFragment.CoreInfoAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
InstalledCoreInfoFragment.CoreInfoAdapter.resourceId	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		private final int resourceId;$/;"	f	class:InstalledCoreInfoFragment.CoreInfoAdapter	file:	access:private
InstalledCoreInfoFragment.newInstance	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	public static InstalledCoreInfoFragment newInstance(ModuleWrapper core)$/;"	m	class:InstalledCoreInfoFragment	access:public	signature:(ModuleWrapper core)
InstalledCoreInfoFragment.onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoreInfoFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
InstalledCoreInfoItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public InstalledCoreInfoItem(String title, List<String> subtitle)$/;"	m	class:InstalledCoreInfoItem	access:public	signature:(String title, List<String> subtitle)
InstalledCoreInfoItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public InstalledCoreInfoItem(String title, String subtitle)$/;"	m	class:InstalledCoreInfoItem	access:public	signature:(String title, String subtitle)
InstalledCoreInfoItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^public final class InstalledCoreInfoItem$/;"	c
InstalledCoreInfoItem.InstalledCoreInfoItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public InstalledCoreInfoItem(String title, List<String> subtitle)$/;"	m	class:InstalledCoreInfoItem	access:public	signature:(String title, List<String> subtitle)
InstalledCoreInfoItem.InstalledCoreInfoItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public InstalledCoreInfoItem(String title, String subtitle)$/;"	m	class:InstalledCoreInfoItem	access:public	signature:(String title, String subtitle)
InstalledCoreInfoItem.getSubtitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public String getSubtitle()$/;"	m	class:InstalledCoreInfoItem	access:public	signature:()
InstalledCoreInfoItem.getTitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public String getTitle()$/;"	m	class:InstalledCoreInfoItem	access:public	signature:()
InstalledCoreInfoItem.subtitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	private final String subtitle;$/;"	f	class:InstalledCoreInfoItem	file:	access:private
InstalledCoreInfoItem.title	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	private final String title;$/;"	f	class:InstalledCoreInfoItem	file:	access:private
InstalledCoresAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public InstalledCoresAdapter(Context context, int resourceId, List<ModuleWrapper> items)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(Context context, int resourceId, List<ModuleWrapper> items)
InstalledCoresAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private final class InstalledCoresAdapter extends ArrayAdapter<ModuleWrapper>$/;"	c	class:InstalledCoresFragment	inherits:ArrayAdapter	access:private
InstalledCoresFragment	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^public final class InstalledCoresFragment extends ListFragment$/;"	c	inherits:ListFragment
InstalledCoresFragment.InstalledCoresAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private final class InstalledCoresAdapter extends ArrayAdapter<ModuleWrapper>$/;"	c	class:InstalledCoresFragment	inherits:ArrayAdapter	access:private
InstalledCoresFragment.InstalledCoresAdapter.InstalledCoresAdapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public InstalledCoresAdapter(Context context, int resourceId, List<ModuleWrapper> items)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(Context context, int resourceId, List<ModuleWrapper> items)
InstalledCoresFragment.InstalledCoresAdapter.context	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final Context context;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
InstalledCoresFragment.InstalledCoresAdapter.getItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public ModuleWrapper getItem(int i)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(int i)
InstalledCoresFragment.InstalledCoresAdapter.getView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
InstalledCoresFragment.InstalledCoresAdapter.items	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final List<ModuleWrapper> items;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
InstalledCoresFragment.InstalledCoresAdapter.resourceId	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final int resourceId;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
InstalledCoresFragment.OnCoreItemClickedListener	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	interface OnCoreItemClickedListener$/;"	i	class:InstalledCoresFragment	access:default
InstalledCoresFragment.OnCoreItemClickedListener.onCoreItemClicked	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		void onCoreItemClicked(int position, ModuleWrapper core);$/;"	m	interface:InstalledCoresFragment.OnCoreItemClickedListener	access:public	signature:(int position, ModuleWrapper core)
InstalledCoresFragment.adapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private InstalledCoresAdapter adapter;$/;"	f	class:InstalledCoresFragment	file:	access:private
InstalledCoresFragment.callback	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private OnCoreItemClickedListener callback;$/;"	f	class:InstalledCoresFragment	file:	access:private
InstalledCoresFragment.itemLongClickListener	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private final OnItemLongClickListener itemLongClickListener = new OnItemLongClickListener()$/;"	f	class:InstalledCoresFragment	file:	access:private
InstalledCoresFragment.onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoresFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
InstalledCoresFragment.onListItemClick	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	public void onListItemClick(ListView l, View v, int position, long id)$/;"	m	class:InstalledCoresFragment	access:public	signature:(ListView l, View v, int position, long id)
InstalledCoresManagerFragment	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^public class InstalledCoresManagerFragment extends Fragment implements InstalledCoresFragment.OnCoreItemClickedListener$/;"	c	inherits:Fragment,InstalledCoresFragment.OnCoreItemClickedListener
InstalledCoresManagerFragment.onCoreItemClicked	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^	public void onCoreItemClicked(int position, ModuleWrapper core)$/;"	m	class:InstalledCoresManagerFragment	access:public	signature:(int position, ModuleWrapper core)
InstalledCoresManagerFragment.onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoresManagerFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
InvalidDeviceRole	audio/xaudio-c/xaudio.h	/^   InvalidDeviceRole           = ~GlobalDefaultDevice$/;"	e	enum:XAUDIO2_DEVICE_ROLE
IoCreateSymbolicLink	frontend/platform/platform_xdk.h	/^IoCreateSymbolicLink($/;"	p	signature:( IN PANSI_STRING SymbolicLinkName, IN PANSI_STRING DeviceName )
IoDeleteSymbolicLink	frontend/platform/platform_xdk.h	/^IoDeleteSymbolicLink($/;"	p	signature:( IN PANSI_STRING SymbolicLinkName )
JACK_CFLAGS	config.mk	/^JACK_CFLAGS = $/;"	m
JACK_LIBS	config.mk	/^JACK_LIBS = $/;"	m
JNI_EXCEPTION	android/native/jni/jni_macros.h	22;"	d
JOYCONFIG_OBJ	Makefile	/^JOYCONFIG_OBJ = tools\/retroarch-joyconfig.o \\$/;"	m
Java_com_retroarch_browser_NativeInterface_extractArchiveTo	android/phoenix/jni/apk-extract/apk-extract.c	/^JNIEXPORT jboolean JNICALL Java_com_retroarch_browser_NativeInterface_extractArchiveTo($/;"	f	signature:( JNIEnv *env, jclass cls, jstring archive, jstring subdir, jstring dest)
Java_com_retroarch_browser_NativeInterface_extractArchiveTo	android/phoenix/jni/native/com_retroarch_browser_NativeInterface.h	/^JNIEXPORT jboolean JNICALL Java_com_retroarch_browser_NativeInterface_extractArchiveTo$/;"	p	signature:(JNIEnv *, jclass, jstring, jstring, jstring)
KCRITICAL_SECTION	frontend/platform/platform_xdk.h	/^} KCRITICAL_SECTION, *PKCRITICAL_SECTION;$/;"	t	typeref:struct:_KCRITICAL_SECTION
KDPC	frontend/platform/platform_xdk.h	/^} KDPC, *PKDPC;$/;"	t	typeref:struct:_KDPC
KEY	apple/common/hidpad/apple_ps3_pad.c	82;"	d	file:
KEY	apple/common/hidpad/apple_ps3_pad.c	91;"	d	file:
KEYBINDS_ACTION_GET_BIND_LABEL	driver.h	/^   KEYBINDS_ACTION_GET_BIND_LABEL,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_LAST	driver.h	/^   KEYBINDS_ACTION_LAST$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_NONE	driver.h	/^   KEYBINDS_ACTION_NONE = 0,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_SET_ANALOG_DPAD_LSTICK	driver.h	/^   KEYBINDS_ACTION_SET_ANALOG_DPAD_LSTICK,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_SET_ANALOG_DPAD_NONE	driver.h	/^   KEYBINDS_ACTION_SET_ANALOG_DPAD_NONE,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_SET_ANALOG_DPAD_RSTICK	driver.h	/^   KEYBINDS_ACTION_SET_ANALOG_DPAD_RSTICK,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_SET_DEFAULT_BIND	driver.h	/^   KEYBINDS_ACTION_SET_DEFAULT_BIND,$/;"	e	enum:keybind_set_id
KEYBINDS_ACTION_SET_DEFAULT_BINDS	driver.h	/^   KEYBINDS_ACTION_SET_DEFAULT_BINDS,$/;"	e	enum:keybind_set_id
KEYBOARD_LINE_H__	input/keyboard_line.h	17;"	d
KEYCODE_KEYCODE_H	apple/common/keycode.h	34;"	d
KEY_0	apple/common/keycode.h	/^    KEY_0 = 39,$/;"	e	enum:__anon157
KEY_1	apple/common/keycode.h	/^    KEY_1 = 30,$/;"	e	enum:__anon157
KEY_2	apple/common/keycode.h	/^    KEY_2 = 31,$/;"	e	enum:__anon157
KEY_3	apple/common/keycode.h	/^    KEY_3 = 32,$/;"	e	enum:__anon157
KEY_4	apple/common/keycode.h	/^    KEY_4 = 33,$/;"	e	enum:__anon157
KEY_5	apple/common/keycode.h	/^    KEY_5 = 34,$/;"	e	enum:__anon157
KEY_6	apple/common/keycode.h	/^    KEY_6 = 35,$/;"	e	enum:__anon157
KEY_7	apple/common/keycode.h	/^    KEY_7 = 36,$/;"	e	enum:__anon157
KEY_8	apple/common/keycode.h	/^    KEY_8 = 37,$/;"	e	enum:__anon157
KEY_9	apple/common/keycode.h	/^    KEY_9 = 38,$/;"	e	enum:__anon157
KEY_A	apple/common/keycode.h	/^    KEY_A = 4,$/;"	e	enum:__anon157
KEY_B	apple/common/keycode.h	/^    KEY_B = 5,$/;"	e	enum:__anon157
KEY_Backslash	apple/common/keycode.h	/^    KEY_Backslash = 49,$/;"	e	enum:__anon157
KEY_C	apple/common/keycode.h	/^    KEY_C = 6,$/;"	e	enum:__anon157
KEY_CapsLock	apple/common/keycode.h	/^    KEY_CapsLock = 57,$/;"	e	enum:__anon157
KEY_Comma	apple/common/keycode.h	/^    KEY_Comma = 54,$/;"	e	enum:__anon157
KEY_D	apple/common/keycode.h	/^    KEY_D = 7,$/;"	e	enum:__anon157
KEY_Delete	apple/common/keycode.h	/^    KEY_Delete = 42,$/;"	e	enum:__anon157
KEY_DeleteForward	apple/common/keycode.h	/^    KEY_DeleteForward = 76,$/;"	e	enum:__anon157
KEY_Down	apple/common/keycode.h	/^    KEY_Down = 81,$/;"	e	enum:__anon157
KEY_E	apple/common/keycode.h	/^    KEY_E = 8,$/;"	e	enum:__anon157
KEY_End	apple/common/keycode.h	/^    KEY_End = 77,$/;"	e	enum:__anon157
KEY_Enter	apple/common/keycode.h	/^    KEY_Enter = 40,$/;"	e	enum:__anon157
KEY_Equals	apple/common/keycode.h	/^    KEY_Equals = 46,$/;"	e	enum:__anon157
KEY_Escape	apple/common/keycode.h	/^    KEY_Escape = 41,$/;"	e	enum:__anon157
KEY_F	apple/common/keycode.h	/^    KEY_F = 9,$/;"	e	enum:__anon157
KEY_F1	apple/common/keycode.h	/^    KEY_F1 = 58,$/;"	e	enum:__anon157
KEY_F10	apple/common/keycode.h	/^    KEY_F10 = 67,$/;"	e	enum:__anon157
KEY_F11	apple/common/keycode.h	/^    KEY_F11 = 68,$/;"	e	enum:__anon157
KEY_F12	apple/common/keycode.h	/^    KEY_F12 = 69,$/;"	e	enum:__anon157
KEY_F13	apple/common/keycode.h	/^    KEY_F13 = 104,$/;"	e	enum:__anon157
KEY_F14	apple/common/keycode.h	/^    KEY_F14 = 105,$/;"	e	enum:__anon157
KEY_F15	apple/common/keycode.h	/^    KEY_F15 = 106,$/;"	e	enum:__anon157
KEY_F16	apple/common/keycode.h	/^    KEY_F16 = 107,$/;"	e	enum:__anon157
KEY_F17	apple/common/keycode.h	/^    KEY_F17 = 108,$/;"	e	enum:__anon157
KEY_F18	apple/common/keycode.h	/^    KEY_F18 = 109,$/;"	e	enum:__anon157
KEY_F19	apple/common/keycode.h	/^    KEY_F19 = 110,$/;"	e	enum:__anon157
KEY_F2	apple/common/keycode.h	/^    KEY_F2 = 59,$/;"	e	enum:__anon157
KEY_F20	apple/common/keycode.h	/^    KEY_F20 = 111,$/;"	e	enum:__anon157
KEY_F21	apple/common/keycode.h	/^    KEY_F21 = 112,$/;"	e	enum:__anon157
KEY_F22	apple/common/keycode.h	/^    KEY_F22 = 113,$/;"	e	enum:__anon157
KEY_F23	apple/common/keycode.h	/^    KEY_F23 = 114,$/;"	e	enum:__anon157
KEY_F24	apple/common/keycode.h	/^    KEY_F24 = 115,$/;"	e	enum:__anon157
KEY_F3	apple/common/keycode.h	/^    KEY_F3 = 60,$/;"	e	enum:__anon157
KEY_F4	apple/common/keycode.h	/^    KEY_F4 = 61,$/;"	e	enum:__anon157
KEY_F5	apple/common/keycode.h	/^    KEY_F5 = 62,$/;"	e	enum:__anon157
KEY_F6	apple/common/keycode.h	/^    KEY_F6 = 63,$/;"	e	enum:__anon157
KEY_F7	apple/common/keycode.h	/^    KEY_F7 = 64,$/;"	e	enum:__anon157
KEY_F8	apple/common/keycode.h	/^    KEY_F8 = 65,$/;"	e	enum:__anon157
KEY_F9	apple/common/keycode.h	/^    KEY_F9 = 66,$/;"	e	enum:__anon157
KEY_G	apple/common/keycode.h	/^    KEY_G = 10,$/;"	e	enum:__anon157
KEY_Grave	apple/common/keycode.h	/^    KEY_Grave = 53,$/;"	e	enum:__anon157
KEY_H	apple/common/keycode.h	/^    KEY_H = 11,$/;"	e	enum:__anon157
KEY_Help	apple/common/keycode.h	/^    KEY_Help = 117,$/;"	e	enum:__anon157
KEY_Home	apple/common/keycode.h	/^    KEY_Home = 74,$/;"	e	enum:__anon157
KEY_I	apple/common/keycode.h	/^    KEY_I = 12,$/;"	e	enum:__anon157
KEY_Insert	apple/common/keycode.h	/^    KEY_Insert = 73,$/;"	e	enum:__anon157
KEY_J	apple/common/keycode.h	/^    KEY_J = 13,$/;"	e	enum:__anon157
KEY_K	apple/common/keycode.h	/^    KEY_K = 14,$/;"	e	enum:__anon157
KEY_L	apple/common/keycode.h	/^    KEY_L = 15,$/;"	e	enum:__anon157
KEY_Left	apple/common/keycode.h	/^    KEY_Left = 80,$/;"	e	enum:__anon157
KEY_LeftAlt	apple/common/keycode.h	/^    KEY_LeftAlt = 226,$/;"	e	enum:__anon157
KEY_LeftBracket	apple/common/keycode.h	/^    KEY_LeftBracket = 47,$/;"	e	enum:__anon157
KEY_LeftControl	apple/common/keycode.h	/^    KEY_LeftControl = 224,$/;"	e	enum:__anon157
KEY_LeftGUI	apple/common/keycode.h	/^    KEY_LeftGUI = 227,$/;"	e	enum:__anon157
KEY_LeftShift	apple/common/keycode.h	/^    KEY_LeftShift = 225,$/;"	e	enum:__anon157
KEY_M	apple/common/keycode.h	/^    KEY_M = 16,$/;"	e	enum:__anon157
KEY_Menu	apple/common/keycode.h	/^    KEY_Menu = 118,$/;"	e	enum:__anon157
KEY_Minus	apple/common/keycode.h	/^    KEY_Minus = 45,$/;"	e	enum:__anon157
KEY_N	apple/common/keycode.h	/^    KEY_N = 17,$/;"	e	enum:__anon157
KEY_NonUSBackslash	apple/common/keycode.h	/^    KEY_NonUSBackslash = 100,$/;"	e	enum:__anon157
KEY_O	apple/common/keycode.h	/^    KEY_O = 18,$/;"	e	enum:__anon157
KEY_P	apple/common/keycode.h	/^    KEY_P = 19,$/;"	e	enum:__anon157
KEY_PageDown	apple/common/keycode.h	/^    KEY_PageDown = 78,$/;"	e	enum:__anon157
KEY_PageUp	apple/common/keycode.h	/^    KEY_PageUp = 75,$/;"	e	enum:__anon157
KEY_Pause	apple/common/keycode.h	/^    KEY_Pause = 72,$/;"	e	enum:__anon157
KEY_Period	apple/common/keycode.h	/^    KEY_Period = 55,$/;"	e	enum:__anon157
KEY_PrintScreen	apple/common/keycode.h	/^    KEY_PrintScreen = 70,$/;"	e	enum:__anon157
KEY_Q	apple/common/keycode.h	/^    KEY_Q = 20,$/;"	e	enum:__anon157
KEY_Quote	apple/common/keycode.h	/^    KEY_Quote = 52,$/;"	e	enum:__anon157
KEY_R	apple/common/keycode.h	/^    KEY_R = 21,$/;"	e	enum:__anon157
KEY_Right	apple/common/keycode.h	/^    KEY_Right = 79,$/;"	e	enum:__anon157
KEY_RightAlt	apple/common/keycode.h	/^    KEY_RightAlt = 230,$/;"	e	enum:__anon157
KEY_RightBracket	apple/common/keycode.h	/^    KEY_RightBracket = 48,$/;"	e	enum:__anon157
KEY_RightControl	apple/common/keycode.h	/^    KEY_RightControl = 228,$/;"	e	enum:__anon157
KEY_RightGUI	apple/common/keycode.h	/^    KEY_RightGUI = 231$/;"	e	enum:__anon157
KEY_RightShift	apple/common/keycode.h	/^    KEY_RightShift = 229,$/;"	e	enum:__anon157
KEY_S	apple/common/keycode.h	/^    KEY_S = 22,$/;"	e	enum:__anon157
KEY_ScrollLock	apple/common/keycode.h	/^    KEY_ScrollLock = 71,$/;"	e	enum:__anon157
KEY_Semicolon	apple/common/keycode.h	/^    KEY_Semicolon = 51,$/;"	e	enum:__anon157
KEY_Slash	apple/common/keycode.h	/^    KEY_Slash = 56,$/;"	e	enum:__anon157
KEY_Space	apple/common/keycode.h	/^    KEY_Space = 44,$/;"	e	enum:__anon157
KEY_T	apple/common/keycode.h	/^    KEY_T = 23,$/;"	e	enum:__anon157
KEY_Tab	apple/common/keycode.h	/^    KEY_Tab = 43,$/;"	e	enum:__anon157
KEY_U	apple/common/keycode.h	/^    KEY_U = 24,$/;"	e	enum:__anon157
KEY_Up	apple/common/keycode.h	/^    KEY_Up = 82,$/;"	e	enum:__anon157
KEY_V	apple/common/keycode.h	/^    KEY_V = 25,$/;"	e	enum:__anon157
KEY_W	apple/common/keycode.h	/^    KEY_W = 26,$/;"	e	enum:__anon157
KEY_X	apple/common/keycode.h	/^    KEY_X = 27,$/;"	e	enum:__anon157
KEY_Y	apple/common/keycode.h	/^    KEY_Y = 28,$/;"	e	enum:__anon157
KEY_Z	apple/common/keycode.h	/^    KEY_Z = 29,$/;"	e	enum:__anon157
KIRQL	frontend/platform/platform_xdk.h	/^typedef UCHAR KIRQL, *PKIRQL;$/;"	t
KP_0	apple/common/keycode.h	/^    KP_0 = 98,$/;"	e	enum:__anon157
KP_1	apple/common/keycode.h	/^    KP_1 = 89,$/;"	e	enum:__anon157
KP_2	apple/common/keycode.h	/^    KP_2 = 90,$/;"	e	enum:__anon157
KP_3	apple/common/keycode.h	/^    KP_3 = 91,$/;"	e	enum:__anon157
KP_4	apple/common/keycode.h	/^    KP_4 = 92,$/;"	e	enum:__anon157
KP_5	apple/common/keycode.h	/^    KP_5 = 93,$/;"	e	enum:__anon157
KP_6	apple/common/keycode.h	/^    KP_6 = 94,$/;"	e	enum:__anon157
KP_7	apple/common/keycode.h	/^    KP_7 = 95,$/;"	e	enum:__anon157
KP_8	apple/common/keycode.h	/^    KP_8 = 96,$/;"	e	enum:__anon157
KP_9	apple/common/keycode.h	/^    KP_9 = 97,$/;"	e	enum:__anon157
KP_Add	apple/common/keycode.h	/^    KP_Add = 87,$/;"	e	enum:__anon157
KP_Divide	apple/common/keycode.h	/^    KP_Divide = 84,$/;"	e	enum:__anon157
KP_Enter	apple/common/keycode.h	/^    KP_Enter = 88,$/;"	e	enum:__anon157
KP_Equals	apple/common/keycode.h	/^    KP_Equals = 103,$/;"	e	enum:__anon157
KP_Multiply	apple/common/keycode.h	/^    KP_Multiply = 85,$/;"	e	enum:__anon157
KP_NumLock	apple/common/keycode.h	/^    KP_NumLock = 83,$/;"	e	enum:__anon157
KP_Point	apple/common/keycode.h	/^    KP_Point = 99,$/;"	e	enum:__anon157
KP_Subtract	apple/common/keycode.h	/^    KP_Subtract = 86,$/;"	e	enum:__anon157
KTHREAD	frontend/platform/platform_xdk.h	/^} KTHREAD, *PKTHREAD;$/;"	t	typeref:struct:_KTHREAD
KTIMER	frontend/platform/platform_xdk.h	/^} KTIMER, *PKTIMER;$/;"	t	typeref:struct:_KTIMER
KernelLibrary	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *KernelLibrary;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
KernelThunkTable	frontend/platform/platform_xdk.h	/^	ULONG_PTR *KernelThunkTable;$/;"	m	struct:_XBE_HEADER	access:public
KeyBindEditText	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public KeyBindEditText(Context context, AttributeSet attrs) {$/;"	m	class:KeyBindEditText	access:public	signature:(Context context, AttributeSet attrs)
KeyBindEditText	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^final class KeyBindEditText extends EditText$/;"	c	inherits:EditText
KeyBindEditText.KeyBindEditText	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public KeyBindEditText(Context context, AttributeSet attrs) {$/;"	m	class:KeyBindEditText	access:public	signature:(Context context, AttributeSet attrs)
KeyBindEditText.onKeyDown	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKeyDown(int keyCode, KeyEvent event)$/;"	m	class:KeyBindEditText	access:public	signature:(int keyCode, KeyEvent event)
KeyBindEditText.onKeyPreIme	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKeyPreIme(int keyCode, KeyEvent event)$/;"	m	class:KeyBindEditText	access:public	signature:(int keyCode, KeyEvent event)
KeyBindEditText.pref	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private KeyBindPreference pref;$/;"	f	class:KeyBindEditText	file:	access:private
KeyBindEditText.setBoundPreference	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public void setBoundPreference(KeyBindPreference pref)$/;"	m	class:KeyBindEditText	access:public	signature:(KeyBindPreference pref)
KeyBindPreference	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public KeyBindPreference(Context context, AttributeSet attrs) {$/;"	m	class:KeyBindPreference	access:public	signature:(Context context, AttributeSet attrs)
KeyBindPreference	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^final class KeyBindPreference extends DialogPreference implements View.OnKeyListener, AdapterView.OnItemClickListener, LayoutInflater.Factory {$/;"	c	inherits:DialogPreference,View.OnKeyListener,AdapterView.OnItemClickListener,LayoutInflater.Factory
KeyBindPreference.DEFAULT_KEYCODE	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private final int DEFAULT_KEYCODE = 0;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.KeyBindPreference	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public KeyBindPreference(Context context, AttributeSet attrs) {$/;"	m	class:KeyBindPreference	access:public	signature:(Context context, AttributeSet attrs)
KeyBindPreference.context	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private final Context context;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.getSummary	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public CharSequence getSummary() {$/;"	m	class:KeyBindPreference	access:public	signature:()
KeyBindPreference.grabKeyCode	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private boolean grabKeyCode = false;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.keyText	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private KeyBindEditText keyText;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.key_bind_code	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private int key_bind_code;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.key_labels	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private String[] key_labels;$/;"	f	class:KeyBindPreference	file:	access:private
KeyBindPreference.onCreateDialogView	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	protected View onCreateDialogView()$/;"	m	class:KeyBindPreference	access:protected	signature:()
KeyBindPreference.onCreateView	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public View onCreateView(String name, Context context, AttributeSet attrs) {$/;"	m	class:KeyBindPreference	access:public	signature:(String name, Context context, AttributeSet attrs)
KeyBindPreference.onDialogClosed	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	protected void onDialogClosed(boolean positiveResult) {$/;"	m	class:KeyBindPreference	access:protected	signature:(boolean positiveResult)
KeyBindPreference.onItemClick	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {$/;"	m	class:KeyBindPreference	access:public	signature:(AdapterView<?> parent, View view, int position, long id)
KeyBindPreference.onKey	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKey(View v, int keyCode, KeyEvent event) {$/;"	m	class:KeyBindPreference	access:public	signature:(View v, int keyCode, KeyEvent event)
KeyBindPreference.setKey	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private void setKey(int keyCode, boolean force)$/;"	m	class:KeyBindPreference	file:	access:private	signature:(int keyCode, boolean force)
L2CAP_COMMAND_REJECT_REASON_COMMAND_NOT_UNDERSTOOD	apple/iOS/bluetooth/btstack/hci_cmds.h	207;"	d
L2CAP_COMMAND_REJECT_REASON_INVALID_CID_IN_REQUEST	apple/iOS/bluetooth/btstack/hci_cmds.h	209;"	d
L2CAP_COMMAND_REJECT_REASON_SIGNALING_MTU_EXCEEDED	apple/iOS/bluetooth/btstack/hci_cmds.h	208;"	d
L2CAP_CONFIG_RESPONSE_RESULT_REJECTED	apple/iOS/bluetooth/btstack/hci_cmds.h	219;"	d
L2CAP_CONFIG_RESPONSE_RESULT_SUCCESSFUL	apple/iOS/bluetooth/btstack/hci_cmds.h	217;"	d
L2CAP_CONFIG_RESPONSE_RESULT_UNACCEPTABLE_PARAMS	apple/iOS/bluetooth/btstack/hci_cmds.h	218;"	d
L2CAP_CONFIG_RESPONSE_RESULT_UNKNOWN_OPTIONS	apple/iOS/bluetooth/btstack/hci_cmds.h	220;"	d
L2CAP_CONNECTION_RESPONSE_RESULT_PENDING	apple/iOS/bluetooth/btstack/hci_cmds.h	212;"	d
L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_PSM	apple/iOS/bluetooth/btstack/hci_cmds.h	213;"	d
L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_RESOURCES	apple/iOS/bluetooth/btstack/hci_cmds.h	215;"	d
L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_SECURITY	apple/iOS/bluetooth/btstack/hci_cmds.h	214;"	d
L2CAP_CONNECTION_RESPONSE_RESULT_SUCCESSFUL	apple/iOS/bluetooth/btstack/hci_cmds.h	211;"	d
L2CAP_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	58;"	d
L2CAP_EVENT_CHANNEL_CLOSED	apple/iOS/bluetooth/btstack/hci_cmds.h	152;"	d
L2CAP_EVENT_CHANNEL_OPENED	apple/iOS/bluetooth/btstack/hci_cmds.h	149;"	d
L2CAP_EVENT_CREDITS	apple/iOS/bluetooth/btstack/hci_cmds.h	161;"	d
L2CAP_EVENT_INCOMING_CONNECTION	apple/iOS/bluetooth/btstack/hci_cmds.h	155;"	d
L2CAP_EVENT_SERVICE_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	164;"	d
L2CAP_EVENT_TIMEOUT_CHECK	apple/iOS/bluetooth/btstack/hci_cmds.h	158;"	d
L2CAP_SERVICE_ALREADY_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	221;"	d
LAST_ASPECT_RATIO	gfx/gfx_common.h	89;"	d
LAST_KEYCODE	android/native/jni/input_autodetect.h	99;"	d
LAST_ORIENTATION	gfx/gfx_common.h	100;"	d
LATENCY	audio/librsound.c	436;"	d	file:
LCD_FUNC	gfx/context/sunxi_disp_ioctl.h	/^typedef void (*LCD_FUNC) (__u32 sel);$/;"	t
LD	Makefile	/^   LD = $(CC)$/;"	m
LD	Makefile	/^   LD = $(CXX)$/;"	m
LD	wii/app_booter/Makefile	/^LD = $(DEVKITPPC)\/bin\/powerpc-eabi-ld$(EXE_EXT)$/;"	m
LDFLAGS	config.mk	/^LDFLAGS = $/;"	m
LDFLAGS	wii/app_booter/Makefile	/^LDFLAGS := -T link.ld$/;"	m
LE	ps3/ps3py/pkg.py	/^	LE = '<'$/;"	v	class:Struct
LIB	dist-scripts/xdk1_env.bat	/^@set LIB=%MSVCDir%\\ATLMFC\\LIB;%MSVCDir%\\LIB;%MSVCDir%\\PlatformSDK\\lib;%XDK%\\lib;%XDK%\\xbox\\lib;%LIB%$/;"	v
LIB	dist-scripts/xdk1_env_bigstack.bat	/^@set LIB=%MSVCDir%\\ATLMFC\\LIB;%MSVCDir%\\LIB;%MSVCDir%\\PlatformSDK\\lib;%XDK%\\lib;%XDK%\\xbox\\lib;%LIB%$/;"	v
LIB	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\LIB" set LIB=%VCINSTALLDIR%ATLMFC\\LIB;%LIB%$/;"	v
LIB	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%LIB" set LIB=%VCINSTALLDIR%LIB;%LIB%$/;"	v
LIBDIRS	wii/app_booter/Makefile	/^LIBDIRS := -L$(DEVKITPRO)\/libogc\/lib\/wii$/;"	m
LIBFREEVEC_SCALAR_MACROS_INC	ps3/altivec_mem.h	102;"	d
LIBFREEVEC_SCALAR_MACROS_INC	ps3/altivec_mem.h	232;"	d
LIBFREEVEC_SIMD_MACROS_INC	ps3/altivec_mem.h	62;"	d
LIBPATH	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\LIB" set LIBPATH=%VCINSTALLDIR%ATLMFC\\LIB;%LIBPATH%$/;"	v
LIBPATH	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%LIB" set LIBPATH=%VCINSTALLDIR%LIB;%LIBPATH%$/;"	v
LIBPATH	dist-scripts/xdk360_env.bat	/^@set LIBPATH=%FrameworkDir%%Framework35Version%;%LIBPATH%$/;"	v
LIBPATH	dist-scripts/xdk360_env.bat	/^@set LIBPATH=%FrameworkDir%%FrameworkVersion%;%LIBPATH%$/;"	v
LIBRARY_DIRS	config.mk	/^LIBRARY_DIRS = $/;"	m
LIBRETRO_H__	libretro.h	24;"	d
LIBRETRO_PRIVATE_H__	libretro_private.h	24;"	d
LIBS	Makefile	/^	LIBS = -lm$/;"	m
LIBXML2_CFLAGS	config.mk	/^LIBXML2_CFLAGS = $/;"	m
LIBXML2_LIBS	config.mk	/^LIBXML2_LIBS = $/;"	m
LIBXML_TEST_VERSION	compat/rxml/rxml.h	64;"	d
LIGHTBLUE	gfx/gfx_common.h	115;"	d
LIGHTORANGE	gfx/gfx_common.h	116;"	d
LIMA_Surface	gfx/lima_gfx.c	/^typedef struct LIMA_Surface {$/;"	s	file:
LIMA_Surface	gfx/lima_gfx.c	/^} LIMA_Surface;$/;"	t	typeref:struct:LIMA_Surface	file:
LIMA_Surface::h	gfx/lima_gfx.c	/^	int w, h;$/;"	m	struct:LIMA_Surface	file:	access:public
LIMA_Surface::pitch	gfx/lima_gfx.c	/^	int pitch;$/;"	m	struct:LIMA_Surface	file:	access:public
LIMA_Surface::pixels	gfx/lima_gfx.c	/^	void *pixels;$/;"	m	struct:LIMA_Surface	file:	access:public
LIMA_Surface::w	gfx/lima_gfx.c	/^	int w, h;$/;"	m	struct:LIMA_Surface	file:	access:public
LIMA_TEXEL_FORMAT_BGR_565	gfx/lima_gfx.c	32;"	d	file:
LIMA_TEXEL_FORMAT_RGBA_8888	gfx/lima_gfx.c	33;"	d	file:
LINK_KEY_LEN	apple/iOS/bluetooth/btstack/utils.h	63;"	d
LOAD_STATE	apple/common/apple_export.h	/^   LOAD_STATE = 2,$/;"	e	enum:basic_event_t
LOCAL_ARM_MODE	android/native/jni/Android.mk	/^   LOCAL_ARM_MODE := arm$/;"	m
LOCAL_ARM_MODE	android/phoenix/jni/Android.mk	/^LOCAL_ARM_MODE := arm$/;"	m
LOCAL_ARM_MODE	libretro-test-gl/jni/Android.mk	/^LOCAL_ARM_MODE := arm$/;"	m
LOCAL_LDLIBS	android/native/jni/Android.mk	/^LOCAL_LDLIBS	:= -L$(SYSROOT)\/usr\/lib -landroid -lEGL -lGLESv2 $(LOGGER_LDLIBS) -ldl$/;"	m
LOCAL_LDLIBS	android/phoenix/jni/Android.mk	/^LOCAL_LDLIBS := -llog -lz$/;"	m
LOCAL_MODULE	android/native/jni/Android.mk	/^LOCAL_MODULE := retroarch-activity$/;"	m
LOCAL_MODULE	android/phoenix/jni/Android.mk	/^LOCAL_MODULE := retroarch-jni$/;"	m
LOCAL_MODULE	libretro-test-gl/jni/Android.mk	/^LOCAL_MODULE := retro-test-gl$/;"	m
LOCAL_MODULE	libretro-test/jni/Android.mk	/^LOCAL_MODULE    := retro$/;"	m
LOCAL_PATH	android/native/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	android/phoenix/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libretro-test-gl/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libretro-test/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	android/phoenix/jni/Android.mk	/^LOCAL_SRC_FILES := apk-extract\/apk-extract.c $(RARCH_DIR)\/file_extract.c $(RARCH_DIR)\/file_path.c $(RARCH_DIR)\/compat\/compat.c$/;"	m
LOCATION_ANDROID	config.def.h	/^   LOCATION_ANDROID,$/;"	e	enum:__anon107
LOCATION_APPLE	config.def.h	/^   LOCATION_APPLE,$/;"	e	enum:__anon107
LOCATION_DEFAULT_DRIVER	config.def.h	213;"	d
LOCATION_DEFAULT_DRIVER	config.def.h	215;"	d
LOG	tools/retrolaunch/log.h	3;"	d
LOGGER_LDLIBS	android/native/jni/Android.mk	/^   LOGGER_LDLIBS := -llog$/;"	m
LOG_DEBUG	tools/retrolaunch/log.h	4;"	d
LOG_FILE	retroarch_logger.h	27;"	d
LOG_FILE	retroarch_logger.h	29;"	d
LOG_FILE	retroarch_logger.h	31;"	d
LOG_INFO	tools/retrolaunch/log.h	6;"	d
LOG_MESSAGE_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	70;"	d
LOG_WARN	tools/retrolaunch/log.h	5;"	d
LOOPER_ID_INPUT	frontend/platform/platform_android.h	/^   LOOPER_ID_INPUT = 2,$/;"	e	enum:__anon10
LOOPER_ID_INPUT_MSG	frontend/platform/platform_android.h	/^   LOOPER_ID_INPUT_MSG = 4,$/;"	e	enum:__anon10
LOOPER_ID_MAIN	frontend/platform/platform_android.h	/^   LOOPER_ID_MAIN = 1,$/;"	e	enum:__anon10
LOOPER_ID_USER	frontend/platform/platform_android.h	/^   LOOPER_ID_USER = 3,$/;"	e	enum:__anon10
LOW_LEVEL	frontend/platform/platform_xdk.h	372;"	d
LPDIRECT3D	xdk/xdk_defines.h	29;"	d
LPDIRECT3D	xdk/xdk_defines.h	67;"	d
LPDIRECT3DCUBETEXTURE	xdk/xdk_defines.h	25;"	d
LPDIRECT3DCUBETEXTURE	xdk/xdk_defines.h	70;"	d
LPDIRECT3DDEVICE	xdk/xdk_defines.h	30;"	d
LPDIRECT3DDEVICE	xdk/xdk_defines.h	68;"	d
LPDIRECT3DRESOURCE	xdk/xdk_defines.h	23;"	d
LPDIRECT3DRESOURCE	xdk/xdk_defines.h	28;"	d
LPDIRECT3DRESOURCE	xdk/xdk_defines.h	74;"	d
LPDIRECT3DSURFACE	xdk/xdk_defines.h	31;"	d
LPDIRECT3DSURFACE	xdk/xdk_defines.h	71;"	d
LPDIRECT3DTEXTURE	xdk/xdk_defines.h	24;"	d
LPDIRECT3DTEXTURE	xdk/xdk_defines.h	69;"	d
LPDIRECT3DVERTEXBUFFER	xdk/xdk_defines.h	27;"	d
LPDIRECT3DVERTEXBUFFER	xdk/xdk_defines.h	73;"	d
LPDIRECT3DVOLUMETEXTURE	xdk/xdk_defines.h	26;"	d
LPDIRECT3DVOLUMETEXTURE	xdk/xdk_defines.h	72;"	d
LRELEASE	blackberry-qnx/bb10/translations/Makefile	/^LRELEASE      = $(QNX_HOST)\/usr\/bin\/lrelease$/;"	m
LSB16	audio/librsound.c	358;"	d	file:
LSB32	audio/librsound.c	359;"	d	file:
LSL32	hash.c	51;"	d	file:
LSR32	hash.c	52;"	d	file:
LUPDATE	blackberry-qnx/bb10/translations/Makefile	/^LUPDATE       = $(QNX_HOST)\/usr\/bin\/lupdate$/;"	m
LanKey	frontend/platform/platform_xdk.h	/^	UCHAR LanKey[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
LastFPConstantModification	ps3/rgl/include/RGL/Types.h	/^      unsigned int	LastFPConstantModification;$/;"	m	struct:RGLcontext	access:public
Length	frontend/platform/platform_xdk.h	/^    USHORT Length;$/;"	m	struct:_STRING	access:public
Length	frontend/platform/platform_xdk.h	/^    \/*000*\/ USHORT Length;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
Length_High	tools/retrolaunch/sha1.h	/^    unsigned Length_High;       \/* Message length in bits           *\/$/;"	m	struct:SHA1Context	access:public
Length_Low	tools/retrolaunch/sha1.h	/^    unsigned Length_Low;        \/* Message length in bits           *\/$/;"	m	struct:SHA1Context	access:public
Libraries	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *Libraries;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
LibraryRWebAudio.$RA__deps	emscripten/library_rwebaudio.js	/^   $RA__deps: ['$Browser', 'usleep'],$/;"	p
LibraryRWebCam.$RWC	emscripten/library_rwebcam.js	/^   $RWC: {$/;"	p
LibraryRWebInput.$RI__deps	emscripten/library_rwebinput.js	/^   $RI__deps: ['$Browser'],$/;"	p
LinkInfo	gfx/d3d9/render_chain.hpp	/^struct LinkInfo$/;"	s
LinkInfo::pass	gfx/d3d9/render_chain.hpp	/^   struct gfx_shader_pass *pass;$/;"	m	struct:LinkInfo	typeref:struct:LinkInfo::gfx_shader_pass	access:public
LinkInfo::tex_h	gfx/d3d9/render_chain.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:LinkInfo	access:public
LinkInfo::tex_w	gfx/d3d9/render_chain.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:LinkInfo	access:public
Lock	frontend/platform/platform_xdk.h	/^	PULONG_PTR Lock;$/;"	m	struct:_KDPC	access:public
LockCount	frontend/platform/platform_xdk.h	/^	LONG LockCount;$/;"	m	struct:_KCRITICAL_SECTION	access:public
LogicOp	ps3/rgl/include/RGL/Types.h	/^      GLenum			LogicOp;$/;"	m	struct:RGLcontext	access:public
LogoBitmap	frontend/platform/platform_xdk.h	/^	PVOID LogoBitmap;$/;"	m	struct:_XBE_HEADER	access:public
LogoBitmapSize	frontend/platform/platform_xdk.h	/^	ULONG LogoBitmapSize;$/;"	m	struct:_XBE_HEADER	access:public
LoopBegin	audio/xaudio-c/xaudio.h	/^   UINT32 LoopBegin;$/;"	m	struct:XAUDIO2_BUFFER	access:public
LoopCount	audio/xaudio-c/xaudio.h	/^   UINT32 LoopCount;$/;"	m	struct:XAUDIO2_BUFFER	access:public
LoopLength	audio/xaudio-c/xaudio.h	/^   UINT32 LoopLength;$/;"	m	struct:XAUDIO2_BUFFER	access:public
LowPassFilter	audio/xaudio-c/xaudio.h	/^   LowPassFilter,$/;"	e	enum:XAUDIO2_FILTER_TYPE
Lun	frontend/platform/platform_xdk.h	/^    \/*005*\/ UCHAR Lun;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
MACHDEP	wii/app_booter/Makefile	/^MACHDEP := -DHW_RVL -DGEKKO -mno-eabi -mno-sdata -mcpu=750$/;"	m
MAC_NATIVE_TO_HID	apple/common/apple_input.c	/^const unsigned char MAC_NATIVE_TO_HID[128] = {$/;"	v
MAGIC_INDEX	movie.h	25;"	d
MAGIC_LEN	tools/retrolaunch/cd_detect.c	16;"	d	file:
MAGIC_NUMBERS	tools/retrolaunch/cd_detect.c	/^static struct MagicEntry MAGIC_NUMBERS[] = {$/;"	v	typeref:struct:MagicEntry	file:
MAKEINC	ps3/altivec_mem.h	60;"	d
MAKESTR	ps3/altivec_mem.h	58;"	d
MALLOC_MEM2	wii/mem2_manager.c	/^u32 MALLOC_MEM2 = 0;$/;"	v
MAN_DIR	config.mk	/^MAN_DIR = \/usr\/local\/share\/man\/man1$/;"	m
MATH_MATRIX_3X3_H__	gfx/math/matrix_3x3.h	18;"	d
MATH_MATRIX_H__	gfx/math/matrix.h	17;"	d
MAT_ELEM	gfx/math/matrix.h	26;"	d
MAT_ELEM_3X3	gfx/math/matrix_3x3.h	27;"	d
MAX	ps3/rgl/include/RGL/Utils.h	21;"	d
MAXIMUM_PATH	console/rarch_console.h	21;"	d
MAXIMUM_PATH	console/rarch_console.h	23;"	d
MAX_ARGS	retroarch.c	3216;"	d	file:
MAX_AXES	tools/retroarch-joyconfig.c	67;"	d	file:
MAX_BUFFER	xenon/xenon360_audio.c	25;"	d	file:
MAX_BUFFERS	audio/xaudio-c/xaudio-c.cpp	26;"	d	file:
MAX_BUFFERS_MASK	audio/xaudio-c/xaudio-c.cpp	27;"	d	file:
MAX_BUTTONS	tools/retroarch-joyconfig.c	66;"	d	file:
MAX_CHUNK_SIZE	audio/librsound.c	459;"	d	file:
MAX_COUNTERS	performance.c	71;"	d	file:
MAX_DISPLAYED_ENTRIES	frontend/frontend_xenon.c	53;"	d	file:
MAX_EGLIMAGE_TEXTURES	gfx/gfx_context.h	26;"	d
MAX_FENCES	gfx/gl_common.h	257;"	d
MAX_FILES	frontend/frontend_xenon.c	51;"	d	file:
MAX_FRAMES	record/ffemu.c	555;"	d	file:
MAX_GAMMA_SETTING	frontend/menu/menu_settings.c	39;"	d	file:
MAX_GAMMA_SETTING	frontend/menu/menu_settings.c	67;"	d	file:
MAX_HATS	tools/retroarch-joyconfig.c	68;"	d	file:
MAX_HEIGHT	libretro-test-gl/libretro-test.c	17;"	d	file:
MAX_HEIGHT	libretro-test-gl/libretro-test.c	20;"	d	file:
MAX_INCLUDE_DEPTH	conf/config_file.c	45;"	d	file:
MAX_KEYS	apple/common/apple_input.h	23;"	d
MAX_LUT_TEXTURES	gfx/shader_cg.c	105;"	d	file:
MAX_MEM_LEVEL	deps/miniz/zlib.h	396;"	d
MAX_MICE	ps3/ps3_input.c	34;"	d	file:
MAX_MONITORS	gfx/context/wgl_ctx.c	34;"	d	file:
MAX_MONITORS	gfx/d3d9/d3d9.cpp	51;"	d	file:
MAX_PACKET_SIZE	audio/librsound.c	605;"	d	file:
MAX_PADS	android/native/jni/input_autodetect.h	21;"	d
MAX_PADS	blackberry-qnx/frontend_qnx.h	4;"	d
MAX_PADS	gx/gx_input.c	39;"	d	file:
MAX_PADS	ps3/ps3_input.c	39;"	d	file:
MAX_PADS	psp/psp_input.c	38;"	d	file:
MAX_PADS	xdk/xdk_xinput_input.c	24;"	d	file:
MAX_PADS	xenon/xenon360_input.c	27;"	d	file:
MAX_PLAYERS	general.h	88;"	d
MAX_RETRIES	netplay.c	840;"	d	file:
MAX_ROMS	file.c	377;"	d	file:
MAX_SCALING_FACTOR	gfx/gfx_common.h	53;"	d
MAX_SCALING_FACTOR	gfx/gfx_common.h	55;"	d
MAX_SHADERS	gfx/gl_common.h	136;"	d
MAX_SPECTATORS	netplay.c	59;"	d	file:
MAX_TCP_BUFSIZE	audio/librsound.c	479;"	d	file:
MAX_TEXTURES	gfx/gl_common.h	137;"	d
MAX_TOKEN_LEN	tools/retrolaunch/parser.h	7;"	d
MAX_TOUCH	android/native/jni/input_android.c	29;"	d	file:
MAX_TOUCH	blackberry-qnx/qnx_input.c	26;"	d	file:
MAX_TOUCH	blackberry-qnx/qnx_input.c	28;"	d	file:
MAX_TOUCHES	apple/common/apple_input.h	22;"	d
MAX_VARIABLES	gfx/d3d9/render_chain.hpp	81;"	d
MAX_VARIABLES	gfx/shader_cg.c	106;"	d	file:
MAX_WBITS	deps/miniz/zlib.h	395;"	d
MAX_WIDTH	libretro-test-gl/libretro-test.c	16;"	d	file:
MAX_WIDTH	libretro-test-gl/libretro-test.c	19;"	d	file:
MEASURE_FRAME_TIME_SAMPLES_COUNT	general.h	480;"	d
MENU_COMMON_H__	frontend/menu/menu_common.h	18;"	d
MENU_TEXTURE_FULLSCREEN	frontend/menu/menu_common.h	31;"	d
MENU_TEXTURE_FULLSCREEN	frontend/menu/menu_common.h	33;"	d
MENU_XUI_ITEM_ASPECT_RATIO	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_ASPECT_RATIO,$/;"	e	enum:__anon18	file:
MENU_XUI_ITEM_AUDIO_MUTE_AUDIO	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_AUDIO_MUTE_AUDIO = 0,$/;"	e	enum:__anon19	file:
MENU_XUI_ITEM_GAMMA_CORRECTION_ENABLED	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_GAMMA_CORRECTION_ENABLED,$/;"	e	enum:__anon18	file:
MENU_XUI_ITEM_HW_TEXTURE_FILTER	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_HW_TEXTURE_FILTER = 0,$/;"	e	enum:__anon18	file:
MENU_XUI_ITEM_ORIENTATION	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_ORIENTATION,$/;"	e	enum:__anon18	file:
MENU_XUI_ITEM_RESIZE_MODE	frontend/menu/rmenu_xui.cpp	/^   MENU_XUI_ITEM_RESIZE_MODE,$/;"	e	enum:__anon18	file:
MERGE_SHIFTED_WORDS	ps3/altivec_mem.h	74;"	d
MERGE_SHIFTED_WORDS	ps3/altivec_mem.h	76;"	d
METHOD_BUFFERED	frontend/platform/platform_xdk.h	253;"	d
METHOD_IN_DIRECT	frontend/platform/platform_xdk.h	254;"	d
METHOD_NEITHER	frontend/platform/platform_xdk.h	256;"	d
METHOD_OUT_DIRECT	frontend/platform/platform_xdk.h	255;"	d
MIN	ps3/altivec_mem.h	68;"	d
MIN	ps3/rgl/include/RGL/Utils.h	22;"	d
MINIZ_HAS_64BIT_REGISTERS	deps/miniz/zlib.h	167;"	d
MINIZ_HEADER_INCLUDED	deps/miniz/zlib.h	124;"	d
MINIZ_LITTLE_ENDIAN	deps/miniz/zlib.h	157;"	d
MINIZ_NO_TIME	deps/miniz/zlib.h	128;"	d
MINIZ_USE_UNALIGNED_LOADS_AND_STORES	deps/miniz/zlib.h	162;"	d
MINIZ_X86_OR_X64_CPU	deps/miniz/zlib.h	152;"	d
MIN_SCALING_FACTOR	gfx/gfx_common.h	50;"	d
MODESTRUC	ps3/rgl/src/include/rgl-typedefs.h	/^} MODESTRUC;$/;"	t	typeref:struct:_tagMODESTRUC
MODE_AUDIO_CUSTOM_BGM_ENABLE	general.h	/^   MODE_AUDIO_CUSTOM_BGM_ENABLE,$/;"	e	enum:menu_enums
MODE_EXIT	general.h	/^   MODE_EXIT,$/;"	e	enum:menu_enums
MODE_EXITSPAWN	general.h	/^   MODE_EXITSPAWN,$/;"	e	enum:menu_enums
MODE_EXITSPAWN_MULTIMAN	general.h	/^   MODE_EXITSPAWN_MULTIMAN,$/;"	e	enum:menu_enums
MODE_EXITSPAWN_START_GAME	general.h	/^   MODE_EXITSPAWN_START_GAME,$/;"	e	enum:menu_enums
MODE_EXTLAUNCH_MULTIMAN	general.h	/^   MODE_EXTLAUNCH_MULTIMAN,$/;"	e	enum:menu_enums
MODE_GAME	general.h	/^   MODE_GAME = 0,$/;"	e	enum:menu_enums
MODE_GAME_ONESHOT	general.h	/^   MODE_GAME_ONESHOT,$/;"	e	enum:menu_enums
MODE_INPUT_XPERIA_PLAY_HACK	general.h	/^   MODE_INPUT_XPERIA_PLAY_HACK,$/;"	e	enum:menu_enums
MODE_LOAD_GAME	general.h	/^   MODE_LOAD_GAME,$/;"	e	enum:menu_enums
MODE_MENU	general.h	/^   MODE_MENU,$/;"	e	enum:menu_enums
MODE_MENU_HD	general.h	/^   MODE_MENU_HD,$/;"	e	enum:menu_enums
MODE_MENU_PREINIT	general.h	/^   MODE_MENU_PREINIT,$/;"	e	enum:menu_enums
MODE_MENU_WIDESCREEN	general.h	/^   MODE_MENU_WIDESCREEN,$/;"	e	enum:menu_enums
MODE_OSK_ENTRY_FAIL	general.h	/^   MODE_OSK_ENTRY_FAIL,$/;"	e	enum:menu_enums
MODE_OSK_ENTRY_SUCCESS	general.h	/^   MODE_OSK_ENTRY_SUCCESS,$/;"	e	enum:menu_enums
MODE_VIDEO_FLICKER_FILTER_ENABLE	general.h	/^   MODE_VIDEO_FLICKER_FILTER_ENABLE,$/;"	e	enum:menu_enums
MODE_VIDEO_PAL_ENABLE	general.h	/^   MODE_VIDEO_PAL_ENABLE,$/;"	e	enum:menu_enums
MODE_VIDEO_PAL_TEMPORAL_ENABLE	general.h	/^   MODE_VIDEO_PAL_TEMPORAL_ENABLE,$/;"	e	enum:menu_enums
MODE_VIDEO_SOFT_FILTER_ENABLE	general.h	/^   MODE_VIDEO_SOFT_FILTER_ENABLE,$/;"	e	enum:menu_enums
MODE_VIDEO_TRIPLE_BUFFERING_ENABLE	general.h	/^   MODE_VIDEO_TRIPLE_BUFFERING_ENABLE,$/;"	e	enum:menu_enums
MOVERESIZE_GRAVITY_CENTER	gfx/context/x11_common.c	64;"	d	file:
MOVERESIZE_X_SHIFT	gfx/context/x11_common.c	65;"	d	file:
MOVERESIZE_Y_SHIFT	gfx/context/x11_common.c	66;"	d	file:
MSG_BIND_PREFERENCES	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final int MSG_BIND_PREFERENCES = 1;$/;"	f	class:PreferenceListFragment	file:	access:private
MSVCDir	dist-scripts/xdk1_env.bat	/^@set MSVCDir=%VCINSTALLDIR%\\VC7$/;"	v
MSVCDir	dist-scripts/xdk1_env_bigstack.bat	/^@set MSVCDir=%VCINSTALLDIR%\\VC7$/;"	v
MULTIMAN_SELF_FILE	frontend/platform/platform_ps3.c	42;"	d	file:
MZ_ADLER32_INIT	deps/miniz/zlib.h	182;"	d
MZ_ASSERT	deps/miniz/miniz.c	37;"	d	file:
MZ_BEST_COMPRESSION	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_BEST_SPEED	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_BLOCK	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_BUF_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_CLEAR_OBJ	deps/miniz/miniz.c	45;"	d	file:
MZ_CRC32_INIT	deps/miniz/zlib.h	186;"	d
MZ_DATA_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_DEFAULT_COMPRESSION	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_DEFAULT_LEVEL	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_DEFAULT_STRATEGY	deps/miniz/zlib.h	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon112
MZ_DEFAULT_WINDOW_BITS	deps/miniz/zlib.h	223;"	d
MZ_DEFLATED	deps/miniz/zlib.h	196;"	d
MZ_ERRNO	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_FALSE	deps/miniz/zlib.h	432;"	d
MZ_FILE	deps/miniz/miniz.c	2001;"	d	file:
MZ_FILTERED	deps/miniz/zlib.h	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon112
MZ_FINISH	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_FIXED	deps/miniz/zlib.h	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon112
MZ_FORCEINLINE	deps/miniz/miniz.c	56;"	d	file:
MZ_FORCEINLINE	deps/miniz/miniz.c	58;"	d	file:
MZ_FORCEINLINE	deps/miniz/miniz.c	60;"	d	file:
MZ_FREE	deps/miniz/miniz.c	40;"	d	file:
MZ_FULL_FLUSH	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_HUFFMAN_ONLY	deps/miniz/zlib.h	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon112
MZ_MACRO_END	deps/miniz/zlib.h	437;"	d
MZ_MACRO_END	deps/miniz/zlib.h	439;"	d
MZ_MALLOC	deps/miniz/miniz.c	39;"	d	file:
MZ_MAX	deps/miniz/miniz.c	43;"	d	file:
MZ_MEM_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_MIN	deps/miniz/miniz.c	44;"	d	file:
MZ_NEED_DICT	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_NO_COMPRESSION	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_NO_FLUSH	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_OK	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_PARAM_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_PARTIAL_FLUSH	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_READ_LE16	deps/miniz/miniz.c	48;"	d	file:
MZ_READ_LE16	deps/miniz/miniz.c	51;"	d	file:
MZ_READ_LE32	deps/miniz/miniz.c	49;"	d	file:
MZ_READ_LE32	deps/miniz/miniz.c	52;"	d	file:
MZ_REALLOC	deps/miniz/miniz.c	41;"	d	file:
MZ_RLE	deps/miniz/zlib.h	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon112
MZ_STREAM_END	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_STREAM_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_SWAP_UINT32	deps/miniz/miniz.c	2105;"	d	file:
MZ_SYNC_FLUSH	deps/miniz/zlib.h	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon113
MZ_TOLOWER	deps/miniz/miniz.c	2003;"	d	file:
MZ_TRUE	deps/miniz/zlib.h	433;"	d
MZ_UBER_COMPRESSION	deps/miniz/zlib.h	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon115
MZ_VERNUM	deps/miniz/zlib.h	207;"	d
MZ_VERSION	deps/miniz/zlib.h	206;"	d
MZ_VERSION_ERROR	deps/miniz/zlib.h	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon114
MZ_VER_MAJOR	deps/miniz/zlib.h	208;"	d
MZ_VER_MINOR	deps/miniz/zlib.h	209;"	d
MZ_VER_REVISION	deps/miniz/zlib.h	210;"	d
MZ_VER_SUBREVISION	deps/miniz/zlib.h	211;"	d
MZ_ZIP_ARRAY_ELEMENT	deps/miniz/miniz.c	2044;"	d	file:
MZ_ZIP_ARRAY_SET_ELEMENT_SIZE	deps/miniz/miniz.c	2043;"	d	file:
MZ_ZIP_CDH_BIT_FLAG_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_COMMENT_LEN_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_COMPRESSED_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_CRC32_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_DISK_START_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_EXTERNAL_ATTR_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_EXTRA_LEN_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_FILENAME_LEN_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_FILE_DATE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_FILE_TIME_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_INTERNAL_ATTR_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_LOCAL_HEADER_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_METHOD_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_SIG_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_VERSION_MADE_BY_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_CDH_VERSION_NEEDED_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_CENTRAL_DIR_HEADER_SIG	deps/miniz/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon137	file:
MZ_ZIP_CENTRAL_DIR_HEADER_SIZE	deps/miniz/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_CDIR_OFS_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_CDIR_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_COMMENT_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_NUM_THIS_DISK_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_ECDH_SIG_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon137	file:
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG	deps/miniz/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon137	file:
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE	deps/miniz/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_FLAG_CASE_SENSITIVE	deps/miniz/zlib.h	/^  MZ_ZIP_FLAG_CASE_SENSITIVE                = 0x0100,$/;"	e	enum:__anon120
MZ_ZIP_FLAG_COMPRESSED_DATA	deps/miniz/zlib.h	/^  MZ_ZIP_FLAG_COMPRESSED_DATA               = 0x0400,$/;"	e	enum:__anon120
MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY	deps/miniz/zlib.h	/^  MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY = 0x0800$/;"	e	enum:__anon120
MZ_ZIP_FLAG_IGNORE_PATH	deps/miniz/zlib.h	/^  MZ_ZIP_FLAG_IGNORE_PATH                   = 0x0200,$/;"	e	enum:__anon120
MZ_ZIP_LDH_BIT_FLAG_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_COMPRESSED_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_CRC32_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_EXTRA_LEN_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILENAME_LEN_OFS = 26, MZ_ZIP_LDH_EXTRA_LEN_OFS = 28,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_FILENAME_LEN_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILENAME_LEN_OFS = 26, MZ_ZIP_LDH_EXTRA_LEN_OFS = 28,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_FILE_DATE_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_FILE_TIME_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_METHOD_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_SIG_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon137	file:
MZ_ZIP_LDH_VERSION_NEEDED_OFS	deps/miniz/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon137	file:
MZ_ZIP_LOCAL_DIR_HEADER_SIG	deps/miniz/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon137	file:
MZ_ZIP_LOCAL_DIR_HEADER_SIZE	deps/miniz/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon137	file:
MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE	deps/miniz/zlib.h	/^  MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE = 260,$/;"	e	enum:__anon116
MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE	deps/miniz/zlib.h	/^  MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE = 256$/;"	e	enum:__anon116
MZ_ZIP_MAX_IO_BUF_SIZE	deps/miniz/zlib.h	/^  MZ_ZIP_MAX_IO_BUF_SIZE = 64*1024,$/;"	e	enum:__anon116
MZ_ZIP_MODE_INVALID	deps/miniz/zlib.h	/^  MZ_ZIP_MODE_INVALID = 0,$/;"	e	enum:__anon118
MZ_ZIP_MODE_READING	deps/miniz/zlib.h	/^  MZ_ZIP_MODE_READING = 1,$/;"	e	enum:__anon118
MZ_ZIP_MODE_WRITING	deps/miniz/zlib.h	/^  MZ_ZIP_MODE_WRITING = 2,$/;"	e	enum:__anon118
MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED	deps/miniz/zlib.h	/^  MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED = 3$/;"	e	enum:__anon118
M_PI	audio/resampler.h	31;"	d
M_PI	gx/gx_input.c	28;"	d	file:
Magic	frontend/platform/platform_xdk.h	/^	CHAR Magic[4];$/;"	m	struct:_XBE_HEADER	access:public
MagicEntry	tools/retrolaunch/cd_detect.c	/^struct MagicEntry {$/;"	s	file:
MagicEntry::magic	tools/retrolaunch/cd_detect.c	/^    const char* magic;$/;"	m	struct:MagicEntry	file:	access:public
MagicEntry::system_name	tools/retrolaunch/cd_detect.c	/^    const char* system_name;$/;"	m	struct:MagicEntry	file:	access:public
MainMenuActivity	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^public final class MainMenuActivity extends FragmentActivity$/;"	c	inherits:FragmentActivity
MainMenuActivity.onCreate	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:MainMenuActivity	access:public	signature:(Bundle savedInstanceState)
MainMenuActivity.onRestoreInstanceState	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	protected void onRestoreInstanceState(Bundle savedInstanceState)$/;"	m	class:MainMenuActivity	access:protected	signature:(Bundle savedInstanceState)
MainMenuActivity.onSaveInstanceState	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	protected void onSaveInstanceState(Bundle data)$/;"	m	class:MainMenuActivity	access:protected	signature:(Bundle data)
MainMenuActivity.setCoreTitle	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void setCoreTitle(String core_name)$/;"	m	class:MainMenuActivity	access:public	signature:(String core_name)
MainMenuActivity.setModule	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void setModule(String core_path, String core_name)$/;"	m	class:MainMenuActivity	access:public	signature:(String core_path, String core_name)
MainMenuFragment	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^public final class MainMenuFragment extends PreferenceListFragment implements OnPreferenceClickListener, OnDirectoryFragmentClosedListener$/;"	c	inherits:PreferenceListFragment,OnPreferenceClickListener,OnDirectoryFragmentClosedListener
MainMenuFragment.TAG	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private static final String TAG = "MainMenuFragment";$/;"	f	class:MainMenuFragment	file:	access:private
MainMenuFragment.areAssetsExtracted	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private boolean areAssetsExtracted()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
MainMenuFragment.ctx	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private Context ctx;$/;"	f	class:MainMenuFragment	file:	access:private
MainMenuFragment.detectDevice	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private boolean detectDevice(boolean show_dialog)$/;"	m	class:MainMenuFragment	file:	access:private	signature:(boolean show_dialog)
MainMenuFragment.extractAssets	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private void extractAssets()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
MainMenuFragment.extractAssetsThread	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private void extractAssetsThread()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
MainMenuFragment.getRetroActivity	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public Intent getRetroActivity()$/;"	m	class:MainMenuFragment	access:public	signature:()
MainMenuFragment.getVersionCode	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private int getVersionCode()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
MainMenuFragment.onCreate	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:MainMenuFragment	access:public	signature:(Bundle savedInstanceState)
MainMenuFragment.onDirectoryFragmentClosed	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public void onDirectoryFragmentClosed(String path)$/;"	m	class:MainMenuFragment	access:public	signature:(String path)
MainMenuFragment.onPreferenceClick	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:MainMenuFragment	access:public	signature:(Preference preference)
MaximumLength	frontend/platform/platform_xdk.h	/^    USHORT MaximumLength;$/;"	m	struct:_STRING	access:public
MediaTypes	frontend/platform/platform_xdk.h	/^	ULONG MediaTypes;$/;"	m	struct:_XBE_CERTIFICATE	access:public
MemoryClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint MemoryClock;$/;"	m	struct:rglGcmResource	access:public
MemoryClock	ps3/rgl/src/rgl_ps3.cpp	/^static GLuint MemoryClock = 0;$/;"	v	file:
Message_Block	tools/retrolaunch/sha1.h	/^    unsigned char Message_Block[64]; \/* 512-bit message blocks      *\/$/;"	m	struct:SHA1Context	access:public
Message_Block_Index	tools/retrolaunch/sha1.h	/^    int Message_Block_Index;    \/* Index into message block array   *\/$/;"	m	struct:SHA1Context	access:public
Message_Digest	tools/retrolaunch/sha1.h	/^    unsigned Message_Digest[5]; \/* Message Digest (output)          *\/$/;"	m	struct:SHA1Context	access:public
MetaHeader	ps3/ps3py/pkg.py	/^class MetaHeader(Struct):$/;"	c	inherits:Struct
MmAllocateContiguousMemory	frontend/platform/platform_xdk.h	/^MmAllocateContiguousMemory($/;"	p	signature:( IN ULONG NumberOfBytes )
MmFreeContiguousMemory	frontend/platform/platform_xdk.h	/^MmFreeContiguousMemory($/;"	p	signature:( IN PVOID BaseAddress )
MmGetPhysicalAddress	frontend/platform/platform_xdk.h	/^MmGetPhysicalAddress($/;"	p	signature:( IN PVOID BaseAddress )
MmMapIoSpace	frontend/platform/platform_xdk.h	/^MmMapIoSpace($/;"	p	signature:( IN PHYSICAL_ADDRESS PhysicalAddress, IN ULONG NumberOfBytes, IN ULONG ProtectionType )
MmUnmapIoSpace	frontend/platform/platform_xdk.h	/^MmUnmapIoSpace($/;"	p	signature:( IN PVOID BaseAddress, IN ULONG NumberOfBytes )
ModuleWrapper	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public ModuleWrapper(Context context, File file)$/;"	m	class:ModuleWrapper	access:public	signature:(Context context, File file)
ModuleWrapper	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public ModuleWrapper(Context context, String path)$/;"	m	class:ModuleWrapper	access:public	signature:(Context context, String path)
ModuleWrapper	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^public final class ModuleWrapper implements IconAdapterItem, Comparable<ModuleWrapper>$/;"	c	inherits:IconAdapterItem,Comparable
ModuleWrapper.ModuleWrapper	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public ModuleWrapper(Context context, File file)$/;"	m	class:ModuleWrapper	access:public	signature:(Context context, File file)
ModuleWrapper.ModuleWrapper	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public ModuleWrapper(Context context, String path)$/;"	m	class:ModuleWrapper	access:public	signature:(Context context, String path)
ModuleWrapper.authors	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> authors;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.compareTo	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public int compareTo(ModuleWrapper other)$/;"	m	class:ModuleWrapper	access:public	signature:(ModuleWrapper other)
ModuleWrapper.coreName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String coreName;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.displayName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String displayName;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.file	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final File file;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.getAuthors	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getAuthors()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getCoreLicense	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getCoreLicense()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getDisplayName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getDisplayName()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getEmulatedSystemName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getEmulatedSystemName()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getIconDrawable	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public Drawable getIconDrawable()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getIconResourceId	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public int getIconResourceId()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getInternalName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getInternalName()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getManufacturer	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getManufacturer()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getPermissions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getPermissions()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getSubText	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getSubText()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getSupportedExtensions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getSupportedExtensions()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getText	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getText()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.getUnderlyingFile	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public File getUnderlyingFile()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.isEnabled	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public boolean isEnabled()$/;"	m	class:ModuleWrapper	access:public	signature:()
ModuleWrapper.license	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String license;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.manufacturer	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String manufacturer;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.permissions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> permissions;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.supportedExtensions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> supportedExtensions;$/;"	f	class:ModuleWrapper	file:	access:private
ModuleWrapper.systemName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String systemName;$/;"	f	class:ModuleWrapper	file:	access:private
Monitor	gfx/d3d9/d3d9.cpp	/^namespace Monitor$/;"	n	file:
Monitor::all_hms	gfx/d3d9/d3d9.cpp	/^   static HMONITOR all_hms[MAX_MONITORS];$/;"	m	namespace:Monitor	file:
Monitor::cur_mon_id	gfx/d3d9/d3d9.cpp	/^   static unsigned cur_mon_id;$/;"	m	namespace:Monitor	file:
Monitor::last_hm	gfx/d3d9/d3d9.cpp	/^   static HMONITOR last_hm;$/;"	m	namespace:Monitor	file:
Monitor::num_mons	gfx/d3d9/d3d9.cpp	/^   static unsigned num_mons;$/;"	m	namespace:Monitor	file:
NAME_INCREMENT	ps3/rgl/src/rgl_ps3.cpp	52;"	d	file:
NBITS	input/udev_joypad.c	254;"	d	file:
NEED_DYNAMIC	dynamic.h	27;"	d
NEED_DYNAMIC	dynamic.h	29;"	d
NETPLAY_ARG	retroarch.c	874;"	d	file:
NETPLAY_CMD_ACK	netplay.c	61;"	d	file:
NETPLAY_CMD_FLIP_PLAYERS	netplay.c	63;"	d	file:
NETPLAY_CMD_NAK	netplay.c	62;"	d	file:
NETPLAY_COMPAT_H__	netplay_compat.h	17;"	d
NETWORK_COMPAT_HEADERS	audio/librsound.c	42;"	d	file:
NETWORK_COMPAT_HEADERS	audio/librsound.c	46;"	d	file:
NEXT	apple/common/setting_data.c	303;"	d	file:
NEXT_PTR	netplay.c	44;"	d	file:
NOD3D	netplay_compat.h	32;"	d
NONCONST_CAST	netplay_compat.h	62;"	d
NONCONST_CAST	netplay_compat.h	65;"	d
NOUNUSED	config.mk	/^NOUNUSED = yes$/;"	m
NOUNUSED_VARIABLE	config.mk	/^NOUNUSED_VARIABLE = yes$/;"	m
NO_BTN	driver.h	190;"	d
NO_GL_CLAMP_TO_BORDER	gfx/gl_common.h	323;"	d
NO_GL_FF_MATRIX	gfx/gl_common.h	319;"	d
NO_GL_FF_VERTEX	gfx/gl_common.h	315;"	d
NO_GL_READ_VIEWPORT	gfx/gl_common.h	301;"	d
NP_POOL_SIZE	frontend/platform/platform_ps3.c	30;"	d	file:
NTSTATUS	frontend/platform/platform_xdk.h	/^typedef LONG NTSTATUS;$/;"	t
NTSYSAPI	frontend/platform/platform_xdk.h	23;"	d
NTSYSAPI	frontend/platform/platform_xdk.h	26;"	d
NT_SUCCESS	frontend/platform/platform_xdk.h	36;"	d
NUM_AXES	input/linuxraw_joypad.c	30;"	d	file:
NUM_AXES	input/udev_joypad.c	39;"	d	file:
NUM_BUTTONS	input/linuxraw_joypad.c	29;"	d	file:
NUM_BUTTONS	input/udev_joypad.c	38;"	d	file:
NUM_EXTENSIONS	ps3/rgl/src/rgl_ps3.cpp	3644;"	d	file:
NUM_HATS	input/udev_joypad.c	40;"	d	file:
NativeInterface	android/phoenix/src/com/retroarch/browser/NativeInterface.java	/^public final class NativeInterface {$/;"	c
NativeInterface.extractArchiveTo	android/phoenix/src/com/retroarch/browser/NativeInterface.java	/^	public static native boolean extractArchiveTo(String archive,$/;"	m	class:NativeInterface	access:public	signature:(String archive, String subDirectory, String destinationFolder)
NotDefaultDevice	audio/xaudio-c/xaudio.h	/^   NotDefaultDevice            = 0x0,$/;"	e	enum:XAUDIO2_DEVICE_ROLE
NotificationTimer	frontend/platform/platform_xdk.h	/^    NotificationTimer,$/;"	e	enum:_TIMER_TYPE
NotificationTimerObject	frontend/platform/platform_xdk.h	97;"	d
NtAllocateVirtualMemory	frontend/platform/platform_xdk.h	/^NtAllocateVirtualMemory($/;"	p	signature:( IN OUT PVOID *BaseAddress, IN ULONG ZeroBits, IN OUT PULONG AllocationSize, IN ULONG AllocationType, IN ULONG Protect )
NtClose	frontend/platform/platform_xdk.h	/^NtClose($/;"	p	signature:( IN HANDLE Handle )
NtFreeVirtualMemory	frontend/platform/platform_xdk.h	/^NtFreeVirtualMemory($/;"	p	signature:( IN OUT PVOID *BaseAddress, IN OUT PULONG FreeSize, IN ULONG FreeType )
NtQueryVolumeInformationFile	frontend/platform/platform_xdk.h	/^NtQueryVolumeInformationFile($/;"	p	signature:( IN HANDLE FileHandle, OUT PIO_STATUS_BLOCK IoStatusBlock, OUT PVOID VolumeInformation, IN ULONG VolumeInformationLength, IN FS_INFORMATION_CLASS VolumeInformationClass )
NtReadFile	frontend/platform/platform_xdk.h	/^NtReadFile($/;"	p	signature:( IN HANDLE FileHandle, IN HANDLE Event OPTIONAL, IN PIO_APC_ROUTINE ApcRoutine OPTIONAL, IN PVOID ApcContext OPTIONAL, OUT PIO_STATUS_BLOCK IoStatusBlock, OUT PVOID Buffer, IN ULONG Length, IN PLARGE_INTEGER ByteOffset )
NtWriteFile	frontend/platform/platform_xdk.h	/^NtWriteFile($/;"	p	signature:( IN HANDLE FileHandle, IN HANDLE Event OPTIONAL, IN PIO_APC_ROUTINE ApcRoutine OPTIONAL, IN PVOID ApcContext OPTIONAL, OUT PIO_STATUS_BLOCK IoStatusBlock, IN PVOID Buffer, IN ULONG Length, IN PLARGE_INTEGER ByteOffset )
NumLibraries	frontend/platform/platform_xdk.h	/^	ULONG NumLibraries;$/;"	m	struct:_XBE_HEADER	access:public
NumSections	frontend/platform/platform_xdk.h	/^	DWORD NumSections;$/;"	m	struct:_XBE_HEADER	access:public
Number	frontend/platform/platform_xdk.h	/^	UCHAR Number;$/;"	m	struct:_KDPC	access:public
OBJ	Makefile	/^OBJ = frontend\/frontend.o \\$/;"	m
OBJ	wii/app_booter/Makefile	/^OBJ = crt0.o dolloader.o elfloader.o main.o string.o sync.o$/;"	m
OBJCOPY	wii/app_booter/Makefile	/^OBJCOPY = $(DEVKITPPC)\/bin\/powerpc-eabi-objcopy$(EXE_EXT)$/;"	m
OBJECTS	libretro-test-gl/Makefile	/^OBJECTS := libretro-test.o ..\/gfx\/glsym\/rglgen.o$/;"	m
OBJECTS	libretro-test/Makefile	/^OBJECTS := libretro-test.o$/;"	m
OBJECT_ATTRIBUTES	frontend/platform/platform_xdk.h	/^} OBJECT_ATTRIBUTES;$/;"	t	typeref:struct:_OBJECT_ATTRIBUTES
OBJECT_TYPE	frontend/platform/platform_xdk.h	/^} OBJECT_TYPE;$/;"	t	typeref:struct:_OBJECT_TYPE
OBJS	compat/rxml/Makefile	/^OBJS := $(SOURCES:.c=.o)$/;"	m
OBJS	gfx/rpng/Makefile	/^OBJS := $(SOURCES:.c=.o)$/;"	m
OBJ_CASE_INSENSITIVE	frontend/platform/platform_xdk.h	117;"	d
OBJ_EXCLUSIVE	frontend/platform/platform_xdk.h	116;"	d
OBJ_INHERIT	frontend/platform/platform_xdk.h	114;"	d
OBJ_KERNEL_HANDLE	frontend/platform/platform_xdk.h	120;"	d
OBJ_OPENIF	frontend/platform/platform_xdk.h	118;"	d
OBJ_OPENLINK	frontend/platform/platform_xdk.h	119;"	d
OBJ_PERMANENT	frontend/platform/platform_xdk.h	115;"	d
OBJ_VALID_ATTRIBUTES	frontend/platform/platform_xdk.h	121;"	d
OFFSET_OF_DATA_IN_COMMAND_COMPLETE	apple/iOS/bluetooth/btstack/utils.h	91;"	d
OPTIMIZE_FLAG	Makefile	/^   OPTIMIZE_FLAG = -O0$/;"	m
OPTIMIZE_FLAG	Makefile	/^OPTIMIZE_FLAG = -O3 -ffast-math$/;"	m
ORANGE	gfx/gfx_common.h	113;"	d
ORIENTATION_END	gfx/gfx_common.h	/^   ORIENTATION_END$/;"	e	enum:rotation
ORIENTATION_FLIPPED	gfx/gfx_common.h	/^   ORIENTATION_FLIPPED,$/;"	e	enum:rotation
ORIENTATION_FLIPPED_ROTATED	gfx/gfx_common.h	/^   ORIENTATION_FLIPPED_ROTATED,$/;"	e	enum:rotation
ORIENTATION_NORMAL	gfx/gfx_common.h	/^   ORIENTATION_NORMAL = 0,$/;"	e	enum:rotation
ORIENTATION_VERTICAL	gfx/gfx_common.h	/^   ORIENTATION_VERTICAL,$/;"	e	enum:rotation
OS	config.mk	/^OS = Linux$/;"	m
OSK_DEFAULT_DRIVER	config.def.h	219;"	d
OSK_DEFAULT_DRIVER	config.def.h	221;"	d
OSK_IN_USE	ps3/ps3_input_osk.c	36;"	d	file:
OSK_NULL	config.def.h	/^   OSK_NULL,$/;"	e	enum:__anon107
OSK_PS3	config.def.h	/^   OSK_PS3,$/;"	e	enum:__anon107
OSX	Makefile	/^   OSX := 0$/;"	m
OSX	Makefile	/^   OSX := 1$/;"	m
OSX_10_6_SNOW_LEOPARD	gfx/glsym/glsym_gl.h	25;"	d
OS_VERSION_NUMERIC	ps3/rgl/include/RGL/private.h	9;"	d
OVERLAY_HITBOX_RADIAL	input/overlay.c	/^   OVERLAY_HITBOX_RADIAL = 0,$/;"	e	enum:overlay_hitbox	file:
OVERLAY_HITBOX_RECT	input/overlay.c	/^   OVERLAY_HITBOX_RECT$/;"	e	enum:overlay_hitbox	file:
OVERLAY_TYPE_ANALOG_LEFT	input/overlay.c	/^   OVERLAY_TYPE_ANALOG_LEFT,$/;"	e	enum:overlay_type	file:
OVERLAY_TYPE_ANALOG_RIGHT	input/overlay.c	/^   OVERLAY_TYPE_ANALOG_RIGHT$/;"	e	enum:overlay_type	file:
OVERLAY_TYPE_BUTTONS	input/overlay.c	/^   OVERLAY_TYPE_BUTTONS = 0,$/;"	e	enum:overlay_type	file:
ObDereferenceObject	frontend/platform/platform_xdk.h	883;"	d
ObReferenceObject	frontend/platform/platform_xdk.h	870;"	d
ObReferenceObjectByHandle	frontend/platform/platform_xdk.h	/^ObReferenceObjectByHandle($/;"	p	signature:( IN HANDLE Handle, IN POBJECT_TYPE ObjectType OPTIONAL, OUT PVOID *Object )
ObfDereferenceObject	frontend/platform/platform_xdk.h	/^ObfDereferenceObject($/;"	p	signature:( IN PVOID Object )
ObfReferenceObject	frontend/platform/platform_xdk.h	/^ObfReferenceObject($/;"	p	signature:( IN PVOID Object )
ObjectName	frontend/platform/platform_xdk.h	/^    PANSI_STRING ObjectName;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchAudioOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnControlNavigate($/;"	f	class:CRetroArchControls	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnControlNavigate($/;"	f	class:CRetroArchCoreBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnControlNavigate($/;"	f	class:CRetroArchFileBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnControlNavigate($/;"	f	class:CRetroArchLoadGameHistory	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchMain	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchSettings	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnControlNavigate($/;"	f	class:CRetroArchShaderBrowser	signature:( XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnControlNavigate	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnControlNavigate(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)$/;"	f	class:CRetroArchVideoOptions	signature:(XUIMessageControlNavigate *pControlNavigateData, BOOL& bHandled)
OnCoreItemClickedListener	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	interface OnCoreItemClickedListener$/;"	i	class:InstalledCoresFragment	access:default
OnDirectoryFragmentClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public interface OnDirectoryFragmentClosedListener$/;"	i	class:DirectoryFragment	access:public
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchAudioOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchControls	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchCoreOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchFileBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchLoadGameHistory	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchMain	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchSettings	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchShaderBrowser	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnInit	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnInit(XUIMessageInit * pInitData, BOOL& bHandled)$/;"	f	class:CRetroArchVideoOptions	signature:(XUIMessageInit * pInitData, BOOL& bHandled)
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchAudioOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchAudioOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchControls::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchControls	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchCoreBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchCoreOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchCoreOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchFileBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchFileBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchLoadGameHistory::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchLoadGameHistory	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchMain::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchMain	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchSettings::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchSettings	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchShaderBrowser::OnNotifyPress( HXUIOBJ hObjPressed, BOOL& bHandled )$/;"	f	class:CRetroArchShaderBrowser	signature:( HXUIOBJ hObjPressed, BOOL& bHandled )
OnNotifyPress	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArchVideoOptions::OnNotifyPress( HXUIOBJ hObjPressed,  int & bHandled )$/;"	f	class:CRetroArchVideoOptions	signature:( HXUIOBJ hObjPressed, int & bHandled )
OnPreferenceStartFragmentCallback	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public interface OnPreferenceStartFragmentCallback$/;"	i	class:PreferenceListFragment	access:public
OnPreferenceTreeClickListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    interface OnPreferenceTreeClickListener$/;"	i	class:PreferenceManagerCompat	access:default
OutputFormat	audio/xaudio-c/xaudio.h	/^   WAVEFORMATEXTENSIBLE OutputFormat;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
OwningThread	frontend/platform/platform_xdk.h	/^	ULONG OwningThread;$/;"	m	struct:_KCRITICAL_SECTION	access:public
PACKAGE_NAME	config.h	4;"	d
PACKAGE_NAME	config.mk	/^PACKAGE_NAME = retroarch$/;"	m
PACKAGE_VERSION	general.h	45;"	d
PACKAGE_VERSION	general.h	47;"	d
PAD	ps3/rgl/src/rgl_ps3.cpp	284;"	d	file:
PAGE_ALIGN	frontend/platform/platform_xdk.h	647;"	d
PAGE_SIZE	frontend/platform/platform_xdk.h	637;"	d
PANSI_STRING	frontend/platform/platform_xdk.h	/^typedef PSTRING PANSI_STRING;$/;"	t
PARENT	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public static final int PARENT = 1;$/;"	f	class:FileWrapper	access:public
PASSIVE_LEVEL	frontend/platform/platform_xdk.h	371;"	d
PATCH_PATCH_CHECKSUM_INVALID	patch.h	/^   PATCH_PATCH_CHECKSUM_INVALID$/;"	e	enum:__anon140
PATCH_PATCH_INVALID	patch.h	/^   PATCH_PATCH_INVALID,$/;"	e	enum:__anon140
PATCH_PATCH_INVALID_HEADER	patch.h	/^   PATCH_PATCH_INVALID_HEADER,$/;"	e	enum:__anon140
PATCH_PATCH_TOO_SMALL	patch.h	/^   PATCH_PATCH_TOO_SMALL,$/;"	e	enum:__anon140
PATCH_SOURCE_CHECKSUM_INVALID	patch.h	/^   PATCH_SOURCE_CHECKSUM_INVALID,$/;"	e	enum:__anon140
PATCH_SOURCE_INVALID	patch.h	/^   PATCH_SOURCE_INVALID,$/;"	e	enum:__anon140
PATCH_SOURCE_TOO_SMALL	patch.h	/^   PATCH_SOURCE_TOO_SMALL,$/;"	e	enum:__anon140
PATCH_SUCCESS	patch.h	/^   PATCH_SUCCESS,$/;"	e	enum:__anon140
PATCH_TARGET_CHECKSUM_INVALID	patch.h	/^   PATCH_TARGET_CHECKSUM_INVALID,$/;"	e	enum:__anon140
PATCH_TARGET_INVALID	patch.h	/^   PATCH_TARGET_INVALID,$/;"	e	enum:__anon140
PATCH_TARGET_TOO_SMALL	patch.h	/^   PATCH_TARGET_TOO_SMALL,$/;"	e	enum:__anon140
PATCH_UNKNOWN	patch.h	/^   PATCH_UNKNOWN,$/;"	e	enum:__anon140
PATH	dist-scripts/xdk1_env.bat	/^@set PATH=%DevEnvDir%;%MSVCDir%\\BIN;%VCINSTALLDIR%\\Common7\\Tools;%VCINSTALLDIR%\\Common7\\Tools\\bin\\prerelease;%VCINSTALLDIR%\\Common7\\Tools\\bin;%FrameworkSDKDir%\\bin;%FrameworkDir%\\%FrameworkVersion%;%PATH%;$/;"	v
PATH	dist-scripts/xdk1_env_bigstack.bat	/^@set PATH=%DevEnvDir%;%MSVCDir%\\BIN;%VCINSTALLDIR%\\Common7\\Tools;%VCINSTALLDIR%\\Common7\\Tools\\bin\\prerelease;%VCINSTALLDIR%\\Common7\\Tools\\bin;%FrameworkSDKDir%\\bin;%FrameworkDir%\\%FrameworkVersion%;%PATH%;$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@if exist "%ProgramFiles%\\HTML Help Workshop" set PATH=%ProgramFiles%\\HTML Help Workshop;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@if exist "%ProgramFiles(x86)%\\HTML Help Workshop" set PATH=%ProgramFiles(x86)%\\HTML Help Workshop;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%BIN" set PATH=%VCINSTALLDIR%BIN;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@if exist "%VCINSTALLDIR%VCPackages" set PATH=%VCINSTALLDIR%VCPackages;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@set PATH=%DevEnvDir%;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@set PATH=%FrameworkDir%%Framework35Version%;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@set PATH=%FrameworkDir%%FrameworkVersion%;%PATH%$/;"	v
PATH	dist-scripts/xdk360_env.bat	/^@set PATH=%VSINSTALLDIR%Common7\\Tools;%PATH%$/;"	v
PATH_MAX	conf/config_file.c	39;"	d	file:
PATH_MAX	conf/config_file.c	41;"	d	file:
PATH_MAX	miscellaneous.h	42;"	d
PATH_MAX	msvc/msvc_compat.h	56;"	d
PCLK	gfx/context/sunxi_disp_ioctl.h	/^	__s32 PCLK;$/;"	m	struct:__disp_video_timing	access:public
PCSZ	frontend/platform/platform_xdk.h	/^typedef CONST CHAR *PCSZ;$/;"	t
PDEVICE_OBJECT	frontend/platform/platform_xdk.h	/^typedef DEVICE_OBJECT *PDEVICE_OBJECT;$/;"	t
PDRIVER_OBJECT	frontend/platform/platform_xdk.h	/^typedef DRIVER_OBJECT *PDRIVER_OBJECT;$/;"	t
PERF_LOG_FMT	performance.c	102;"	d	file:
PERF_LOG_FMT	performance.c	104;"	d	file:
PERF_TEST	android/native/jni/Android.mk	/^PERF_TEST := 0$/;"	m
PFILE_FS_DEVICE_INFORMATION	frontend/platform/platform_xdk.h	/^} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION;     $/;"	t	typeref:struct:_FILE_FS_DEVICE_INFORMATION
PFILE_FS_SIZE_INFORMATION	frontend/platform/platform_xdk.h	/^} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION;$/;"	t	typeref:struct:_FILE_FS_SIZE_INFORMATION
PFILE_OBJECT	frontend/platform/platform_xdk.h	/^typedef FILE_OBJECT *PFILE_OBJECT;$/;"	t
PFNGLACTIVEPROGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVEVARYINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINQUERYARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBEGINVIDEOCAPTURENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFEROFFSETEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFEROFFSETNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDFRAGDATALOCATIONEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPARAMETEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	t
PFNGLBINORMAL3BEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDCOLORPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONINDEXEDAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCINDEXEDAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERDATAARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERPARAMETERIAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORIIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCLEARCOLORIUIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCLEARDEPTHDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORMASKINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYIMAGESUBDATANVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERFILLPATHINSTANCEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERFILLPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERSTROKEPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* const *strings);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEBUGMESSAGECALLBACKAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEENABLEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETENAMESAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);$/;"	t
PFNGLDELETEOBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPATHSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESYNCPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDETACHOBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWBUFFERSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDPERFMONITORAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDQUERYARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYINDEXEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTRANSFORMFEEDBACKEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLENDVIDEOCAPTURENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLEVALMAPSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFENCESYNCPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFOGCOORDFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMETERMINATORGREMEDYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENNAMESAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPATHSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENPROGRAMSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEVARYINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDEBUGMESSAGELOGAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETFENCEIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFOGFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETHANDLEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGEHANDLENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINTEGER64I_VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMULTISAMPLEFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOLORTABLEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNCONVOLUTIONFILTERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);$/;"	t
PFNGLGETNHISTOGRAMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
PFNGLGETNMAPDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
PFNGLGETNMAPFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETNMAPIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
PFNGLGETNMINMAXARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
PFNGLGETNPIXELMAPFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
PFNGLGETNPIXELMAPUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
PFNGLGETNPIXELMAPUSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
PFNGLGETNPOLYGONSTIPPLEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t
PFNGLGETNSEPARABLEFILTERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTLABELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPATHCOLORGENFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHCOLORGENIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHCOMMANDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t
PFNGLGETPATHCOORDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t
PFNGLGETPATHDASHARRAYNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t
PFNGLGETPATHLENGTHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	t
PFNGLGETPATHMETRICRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHMETRICSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHSPACINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	t
PFNGLGETPATHTEXGENFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHTEXGENIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLvoid* *data);$/;"	t
PFNGLGETPOINTERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMBINARYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETSTRINGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETTEXTUREHANDLENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMDVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMOFFSETEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVARYINGLOCATIONNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVIDEOCAPTUREIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVIDEOIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVIDEOUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLIMPORTSYNCEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);$/;"	t
PFNGLINDEXFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINDEXFUNCEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLINTERPOLATEPATHSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISFENCEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISIMAGEHANDLERESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISNAMEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t
PFNGLISPOINTINFILLPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	t
PFNGLISPOINTINSTROKEPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);$/;"	t
PFNGLISPROGRAMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSYNCPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISTRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLLIGHTENVISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAPBUFFERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	t
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMATRIXLOADDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMEMORYBARRIEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMINMAXEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORDP1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLNORMALP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLNORMALP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLNORMALPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLOBJECTLABELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPURGEABLEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLOBJECTUNPURGEABLEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLPASSTEXCOORDATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPATCHPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATHCOLORGENNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);$/;"	t
PFNGLPATHCOMMANDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	t
PFNGLPATHCOORDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	t
PFNGLPATHCOVERDEPTHFUNCNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t
PFNGLPATHDASHARRAYNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	t
PFNGLPATHFOGGENNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t
PFNGLPATHGLYPHRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHPARAMETERFNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t
PFNGLPATHPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);$/;"	t
PFNGLPATHPARAMETERINVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t
PFNGLPATHPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);$/;"	t
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPATHSTENCILFUNCNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLPATHSTRINGNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const GLvoid *pathString);$/;"	t
PFNGLPATHSUBCOMMANDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	t
PFNGLPATHSUBCOORDSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	t
PFNGLPATHTEXGENNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELDATARANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTALONGPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPOPDEBUGGROUPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPRESENTFRAMEDUALFILLNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	t
PFNGLPRESENTFRAMEKEYEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMBINARYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4INVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UINVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMVERTEXLIMITNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t
PFNGLPROVOKINGVERTEXEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLQUERYCOUNTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREADNPIXELSARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKINDEXEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCISSORARRAYVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSECONDARYCOLORP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLSECONDARYCOLORP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETMULTISAMPLEFVAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);$/;"	t
PFNGLSHADERBINARYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLSHADEROP1EXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTENCILCLEARTAGEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	t
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILFILLPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPVALUEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILSTROKEPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSWIZZLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESSELLATIONFACTORAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t
PFNGLTESSELLATIONMODEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t
PFNGLTESTFENCEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUFFERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXCOORDP1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXRENDERBUFFERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXSTORAGE1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSTORAGESPARSEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTURERANGEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGESPARSEAMDPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREVIEWPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRACKMATRIXNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMPATHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLUNIFORM1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);$/;"	t
PFNGLUNIFORMHANDLEUI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVDPAUFININVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t
PFNGLVDPAUGETSURFACEIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLVDPAUINITNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const GLvoid *vdpDevice, const GLvoid *getProcAddress);$/;"	t
PFNGLVDPAUISSURFACENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVDPAUMAPSURFACESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUSURFACEACCESSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);$/;"	t
PFNGLVDPAUUNMAPSURFACESNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUUNREGISTERSURFACENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVERTEX2HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXBLENDARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXFORMATNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXP2UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP2UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP3UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP3UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP4UIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP4UIVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVIDEOCAPTURENVPROC	msvc/msvc-2010/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	t
PFNGLVIEWPORTARRAYVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLWAITSYNCPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWEIGHTBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPATHSNVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	msvc/msvc-2010/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFS_INFORMATION_CLASS	frontend/platform/platform_xdk.h	/^} FS_INFORMATION_CLASS, *PFS_INFORMATION_CLASS;$/;"	t	typeref:enum:_FSINFOCLASS
PFS_STRUCTURE	frontend/platform/platform_xdk.h	/^} FS_STRUCTURE, *PFS_STRUCTURE;$/;"	t	typeref:struct:_FS_STRUCTURE
PF_MASKOS	wii/app_booter/elf_abi.h	438;"	d
PF_MASKPROC	wii/app_booter/elf_abi.h	439;"	d
PF_R	wii/app_booter/elf_abi.h	437;"	d
PF_W	wii/app_booter/elf_abi.h	436;"	d
PF_X	wii/app_booter/elf_abi.h	435;"	d
PHASES	audio/sinc.c	101;"	d	file:
PHASE_BITS	audio/sinc.c	50;"	d	file:
PHASE_BITS	audio/sinc.c	58;"	d	file:
PHASE_BITS	audio/sinc.c	67;"	d	file:
PHASE_BITS	audio/sinc.c	76;"	d	file:
PHASE_BITS	audio/sinc.c	85;"	d	file:
PHYSICAL_ADDRESS	frontend/platform/platform_xdk.h	/^typedef ULONG PHYSICAL_ADDRESS, *PPHYSICAL_ADDRESS;$/;"	t
PIO_APC_ROUTINE	frontend/platform/platform_xdk.h	/^(NTAPI *PIO_APC_ROUTINE) ($/;"	t
PIO_STATUS_BLOCK	frontend/platform/platform_xdk.h	/^} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;$/;"	t	typeref:struct:_IO_STATUS_BLOCK
PIXCONV_H__	gfx/scaler/pixconv.h	17;"	d
PKCRITICAL_SECTION	frontend/platform/platform_xdk.h	/^} KCRITICAL_SECTION, *PKCRITICAL_SECTION;$/;"	t	typeref:struct:_KCRITICAL_SECTION
PKDEFERRED_ROUTINE	frontend/platform/platform_xdk.h	/^(*PKDEFERRED_ROUTINE) ($/;"	t
PKDPC	frontend/platform/platform_xdk.h	/^} KDPC, *PKDPC;$/;"	t	typeref:struct:_KDPC
PKIRQL	frontend/platform/platform_xdk.h	/^typedef UCHAR KIRQL, *PKIRQL;$/;"	t
PKSTART_ROUTINE	frontend/platform/platform_xdk.h	/^(NTAPI *PKSTART_ROUTINE) ($/;"	t
PKTHREAD	frontend/platform/platform_xdk.h	/^} KTHREAD, *PKTHREAD;$/;"	t	typeref:struct:_KTHREAD
PKTIMER	frontend/platform/platform_xdk.h	/^} KTIMER, *PKTIMER;$/;"	t	typeref:struct:_KTIMER
PLATFORM_NAME	file_ext.h	32;"	d
PLATFORM_NAME	file_ext.h	38;"	d
PLATFORM_NAME	file_ext.h	43;"	d
PLATFORM_NAME	file_ext.h	49;"	d
PLATFORM_NAME	file_ext.h	51;"	d
PLATFORM_NAME	file_ext.h	54;"	d
PLATFORM_NAME	file_ext.h	56;"	d
PLATFORM_NAME	file_ext.h	58;"	d
PNG_CHUNK_ERROR	gfx/rpng/rpng.c	/^   PNG_CHUNK_ERROR,$/;"	e	enum:png_chunk_type	file:
PNG_CHUNK_IDAT	gfx/rpng/rpng.c	/^   PNG_CHUNK_IDAT,$/;"	e	enum:png_chunk_type	file:
PNG_CHUNK_IEND	gfx/rpng/rpng.c	/^   PNG_CHUNK_IEND$/;"	e	enum:png_chunk_type	file:
PNG_CHUNK_IHDR	gfx/rpng/rpng.c	/^   PNG_CHUNK_IHDR,$/;"	e	enum:png_chunk_type	file:
PNG_CHUNK_NOOP	gfx/rpng/rpng.c	/^   PNG_CHUNK_NOOP = 0,$/;"	e	enum:png_chunk_type	file:
PNG_CHUNK_PLTE	gfx/rpng/rpng.c	/^   PNG_CHUNK_PLTE,$/;"	e	enum:png_chunk_type	file:
POBJECT_ATTRIBUTES	frontend/platform/platform_xdk.h	/^typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;$/;"	t
POBJECT_TYPE	frontend/platform/platform_xdk.h	/^typedef OBJECT_TYPE *POBJECT_TYPE;$/;"	t
POSITION_EDGE_CENTER	frontend/menu/disp/rmenu.c	48;"	d	file:
POSITION_EDGE_CENTER	frontend/menu/disp/rmenu.c	58;"	d	file:
POSITION_EDGE_MAX	frontend/menu/disp/rmenu.c	46;"	d	file:
POSITION_EDGE_MAX	frontend/menu/disp/rmenu.c	56;"	d	file:
POSITION_EDGE_MIN	frontend/menu/disp/rmenu.c	47;"	d	file:
POSITION_EDGE_MIN	frontend/menu/disp/rmenu.c	57;"	d	file:
POSITION_MIDDLE	frontend/menu/disp/rmenu.c	55;"	d	file:
POSITION_OFFSET	frontend/menu/disp/rmenu.c	49;"	d	file:
POSITION_OFFSET	frontend/menu/disp/rmenu.c	60;"	d	file:
POSITION_RENDER_OFFSET	frontend/menu/disp/rmenu.c	50;"	d	file:
POSITION_RENDER_OFFSET	frontend/menu/disp/rmenu.c	59;"	d	file:
PPHYSICAL_ADDRESS	frontend/platform/platform_xdk.h	/^typedef ULONG PHYSICAL_ADDRESS, *PPHYSICAL_ADDRESS;$/;"	t
PREFERENCES_TAG	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final String PREFERENCES_TAG = "android:preferences";$/;"	f	class:PreferenceListFragment	file:	access:private
PREFETCH_STOP1	ps3/altivec_mem.h	94;"	d
PREFETCH_STOP2	ps3/altivec_mem.h	95;"	d
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
PRESSED_DOWN	android/native/jni/input_android.c	31;"	d	file:
PRESSED_LEFT	android/native/jni/input_android.c	32;"	d	file:
PRESSED_RIGHT	android/native/jni/input_android.c	33;"	d	file:
PRESSED_UP	android/native/jni/input_android.c	30;"	d	file:
PREV_PTR	netplay.c	43;"	d	file:
PREV_TEXTURES	gfx/shader_cg.c	107;"	d	file:
PREV_TEXTURES	gfx/shader_glsl.c	67;"	d	file:
PROJECT_DIR	blackberry-qnx/bb10/Makefile	/^PROJECT_DIR	  := $(dir $(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST)))$/;"	m
PSCSI_PASS_THROUGH_DIRECT	frontend/platform/platform_xdk.h	/^}SCSI_PASS_THROUGH_DIRECT, *PSCSI_PASS_THROUGH_DIRECT;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH_DIRECT
PSGL_BUFFERING_MODE_DOUBLE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_BUFFERING_MODE_DOUBLE = 2,$/;"	e	enum:PSGLbufferingMode
PSGL_BUFFERING_MODE_SINGLE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_BUFFERING_MODE_SINGLE = 1,$/;"	e	enum:PSGLbufferingMode
PSGL_BUFFERING_MODE_TRIPLE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_BUFFERING_MODE_TRIPLE = 3,$/;"	e	enum:PSGLbufferingMode
PSGL_DEVICE_CONNECTOR_COMPONENT	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_COMPONENT,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_COMPOSITE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_COMPOSITE,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_DVI	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_DVI,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_HDMI	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_HDMI,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_NONE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_NONE,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_SVIDEO	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_SVIDEO,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_CONNECTOR_VGA	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_DEVICE_CONNECTOR_VGA,$/;"	e	enum:PSGLdeviceConnector
PSGL_DEVICE_PARAMETERS_BUFFERING_MODE	ps3/rgl/include/export/RGL/rgl.h	128;"	d
PSGL_DEVICE_PARAMETERS_COLOR_FORMAT	ps3/rgl/include/export/RGL/rgl.h	123;"	d
PSGL_DEVICE_PARAMETERS_CONNECTOR	ps3/rgl/include/export/RGL/rgl.h	127;"	d
PSGL_DEVICE_PARAMETERS_DEPTH_FORMAT	ps3/rgl/include/export/RGL/rgl.h	124;"	d
PSGL_DEVICE_PARAMETERS_MULTISAMPLING_MODE	ps3/rgl/include/export/RGL/rgl.h	125;"	d
PSGL_DEVICE_PARAMETERS_RESC_ADJUST_ASPECT_RATIO	ps3/rgl/include/export/RGL/rgl.h	134;"	d
PSGL_DEVICE_PARAMETERS_RESC_INTERLACE_MODE	ps3/rgl/include/export/RGL/rgl.h	133;"	d
PSGL_DEVICE_PARAMETERS_RESC_PAL_TEMPORAL_MODE	ps3/rgl/include/export/RGL/rgl.h	132;"	d
PSGL_DEVICE_PARAMETERS_RESC_RATIO_MODE	ps3/rgl/include/export/RGL/rgl.h	131;"	d
PSGL_DEVICE_PARAMETERS_RESC_RENDER_WIDTH_HEIGHT	ps3/rgl/include/export/RGL/rgl.h	130;"	d
PSGL_DEVICE_PARAMETERS_TV_STANDARD	ps3/rgl/include/export/RGL/rgl.h	126;"	d
PSGL_DEVICE_PARAMETERS_WIDTH_HEIGHT	ps3/rgl/include/export/RGL/rgl.h	129;"	d
PSGL_EXPORT	ps3/rgl/include/export/RGL/export.h	4;"	d
PSGL_HW_CURSOR_ERROR_FAILURE	ps3/rgl/include/export/RGL/rgl.h	313;"	d
PSGL_HW_CURSOR_ERROR_INVALID_VALUE	ps3/rgl/include/export/RGL/rgl.h	314;"	d
PSGL_HW_CURSOR_OK	ps3/rgl/include/export/RGL/rgl.h	312;"	d
PSGL_INIT_ERROR_CONSOLE	ps3/rgl/include/export/RGL/rgl.h	254;"	d
PSGL_INIT_FIFO_SIZE	ps3/rgl/include/export/RGL/rgl.h	255;"	d
PSGL_INIT_HOST_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	256;"	d
PSGL_INIT_INITIALIZE_SPUS	ps3/rgl/include/export/RGL/rgl.h	251;"	d
PSGL_INIT_MAX_SPUS	ps3/rgl/include/export/RGL/rgl.h	250;"	d
PSGL_INIT_PERSISTENT_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	252;"	d
PSGL_INIT_TRANSIENT_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	253;"	d
PSGL_INIT_USE_PMQUERIES	ps3/rgl/include/export/RGL/rgl.h	257;"	d
PSGL_TV_STANDARD_1280x720_ON_VESA_1280x1024	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_1280x720_ON_VESA_1280x1024,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_1280x720_ON_VESA_1280x768	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_1280x720_ON_VESA_1280x768 = 128,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_1920x1080_ON_VESA_1920x1200	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_1920x1080_ON_VESA_1920x1200,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD1080I	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD1080I,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD1080P	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD1080P,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD480I	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD480I,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD480P	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD480P,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD576I	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD576I,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD576P	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD576P,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_HD720P	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_HD720P,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_NONE	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_NONE,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_NTSC_J	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_NTSC_J,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_NTSC_M	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_NTSC_M,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_B	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_B,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_D	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_D,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_G	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_G,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_H	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_H,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_I	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_I,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_M	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_M,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_N	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_N,$/;"	e	enum:PSGLtvStandard
PSGL_TV_STANDARD_PAL_NC	ps3/rgl/include/export/RGL/rgl.h	/^   PSGL_TV_STANDARD_PAL_NC,$/;"	e	enum:PSGLtvStandard
PSGL_VALIDATE_ALL	ps3/rgl/include/export/RGL/rgl.h	182;"	d
PSGL_VALIDATE_BLENDING	ps3/rgl/include/export/RGL/rgl.h	169;"	d
PSGL_VALIDATE_CLIP_PLANES	ps3/rgl/include/export/RGL/rgl.h	178;"	d
PSGL_VALIDATE_DEPTH_TEST	ps3/rgl/include/export/RGL/rgl.h	163;"	d
PSGL_VALIDATE_FACE_CULL	ps3/rgl/include/export/RGL/rgl.h	168;"	d
PSGL_VALIDATE_FFX_FRAGMENT_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	160;"	d
PSGL_VALIDATE_FFX_VERTEX_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	158;"	d
PSGL_VALIDATE_FRAGMENT_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	159;"	d
PSGL_VALIDATE_FRAGMENT_SHARED_CONSTANTS	ps3/rgl/include/export/RGL/rgl.h	161;"	d
PSGL_VALIDATE_FRAMEBUFFER	ps3/rgl/include/export/RGL/rgl.h	153;"	d
PSGL_VALIDATE_LINE_RASTER	ps3/rgl/include/export/RGL/rgl.h	171;"	d
PSGL_VALIDATE_LOGIC_OP	ps3/rgl/include/export/RGL/rgl.h	174;"	d
PSGL_VALIDATE_MULTISAMPLING	ps3/rgl/include/export/RGL/rgl.h	175;"	d
PSGL_VALIDATE_NONE	ps3/rgl/include/export/RGL/rgl.h	152;"	d
PSGL_VALIDATE_POINT_RASTER	ps3/rgl/include/export/RGL/rgl.h	170;"	d
PSGL_VALIDATE_POINT_SPRITE	ps3/rgl/include/export/RGL/rgl.h	180;"	d
PSGL_VALIDATE_POLYGON_MODE	ps3/rgl/include/export/RGL/rgl.h	176;"	d
PSGL_VALIDATE_POLYGON_OFFSET	ps3/rgl/include/export/RGL/rgl.h	172;"	d
PSGL_VALIDATE_PRIMITIVE_RESTART	ps3/rgl/include/export/RGL/rgl.h	177;"	d
PSGL_VALIDATE_SCISSOR_BOX	ps3/rgl/include/export/RGL/rgl.h	167;"	d
PSGL_VALIDATE_SHADER_SRGB_REMAP	ps3/rgl/include/export/RGL/rgl.h	179;"	d
PSGL_VALIDATE_SHADE_MODEL	ps3/rgl/include/export/RGL/rgl.h	173;"	d
PSGL_VALIDATE_STENCIL_OP_AND_MASK	ps3/rgl/include/export/RGL/rgl.h	166;"	d
PSGL_VALIDATE_STENCIL_TEST	ps3/rgl/include/export/RGL/rgl.h	165;"	d
PSGL_VALIDATE_TEXTURES_USED	ps3/rgl/include/export/RGL/rgl.h	154;"	d
PSGL_VALIDATE_TWO_SIDE_COLOR	ps3/rgl/include/export/RGL/rgl.h	181;"	d
PSGL_VALIDATE_VERTEX_CONSTANTS	ps3/rgl/include/export/RGL/rgl.h	156;"	d
PSGL_VALIDATE_VERTEX_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	155;"	d
PSGL_VALIDATE_VERTEX_TEXTURES_USED	ps3/rgl/include/export/RGL/rgl.h	157;"	d
PSGL_VALIDATE_VIEWPORT	ps3/rgl/include/export/RGL/rgl.h	162;"	d
PSGL_VALIDATE_WRITE_MASK	ps3/rgl/include/export/RGL/rgl.h	164;"	d
PSGLbufferingMode	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum PSGLbufferingMode$/;"	g
PSGLbufferingMode	ps3/rgl/include/export/RGL/rgl.h	/^} PSGLbufferingMode;$/;"	t	typeref:enum:PSGLbufferingMode
PSGLcontext	ps3/rgl/include/export/RGL/rgl.h	/^typedef struct PSGLcontext PSGLcontext;$/;"	t	typeref:struct:PSGLcontext
PSGLdevice	ps3/rgl/include/export/RGL/rgl.h	/^typedef struct PSGLdevice PSGLdevice;$/;"	t	typeref:struct:PSGLdevice
PSGLdeviceConnector	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum PSGLdeviceConnector$/;"	g
PSGLdeviceConnector	ps3/rgl/include/export/RGL/rgl.h	/^} PSGLdeviceConnector;$/;"	t	typeref:enum:PSGLdeviceConnector
PSGLdeviceParameters	ps3/rgl/include/export/RGL/rgl.h	/^} PSGLdeviceParameters;$/;"	t	typeref:struct:__anon72
PSGLfreeFunc	ps3/rgl/include/export/RGL/rgl.h	/^typedef void( *PSGLfreeFunc )( void* LBlock );$/;"	t
PSGLinitOptions	ps3/rgl/include/export/RGL/rgl.h	/^typedef struct PSGLinitOptions$/;"	s
PSGLinitOptions	ps3/rgl/include/export/RGL/rgl.h	/^} PSGLinitOptions;$/;"	t	typeref:struct:PSGLinitOptions
PSGLinitOptions::enable	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			enable;	\/\/ bitfield of options to set$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::errorConsole	ps3/rgl/include/export/RGL/rgl.h	/^   int				errorConsole;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::fifoSize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			fifoSize;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::hostMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			hostMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::initializeSPUs	ps3/rgl/include/export/RGL/rgl.h	/^   GLboolean		initializeSPUs;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::maxSPUs	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint 			maxSPUs;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::persistentMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			persistentMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
PSGLinitOptions::transientMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			transientMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
PSGLmallocFunc	ps3/rgl/include/export/RGL/rgl.h	/^typedef void*( *PSGLmallocFunc )( size_t LSize );		\/\/ expected to return 16-byte aligned$/;"	t
PSGLmemalignFunc	ps3/rgl/include/export/RGL/rgl.h	/^typedef void*( *PSGLmemalignFunc )( size_t align, size_t LSize );$/;"	t
PSGLreallocFunc	ps3/rgl/include/export/RGL/rgl.h	/^typedef void*( *PSGLreallocFunc )( void* LBlock, size_t LSize );$/;"	t
PSGLtvStandard	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum PSGLtvStandard$/;"	g
PSGLtvStandard	ps3/rgl/include/export/RGL/rgl.h	/^} PSGLtvStandard;$/;"	t	typeref:enum:PSGLtvStandard
PSM_HID_CONTROL	apple/iOS/bluetooth/btstack/hci_cmds.h	76;"	d
PSM_HID_INTERRUPT	apple/iOS/bluetooth/btstack/hci_cmds.h	77;"	d
PSM_RFCOMM	apple/iOS/bluetooth/btstack/hci_cmds.h	75;"	d
PSM_SDP	apple/iOS/bluetooth/btstack/hci_cmds.h	74;"	d
PSP_CTRL_CIRCLE	psp/sdk_defines.h	74;"	d
PSP_CTRL_CROSS	psp/sdk_defines.h	73;"	d
PSP_CTRL_DOWN	psp/sdk_defines.h	66;"	d
PSP_CTRL_L	psp/sdk_defines.h	75;"	d
PSP_CTRL_L	psp/sdk_defines.h	82;"	d
PSP_CTRL_LEFT	psp/sdk_defines.h	65;"	d
PSP_CTRL_R	psp/sdk_defines.h	76;"	d
PSP_CTRL_R	psp/sdk_defines.h	83;"	d
PSP_CTRL_RIGHT	psp/sdk_defines.h	67;"	d
PSP_CTRL_SELECT	psp/sdk_defines.h	70;"	d
PSP_CTRL_SQUARE	psp/sdk_defines.h	72;"	d
PSP_CTRL_START	psp/sdk_defines.h	69;"	d
PSP_CTRL_TRIANGLE	psp/sdk_defines.h	71;"	d
PSP_CTRL_UP	psp/sdk_defines.h	68;"	d
PSP_DISPLAY_PIXEL_FORMAT_8888	psp/sdk_defines.h	33;"	d
PSP_FB_HEIGHT	psp/sdk_defines.h	38;"	d
PSP_FB_HEIGHT	psp/sdk_defines.h	47;"	d
PSP_FB_WIDTH	psp/sdk_defines.h	37;"	d
PSP_FB_WIDTH	psp/sdk_defines.h	46;"	d
PSP_GAMEPAD_CIRCLE	psp/psp_input.h	/^   PSP_GAMEPAD_CIRCLE =			      1ULL << 8,$/;"	e	enum:__anon1
PSP_GAMEPAD_CROSS	psp/psp_input.h	/^   PSP_GAMEPAD_CROSS =			      1ULL << 0,$/;"	e	enum:__anon1
PSP_GAMEPAD_DPAD_DOWN	psp/psp_input.h	/^   PSP_GAMEPAD_DPAD_DOWN =		      1ULL << 5,$/;"	e	enum:__anon1
PSP_GAMEPAD_DPAD_LEFT	psp/psp_input.h	/^   PSP_GAMEPAD_DPAD_LEFT =		      1ULL << 6,$/;"	e	enum:__anon1
PSP_GAMEPAD_DPAD_RIGHT	psp/psp_input.h	/^   PSP_GAMEPAD_DPAD_RIGHT =		   1ULL << 7,$/;"	e	enum:__anon1
PSP_GAMEPAD_DPAD_UP	psp/psp_input.h	/^   PSP_GAMEPAD_DPAD_UP =		      1ULL << 4,$/;"	e	enum:__anon1
PSP_GAMEPAD_L	psp/psp_input.h	/^   PSP_GAMEPAD_L =			         1ULL << 10,$/;"	e	enum:__anon1
PSP_GAMEPAD_LSTICK_DOWN_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_LSTICK_DOWN_MASK =	1ULL << 19,$/;"	e	enum:__anon1
PSP_GAMEPAD_LSTICK_LEFT_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_LSTICK_LEFT_MASK =	1ULL << 16,$/;"	e	enum:__anon1
PSP_GAMEPAD_LSTICK_RIGHT_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_LSTICK_RIGHT_MASK =	1ULL << 17,$/;"	e	enum:__anon1
PSP_GAMEPAD_LSTICK_UP_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_LSTICK_UP_MASK	 =	   1ULL << 18,$/;"	e	enum:__anon1
PSP_GAMEPAD_R	psp/psp_input.h	/^   PSP_GAMEPAD_R =			         1ULL << 11,$/;"	e	enum:__anon1
PSP_GAMEPAD_RSTICK_DOWN_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_RSTICK_DOWN_MASK =	1ULL << 23,$/;"	e	enum:__anon1
PSP_GAMEPAD_RSTICK_LEFT_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_RSTICK_LEFT_MASK =	1ULL << 20,$/;"	e	enum:__anon1
PSP_GAMEPAD_RSTICK_RIGHT_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_RSTICK_RIGHT_MASK =	1ULL << 21,$/;"	e	enum:__anon1
PSP_GAMEPAD_RSTICK_UP_MASK	psp/psp_input.h	/^   PSP_GAMEPAD_RSTICK_UP_MASK 	=	1ULL << 22,$/;"	e	enum:__anon1
PSP_GAMEPAD_SELECT	psp/psp_input.h	/^   PSP_GAMEPAD_SELECT =			      1ULL << 2,$/;"	e	enum:__anon1
PSP_GAMEPAD_SQUARE	psp/psp_input.h	/^   PSP_GAMEPAD_SQUARE =			      1ULL << 1,$/;"	e	enum:__anon1
PSP_GAMEPAD_START	psp/psp_input.h	/^   PSP_GAMEPAD_START =			      1ULL << 3,$/;"	e	enum:__anon1
PSP_GAMEPAD_TRIANGLE	psp/psp_input.h	/^   PSP_GAMEPAD_TRIANGLE =		      1ULL << 9,$/;"	e	enum:__anon1
PSP_PITCH_PIXELS	psp/sdk_defines.h	39;"	d
PSP_PITCH_PIXELS	psp/sdk_defines.h	48;"	d
PSTRING	frontend/platform/platform_xdk.h	/^typedef STRING *PSTRING;$/;"	t
PSZ	frontend/platform/platform_xdk.h	/^typedef CHAR *PSZ;$/;"	t
PTRDIFF_MAX	msvc/msvc-stdint/stdint.h	191;"	d
PTRDIFF_MAX	msvc/msvc-stdint/stdint.h	194;"	d
PTRDIFF_MIN	msvc/msvc-stdint/stdint.h	190;"	d
PTRDIFF_MIN	msvc/msvc-stdint/stdint.h	193;"	d
PTR_NULL	ps3/sdk_defines.h	285;"	d
PTR_NULL	ps3/sdk_defines.h	315;"	d
PT_DYNAMIC	ps3/rgl/src/libelf/elf.h	93;"	d
PT_DYNAMIC	wii/app_booter/elf_abi.h	422;"	d
PT_HIOS	ps3/rgl/src/libelf/elf.h	99;"	d
PT_HIOS	wii/app_booter/elf_abi.h	430;"	d
PT_HIPROC	ps3/rgl/src/libelf/elf.h	101;"	d
PT_HIPROC	wii/app_booter/elf_abi.h	432;"	d
PT_INTERP	ps3/rgl/src/libelf/elf.h	94;"	d
PT_INTERP	wii/app_booter/elf_abi.h	423;"	d
PT_LOAD	ps3/rgl/src/libelf/elf.h	92;"	d
PT_LOAD	wii/app_booter/elf_abi.h	421;"	d
PT_LOOS	ps3/rgl/src/libelf/elf.h	98;"	d
PT_LOOS	wii/app_booter/elf_abi.h	429;"	d
PT_LOPROC	ps3/rgl/src/libelf/elf.h	100;"	d
PT_LOPROC	wii/app_booter/elf_abi.h	431;"	d
PT_NOTE	ps3/rgl/src/libelf/elf.h	95;"	d
PT_NOTE	wii/app_booter/elf_abi.h	424;"	d
PT_NULL	ps3/rgl/src/libelf/elf.h	91;"	d
PT_NULL	wii/app_booter/elf_abi.h	420;"	d
PT_NUM	wii/app_booter/elf_abi.h	428;"	d
PT_PHDR	ps3/rgl/src/libelf/elf.h	97;"	d
PT_PHDR	wii/app_booter/elf_abi.h	426;"	d
PT_SHLIB	ps3/rgl/src/libelf/elf.h	96;"	d
PT_SHLIB	wii/app_booter/elf_abi.h	425;"	d
PT_TLS	wii/app_booter/elf_abi.h	427;"	d
PULSE_CFLAGS	config.mk	/^PULSE_CFLAGS = $/;"	m
PULSE_LIBS	config.mk	/^PULSE_LIBS = $/;"	m
PURPLE	gfx/gfx_common.h	111;"	d
PUT_BITS	ps3/rgl/src/rgl_ps3.cpp	3415;"	d	file:
PXBE_CERTIFICATE	frontend/platform/platform_xdk.h	/^} XBE_CERTIFICATE, *PXBE_CERTIFICATE;$/;"	t	typeref:struct:_XBE_CERTIFICATE
PXBE_HEADER	frontend/platform/platform_xdk.h	/^} XBE_HEADER, *PXBE_HEADER;$/;"	t	typeref:struct:_XBE_HEADER
PXBE_SECTION	frontend/platform/platform_xdk.h	/^} XBE_SECTION, *PXBE_SECTION;$/;"	t	typeref:struct:_XBE_SECTION
PYTHON_CFLAGS	config.mk	/^PYTHON_CFLAGS = $/;"	m
PYTHON_LIBS	config.mk	/^PYTHON_LIBS = $/;"	m
PackedResource	xdk/xdk_resources.cpp	/^PackedResource::PackedResource()$/;"	f	class:PackedResource	signature:()
PackedResource	xdk/xdk_resources.h	/^      PackedResource();$/;"	p	class:PackedResource	access:public	signature:()
PackedResource	xdk/xdk_resources.h	/^class PackedResource$/;"	c
PackedResource::Create	xdk/xdk_resources.cpp	/^HRESULT PackedResource::Create( const char *strFilename,$/;"	f	class:PackedResource	signature:( const char *strFilename, DWORD dwNumResourceTags, XBRESOURCE* pResourceTags)
PackedResource::Create	xdk/xdk_resources.h	/^      HRESULT Create( const char * strFilename );$/;"	p	class:PackedResource	access:public	signature:( const char * strFilename )
PackedResource::Create	xdk/xdk_resources.h	/^      HRESULT Create( const char *strFilename, DWORD dwNumResourceTags = 0L, $/;"	p	class:PackedResource	access:public	signature:( const char *strFilename, DWORD dwNumResourceTags = 0L, XBRESOURCE* pResourceTags = NULL )
PackedResource::Destroy	xdk/xdk_resources.cpp	/^void PackedResource::Destroy()$/;"	f	class:PackedResource	signature:()
PackedResource::Destroy	xdk/xdk_resources.h	/^      void Destroy();$/;"	p	class:PackedResource	access:public	signature:()
PackedResource::GetData	xdk/xdk_resources.cpp	/^void *PackedResource::GetData( const char *strName ) const$/;"	f	class:PackedResource	signature:( const char *strName ) const
PackedResource::GetData	xdk/xdk_resources.h	/^      void *GetData( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
PackedResource::GetData	xdk/xdk_resources.h	/^      void *GetData( const CHAR* strName ) const;$/;"	p	class:PackedResource	access:public	signature:( const CHAR* strName ) const
PackedResource::GetResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE GetResource( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
PackedResource::GetResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE GetResource( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
PackedResource::GetResourceTags	xdk/xdk_resources.cpp	/^void PackedResource::GetResourceTags( DWORD* pdwNumResourceTags,$/;"	f	class:PackedResource	signature:( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags )
PackedResource::GetResourceTags	xdk/xdk_resources.h	/^      void GetResourceTags( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags );$/;"	p	class:PackedResource	access:public	signature:( DWORD* pdwNumResourceTags, XBRESOURCE** ppResourceTags )
PackedResource::GetTexture	xdk/xdk_resources.h	/^      LPDIRECT3DTEXTURE GetTexture( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
PackedResource::GetTexture	xdk/xdk_resources.h	/^      LPDIRECT3DTEXTURE GetTexture( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
PackedResource::GetVertexBuffer	xdk/xdk_resources.h	/^      LPDIRECT3DVERTEXBUFFER GetVertexBuffer( DWORD dwOffset ) const$/;"	f	class:PackedResource	access:public	signature:( DWORD dwOffset ) const
PackedResource::GetVertexBuffer	xdk/xdk_resources.h	/^      LPDIRECT3DVERTEXBUFFER GetVertexBuffer( const CHAR* strName ) const$/;"	f	class:PackedResource	access:public	signature:( const CHAR* strName ) const
PackedResource::Initialized	xdk/xdk_resources.cpp	/^BOOL PackedResource::Initialized() const$/;"	f	class:PackedResource	signature:() const
PackedResource::Initialized	xdk/xdk_resources.h	/^      BOOL    Initialized() const;$/;"	p	class:PackedResource	access:public	signature:() const
PackedResource::PackedResource	xdk/xdk_resources.cpp	/^PackedResource::PackedResource()$/;"	f	class:PackedResource	signature:()
PackedResource::PackedResource	xdk/xdk_resources.h	/^      PackedResource();$/;"	p	class:PackedResource	access:public	signature:()
PackedResource::RegisterResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE RegisterResource( LPDIRECT3DRESOURCE pResource ) const$/;"	f	class:PackedResource	access:public	signature:( LPDIRECT3DRESOURCE pResource ) const
PackedResource::m_bInitialized	xdk/xdk_resources.h	/^      BOOL m_bInitialized;       \/\/ Resource is fully initialized$/;"	m	class:PackedResource	access:protected
PackedResource::m_dwNumResourceTags	xdk/xdk_resources.h	/^      DWORD       m_dwNumResourceTags; \/\/ Number of resource tags$/;"	m	class:PackedResource	access:protected
PackedResource::m_dwSysMemDataSize	xdk/xdk_resources.h	/^      DWORD       m_dwSysMemDataSize;$/;"	m	class:PackedResource	access:protected
PackedResource::m_dwVidMemDataSize	xdk/xdk_resources.h	/^      DWORD       m_dwVidMemDataSize;$/;"	m	class:PackedResource	access:protected
PackedResource::m_pResourceTags	xdk/xdk_resources.h	/^      XBRESOURCE* m_pResourceTags;     \/\/ Tags to associate names with the resources$/;"	m	class:PackedResource	access:protected
PackedResource::m_pSysMemData	xdk/xdk_resources.h	/^      BYTE*       m_pSysMemData;        \/\/ Alloc'ed memory for resource headers etc.$/;"	m	class:PackedResource	access:protected
PackedResource::m_pVidMemData	xdk/xdk_resources.h	/^      BYTE*       m_pVidMemData;        \/\/ Alloc'ed memory for resource data, etc.$/;"	m	class:PackedResource	access:protected
PackedResource::~PackedResource	xdk/xdk_resources.cpp	/^PackedResource::~PackedResource()$/;"	f	class:PackedResource	signature:()
PackedResource::~PackedResource	xdk/xdk_resources.h	/^      ~PackedResource();$/;"	p	class:PackedResource	access:public	signature:()
ParseFunction	frontend/platform/platform_xdk.h	/^	void *ParseFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
Pass	gfx/d3d9/render_chain.hpp	/^      struct Pass$/;"	s	class:RenderChain	access:private
PathId	frontend/platform/platform_xdk.h	/^    \/*003*\/ UCHAR PathId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
PathPreferenceFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^public final class PathPreferenceFragment extends PreferenceListFragment implements OnPreferenceClickListener$/;"	c	inherits:PreferenceListFragment,OnPreferenceClickListener
PathPreferenceFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:PathPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
PathPreferenceFragment.onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:PathPreferenceFragment	access:public	signature:(Preference preference)
PcExeFilename	frontend/platform/platform_xdk.h	/^	PCSZ PcExeFilename;$/;"	m	struct:_XBE_HEADER	access:public
PcExeFilenameUnicode	frontend/platform/platform_xdk.h	/^	PWSTR PcExeFilenameUnicode;$/;"	m	struct:_XBE_HEADER	access:public
PcExePath	frontend/platform/platform_xdk.h	/^	PCSZ PcExePath;$/;"	m	struct:_XBE_HEADER	access:public
PeBaseAddress	frontend/platform/platform_xdk.h	/^	PVOID PeBaseAddress;$/;"	m	struct:_XBE_HEADER	access:public
PeChecksum	frontend/platform/platform_xdk.h	/^	ULONG PeChecksum;$/;"	m	struct:_XBE_HEADER	access:public
PeImageSize	frontend/platform/platform_xdk.h	/^	ULONG PeImageSize;$/;"	m	struct:_XBE_HEADER	access:public
PeTimestamp	frontend/platform/platform_xdk.h	/^	ULONG PeTimestamp;$/;"	m	struct:_XBE_HEADER	access:public
Period	frontend/platform/platform_xdk.h	/^    LONG Period;$/;"	m	struct:_KTIMER	access:public
PixelFormat	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	g	class:RenderChain	access:public
PixelUnpackBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	PixelUnpackBuffer;$/;"	m	struct:RGLcontext	access:public
PlayBegin	audio/xaudio-c/xaudio.h	/^   UINT32 PlayBegin;$/;"	m	struct:XAUDIO2_BUFFER	access:public
PlayLength	audio/xaudio-c/xaudio.h	/^   UINT32 PlayLength;$/;"	m	struct:XAUDIO2_BUFFER	access:public
Point2	gfx/lima_gfx.c	/^} Point2;$/;"	t	typeref:struct:_point2	file:
Pointer	frontend/platform/platform_xdk.h	/^        PVOID Pointer;$/;"	m	union:_IO_STATUS_BLOCK::__anon9	access:public
PopulateDataForParamArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^void PopulateDataForParamArray( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, int elementResourceIndex, unsigned int* localParamNo, char* nvBinary, CgBinaryParameter** nvParams, char** nvParamStrings, CgBinaryEmbeddedConstant** nvParamOffsets, float** nvParamDefaults, char* prefix, unsigned int prefixLength, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, ELF_section_t* consttab )
PopulateDataForParamResource	ps3/rgl/src/rgl_ps3_cg.cpp	/^void PopulateDataForParamResource( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, int elementResourceIndex, unsigned int* localParamNo, char* nvBinary, CgBinaryParameter** nvParams, char** nvParamStrings, CgBinaryEmbeddedConstant** nvParamOffsets, float** nvParamDefaults, char* prefix, unsigned int prefixLength, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, ELF_section_t* consttab )
PopulateDataForParamStruct	ps3/rgl/src/rgl_ps3_cg.cpp	/^void PopulateDataForParamStruct( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, int elementResourceIndex, unsigned int* localParamNo, char* nvBinary, CgBinaryParameter** nvParams, char** nvParamStrings, CgBinaryEmbeddedConstant** nvParamOffsets, float** nvParamDefaults, char* prefix, unsigned int prefixLength, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, ELF_section_t* consttab )
PopulateDataForParams	ps3/rgl/src/rgl_ps3_cg.cpp	/^void PopulateDataForParams( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	f	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, int elementResourceIndex, unsigned int* localParamNo, char* nvBinary, CgBinaryParameter** nvParams, char** nvParamStrings, CgBinaryEmbeddedConstant** nvParamOffsets, float** nvParamDefaults, char* prefix, unsigned int prefixLength, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, ELF_section_t* consttab )
PopulateDataForParams	ps3/rgl/src/rgl_ps3_cg.cpp	/^void PopulateDataForParams( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount,$/;"	p	file:	signature:( CgParameterEntry* paramEntry, CgParameterEntry* paramEntries, unsigned int paramEntriesCount, unsigned short* paramResourceTable, ELF_section_t* strtab, CgParameterEntry** nextEntry, int elementResourceIndex, unsigned int* localParamNo, char* nvBinary, CgBinaryParameter** nvParams, char** nvParamStrings, CgBinaryEmbeddedConstant** nvParamOffsets, float** nvParamDefaults, char* prefix, unsigned int prefixLength, CgParameterSemantic* semanticIndexTable, unsigned int semanticIndexCount, CgParameterDefaultValue* defaultIndexTable, unsigned int defaultIndexCount, ELF_section_t* consttab )
PreferenceActivity	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^public final class PreferenceActivity extends ActionBarActivity implements TabListener, OnSharedPreferenceChangeListener$/;"	c	inherits:ActionBarActivity,TabListener,OnSharedPreferenceChangeListener
PreferenceActivity.PreferencesAdapter	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	private final class PreferencesAdapter extends FragmentPagerAdapter$/;"	c	class:PreferenceActivity	inherits:FragmentPagerAdapter	access:private
PreferenceActivity.PreferencesAdapter.PreferencesAdapter	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public PreferencesAdapter(FragmentManager fm)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(FragmentManager fm)
PreferenceActivity.PreferencesAdapter.getCount	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public int getCount()$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:()
PreferenceActivity.PreferencesAdapter.getItem	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public Fragment getItem(int fragmentId)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(int fragmentId)
PreferenceActivity.PreferencesAdapter.getPageTitle	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public CharSequence getPageTitle(int position)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(int position)
PreferenceActivity.onCreate	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:PreferenceActivity	access:public	signature:(Bundle savedInstanceState)
PreferenceActivity.onSharedPreferenceChanged	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key)$/;"	m	class:PreferenceActivity	access:public	signature:(SharedPreferences sharedPreferences, String key)
PreferenceActivity.onTabReselected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabReselected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
PreferenceActivity.onTabSelected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabSelected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
PreferenceActivity.onTabUnselected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabUnselected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
PreferenceActivity.viewPager	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	private ViewPager viewPager;$/;"	f	class:PreferenceActivity	file:	access:private
PreferenceListFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^public abstract class PreferenceListFragment extends Fragment implements PreferenceManagerCompat.OnPreferenceTreeClickListener$/;"	c	inherits:Fragment,PreferenceManagerCompat.OnPreferenceTreeClickListener
PreferenceListFragment.FIRST_REQUEST_CODE	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final int FIRST_REQUEST_CODE = 100;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.MSG_BIND_PREFERENCES	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final int MSG_BIND_PREFERENCES = 1;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.OnPreferenceStartFragmentCallback	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public interface OnPreferenceStartFragmentCallback$/;"	i	class:PreferenceListFragment	access:public
PreferenceListFragment.OnPreferenceStartFragmentCallback.onPreferenceStartFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^        boolean onPreferenceStartFragment(PreferenceListFragment caller, Preference pref);$/;"	m	interface:PreferenceListFragment.OnPreferenceStartFragmentCallback	access:public	signature:(PreferenceListFragment caller, Preference pref)
PreferenceListFragment.PREFERENCES_TAG	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private static final String PREFERENCES_TAG = "android:preferences";$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.addPreferencesFromIntent	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void addPreferencesFromIntent(Intent intent)$/;"	m	class:PreferenceListFragment	access:public	signature:(Intent intent)
PreferenceListFragment.addPreferencesFromResource	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void addPreferencesFromResource(int preferencesResId)$/;"	m	class:PreferenceListFragment	access:public	signature:(int preferencesResId)
PreferenceListFragment.bindPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void bindPreferences()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
PreferenceListFragment.ensureList	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void ensureList()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
PreferenceListFragment.findPreference	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public Preference findPreference(CharSequence key)$/;"	m	class:PreferenceListFragment	access:public	signature:(CharSequence key)
PreferenceListFragment.getListView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public ListView getListView()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.getPreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public PreferenceManager getPreferenceManager()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.getPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public PreferenceScreen getPreferenceScreen()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.mHandler	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private Handler mHandler = new Handler()$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mHavePrefs	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private boolean mHavePrefs;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mInitDone	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private boolean mInitDone;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mList	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private ListView mList;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mListOnKeyListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private OnKeyListener mListOnKeyListener = new OnKeyListener()$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mPreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private PreferenceManager mPreferenceManager;$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.mRequestFocus	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    final private Runnable mRequestFocus = new Runnable()$/;"	f	class:PreferenceListFragment	file:	access:private
PreferenceListFragment.onActivityCreated	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onActivityCreated(Bundle savedInstanceState)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle savedInstanceState)
PreferenceListFragment.onActivityResult	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onActivityResult(int requestCode, int resultCode, Intent data)$/;"	m	class:PreferenceListFragment	access:public	signature:(int requestCode, int resultCode, Intent data)
PreferenceListFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onCreate(Bundle paramBundle)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle paramBundle)
PreferenceListFragment.onCreateView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)$/;"	m	class:PreferenceListFragment	access:public	signature:(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
PreferenceListFragment.onDestroy	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onDestroy()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.onDestroyView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onDestroyView()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.onPreferenceTreeClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference)$/;"	m	class:PreferenceListFragment	access:public	signature:(PreferenceScreen preferenceScreen, Preference preference)
PreferenceListFragment.onSaveInstanceState	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onSaveInstanceState(Bundle outState)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle outState)
PreferenceListFragment.onStart	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onStart()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.onStop	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onStop()$/;"	m	class:PreferenceListFragment	access:public	signature:()
PreferenceListFragment.postBindPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void postBindPreferences()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
PreferenceListFragment.requirePreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void requirePreferenceManager()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
PreferenceListFragment.setPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void setPreferenceScreen(PreferenceScreen preferenceScreen)$/;"	m	class:PreferenceListFragment	access:public	signature:(PreferenceScreen preferenceScreen)
PreferenceManagerCompat	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^class PreferenceManagerCompat$/;"	c
PreferenceManagerCompat.OnPreferenceTreeClickListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    interface OnPreferenceTreeClickListener$/;"	i	class:PreferenceManagerCompat	access:default
PreferenceManagerCompat.OnPreferenceTreeClickListener.onPreferenceTreeClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^        boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference);$/;"	m	interface:PreferenceManagerCompat.OnPreferenceTreeClickListener	access:public	signature:(PreferenceScreen preferenceScreen, Preference preference)
PreferenceManagerCompat.TAG	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    private static final String TAG = PreferenceManagerCompat.class.getSimpleName();$/;"	f	class:PreferenceManagerCompat	file:	access:private
PreferenceManagerCompat.dispatchActivityDestroy	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityDestroy(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
PreferenceManagerCompat.dispatchActivityResult	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityResult(PreferenceManager manager, int requestCode, int resultCode, Intent data)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, int requestCode, int resultCode, Intent data)
PreferenceManagerCompat.dispatchActivityStop	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityStop(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
PreferenceManagerCompat.getPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen getPreferenceScreen(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
PreferenceManagerCompat.inflateFromIntent	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen inflateFromIntent(PreferenceManager manager, Intent intent, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, Intent intent, PreferenceScreen screen)
PreferenceManagerCompat.inflateFromResource	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen inflateFromResource(PreferenceManager manager, Activity activity, int resId, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, Activity activity, int resId, PreferenceScreen screen)
PreferenceManagerCompat.newInstance	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceManager newInstance(Activity activity, int firstRequestCode)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(Activity activity, int firstRequestCode)
PreferenceManagerCompat.setFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void setFragment(PreferenceManager manager, PreferenceListFragment fragment)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, PreferenceListFragment fragment)
PreferenceManagerCompat.setOnPreferenceTreeClickListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void setOnPreferenceTreeClickListener(PreferenceManager manager, final OnPreferenceTreeClickListener listener)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, final OnPreferenceTreeClickListener listener)
PreferenceManagerCompat.setPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static boolean setPreferences(PreferenceManager manager, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, PreferenceScreen screen)
PreferencesAdapter	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public PreferencesAdapter(FragmentManager fm)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(FragmentManager fm)
PreferencesAdapter	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	private final class PreferencesAdapter extends FragmentPagerAdapter$/;"	c	class:PreferenceActivity	inherits:FragmentPagerAdapter	access:private
Put	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Put;                     \/* put offset, write only           0040-0043*\/$/;"	m	struct:__anon54	access:public
PyInit_Retro	gfx/py_state/py_state.c	/^static PyObject* PyInit_Retro(void)$/;"	f	file:	signature:(void)
Q	Makefile	/^   Q := @$/;"	m
QB_CONFIG_H__	config.h	2;"	d
QMAKESTR	ps3/altivec_mem.h	57;"	d
QMAKE_TARGET	blackberry-qnx/bb10/Makefile	/^QMAKE_TARGET  = RetroArch-Cascades$/;"	m
QMAKE_TARGET	blackberry-qnx/bb10/translations/Makefile	/^QMAKE_TARGET  = RetroArch-Cascades$/;"	m
QUIT	apple/common/apple_export.h	/^   QUIT = 4$/;"	e	enum:basic_event_t
R	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
RARCH_ANALOG_LEFT_X_MINUS	driver.h	/^   RARCH_ANALOG_LEFT_X_MINUS,$/;"	e	enum:__anon84
RARCH_ANALOG_LEFT_X_PLUS	driver.h	/^   RARCH_ANALOG_LEFT_X_PLUS = RARCH_FIRST_CUSTOM_BIND,$/;"	e	enum:__anon84
RARCH_ANALOG_LEFT_Y_MINUS	driver.h	/^   RARCH_ANALOG_LEFT_Y_MINUS,$/;"	e	enum:__anon84
RARCH_ANALOG_LEFT_Y_PLUS	driver.h	/^   RARCH_ANALOG_LEFT_Y_PLUS,$/;"	e	enum:__anon84
RARCH_ANALOG_RIGHT_X_MINUS	driver.h	/^   RARCH_ANALOG_RIGHT_X_MINUS,$/;"	e	enum:__anon84
RARCH_ANALOG_RIGHT_X_PLUS	driver.h	/^   RARCH_ANALOG_RIGHT_X_PLUS,$/;"	e	enum:__anon84
RARCH_ANALOG_RIGHT_Y_MINUS	driver.h	/^   RARCH_ANALOG_RIGHT_Y_MINUS,$/;"	e	enum:__anon84
RARCH_ANALOG_RIGHT_Y_PLUS	driver.h	/^   RARCH_ANALOG_RIGHT_Y_PLUS,$/;"	e	enum:__anon84
RARCH_API_CALLTYPE	audio/ext/rarch_dsp.h	19;"	d
RARCH_API_CALLTYPE	audio/ext/rarch_dsp.h	22;"	d
RARCH_API_EXPORT	audio/ext/rarch_dsp.h	15;"	d
RARCH_API_EXPORT	audio/ext/rarch_dsp.h	17;"	d
RARCH_API_EXPORT	audio/ext/rarch_dsp.h	21;"	d
RARCH_AUDIO_THREAD_H__	audio/thread_wrapper.h	17;"	d
RARCH_BIND_LIST_END	driver.h	/^   RARCH_BIND_LIST_END,$/;"	e	enum:__anon84
RARCH_BIND_LIST_END_NULL	driver.h	/^   RARCH_BIND_LIST_END_NULL$/;"	e	enum:__anon84
RARCH_CART_BSX	general.h	/^   RARCH_CART_BSX,$/;"	e	enum:rarch_game_type
RARCH_CART_BSX_SLOTTED	general.h	/^   RARCH_CART_BSX_SLOTTED,$/;"	e	enum:rarch_game_type
RARCH_CART_NORMAL	general.h	/^   RARCH_CART_NORMAL = 0,$/;"	e	enum:rarch_game_type
RARCH_CART_SGB	general.h	/^   RARCH_CART_SGB,$/;"	e	enum:rarch_game_type
RARCH_CART_SUFAMI	general.h	/^   RARCH_CART_SUFAMI$/;"	e	enum:rarch_game_type
RARCH_CHEAT_INDEX_MINUS	driver.h	/^   RARCH_CHEAT_INDEX_MINUS,$/;"	e	enum:__anon84
RARCH_CHEAT_INDEX_PLUS	driver.h	/^   RARCH_CHEAT_INDEX_PLUS,$/;"	e	enum:__anon84
RARCH_CHEAT_TOGGLE	driver.h	/^   RARCH_CHEAT_TOGGLE,$/;"	e	enum:__anon84
RARCH_COMMAND_H__	command.h	17;"	d
RARCH_CUSTOM_BIND_LIST_END	driver.h	/^   RARCH_CUSTOM_BIND_LIST_END,$/;"	e	enum:__anon84
RARCH_DEFAULT_CONF_PATH_STR	retroarch.c	610;"	d	file:
RARCH_DEFAULT_CONF_PATH_STR	retroarch.c	615;"	d	file:
RARCH_DEFAULT_PORT	retroarch.c	1565;"	d	file:
RARCH_DEVICE_POINTER_SCREEN	driver.h	48;"	d
RARCH_DIR	android/phoenix/jni/Android.mk	/^RARCH_DIR := ..\/..\/..$/;"	m
RARCH_DISK_EJECT_TOGGLE	driver.h	/^   RARCH_DISK_EJECT_TOGGLE,$/;"	e	enum:__anon84
RARCH_DISK_NEXT	driver.h	/^   RARCH_DISK_NEXT,$/;"	e	enum:__anon84
RARCH_DISPLAY_NONE	driver.h	/^   RARCH_DISPLAY_NONE = 0, \/\/ Non-bindable types like consoles, KMS, VideoCore, etc.$/;"	e	enum:rarch_display_type
RARCH_DISPLAY_OSX	driver.h	/^   RARCH_DISPLAY_OSX \/\/ ?!$/;"	e	enum:rarch_display_type
RARCH_DISPLAY_WIN32	driver.h	/^   RARCH_DISPLAY_WIN32, \/\/ video_display => N\/A, video_window => HWND$/;"	e	enum:rarch_display_type
RARCH_DISPLAY_X11	driver.h	/^   RARCH_DISPLAY_X11, \/\/ video_display => Display*, video_window => Window$/;"	e	enum:rarch_display_type
RARCH_DSP_API_VERSION	audio/ext/rarch_dsp.h	33;"	d
RARCH_DSP_CONFIG	driver.h	/^   RARCH_DSP_CONFIG,$/;"	e	enum:__anon84
RARCH_ENABLE_HOTKEY	driver.h	/^   RARCH_ENABLE_HOTKEY,$/;"	e	enum:__anon84
RARCH_ERR	console/logger/logger_override.h	32;"	d
RARCH_ERR	console/logger/logger_override.h	46;"	d
RARCH_ERR	logger/ios_logger_override.h	/^static inline void RARCH_ERR(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
RARCH_ERR	logger/xdk1_logger_override.h	/^static inline void RARCH_ERR(const char *msg, ...)$/;"	f	signature:(const char *msg, ...)
RARCH_ERR	retroarch_logger.h	103;"	d
RARCH_ERR	retroarch_logger.h	106;"	d
RARCH_ERR	retroarch_logger.h	116;"	d
RARCH_ERR_V	logger/ios_logger_override.h	/^static inline void RARCH_ERR_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_ERR_V	logger/xdk1_logger_override.h	/^static inline void RARCH_ERR_V(const char *tag, const char *fmt, ...)$/;"	f	signature:(const char *tag, const char *fmt, ...)
RARCH_ERR_V	retroarch_logger.h	101;"	d
RARCH_ERR_V	retroarch_logger.h	104;"	d
RARCH_ERR_V	retroarch_logger.h	110;"	d
RARCH_ERR_V	retroarch_logger.h	120;"	d
RARCH_FALSE	audio/ext/rarch_dsp.h	26;"	d
RARCH_FAST_FORWARD_HOLD_KEY	driver.h	/^   RARCH_FAST_FORWARD_HOLD_KEY,$/;"	e	enum:__anon84
RARCH_FAST_FORWARD_KEY	driver.h	/^   RARCH_FAST_FORWARD_KEY = RARCH_FIRST_META_KEY,$/;"	e	enum:__anon84
RARCH_FILTER_LINEAR	gfx/shader_parse.h	/^   RARCH_FILTER_LINEAR,$/;"	e	enum:gfx_filter_type
RARCH_FILTER_NEAREST	gfx/shader_parse.h	/^   RARCH_FILTER_NEAREST$/;"	e	enum:gfx_filter_type
RARCH_FILTER_UNSPEC	gfx/shader_parse.h	/^   RARCH_FILTER_UNSPEC = 0,$/;"	e	enum:gfx_filter_type
RARCH_FIRST_CUSTOM_BIND	driver.h	54;"	d
RARCH_FIRST_META_KEY	driver.h	55;"	d
RARCH_FRAMEADVANCE	driver.h	/^   RARCH_FRAMEADVANCE,$/;"	e	enum:__anon84
RARCH_FULLSCREEN_TOGGLE_KEY	driver.h	/^   RARCH_FULLSCREEN_TOGGLE_KEY,$/;"	e	enum:__anon84
RARCH_GL_FORMAT16	gfx/gl_common.h	273;"	d
RARCH_GL_FORMAT16	gfx/gl_common.h	288;"	d
RARCH_GL_FORMAT16	gfx/gl_common.h	296;"	d
RARCH_GL_FORMAT32	gfx/gl_common.h	272;"	d
RARCH_GL_FORMAT32	gfx/gl_common.h	287;"	d
RARCH_GL_FORMAT32	gfx/gl_common.h	295;"	d
RARCH_GL_INTERNAL_FORMAT16	gfx/gl_common.h	269;"	d
RARCH_GL_INTERNAL_FORMAT16	gfx/gl_common.h	284;"	d
RARCH_GL_INTERNAL_FORMAT16	gfx/gl_common.h	292;"	d
RARCH_GL_INTERNAL_FORMAT32	gfx/gl_common.h	268;"	d
RARCH_GL_INTERNAL_FORMAT32	gfx/gl_common.h	280;"	d
RARCH_GL_INTERNAL_FORMAT32	gfx/gl_common.h	282;"	d
RARCH_GL_INTERNAL_FORMAT32	gfx/gl_common.h	291;"	d
RARCH_GL_TEXTURE_TYPE16	gfx/gl_common.h	271;"	d
RARCH_GL_TEXTURE_TYPE16	gfx/gl_common.h	286;"	d
RARCH_GL_TEXTURE_TYPE16	gfx/gl_common.h	294;"	d
RARCH_GL_TEXTURE_TYPE32	gfx/gl_common.h	270;"	d
RARCH_GL_TEXTURE_TYPE32	gfx/gl_common.h	285;"	d
RARCH_GL_TEXTURE_TYPE32	gfx/gl_common.h	293;"	d
RARCH_GRAB_MOUSE_TOGGLE	driver.h	/^   RARCH_GRAB_MOUSE_TOGGLE,$/;"	e	enum:__anon84
RARCH_HLSL_MAX_SHADERS	gfx/shader_hlsl.h	26;"	d
RARCH_LAST_PLATFORM_KEY	gx/gx_input.h	/^   RARCH_LAST_PLATFORM_KEY$/;"	e	enum:gx_device_id
RARCH_LOAD_STATE_KEY	driver.h	/^   RARCH_LOAD_STATE_KEY,$/;"	e	enum:__anon84
RARCH_LOG	android/phoenix/jni/apk-extract/apk-extract.c	10;"	d	file:
RARCH_LOG	android/phoenix/jni/apk-extract/apk-extract.c	11;"	d	file:
RARCH_LOG	audio/sinc.c	32;"	d	file:
RARCH_LOG	console/logger/logger_override.h	24;"	d
RARCH_LOG	console/logger/logger_override.h	42;"	d
RARCH_LOG	logger/ios_logger_override.h	/^static inline void RARCH_LOG(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
RARCH_LOG	logger/xdk1_logger_override.h	/^static inline void RARCH_LOG(const char *msg, ...)$/;"	f	signature:(const char *msg, ...)
RARCH_LOG	retroarch_logger.h	51;"	d
RARCH_LOG	retroarch_logger.h	54;"	d
RARCH_LOG	retroarch_logger.h	64;"	d
RARCH_LOG_OUTPUT	console/logger/logger_override.h	28;"	d
RARCH_LOG_OUTPUT	console/logger/logger_override.h	54;"	d
RARCH_LOG_OUTPUT	logger/ios_logger_override.h	/^static inline void RARCH_LOG_OUTPUT(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
RARCH_LOG_OUTPUT	logger/xdk1_logger_override.h	/^static inline void RARCH_LOG_OUTPUT(const char *msg, ...)$/;"	f	signature:(const char *msg, ...)
RARCH_LOG_OUTPUT	retroarch_logger.h	85;"	d
RARCH_LOG_OUTPUT	retroarch_logger.h	88;"	d
RARCH_LOG_OUTPUT_V	logger/ios_logger_override.h	/^static inline void RARCH_LOG_OUTPUT_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_LOG_OUTPUT_V	logger/xdk1_logger_override.h	/^static inline void RARCH_LOG_OUTPUT_V(const char *tag, const char *msg, va_list ap)$/;"	f	signature:(const char *tag, const char *msg, va_list ap)
RARCH_LOG_OUTPUT_V	retroarch_logger.h	83;"	d
RARCH_LOG_OUTPUT_V	retroarch_logger.h	86;"	d
RARCH_LOG_OUTPUT_V	retroarch_logger.h	92;"	d
RARCH_LOG_V	logger/ios_logger_override.h	/^static inline void RARCH_LOG_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_LOG_V	logger/xdk1_logger_override.h	/^static inline void RARCH_LOG_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_LOG_V	retroarch_logger.h	49;"	d
RARCH_LOG_V	retroarch_logger.h	52;"	d
RARCH_LOG_V	retroarch_logger.h	58;"	d
RARCH_LOG_V	retroarch_logger.h	71;"	d
RARCH_LOG_VERBOSE	retroarch_logger.h	43;"	d
RARCH_LOG_VERBOSE	retroarch_logger.h	45;"	d
RARCH_MENU_TOGGLE	driver.h	/^   RARCH_MENU_TOGGLE,$/;"	e	enum:__anon84
RARCH_MOVIE_PLAYBACK	movie.h	/^   RARCH_MOVIE_PLAYBACK,$/;"	e	enum:rarch_movie_type
RARCH_MOVIE_RECORD	movie.h	/^   RARCH_MOVIE_RECORD$/;"	e	enum:rarch_movie_type
RARCH_MOVIE_RECORD_TOGGLE	driver.h	/^   RARCH_MOVIE_RECORD_TOGGLE,$/;"	e	enum:__anon84
RARCH_MUTE	driver.h	/^   RARCH_MUTE,$/;"	e	enum:__anon84
RARCH_NETPLAY_FLIP	driver.h	/^   RARCH_NETPLAY_FLIP,$/;"	e	enum:__anon84
RARCH_OVERLAY_NEXT	driver.h	/^   RARCH_OVERLAY_NEXT,$/;"	e	enum:__anon84
RARCH_PATH	android/native/jni/Android.mk	/^RARCH_PATH  := ..\/..\/..$/;"	m
RARCH_PAUSE_TOGGLE	driver.h	/^   RARCH_PAUSE_TOGGLE,$/;"	e	enum:__anon84
RARCH_PERFORMANCE_INIT	performance.h	55;"	d
RARCH_PERFORMANCE_INIT	performance.h	64;"	d
RARCH_PERFORMANCE_START	performance.h	61;"	d
RARCH_PERFORMANCE_START	performance.h	65;"	d
RARCH_PERFORMANCE_STOP	performance.h	62;"	d
RARCH_PERFORMANCE_STOP	performance.h	66;"	d
RARCH_QUIT_KEY	driver.h	/^   RARCH_QUIT_KEY,$/;"	e	enum:__anon84
RARCH_RESET	driver.h	/^   RARCH_RESET,$/;"	e	enum:__anon84
RARCH_REWIND	driver.h	/^   RARCH_REWIND,$/;"	e	enum:__anon84
RARCH_SAVE_STATE_KEY	driver.h	/^   RARCH_SAVE_STATE_KEY,$/;"	e	enum:__anon84
RARCH_SCALE_ABSOLUTE	gfx/shader_parse.h	/^   RARCH_SCALE_ABSOLUTE,$/;"	e	enum:gfx_scale_type
RARCH_SCALE_BASE	miscellaneous.h	58;"	d
RARCH_SCALE_INPUT	gfx/shader_parse.h	/^   RARCH_SCALE_INPUT = 0,$/;"	e	enum:gfx_scale_type
RARCH_SCALE_VIEWPORT	gfx/shader_parse.h	/^   RARCH_SCALE_VIEWPORT$/;"	e	enum:gfx_scale_type
RARCH_SCREENSHOT	driver.h	/^   RARCH_SCREENSHOT,$/;"	e	enum:__anon84
RARCH_SHADER_CG	driver.h	/^   RARCH_SHADER_CG,$/;"	e	enum:rarch_shader_type
RARCH_SHADER_GLSL	driver.h	/^   RARCH_SHADER_GLSL,$/;"	e	enum:rarch_shader_type
RARCH_SHADER_HLSL	driver.h	/^   RARCH_SHADER_HLSL,$/;"	e	enum:rarch_shader_type
RARCH_SHADER_NEXT	driver.h	/^   RARCH_SHADER_NEXT,$/;"	e	enum:__anon84
RARCH_SHADER_NONE	driver.h	/^   RARCH_SHADER_NONE$/;"	e	enum:rarch_shader_type
RARCH_SHADER_PREV	driver.h	/^   RARCH_SHADER_PREV,$/;"	e	enum:__anon84
RARCH_SLOWMOTION	driver.h	/^   RARCH_SLOWMOTION,$/;"	e	enum:__anon84
RARCH_STATE_CAPTURE	gfx/state_tracker.h	/^   RARCH_STATE_CAPTURE = 0,$/;"	e	enum:state_tracker_type
RARCH_STATE_CAPTURE_PREV	gfx/state_tracker.h	/^   RARCH_STATE_CAPTURE_PREV,$/;"	e	enum:state_tracker_type
RARCH_STATE_INPUT_SLOT1	gfx/state_tracker.h	/^   RARCH_STATE_INPUT_SLOT1,$/;"	e	enum:state_ram_type
RARCH_STATE_INPUT_SLOT2	gfx/state_tracker.h	/^   RARCH_STATE_INPUT_SLOT2$/;"	e	enum:state_ram_type
RARCH_STATE_NONE	gfx/state_tracker.h	/^   RARCH_STATE_NONE,$/;"	e	enum:state_ram_type
RARCH_STATE_PYTHON	gfx/state_tracker.h	/^   RARCH_STATE_PYTHON$/;"	e	enum:state_tracker_type
RARCH_STATE_SLOT_MINUS	driver.h	/^   RARCH_STATE_SLOT_MINUS,$/;"	e	enum:__anon84
RARCH_STATE_SLOT_PLUS	driver.h	/^   RARCH_STATE_SLOT_PLUS,$/;"	e	enum:__anon84
RARCH_STATE_TRANSITION	gfx/state_tracker.h	/^   RARCH_STATE_TRANSITION,$/;"	e	enum:state_tracker_type
RARCH_STATE_TRANSITION_COUNT	gfx/state_tracker.h	/^   RARCH_STATE_TRANSITION_COUNT,$/;"	e	enum:state_tracker_type
RARCH_STATE_TRANSITION_PREV	gfx/state_tracker.h	/^   RARCH_STATE_TRANSITION_PREV,$/;"	e	enum:state_tracker_type
RARCH_STATE_WRAM	gfx/state_tracker.h	/^   RARCH_STATE_WRAM,$/;"	e	enum:state_ram_type
RARCH_STRCASESTR_H	compat/strcasestr.h	17;"	d
RARCH_TRUE	audio/ext/rarch_dsp.h	30;"	d
RARCH_TURBO_ENABLE	driver.h	/^   RARCH_TURBO_ENABLE,$/;"	e	enum:__anon84
RARCH_VIDEO_THREAD_H__	gfx/thread_wrapper.h	17;"	d
RARCH_VOLUME_DOWN	driver.h	/^   RARCH_VOLUME_DOWN,$/;"	e	enum:__anon84
RARCH_VOLUME_UP	driver.h	/^   RARCH_VOLUME_UP,$/;"	e	enum:__anon84
RARCH_WARN	console/logger/logger_override.h	36;"	d
RARCH_WARN	console/logger/logger_override.h	50;"	d
RARCH_WARN	logger/ios_logger_override.h	/^static inline void RARCH_WARN(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
RARCH_WARN	logger/xdk1_logger_override.h	/^static inline void RARCH_WARN(const char *msg, ...)$/;"	f	signature:(const char *msg, ...)
RARCH_WARN	retroarch_logger.h	131;"	d
RARCH_WARN	retroarch_logger.h	134;"	d
RARCH_WARN	retroarch_logger.h	144;"	d
RARCH_WARN_V	logger/ios_logger_override.h	/^static inline void RARCH_WARN_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_WARN_V	logger/xdk1_logger_override.h	/^static inline void RARCH_WARN_V(const char *tag, const char *fmt, va_list ap)$/;"	f	signature:(const char *tag, const char *fmt, va_list ap)
RARCH_WARN_V	retroarch_logger.h	129;"	d
RARCH_WARN_V	retroarch_logger.h	132;"	d
RARCH_WARN_V	retroarch_logger.h	138;"	d
RARCH_WARN_V	retroarch_logger.h	148;"	d
RARCH_WRAP_BORDER	gfx/shader_parse.h	/^   RARCH_WRAP_BORDER = 0, \/\/ Kinda deprecated, but keep as default. Will be translated to EDGE in GLES.$/;"	e	enum:gfx_wrap_type
RARCH_WRAP_DEFAULT	gfx/shader_parse.h	/^   RARCH_WRAP_DEFAULT = RARCH_WRAP_BORDER,$/;"	e	enum:gfx_wrap_type
RARCH_WRAP_EDGE	gfx/shader_parse.h	/^   RARCH_WRAP_EDGE,$/;"	e	enum:gfx_wrap_type
RARCH_WRAP_MIRRORED_REPEAT	gfx/shader_parse.h	/^   RARCH_WRAP_MIRRORED_REPEAT$/;"	e	enum:gfx_wrap_type
RARCH_WRAP_REPEAT	gfx/shader_parse.h	/^   RARCH_WRAP_REPEAT,$/;"	e	enum:gfx_wrap_type
RARCH_XDK_RESOURCE_H	xdk/xdk_resources.h	18;"	d
RATE	audio/librsound.c	305;"	d	file:
RD3DDevice_Clear	xdk/xdk_defines.h	50;"	d
RD3DDevice_Clear	xdk/xdk_defines.h	90;"	d
RD3DDevice_DrawPrimitive	xdk/xdk_defines.h	49;"	d
RD3DDevice_DrawPrimitive	xdk/xdk_defines.h	89;"	d
RD3DDevice_Present	xdk/xdk_defines.h	52;"	d
RD3DDevice_Present	xdk/xdk_defines.h	92;"	d
RD3DDevice_SetSamplerState_AddressU	xdk/xdk_defines.h	55;"	d
RD3DDevice_SetSamplerState_AddressU	xdk/xdk_defines.h	95;"	d
RD3DDevice_SetSamplerState_AddressV	xdk/xdk_defines.h	56;"	d
RD3DDevice_SetSamplerState_AddressV	xdk/xdk_defines.h	96;"	d
RD3DDevice_SetSamplerState_MagFilter	xdk/xdk_defines.h	54;"	d
RD3DDevice_SetSamplerState_MagFilter	xdk/xdk_defines.h	94;"	d
RD3DDevice_SetSamplerState_MinFilter	xdk/xdk_defines.h	53;"	d
RD3DDevice_SetSamplerState_MinFilter	xdk/xdk_defines.h	93;"	d
RD3DDevice_SetTexture	xdk/xdk_defines.h	48;"	d
RD3DDevice_SetTexture	xdk/xdk_defines.h	84;"	d
RD3DDevice_SetTransform	xdk/xdk_defines.h	43;"	d
RD3DDevice_SetVertexShader	xdk/xdk_defines.h	45;"	d
RD3DDevice_SetViewport	xdk/xdk_defines.h	51;"	d
RD3DDevice_SetViewport	xdk/xdk_defines.h	91;"	d
RD3DVertexBuffer_Lock	xdk/xdk_defines.h	46;"	d
RD3DVertexBuffer_Lock	xdk/xdk_defines.h	82;"	d
RD3DVertexBuffer_Unlock	xdk/xdk_defines.h	47;"	d
RD3DVertexBuffer_Unlock	xdk/xdk_defines.h	83;"	d
READELF_H	ps3/rgl/src/libelf/readelf.h	2;"	d
READ_ACL_CONNECTION_HANDLE	apple/iOS/bluetooth/btstack/utils.h	94;"	d
READ_ACL_FLAGS	apple/iOS/bluetooth/btstack/utils.h	95;"	d
READ_ACL_LENGTH	apple/iOS/bluetooth/btstack/utils.h	96;"	d
READ_BT_16	apple/iOS/bluetooth/btstack/utils.h	74;"	d
READ_BT_24	apple/iOS/bluetooth/btstack/utils.h	75;"	d
READ_BT_32	apple/iOS/bluetooth/btstack/utils.h	76;"	d
READ_CMD_OCF	apple/iOS/bluetooth/btstack/utils.h	84;"	d
READ_CMD_OGF	apple/iOS/bluetooth/btstack/utils.h	83;"	d
READ_L2CAP_CHANNEL_ID	apple/iOS/bluetooth/btstack/utils.h	100;"	d
READ_L2CAP_LENGTH	apple/iOS/bluetooth/btstack/utils.h	99;"	d
READ_NET_16	apple/iOS/bluetooth/btstack/utils.h	79;"	d
READ_NET_32	apple/iOS/bluetooth/btstack/utils.h	80;"	d
READ_PREFETCH_START1	ps3/altivec_mem.h	90;"	d
READ_PREFETCH_START2	ps3/altivec_mem.h	91;"	d
RED	gfx/gfx_common.h	107;"	d
REG_S	performance.c	220;"	d	file:
REG_b	performance.c	219;"	d	file:
RENDER_CHAIN_HPP__	gfx/d3d9/render_chain.hpp	17;"	d
RESC_INTERLACE_MODE_INTERLACE_FILTER	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_INTERLACE_MODE_INTERLACE_FILTER,$/;"	e	enum:RescInterlaceMode
RESC_INTERLACE_MODE_NORMAL_BILINEAR	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_INTERLACE_MODE_NORMAL_BILINEAR,$/;"	e	enum:RescInterlaceMode
RESC_PAL_TEMPORAL_MODE_50_NONE	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_PAL_TEMPORAL_MODE_50_NONE,  \/\/ default - no conversion$/;"	e	enum:RescPalTemporalMode
RESC_PAL_TEMPORAL_MODE_60_DROP	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_PAL_TEMPORAL_MODE_60_DROP,$/;"	e	enum:RescPalTemporalMode
RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE,$/;"	e	enum:RescPalTemporalMode
RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE_30_DROP	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE_30_DROP,$/;"	e	enum:RescPalTemporalMode
RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE_DROP_FLEXIBLE	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_PAL_TEMPORAL_MODE_60_INTERPOLATE_DROP_FLEXIBLE,$/;"	e	enum:RescPalTemporalMode
RESC_RATIO_MODE_FULLSCREEN	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_RATIO_MODE_FULLSCREEN,$/;"	e	enum:RescRatioMode
RESC_RATIO_MODE_LETTERBOX	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_RATIO_MODE_LETTERBOX,  \/\/ default$/;"	e	enum:RescRatioMode
RESC_RATIO_MODE_PANSCAN	ps3/rgl/include/export/RGL/rgl.h	/^   RESC_RATIO_MODE_PANSCAN,$/;"	e	enum:RescRatioMode
RESET	apple/common/apple_export.h	/^   RESET = 1,$/;"	e	enum:basic_event_t
RESOURCETYPE_EOF	xdk/xdk_resources.h	/^   RESOURCETYPE_EOF            = 0xffffffff$/;"	e	enum:__anon27
RESOURCETYPE_INDEXBUFFER	xdk/xdk_resources.h	/^   RESOURCETYPE_INDEXBUFFER    = ( ( 'I' << 24 ) | ( 'B' << 16 ) | ( 'U' << 8 ) | ( 'F' ) ),$/;"	e	enum:__anon27
RESOURCETYPE_TEXTURE	xdk/xdk_resources.h	/^   RESOURCETYPE_TEXTURE        = ( ( 'T' << 24 ) | ( 'X' << 16 ) | ( '2' << 8 ) | ( 'D' ) ),$/;"	e	enum:__anon27
RESOURCETYPE_USERDATA	xdk/xdk_resources.h	/^   RESOURCETYPE_USERDATA       = ( ( 'U' << 24 ) | ( 'S' << 16 ) | ( 'E' << 8 ) | ( 'R' ) ),$/;"	e	enum:__anon27
RESOURCETYPE_VERTEXBUFFER	xdk/xdk_resources.h	/^   RESOURCETYPE_VERTEXBUFFER   = ( ( 'V' << 24 ) | ( 'B' << 16 ) | ( 'U' << 8 ) | ( 'F' ) ),$/;"	e	enum:__anon27
RETROARCH_BUTTON_MAP	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	RETROARCH_BUTTON_MAP,$/;"	e	enum:__anon95
RETROARCH_EXIT	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	RETROARCH_EXIT$/;"	e	enum:__anon95
RETROARCH_RUNNING	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	RETROARCH_RUNNING,$/;"	e	enum:__anon95
RETROARCH_START_REQUESTED	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	RETROARCH_START_REQUESTED,$/;"	e	enum:__anon95
RETROKMOD_ALT	libretro.h	/^   RETROKMOD_ALT        = 0x04,$/;"	e	enum:retro_mod
RETROKMOD_CAPSLOCK	libretro.h	/^   RETROKMOD_CAPSLOCK   = 0x20,$/;"	e	enum:retro_mod
RETROKMOD_CTRL	libretro.h	/^   RETROKMOD_CTRL       = 0x02,$/;"	e	enum:retro_mod
RETROKMOD_DUMMY	libretro.h	/^   RETROKMOD_DUMMY = INT_MAX \/\/ Ensure sizeof(enum) == sizeof(int)$/;"	e	enum:retro_mod
RETROKMOD_META	libretro.h	/^   RETROKMOD_META       = 0x08,$/;"	e	enum:retro_mod
RETROKMOD_NONE	libretro.h	/^   RETROKMOD_NONE       = 0x0000,$/;"	e	enum:retro_mod
RETROKMOD_NUMLOCK	libretro.h	/^   RETROKMOD_NUMLOCK    = 0x10,$/;"	e	enum:retro_mod
RETROKMOD_SCROLLOCK	libretro.h	/^   RETROKMOD_SCROLLOCK  = 0x40,$/;"	e	enum:retro_mod
RETROKMOD_SHIFT	libretro.h	/^   RETROKMOD_SHIFT      = 0x01,$/;"	e	enum:retro_mod
RETROK_0	libretro.h	/^   RETROK_0              = 48,$/;"	e	enum:retro_key
RETROK_1	libretro.h	/^   RETROK_1              = 49,$/;"	e	enum:retro_key
RETROK_2	libretro.h	/^   RETROK_2              = 50,$/;"	e	enum:retro_key
RETROK_3	libretro.h	/^   RETROK_3              = 51,$/;"	e	enum:retro_key
RETROK_4	libretro.h	/^   RETROK_4              = 52,$/;"	e	enum:retro_key
RETROK_5	libretro.h	/^   RETROK_5              = 53,$/;"	e	enum:retro_key
RETROK_6	libretro.h	/^   RETROK_6              = 54,$/;"	e	enum:retro_key
RETROK_7	libretro.h	/^   RETROK_7              = 55,$/;"	e	enum:retro_key
RETROK_8	libretro.h	/^   RETROK_8              = 56,$/;"	e	enum:retro_key
RETROK_9	libretro.h	/^   RETROK_9              = 57,$/;"	e	enum:retro_key
RETROK_AMPERSAND	libretro.h	/^   RETROK_AMPERSAND      = 38,$/;"	e	enum:retro_key
RETROK_ASTERISK	libretro.h	/^   RETROK_ASTERISK       = 42,$/;"	e	enum:retro_key
RETROK_AT	libretro.h	/^   RETROK_AT             = 64,$/;"	e	enum:retro_key
RETROK_BACKQUOTE	libretro.h	/^   RETROK_BACKQUOTE      = 96,$/;"	e	enum:retro_key
RETROK_BACKSLASH	libretro.h	/^   RETROK_BACKSLASH      = 92,$/;"	e	enum:retro_key
RETROK_BACKSPACE	libretro.h	/^   RETROK_BACKSPACE      = 8,$/;"	e	enum:retro_key
RETROK_BREAK	libretro.h	/^   RETROK_BREAK          = 318,$/;"	e	enum:retro_key
RETROK_CAPSLOCK	libretro.h	/^   RETROK_CAPSLOCK       = 301,$/;"	e	enum:retro_key
RETROK_CARET	libretro.h	/^   RETROK_CARET          = 94,$/;"	e	enum:retro_key
RETROK_CLEAR	libretro.h	/^   RETROK_CLEAR          = 12,$/;"	e	enum:retro_key
RETROK_COLON	libretro.h	/^   RETROK_COLON          = 58,$/;"	e	enum:retro_key
RETROK_COMMA	libretro.h	/^   RETROK_COMMA          = 44,$/;"	e	enum:retro_key
RETROK_COMPOSE	libretro.h	/^   RETROK_COMPOSE        = 314,$/;"	e	enum:retro_key
RETROK_DELETE	libretro.h	/^   RETROK_DELETE         = 127,$/;"	e	enum:retro_key
RETROK_DOLLAR	libretro.h	/^   RETROK_DOLLAR         = 36,$/;"	e	enum:retro_key
RETROK_DOWN	libretro.h	/^   RETROK_DOWN           = 274,$/;"	e	enum:retro_key
RETROK_DUMMY	libretro.h	/^   RETROK_DUMMY          = INT_MAX \/\/ Ensure sizeof(enum) == sizeof(int)$/;"	e	enum:retro_key
RETROK_END	libretro.h	/^   RETROK_END            = 279,$/;"	e	enum:retro_key
RETROK_EQUALS	libretro.h	/^   RETROK_EQUALS         = 61,$/;"	e	enum:retro_key
RETROK_ESCAPE	libretro.h	/^   RETROK_ESCAPE         = 27,$/;"	e	enum:retro_key
RETROK_EURO	libretro.h	/^   RETROK_EURO           = 321,$/;"	e	enum:retro_key
RETROK_EXCLAIM	libretro.h	/^   RETROK_EXCLAIM        = 33,$/;"	e	enum:retro_key
RETROK_F1	libretro.h	/^   RETROK_F1             = 282,$/;"	e	enum:retro_key
RETROK_F10	libretro.h	/^   RETROK_F10            = 291,$/;"	e	enum:retro_key
RETROK_F11	libretro.h	/^   RETROK_F11            = 292,$/;"	e	enum:retro_key
RETROK_F12	libretro.h	/^   RETROK_F12            = 293,$/;"	e	enum:retro_key
RETROK_F13	libretro.h	/^   RETROK_F13            = 294,$/;"	e	enum:retro_key
RETROK_F14	libretro.h	/^   RETROK_F14            = 295,$/;"	e	enum:retro_key
RETROK_F15	libretro.h	/^   RETROK_F15            = 296,$/;"	e	enum:retro_key
RETROK_F2	libretro.h	/^   RETROK_F2             = 283,$/;"	e	enum:retro_key
RETROK_F3	libretro.h	/^   RETROK_F3             = 284,$/;"	e	enum:retro_key
RETROK_F4	libretro.h	/^   RETROK_F4             = 285,$/;"	e	enum:retro_key
RETROK_F5	libretro.h	/^   RETROK_F5             = 286,$/;"	e	enum:retro_key
RETROK_F6	libretro.h	/^   RETROK_F6             = 287,$/;"	e	enum:retro_key
RETROK_F7	libretro.h	/^   RETROK_F7             = 288,$/;"	e	enum:retro_key
RETROK_F8	libretro.h	/^   RETROK_F8             = 289,$/;"	e	enum:retro_key
RETROK_F9	libretro.h	/^   RETROK_F9             = 290,$/;"	e	enum:retro_key
RETROK_FIRST	libretro.h	/^   RETROK_FIRST          = 0,$/;"	e	enum:retro_key
RETROK_GREATER	libretro.h	/^   RETROK_GREATER        = 62,$/;"	e	enum:retro_key
RETROK_HASH	libretro.h	/^   RETROK_HASH           = 35,$/;"	e	enum:retro_key
RETROK_HELP	libretro.h	/^   RETROK_HELP           = 315,$/;"	e	enum:retro_key
RETROK_HOME	libretro.h	/^   RETROK_HOME           = 278,$/;"	e	enum:retro_key
RETROK_INSERT	libretro.h	/^   RETROK_INSERT         = 277,$/;"	e	enum:retro_key
RETROK_KP0	libretro.h	/^   RETROK_KP0            = 256,$/;"	e	enum:retro_key
RETROK_KP1	libretro.h	/^   RETROK_KP1            = 257,$/;"	e	enum:retro_key
RETROK_KP2	libretro.h	/^   RETROK_KP2            = 258,$/;"	e	enum:retro_key
RETROK_KP3	libretro.h	/^   RETROK_KP3            = 259,$/;"	e	enum:retro_key
RETROK_KP4	libretro.h	/^   RETROK_KP4            = 260,$/;"	e	enum:retro_key
RETROK_KP5	libretro.h	/^   RETROK_KP5            = 261,$/;"	e	enum:retro_key
RETROK_KP6	libretro.h	/^   RETROK_KP6            = 262,$/;"	e	enum:retro_key
RETROK_KP7	libretro.h	/^   RETROK_KP7            = 263,$/;"	e	enum:retro_key
RETROK_KP8	libretro.h	/^   RETROK_KP8            = 264,$/;"	e	enum:retro_key
RETROK_KP9	libretro.h	/^   RETROK_KP9            = 265,$/;"	e	enum:retro_key
RETROK_KP_DIVIDE	libretro.h	/^   RETROK_KP_DIVIDE      = 267,$/;"	e	enum:retro_key
RETROK_KP_ENTER	libretro.h	/^   RETROK_KP_ENTER       = 271,$/;"	e	enum:retro_key
RETROK_KP_EQUALS	libretro.h	/^   RETROK_KP_EQUALS      = 272,$/;"	e	enum:retro_key
RETROK_KP_MINUS	libretro.h	/^   RETROK_KP_MINUS       = 269,$/;"	e	enum:retro_key
RETROK_KP_MULTIPLY	libretro.h	/^   RETROK_KP_MULTIPLY    = 268,$/;"	e	enum:retro_key
RETROK_KP_PERIOD	libretro.h	/^   RETROK_KP_PERIOD      = 266,$/;"	e	enum:retro_key
RETROK_KP_PLUS	libretro.h	/^   RETROK_KP_PLUS        = 270,$/;"	e	enum:retro_key
RETROK_LALT	libretro.h	/^   RETROK_LALT           = 308,$/;"	e	enum:retro_key
RETROK_LAST	libretro.h	/^   RETROK_LAST,$/;"	e	enum:retro_key
RETROK_LCTRL	libretro.h	/^   RETROK_LCTRL          = 306,$/;"	e	enum:retro_key
RETROK_LEFT	libretro.h	/^   RETROK_LEFT           = 276,$/;"	e	enum:retro_key
RETROK_LEFTBRACKET	libretro.h	/^   RETROK_LEFTBRACKET    = 91,$/;"	e	enum:retro_key
RETROK_LEFTPAREN	libretro.h	/^   RETROK_LEFTPAREN      = 40,$/;"	e	enum:retro_key
RETROK_LESS	libretro.h	/^   RETROK_LESS           = 60,$/;"	e	enum:retro_key
RETROK_LMETA	libretro.h	/^   RETROK_LMETA          = 310,$/;"	e	enum:retro_key
RETROK_LSHIFT	libretro.h	/^   RETROK_LSHIFT         = 304,$/;"	e	enum:retro_key
RETROK_LSUPER	libretro.h	/^   RETROK_LSUPER         = 311,$/;"	e	enum:retro_key
RETROK_MENU	libretro.h	/^   RETROK_MENU           = 319,$/;"	e	enum:retro_key
RETROK_MINUS	libretro.h	/^   RETROK_MINUS          = 45,$/;"	e	enum:retro_key
RETROK_MODE	libretro.h	/^   RETROK_MODE           = 313,$/;"	e	enum:retro_key
RETROK_NUMLOCK	libretro.h	/^   RETROK_NUMLOCK        = 300,$/;"	e	enum:retro_key
RETROK_PAGEDOWN	libretro.h	/^   RETROK_PAGEDOWN       = 281,$/;"	e	enum:retro_key
RETROK_PAGEUP	libretro.h	/^   RETROK_PAGEUP         = 280,$/;"	e	enum:retro_key
RETROK_PAUSE	libretro.h	/^   RETROK_PAUSE          = 19,$/;"	e	enum:retro_key
RETROK_PERIOD	libretro.h	/^   RETROK_PERIOD         = 46,$/;"	e	enum:retro_key
RETROK_PLUS	libretro.h	/^   RETROK_PLUS           = 43,$/;"	e	enum:retro_key
RETROK_POWER	libretro.h	/^   RETROK_POWER          = 320,$/;"	e	enum:retro_key
RETROK_PRINT	libretro.h	/^   RETROK_PRINT          = 316,$/;"	e	enum:retro_key
RETROK_QUESTION	libretro.h	/^   RETROK_QUESTION       = 63,$/;"	e	enum:retro_key
RETROK_QUOTE	libretro.h	/^   RETROK_QUOTE          = 39,$/;"	e	enum:retro_key
RETROK_QUOTEDBL	libretro.h	/^   RETROK_QUOTEDBL       = 34,$/;"	e	enum:retro_key
RETROK_RALT	libretro.h	/^   RETROK_RALT           = 307,$/;"	e	enum:retro_key
RETROK_RCTRL	libretro.h	/^   RETROK_RCTRL          = 305,$/;"	e	enum:retro_key
RETROK_RETURN	libretro.h	/^   RETROK_RETURN         = 13,$/;"	e	enum:retro_key
RETROK_RIGHT	libretro.h	/^   RETROK_RIGHT          = 275,$/;"	e	enum:retro_key
RETROK_RIGHTBRACKET	libretro.h	/^   RETROK_RIGHTBRACKET   = 93,$/;"	e	enum:retro_key
RETROK_RIGHTPAREN	libretro.h	/^   RETROK_RIGHTPAREN     = 41,$/;"	e	enum:retro_key
RETROK_RMETA	libretro.h	/^   RETROK_RMETA          = 309,$/;"	e	enum:retro_key
RETROK_RSHIFT	libretro.h	/^   RETROK_RSHIFT         = 303,$/;"	e	enum:retro_key
RETROK_RSUPER	libretro.h	/^   RETROK_RSUPER         = 312,$/;"	e	enum:retro_key
RETROK_SCROLLOCK	libretro.h	/^   RETROK_SCROLLOCK      = 302,$/;"	e	enum:retro_key
RETROK_SEMICOLON	libretro.h	/^   RETROK_SEMICOLON      = 59,$/;"	e	enum:retro_key
RETROK_SLASH	libretro.h	/^   RETROK_SLASH          = 47,$/;"	e	enum:retro_key
RETROK_SPACE	libretro.h	/^   RETROK_SPACE          = 32,$/;"	e	enum:retro_key
RETROK_SYSREQ	libretro.h	/^   RETROK_SYSREQ         = 317,$/;"	e	enum:retro_key
RETROK_TAB	libretro.h	/^   RETROK_TAB            = 9,$/;"	e	enum:retro_key
RETROK_UNDERSCORE	libretro.h	/^   RETROK_UNDERSCORE     = 95,$/;"	e	enum:retro_key
RETROK_UNDO	libretro.h	/^   RETROK_UNDO           = 322,$/;"	e	enum:retro_key
RETROK_UNKNOWN	libretro.h	/^   RETROK_UNKNOWN        = 0,$/;"	e	enum:retro_key
RETROK_UP	libretro.h	/^   RETROK_UP             = 273,$/;"	e	enum:retro_key
RETROK_a	libretro.h	/^   RETROK_a              = 97,$/;"	e	enum:retro_key
RETROK_b	libretro.h	/^   RETROK_b              = 98,$/;"	e	enum:retro_key
RETROK_c	libretro.h	/^   RETROK_c              = 99,$/;"	e	enum:retro_key
RETROK_d	libretro.h	/^   RETROK_d              = 100,$/;"	e	enum:retro_key
RETROK_e	libretro.h	/^   RETROK_e              = 101,$/;"	e	enum:retro_key
RETROK_f	libretro.h	/^   RETROK_f              = 102,$/;"	e	enum:retro_key
RETROK_g	libretro.h	/^   RETROK_g              = 103,$/;"	e	enum:retro_key
RETROK_h	libretro.h	/^   RETROK_h              = 104,$/;"	e	enum:retro_key
RETROK_i	libretro.h	/^   RETROK_i              = 105,$/;"	e	enum:retro_key
RETROK_j	libretro.h	/^   RETROK_j              = 106,$/;"	e	enum:retro_key
RETROK_k	libretro.h	/^   RETROK_k              = 107,$/;"	e	enum:retro_key
RETROK_l	libretro.h	/^   RETROK_l              = 108,$/;"	e	enum:retro_key
RETROK_m	libretro.h	/^   RETROK_m              = 109,$/;"	e	enum:retro_key
RETROK_n	libretro.h	/^   RETROK_n              = 110,$/;"	e	enum:retro_key
RETROK_o	libretro.h	/^   RETROK_o              = 111,$/;"	e	enum:retro_key
RETROK_p	libretro.h	/^   RETROK_p              = 112,$/;"	e	enum:retro_key
RETROK_q	libretro.h	/^   RETROK_q              = 113,$/;"	e	enum:retro_key
RETROK_r	libretro.h	/^   RETROK_r              = 114,$/;"	e	enum:retro_key
RETROK_s	libretro.h	/^   RETROK_s              = 115,$/;"	e	enum:retro_key
RETROK_t	libretro.h	/^   RETROK_t              = 116,$/;"	e	enum:retro_key
RETROK_u	libretro.h	/^   RETROK_u              = 117,$/;"	e	enum:retro_key
RETROK_v	libretro.h	/^   RETROK_v              = 118,$/;"	e	enum:retro_key
RETROK_w	libretro.h	/^   RETROK_w              = 119,$/;"	e	enum:retro_key
RETROK_x	libretro.h	/^   RETROK_x              = 120,$/;"	e	enum:retro_key
RETROK_y	libretro.h	/^   RETROK_y              = 121,$/;"	e	enum:retro_key
RETROK_z	libretro.h	/^   RETROK_z              = 122,$/;"	e	enum:retro_key
RETROLAUNCH_OBJ	Makefile	/^RETROLAUNCH_OBJ = tools\/retrolaunch\/main.o \\$/;"	m
RETRO_API_VERSION	libretro.h	45;"	d
RETRO_CAMERA_BUFFER_DUMMY	libretro.h	/^   RETRO_CAMERA_BUFFER_DUMMY = INT_MAX$/;"	e	enum:retro_camera_buffer
RETRO_CAMERA_BUFFER_OPENGL_TEXTURE	libretro.h	/^   RETRO_CAMERA_BUFFER_OPENGL_TEXTURE = 0,$/;"	e	enum:retro_camera_buffer
RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER	libretro.h	/^   RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER,$/;"	e	enum:retro_camera_buffer
RETRO_DEF_ANALOGL_DPAD_DOWN	config.def.h	561;"	d
RETRO_DEF_ANALOGL_DPAD_LEFT	config.def.h	558;"	d
RETRO_DEF_ANALOGL_DPAD_RIGHT	config.def.h	559;"	d
RETRO_DEF_ANALOGL_DPAD_UP	config.def.h	560;"	d
RETRO_DEF_ANALOGR_DPAD_DOWN	config.def.h	565;"	d
RETRO_DEF_ANALOGR_DPAD_LEFT	config.def.h	562;"	d
RETRO_DEF_ANALOGR_DPAD_RIGHT	config.def.h	563;"	d
RETRO_DEF_ANALOGR_DPAD_UP	config.def.h	564;"	d
RETRO_DEF_JOYPAD_A	config.def.h	533;"	d
RETRO_DEF_JOYPAD_A	config.def.h	550;"	d
RETRO_DEF_JOYPAD_B	config.def.h	525;"	d
RETRO_DEF_JOYPAD_B	config.def.h	542;"	d
RETRO_DEF_JOYPAD_DOWN	config.def.h	530;"	d
RETRO_DEF_JOYPAD_DOWN	config.def.h	547;"	d
RETRO_DEF_JOYPAD_L	config.def.h	535;"	d
RETRO_DEF_JOYPAD_L	config.def.h	552;"	d
RETRO_DEF_JOYPAD_L2	config.def.h	537;"	d
RETRO_DEF_JOYPAD_L2	config.def.h	554;"	d
RETRO_DEF_JOYPAD_L3	config.def.h	539;"	d
RETRO_DEF_JOYPAD_L3	config.def.h	556;"	d
RETRO_DEF_JOYPAD_LEFT	config.def.h	531;"	d
RETRO_DEF_JOYPAD_LEFT	config.def.h	548;"	d
RETRO_DEF_JOYPAD_R	config.def.h	536;"	d
RETRO_DEF_JOYPAD_R	config.def.h	553;"	d
RETRO_DEF_JOYPAD_R2	config.def.h	538;"	d
RETRO_DEF_JOYPAD_R2	config.def.h	555;"	d
RETRO_DEF_JOYPAD_R3	config.def.h	540;"	d
RETRO_DEF_JOYPAD_R3	config.def.h	557;"	d
RETRO_DEF_JOYPAD_RIGHT	config.def.h	532;"	d
RETRO_DEF_JOYPAD_RIGHT	config.def.h	549;"	d
RETRO_DEF_JOYPAD_SELECT	config.def.h	527;"	d
RETRO_DEF_JOYPAD_SELECT	config.def.h	544;"	d
RETRO_DEF_JOYPAD_START	config.def.h	528;"	d
RETRO_DEF_JOYPAD_START	config.def.h	545;"	d
RETRO_DEF_JOYPAD_UP	config.def.h	529;"	d
RETRO_DEF_JOYPAD_UP	config.def.h	546;"	d
RETRO_DEF_JOYPAD_X	config.def.h	534;"	d
RETRO_DEF_JOYPAD_X	config.def.h	551;"	d
RETRO_DEF_JOYPAD_Y	config.def.h	526;"	d
RETRO_DEF_JOYPAD_Y	config.def.h	543;"	d
RETRO_DEVICE_ANALOG	libretro.h	73;"	d
RETRO_DEVICE_ID_ANALOG_X	libretro.h	133;"	d
RETRO_DEVICE_ID_ANALOG_Y	libretro.h	134;"	d
RETRO_DEVICE_ID_JOYPAD_A	libretro.h	121;"	d
RETRO_DEVICE_ID_JOYPAD_B	libretro.h	113;"	d
RETRO_DEVICE_ID_JOYPAD_DOWN	libretro.h	118;"	d
RETRO_DEVICE_ID_JOYPAD_L	libretro.h	123;"	d
RETRO_DEVICE_ID_JOYPAD_L2	libretro.h	125;"	d
RETRO_DEVICE_ID_JOYPAD_L3	libretro.h	127;"	d
RETRO_DEVICE_ID_JOYPAD_LEFT	libretro.h	119;"	d
RETRO_DEVICE_ID_JOYPAD_R	libretro.h	124;"	d
RETRO_DEVICE_ID_JOYPAD_R2	libretro.h	126;"	d
RETRO_DEVICE_ID_JOYPAD_R3	libretro.h	128;"	d
RETRO_DEVICE_ID_JOYPAD_RIGHT	libretro.h	120;"	d
RETRO_DEVICE_ID_JOYPAD_SELECT	libretro.h	115;"	d
RETRO_DEVICE_ID_JOYPAD_START	libretro.h	116;"	d
RETRO_DEVICE_ID_JOYPAD_UP	libretro.h	117;"	d
RETRO_DEVICE_ID_JOYPAD_X	libretro.h	122;"	d
RETRO_DEVICE_ID_JOYPAD_Y	libretro.h	114;"	d
RETRO_DEVICE_ID_LIGHTGUN_CURSOR	libretro.h	146;"	d
RETRO_DEVICE_ID_LIGHTGUN_PAUSE	libretro.h	148;"	d
RETRO_DEVICE_ID_LIGHTGUN_START	libretro.h	149;"	d
RETRO_DEVICE_ID_LIGHTGUN_TRIGGER	libretro.h	145;"	d
RETRO_DEVICE_ID_LIGHTGUN_TURBO	libretro.h	147;"	d
RETRO_DEVICE_ID_LIGHTGUN_X	libretro.h	143;"	d
RETRO_DEVICE_ID_LIGHTGUN_Y	libretro.h	144;"	d
RETRO_DEVICE_ID_MOUSE_LEFT	libretro.h	139;"	d
RETRO_DEVICE_ID_MOUSE_RIGHT	libretro.h	140;"	d
RETRO_DEVICE_ID_MOUSE_X	libretro.h	137;"	d
RETRO_DEVICE_ID_MOUSE_Y	libretro.h	138;"	d
RETRO_DEVICE_ID_POINTER_PRESSED	libretro.h	154;"	d
RETRO_DEVICE_ID_POINTER_X	libretro.h	152;"	d
RETRO_DEVICE_ID_POINTER_Y	libretro.h	153;"	d
RETRO_DEVICE_ID_SENSOR_ACCELEROMETER_X	libretro.h	157;"	d
RETRO_DEVICE_ID_SENSOR_ACCELEROMETER_Y	libretro.h	158;"	d
RETRO_DEVICE_ID_SENSOR_ACCELEROMETER_Z	libretro.h	159;"	d
RETRO_DEVICE_INDEX_ANALOG_LEFT	libretro.h	131;"	d
RETRO_DEVICE_INDEX_ANALOG_RIGHT	libretro.h	132;"	d
RETRO_DEVICE_JOYPAD	libretro.h	53;"	d
RETRO_DEVICE_JOYPAD_MULTITAP	libretro.h	105;"	d
RETRO_DEVICE_KEYBOARD	libretro.h	63;"	d
RETRO_DEVICE_LIGHTGUN	libretro.h	66;"	d
RETRO_DEVICE_LIGHTGUN_JUSTIFIER	libretro.h	107;"	d
RETRO_DEVICE_LIGHTGUN_JUSTIFIERS	libretro.h	108;"	d
RETRO_DEVICE_LIGHTGUN_SUPER_SCOPE	libretro.h	106;"	d
RETRO_DEVICE_MASK	libretro.h	48;"	d
RETRO_DEVICE_MOUSE	libretro.h	59;"	d
RETRO_DEVICE_NONE	libretro.h	49;"	d
RETRO_DEVICE_POINTER	libretro.h	95;"	d
RETRO_DEVICE_SENSOR_ACCELEROMETER	libretro.h	98;"	d
RETRO_ENVIRONMENT_EXEC	libretro_private.h	34;"	d
RETRO_ENVIRONMENT_EXEC_ESCAPE	libretro_private.h	38;"	d
RETRO_ENVIRONMENT_EXPERIMENTAL	libretro.h	367;"	d
RETRO_ENVIRONMENT_GET_CAMERA_INTERFACE	libretro.h	543;"	d
RETRO_ENVIRONMENT_GET_CAN_DUPE	libretro.h	381;"	d
RETRO_ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES	libretro.h	529;"	d
RETRO_ENVIRONMENT_GET_LIBRETRO_PATH	libretro.h	492;"	d
RETRO_ENVIRONMENT_GET_LOCATION_INTERFACE	libretro.h	571;"	d
RETRO_ENVIRONMENT_GET_LOG_INTERFACE	libretro.h	561;"	d
RETRO_ENVIRONMENT_GET_OVERSCAN	libretro.h	378;"	d
RETRO_ENVIRONMENT_GET_PERF_INTERFACE	libretro.h	567;"	d
RETRO_ENVIRONMENT_GET_RUMBLE_INTERFACE	libretro.h	524;"	d
RETRO_ENVIRONMENT_GET_SENSOR_INTERFACE	libretro.h	536;"	d
RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY	libretro.h	416;"	d
RETRO_ENVIRONMENT_GET_VARIABLE	libretro.h	454;"	d
RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE	libretro.h	480;"	d
RETRO_ENVIRONMENT_PRIVATE	libretro.h	369;"	d
RETRO_ENVIRONMENT_SET_AUDIO_CALLBACK	libretro.h	501;"	d
RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE	libretro.h	442;"	d
RETRO_ENVIRONMENT_SET_FRAME_TIME_CALLBACK	libretro.h	518;"	d
RETRO_ENVIRONMENT_SET_HW_RENDER	libretro.h	447;"	d
RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS	libretro.h	432;"	d
RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK	libretro.h	438;"	d
RETRO_ENVIRONMENT_SET_LIBRETRO_PATH	libretro_private.h	30;"	d
RETRO_ENVIRONMENT_SET_MESSAGE	libretro.h	386;"	d
RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL	libretro.h	394;"	d
RETRO_ENVIRONMENT_SET_PIXEL_FORMAT	libretro.h	424;"	d
RETRO_ENVIRONMENT_SET_ROTATION	libretro.h	372;"	d
RETRO_ENVIRONMENT_SET_SUPPORT_NO_GAME	libretro.h	486;"	d
RETRO_ENVIRONMENT_SET_VARIABLES	libretro.h	461;"	d
RETRO_ENVIRONMENT_SHUTDOWN	libretro.h	389;"	d
RETRO_GAME_TYPE_BSX	libretro.h	194;"	d
RETRO_GAME_TYPE_BSX_SLOTTED	libretro.h	195;"	d
RETRO_GAME_TYPE_SUFAMI_TURBO	libretro.h	196;"	d
RETRO_GAME_TYPE_SUPER_GAME_BOY	libretro.h	197;"	d
RETRO_HW_CONTEXT_DUMMY	libretro.h	/^   RETRO_HW_CONTEXT_DUMMY = INT_MAX$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_NONE	libretro.h	/^   RETRO_HW_CONTEXT_NONE = 0,$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGL	libretro.h	/^   RETRO_HW_CONTEXT_OPENGL, \/\/ OpenGL 2.x. Latest version available before 3.x+. Driver can choose to use latest compatibility context.$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGLES2	libretro.h	/^   RETRO_HW_CONTEXT_OPENGLES2, \/\/ GLES 2.0$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGLES3	libretro.h	/^   RETRO_HW_CONTEXT_OPENGLES3, \/\/ GLES 3.0$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGL_CORE	libretro.h	/^   RETRO_HW_CONTEXT_OPENGL_CORE, \/\/ Modern desktop core GL context. Use major\/minor fields to set GL version.$/;"	e	enum:retro_hw_context_type
RETRO_HW_FRAME_BUFFER_VALID	libretro.h	833;"	d
RETRO_LBL_ANALOG_LEFT_X_MINUS	config.def.h	586;"	d
RETRO_LBL_ANALOG_LEFT_X_PLUS	config.def.h	585;"	d
RETRO_LBL_ANALOG_LEFT_Y_MINUS	config.def.h	588;"	d
RETRO_LBL_ANALOG_LEFT_Y_PLUS	config.def.h	587;"	d
RETRO_LBL_ANALOG_RIGHT_X_MINUS	config.def.h	590;"	d
RETRO_LBL_ANALOG_RIGHT_X_PLUS	config.def.h	589;"	d
RETRO_LBL_ANALOG_RIGHT_Y_MINUS	config.def.h	592;"	d
RETRO_LBL_ANALOG_RIGHT_Y_PLUS	config.def.h	591;"	d
RETRO_LBL_CHEAT_INDEX_MINUS	config.def.h	609;"	d
RETRO_LBL_CHEAT_INDEX_PLUS	config.def.h	608;"	d
RETRO_LBL_CHEAT_TOGGLE	config.def.h	610;"	d
RETRO_LBL_DISK_EJECT_TOGGLE	config.def.h	620;"	d
RETRO_LBL_DISK_NEXT	config.def.h	621;"	d
RETRO_LBL_DSP_CONFIG	config.def.h	612;"	d
RETRO_LBL_ENABLE_HOTKEY	config.def.h	616;"	d
RETRO_LBL_FAST_FORWARD_HOLD_KEY	config.def.h	594;"	d
RETRO_LBL_FAST_FORWARD_KEY	config.def.h	593;"	d
RETRO_LBL_FRAMEADVANCE	config.def.h	604;"	d
RETRO_LBL_FULLSCREEN_TOGGLE_KEY	config.def.h	597;"	d
RETRO_LBL_GRAB_MOUSE_TOGGLE	config.def.h	622;"	d
RETRO_LBL_JOYPAD_A	config.def.h	576;"	d
RETRO_LBL_JOYPAD_B	config.def.h	568;"	d
RETRO_LBL_JOYPAD_DOWN	config.def.h	573;"	d
RETRO_LBL_JOYPAD_L	config.def.h	578;"	d
RETRO_LBL_JOYPAD_L2	config.def.h	580;"	d
RETRO_LBL_JOYPAD_L3	config.def.h	582;"	d
RETRO_LBL_JOYPAD_LEFT	config.def.h	574;"	d
RETRO_LBL_JOYPAD_R	config.def.h	579;"	d
RETRO_LBL_JOYPAD_R2	config.def.h	581;"	d
RETRO_LBL_JOYPAD_R3	config.def.h	583;"	d
RETRO_LBL_JOYPAD_RIGHT	config.def.h	575;"	d
RETRO_LBL_JOYPAD_SELECT	config.def.h	570;"	d
RETRO_LBL_JOYPAD_START	config.def.h	571;"	d
RETRO_LBL_JOYPAD_UP	config.def.h	572;"	d
RETRO_LBL_JOYPAD_X	config.def.h	577;"	d
RETRO_LBL_JOYPAD_Y	config.def.h	569;"	d
RETRO_LBL_LOAD_STATE_KEY	config.def.h	595;"	d
RETRO_LBL_MENU_TOGGLE	config.def.h	623;"	d
RETRO_LBL_MOVIE_RECORD_TOGGLE	config.def.h	602;"	d
RETRO_LBL_MUTE	config.def.h	613;"	d
RETRO_LBL_NETPLAY_FLIP	config.def.h	614;"	d
RETRO_LBL_OVERLAY_NEXT	config.def.h	619;"	d
RETRO_LBL_PAUSE_TOGGLE	config.def.h	603;"	d
RETRO_LBL_QUIT_KEY	config.def.h	598;"	d
RETRO_LBL_RESET	config.def.h	605;"	d
RETRO_LBL_REWIND	config.def.h	601;"	d
RETRO_LBL_SAVE_STATE_KEY	config.def.h	596;"	d
RETRO_LBL_SCREENSHOT	config.def.h	611;"	d
RETRO_LBL_SHADER_NEXT	config.def.h	606;"	d
RETRO_LBL_SHADER_PREV	config.def.h	607;"	d
RETRO_LBL_SLOWMOTION	config.def.h	615;"	d
RETRO_LBL_STATE_SLOT_MINUS	config.def.h	600;"	d
RETRO_LBL_STATE_SLOT_PLUS	config.def.h	599;"	d
RETRO_LBL_TURBO_ENABLE	config.def.h	584;"	d
RETRO_LBL_VOLUME_DOWN	config.def.h	618;"	d
RETRO_LBL_VOLUME_UP	config.def.h	617;"	d
RETRO_LOG_DEBUG	libretro.h	/^   RETRO_LOG_DEBUG = 0,$/;"	e	enum:retro_log_level
RETRO_LOG_DUMMY	libretro.h	/^   RETRO_LOG_DUMMY = INT_MAX$/;"	e	enum:retro_log_level
RETRO_LOG_ERROR	libretro.h	/^   RETRO_LOG_ERROR,$/;"	e	enum:retro_log_level
RETRO_LOG_INFO	libretro.h	/^   RETRO_LOG_INFO,$/;"	e	enum:retro_log_level
RETRO_LOG_WARN	libretro.h	/^   RETRO_LOG_WARN,$/;"	e	enum:retro_log_level
RETRO_MEMORY_MASK	libretro.h	167;"	d
RETRO_MEMORY_RTC	libretro.h	176;"	d
RETRO_MEMORY_SAVE_RAM	libretro.h	172;"	d
RETRO_MEMORY_SNES_BSX_PRAM	libretro.h	186;"	d
RETRO_MEMORY_SNES_BSX_RAM	libretro.h	185;"	d
RETRO_MEMORY_SNES_GAME_BOY_RAM	libretro.h	189;"	d
RETRO_MEMORY_SNES_GAME_BOY_RTC	libretro.h	190;"	d
RETRO_MEMORY_SNES_SUFAMI_TURBO_A_RAM	libretro.h	187;"	d
RETRO_MEMORY_SNES_SUFAMI_TURBO_B_RAM	libretro.h	188;"	d
RETRO_MEMORY_SYSTEM_RAM	libretro.h	179;"	d
RETRO_MEMORY_VIDEO_RAM	libretro.h	182;"	d
RETRO_PIXEL_FORMAT_0RGB1555	libretro.h	/^   RETRO_PIXEL_FORMAT_0RGB1555 = 0,$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_RGB565	libretro.h	/^   RETRO_PIXEL_FORMAT_RGB565   = 2,$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_UNKNOWN	libretro.h	/^   RETRO_PIXEL_FORMAT_UNKNOWN  = INT_MAX$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_XRGB8888	libretro.h	/^   RETRO_PIXEL_FORMAT_XRGB8888 = 1,$/;"	e	enum:retro_pixel_format
RETRO_REGION_NTSC	libretro.h	162;"	d
RETRO_REGION_PAL	libretro.h	163;"	d
RETRO_RUMBLE_DUMMY	libretro.h	/^   RETRO_RUMBLE_DUMMY = INT_MAX$/;"	e	enum:retro_rumble_effect
RETRO_RUMBLE_STRONG	libretro.h	/^   RETRO_RUMBLE_STRONG = 0,$/;"	e	enum:retro_rumble_effect
RETRO_RUMBLE_WEAK	libretro.h	/^   RETRO_RUMBLE_WEAK = 1,$/;"	e	enum:retro_rumble_effect
RETRO_SENSOR_ACCELEROMETER_DISABLE	libretro.h	/^   RETRO_SENSOR_ACCELEROMETER_DISABLE,$/;"	e	enum:retro_sensor_action
RETRO_SENSOR_ACCELEROMETER_ENABLE	libretro.h	/^   RETRO_SENSOR_ACCELEROMETER_ENABLE = 0,$/;"	e	enum:retro_sensor_action
RETRO_SENSOR_DUMMY	libretro.h	/^   RETRO_SENSOR_DUMMY = INT_MAX$/;"	e	enum:retro_sensor_action
RETRO_SIMD_AVX	libretro.h	603;"	d
RETRO_SIMD_NEON	libretro.h	604;"	d
RETRO_SIMD_SSE	libretro.h	599;"	d
RETRO_SIMD_SSE2	libretro.h	600;"	d
RETRO_SIMD_SSE3	libretro.h	605;"	d
RETRO_SIMD_SSSE3	libretro.h	606;"	d
RETRO_SIMD_VMX	libretro.h	601;"	d
RETRO_SIMD_VMX128	libretro.h	602;"	d
RETRY_MS	netplay.c	841;"	d	file:
RFCOMM_CHANNEL_ALREADY_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	224;"	d
RFCOMM_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	61;"	d
RFCOMM_EVENT_CHANNEL_CLOSED	apple/iOS/bluetooth/btstack/hci_cmds.h	173;"	d
RFCOMM_EVENT_CREDITS	apple/iOS/bluetooth/btstack/hci_cmds.h	182;"	d
RFCOMM_EVENT_INCOMING_CONNECTION	apple/iOS/bluetooth/btstack/hci_cmds.h	176;"	d
RFCOMM_EVENT_OPEN_CHANNEL_COMPLETE	apple/iOS/bluetooth/btstack/hci_cmds.h	170;"	d
RFCOMM_EVENT_PERSISTENT_CHANNEL	apple/iOS/bluetooth/btstack/hci_cmds.h	188;"	d
RFCOMM_EVENT_REMOTE_LINE_STATUS	apple/iOS/bluetooth/btstack/hci_cmds.h	179;"	d
RFCOMM_EVENT_SERVICE_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	185;"	d
RFCOMM_MULTIPLEXER_STOPPED	apple/iOS/bluetooth/btstack/hci_cmds.h	223;"	d
RFCOMM_NO_OUTGOING_CREDITS	apple/iOS/bluetooth/btstack/hci_cmds.h	225;"	d
RGB565	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	e	enum:RenderChain::PixelFormat
RGL	ps3/rgl/include/RGL/Base.h	/^namespace RGL$/;"	n
RGL::Vector	ps3/rgl/include/RGL/Base.h	/^   template<class T> class Vector$/;"	c	namespace:RGL
RGL::Vector::Vector	ps3/rgl/include/RGL/Base.h	/^      Vector(): array( 0 ), count( 0 ), capacity( 0 ), increment( 4 ) {}$/;"	f	class:RGL::Vector	access:public	signature:()
RGL::Vector::array	ps3/rgl/include/RGL/Base.h	/^      T* array;$/;"	m	class:RGL::Vector	access:private
RGL::Vector::capacity	ps3/rgl/include/RGL/Base.h	/^      unsigned int capacity;$/;"	m	class:RGL::Vector	access:private
RGL::Vector::clear	ps3/rgl/include/RGL/Base.h	/^      inline void clear()$/;"	f	class:RGL::Vector	access:public	signature:()
RGL::Vector::count	ps3/rgl/include/RGL/Base.h	/^      unsigned int count;$/;"	m	class:RGL::Vector	access:private
RGL::Vector::getArray	ps3/rgl/include/RGL/Base.h	/^      inline T *getArray() const { return array; }$/;"	f	class:RGL::Vector	access:public	signature:() const
RGL::Vector::getCount	ps3/rgl/include/RGL/Base.h	/^      inline unsigned int getCount() { return count; }$/;"	f	class:RGL::Vector	access:public	signature:()
RGL::Vector::increment	ps3/rgl/include/RGL/Base.h	/^      unsigned int increment;$/;"	m	class:RGL::Vector	access:private
RGL::Vector::operator []	ps3/rgl/include/RGL/Base.h	/^      inline T& operator []( int i ) const { return array[i]; }$/;"	f	class:RGL::Vector	access:public	signature:( int i ) const
RGL::Vector::operator delete	ps3/rgl/include/RGL/Base.h	/^      void operator delete( void * \/*ptr*\/, void * \/*p*\/ ) { }$/;"	f	class:RGL::Vector	access:public	signature:( void * , void * )
RGL::Vector::operator new	ps3/rgl/include/RGL/Base.h	/^      void * operator new( size_t \/*size*\/, void *p ) { return p; }$/;"	f	class:RGL::Vector	access:public	signature:( size_t , void *p )
RGL::Vector::operator new	ps3/rgl/include/RGL/Base.h	/^      void * operator new( size_t size ) { return malloc( size ); }$/;"	f	class:RGL::Vector	access:public	signature:( size_t size )
RGL::Vector::pushBack	ps3/rgl/include/RGL/Base.h	/^      inline unsigned int pushBack( const T &element )$/;"	f	class:RGL::Vector	access:public	signature:( const T &element )
RGL::Vector::reallocArray	ps3/rgl/include/RGL/Base.h	/^      inline void reallocArray( unsigned int newCapacity )$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int newCapacity )
RGL::Vector::remove	ps3/rgl/include/RGL/Base.h	/^      inline void remove( unsigned int index )$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int index )
RGL::Vector::removeElement	ps3/rgl/include/RGL/Base.h	/^      inline void removeElement( const T &element )$/;"	f	class:RGL::Vector	access:public	signature:( const T &element )
RGL::Vector::setIncrement	ps3/rgl/include/RGL/Base.h	/^      inline void setIncrement( unsigned int i ) { increment = i; }$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int i )
RGL::Vector::~Vector	ps3/rgl/include/RGL/Base.h	/^      ~Vector() { clear(); reallocArray( 0 ); }$/;"	f	class:RGL::Vector	access:public	signature:()
RGLBIT_ASSIGN	ps3/rgl/include/RGL/Types.h	43;"	d
RGLBIT_FALSE	ps3/rgl/include/RGL/Types.h	42;"	d
RGLBIT_GET	ps3/rgl/include/RGL/Types.h	40;"	d
RGLBIT_TRUE	ps3/rgl/include/RGL/Types.h	41;"	d
RGLGCM_357C_NOTIFIERS_MAXCOUNT	ps3/rgl/src/include/rgl-constants.h	278;"	d
RGLGCM_ABGR8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ABGR8                          = 0xff02, \/\/ does not exist in classic OpenGL$/;"	e	enum:rglGcmEnum
RGLGCM_ALPHA16	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ALPHA16                        = 0x803E,$/;"	e	enum:rglGcmEnum
RGLGCM_ALPHA8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ALPHA8                         = 0x803C,$/;"	e	enum:rglGcmEnum
RGLGCM_ALWAYS	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ALWAYS                         = 0x0207,$/;"	e	enum:rglGcmEnum
RGLGCM_AND	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_AND                            = 0x1501,$/;"	e	enum:rglGcmEnum
RGLGCM_AND_INVERTED	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_AND_INVERTED                   = 0x1504,$/;"	e	enum:rglGcmEnum
RGLGCM_AND_REVERSE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_AND_REVERSE                    = 0x1502,$/;"	e	enum:rglGcmEnum
RGLGCM_ARGB8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ARGB8                          = 0x6007, \/\/ does not exist in classic OpenGL$/;"	e	enum:rglGcmEnum
RGLGCM_ATTRIB_COLOR	ps3/rgl/src/include/rgl-constants.h	344;"	d
RGLGCM_ATTRIB_COUNT	ps3/rgl/src/include/rgl-constants.h	338;"	d
RGLGCM_ATTRIB_FOG_COORD	ps3/rgl/src/include/rgl-constants.h	346;"	d
RGLGCM_ATTRIB_NORMAL	ps3/rgl/src/include/rgl-constants.h	343;"	d
RGLGCM_ATTRIB_OUTPUT_BFC0	ps3/rgl/src/include/rgl-constants.h	362;"	d
RGLGCM_ATTRIB_OUTPUT_BFC1	ps3/rgl/src/include/rgl-constants.h	363;"	d
RGLGCM_ATTRIB_OUTPUT_COL0	ps3/rgl/src/include/rgl-constants.h	360;"	d
RGLGCM_ATTRIB_OUTPUT_COL1	ps3/rgl/src/include/rgl-constants.h	361;"	d
RGLGCM_ATTRIB_OUTPUT_FOGC	ps3/rgl/src/include/rgl-constants.h	364;"	d
RGLGCM_ATTRIB_OUTPUT_HPOS	ps3/rgl/src/include/rgl-constants.h	359;"	d
RGLGCM_ATTRIB_OUTPUT_PSIZ	ps3/rgl/src/include/rgl-constants.h	365;"	d
RGLGCM_ATTRIB_OUTPUT_TEX0	ps3/rgl/src/include/rgl-constants.h	366;"	d
RGLGCM_ATTRIB_OUTPUT_TEX1	ps3/rgl/src/include/rgl-constants.h	367;"	d
RGLGCM_ATTRIB_OUTPUT_TEX2	ps3/rgl/src/include/rgl-constants.h	368;"	d
RGLGCM_ATTRIB_OUTPUT_TEX3	ps3/rgl/src/include/rgl-constants.h	369;"	d
RGLGCM_ATTRIB_OUTPUT_TEX4	ps3/rgl/src/include/rgl-constants.h	370;"	d
RGLGCM_ATTRIB_OUTPUT_TEX5	ps3/rgl/src/include/rgl-constants.h	371;"	d
RGLGCM_ATTRIB_OUTPUT_TEX6	ps3/rgl/src/include/rgl-constants.h	372;"	d
RGLGCM_ATTRIB_OUTPUT_TEX7	ps3/rgl/src/include/rgl-constants.h	373;"	d
RGLGCM_ATTRIB_POSITION	ps3/rgl/src/include/rgl-constants.h	341;"	d
RGLGCM_ATTRIB_PSIZE	ps3/rgl/src/include/rgl-constants.h	347;"	d
RGLGCM_ATTRIB_SECONDARY_C	ps3/rgl/src/include/rgl-constants.h	345;"	d
RGLGCM_ATTRIB_TEXCOORD0	ps3/rgl/src/include/rgl-constants.h	349;"	d
RGLGCM_ATTRIB_TEXCOORD1	ps3/rgl/src/include/rgl-constants.h	350;"	d
RGLGCM_ATTRIB_TEXCOORD2	ps3/rgl/src/include/rgl-constants.h	351;"	d
RGLGCM_ATTRIB_TEXCOORD3	ps3/rgl/src/include/rgl-constants.h	352;"	d
RGLGCM_ATTRIB_TEXCOORD4	ps3/rgl/src/include/rgl-constants.h	353;"	d
RGLGCM_ATTRIB_TEXCOORD5	ps3/rgl/src/include/rgl-constants.h	354;"	d
RGLGCM_ATTRIB_TEXCOORD6	ps3/rgl/src/include/rgl-constants.h	355;"	d
RGLGCM_ATTRIB_TEXCOORD7	ps3/rgl/src/include/rgl-constants.h	356;"	d
RGLGCM_ATTRIB_UNUSED1	ps3/rgl/src/include/rgl-constants.h	348;"	d
RGLGCM_ATTRIB_VERTEX_WEIGHT	ps3/rgl/src/include/rgl-constants.h	342;"	d
RGLGCM_BGRA8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_BGRA8                          = 0xff01, \/\/ does not exist in classic OpenGL$/;"	e	enum:rglGcmEnum
RGLGCM_BIG_ENDIAN	ps3/rgl/src/include/rgl-constants.h	4;"	d
RGLGCM_BLEND	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_BLEND                          = 0x0be0,$/;"	e	enum:rglGcmEnum
RGLGCM_BLEND_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_BLEND_COLOR                    = 0x8005,$/;"	e	enum:rglGcmEnum
RGLGCM_BLEND_EQUATION	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_BLEND_EQUATION                 = 0x8009,$/;"	e	enum:rglGcmEnum
RGLGCM_BYTE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_BYTE                           = 0x1400,$/;"	e	enum:rglGcmEnum
RGLGCM_CALC_COLOR_LE_ARGB8	ps3/rgl/src/include/rgl-inline.h	/^static inline void RGLGCM_CALC_COLOR_LE_ARGB8( GLuint *color0, const GLfloat r, const GLfloat g, const GLfloat b, const GLfloat a )$/;"	f	signature:( GLuint *color0, const GLfloat r, const GLfloat g, const GLfloat b, const GLfloat a )
RGLGCM_CHANNEL_DMA_SCRATCH_NOTIFIER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CHANNEL_DMA_SCRATCH_NOTIFIER,$/;"	e	enum:__anon56
RGLGCM_CLAMP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CLAMP                          = 0x2900,$/;"	e	enum:rglGcmEnum
RGLGCM_CLAMP_TO_BORDER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CLAMP_TO_BORDER                = 0x812D,$/;"	e	enum:rglGcmEnum
RGLGCM_CLAMP_TO_EDGE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CLAMP_TO_EDGE                  = 0x812F,$/;"	e	enum:rglGcmEnum
RGLGCM_CLEAR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CLEAR                          = 0x1500,$/;"	e	enum:rglGcmEnum
RGLGCM_CMP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CMP                            = 0x6020,$/;"	e	enum:rglGcmEnum
RGLGCM_COLOR_BUFFER_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COLOR_BUFFER_BIT               = 0x4000,$/;"	e	enum:rglGcmEnum
RGLGCM_COLOR_LOGIC_OP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COLOR_LOGIC_OP                 = 0x0bf2,$/;"	e	enum:rglGcmEnum
RGLGCM_COMPRESSED_RGBA_S3TC_DXT1	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COMPRESSED_RGBA_S3TC_DXT1      = 0x83F1,$/;"	e	enum:rglGcmEnum
RGLGCM_COMPRESSED_RGBA_S3TC_DXT3	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COMPRESSED_RGBA_S3TC_DXT3      = 0x83F2,$/;"	e	enum:rglGcmEnum
RGLGCM_COMPRESSED_RGBA_S3TC_DXT5	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COMPRESSED_RGBA_S3TC_DXT5      = 0x83F3,$/;"	e	enum:rglGcmEnum
RGLGCM_COMPRESSED_RGB_S3TC_DXT1	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COMPRESSED_RGB_S3TC_DXT1       = 0x83F0,$/;"	e	enum:rglGcmEnum
RGLGCM_CONSTANT_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONSTANT_ALPHA                 = 0x8003,$/;"	e	enum:rglGcmEnum
RGLGCM_CONSTANT_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONSTANT_COLOR                 = 0x8001,$/;"	e	enum:rglGcmEnum
RGLGCM_CONTEXT_2D_SURFACE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_2D_SURFACE,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_DMA_MEMORY_FRAME_BUFFER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_DMA_MEMORY_FRAME_BUFFER,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_DMA_MEMORY_HOST_BUFFER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_DMA_MEMORY_HOST_BUFFER,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_DMA_MEMORY_SEMAPHORE_RO	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_DMA_MEMORY_SEMAPHORE_RO,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_DMA_MEMORY_SEMAPHORE_RW	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_DMA_MEMORY_SEMAPHORE_RW,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_DMA_TO_MEMORY_GET_REPORT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_DMA_TO_MEMORY_GET_REPORT,$/;"	e	enum:__anon56
RGLGCM_CONTEXT_SWIZ_SURFACE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CONTEXT_SWIZ_SURFACE,$/;"	e	enum:__anon56
RGLGCM_COPY	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COPY                           = 0x1503,$/;"	e	enum:rglGcmEnum
RGLGCM_COPY_INVERTED	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_COPY_INVERTED                  = 0x150C,$/;"	e	enum:rglGcmEnum
RGLGCM_COUNT_SHIFT	ps3/rgl/src/include/rgl-constants.h	306;"	d
RGLGCM_CURIE_PRIMITIVE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_CURIE_PRIMITIVE,$/;"	e	enum:__anon56
RGLGCM_DEPTH_BUFFER_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DEPTH_BUFFER_BIT               = 0x0100,$/;"	e	enum:rglGcmEnum
RGLGCM_DEPTH_CLAMP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DEPTH_CLAMP                    = 0x864F,$/;"	e	enum:rglGcmEnum
RGLGCM_DEPTH_COMPONENT16	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DEPTH_COMPONENT16              = 0x81A5,$/;"	e	enum:rglGcmEnum
RGLGCM_DEPTH_COMPONENT24	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DEPTH_COMPONENT24              = 0x81A6,$/;"	e	enum:rglGcmEnum
RGLGCM_DEVICE_SYNC_COND	ps3/rgl/src/include/rgl-constants.h	335;"	d
RGLGCM_DEVICE_SYNC_FENCE	ps3/rgl/src/include/rgl-constants.h	334;"	d
RGLGCM_DITHER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DITHER                         = 0x0bd0,$/;"	e	enum:rglGcmEnum
RGLGCM_DMA_PUSH_BUFFER_PREFETCH_PADDING	ps3/rgl/src/rgl_ps3.cpp	1839;"	d	file:
RGLGCM_DST_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DST_ALPHA                      = 0x0304,$/;"	e	enum:rglGcmEnum
RGLGCM_DST_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_DST_COLOR                      = 0x0306,$/;"	e	enum:rglGcmEnum
RGLGCM_EQUAL	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_EQUAL                          = 0x0202,$/;"	e	enum:rglGcmEnum
RGLGCM_EQUIV	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_EQUIV                          = 0x1509,$/;"	e	enum:rglGcmEnum
RGLGCM_F0_DOT_0	ps3/rgl/src/include/rgl-constants.h	303;"	d
RGLGCM_FIFO_SIZE	ps3/rgl/src/rgl_ps3.cpp	1840;"	d	file:
RGLGCM_FIFO_SIZE_DEFAULT	ps3/rgl/src/include/rgl-constants.h	214;"	d
RGLGCM_FLOAT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FLOAT                          = 0x1406,$/;"	e	enum:rglGcmEnum
RGLGCM_FLOAT_R32	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FLOAT_R32                      = 0x8885,$/;"	e	enum:rglGcmEnum
RGLGCM_FRAGMENT_PROGRAM	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FRAGMENT_PROGRAM               = 0x8804,$/;"	e	enum:rglGcmEnum
RGLGCM_FUNC_ADD	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FUNC_ADD                       = 0x8006,$/;"	e	enum:rglGcmEnum
RGLGCM_FUNC_REVERSE_SUBTRACT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FUNC_REVERSE_SUBTRACT          = 0x800B,$/;"	e	enum:rglGcmEnum
RGLGCM_FUNC_SUBTRACT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_FUNC_SUBTRACT                  = 0x800A,$/;"	e	enum:rglGcmEnum
RGLGCM_GAMMA_REMAP_ALPHA_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GAMMA_REMAP_ALPHA_BIT          = 0x0008,$/;"	e	enum:rglGcmEnum
RGLGCM_GAMMA_REMAP_BLUE_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GAMMA_REMAP_BLUE_BIT           = 0x0004,$/;"	e	enum:rglGcmEnum
RGLGCM_GAMMA_REMAP_GREEN_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GAMMA_REMAP_GREEN_BIT          = 0x0002,$/;"	e	enum:rglGcmEnum
RGLGCM_GAMMA_REMAP_RED_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GAMMA_REMAP_RED_BIT            = 0x0001,$/;"	e	enum:rglGcmEnum
RGLGCM_GEQUAL	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GEQUAL                         = 0x0206,$/;"	e	enum:rglGcmEnum
RGLGCM_GREATER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_GREATER                        = 0x0204,$/;"	e	enum:rglGcmEnum
RGLGCM_HALF_FLOAT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_HALF_FLOAT                     = 0x140B,$/;"	e	enum:rglGcmEnum
RGLGCM_HANDLE_COUNT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_HANDLE_COUNT$/;"	e	enum:__anon56
RGLGCM_HAS_INVALIDATE_TILE	ps3/rgl/src/include/rgl-constants.h	379;"	d
RGLGCM_HILO16	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_HILO16                         = 0x86F8,$/;"	e	enum:rglGcmEnum
RGLGCM_HILO8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_HILO8                          = 0x885E,$/;"	e	enum:rglGcmEnum
RGLGCM_HOST_BUFFER_ALIGNMENT	ps3/rgl/src/include/rgl-constants.h	210;"	d
RGLGCM_HOST_SIZE_DEFAULT	ps3/rgl/src/include/rgl-constants.h	215;"	d
RGLGCM_IMAGEFROMCPU	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_IMAGEFROMCPU,$/;"	e	enum:__anon56
RGLGCM_INT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_INT                            = 0x1404,$/;"	e	enum:rglGcmEnum
RGLGCM_INVERT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_INVERT                         = 0x150A,$/;"	e	enum:rglGcmEnum
RGLGCM_LEQUAL	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LEQUAL                         = 0x0203,$/;"	e	enum:rglGcmEnum
RGLGCM_LESS	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LESS                           = 0x0201,$/;"	e	enum:rglGcmEnum
RGLGCM_LINEAR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINEAR                         = 0x2601,$/;"	e	enum:rglGcmEnum
RGLGCM_LINEAR_BUFFER_ALIGNMENT	ps3/rgl/src/include/rgl-constants.h	209;"	d
RGLGCM_LINEAR_MIPMAP_LINEAR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINEAR_MIPMAP_LINEAR           = 0x2703,$/;"	e	enum:rglGcmEnum
RGLGCM_LINEAR_MIPMAP_NEAREST	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINEAR_MIPMAP_NEAREST          = 0x2701,$/;"	e	enum:rglGcmEnum
RGLGCM_LINES	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINES                          = 0x0001,$/;"	e	enum:rglGcmEnum
RGLGCM_LINE_LOOP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINE_LOOP                      = 0x0002,$/;"	e	enum:rglGcmEnum
RGLGCM_LINE_STRIP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_LINE_STRIP                     = 0x0003,$/;"	e	enum:rglGcmEnum
RGLGCM_LM_MAX_TOTAL_QUERIES	ps3/rgl/src/include/rgl-constants.h	255;"	d
RGLGCM_LM_MAX_USER_QUERIES	ps3/rgl/src/include/rgl-constants.h	257;"	d
RGLGCM_LM_MAX_ZPASS_REPORTS	ps3/rgl/src/include/rgl-constants.h	256;"	d
RGLGCM_MAX	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MAX                            = 0x8008,$/;"	e	enum:rglGcmEnum
RGLGCM_MAX_COLOR_SURFACES	ps3/rgl/src/include/rgl-constants.h	235;"	d
RGLGCM_MAX_INDEX_BUFFER_SIZE	ps3/rgl/src/rgl_ps3_raster.cpp	1254;"	d	file:
RGLGCM_MAX_TILED_REGIONS	ps3/rgl/src/include/rgl-constants.h	384;"	d
RGLGCM_MAX_USER_QUERIES	ps3/rgl/src/include/rgl-constants.h	272;"	d
RGLGCM_MAX_USER_QUERIES	ps3/rgl/src/include/rgl-constants.h	274;"	d
RGLGCM_MAX_USER_SEMAPHORES	ps3/rgl/src/include/rgl-constants.h	252;"	d
RGLGCM_MAX_VERTEX_BUFFER_SIZE	ps3/rgl/src/rgl_ps3_raster.cpp	1253;"	d	file:
RGLGCM_MEM2MEM_HOST_TO_VIDEO	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MEM2MEM_HOST_TO_VIDEO,$/;"	e	enum:__anon56
RGLGCM_METHOD_SHIFT	ps3/rgl/src/include/rgl-constants.h	308;"	d
RGLGCM_MIN	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MIN                            = 0x8007,$/;"	e	enum:rglGcmEnum
RGLGCM_MIRRORED_REPEAT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MIRRORED_REPEAT                = 0x8370,$/;"	e	enum:rglGcmEnum
RGLGCM_MIRROR_CLAMP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MIRROR_CLAMP                   = 0x8742,$/;"	e	enum:rglGcmEnum
RGLGCM_MIRROR_CLAMP_TO_BORDER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MIRROR_CLAMP_TO_BORDER         = 0x8912,$/;"	e	enum:rglGcmEnum
RGLGCM_MIRROR_CLAMP_TO_EDGE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_MIRROR_CLAMP_TO_EDGE           = 0x8743,$/;"	e	enum:rglGcmEnum
RGLGCM_MM_MAX_TOTAL_QUERIES	ps3/rgl/src/include/rgl-constants.h	264;"	d
RGLGCM_MM_MAX_USER_QUERIES	ps3/rgl/src/include/rgl-constants.h	266;"	d
RGLGCM_MM_MAX_ZPASS_REPORTS	ps3/rgl/src/include/rgl-constants.h	265;"	d
RGLGCM_NAND	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NAND                           = 0x150E,$/;"	e	enum:rglGcmEnum
RGLGCM_NEAREST	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NEAREST                        = 0x2600,$/;"	e	enum:rglGcmEnum
RGLGCM_NEAREST_MIPMAP_LINEAR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NEAREST_MIPMAP_LINEAR          = 0x2702,$/;"	e	enum:rglGcmEnum
RGLGCM_NEAREST_MIPMAP_NEAREST	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NEAREST_MIPMAP_NEAREST         = 0x2700,$/;"	e	enum:rglGcmEnum
RGLGCM_NEVER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NEVER                          = 0x0200,$/;"	e	enum:rglGcmEnum
RGLGCM_NONE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NONE                           = 0x0000,$/;"	e	enum:rglGcmEnum
RGLGCM_NOOP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NOOP                           = 0x1505,$/;"	e	enum:rglGcmEnum
RGLGCM_NOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NOR                            = 0x1508,$/;"	e	enum:rglGcmEnum
RGLGCM_NOTEQUAL	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_NOTEQUAL                       = 0x0205,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE                            =      1,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_CONSTANT_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_CONSTANT_ALPHA       = 0x8004,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_CONSTANT_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_CONSTANT_COLOR       = 0x8002,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_DST_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_DST_ALPHA            = 0x0305,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_DST_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_DST_COLOR            = 0x0307,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_SRC_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_SRC_ALPHA            = 0x0303,$/;"	e	enum:rglGcmEnum
RGLGCM_ONE_MINUS_SRC_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ONE_MINUS_SRC_COLOR            = 0x0301,$/;"	e	enum:rglGcmEnum
RGLGCM_OR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_OR                             = 0x1507,$/;"	e	enum:rglGcmEnum
RGLGCM_OR_INVERTED	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_OR_INVERTED                    = 0x150D,$/;"	e	enum:rglGcmEnum
RGLGCM_OR_REVERSE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_OR_REVERSE                     = 0x150B,$/;"	e	enum:rglGcmEnum
RGLGCM_PAGE_SIZE	ps3/rgl/src/include/rgl-constants.h	253;"	d
RGLGCM_PERSISTENT_MEMORY_DEFAULT	ps3/rgl/src/include/rgl-constants.h	213;"	d
RGLGCM_POINTS	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_POINTS                         = 0x0000,$/;"	e	enum:rglGcmEnum
RGLGCM_POLYGON	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_POLYGON                        = 0x0009,$/;"	e	enum:rglGcmEnum
RGLGCM_QUADS	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_QUADS                          = 0x0007,$/;"	e	enum:rglGcmEnum
RGLGCM_QUAD_STRIP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_QUAD_STRIP                     = 0x0008,$/;"	e	enum:rglGcmEnum
RGLGCM_QUICK_FLOAT2UINT	ps3/rgl/src/include/rgl-inline.h	/^static inline GLuint RGLGCM_QUICK_FLOAT2UINT (const GLfloat f)$/;"	f	signature:(const GLfloat f)
RGLGCM_REMAP_MODES	ps3/rgl/src/rgl_ps3_raster.cpp	1294;"	d	file:
RGLGCM_REPEAT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_REPEAT                         = 0x2901,$/;"	e	enum:rglGcmEnum
RGLGCM_RGB565_SCE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_RGB565_SCE                     = 0x600D,$/;"	e	enum:rglGcmEnum
RGLGCM_RGB5_A1_SCE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_RGB5_A1_SCE                    = 0x600C,$/;"	e	enum:rglGcmEnum
RGLGCM_RGBA8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_RGBA8                          = 0x8058,$/;"	e	enum:rglGcmEnum
RGLGCM_RGBX8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_RGBX8                          = 0xff07, \/\/ does not exist in classic OpenGL$/;"	e	enum:rglGcmEnum
RGLGCM_SAMPLES_PASSED	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SAMPLES_PASSED                 = 0xff10,$/;"	e	enum:rglGcmEnum
RGLGCM_SCALEDIMAGE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SCALEDIMAGE,$/;"	e	enum:__anon56
RGLGCM_SEMAPHORE_USING_CPU	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SEMAPHORE_USING_CPU            = 0xff21,$/;"	e	enum:rglGcmEnum
RGLGCM_SEMAPHORE_USING_GPU	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SEMAPHORE_USING_GPU            = 0xff20,$/;"	e	enum:rglGcmEnum
RGLGCM_SEMAPHORE_USING_GPU_NO_WRITE_FLUSH	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SEMAPHORE_USING_GPU_NO_WRITE_FLUSH = 0xff22,$/;"	e	enum:rglGcmEnum
RGLGCM_SEMA_BASE	ps3/rgl/src/include/rgl-constants.h	223;"	d
RGLGCM_SEMA_FENCE	ps3/rgl/src/include/rgl-constants.h	224;"	d
RGLGCM_SEMA_NEVENTS	ps3/rgl/src/include/rgl-constants.h	222;"	d
RGLGCM_SET	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SET                            = 0x150F,$/;"	e	enum:rglGcmEnum
RGLGCM_SETRENDERTARGET_MAXCOUNT	ps3/rgl/src/include/rgl-constants.h	249;"	d
RGLGCM_SHORT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SHORT                          = 0x1402,$/;"	e	enum:rglGcmEnum
RGLGCM_SRC_ALPHA	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SRC_ALPHA                      = 0x0302,$/;"	e	enum:rglGcmEnum
RGLGCM_SRC_ALPHA_SATURATE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SRC_ALPHA_SATURATE             = 0x0308,$/;"	e	enum:rglGcmEnum
RGLGCM_SRC_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SRC_COLOR                      = 0x0300,$/;"	e	enum:rglGcmEnum
RGLGCM_STENCIL_BUFFER_BIT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_STENCIL_BUFFER_BIT             = 0x0400,$/;"	e	enum:rglGcmEnum
RGLGCM_SUBCHANNEL_SHIFT	ps3/rgl/src/include/rgl-constants.h	307;"	d
RGLGCM_SUBPIXEL_ADJUST	ps3/rgl/src/include/rgl-constants.h	376;"	d
RGLGCM_SURFACE_POOL_LINEAR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_POOL_LINEAR,$/;"	e	enum:__anon58
RGLGCM_SURFACE_POOL_NONE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_POOL_NONE,$/;"	e	enum:__anon58
RGLGCM_SURFACE_SOURCE_DEVICE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_SOURCE_DEVICE,$/;"	e	enum:__anon57
RGLGCM_SURFACE_SOURCE_PBO	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_SOURCE_PBO,$/;"	e	enum:__anon57
RGLGCM_SURFACE_SOURCE_RENDERBUFFER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_SOURCE_RENDERBUFFER,$/;"	e	enum:__anon57
RGLGCM_SURFACE_SOURCE_TEMPORARY	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_SOURCE_TEMPORARY,$/;"	e	enum:__anon57
RGLGCM_SURFACE_SOURCE_TEXTURE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_SURFACE_SOURCE_TEXTURE,$/;"	e	enum:__anon57
RGLGCM_TEXTURE_1D	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_1D                     = 0x0DE0,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_2D	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_2D                     = 0x0DE1,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_3D	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_3D                     = 0x806F,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_BORDER_COLOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_BORDER_COLOR           = 0x1004,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_COMPARE_FUNC	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_COMPARE_FUNC           = 0x884D,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_CUBE_MAP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_CUBE_MAP               = 0x8513,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_GAMMA_REMAP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_GAMMA_REMAP            = 0xff30,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_LOD_BIAS	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_LOD_BIAS               = 0x8501,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_MAG_FILTER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_MAG_FILTER             = 0x2800,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_MAX_ANISOTROPY	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_MAX_ANISOTROPY         = 0x84FE,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_MAX_LOD	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_MAX_LOD                = 0x813B,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_MIN_FILTER	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_MIN_FILTER             = 0x2801,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_MIN_LOD	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_MIN_LOD                = 0x813A,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_WRAP_R	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_WRAP_R                 = 0x8072,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_WRAP_S	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_WRAP_S                 = 0x2802,$/;"	e	enum:rglGcmEnum
RGLGCM_TEXTURE_WRAP_T	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TEXTURE_WRAP_T                 = 0x2803,$/;"	e	enum:rglGcmEnum
RGLGCM_TILED_BUFFER_ALIGNMENT	ps3/rgl/src/include/rgl-constants.h	381;"	d
RGLGCM_TILED_BUFFER_ALIGNMENT	ps3/rgl/src/rgl_ps3.cpp	2156;"	d	file:
RGLGCM_TILED_BUFFER_HEIGHT_ALIGNMENT	ps3/rgl/src/include/rgl-constants.h	382;"	d
RGLGCM_TILED_BUFFER_HEIGHT_ALIGNMENT	ps3/rgl/src/rgl_ps3.cpp	2157;"	d	file:
RGLGCM_TRANSIENT_ENTRIES_DEFAULT	ps3/rgl/src/include/rgl-constants.h	216;"	d
RGLGCM_TRANSIENT_MEMORY_DEFAULT	ps3/rgl/src/include/rgl-constants.h	212;"	d
RGLGCM_TRIANGLES	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TRIANGLES                      = 0x0004,$/;"	e	enum:rglGcmEnum
RGLGCM_TRIANGLE_FAN	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TRIANGLE_FAN                   = 0x0006,$/;"	e	enum:rglGcmEnum
RGLGCM_TRIANGLE_STRIP	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_TRIANGLE_STRIP                 = 0x0005,$/;"	e	enum:rglGcmEnum
RGLGCM_UNSIGNED_BYTE	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_UNSIGNED_BYTE                  = 0x1401,$/;"	e	enum:rglGcmEnum
RGLGCM_UNSIGNED_INT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_UNSIGNED_INT                   = 0x1405,$/;"	e	enum:rglGcmEnum
RGLGCM_UNSIGNED_SHORT	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_UNSIGNED_SHORT                 = 0x1403,$/;"	e	enum:rglGcmEnum
RGLGCM_USE_MAIN_MEMORY_REPORTS	ps3/rgl/src/include/rgl-constants.h	270;"	d
RGLGCM_UTIL_LABEL_INDEX	ps3/rgl/src/include/rgl-inline.h	930;"	d
RGLGCM_VERTEX_ATTRIB_ARRAY0	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY0           = 0x8650,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY1	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY1           = 0x8651,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY10	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY10          = 0x865a,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY11	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY11          = 0x865b,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY12	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY12          = 0x865c,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY13	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY13          = 0x865d,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY14	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY14          = 0x865e,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY15	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY15          = 0x865f,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY2	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY2           = 0x8652,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY3	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY3           = 0x8653,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY4	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY4           = 0x8654,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY5	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY5           = 0x8655,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY6	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY6           = 0x8656,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY7	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY7           = 0x8657,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY8           = 0x8658,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_ATTRIB_ARRAY9	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_ATTRIB_ARRAY9           = 0x8659,$/;"	e	enum:rglGcmEnum
RGLGCM_VERTEX_PROGRAM	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_VERTEX_PROGRAM                 = 0x8620,$/;"	e	enum:rglGcmEnum
RGLGCM_VIEWPORT_EPSILON	ps3/rgl/src/include/rgl-constants.h	377;"	d
RGLGCM_XBGR8	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_XBGR8                          = 0xff03, \/\/ does not exist in classic OpenGL$/;"	e	enum:rglGcmEnum
RGLGCM_XOR	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_XOR                            = 0x1506,$/;"	e	enum:rglGcmEnum
RGLGCM_ZERO	ps3/rgl/src/include/rgl-constants.h	/^   RGLGCM_ZERO                           =      0,$/;"	e	enum:rglGcmEnum
RGLGENGLDEBUGPROC	gfx/glsym/glsym_es2.h	/^typedef void (APIENTRY *RGLGENGLDEBUGPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGENGLDEBUGPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRY *RGLGENGLDEBUGPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGENGLDEBUGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRY *RGLGENGLDEBUGPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGENGLDEBUGPROC	gfx/glsym/glsym_gl.h	/^typedef void (GL_APIENTRY *RGLGENGLDEBUGPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGENGLDEBUGPROCARB	gfx/glsym/glsym_es2.h	/^typedef void (APIENTRY *RGLGENGLDEBUGPROCARB)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGENGLDEBUGPROCARB	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRY *RGLGENGLDEBUGPROCARB)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar*, GLvoid*);$/;"	t
RGLGEN_DECL_H__	gfx/glsym/glsym_es2.h	2;"	d
RGLGEN_DECL_H__	gfx/glsym/glsym_gl.h	2;"	d
RGLGEN_H__	gfx/glsym/rglgen.h	2;"	d
RGLP_MAX_TEXTURE_SIZE	ps3/rgl/src/include/rgl-constants.h	13;"	d
RGLSYMGLACCUMXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t
RGLSYMGLACTIVESHADERPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
RGLSYMGLACTIVETEXTUREARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
RGLSYMGLACTIVETEXTUREPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
RGLSYMGLALPHAFUNCXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t
RGLSYMGLATTACHOBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
RGLSYMGLATTACHSHADERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
RGLSYMGLBEGINCONDITIONALRENDERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
RGLSYMGLBEGINQUERYARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
RGLSYMGLBEGINQUERYINDEXEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
RGLSYMGLBEGINQUERYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
RGLSYMGLBEGINTRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
RGLSYMGLBINDATTRIBLOCATIONARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
RGLSYMGLBINDATTRIBLOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
RGLSYMGLBINDBUFFERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
RGLSYMGLBINDBUFFERBASEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
RGLSYMGLBINDBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
RGLSYMGLBINDBUFFERRANGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
RGLSYMGLBINDFRAGDATALOCATIONINDEXEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
RGLSYMGLBINDFRAGDATALOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
RGLSYMGLBINDFRAMEBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
RGLSYMGLBINDIMAGETEXTUREPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
RGLSYMGLBINDPROGRAMARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
RGLSYMGLBINDPROGRAMPIPELINEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
RGLSYMGLBINDRENDERBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
RGLSYMGLBINDSAMPLERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
RGLSYMGLBINDTRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
RGLSYMGLBINDVERTEXARRAYOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t
RGLSYMGLBINDVERTEXARRAYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
RGLSYMGLBINDVERTEXBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
RGLSYMGLBITMAPXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);$/;"	t
RGLSYMGLBLENDCOLORPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
RGLSYMGLBLENDCOLORXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
RGLSYMGLBLENDEQUATIONIARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
RGLSYMGLBLENDEQUATIONIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
RGLSYMGLBLENDEQUATIONPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
RGLSYMGLBLENDEQUATIONSEPARATEIARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
RGLSYMGLBLENDEQUATIONSEPARATEIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
RGLSYMGLBLENDEQUATIONSEPARATEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
RGLSYMGLBLENDFUNCIARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
RGLSYMGLBLENDFUNCIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
RGLSYMGLBLENDFUNCSEPARATEIARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
RGLSYMGLBLENDFUNCSEPARATEIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
RGLSYMGLBLENDFUNCSEPARATEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
RGLSYMGLBLITFRAMEBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
RGLSYMGLBUFFERDATAARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
RGLSYMGLBUFFERDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
RGLSYMGLBUFFERSUBDATAARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
RGLSYMGLBUFFERSUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
RGLSYMGLCHECKFRAMEBUFFERSTATUSPROC	gfx/glsym/glsym_gl.h	/^typedef GLenum (APIENTRYP RGLSYMGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
RGLSYMGLCLAMPCOLORARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
RGLSYMGLCLAMPCOLORPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
RGLSYMGLCLEARACCUMXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
RGLSYMGLCLEARBUFFERDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
RGLSYMGLCLEARBUFFERFIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
RGLSYMGLCLEARBUFFERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
RGLSYMGLCLEARBUFFERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
RGLSYMGLCLEARBUFFERSUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
RGLSYMGLCLEARBUFFERUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
RGLSYMGLCLEARCOLORXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
RGLSYMGLCLEARDEPTHFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t
RGLSYMGLCLEARDEPTHFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
RGLSYMGLCLEARDEPTHXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t
RGLSYMGLCLIENTACTIVETEXTUREARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
RGLSYMGLCLIENTACTIVETEXTUREPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
RGLSYMGLCLIENTWAITSYNCPROC	gfx/glsym/glsym_gl.h	/^typedef GLenum (APIENTRYP RGLSYMGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
RGLSYMGLCLIPPLANEFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t
RGLSYMGLCLIPPLANEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t
RGLSYMGLCOLOR3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t
RGLSYMGLCOLOR3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t
RGLSYMGLCOLOR4XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
RGLSYMGLCOLOR4XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t
RGLSYMGLCOLORMASKIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
RGLSYMGLCOLORP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
RGLSYMGLCOLORP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
RGLSYMGLCOLORP4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
RGLSYMGLCOLORP4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
RGLSYMGLCOLORSUBTABLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
RGLSYMGLCOLORTABLEPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
RGLSYMGLCOLORTABLEPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
RGLSYMGLCOLORTABLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
RGLSYMGLCOMPILESHADERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
RGLSYMGLCOMPILESHADERINCLUDEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	t
RGLSYMGLCOMPILESHADERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE1DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE2DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE3DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);$/;"	t
RGLSYMGLCOMPRESSEDTEXIMAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);$/;"	t
RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
RGLSYMGLCONVOLUTIONFILTER1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
RGLSYMGLCONVOLUTIONFILTER2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLCONVOLUTIONPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLCOPYBUFFERSUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
RGLSYMGLCOPYCOLORSUBTABLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
RGLSYMGLCOPYCOLORTABLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
RGLSYMGLCOPYCONVOLUTIONFILTER1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
RGLSYMGLCOPYCONVOLUTIONFILTER2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLCOPYIMAGESUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
RGLSYMGLCOPYTEXSUBIMAGE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLCOPYTEXSUBIMAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLCREATEPROGRAMOBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLhandleARB (APIENTRYP RGLSYMGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
RGLSYMGLCREATEPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLCREATEPROGRAMPROC) (void);$/;"	t
RGLSYMGLCREATESHADEROBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLhandleARB (APIENTRYP RGLSYMGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
RGLSYMGLCREATESHADERPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLCREATESHADERPROC) (GLenum type);$/;"	t
RGLSYMGLCREATESHADERPROGRAMVPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* const *strings);$/;"	t
RGLSYMGLCREATESYNCFROMCLEVENTARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLsync (APIENTRYP RGLSYMGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	t
RGLSYMGLCURRENTPALETTEMATRIXARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
RGLSYMGLDEBUGMESSAGECALLBACKARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGECALLBACKARBPROC) (RGLGENGLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	t
RGLSYMGLDEBUGMESSAGECALLBACKPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLDEBUGMESSAGECALLBACKPROC) (RGLGENGLDEBUGPROC callback, const void *userParam);$/;"	t
RGLSYMGLDEBUGMESSAGECALLBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGECALLBACKPROC) (RGLGENGLDEBUGPROC callback, const void *userParam);$/;"	t
RGLSYMGLDEBUGMESSAGECONTROLARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
RGLSYMGLDEBUGMESSAGECONTROLPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
RGLSYMGLDEBUGMESSAGECONTROLPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
RGLSYMGLDEBUGMESSAGEINSERTARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
RGLSYMGLDEBUGMESSAGEINSERTPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
RGLSYMGLDEBUGMESSAGEINSERTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
RGLSYMGLDELETEBUFFERSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
RGLSYMGLDELETEBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
RGLSYMGLDELETEFRAMEBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
RGLSYMGLDELETENAMEDSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
RGLSYMGLDELETEOBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
RGLSYMGLDELETEPROGRAMPIPELINESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
RGLSYMGLDELETEPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
RGLSYMGLDELETEPROGRAMSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
RGLSYMGLDELETEQUERIESARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
RGLSYMGLDELETEQUERIESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
RGLSYMGLDELETERENDERBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
RGLSYMGLDELETESAMPLERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
RGLSYMGLDELETESHADERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETESHADERPROC) (GLuint shader);$/;"	t
RGLSYMGLDELETESYNCPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETESYNCPROC) (GLsync sync);$/;"	t
RGLSYMGLDELETETRANSFORMFEEDBACKSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
RGLSYMGLDELETEVERTEXARRAYSOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	t
RGLSYMGLDELETEVERTEXARRAYSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
RGLSYMGLDEPTHRANGEARRAYVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
RGLSYMGLDEPTHRANGEFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t
RGLSYMGLDEPTHRANGEFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
RGLSYMGLDEPTHRANGEINDEXEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
RGLSYMGLDEPTHRANGEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t
RGLSYMGLDETACHOBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
RGLSYMGLDETACHSHADERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
RGLSYMGLDISABLEIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
RGLSYMGLDISABLEVERTEXATTRIBARRAYARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
RGLSYMGLDISABLEVERTEXATTRIBARRAYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
RGLSYMGLDISPATCHCOMPUTEINDIRECTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
RGLSYMGLDISPATCHCOMPUTEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
RGLSYMGLDRAWARRAYSINDIRECTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t
RGLSYMGLDRAWARRAYSINSTANCEDARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
RGLSYMGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
RGLSYMGLDRAWARRAYSINSTANCEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
RGLSYMGLDRAWBUFFERSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
RGLSYMGLDRAWBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
RGLSYMGLDRAWELEMENTSBASEVERTEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
RGLSYMGLDRAWELEMENTSINDIRECTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	t
RGLSYMGLDRAWELEMENTSINSTANCEDARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
RGLSYMGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex);$/;"	t
RGLSYMGLDRAWELEMENTSINSTANCEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount);$/;"	t
RGLSYMGLDRAWRANGEELEMENTSBASEVERTEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
RGLSYMGLDRAWRANGEELEMENTSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
RGLSYMGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
RGLSYMGLDRAWTRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
RGLSYMGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
RGLSYMGLEGLIMAGETARGETTEXTURE2DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
RGLSYMGLENABLEIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
RGLSYMGLENABLEVERTEXATTRIBARRAYARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
RGLSYMGLENABLEVERTEXATTRIBARRAYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
RGLSYMGLENDCONDITIONALRENDERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENDCONDITIONALRENDERPROC) (void);$/;"	t
RGLSYMGLENDQUERYARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENDQUERYARBPROC) (GLenum target);$/;"	t
RGLSYMGLENDQUERYINDEXEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
RGLSYMGLENDQUERYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENDQUERYPROC) (GLenum target);$/;"	t
RGLSYMGLENDTRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
RGLSYMGLEVALCOORD1XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t
RGLSYMGLEVALCOORD1XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLEVALCOORD2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t
RGLSYMGLEVALCOORD2XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLFEEDBACKBUFFERXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);$/;"	t
RGLSYMGLFENCESYNCPROC	gfx/glsym/glsym_gl.h	/^typedef GLsync (APIENTRYP RGLSYMGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
RGLSYMGLFLUSHMAPPEDBUFFERRANGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
RGLSYMGLFOGCOORDDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
RGLSYMGLFOGCOORDDVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
RGLSYMGLFOGCOORDFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
RGLSYMGLFOGCOORDFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
RGLSYMGLFOGCOORDPOINTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLFOGXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t
RGLSYMGLFOGXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t
RGLSYMGLFRAMEBUFFERPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
RGLSYMGLFRAMEBUFFERRENDERBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURE1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURE2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURE3DOESPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTUREARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTUREFACEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURELAYERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTURELAYERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
RGLSYMGLFRAMEBUFFERTEXTUREPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
RGLSYMGLFRUSTUMFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
RGLSYMGLFRUSTUMXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	t
RGLSYMGLGENBUFFERSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
RGLSYMGLGENBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
RGLSYMGLGENERATEMIPMAPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
RGLSYMGLGENFRAMEBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
RGLSYMGLGENPROGRAMPIPELINESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
RGLSYMGLGENPROGRAMSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
RGLSYMGLGENQUERIESARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
RGLSYMGLGENQUERIESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
RGLSYMGLGENRENDERBUFFERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
RGLSYMGLGENSAMPLERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
RGLSYMGLGENTRANSFORMFEEDBACKSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
RGLSYMGLGENVERTEXARRAYSOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	t
RGLSYMGLGENVERTEXARRAYSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
RGLSYMGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETACTIVEATTRIBARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
RGLSYMGLGETACTIVEATTRIBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
RGLSYMGLGETACTIVESUBROUTINENAMEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
RGLSYMGLGETACTIVESUBROUTINEUNIFORMIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
RGLSYMGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
RGLSYMGLGETACTIVEUNIFORMARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
RGLSYMGLGETACTIVEUNIFORMBLOCKIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETACTIVEUNIFORMBLOCKNAMEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
RGLSYMGLGETACTIVEUNIFORMNAMEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
RGLSYMGLGETACTIVEUNIFORMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
RGLSYMGLGETACTIVEUNIFORMSIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETATTACHEDOBJECTSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
RGLSYMGLGETATTACHEDSHADERSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
RGLSYMGLGETATTRIBLOCATIONARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
RGLSYMGLGETATTRIBLOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
RGLSYMGLGETBOOLEANI_VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
RGLSYMGLGETBUFFERPARAMETERI64VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
RGLSYMGLGETBUFFERPARAMETERIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETBUFFERPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETBUFFERPOINTERVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
RGLSYMGLGETBUFFERPOINTERVOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, GLvoid** params);$/;"	t
RGLSYMGLGETBUFFERPOINTERVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
RGLSYMGLGETBUFFERSUBDATAARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
RGLSYMGLGETBUFFERSUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
RGLSYMGLGETCLIPPLANEFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t
RGLSYMGLGETCLIPPLANEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t
RGLSYMGLGETCOLORTABLEPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETCOLORTABLEPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETCOLORTABLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
RGLSYMGLGETCOMPRESSEDTEXIMAGEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
RGLSYMGLGETCOMPRESSEDTEXIMAGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
RGLSYMGLGETCONVOLUTIONFILTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
RGLSYMGLGETCONVOLUTIONPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETCONVOLUTIONPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETCONVOLUTIONPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETDEBUGMESSAGELOGARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
RGLSYMGLGETDEBUGMESSAGELOGPROC	gfx/glsym/glsym_es2.h	/^typedef GLuint (GL_APIENTRYP RGLSYMGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
RGLSYMGLGETDEBUGMESSAGELOGPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
RGLSYMGLGETDOUBLEI_VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
RGLSYMGLGETFIXEDVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETFLOATI_VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
RGLSYMGLGETFRAGDATAINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
RGLSYMGLGETFRAGDATALOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
RGLSYMGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETFRAMEBUFFERPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETGRAPHICSRESETSTATUSARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLenum (APIENTRYP RGLSYMGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
RGLSYMGLGETHANDLEARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLhandleARB (APIENTRYP RGLSYMGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
RGLSYMGLGETHISTOGRAMPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETHISTOGRAMPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETHISTOGRAMPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETHISTOGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
RGLSYMGLGETIMAGETRANSFORMPARAMETERFVHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETIMAGETRANSFORMPARAMETERIVHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETINFOLOGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
RGLSYMGLGETINTEGER64I_VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
RGLSYMGLGETINTEGER64VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
RGLSYMGLGETINTEGERI_VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
RGLSYMGLGETINTERNALFORMATI64VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
RGLSYMGLGETINTERNALFORMATIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
RGLSYMGLGETLIGHTXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETMAPXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t
RGLSYMGLGETMATERIALXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLGETMINMAXPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETMINMAXPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETMINMAXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
RGLSYMGLGETMULTISAMPLEFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
RGLSYMGLGETNAMEDSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
RGLSYMGLGETNAMEDSTRINGIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETNCOLORTABLEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);$/;"	t
RGLSYMGLGETNCOMPRESSEDTEXIMAGEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	t
RGLSYMGLGETNCONVOLUTIONFILTERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);$/;"	t
RGLSYMGLGETNHISTOGRAMARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
RGLSYMGLGETNMAPDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
RGLSYMGLGETNMAPFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
RGLSYMGLGETNMAPIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
RGLSYMGLGETNMINMAXARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
RGLSYMGLGETNPIXELMAPFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
RGLSYMGLGETNPIXELMAPUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
RGLSYMGLGETNPIXELMAPUSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
RGLSYMGLGETNPOLYGONSTIPPLEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t
RGLSYMGLGETNSEPARABLEFILTERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);$/;"	t
RGLSYMGLGETNTEXIMAGEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	t
RGLSYMGLGETNUNIFORMDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
RGLSYMGLGETNUNIFORMFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
RGLSYMGLGETNUNIFORMIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
RGLSYMGLGETNUNIFORMUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
RGLSYMGLGETOBJECTLABELPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
RGLSYMGLGETOBJECTLABELPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
RGLSYMGLGETOBJECTPARAMETERFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETOBJECTPARAMETERIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETOBJECTPTRLABELPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
RGLSYMGLGETOBJECTPTRLABELPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
RGLSYMGLGETPIXELMAPXVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t
RGLSYMGLGETPOINTERVPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t
RGLSYMGLGETPROGRAMBINARYOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
RGLSYMGLGETPROGRAMBINARYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
RGLSYMGLGETPROGRAMENVPARAMETERDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
RGLSYMGLGETPROGRAMENVPARAMETERFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
RGLSYMGLGETPROGRAMINFOLOGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
RGLSYMGLGETPROGRAMINTERFACEIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETPROGRAMIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETPROGRAMIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETPROGRAMLOCALPARAMETERDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
RGLSYMGLGETPROGRAMLOCALPARAMETERFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
RGLSYMGLGETPROGRAMPIPELINEINFOLOGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
RGLSYMGLGETPROGRAMPIPELINEIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETPROGRAMRESOURCEINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
RGLSYMGLGETPROGRAMRESOURCEIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
RGLSYMGLGETPROGRAMRESOURCELOCATIONINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
RGLSYMGLGETPROGRAMRESOURCELOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
RGLSYMGLGETPROGRAMRESOURCENAMEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
RGLSYMGLGETPROGRAMSTAGEIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
RGLSYMGLGETPROGRAMSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
RGLSYMGLGETQUERYINDEXEDIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETQUERYIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETQUERYIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETQUERYOBJECTI64VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
RGLSYMGLGETQUERYOBJECTIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETQUERYOBJECTIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETQUERYOBJECTUI64VPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
RGLSYMGLGETQUERYOBJECTUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
RGLSYMGLGETQUERYOBJECTUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
RGLSYMGLGETRENDERBUFFERPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETSAMPLERPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETSAMPLERPARAMETERIIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETSAMPLERPARAMETERIUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
RGLSYMGLGETSAMPLERPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETSEPARABLEFILTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
RGLSYMGLGETSHADERINFOLOGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
RGLSYMGLGETSHADERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETSHADERPRECISIONFORMATPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
RGLSYMGLGETSHADERSOURCEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
RGLSYMGLGETSHADERSOURCEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
RGLSYMGLGETSTRINGIPROC	gfx/glsym/glsym_gl.h	/^typedef const GLubyte * (APIENTRYP RGLSYMGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
RGLSYMGLGETSUBROUTINEINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
RGLSYMGLGETSUBROUTINEUNIFORMLOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
RGLSYMGLGETSYNCIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
RGLSYMGLGETTEXENVXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETTEXGENXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETTEXLEVELPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETTEXPARAMETERIIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETTEXPARAMETERIUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
RGLSYMGLGETTEXPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
RGLSYMGLGETTRANSFORMFEEDBACKVARYINGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
RGLSYMGLGETUNIFORMBLOCKINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef GLuint (APIENTRYP RGLSYMGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
RGLSYMGLGETUNIFORMDVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
RGLSYMGLGETUNIFORMFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
RGLSYMGLGETUNIFORMFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
RGLSYMGLGETUNIFORMINDICESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);$/;"	t
RGLSYMGLGETUNIFORMIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
RGLSYMGLGETUNIFORMIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
RGLSYMGLGETUNIFORMLOCATIONARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
RGLSYMGLGETUNIFORMLOCATIONPROC	gfx/glsym/glsym_gl.h	/^typedef GLint (APIENTRYP RGLSYMGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
RGLSYMGLGETUNIFORMSUBROUTINEUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
RGLSYMGLGETUNIFORMUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBDVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBIIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBIUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBLDVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
RGLSYMGLGETVERTEXATTRIBPOINTERVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
RGLSYMGLGETVERTEXATTRIBPOINTERVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
RGLSYMGLHISTOGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
RGLSYMGLIMAGETRANSFORMPARAMETERFHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
RGLSYMGLIMAGETRANSFORMPARAMETERFVHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
RGLSYMGLIMAGETRANSFORMPARAMETERIHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
RGLSYMGLIMAGETRANSFORMPARAMETERIVHPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
RGLSYMGLINDEXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINDEXXOESPROC) (GLfixed component);$/;"	t
RGLSYMGLINDEXXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t
RGLSYMGLINVALIDATEBUFFERDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
RGLSYMGLINVALIDATEBUFFERSUBDATAPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
RGLSYMGLINVALIDATEFRAMEBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
RGLSYMGLINVALIDATESUBFRAMEBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLINVALIDATETEXIMAGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
RGLSYMGLINVALIDATETEXSUBIMAGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
RGLSYMGLISBUFFERARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
RGLSYMGLISBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISBUFFERPROC) (GLuint buffer);$/;"	t
RGLSYMGLISENABLEDIPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
RGLSYMGLISFRAMEBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
RGLSYMGLISNAMEDSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
RGLSYMGLISPROGRAMARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISPROGRAMARBPROC) (GLuint program);$/;"	t
RGLSYMGLISPROGRAMPIPELINEPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
RGLSYMGLISPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISPROGRAMPROC) (GLuint program);$/;"	t
RGLSYMGLISQUERYARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISQUERYARBPROC) (GLuint id);$/;"	t
RGLSYMGLISQUERYPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISQUERYPROC) (GLuint id);$/;"	t
RGLSYMGLISRENDERBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
RGLSYMGLISSAMPLERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISSAMPLERPROC) (GLuint sampler);$/;"	t
RGLSYMGLISSHADERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISSHADERPROC) (GLuint shader);$/;"	t
RGLSYMGLISSYNCPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISSYNCPROC) (GLsync sync);$/;"	t
RGLSYMGLISTRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
RGLSYMGLISVERTEXARRAYOESPROC	gfx/glsym/glsym_es2.h	/^typedef GLboolean (GL_APIENTRYP RGLSYMGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t
RGLSYMGLISVERTEXARRAYPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
RGLSYMGLLIGHTMODELXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t
RGLSYMGLLIGHTMODELXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t
RGLSYMGLLIGHTXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLLIGHTXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLLINEWIDTHXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t
RGLSYMGLLINKPROGRAMARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
RGLSYMGLLINKPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLINKPROGRAMPROC) (GLuint program);$/;"	t
RGLSYMGLLOADMATRIXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t
RGLSYMGLLOADTRANSPOSEMATRIXDARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
RGLSYMGLLOADTRANSPOSEMATRIXDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
RGLSYMGLLOADTRANSPOSEMATRIXFARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
RGLSYMGLLOADTRANSPOSEMATRIXFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
RGLSYMGLLOADTRANSPOSEMATRIXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t
RGLSYMGLMAP1XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);$/;"	t
RGLSYMGLMAP2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);$/;"	t
RGLSYMGLMAPBUFFERARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLvoid* (APIENTRYP RGLSYMGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
RGLSYMGLMAPBUFFEROESPROC	gfx/glsym/glsym_es2.h	/^typedef void* (GL_APIENTRYP RGLSYMGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t
RGLSYMGLMAPBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef GLvoid* (APIENTRYP RGLSYMGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
RGLSYMGLMAPBUFFERRANGEPROC	gfx/glsym/glsym_gl.h	/^typedef GLvoid* (APIENTRYP RGLSYMGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
RGLSYMGLMAPGRID1XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t
RGLSYMGLMAPGRID2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);$/;"	t
RGLSYMGLMATERIALXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLMATERIALXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);$/;"	t
RGLSYMGLMATRIXINDEXPOINTERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLMATRIXINDEXUBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
RGLSYMGLMATRIXINDEXUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
RGLSYMGLMATRIXINDEXUSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
RGLSYMGLMEMORYBARRIERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
RGLSYMGLMINMAXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
RGLSYMGLMINSAMPLESHADINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
RGLSYMGLMINSAMPLESHADINGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
RGLSYMGLMULTIDRAWARRAYSINDIRECTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
RGLSYMGLMULTIDRAWARRAYSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
RGLSYMGLMULTIDRAWELEMENTSBASEVERTEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
RGLSYMGLMULTIDRAWELEMENTSINDIRECTPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
RGLSYMGLMULTIDRAWELEMENTSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);$/;"	t
RGLSYMGLMULTITEXCOORD1BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t
RGLSYMGLMULTITEXCOORD1BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
RGLSYMGLMULTITEXCOORD1DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
RGLSYMGLMULTITEXCOORD1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
RGLSYMGLMULTITEXCOORD1DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD1DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD1FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
RGLSYMGLMULTITEXCOORD1FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
RGLSYMGLMULTITEXCOORD1FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD1FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD1IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
RGLSYMGLMULTITEXCOORD1IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
RGLSYMGLMULTITEXCOORD1IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD1IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD1SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
RGLSYMGLMULTITEXCOORD1SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
RGLSYMGLMULTITEXCOORD1SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD1SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD1XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t
RGLSYMGLMULTITEXCOORD1XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
RGLSYMGLMULTITEXCOORD2BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t
RGLSYMGLMULTITEXCOORD2BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
RGLSYMGLMULTITEXCOORD2DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
RGLSYMGLMULTITEXCOORD2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
RGLSYMGLMULTITEXCOORD2DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD2FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
RGLSYMGLMULTITEXCOORD2FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
RGLSYMGLMULTITEXCOORD2FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD2IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
RGLSYMGLMULTITEXCOORD2IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
RGLSYMGLMULTITEXCOORD2IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD2IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD2SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
RGLSYMGLMULTITEXCOORD2SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
RGLSYMGLMULTITEXCOORD2SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD2SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t
RGLSYMGLMULTITEXCOORD2XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
RGLSYMGLMULTITEXCOORD3BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r);$/;"	t
RGLSYMGLMULTITEXCOORD3BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
RGLSYMGLMULTITEXCOORD3DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
RGLSYMGLMULTITEXCOORD3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
RGLSYMGLMULTITEXCOORD3DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD3FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
RGLSYMGLMULTITEXCOORD3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
RGLSYMGLMULTITEXCOORD3FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD3IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
RGLSYMGLMULTITEXCOORD3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
RGLSYMGLMULTITEXCOORD3IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD3SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
RGLSYMGLMULTITEXCOORD3SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
RGLSYMGLMULTITEXCOORD3SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD3SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);$/;"	t
RGLSYMGLMULTITEXCOORD3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
RGLSYMGLMULTITEXCOORD4BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t
RGLSYMGLMULTITEXCOORD4BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
RGLSYMGLMULTITEXCOORD4DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
RGLSYMGLMULTITEXCOORD4DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
RGLSYMGLMULTITEXCOORD4DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
RGLSYMGLMULTITEXCOORD4FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
RGLSYMGLMULTITEXCOORD4FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
RGLSYMGLMULTITEXCOORD4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
RGLSYMGLMULTITEXCOORD4IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
RGLSYMGLMULTITEXCOORD4IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
RGLSYMGLMULTITEXCOORD4IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD4IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
RGLSYMGLMULTITEXCOORD4SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
RGLSYMGLMULTITEXCOORD4SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
RGLSYMGLMULTITEXCOORD4SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD4SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
RGLSYMGLMULTITEXCOORD4XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
RGLSYMGLMULTITEXCOORD4XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
RGLSYMGLMULTITEXCOORDP1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
RGLSYMGLMULTITEXCOORDP1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLMULTITEXCOORDP2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
RGLSYMGLMULTITEXCOORDP2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLMULTITEXCOORDP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
RGLSYMGLMULTITEXCOORDP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLMULTITEXCOORDP4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
RGLSYMGLMULTITEXCOORDP4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLMULTMATRIXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t
RGLSYMGLMULTTRANSPOSEMATRIXDARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
RGLSYMGLMULTTRANSPOSEMATRIXDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
RGLSYMGLMULTTRANSPOSEMATRIXFARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
RGLSYMGLMULTTRANSPOSEMATRIXFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
RGLSYMGLMULTTRANSPOSEMATRIXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t
RGLSYMGLNAMEDSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
RGLSYMGLNORMAL3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t
RGLSYMGLNORMAL3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLNORMALP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
RGLSYMGLNORMALP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLOBJECTLABELPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
RGLSYMGLOBJECTLABELPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
RGLSYMGLOBJECTPTRLABELPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
RGLSYMGLOBJECTPTRLABELPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
RGLSYMGLORTHOFOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
RGLSYMGLORTHOXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	t
RGLSYMGLPASSTHROUGHXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t
RGLSYMGLPATCHPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
RGLSYMGLPATCHPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
RGLSYMGLPAUSETRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
RGLSYMGLPIXELMAPXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t
RGLSYMGLPIXELSTOREXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t
RGLSYMGLPIXELTRANSFERXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t
RGLSYMGLPIXELZOOMXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t
RGLSYMGLPOINTPARAMETERFARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
RGLSYMGLPOINTPARAMETERFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
RGLSYMGLPOINTPARAMETERFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
RGLSYMGLPOINTPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
RGLSYMGLPOINTPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
RGLSYMGLPOINTPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
RGLSYMGLPOINTPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLPOINTSIZEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t
RGLSYMGLPOLYGONOFFSETXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t
RGLSYMGLPOPDEBUGGROUPPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLPOPDEBUGGROUPPROC) (void);$/;"	t
RGLSYMGLPOPDEBUGGROUPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPOPDEBUGGROUPPROC) (void);$/;"	t
RGLSYMGLPRIMITIVERESTARTINDEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
RGLSYMGLPRIORITIZETEXTURESXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);$/;"	t
RGLSYMGLPROGRAMBINARYOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLint length);$/;"	t
RGLSYMGLPROGRAMBINARYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	t
RGLSYMGLPROGRAMENVPARAMETER4DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLPROGRAMENVPARAMETER4DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
RGLSYMGLPROGRAMENVPARAMETER4FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
RGLSYMGLPROGRAMENVPARAMETER4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
RGLSYMGLPROGRAMLOCALPARAMETER4DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLPROGRAMLOCALPARAMETER4DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
RGLSYMGLPROGRAMLOCALPARAMETER4FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
RGLSYMGLPROGRAMLOCALPARAMETER4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
RGLSYMGLPROGRAMPARAMETERIARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
RGLSYMGLPROGRAMPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
RGLSYMGLPROGRAMSTRINGARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
RGLSYMGLPROGRAMUNIFORM1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
RGLSYMGLPROGRAMUNIFORM1DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM1FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
RGLSYMGLPROGRAMUNIFORM1FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM1IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
RGLSYMGLPROGRAMUNIFORM1IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
RGLSYMGLPROGRAMUNIFORM1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
RGLSYMGLPROGRAMUNIFORM2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM2FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
RGLSYMGLPROGRAMUNIFORM2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM2IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
RGLSYMGLPROGRAMUNIFORM2IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
RGLSYMGLPROGRAMUNIFORM2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
RGLSYMGLPROGRAMUNIFORM3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
RGLSYMGLPROGRAMUNIFORM3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
RGLSYMGLPROGRAMUNIFORM3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
RGLSYMGLPROGRAMUNIFORM3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM4DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
RGLSYMGLPROGRAMUNIFORM4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM4FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
RGLSYMGLPROGRAMUNIFORM4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM4IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
RGLSYMGLPROGRAMUNIFORM4IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORM4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
RGLSYMGLPROGRAMUNIFORM4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2X3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2X3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2X4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX2X4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3X2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3X2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3X4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX3X4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4X2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4X2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4X3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLPROGRAMUNIFORMMATRIX4X3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLPROVOKINGVERTEXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
RGLSYMGLPUSHDEBUGGROUPPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
RGLSYMGLPUSHDEBUGGROUPPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
RGLSYMGLQUERYCOUNTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
RGLSYMGLQUERYMATRIXXOESPROC	gfx/glsym/glsym_gl.h	/^typedef GLbitfield (APIENTRYP RGLSYMGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t
RGLSYMGLRASTERPOS2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t
RGLSYMGLRASTERPOS2XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLRASTERPOS3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
RGLSYMGLRASTERPOS3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLRASTERPOS4XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t
RGLSYMGLRASTERPOS4XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLREADNPIXELSARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	t
RGLSYMGLRECTXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t
RGLSYMGLRECTXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t
RGLSYMGLRELEASESHADERCOMPILERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
RGLSYMGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLRENDERBUFFERSTORAGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLRESETHISTOGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
RGLSYMGLRESETMINMAXPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRESETMINMAXPROC) (GLenum target);$/;"	t
RGLSYMGLRESUMETRANSFORMFEEDBACKPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
RGLSYMGLROTATEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t
RGLSYMGLSAMPLECOVERAGEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t
RGLSYMGLSAMPLECOVERAGEOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);$/;"	t
RGLSYMGLSAMPLECOVERAGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
RGLSYMGLSAMPLEMASKIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
RGLSYMGLSAMPLERPARAMETERFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
RGLSYMGLSAMPLERPARAMETERFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
RGLSYMGLSAMPLERPARAMETERIIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
RGLSYMGLSAMPLERPARAMETERIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
RGLSYMGLSAMPLERPARAMETERIUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
RGLSYMGLSAMPLERPARAMETERIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
RGLSYMGLSCALEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
RGLSYMGLSCISSORARRAYVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
RGLSYMGLSCISSORINDEXEDPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLSCISSORINDEXEDVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3BPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3BVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3UBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3UBVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
RGLSYMGLSECONDARYCOLOR3USPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
RGLSYMGLSECONDARYCOLOR3USVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
RGLSYMGLSECONDARYCOLORP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
RGLSYMGLSECONDARYCOLORP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
RGLSYMGLSECONDARYCOLORPOINTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLSEPARABLEFILTER2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
RGLSYMGLSHADERBINARYPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	t
RGLSYMGLSHADERSOURCEARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
RGLSYMGLSHADERSOURCEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);$/;"	t
RGLSYMGLSHADERSTORAGEBLOCKBINDINGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
RGLSYMGLSTENCILFUNCSEPARATEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
RGLSYMGLSTENCILMASKSEPARATEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
RGLSYMGLSTENCILOPSEPARATEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
RGLSYMGLTEXBUFFERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
RGLSYMGLTEXBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
RGLSYMGLTEXBUFFERRANGEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
RGLSYMGLTEXCOORD1BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t
RGLSYMGLTEXCOORD1BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLTEXCOORD1XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t
RGLSYMGLTEXCOORD1XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLTEXCOORD2BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t
RGLSYMGLTEXCOORD2BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLTEXCOORD2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t
RGLSYMGLTEXCOORD2XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLTEXCOORD3BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t
RGLSYMGLTEXCOORD3BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLTEXCOORD3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t
RGLSYMGLTEXCOORD3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLTEXCOORD4BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t
RGLSYMGLTEXCOORD4BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLTEXCOORD4XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
RGLSYMGLTEXCOORD4XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLTEXCOORDP1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
RGLSYMGLTEXCOORDP1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLTEXCOORDP2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
RGLSYMGLTEXCOORDP2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLTEXCOORDP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
RGLSYMGLTEXCOORDP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLTEXCOORDP4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
RGLSYMGLTEXCOORDP4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
RGLSYMGLTEXENVXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLTEXENVXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLTEXGENXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLTEXGENXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLTEXIMAGE2DMULTISAMPLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
RGLSYMGLTEXIMAGE3DMULTISAMPLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
RGLSYMGLTEXIMAGE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);$/;"	t
RGLSYMGLTEXIMAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
RGLSYMGLTEXPARAMETERIIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
RGLSYMGLTEXPARAMETERIUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
RGLSYMGLTEXPARAMETERXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
RGLSYMGLTEXPARAMETERXVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
RGLSYMGLTEXSTORAGE1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
RGLSYMGLTEXSTORAGE2DMULTISAMPLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
RGLSYMGLTEXSTORAGE2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
RGLSYMGLTEXSTORAGE3DMULTISAMPLEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
RGLSYMGLTEXSTORAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
RGLSYMGLTEXSUBIMAGE3DOESPROC	gfx/glsym/glsym_es2.h	/^typedef void (GL_APIENTRYP RGLSYMGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);$/;"	t
RGLSYMGLTEXSUBIMAGE3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
RGLSYMGLTEXTUREVIEWPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
RGLSYMGLTRANSFORMFEEDBACKVARYINGSPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);$/;"	t
RGLSYMGLTRANSLATEXOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
RGLSYMGLUNIFORM1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
RGLSYMGLUNIFORM1DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORM1FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
RGLSYMGLUNIFORM1FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
RGLSYMGLUNIFORM1FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM1FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM1IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
RGLSYMGLUNIFORM1IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
RGLSYMGLUNIFORM1IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM1IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
RGLSYMGLUNIFORM1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLUNIFORM2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
RGLSYMGLUNIFORM2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORM2FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
RGLSYMGLUNIFORM2FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
RGLSYMGLUNIFORM2FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM2IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
RGLSYMGLUNIFORM2IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
RGLSYMGLUNIFORM2IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM2IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
RGLSYMGLUNIFORM2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLUNIFORM3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLUNIFORM3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORM3FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
RGLSYMGLUNIFORM3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
RGLSYMGLUNIFORM3FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM3IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
RGLSYMGLUNIFORM3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
RGLSYMGLUNIFORM3IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
RGLSYMGLUNIFORM3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLUNIFORM4DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLUNIFORM4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORM4FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
RGLSYMGLUNIFORM4FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
RGLSYMGLUNIFORM4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORM4IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
RGLSYMGLUNIFORM4IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
RGLSYMGLUNIFORM4IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM4IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
RGLSYMGLUNIFORM4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
RGLSYMGLUNIFORM4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
RGLSYMGLUNIFORMBLOCKBINDINGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
RGLSYMGLUNIFORMMATRIX2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2X3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2X3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2X4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX2X4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3X2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3X2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3X4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX3X4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4X2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4X2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4X3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
RGLSYMGLUNIFORMMATRIX4X3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
RGLSYMGLUNIFORMSUBROUTINESUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
RGLSYMGLUNMAPBUFFERARBPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
RGLSYMGLUNMAPBUFFEROESPROC	gfx/glsym/glsym_es2.h	/^typedef GLboolean (GL_APIENTRYP RGLSYMGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t
RGLSYMGLUNMAPBUFFERPROC	gfx/glsym/glsym_gl.h	/^typedef GLboolean (APIENTRYP RGLSYMGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
RGLSYMGLUSEPROGRAMOBJECTARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
RGLSYMGLUSEPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUSEPROGRAMPROC) (GLuint program);$/;"	t
RGLSYMGLUSEPROGRAMSTAGESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
RGLSYMGLVALIDATEPROGRAMARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
RGLSYMGLVALIDATEPROGRAMPIPELINEPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
RGLSYMGLVALIDATEPROGRAMPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
RGLSYMGLVERTEX2BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX2BOESPROC) (GLbyte x);$/;"	t
RGLSYMGLVERTEX2BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLVERTEX2XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX2XOESPROC) (GLfixed x);$/;"	t
RGLSYMGLVERTEX2XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLVERTEX3BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX3BOESPROC) (GLbyte x, GLbyte y);$/;"	t
RGLSYMGLVERTEX3BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLVERTEX3XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t
RGLSYMGLVERTEX3XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLVERTEX4BOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t
RGLSYMGLVERTEX4BVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t
RGLSYMGLVERTEX4XOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
RGLSYMGLVERTEX4XVOESPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t
RGLSYMGLVERTEXATTRIB1DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
RGLSYMGLVERTEXATTRIB1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
RGLSYMGLVERTEXATTRIB1DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB1DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB1FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
RGLSYMGLVERTEXATTRIB1FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
RGLSYMGLVERTEXATTRIB1FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB1FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB1SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
RGLSYMGLVERTEXATTRIB1SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
RGLSYMGLVERTEXATTRIB1SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB1SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB2DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
RGLSYMGLVERTEXATTRIB2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
RGLSYMGLVERTEXATTRIB2DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB2FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
RGLSYMGLVERTEXATTRIB2FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
RGLSYMGLVERTEXATTRIB2FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB2SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
RGLSYMGLVERTEXATTRIB2SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
RGLSYMGLVERTEXATTRIB2SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB2SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB3DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLVERTEXATTRIB3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLVERTEXATTRIB3DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB3FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
RGLSYMGLVERTEXATTRIB3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
RGLSYMGLVERTEXATTRIB3FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB3SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
RGLSYMGLVERTEXATTRIB3SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
RGLSYMGLVERTEXATTRIB3SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB3SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4BVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4BVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLVERTEXATTRIB4DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLVERTEXATTRIB4DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIB4FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
RGLSYMGLVERTEXATTRIB4FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
RGLSYMGLVERTEXATTRIB4FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB4FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLVERTEXATTRIB4IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NBVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NSVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUBARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
RGLSYMGLVERTEXATTRIB4NUBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
RGLSYMGLVERTEXATTRIB4NUBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUBVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4NUSVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
RGLSYMGLVERTEXATTRIB4SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
RGLSYMGLVERTEXATTRIB4SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4UBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4UBVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
RGLSYMGLVERTEXATTRIB4UIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIB4USVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
RGLSYMGLVERTEXATTRIB4USVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
RGLSYMGLVERTEXATTRIBBINDINGPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
RGLSYMGLVERTEXATTRIBDIVISORARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
RGLSYMGLVERTEXATTRIBDIVISORPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
RGLSYMGLVERTEXATTRIBFORMATPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
RGLSYMGLVERTEXATTRIBI1IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
RGLSYMGLVERTEXATTRIBI1IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
RGLSYMGLVERTEXATTRIBI1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI2IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
RGLSYMGLVERTEXATTRIBI2IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
RGLSYMGLVERTEXATTRIBI2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
RGLSYMGLVERTEXATTRIBI3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
RGLSYMGLVERTEXATTRIBI3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4BVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
RGLSYMGLVERTEXATTRIBI4IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4UBVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
RGLSYMGLVERTEXATTRIBI4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
RGLSYMGLVERTEXATTRIBI4USVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
RGLSYMGLVERTEXATTRIBIFORMATPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
RGLSYMGLVERTEXATTRIBIPOINTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLVERTEXATTRIBL1DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
RGLSYMGLVERTEXATTRIBL1DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIBL2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
RGLSYMGLVERTEXATTRIBL2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIBL3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLVERTEXATTRIBL3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIBL4DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
RGLSYMGLVERTEXATTRIBL4DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
RGLSYMGLVERTEXATTRIBLFORMATPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
RGLSYMGLVERTEXATTRIBLPOINTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLVERTEXATTRIBP1UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
RGLSYMGLVERTEXATTRIBP1UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
RGLSYMGLVERTEXATTRIBP2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
RGLSYMGLVERTEXATTRIBP2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
RGLSYMGLVERTEXATTRIBP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
RGLSYMGLVERTEXATTRIBP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
RGLSYMGLVERTEXATTRIBP4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
RGLSYMGLVERTEXATTRIBP4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
RGLSYMGLVERTEXATTRIBPOINTERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLVERTEXATTRIBPOINTERPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLVERTEXBINDINGDIVISORPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
RGLSYMGLVERTEXBLENDARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
RGLSYMGLVERTEXP2UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
RGLSYMGLVERTEXP2UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
RGLSYMGLVERTEXP3UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
RGLSYMGLVERTEXP3UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
RGLSYMGLVERTEXP4UIPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
RGLSYMGLVERTEXP4UIVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
RGLSYMGLVIEWPORTARRAYVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
RGLSYMGLVIEWPORTINDEXEDFPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
RGLSYMGLVIEWPORTINDEXEDFVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
RGLSYMGLWAITSYNCPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
RGLSYMGLWEIGHTBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
RGLSYMGLWEIGHTDVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
RGLSYMGLWEIGHTFVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
RGLSYMGLWEIGHTIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
RGLSYMGLWEIGHTPOINTERARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
RGLSYMGLWEIGHTSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
RGLSYMGLWEIGHTUBVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
RGLSYMGLWEIGHTUIVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
RGLSYMGLWEIGHTUSVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
RGLSYMGLWINDOWPOS2DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
RGLSYMGLWINDOWPOS2DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
RGLSYMGLWINDOWPOS2DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
RGLSYMGLWINDOWPOS2DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
RGLSYMGLWINDOWPOS2FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
RGLSYMGLWINDOWPOS2FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
RGLSYMGLWINDOWPOS2FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
RGLSYMGLWINDOWPOS2FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
RGLSYMGLWINDOWPOS2IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
RGLSYMGLWINDOWPOS2IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
RGLSYMGLWINDOWPOS2IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
RGLSYMGLWINDOWPOS2IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
RGLSYMGLWINDOWPOS2SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
RGLSYMGLWINDOWPOS2SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
RGLSYMGLWINDOWPOS2SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
RGLSYMGLWINDOWPOS2SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
RGLSYMGLWINDOWPOS3DARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLWINDOWPOS3DPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
RGLSYMGLWINDOWPOS3DVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
RGLSYMGLWINDOWPOS3DVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
RGLSYMGLWINDOWPOS3FARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
RGLSYMGLWINDOWPOS3FPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
RGLSYMGLWINDOWPOS3FVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
RGLSYMGLWINDOWPOS3FVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
RGLSYMGLWINDOWPOS3IARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
RGLSYMGLWINDOWPOS3IPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
RGLSYMGLWINDOWPOS3IVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
RGLSYMGLWINDOWPOS3IVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
RGLSYMGLWINDOWPOS3SARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
RGLSYMGLWINDOWPOS3SPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
RGLSYMGLWINDOWPOS3SVARBPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
RGLSYMGLWINDOWPOS3SVPROC	gfx/glsym/glsym_gl.h	/^typedef void (APIENTRYP RGLSYMGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
RGL_ALIGN_FAST_TRANSFER	ps3/rgl/include/RGL/platform.h	10;"	d
RGL_ATTRIB_BLEND_INDICES_INDEX	ps3/rgl/include/RGL/Types.h	248;"	d
RGL_ATTRIB_BUFFER_ALIGNMENT	ps3/rgl/src/rgl_ps3_raster.cpp	1250;"	d	file:
RGL_ATTRIB_FOG_COORD_INDEX	ps3/rgl/include/RGL/Types.h	246;"	d
RGL_ATTRIB_NORMAL_INDEX	ps3/rgl/include/RGL/Types.h	243;"	d
RGL_ATTRIB_POINT_SIZE_INDEX	ps3/rgl/include/RGL/Types.h	247;"	d
RGL_ATTRIB_POSITION_INDEX	ps3/rgl/include/RGL/Types.h	241;"	d
RGL_ATTRIB_PRIMARY_COLOR_INDEX	ps3/rgl/include/RGL/Types.h	244;"	d
RGL_ATTRIB_SECONDARY_COLOR_INDEX	ps3/rgl/include/RGL/Types.h	245;"	d
RGL_ATTRIB_TEX_COORD0_INDEX	ps3/rgl/include/RGL/Types.h	249;"	d
RGL_ATTRIB_TEX_COORD1_INDEX	ps3/rgl/include/RGL/Types.h	250;"	d
RGL_ATTRIB_TEX_COORD2_INDEX	ps3/rgl/include/RGL/Types.h	251;"	d
RGL_ATTRIB_TEX_COORD3_INDEX	ps3/rgl/include/RGL/Types.h	252;"	d
RGL_ATTRIB_TEX_COORD4_INDEX	ps3/rgl/include/RGL/Types.h	253;"	d
RGL_ATTRIB_TEX_COORD5_INDEX	ps3/rgl/include/RGL/Types.h	254;"	d
RGL_ATTRIB_TEX_COORD6_INDEX	ps3/rgl/include/RGL/Types.h	255;"	d
RGL_ATTRIB_TEX_COORD7_INDEX	ps3/rgl/include/RGL/Types.h	256;"	d
RGL_ATTRIB_WEIGHT_INDEX	ps3/rgl/include/RGL/Types.h	242;"	d
RGL_BIG_ENDIAN	ps3/rgl/include/RGL/platform.h	7;"	d
RGL_BOOLEAN_REGISTERS_COUNT	ps3/rgl/include/Cg/CgCommon.h	20;"	d
RGL_BUFFERING_MODE_DOUBLE	ps3/rgl/include/export/RGL/rgl.h	79;"	d
RGL_BUFFERING_MODE_SINGLE	ps3/rgl/include/export/RGL/rgl.h	78;"	d
RGL_BUFFERING_MODE_TRIPLE	ps3/rgl/include/export/RGL/rgl.h	80;"	d
RGL_BUFFER_OBJECT_BLOCK_SIZE	ps3/rgl/src/include/rgl-constants.h	244;"	d
RGL_CONTEXT_ACTIVE_SURFACES	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACES$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_COLOR0	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_COLOR0,$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_COLOR1	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_COLOR1,$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_COLOR2	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_COLOR2,$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_COLOR3	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_COLOR3,$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_DEPTH	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_DEPTH,$/;"	e	enum:__anon70
RGL_CONTEXT_ACTIVE_SURFACE_STENCIL	ps3/rgl/include/RGL/Types.h	/^      RGL_CONTEXT_ACTIVE_SURFACE_STENCIL,$/;"	e	enum:__anon70
RGL_CONTEXT_ALPHA_MASK	ps3/rgl/include/RGL/Types.h	304;"	d
RGL_CONTEXT_BLUE_MASK	ps3/rgl/include/RGL/Types.h	303;"	d
RGL_CONTEXT_COLOR_MASK	ps3/rgl/include/RGL/Types.h	306;"	d
RGL_CONTEXT_DEPTH_MASK	ps3/rgl/include/RGL/Types.h	305;"	d
RGL_CONTEXT_GREEN_MASK	ps3/rgl/include/RGL/Types.h	302;"	d
RGL_CONTEXT_RED_MASK	ps3/rgl/include/RGL/Types.h	301;"	d
RGL_DEVICE_CONNECTOR_COMPONENT	ps3/rgl/include/export/RGL/rgl.h	99;"	d
RGL_DEVICE_CONNECTOR_COMPOSITE	ps3/rgl/include/export/RGL/rgl.h	97;"	d
RGL_DEVICE_CONNECTOR_DVI	ps3/rgl/include/export/RGL/rgl.h	95;"	d
RGL_DEVICE_CONNECTOR_HDMI	ps3/rgl/include/export/RGL/rgl.h	96;"	d
RGL_DEVICE_CONNECTOR_NONE	ps3/rgl/include/export/RGL/rgl.h	93;"	d
RGL_DEVICE_CONNECTOR_SVIDEO	ps3/rgl/include/export/RGL/rgl.h	98;"	d
RGL_DEVICE_CONNECTOR_VGA	ps3/rgl/include/export/RGL/rgl.h	94;"	d
RGL_DEVICE_PARAMETERS_BUFFERING_MODE	ps3/rgl/include/export/RGL/rgl.h	143;"	d
RGL_DEVICE_PARAMETERS_COLOR_FORMAT	ps3/rgl/include/export/RGL/rgl.h	138;"	d
RGL_DEVICE_PARAMETERS_CONNECTOR	ps3/rgl/include/export/RGL/rgl.h	142;"	d
RGL_DEVICE_PARAMETERS_DEPTH_FORMAT	ps3/rgl/include/export/RGL/rgl.h	139;"	d
RGL_DEVICE_PARAMETERS_MULTISAMPLING_MODE	ps3/rgl/include/export/RGL/rgl.h	140;"	d
RGL_DEVICE_PARAMETERS_RESC_ADJUST_ASPECT_RATIO	ps3/rgl/include/export/RGL/rgl.h	149;"	d
RGL_DEVICE_PARAMETERS_RESC_INTERLACE_MODE	ps3/rgl/include/export/RGL/rgl.h	148;"	d
RGL_DEVICE_PARAMETERS_RESC_PAL_TEMPORAL_MODE	ps3/rgl/include/export/RGL/rgl.h	147;"	d
RGL_DEVICE_PARAMETERS_RESC_RATIO_MODE	ps3/rgl/include/export/RGL/rgl.h	146;"	d
RGL_DEVICE_PARAMETERS_RESC_RENDER_WIDTH_HEIGHT	ps3/rgl/include/export/RGL/rgl.h	145;"	d
RGL_DEVICE_PARAMETERS_TV_STANDARD	ps3/rgl/include/export/RGL/rgl.h	141;"	d
RGL_DEVICE_PARAMETERS_WIDTH_HEIGHT	ps3/rgl/include/export/RGL/rgl.h	144;"	d
RGL_ENDIAN	ps3/rgl/include/RGL/platform.h	9;"	d
RGL_EXPORT	ps3/rgl/include/export/RGL/export.h	5;"	d
RGL_FRAMEBUFFER_ATTACHMENT_NONE	ps3/rgl/include/RGL/Types.h	/^      RGL_FRAMEBUFFER_ATTACHMENT_NONE,$/;"	e	enum:__anon66
RGL_FRAMEBUFFER_ATTACHMENT_RENDERBUFFER	ps3/rgl/include/RGL/Types.h	/^      RGL_FRAMEBUFFER_ATTACHMENT_RENDERBUFFER,$/;"	e	enum:__anon66
RGL_FRAMEBUFFER_ATTACHMENT_TEXTURE	ps3/rgl/include/RGL/Types.h	/^      RGL_FRAMEBUFFER_ATTACHMENT_TEXTURE,$/;"	e	enum:__anon66
RGL_IMAGE_DATASTATE_GPU	ps3/rgl/include/RGL/Types.h	/^      RGL_IMAGE_DATASTATE_GPU   = 0x2$/;"	e	enum:__anon61
RGL_IMAGE_DATASTATE_HOST	ps3/rgl/include/RGL/Types.h	/^      RGL_IMAGE_DATASTATE_HOST  = 0x1,$/;"	e	enum:__anon61
RGL_IMAGE_DATASTATE_UNSET	ps3/rgl/include/RGL/Types.h	/^      RGL_IMAGE_DATASTATE_UNSET = 0x0,	\/\/ not a flag, just a meaningful 0$/;"	e	enum:__anon61
RGL_INFINITY	ps3/rgl/include/RGL/TypeUtils.h	42;"	d
RGL_INIT_ERROR_CONSOLE	ps3/rgl/include/export/RGL/rgl.h	264;"	d
RGL_INIT_FIFO_SIZE	ps3/rgl/include/export/RGL/rgl.h	265;"	d
RGL_INIT_HOST_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	266;"	d
RGL_INIT_INITIALIZE_SPUS	ps3/rgl/include/export/RGL/rgl.h	261;"	d
RGL_INIT_MAX_SPUS	ps3/rgl/include/export/RGL/rgl.h	260;"	d
RGL_INIT_PERSISTENT_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	262;"	d
RGL_INIT_TRANSIENT_MEMORY_SIZE	ps3/rgl/include/export/RGL/rgl.h	263;"	d
RGL_INIT_USE_PMQUERIES	ps3/rgl/include/export/RGL/rgl.h	267;"	d
RGL_LIKELY	ps3/rgl/include/RGL/Utils.h	13;"	d
RGL_LIKELY	ps3/rgl/include/RGL/Utils.h	17;"	d
RGL_LITTLE_ENDIAN	ps3/rgl/include/RGL/platform.h	6;"	d
RGL_MAX_COLOR_ATTACHMENTS	ps3/rgl/include/RGL/Types.h	23;"	d
RGL_MAX_DPM_QUERIES	ps3/rgl/include/RGL/Types.h	341;"	d
RGL_MAX_FP_SHARED_CONSTANTS	ps3/rgl/include/Cg/CgCommon.h	19;"	d
RGL_MAX_TEXTURE_IMAGE_UNITS	ps3/rgl/include/RGL/Types.h	180;"	d
RGL_MAX_VERTEX_ATTRIBS	ps3/rgl/include/RGL/Types.h	183;"	d
RGL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	ps3/rgl/include/RGL/Types.h	181;"	d
RGL_MAX_VP_SHARED_CONSTANTS	ps3/rgl/include/Cg/CgCommon.h	18;"	d
RGL_NAN	ps3/rgl/include/RGL/TypeUtils.h	41;"	d
RGL_TEXTURE_REVALIDATE_IMAGES	ps3/rgl/include/RGL/Types.h	128;"	d
RGL_TEXTURE_REVALIDATE_LAYOUT	ps3/rgl/include/RGL/Types.h	127;"	d
RGL_TEXTURE_REVALIDATE_PARAMETERS	ps3/rgl/include/RGL/Types.h	129;"	d
RGL_TV_STANDARD_1280x720_ON_VESA_1280x1024	ps3/rgl/include/export/RGL/rgl.h	67;"	d
RGL_TV_STANDARD_1280x720_ON_VESA_1280x768	ps3/rgl/include/export/RGL/rgl.h	66;"	d
RGL_TV_STANDARD_1920x1080_ON_VESA_1920x1200	ps3/rgl/include/export/RGL/rgl.h	68;"	d
RGL_TV_STANDARD_HD1080I	ps3/rgl/include/export/RGL/rgl.h	64;"	d
RGL_TV_STANDARD_HD1080P	ps3/rgl/include/export/RGL/rgl.h	65;"	d
RGL_TV_STANDARD_HD480I	ps3/rgl/include/export/RGL/rgl.h	59;"	d
RGL_TV_STANDARD_HD480P	ps3/rgl/include/export/RGL/rgl.h	60;"	d
RGL_TV_STANDARD_HD576I	ps3/rgl/include/export/RGL/rgl.h	61;"	d
RGL_TV_STANDARD_HD576P	ps3/rgl/include/export/RGL/rgl.h	62;"	d
RGL_TV_STANDARD_HD720P	ps3/rgl/include/export/RGL/rgl.h	63;"	d
RGL_TV_STANDARD_NONE	ps3/rgl/include/export/RGL/rgl.h	48;"	d
RGL_TV_STANDARD_NTSC_J	ps3/rgl/include/export/RGL/rgl.h	50;"	d
RGL_TV_STANDARD_NTSC_M	ps3/rgl/include/export/RGL/rgl.h	49;"	d
RGL_TV_STANDARD_PAL_B	ps3/rgl/include/export/RGL/rgl.h	52;"	d
RGL_TV_STANDARD_PAL_D	ps3/rgl/include/export/RGL/rgl.h	53;"	d
RGL_TV_STANDARD_PAL_G	ps3/rgl/include/export/RGL/rgl.h	54;"	d
RGL_TV_STANDARD_PAL_H	ps3/rgl/include/export/RGL/rgl.h	55;"	d
RGL_TV_STANDARD_PAL_I	ps3/rgl/include/export/RGL/rgl.h	56;"	d
RGL_TV_STANDARD_PAL_M	ps3/rgl/include/export/RGL/rgl.h	51;"	d
RGL_TV_STANDARD_PAL_N	ps3/rgl/include/export/RGL/rgl.h	57;"	d
RGL_TV_STANDARD_PAL_NC	ps3/rgl/include/export/RGL/rgl.h	58;"	d
RGL_UNLIKELY	ps3/rgl/include/RGL/Utils.h	14;"	d
RGL_UNLIKELY	ps3/rgl/include/RGL/Utils.h	18;"	d
RGL_UNUSED	ps3/rgl/include/RGL/Utils.h	101;"	d
RGL_UNUSED	ps3/rgl/include/RGL/Utils.h	103;"	d
RGL_VALIDATE_ALL	ps3/rgl/include/export/RGL/rgl.h	215;"	d
RGL_VALIDATE_BLENDING	ps3/rgl/include/export/RGL/rgl.h	202;"	d
RGL_VALIDATE_CLIP_PLANES	ps3/rgl/include/export/RGL/rgl.h	211;"	d
RGL_VALIDATE_DEPTH_TEST	ps3/rgl/include/export/RGL/rgl.h	196;"	d
RGL_VALIDATE_FACE_CULL	ps3/rgl/include/export/RGL/rgl.h	201;"	d
RGL_VALIDATE_FFX_FRAGMENT_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	193;"	d
RGL_VALIDATE_FFX_VERTEX_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	191;"	d
RGL_VALIDATE_FRAGMENT_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	192;"	d
RGL_VALIDATE_FRAGMENT_SHARED_CONSTANTS	ps3/rgl/include/export/RGL/rgl.h	194;"	d
RGL_VALIDATE_FRAMEBUFFER	ps3/rgl/include/export/RGL/rgl.h	186;"	d
RGL_VALIDATE_LINE_RASTER	ps3/rgl/include/export/RGL/rgl.h	204;"	d
RGL_VALIDATE_LOGIC_OP	ps3/rgl/include/export/RGL/rgl.h	207;"	d
RGL_VALIDATE_MULTISAMPLING	ps3/rgl/include/export/RGL/rgl.h	208;"	d
RGL_VALIDATE_NONE	ps3/rgl/include/export/RGL/rgl.h	185;"	d
RGL_VALIDATE_POINT_RASTER	ps3/rgl/include/export/RGL/rgl.h	203;"	d
RGL_VALIDATE_POINT_SPRITE	ps3/rgl/include/export/RGL/rgl.h	213;"	d
RGL_VALIDATE_POLYGON_MODE	ps3/rgl/include/export/RGL/rgl.h	209;"	d
RGL_VALIDATE_POLYGON_OFFSET	ps3/rgl/include/export/RGL/rgl.h	205;"	d
RGL_VALIDATE_PRIMITIVE_RESTART	ps3/rgl/include/export/RGL/rgl.h	210;"	d
RGL_VALIDATE_SCISSOR_BOX	ps3/rgl/include/export/RGL/rgl.h	200;"	d
RGL_VALIDATE_SHADER_SRGB_REMAP	ps3/rgl/include/export/RGL/rgl.h	212;"	d
RGL_VALIDATE_SHADE_MODEL	ps3/rgl/include/export/RGL/rgl.h	206;"	d
RGL_VALIDATE_STENCIL_OP_AND_MASK	ps3/rgl/include/export/RGL/rgl.h	199;"	d
RGL_VALIDATE_STENCIL_TEST	ps3/rgl/include/export/RGL/rgl.h	198;"	d
RGL_VALIDATE_TEXTURES_USED	ps3/rgl/include/export/RGL/rgl.h	187;"	d
RGL_VALIDATE_TWO_SIDE_COLOR	ps3/rgl/include/export/RGL/rgl.h	214;"	d
RGL_VALIDATE_VERTEX_CONSTANTS	ps3/rgl/include/export/RGL/rgl.h	189;"	d
RGL_VALIDATE_VERTEX_PROGRAM	ps3/rgl/include/export/RGL/rgl.h	188;"	d
RGL_VALIDATE_VERTEX_TEXTURES_USED	ps3/rgl/include/export/RGL/rgl.h	190;"	d
RGL_VALIDATE_VIEWPORT	ps3/rgl/include/export/RGL/rgl.h	195;"	d
RGL_VALIDATE_WRITE_MASK	ps3/rgl/include/export/RGL/rgl.h	197;"	d
RGLcgContextHead	ps3/rgl/include/RGL/Types.h	/^      CGcontext RGLcgContextHead;$/;"	m	struct:RGLcontext	access:public
RGLcgErrorCallbackFunction	ps3/rgl/include/RGL/Types.h	/^      CGerrorCallbackFunc RGLcgErrorCallbackFunction;$/;"	m	struct:RGLcontext	access:public
RGLcgLastError	ps3/rgl/include/RGL/Types.h	/^      CGerror RGLcgLastError;$/;"	m	struct:RGLcontext	access:public
RGLcontext	ps3/rgl/include/RGL/Types.h	/^   struct RGLcontext$/;"	s
RGLcontext	ps3/rgl/include/export/RGL/rgl.h	219;"	d
RGLcontext::ActiveTexture	ps3/rgl/include/RGL/Types.h	/^      GLuint			ActiveTexture;$/;"	m	struct:RGLcontext	access:public
RGLcontext::ArrayBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	ArrayBuffer;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendColor	ps3/rgl/include/RGL/Types.h	/^      rglColorRGBAf	BlendColor;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendEquationAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendEquationAlpha;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendEquationRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendEquationRGB;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendFactorDestAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorDestAlpha;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendFactorDestRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorDestRGB;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendFactorSrcAlpha	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorSrcAlpha;$/;"	m	struct:RGLcontext	access:public
RGLcontext::BlendFactorSrcRGB	ps3/rgl/include/RGL/Types.h	/^      GLenum			BlendFactorSrcRGB;$/;"	m	struct:RGLcontext	access:public
RGLcontext::Blending	ps3/rgl/include/RGL/Types.h	/^      GLboolean		Blending;       \/\/ enable for mrt color target 0$/;"	m	struct:RGLcontext	access:public
RGLcontext::BoundFragmentProgram	ps3/rgl/include/RGL/Types.h	/^      struct _CGprogram*	BoundFragmentProgram;$/;"	m	struct:RGLcontext	typeref:struct:RGLcontext::_CGprogram	access:public
RGLcontext::BoundVertexProgram	ps3/rgl/include/RGL/Types.h	/^      struct _CGprogram*	BoundVertexProgram;$/;"	m	struct:RGLcontext	typeref:struct:RGLcontext::_CGprogram	access:public
RGLcontext::ColorLogicOp	ps3/rgl/include/RGL/Types.h	/^      GLboolean		ColorLogicOp;$/;"	m	struct:RGLcontext	access:public
RGLcontext::CurrentImageUnit	ps3/rgl/include/RGL/Types.h	/^      rglTextureImageUnit* CurrentImageUnit;$/;"	m	struct:RGLcontext	access:public
RGLcontext::DepthFar	ps3/rgl/include/RGL/Types.h	/^      GLclampf		DepthFar;$/;"	m	struct:RGLcontext	access:public
RGLcontext::DepthNear	ps3/rgl/include/RGL/Types.h	/^      GLclampf		DepthNear;$/;"	m	struct:RGLcontext	access:public
RGLcontext::Dithering	ps3/rgl/include/RGL/Types.h	/^      GLboolean		Dithering;$/;"	m	struct:RGLcontext	access:public
RGLcontext::DrawBuffer	ps3/rgl/include/RGL/Types.h	/^      GLenum			DrawBuffer, ReadBuffer;$/;"	m	struct:RGLcontext	access:public
RGLcontext::FragmentProgram	ps3/rgl/include/RGL/Types.h	/^      GLboolean		FragmentProgram;$/;"	m	struct:RGLcontext	access:public
RGLcontext::LastFPConstantModification	ps3/rgl/include/RGL/Types.h	/^      unsigned int	LastFPConstantModification;$/;"	m	struct:RGLcontext	access:public
RGLcontext::LogicOp	ps3/rgl/include/RGL/Types.h	/^      GLenum			LogicOp;$/;"	m	struct:RGLcontext	access:public
RGLcontext::PixelUnpackBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	PixelUnpackBuffer;$/;"	m	struct:RGLcontext	access:public
RGLcontext::RGLcgContextHead	ps3/rgl/include/RGL/Types.h	/^      CGcontext RGLcgContextHead;$/;"	m	struct:RGLcontext	access:public
RGLcontext::RGLcgErrorCallbackFunction	ps3/rgl/include/RGL/Types.h	/^      CGerrorCallbackFunc RGLcgErrorCallbackFunction;$/;"	m	struct:RGLcontext	access:public
RGLcontext::RGLcgLastError	ps3/rgl/include/RGL/Types.h	/^      CGerror RGLcgLastError;$/;"	m	struct:RGLcontext	access:public
RGLcontext::ReadBuffer	ps3/rgl/include/RGL/Types.h	/^      GLenum			DrawBuffer, ReadBuffer;$/;"	m	struct:RGLcontext	access:public
RGLcontext::SkipFirstVSync	ps3/rgl/include/RGL/Types.h	/^      GLboolean       SkipFirstVSync;$/;"	m	struct:RGLcontext	access:public
RGLcontext::TexCoordReplaceMask	ps3/rgl/include/RGL/Types.h	/^      GLuint	TexCoordReplaceMask;$/;"	m	struct:RGLcontext	access:public
RGLcontext::TextureBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	TextureBuffer;$/;"	m	struct:RGLcontext	access:public
RGLcontext::TextureImageUnits	ps3/rgl/include/RGL/Types.h	/^      rglTextureImageUnit	TextureImageUnits[RGL_MAX_TEXTURE_IMAGE_UNITS];$/;"	m	struct:RGLcontext	access:public
RGLcontext::VSync	ps3/rgl/include/RGL/Types.h	/^      GLboolean		VSync;$/;"	m	struct:RGLcontext	access:public
RGLcontext::VertexProgram	ps3/rgl/include/RGL/Types.h	/^      GLboolean		VertexProgram;$/;"	m	struct:RGLcontext	access:public
RGLcontext::ViewPort	ps3/rgl/include/RGL/Types.h	/^      rglViewPort		ViewPort;$/;"	m	struct:RGLcontext	access:public
RGLcontext::attribs	ps3/rgl/include/RGL/Types.h	/^      rglAttributeState *attribs;			\/\/ ptr to current rglAttributeState$/;"	m	struct:RGLcontext	access:public
RGLcontext::bufferObjectNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace	bufferObjectNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::cgContextNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgContextNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::cgParameterNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgParameterNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::cgProgramNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgProgramNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::defaultAttribs0	ps3/rgl/include/RGL/Types.h	/^      rglAttributeState defaultAttribs0;	\/\/ a default rglAttributeState, for bind = 0$/;"	m	struct:RGLcontext	access:public
RGLcontext::error	ps3/rgl/include/RGL/Types.h	/^      GLenum			error;$/;"	m	struct:RGLcontext	access:public
RGLcontext::everAttached	ps3/rgl/include/RGL/Types.h	/^      GLboolean		everAttached;$/;"	m	struct:RGLcontext	access:public
RGLcontext::framebuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint			framebuffer;	\/\/ GL_FRAMEBUFFER_OES binding$/;"	m	struct:RGLcontext	access:public
RGLcontext::framebufferNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace	framebufferNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::needValidate	ps3/rgl/include/RGL/Types.h	/^      GLuint			needValidate;$/;"	m	struct:RGLcontext	access:public
RGLcontext::packAlignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei		packAlignment;$/;"	m	struct:RGLcontext	access:public
RGLcontext::textureNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace textureNameSpace;$/;"	m	struct:RGLcontext	access:public
RGLcontext::unpackAlignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei		unpackAlignment;$/;"	m	struct:RGLcontext	access:public
RGLcontextHookFunction	ps3/rgl/include/RGL/private.h	/^typedef void( * RGLcontextHookFunction )( RGLcontext *context );$/;"	t
RGLdevice	ps3/rgl/include/RGL/Types.h	/^   struct RGLdevice$/;"	s
RGLdevice	ps3/rgl/include/export/RGL/rgl.h	217;"	d
RGLdevice::deviceParameters	ps3/rgl/include/RGL/Types.h	/^      PSGLdeviceParameters deviceParameters;$/;"	m	struct:RGLdevice	access:public
RGLdevice::platformDevice	ps3/rgl/include/RGL/Types.h	/^      char			platformDevice[]; \/\/ C99 flexible array member$/;"	m	struct:RGLdevice	access:public
RGLdevice::rasterDriver	ps3/rgl/include/RGL/Types.h	/^      GLvoid*			rasterDriver;$/;"	m	struct:RGLdevice	access:public
RGLdeviceParameters	ps3/rgl/include/export/RGL/rgl.h	218;"	d
RGLinitOptions	ps3/rgl/include/export/RGL/rgl.h	281;"	d
RGUI_ACTION_CANCEL	frontend/menu/menu_common.h	/^   RGUI_ACTION_CANCEL,$/;"	e	enum:__anon23
RGUI_ACTION_DOWN	frontend/menu/menu_common.h	/^   RGUI_ACTION_DOWN,$/;"	e	enum:__anon23
RGUI_ACTION_LEFT	frontend/menu/menu_common.h	/^   RGUI_ACTION_LEFT,$/;"	e	enum:__anon23
RGUI_ACTION_MAPPING_NEXT	frontend/menu/menu_common.h	/^   RGUI_ACTION_MAPPING_NEXT,$/;"	e	enum:__anon23
RGUI_ACTION_MAPPING_PREVIOUS	frontend/menu/menu_common.h	/^   RGUI_ACTION_MAPPING_PREVIOUS,$/;"	e	enum:__anon23
RGUI_ACTION_MESSAGE	frontend/menu/menu_common.h	/^   RGUI_ACTION_MESSAGE,$/;"	e	enum:__anon23
RGUI_ACTION_NOOP	frontend/menu/menu_common.h	/^   RGUI_ACTION_NOOP$/;"	e	enum:__anon23
RGUI_ACTION_OK	frontend/menu/menu_common.h	/^   RGUI_ACTION_OK,$/;"	e	enum:__anon23
RGUI_ACTION_REFRESH	frontend/menu/menu_common.h	/^   RGUI_ACTION_REFRESH,$/;"	e	enum:__anon23
RGUI_ACTION_RIGHT	frontend/menu/menu_common.h	/^   RGUI_ACTION_RIGHT,$/;"	e	enum:__anon23
RGUI_ACTION_SCROLL_DOWN	frontend/menu/menu_common.h	/^   RGUI_ACTION_SCROLL_DOWN,$/;"	e	enum:__anon23
RGUI_ACTION_SCROLL_UP	frontend/menu/menu_common.h	/^   RGUI_ACTION_SCROLL_UP,$/;"	e	enum:__anon23
RGUI_ACTION_START	frontend/menu/menu_common.h	/^   RGUI_ACTION_START,$/;"	e	enum:__anon23
RGUI_ACTION_UP	frontend/menu/menu_common.h	/^   RGUI_ACTION_UP,$/;"	e	enum:__anon23
RGUI_BROWSER_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_BROWSER_DIR_PATH,$/;"	e	enum:__anon22
RGUI_CONFIG_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_CONFIG_DIR_PATH,$/;"	e	enum:__anon22
RGUI_FILE_DEVICE	frontend/menu/menu_common.h	/^   RGUI_FILE_DEVICE,$/;"	e	enum:__anon22
RGUI_FILE_DIRECTORY	frontend/menu/menu_common.h	/^   RGUI_FILE_DIRECTORY,$/;"	e	enum:__anon22
RGUI_FILE_PLAIN	frontend/menu/menu_common.h	/^   RGUI_FILE_PLAIN,$/;"	e	enum:__anon22
RGUI_FILE_USE_DIRECTORY	frontend/menu/menu_common.h	/^   RGUI_FILE_USE_DIRECTORY,$/;"	e	enum:__anon22
RGUI_LIBRETRO_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_LIBRETRO_DIR_PATH,$/;"	e	enum:__anon22
RGUI_LIBRETRO_INFO_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_LIBRETRO_INFO_DIR_PATH,$/;"	e	enum:__anon22
RGUI_LIST_H__	file_list.h	18;"	d
RGUI_MAX_AXES	frontend/menu/menu_common.h	215;"	d
RGUI_MAX_BUTTONS	frontend/menu/menu_common.h	214;"	d
RGUI_MAX_HATS	frontend/menu/menu_common.h	216;"	d
RGUI_MAX_SHADERS	frontend/menu/menu_common.h	51;"	d
RGUI_OVERLAY_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_OVERLAY_DIR_PATH,$/;"	e	enum:__anon22
RGUI_SAVEFILE_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_SAVEFILE_DIR_PATH,$/;"	e	enum:__anon22
RGUI_SAVESTATE_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_SAVESTATE_DIR_PATH,$/;"	e	enum:__anon22
RGUI_SCREENSHOT_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_SCREENSHOT_DIR_PATH,$/;"	e	enum:__anon22
RGUI_SETTINGS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS,$/;"	e	enum:__anon22
RGUI_SETTINGS_AUDIO_CONTROL_RATE_DELTA	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_AUDIO_CONTROL_RATE_DELTA,$/;"	e	enum:__anon22
RGUI_SETTINGS_AUDIO_MUTE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_AUDIO_MUTE,$/;"	e	enum:__anon22
RGUI_SETTINGS_AUDIO_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_AUDIO_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_AUDIO_VOLUME_LEVEL	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_AUDIO_VOLUME_LEVEL,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_A	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_A,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_LEFT_X_MINUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_LEFT_X_MINUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_LEFT_X_PLUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_LEFT_X_PLUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_LEFT_Y_MINUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_LEFT_Y_MINUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_LEFT_Y_PLUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_LEFT_Y_PLUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_RIGHT_X_MINUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_RIGHT_X_MINUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_RIGHT_X_PLUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_RIGHT_X_PLUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_RIGHT_Y_MINUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_RIGHT_Y_MINUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_ANALOG_RIGHT_Y_PLUS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_ANALOG_RIGHT_Y_PLUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_B	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_B = RGUI_SETTINGS_BIND_BEGIN,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_BEGIN	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_BEGIN,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_DEVICE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_DEVICE,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_DEVICE_TYPE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_DEVICE_TYPE,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_DOWN	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_DOWN,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_L	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_L,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_L2	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_L2,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_L3	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_L3,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_LAST	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_LAST = RGUI_SETTINGS_BIND_ANALOG_RIGHT_Y_MINUS,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_LEFT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_LEFT,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_MENU_TOGGLE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_MENU_TOGGLE = RGUI_SETTINGS_BIND_BEGIN + RARCH_MENU_TOGGLE,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_PLAYER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_PLAYER,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_R	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_R,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_R2	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_R2,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_R3	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_R3,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_RIGHT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_RIGHT,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_SELECT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_SELECT,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_START	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_START,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_UP	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_UP,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_X	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_X,$/;"	e	enum:__anon22
RGUI_SETTINGS_BIND_Y	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_BIND_Y,$/;"	e	enum:__anon22
RGUI_SETTINGS_CONFIG	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CONFIG,$/;"	e	enum:__anon22
RGUI_SETTINGS_CONFIG_SAVE_ON_EXIT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CONFIG_SAVE_ON_EXIT,$/;"	e	enum:__anon22
RGUI_SETTINGS_CORE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CORE,$/;"	e	enum:__anon22
RGUI_SETTINGS_CORE_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CORE_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_CORE_OPTION_NONE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CORE_OPTION_NONE = 0xffff,$/;"	e	enum:__anon22
RGUI_SETTINGS_CORE_OPTION_START	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CORE_OPTION_START = 0x10000$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_BGM_CONTROL_ENABLE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_BGM_CONTROL_ENABLE,$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_BIND	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_BIND,$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_BIND_ALL	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_BIND_ALL,$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_BIND_DEFAULT_ALL	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_BIND_DEFAULT_ALL,$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_VIEWPORT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_VIEWPORT,$/;"	e	enum:__anon22
RGUI_SETTINGS_CUSTOM_VIEWPORT_2	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_CUSTOM_VIEWPORT_2,$/;"	e	enum:__anon22
RGUI_SETTINGS_DEBUG_TEXT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DEBUG_TEXT,$/;"	e	enum:__anon22
RGUI_SETTINGS_DEFERRED_CORE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DEFERRED_CORE,$/;"	e	enum:__anon22
RGUI_SETTINGS_DEVICE_AUTODETECT_ENABLE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DEVICE_AUTODETECT_ENABLE,$/;"	e	enum:__anon22
RGUI_SETTINGS_DISK_APPEND	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DISK_APPEND,$/;"	e	enum:__anon22
RGUI_SETTINGS_DISK_INDEX	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DISK_INDEX,$/;"	e	enum:__anon22
RGUI_SETTINGS_DISK_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DISK_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVERS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVERS,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVER_AUDIO	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVER_AUDIO,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVER_CAMERA	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVER_CAMERA,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVER_INPUT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVER_INPUT,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVER_LOCATION	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVER_LOCATION,$/;"	e	enum:__anon22
RGUI_SETTINGS_DRIVER_VIDEO	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_DRIVER_VIDEO,$/;"	e	enum:__anon22
RGUI_SETTINGS_FLICKER_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_FLICKER_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_GPU_SCREENSHOT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_GPU_SCREENSHOT,$/;"	e	enum:__anon22
RGUI_SETTINGS_INPUT_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_INPUT_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_OPEN_FILEBROWSER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OPEN_FILEBROWSER,$/;"	e	enum:__anon22
RGUI_SETTINGS_OPEN_FILEBROWSER_DEFERRED_CORE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OPEN_FILEBROWSER_DEFERRED_CORE,$/;"	e	enum:__anon22
RGUI_SETTINGS_OPEN_HISTORY	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OPEN_HISTORY,$/;"	e	enum:__anon22
RGUI_SETTINGS_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_OVERLAY_OPACITY	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OVERLAY_OPACITY,$/;"	e	enum:__anon22
RGUI_SETTINGS_OVERLAY_PRESET	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OVERLAY_PRESET,$/;"	e	enum:__anon22
RGUI_SETTINGS_OVERLAY_SCALE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_OVERLAY_SCALE,$/;"	e	enum:__anon22
RGUI_SETTINGS_PATH_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_PATH_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_QUIT_RARCH	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_QUIT_RARCH,$/;"	e	enum:__anon22
RGUI_SETTINGS_RESTART_EMULATOR	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_RESTART_EMULATOR,$/;"	e	enum:__anon22
RGUI_SETTINGS_RESTART_GAME	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_RESTART_GAME,$/;"	e	enum:__anon22
RGUI_SETTINGS_RESUME_GAME	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_RESUME_GAME,$/;"	e	enum:__anon22
RGUI_SETTINGS_REWIND_ENABLE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_REWIND_ENABLE,$/;"	e	enum:__anon22
RGUI_SETTINGS_REWIND_GRANULARITY	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_REWIND_GRANULARITY,$/;"	e	enum:__anon22
RGUI_SETTINGS_RSOUND_SERVER_IP_ADDRESS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_RSOUND_SERVER_IP_ADDRESS,$/;"	e	enum:__anon22
RGUI_SETTINGS_SAVESTATE_LOAD	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SAVESTATE_LOAD,$/;"	e	enum:__anon22
RGUI_SETTINGS_SAVESTATE_SAVE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SAVESTATE_SAVE,$/;"	e	enum:__anon22
RGUI_SETTINGS_SAVE_CONFIG	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SAVE_CONFIG,$/;"	e	enum:__anon22
RGUI_SETTINGS_SCREENSHOT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SCREENSHOT,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_0	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_0,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_0_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_0_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_0_SCALE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_0_SCALE,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_APPLY	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_APPLY,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_LAST	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_LAST = RGUI_SETTINGS_SHADER_0_SCALE + (3 * (RGUI_MAX_SHADERS - 1)),$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_PASSES	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_PASSES,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_PRESET	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_PRESET,$/;"	e	enum:__anon22
RGUI_SETTINGS_SHADER_PRESET_SAVE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SHADER_PRESET_SAVE,$/;"	e	enum:__anon22
RGUI_SETTINGS_SOFT_DISPLAY_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SOFT_DISPLAY_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_SRAM_AUTOSAVE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_SRAM_AUTOSAVE,$/;"	e	enum:__anon22
RGUI_SETTINGS_TOGGLE_FULLSCREEN	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_TOGGLE_FULLSCREEN,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_ASPECT_RATIO	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_ASPECT_RATIO,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_BLACK_FRAME_INSERTION	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_BLACK_FRAME_INSERTION,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_CROP_OVERSCAN	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_CROP_OVERSCAN,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_GAMMA	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_GAMMA,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_HARD_SYNC	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_HARD_SYNC,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_HARD_SYNC_FRAMES	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_HARD_SYNC_FRAMES,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_INTEGER_SCALE	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_INTEGER_SCALE,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_OPTIONS	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_OPTIONS,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_OPTIONS_FIRST	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_OPTIONS_FIRST,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_OPTIONS_LAST	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_OPTIONS_LAST,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_PAL60	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_PAL60,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_REFRESH_RATE_AUTO	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_REFRESH_RATE_AUTO,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_RESOLUTION	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_RESOLUTION,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_ROTATION	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_ROTATION,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_SOFT_FILTER	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_SOFT_FILTER,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_SWAP_INTERVAL	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_SWAP_INTERVAL,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_THREADED	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_THREADED,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_VSYNC	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_VSYNC,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_WINDOW_SCALE_X	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_WINDOW_SCALE_X,$/;"	e	enum:__anon22
RGUI_SETTINGS_VIDEO_WINDOW_SCALE_Y	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_VIDEO_WINDOW_SCALE_Y,$/;"	e	enum:__anon22
RGUI_SETTINGS_ZIP_EXTRACT	frontend/menu/menu_common.h	/^   RGUI_SETTINGS_ZIP_EXTRACT,$/;"	e	enum:__anon22
RGUI_SHADER_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_SHADER_DIR_PATH,$/;"	e	enum:__anon22
RGUI_START_SCREEN	frontend/menu/menu_common.h	/^   RGUI_START_SCREEN,$/;"	e	enum:__anon22
RGUI_SYSTEM_DIR_PATH	frontend/menu/menu_common.h	/^   RGUI_SYSTEM_DIR_PATH,$/;"	e	enum:__anon22
ROAR_CFLAGS	config.mk	/^ROAR_CFLAGS = $/;"	m
ROAR_LIBS	config.mk	/^ROAR_LIBS = $/;"	m
ROM_HISTORY_H__	frontend/menu/history.h	17;"	d
ROR32	hash.c	53;"	d	file:
ROUNDUP32	wii/mem2_manager.c	66;"	d	file:
ROW_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	123;"	d	file:
ROW_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	356;"	d	file:
ROW_MAJOR	ps3/rgl/src/rgl_ps3_raster.cpp	359;"	d	file:
RPNG_H__	gfx/rpng/rpng.h	17;"	d
RSD_ALAW	audio/rsound.h	/^      RSD_ALAW   = 0x0100,$/;"	e	enum:rsd_format
RSD_ALAW	audio/rsound.h	70;"	d
RSD_AUDIO_CALLBACK_T	audio/rsound.h	89;"	d
RSD_BUFSIZE	audio/rsound.h	/^      RSD_BUFSIZE,$/;"	e	enum:rsd_settings
RSD_BUFSIZE	audio/rsound.h	57;"	d
RSD_CALLBACK_LOCK	audio/rsound.h	92;"	d
RSD_CALLBACK_UNLOCK	audio/rsound.h	93;"	d
RSD_CHANNELS	audio/rsound.h	/^      RSD_CHANNELS,$/;"	e	enum:rsd_settings
RSD_CHANNELS	audio/rsound.h	54;"	d
RSD_CONN_DECNET	audio/librsound.c	/^   RSD_CONN_DECNET = 0x0002,$/;"	e	enum:rsd_conn_type	file:
RSD_CONN_PROTO	audio/librsound.c	/^   RSD_CONN_PROTO = 0x100$/;"	e	enum:rsd_conn_type	file:
RSD_CONN_TCP	audio/librsound.c	/^   RSD_CONN_TCP = 0x0000,$/;"	e	enum:rsd_conn_type	file:
RSD_CONN_UNIX	audio/librsound.c	/^   RSD_CONN_UNIX = 0x0001,$/;"	e	enum:rsd_conn_type	file:
RSD_DEBUG	audio/librsound.c	99;"	d	file:
RSD_DEFAULT_HOST	audio/rsound.h	40;"	d
RSD_DEFAULT_HOST	audio/rsound.h	42;"	d
RSD_DEFAULT_OBJECT	audio/rsound.h	46;"	d
RSD_DEFAULT_PORT	audio/rsound.h	44;"	d
RSD_DEFAULT_UNIX_SOCK	audio/rsound.h	45;"	d
RSD_DELAY_MS	audio/rsound.h	80;"	d
RSD_ERR	audio/librsound.c	98;"	d	file:
RSD_ERROR_CALLBACK_T	audio/rsound.h	90;"	d
RSD_EXEC	audio/rsound.h	82;"	d
RSD_FORMAT	audio/rsound.h	/^      RSD_FORMAT,$/;"	e	enum:rsd_settings
RSD_FORMAT	audio/rsound.h	59;"	d
RSD_HOST	audio/rsound.h	/^      RSD_HOST,$/;"	e	enum:rsd_settings
RSD_HOST	audio/rsound.h	55;"	d
RSD_IDENTITY	audio/rsound.h	/^      RSD_IDENTITY$/;"	e	enum:rsd_settings
RSD_IDENTITY	audio/rsound.h	60;"	d
RSD_LATENCY	audio/rsound.h	/^      RSD_LATENCY,$/;"	e	enum:rsd_settings
RSD_LATENCY	audio/rsound.h	58;"	d
RSD_LOG_DEBUG	audio/librsound.c	/^   RSD_LOG_DEBUG = 0,$/;"	e	enum:rsd_logtype	file:
RSD_LOG_ERR	audio/librsound.c	/^   RSD_LOG_ERR$/;"	e	enum:rsd_logtype	file:
RSD_LOG_WARN	audio/librsound.c	/^   RSD_LOG_WARN,$/;"	e	enum:rsd_logtype	file:
RSD_MULAW	audio/rsound.h	/^      RSD_MULAW  = 0x0200,$/;"	e	enum:rsd_format
RSD_MULAW	audio/rsound.h	71;"	d
RSD_NO_FMT	audio/rsound.h	/^      RSD_NO_FMT = 0x0000,$/;"	e	enum:rsd_format
RSD_NO_FMT	audio/rsound.h	85;"	d
RSD_PORT	audio/rsound.h	/^      RSD_PORT,$/;"	e	enum:rsd_settings
RSD_PORT	audio/rsound.h	56;"	d
RSD_PROTO_CHUNKSIZE	audio/librsound.c	914;"	d	file:
RSD_PROTO_MAXSIZE	audio/librsound.c	913;"	d	file:
RSD_S16_BE	audio/rsound.h	/^      RSD_S16_BE = 0x0002,$/;"	e	enum:rsd_format
RSD_S16_BE	audio/rsound.h	63;"	d
RSD_S16_LE	audio/rsound.h	/^      RSD_S16_LE = 0x0001,$/;"	e	enum:rsd_format
RSD_S16_LE	audio/rsound.h	62;"	d
RSD_S16_NE	audio/rsound.h	/^      RSD_S16_NE = 0x0040,$/;"	e	enum:rsd_format
RSD_S16_NE	audio/rsound.h	68;"	d
RSD_S32_BE	audio/rsound.h	/^      RSD_S32_BE = 0x0800,$/;"	e	enum:rsd_format
RSD_S32_BE	audio/rsound.h	74;"	d
RSD_S32_LE	audio/rsound.h	/^      RSD_S32_LE = 0x0400,$/;"	e	enum:rsd_format
RSD_S32_LE	audio/rsound.h	73;"	d
RSD_S32_NE	audio/rsound.h	/^      RSD_S32_NE = 0x1000,$/;"	e	enum:rsd_format
RSD_S32_NE	audio/rsound.h	75;"	d
RSD_S8	audio/rsound.h	/^      RSD_S8     = 0x0020,$/;"	e	enum:rsd_format
RSD_S8	audio/rsound.h	67;"	d
RSD_SAMPLERATE	audio/rsound.h	/^      RSD_SAMPLERATE = 0,$/;"	e	enum:rsd_settings
RSD_SAMPLERATE	audio/rsound.h	53;"	d
RSD_SAMPLESIZE	audio/rsound.h	81;"	d
RSD_SET_CALLBACK	audio/rsound.h	91;"	d
RSD_SIMPLE_START	audio/rsound.h	83;"	d
RSD_U16_BE	audio/rsound.h	/^      RSD_U16_BE = 0x0008,$/;"	e	enum:rsd_format
RSD_U16_BE	audio/rsound.h	65;"	d
RSD_U16_LE	audio/rsound.h	/^      RSD_U16_LE = 0x0004,$/;"	e	enum:rsd_format
RSD_U16_LE	audio/rsound.h	64;"	d
RSD_U16_NE	audio/rsound.h	/^      RSD_U16_NE = 0x0080,$/;"	e	enum:rsd_format
RSD_U16_NE	audio/rsound.h	69;"	d
RSD_U32_BE	audio/rsound.h	/^      RSD_U32_BE = 0x4000,$/;"	e	enum:rsd_format
RSD_U32_BE	audio/rsound.h	77;"	d
RSD_U32_LE	audio/rsound.h	/^      RSD_U32_LE = 0x2000,$/;"	e	enum:rsd_format
RSD_U32_LE	audio/rsound.h	76;"	d
RSD_U32_NE	audio/rsound.h	/^      RSD_U32_NE = 0x8000,$/;"	e	enum:rsd_format
RSD_U32_NE	audio/rsound.h	78;"	d
RSD_U8	audio/rsound.h	/^      RSD_U8     = 0x0010,$/;"	e	enum:rsd_format
RSD_U8	audio/rsound.h	66;"	d
RSD_USES_OPAQUE_TYPE	audio/rsound.h	86;"	d
RSD_USES_SAMPLESIZE_MEMBER	audio/rsound.h	87;"	d
RSD_VERSION	audio/rsound.h	49;"	d
RSD_WARN	audio/librsound.c	97;"	d	file:
RSND_HEADER_SIZE	audio/librsound.c	435;"	d	file:
RSOUND_CFLAGS	config.mk	/^RSOUND_CFLAGS = $/;"	m
RSOUND_LIBS	config.mk	/^RSOUND_LIBS = $/;"	m
RUN_LOOP_COCOA	apple/iOS/bluetooth/btstack/run_loop.h	/^	RUN_LOOP_COCOA,$/;"	e	enum:__anon151
RUN_LOOP_EMBEDDED	apple/iOS/bluetooth/btstack/run_loop.h	/^	RUN_LOOP_EMBEDDED$/;"	e	enum:__anon151
RUN_LOOP_POSIX	apple/iOS/bluetooth/btstack/run_loop.h	/^	RUN_LOOP_POSIX = 1,$/;"	e	enum:__anon151
RUN_LOOP_TYPE	apple/iOS/bluetooth/btstack/run_loop.h	/^} RUN_LOOP_TYPE;$/;"	t	typeref:enum:__anon151
RWebAudioBufferSize	emscripten/RWebAudio.h	/^size_t RWebAudioBufferSize(void);$/;"	p	signature:(void)
RWebAudioFree	emscripten/RWebAudio.h	/^void RWebAudioFree(void);$/;"	p	signature:(void)
RWebAudioInit	emscripten/RWebAudio.h	/^void *RWebAudioInit(unsigned latency);$/;"	p	signature:(unsigned latency)
RWebAudioSampleRate	emscripten/RWebAudio.h	/^unsigned RWebAudioSampleRate(void);$/;"	p	signature:(void)
RWebAudioSetNonblockState	emscripten/RWebAudio.h	/^void RWebAudioSetNonblockState(bool state);$/;"	p	signature:(bool state)
RWebAudioStart	emscripten/RWebAudio.h	/^bool RWebAudioStart(void);$/;"	p	signature:(void)
RWebAudioStop	emscripten/RWebAudio.h	/^bool RWebAudioStop(void);$/;"	p	signature:(void)
RWebAudioWrite	emscripten/RWebAudio.h	/^ssize_t RWebAudioWrite(const void *buf, size_t size);$/;"	p	signature:(const void *buf, size_t size)
RWebAudioWriteAvail	emscripten/RWebAudio.h	/^size_t RWebAudioWriteAvail(void);$/;"	p	signature:(void)
RWebCamFree	emscripten/RWebCam.h	/^void RWebCamFree(void *data);$/;"	p	signature:(void *data)
RWebCamInit	emscripten/RWebCam.h	/^void *RWebCamInit(uint64_t caps, unsigned width, unsigned height);$/;"	p	signature:(uint64_t caps, unsigned width, unsigned height)
RWebCamPoll	emscripten/RWebCam.h	/^bool RWebCamPoll(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb, retro_camera_frame_opengl_texture_t frame_gl_cb);$/;"	p	signature:(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb, retro_camera_frame_opengl_texture_t frame_gl_cb)
RWebCamStart	emscripten/RWebCam.h	/^bool RWebCamStart(void *data);$/;"	p	signature:(void *data)
RWebCamStop	emscripten/RWebCam.h	/^void RWebCamStop(void *data);$/;"	p	signature:(void *data)
RWebInputDestroy	emscripten/RWebInput.h	/^void RWebInputDestroy(int context);$/;"	p	signature:(int context)
RWebInputInit	emscripten/RWebInput.h	/^int RWebInputInit(void);$/;"	p	signature:(void)
RWebInputPoll	emscripten/RWebInput.h	/^rwebinput_state_t *RWebInputPoll(int context);$/;"	p	signature:(int context)
RXML_H__	compat/rxml/rxml.h	17;"	d
RXML_LIBXML2_COMPAT	cheats.c	37;"	d	file:
RXML_LIBXML2_COMPAT	gfx/shader_parse.c	27;"	d	file:
RXML_LIBXML2_COMPAT	griffin/griffin.c	595;"	d	file:
R_PPC_ADDR14	wii/app_booter/elf_abi.h	529;"	d
R_PPC_ADDR14_BRNTAKEN	wii/app_booter/elf_abi.h	531;"	d
R_PPC_ADDR14_BRTAKEN	wii/app_booter/elf_abi.h	530;"	d
R_PPC_ADDR16	wii/app_booter/elf_abi.h	525;"	d
R_PPC_ADDR16_HA	wii/app_booter/elf_abi.h	528;"	d
R_PPC_ADDR16_HI	wii/app_booter/elf_abi.h	527;"	d
R_PPC_ADDR16_LO	wii/app_booter/elf_abi.h	526;"	d
R_PPC_ADDR24	wii/app_booter/elf_abi.h	524;"	d
R_PPC_ADDR32	wii/app_booter/elf_abi.h	523;"	d
R_PPC_COPY	wii/app_booter/elf_abi.h	541;"	d
R_PPC_DIAB_RELSDA_HA	wii/app_booter/elf_abi.h	587;"	d
R_PPC_DIAB_RELSDA_HI	wii/app_booter/elf_abi.h	586;"	d
R_PPC_DIAB_RELSDA_LO	wii/app_booter/elf_abi.h	585;"	d
R_PPC_DIAB_SDA21_HA	wii/app_booter/elf_abi.h	584;"	d
R_PPC_DIAB_SDA21_HI	wii/app_booter/elf_abi.h	583;"	d
R_PPC_DIAB_SDA21_LO	wii/app_booter/elf_abi.h	582;"	d
R_PPC_EMB_BIT_FLD	wii/app_booter/elf_abi.h	578;"	d
R_PPC_EMB_MRKREF	wii/app_booter/elf_abi.h	573;"	d
R_PPC_EMB_NADDR16	wii/app_booter/elf_abi.h	565;"	d
R_PPC_EMB_NADDR16_HA	wii/app_booter/elf_abi.h	568;"	d
R_PPC_EMB_NADDR16_HI	wii/app_booter/elf_abi.h	567;"	d
R_PPC_EMB_NADDR16_LO	wii/app_booter/elf_abi.h	566;"	d
R_PPC_EMB_NADDR32	wii/app_booter/elf_abi.h	564;"	d
R_PPC_EMB_RELSDA	wii/app_booter/elf_abi.h	579;"	d
R_PPC_EMB_RELSEC16	wii/app_booter/elf_abi.h	574;"	d
R_PPC_EMB_RELST_HA	wii/app_booter/elf_abi.h	577;"	d
R_PPC_EMB_RELST_HI	wii/app_booter/elf_abi.h	576;"	d
R_PPC_EMB_RELST_LO	wii/app_booter/elf_abi.h	575;"	d
R_PPC_EMB_SDA21	wii/app_booter/elf_abi.h	572;"	d
R_PPC_EMB_SDA2I16	wii/app_booter/elf_abi.h	570;"	d
R_PPC_EMB_SDA2REL	wii/app_booter/elf_abi.h	571;"	d
R_PPC_EMB_SDAI16	wii/app_booter/elf_abi.h	569;"	d
R_PPC_GLOB_DAT	wii/app_booter/elf_abi.h	542;"	d
R_PPC_GOT16	wii/app_booter/elf_abi.h	536;"	d
R_PPC_GOT16_HA	wii/app_booter/elf_abi.h	539;"	d
R_PPC_GOT16_HI	wii/app_booter/elf_abi.h	538;"	d
R_PPC_GOT16_LO	wii/app_booter/elf_abi.h	537;"	d
R_PPC_JMP_SLOT	wii/app_booter/elf_abi.h	543;"	d
R_PPC_LOCAL24PC	wii/app_booter/elf_abi.h	545;"	d
R_PPC_NONE	wii/app_booter/elf_abi.h	522;"	d
R_PPC_NUM	wii/app_booter/elf_abi.h	560;"	d
R_PPC_PLT16_HA	wii/app_booter/elf_abi.h	553;"	d
R_PPC_PLT16_HI	wii/app_booter/elf_abi.h	552;"	d
R_PPC_PLT16_LO	wii/app_booter/elf_abi.h	551;"	d
R_PPC_PLT32	wii/app_booter/elf_abi.h	549;"	d
R_PPC_PLTREL24	wii/app_booter/elf_abi.h	540;"	d
R_PPC_PLTREL32	wii/app_booter/elf_abi.h	550;"	d
R_PPC_REL14	wii/app_booter/elf_abi.h	533;"	d
R_PPC_REL14_BRNTAKEN	wii/app_booter/elf_abi.h	535;"	d
R_PPC_REL14_BRTAKEN	wii/app_booter/elf_abi.h	534;"	d
R_PPC_REL24	wii/app_booter/elf_abi.h	532;"	d
R_PPC_REL32	wii/app_booter/elf_abi.h	548;"	d
R_PPC_RELATIVE	wii/app_booter/elf_abi.h	544;"	d
R_PPC_SDAREL16	wii/app_booter/elf_abi.h	554;"	d
R_PPC_SECTOFF	wii/app_booter/elf_abi.h	555;"	d
R_PPC_SECTOFF_HA	wii/app_booter/elf_abi.h	558;"	d
R_PPC_SECTOFF_HI	wii/app_booter/elf_abi.h	557;"	d
R_PPC_SECTOFF_LO	wii/app_booter/elf_abi.h	556;"	d
R_PPC_TOC16	wii/app_booter/elf_abi.h	591;"	d
R_PPC_UADDR16	wii/app_booter/elf_abi.h	547;"	d
R_PPC_UADDR32	wii/app_booter/elf_abi.h	546;"	d
R_RSX_FLOAT4	ps3/rgl/src/cg/cgbdefs.hpp	237;"	d
R_RSX_NONE	ps3/rgl/src/cg/cgbdefs.hpp	236;"	d
RarchMethods	gfx/py_state/py_state.c	/^static PyMethodDef RarchMethods[] = {$/;"	v	file:
RarchModule	gfx/py_state/py_state.c	/^static PyModuleDef RarchModule = {$/;"	v	file:
ReadBuffer	ps3/rgl/include/RGL/Types.h	/^      GLenum			DrawBuffer, ReadBuffer;$/;"	m	struct:RGLcontext	access:public
RecursionCount	frontend/platform/platform_xdk.h	/^	LONG RecursionCount;$/;"	m	struct:_KCRITICAL_SECTION	access:public
Reference	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Reference;               \/* reference value, read only       0048-004b*\/$/;"	m	struct:__anon54	access:public
ReferenceCount	frontend/platform/platform_xdk.h	/^    LONG ReferenceCount;$/;"	m	struct:_DEVICE_OBJECT	access:public
RegisterResource	xdk/xdk_resources.h	/^      LPDIRECT3DRESOURCE RegisterResource( LPDIRECT3DRESOURCE pResource ) const$/;"	f	class:PackedResource	access:public	signature:( LPDIRECT3DRESOURCE pResource ) const
RegisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^      virtual HRESULT RegisterXuiClasses();$/;"	p	class:CRetroArch	file:	access:protected	signature:()
RegisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArch::RegisterXuiClasses (void)$/;"	f	class:CRetroArch	signature:(void)
RenderChain	gfx/d3d9/render_chain.cpp	/^RenderChain::RenderChain(const video_info_t &video_info,$/;"	f	class:RenderChain	signature:(const video_info_t &video_info, IDirect3DDevice9 *dev_, CGcontext cgCtx_, const LinkInfo &info, PixelFormat fmt, const D3DVIEWPORT9 &final_viewport_)
RenderChain	gfx/d3d9/render_chain.hpp	/^      RenderChain(const video_info_t &video_info,$/;"	p	class:RenderChain	access:public	signature:(const video_info_t &video_info, IDirect3DDevice9 *dev, CGcontext cgCtx, const LinkInfo &info, PixelFormat fmt, const D3DVIEWPORT9 &final_viewport)
RenderChain	gfx/d3d9/render_chain.hpp	/^class RenderChain$/;"	c
RenderChain::ARGB	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	e	enum:RenderChain::PixelFormat
RenderChain::Pass	gfx/d3d9/render_chain.hpp	/^      struct Pass$/;"	s	class:RenderChain	access:private
RenderChain::Pass::attrib_map	gfx/d3d9/render_chain.hpp	/^         std::vector<unsigned> attrib_map;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::fPrg	gfx/d3d9/render_chain.hpp	/^         CGprogram vPrg, fPrg;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::info	gfx/d3d9/render_chain.hpp	/^         LinkInfo info;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::last_height	gfx/d3d9/render_chain.hpp	/^         unsigned last_width, last_height;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::last_width	gfx/d3d9/render_chain.hpp	/^         unsigned last_width, last_height;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::vPrg	gfx/d3d9/render_chain.hpp	/^         CGprogram vPrg, fPrg;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::vertex_buf	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexBuffer9 *vertex_buf;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::Pass::vertex_decl	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexDeclaration9 *vertex_decl;$/;"	m	struct:RenderChain::Pass	access:public
RenderChain::PixelFormat	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	g	class:RenderChain	access:public
RenderChain::RGB565	gfx/d3d9/render_chain.hpp	/^      enum PixelFormat { RGB565, ARGB };$/;"	e	enum:RenderChain::PixelFormat
RenderChain::RenderChain	gfx/d3d9/render_chain.cpp	/^RenderChain::RenderChain(const video_info_t &video_info,$/;"	f	class:RenderChain	signature:(const video_info_t &video_info, IDirect3DDevice9 *dev_, CGcontext cgCtx_, const LinkInfo &info, PixelFormat fmt, const D3DVIEWPORT9 &final_viewport_)
RenderChain::RenderChain	gfx/d3d9/render_chain.hpp	/^      RenderChain(const video_info_t &video_info,$/;"	p	class:RenderChain	access:public	signature:(const video_info_t &video_info, IDirect3DDevice9 *dev, CGcontext cgCtx, const LinkInfo &info, PixelFormat fmt, const D3DVIEWPORT9 &final_viewport)
RenderChain::Textures	gfx/d3d9/render_chain.hpp	/^      enum { Textures = 8, TexturesMask = Textures - 1 };$/;"	e	enum:RenderChain::__anon223
RenderChain::TexturesMask	gfx/d3d9/render_chain.hpp	/^      enum { Textures = 8, TexturesMask = Textures - 1 };$/;"	e	enum:RenderChain::__anon223
RenderChain::__anon224::last_height	gfx/d3d9/render_chain.hpp	/^         unsigned last_height[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
RenderChain::__anon224::last_width	gfx/d3d9/render_chain.hpp	/^         unsigned last_width[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
RenderChain::__anon224::ptr	gfx/d3d9/render_chain.hpp	/^         unsigned ptr;$/;"	m	struct:RenderChain::__anon224	access:public
RenderChain::__anon224::tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
RenderChain::__anon224::vertex_buf	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexBuffer9 *vertex_buf[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
RenderChain::add_lut	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_lut(const std::string &id,$/;"	f	class:RenderChain	signature:(const std::string &id, const std::string &path, bool smooth)
RenderChain::add_lut	gfx/d3d9/render_chain.hpp	/^      void add_lut(const std::string &id, const std::string &path, bool smooth);$/;"	p	class:RenderChain	access:public	signature:(const std::string &id, const std::string &path, bool smooth)
RenderChain::add_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_pass(const LinkInfo &info)$/;"	f	class:RenderChain	signature:(const LinkInfo &info)
RenderChain::add_pass	gfx/d3d9/render_chain.hpp	/^      void add_pass(const LinkInfo &info);$/;"	p	class:RenderChain	access:public	signature:(const LinkInfo &info)
RenderChain::add_state_tracker	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_state_tracker(std::shared_ptr<state_tracker_t> tracker)$/;"	f	class:RenderChain	signature:(std::shared_ptr<state_tracker_t> tracker)
RenderChain::add_state_tracker	gfx/d3d9/render_chain.hpp	/^      void add_state_tracker(std::shared_ptr<state_tracker_t> tracker);$/;"	p	class:RenderChain	access:public	signature:(std::shared_ptr<state_tracker_t> tracker)
RenderChain::bind_luts	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_luts(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
RenderChain::bind_luts	gfx/d3d9/render_chain.hpp	/^      void bind_luts(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
RenderChain::bind_orig	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_orig(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
RenderChain::bind_orig	gfx/d3d9/render_chain.hpp	/^      void bind_orig(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
RenderChain::bind_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_pass(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
RenderChain::bind_pass	gfx/d3d9/render_chain.hpp	/^      void bind_pass(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
RenderChain::bind_prev	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_prev(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
RenderChain::bind_prev	gfx/d3d9/render_chain.hpp	/^      void bind_prev(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
RenderChain::bind_tracker	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_tracker(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
RenderChain::bind_tracker	gfx/d3d9/render_chain.hpp	/^      void bind_tracker(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
RenderChain::blit_to_texture	gfx/d3d9/render_chain.cpp	/^void RenderChain::blit_to_texture(const void *frame,$/;"	f	class:RenderChain	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch)
RenderChain::blit_to_texture	gfx/d3d9/render_chain.hpp	/^      void blit_to_texture(const void *data,$/;"	p	class:RenderChain	access:private	signature:(const void *data, unsigned width, unsigned height, unsigned pitch)
RenderChain::bound_tex	gfx/d3d9/render_chain.hpp	/^      std::vector<unsigned> bound_tex;$/;"	m	class:RenderChain	access:private
RenderChain::bound_vert	gfx/d3d9/render_chain.hpp	/^      std::vector<unsigned> bound_vert;$/;"	m	class:RenderChain	access:private
RenderChain::cgCtx	gfx/d3d9/render_chain.hpp	/^      CGcontext cgCtx;$/;"	m	class:RenderChain	access:private
RenderChain::clear	gfx/d3d9/render_chain.cpp	/^void RenderChain::clear()$/;"	f	class:RenderChain	signature:()
RenderChain::clear	gfx/d3d9/render_chain.hpp	/^      void clear();$/;"	p	class:RenderChain	access:public	signature:()
RenderChain::clear_texture	gfx/d3d9/render_chain.cpp	/^void RenderChain::clear_texture(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
RenderChain::clear_texture	gfx/d3d9/render_chain.hpp	/^      void clear_texture(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
RenderChain::compile_shaders	gfx/d3d9/render_chain.cpp	/^void RenderChain::compile_shaders(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)$/;"	f	class:RenderChain	signature:(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)
RenderChain::compile_shaders	gfx/d3d9/render_chain.hpp	/^      void compile_shaders(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader);$/;"	p	class:RenderChain	access:private	signature:(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)
RenderChain::convert_geometry	gfx/d3d9/render_chain.cpp	/^void RenderChain::convert_geometry(const LinkInfo &info,$/;"	f	class:RenderChain	signature:(const LinkInfo &info, unsigned &out_width, unsigned &out_height, unsigned width, unsigned height, const D3DVIEWPORT9 &final_viewport)
RenderChain::convert_geometry	gfx/d3d9/render_chain.hpp	/^      static void convert_geometry(const LinkInfo &info,$/;"	p	class:RenderChain	access:public	signature:(const LinkInfo &info, unsigned &out_width, unsigned &out_height, unsigned width, unsigned height, const D3DVIEWPORT9 &final_viewport)
RenderChain::create_first_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::create_first_pass(const LinkInfo &info, PixelFormat fmt)$/;"	f	class:RenderChain	signature:(const LinkInfo &info, PixelFormat fmt)
RenderChain::create_first_pass	gfx/d3d9/render_chain.hpp	/^      void create_first_pass(const LinkInfo &info, PixelFormat fmt);$/;"	p	class:RenderChain	access:private	signature:(const LinkInfo &info, PixelFormat fmt)
RenderChain::dev	gfx/d3d9/render_chain.hpp	/^      IDirect3DDevice9 *dev;$/;"	m	class:RenderChain	access:private
RenderChain::end_render	gfx/d3d9/render_chain.cpp	/^void RenderChain::end_render()$/;"	f	class:RenderChain	signature:()
RenderChain::end_render	gfx/d3d9/render_chain.hpp	/^      void end_render();$/;"	p	class:RenderChain	access:private	signature:()
RenderChain::fStock	gfx/d3d9/render_chain.hpp	/^      CGprogram vStock, fStock;$/;"	m	class:RenderChain	access:private
RenderChain::final_viewport	gfx/d3d9/render_chain.hpp	/^      D3DVIEWPORT9 final_viewport;$/;"	m	class:RenderChain	access:private
RenderChain::frame_count	gfx/d3d9/render_chain.hpp	/^      unsigned frame_count;$/;"	m	class:RenderChain	access:private
RenderChain::init_fvf	gfx/d3d9/render_chain.cpp	/^void RenderChain::init_fvf(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
RenderChain::init_fvf	gfx/d3d9/render_chain.hpp	/^      void init_fvf(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
RenderChain::log_info	gfx/d3d9/render_chain.cpp	/^void RenderChain::log_info(const LinkInfo &info)$/;"	f	class:RenderChain	signature:(const LinkInfo &info)
RenderChain::log_info	gfx/d3d9/render_chain.hpp	/^      void log_info(const LinkInfo &info);$/;"	p	class:RenderChain	access:private	signature:(const LinkInfo &info)
RenderChain::lut_info	gfx/d3d9/render_chain.hpp	/^      struct lut_info$/;"	s	class:RenderChain	access:private
RenderChain::lut_info::id	gfx/d3d9/render_chain.hpp	/^         std::string id;$/;"	m	struct:RenderChain::lut_info	access:public
RenderChain::lut_info::smooth	gfx/d3d9/render_chain.hpp	/^         bool smooth;$/;"	m	struct:RenderChain::lut_info	access:public
RenderChain::lut_info::tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex;$/;"	m	struct:RenderChain::lut_info	access:public
RenderChain::luts	gfx/d3d9/render_chain.hpp	/^      std::vector<lut_info> luts;$/;"	m	class:RenderChain	access:private
RenderChain::passes	gfx/d3d9/render_chain.hpp	/^      std::vector<Pass> passes;$/;"	m	class:RenderChain	access:private
RenderChain::pixel_size	gfx/d3d9/render_chain.hpp	/^      unsigned pixel_size;$/;"	m	class:RenderChain	access:private
RenderChain::prev	gfx/d3d9/render_chain.hpp	/^      } prev;$/;"	m	class:RenderChain	typeref:struct:RenderChain::__anon224	access:private
RenderChain::render	gfx/d3d9/render_chain.cpp	/^bool RenderChain::render(const void *data,$/;"	f	class:RenderChain	signature:(const void *data, unsigned width, unsigned height, unsigned pitch, unsigned rotation)
RenderChain::render	gfx/d3d9/render_chain.hpp	/^      bool render(const void *data,$/;"	p	class:RenderChain	access:public	signature:(const void *data, unsigned width, unsigned height, unsigned pitch, unsigned rotation)
RenderChain::render_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::render_pass(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
RenderChain::render_pass	gfx/d3d9/render_chain.hpp	/^      void render_pass(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
RenderChain::set_cg_mvp	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_cg_mvp(CGprogram &vPrg,$/;"	f	class:RenderChain	signature:(CGprogram &vPrg, unsigned vp_width, unsigned vp_height, unsigned rotation)
RenderChain::set_cg_mvp	gfx/d3d9/render_chain.hpp	/^      void set_cg_mvp(CGprogram &vPrg,$/;"	p	class:RenderChain	access:private	signature:(CGprogram &vPrg, unsigned vp_width, unsigned vp_height, unsigned rotation)
RenderChain::set_cg_params	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_cg_params(Pass &pass,$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned video_w, unsigned video_h, unsigned tex_w, unsigned tex_h, unsigned viewport_w, unsigned viewport_h)
RenderChain::set_cg_params	gfx/d3d9/render_chain.hpp	/^      void set_cg_params(Pass &pass,$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned input_w, unsigned input_h, unsigned tex_w, unsigned tex_h, unsigned vp_w, unsigned vp_h)
RenderChain::set_final_viewport	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_final_viewport(const D3DVIEWPORT9& final_viewport)$/;"	f	class:RenderChain	signature:(const D3DVIEWPORT9& final_viewport)
RenderChain::set_final_viewport	gfx/d3d9/render_chain.hpp	/^      void set_final_viewport(const D3DVIEWPORT9 &final_viewport);$/;"	p	class:RenderChain	access:public	signature:(const D3DVIEWPORT9 &final_viewport)
RenderChain::set_pass_size	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_pass_size(unsigned pass_index, unsigned width, unsigned height)$/;"	f	class:RenderChain	signature:(unsigned pass_index, unsigned width, unsigned height)
RenderChain::set_pass_size	gfx/d3d9/render_chain.hpp	/^      void set_pass_size(unsigned pass, unsigned width, unsigned height);$/;"	p	class:RenderChain	access:public	signature:(unsigned pass, unsigned width, unsigned height)
RenderChain::set_shaders	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_shaders(CGprogram &fPrg, CGprogram &vPrg)$/;"	f	class:RenderChain	signature:(CGprogram &fPrg, CGprogram &vPrg)
RenderChain::set_shaders	gfx/d3d9/render_chain.hpp	/^      void set_shaders(CGprogram &fPrg, CGprogram &vPrg);$/;"	p	class:RenderChain	access:private	signature:(CGprogram &fPrg, CGprogram &vPrg)
RenderChain::set_vertices	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_vertices(Pass &pass,$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned width, unsigned height, unsigned out_width, unsigned out_height, unsigned vp_width, unsigned vp_height, unsigned rotation)
RenderChain::set_vertices	gfx/d3d9/render_chain.hpp	/^      void set_vertices(Pass &pass,$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned width, unsigned height, unsigned out_width, unsigned out_height, unsigned vp_width, unsigned vp_height, unsigned rotation)
RenderChain::set_viewport	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_viewport(const D3DVIEWPORT9 &vp)$/;"	f	class:RenderChain	signature:(const D3DVIEWPORT9 &vp)
RenderChain::set_viewport	gfx/d3d9/render_chain.hpp	/^      void set_viewport(const D3DVIEWPORT9 &vp);$/;"	p	class:RenderChain	access:private	signature:(const D3DVIEWPORT9 &vp)
RenderChain::start_render	gfx/d3d9/render_chain.cpp	/^void RenderChain::start_render()$/;"	f	class:RenderChain	signature:()
RenderChain::start_render	gfx/d3d9/render_chain.hpp	/^      void start_render();$/;"	p	class:RenderChain	access:private	signature:()
RenderChain::tracker	gfx/d3d9/render_chain.hpp	/^      std::shared_ptr<state_tracker_t> tracker;$/;"	m	class:RenderChain	access:private
RenderChain::translate_filter	gfx/d3d9/render_chain.cpp	/^D3DTEXTUREFILTERTYPE RenderChain::translate_filter(bool smooth)$/;"	f	class:RenderChain	signature:(bool smooth)
RenderChain::translate_filter	gfx/d3d9/render_chain.cpp	/^D3DTEXTUREFILTERTYPE RenderChain::translate_filter(enum gfx_filter_type type)$/;"	f	class:RenderChain	signature:(enum gfx_filter_type type)
RenderChain::translate_filter	gfx/d3d9/render_chain.hpp	/^      D3DTEXTUREFILTERTYPE translate_filter(bool smooth);$/;"	p	class:RenderChain	access:private	signature:(bool smooth)
RenderChain::translate_filter	gfx/d3d9/render_chain.hpp	/^      D3DTEXTUREFILTERTYPE translate_filter(enum gfx_filter_type type);$/;"	p	class:RenderChain	access:private	signature:(enum gfx_filter_type type)
RenderChain::unbind_all	gfx/d3d9/render_chain.cpp	/^void RenderChain::unbind_all()$/;"	f	class:RenderChain	signature:()
RenderChain::unbind_all	gfx/d3d9/render_chain.hpp	/^      void unbind_all();$/;"	p	class:RenderChain	access:private	signature:()
RenderChain::uniform_cnt	gfx/d3d9/render_chain.hpp	/^      unsigned uniform_cnt;$/;"	m	class:RenderChain	access:private
RenderChain::uniform_info	gfx/d3d9/render_chain.hpp	/^      struct state_tracker_uniform uniform_info[MAX_VARIABLES];$/;"	m	class:RenderChain	typeref:struct:RenderChain::state_tracker_uniform	access:private
RenderChain::vStock	gfx/d3d9/render_chain.hpp	/^      CGprogram vStock, fStock;$/;"	m	class:RenderChain	access:private
RenderChain::video_info	gfx/d3d9/render_chain.hpp	/^      const video_info_t &video_info;$/;"	m	class:RenderChain	access:private
RenderChain::~RenderChain	gfx/d3d9/render_chain.cpp	/^RenderChain::~RenderChain()$/;"	f	class:RenderChain	signature:()
RenderChain::~RenderChain	gfx/d3d9/render_chain.hpp	/^      ~RenderChain();$/;"	p	class:RenderChain	access:public	signature:()
Renderer	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public Renderer(Activity activity) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(Activity activity)
Renderer	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	private class Renderer implements GLSurfaceView.Renderer {$/;"	c	class:DisplayRefreshRateTest	inherits:GLSurfaceView.Renderer	access:private
RescColorBuffersId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescColorBuffersId;$/;"	m	struct:__anon50	access:public
RescFragmentShaderId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescFragmentShaderId;$/;"	m	struct:__anon50	access:public
RescInterlaceMode	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum RescInterlaceMode$/;"	g
RescInterlaceMode	ps3/rgl/include/export/RGL/rgl.h	/^} RescInterlaceMode;$/;"	t	typeref:enum:RescInterlaceMode
RescPalTemporalMode	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum RescPalTemporalMode$/;"	g
RescPalTemporalMode	ps3/rgl/include/export/RGL/rgl.h	/^} RescPalTemporalMode;$/;"	t	typeref:enum:RescPalTemporalMode
RescRatioMode	ps3/rgl/include/export/RGL/rgl.h	/^typedef enum RescRatioMode$/;"	g
RescRatioMode	ps3/rgl/include/export/RGL/rgl.h	/^} RescRatioMode;$/;"	t	typeref:enum:RescRatioMode
RescVertexArrayId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescVertexArrayId;$/;"	m	struct:__anon50	access:public
RetroActivityCamera	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^public class RetroActivityCamera extends RetroActivityCommon$/;"	c	inherits:RetroActivityCommon
RetroActivityCamera.camera_service_running	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private boolean camera_service_running = false;$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCamera.lastTimestamp	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private long lastTimestamp = 0;$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCamera.mCamera	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private Camera mCamera = null;$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCamera.onCameraFrameAvailableListener	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private final OnFrameAvailableListener onCameraFrameAvailableListener = new OnFrameAvailableListener()$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCamera.onCameraFree	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraFree()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onCameraInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraInit()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onCameraPoll	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public boolean onCameraPoll()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onCameraSetTexture	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraSetTexture(int gl_texid) throws IOException$/;"	m	class:RetroActivityCamera	access:public	signature:(int gl_texid)
RetroActivityCamera.onCameraStart	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraStart()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onCameraStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraStop()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onCameraTextureInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraTextureInit(int gl_texid)$/;"	m	class:RetroActivityCamera	access:public	signature:(int gl_texid)
RetroActivityCamera.onCreate	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:RetroActivityCamera	access:public	signature:(Bundle savedInstanceState)
RetroActivityCamera.onDestroy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onDestroy()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onPause	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onPause()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onResume	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onResume()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.onStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onStop()$/;"	m	class:RetroActivityCamera	access:public	signature:()
RetroActivityCamera.texture	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private SurfaceTexture texture;$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCamera.updateSurface	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private boolean updateSurface = true;$/;"	f	class:RetroActivityCamera	file:	access:private
RetroActivityCommon	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^public class RetroActivityCommon extends RetroActivityLocation$/;"	c	inherits:RetroActivityLocation
RetroActivityCommon.clearPendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void clearPendingIntent()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.getAndroidOSVersion	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public int getAndroidOSVersion()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.getPendingIntentConfigPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentConfigPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.getPendingIntentFullPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentFullPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.getPendingIntentIME	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentIME()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.getPendingIntentLibretroPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentLibretroPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.hasPendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public boolean hasPendingIntent()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.onBackPressed	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onBackPressed()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.onDestroy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onDestroy()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.onLowMemory	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onLowMemory()$/;"	m	class:RetroActivityCommon	access:public	signature:()
RetroActivityCommon.onNewIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onNewIntent(Intent intent)$/;"	m	class:RetroActivityCommon	access:public	signature:(Intent intent)
RetroActivityCommon.onTrimMemory	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onTrimMemory(int level)$/;"	m	class:RetroActivityCommon	access:public	signature:(int level)
RetroActivityCommon.pendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	private Intent pendingIntent = null;$/;"	f	class:RetroActivityCommon	file:	access:private
RetroActivityFuture	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityFuture.java	/^public final class RetroActivityFuture extends RetroActivityCamera$/;"	c	inherits:RetroActivityCamera
RetroActivityLocation	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^public class RetroActivityLocation extends NativeActivity$/;"	c	inherits:NativeActivity,GooglePlayServicesClient.ConnectionCallbacks,GooglePlayServicesClient.OnConnectionFailedListener,LocationListener,com.google.android.gms.location.LocationListener
RetroActivityLocation.CONNECTION_FAILURE_RESOLUTION_REQUEST	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private static int CONNECTION_FAILURE_RESOLUTION_REQUEST = 0;$/;"	f	class:RetroActivityLocation	file:	access:private
RetroActivityLocation.current_accuracy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_accuracy  = 0.0;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.current_latitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_latitude  = 0.0;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.current_longitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_longitude = 0.0;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.locationChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean locationChanged = false;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.location_service_running	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean location_service_running = false;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.mCurrentLocation	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private Location mCurrentLocation;$/;"	f	class:RetroActivityLocation	file:	access:private
RetroActivityLocation.mLocationClient	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private LocationClient mLocationClient = null;$/;"	f	class:RetroActivityLocation	file:	access:private
RetroActivityLocation.mLocationRequest	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	LocationRequest mLocationRequest = null;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.mUpdatesRequested	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean mUpdatesRequested = false;$/;"	f	class:RetroActivityLocation	access:default
RetroActivityLocation.onConnected	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onConnected(Bundle dataBundle)$/;"	m	class:RetroActivityLocation	access:public	signature:(Bundle dataBundle)
RetroActivityLocation.onConnectionFailed	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onConnectionFailed(ConnectionResult connectionResult)$/;"	m	class:RetroActivityLocation	access:public	signature:(ConnectionResult connectionResult)
RetroActivityLocation.onDisconnected	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onDisconnected()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationChanged(Location location)$/;"	m	class:RetroActivityLocation	access:public	signature:(Location location)
RetroActivityLocation.onLocationFree	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationFree()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationGetHorizontalAccuracy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public float onLocationGetHorizontalAccuracy()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationGetLatitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public double onLocationGetLatitude()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationGetLongitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public double onLocationGetLongitude()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationHasChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public boolean onLocationHasChanged()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationInit()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationSetInterval	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^   public void onLocationSetInterval(int update_interval_in_ms, int distance_interval)$/;"	m	class:RetroActivityLocation	access:public	signature:(int update_interval_in_ms, int distance_interval)
RetroActivityLocation.onLocationStart	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationStart()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onLocationStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationStop()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onPause	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onPause()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onProviderDisabled	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onProviderDisabled(String provider)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider)
RetroActivityLocation.onProviderEnabled	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onProviderEnabled(String provider)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider)
RetroActivityLocation.onResume	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onResume()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityLocation.onStatusChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onStatusChanged(String provider, int status, Bundle extras)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider, int status, Bundle extras)
RetroActivityLocation.onStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onStop()$/;"	m	class:RetroActivityLocation	access:public	signature:()
RetroActivityPast	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityPast.java	/^public final class RetroActivityPast extends RetroActivityCommon$/;"	c	inherits:RetroActivityCommon
RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^RetroArch::RetroArch()$/;"	f	class:RetroArch	signature:()
RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    RetroArch();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^class RetroArch: public QThread$/;"	c	inherits:QThread
RetroArch::RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^RetroArch::RetroArch()$/;"	f	class:RetroArch	signature:()
RetroArch::RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    RetroArch();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch::aboutToQuit	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::aboutToQuit()$/;"	f	class:RetroArch	signature:()
RetroArch::aboutToQuit	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void aboutToQuit();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch::buttonMap	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	ButtonMap *buttonMap;$/;"	m	class:RetroArch	access:private
RetroArch::chid	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int chid, coid;$/;"	m	class:RetroArch	access:private
RetroArch::coid	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int chid, coid;$/;"	m	class:RetroArch	access:private
RetroArch::core	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString core;$/;"	m	class:RetroArch	access:private
RetroArch::coreChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void coreChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
RetroArch::coreInfo	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QVariantMap coreInfo;$/;"	m	class:RetroArch	access:private
RetroArch::coreList	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	char **coreList;$/;"	m	class:RetroArch	access:private
RetroArch::coreSelectedIndex	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int coreSelectedIndex;$/;"	m	class:RetroArch	access:private
RetroArch::coreSelection	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	DropDown *coreSelection;$/;"	m	class:RetroArch	access:private
RetroArch::core_info_list	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	core_info_list_t *core_info_list;$/;"	m	class:RetroArch	access:private
RetroArch::deviceSelection	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	DropDown *deviceSelection;$/;"	m	class:RetroArch	access:private
RetroArch::discoverController	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::discoverController(int player)$/;"	f	class:RetroArch	signature:(int player)
RetroArch::discoverController	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void discoverController(int player);$/;"	p	class:RetroArch	access:public	signature:(int player)
RetroArch::findDevices	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::findDevices()$/;"	f	class:RetroArch	signature:()
RetroArch::findDevices	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void findDevices();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch::getCore	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getCore()$/;"	f	class:RetroArch	signature:()
RetroArch::getCore	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString getCore();$/;"	p	class:RetroArch	access:private	signature:()
RetroArch::getRom	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getRom()$/;"	f	class:RetroArch	signature:()
RetroArch::getRom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString getRom();$/;"	p	class:RetroArch	access:private	signature:()
RetroArch::getRomExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getRomExtensions()$/;"	f	class:RetroArch	signature:()
RetroArch::getRomExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QString getRomExtensions();$/;"	p	class:RetroArch	access:private	signature:()
RetroArch::initRASettings	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::initRASettings()$/;"	f	class:RetroArch	signature:()
RetroArch::initRASettings	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void initRASettings();$/;"	p	class:RetroArch	access:private	signature:()
RetroArch::onCoreSelected	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::onCoreSelected(QVariant value)$/;"	f	class:RetroArch	signature:(QVariant value)
RetroArch::onCoreSelected	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void onCoreSelected(QVariant);$/;"	p	class:RetroArch	access:public	signature:(QVariant)
RetroArch::onRotationCompleted	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::onRotationCompleted()$/;"	f	class:RetroArch	signature:()
RetroArch::onRotationCompleted	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void onRotationCompleted();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch::populateCores	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::populateCores(core_info_list_t * info)$/;"	f	class:RetroArch	signature:(core_info_list_t * info)
RetroArch::populateCores	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void populateCores(core_info_list_t * info);$/;"	p	class:RetroArch	access:public	signature:(core_info_list_t * info)
RetroArch::rom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString rom;$/;"	m	class:RetroArch	access:private
RetroArch::romChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void romChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
RetroArch::romExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QString romExtensions;$/;"	m	class:RetroArch	access:private
RetroArch::romExtensionsChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void romExtensionsChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
RetroArch::run	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::run()$/;"	f	class:RetroArch	signature:()
RetroArch::run	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void run();$/;"	p	class:RetroArch	access:private	signature:()
RetroArch::setCore	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::setCore(QString core)$/;"	f	class:RetroArch	signature:(QString core)
RetroArch::setCore	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void setCore(QString core);$/;"	p	class:RetroArch	access:private	signature:(QString core)
RetroArch::setRom	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::setRom(QString rom)$/;"	f	class:RetroArch	signature:(QString rom)
RetroArch::setRom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void setRom(QString rom);$/;"	p	class:RetroArch	access:private	signature:(QString rom)
RetroArch::startEmulator	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::startEmulator()$/;"	f	class:RetroArch	signature:()
RetroArch::startEmulator	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void startEmulator();$/;"	p	class:RetroArch	access:public	signature:()
RetroArch::state	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int state;$/;"	m	class:RetroArch	access:private
RetroArch::~RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^RetroArch::~RetroArch()$/;"	f	class:RetroArch	signature:()
RetroArch::~RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    ~ RetroArch();$/;"	p	class:RetroArch	access:public	signature:()
Role	audio/xaudio-c/xaudio.h	/^   XAUDIO2_DEVICE_ROLE Role;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
RootDirectory	frontend/platform/platform_xdk.h	/^    HANDLE RootDirectory;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
RunInfo	tools/retrolaunch/main.c	/^struct RunInfo {$/;"	s	file:
RunInfo::broken_cores	tools/retrolaunch/main.c	/^	char broken_cores[PATH_MAX];$/;"	m	struct:RunInfo	file:	access:public
RunInfo::dualanalog	tools/retrolaunch/main.c	/^	int dualanalog;$/;"	m	struct:RunInfo	file:	access:public
RunInfo::multitap	tools/retrolaunch/main.c	/^	int multitap;$/;"	m	struct:RunInfo	file:	access:public
RunInfo::system	tools/retrolaunch/main.c	/^	char system[10];$/;"	m	struct:RunInfo	file:	access:public
SALAMANDER_FILE	file_ext.h	31;"	d
SALAMANDER_FILE	file_ext.h	36;"	d
SALAMANDER_FILE	file_ext.h	41;"	d
SALAMANDER_FILE	file_ext.h	46;"	d
SAVE_STATE	apple/common/apple_export.h	/^   SAVE_STATE = 3,$/;"	e	enum:basic_event_t
SCALER_COMMON_H__	gfx/scaler/scaler_common.h	18;"	d
SCALER_FMT_0RGB1555	gfx/scaler/scaler.h	/^   SCALER_FMT_0RGB1555,$/;"	e	enum:scaler_pix_fmt
SCALER_FMT_ABGR8888	gfx/scaler/scaler.h	/^   SCALER_FMT_ABGR8888,$/;"	e	enum:scaler_pix_fmt
SCALER_FMT_ARGB8888	gfx/scaler/scaler.h	/^   SCALER_FMT_ARGB8888 = 0,$/;"	e	enum:scaler_pix_fmt
SCALER_FMT_BGR24	gfx/scaler/scaler.h	/^   SCALER_FMT_BGR24,$/;"	e	enum:scaler_pix_fmt
SCALER_FMT_RGB565	gfx/scaler/scaler.h	/^   SCALER_FMT_RGB565,$/;"	e	enum:scaler_pix_fmt
SCALER_FMT_YUYV	gfx/scaler/scaler.h	/^   SCALER_FMT_YUYV$/;"	e	enum:scaler_pix_fmt
SCALER_H__	gfx/scaler/scaler.h	17;"	d
SCALER_INT_H__	gfx/scaler/scaler_int.h	17;"	d
SCALER_TYPE_BILINEAR	gfx/scaler/scaler.h	/^   SCALER_TYPE_BILINEAR,$/;"	e	enum:scaler_type
SCALER_TYPE_POINT	gfx/scaler/scaler.h	/^   SCALER_TYPE_POINT,$/;"	e	enum:scaler_type
SCALER_TYPE_SINC	gfx/scaler/scaler.h	/^   SCALER_TYPE_SINC$/;"	e	enum:scaler_type
SCALER_TYPE_UNKNOWN	gfx/scaler/scaler.h	/^   SCALER_TYPE_UNKNOWN = 0,$/;"	e	enum:scaler_type
SCEGU_SCR_HEIGHT	psp1/psp1_video.c	31;"	d	file:
SCEGU_SCR_WIDTH	psp1/psp1_video.c	27;"	d	file:
SCEGU_VRAM_WIDTH	psp1/psp1_video.c	35;"	d	file:
SCE_DBGFONT_BUFSIZE_LARGE	gfx/fonts/ps_libdbgfont.c	28;"	d	file:
SCE_DISPLAY_UPDATETIMING_NEXTVSYNC	psp/sdk_defines.h	44;"	d
SCE_OK	psp/sdk_defines.h	25;"	d
SCSI_IOCTL_DATA_IN	frontend/platform/platform_xdk.h	300;"	d
SCSI_IOCTL_DATA_OUT	frontend/platform/platform_xdk.h	299;"	d
SCSI_IOCTL_DATA_UNSPECIFIED	frontend/platform/platform_xdk.h	301;"	d
SCSI_PASS_THROUGH_DIRECT	frontend/platform/platform_xdk.h	/^}SCSI_PASS_THROUGH_DIRECT, *PSCSI_PASS_THROUGH_DIRECT;$/;"	t	typeref:struct:_SCSI_PASS_THROUGH_DIRECT
SDL_CondSignal	thread/xenon_sdl_threads.c	/^int SDL_CondSignal(SDL_cond *cond)$/;"	f	signature:(SDL_cond *cond)
SDL_CondWait	thread/xenon_sdl_threads.c	/^int SDL_CondWait(SDL_cond *cond, SDL_mutex *lock)$/;"	f	signature:(SDL_cond *cond, SDL_mutex *lock)
SDL_CreateCond	thread/xenon_sdl_threads.c	/^SDL_cond *SDL_CreateCond(void)$/;"	f	signature:(void)
SDL_DestroyCond	thread/xenon_sdl_threads.c	/^void SDL_DestroyCond(SDL_cond *sleeping)$/;"	f	signature:(SDL_cond *sleeping)
SDP_AdditionalProtocolDescriptorList	apple/iOS/bluetooth/btstack/sdp_util.h	81;"	d
SDP_BluetoothProfileDescriptorList	apple/iOS/bluetooth/btstack/sdp_util.h	77;"	d
SDP_BrowseGroupList	apple/iOS/bluetooth/btstack/sdp_util.h	73;"	d
SDP_ClientExecutableURL	apple/iOS/bluetooth/btstack/sdp_util.h	79;"	d
SDP_DocumentationURL	apple/iOS/bluetooth/btstack/sdp_util.h	78;"	d
SDP_HANDLE_ALREADY_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	227;"	d
SDP_IconURL	apple/iOS/bluetooth/btstack/sdp_util.h	80;"	d
SDP_L2CAPProtocol	apple/iOS/bluetooth/btstack/sdp_util.h	94;"	d
SDP_LanguageBaseAttributeIDList	apple/iOS/bluetooth/btstack/sdp_util.h	74;"	d
SDP_OBEXFileTransfer	apple/iOS/bluetooth/btstack/sdp_util.h	86;"	d
SDP_OBEXFileTypeAny	apple/iOS/bluetooth/btstack/sdp_util.h	108;"	d
SDP_OBEXObjectPush	apple/iOS/bluetooth/btstack/sdp_util.h	85;"	d
SDP_OBEXProtocol	apple/iOS/bluetooth/btstack/sdp_util.h	93;"	d
SDP_Offest_ProviderName	apple/iOS/bluetooth/btstack/sdp_util.h	99;"	d
SDP_Offest_ServiceDescription	apple/iOS/bluetooth/btstack/sdp_util.h	98;"	d
SDP_Offest_ServiceName	apple/iOS/bluetooth/btstack/sdp_util.h	97;"	d
SDP_ProtocolDescriptorList	apple/iOS/bluetooth/btstack/sdp_util.h	72;"	d
SDP_PublicBrowseGroup	apple/iOS/bluetooth/btstack/sdp_util.h	87;"	d
SDP_RFCOMMProtocol	apple/iOS/bluetooth/btstack/sdp_util.h	92;"	d
SDP_SDPProtocol	apple/iOS/bluetooth/btstack/sdp_util.h	90;"	d
SDP_SERVICE_REGISTERED	apple/iOS/bluetooth/btstack/hci_cmds.h	192;"	d
SDP_ServiceAvailability	apple/iOS/bluetooth/btstack/sdp_util.h	76;"	d
SDP_ServiceClassIDList	apple/iOS/bluetooth/btstack/sdp_util.h	69;"	d
SDP_ServiceID	apple/iOS/bluetooth/btstack/sdp_util.h	71;"	d
SDP_ServiceInfoTimeToLive	apple/iOS/bluetooth/btstack/sdp_util.h	75;"	d
SDP_ServiceRecordHandle	apple/iOS/bluetooth/btstack/sdp_util.h	68;"	d
SDP_ServiceRecordState	apple/iOS/bluetooth/btstack/sdp_util.h	70;"	d
SDP_SupportedFormatsList	apple/iOS/bluetooth/btstack/sdp_util.h	82;"	d
SDP_UDPProtocol	apple/iOS/bluetooth/btstack/sdp_util.h	91;"	d
SDP_iCal_2_0	apple/iOS/bluetooth/btstack/sdp_util.h	105;"	d
SDP_vCal_1_0	apple/iOS/bluetooth/btstack/sdp_util.h	104;"	d
SDP_vCard_2_1	apple/iOS/bluetooth/btstack/sdp_util.h	102;"	d
SDP_vCard_3_0	apple/iOS/bluetooth/btstack/sdp_util.h	103;"	d
SDP_vMessage	apple/iOS/bluetooth/btstack/sdp_util.h	107;"	d
SDP_vNote	apple/iOS/bluetooth/btstack/sdp_util.h	106;"	d
SD_FEATURE_ALWAYS	apple/common/setting_data.h	/^   SD_FEATURE_ALWAYS = 0,$/;"	e	enum:setting_features
SD_FEATURE_AUDIO_DEVICE	apple/common/setting_data.h	/^   SD_FEATURE_AUDIO_DEVICE = 32$/;"	e	enum:setting_features
SD_FEATURE_MULTI_DRIVER	apple/common/setting_data.h	/^   SD_FEATURE_MULTI_DRIVER = 1,$/;"	e	enum:setting_features
SD_FEATURE_SHADERS	apple/common/setting_data.h	/^   SD_FEATURE_SHADERS = 8,$/;"	e	enum:setting_features
SD_FEATURE_VIDEO_MODE	apple/common/setting_data.h	/^   SD_FEATURE_VIDEO_MODE = 2,$/;"	e	enum:setting_features
SD_FEATURE_VSYNC	apple/common/setting_data.h	/^   SD_FEATURE_VSYNC = 16,$/;"	e	enum:setting_features
SD_FEATURE_WINDOW_MANAGER	apple/common/setting_data.h	/^   SD_FEATURE_WINDOW_MANAGER = 4,$/;"	e	enum:setting_features
SD_FLAG_ALLOW_EMPTY	apple/common/setting_data.h	/^   SD_FLAG_ALLOW_EMPTY = 4,$/;"	e	enum:setting_flags
SD_FLAG_PATH_DIR	apple/common/setting_data.h	/^   SD_FLAG_PATH_DIR = 1,$/;"	e	enum:setting_flags
SD_FLAG_PATH_FILE	apple/common/setting_data.h	/^   SD_FLAG_PATH_FILE = 2,$/;"	e	enum:setting_flags
SD_FLAG_VALUE_DESC	apple/common/setting_data.h	/^   SD_FLAG_VALUE_DESC = 8$/;"	e	enum:setting_flags
SEEK_CUR	deps/minizip/unzip.c	120;"	d	file:
SEEK_END	deps/minizip/unzip.c	124;"	d	file:
SEEK_SET	deps/minizip/unzip.c	128;"	d	file:
SELFMAG	wii/app_booter/elf_abi.h	70;"	d
SERIALIZER_INDEX	movie.h	26;"	d
SET16	audio/librsound.c	356;"	d	file:
SET32	audio/librsound.c	355;"	d	file:
SETTING_CONTROLS_DEFAULT_ALL	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_DEFAULT_ALL$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_DPAD_EMULATION	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_DPAD_EMULATION,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_A	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_A,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_B	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_B = 0,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_DOWN	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_DOWN,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L2	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L2,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L3	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_L3,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_LEFT	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_LEFT,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R2	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R2,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R3	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_R3,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_RIGHT	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_RIGHT,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_SELECT	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_SELECT,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_START	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_START,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_UP	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_UP,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_X	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_X,$/;"	e	enum:__anon15	file:
SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_Y	frontend/menu/rmenu_xui.cpp	/^   SETTING_CONTROLS_RETRO_DEVICE_ID_JOYPAD_Y,$/;"	e	enum:__anon15	file:
SETTING_EMU_SHOW_DEBUG_INFO_MSG	frontend/menu/rmenu_xui.cpp	/^   SETTING_EMU_SHOW_DEBUG_INFO_MSG,$/;"	e	enum:__anon20	file:
SET_COORD	gfx/shader_cg.c	169;"	d	file:
SET_LISTING	gfx/shader_cg.c	406;"	d	file:
SET_TEXTURE_ADDRESS	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_ADDRESS; \/\/ wrap, signed and unsigned remap control, gamma, zfunc$/;"	m	struct:__anon51	access:public
SET_TEXTURE_CONTROL0	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL0; \/\/ enable, lod clamp, aniso, image field, alpha kill, colorkey$/;"	m	struct:__anon51	access:public
SET_TEXTURE_CONTROL1	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL1; \/\/ remap and crossbar setup.$/;"	m	struct:__anon51	access:public
SET_TEXTURE_CONTROL3	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL3; \/\/ pitch and depth$/;"	m	struct:__anon51	access:public
SET_TEXTURE_FILTER	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_FILTER; \/\/ lod bias, convol filter, min\/mag filter, component signedness$/;"	m	struct:__anon51	access:public
SET_TEXTURE_FORMAT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_FORMAT; \/\/ which dma ctx, [123]D, border source, mem layout, mip levels$/;"	m	struct:__anon51	access:public
SET_TEXTURE_IMAGE_RECT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_IMAGE_RECT; \/\/ texture width\/height$/;"	m	struct:__anon51	access:public
SET_TEXTURE_OFFSET	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_OFFSET; \/\/ gpu addr (from dma ctx)$/;"	m	struct:__anon51	access:public
SHA1	ps3/ps3py/pkg.py	/^def SHA1(data):$/;"	f	access:public
SHA1CircularShift	tools/retrolaunch/sha1.c	46;"	d	file:
SHA1Context	tools/retrolaunch/sha1.h	/^typedef struct SHA1Context$/;"	s
SHA1Context	tools/retrolaunch/sha1.h	/^} SHA1Context;$/;"	t	typeref:struct:SHA1Context
SHA1Context::Computed	tools/retrolaunch/sha1.h	/^    int Computed;               \/* Is the digest computed?          *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Corrupted	tools/retrolaunch/sha1.h	/^    int Corrupted;              \/* Is the message digest corruped?  *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Length_High	tools/retrolaunch/sha1.h	/^    unsigned Length_High;       \/* Message length in bits           *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Length_Low	tools/retrolaunch/sha1.h	/^    unsigned Length_Low;        \/* Message length in bits           *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Message_Block	tools/retrolaunch/sha1.h	/^    unsigned char Message_Block[64]; \/* 512-bit message blocks      *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Message_Block_Index	tools/retrolaunch/sha1.h	/^    int Message_Block_Index;    \/* Index into message block array   *\/$/;"	m	struct:SHA1Context	access:public
SHA1Context::Message_Digest	tools/retrolaunch/sha1.h	/^    unsigned Message_Digest[5]; \/* Message Digest (output)          *\/$/;"	m	struct:SHA1Context	access:public
SHA1Input	tools/retrolaunch/sha1.c	/^void SHA1Input(     SHA1Context         *context,$/;"	f	signature:( SHA1Context *context, const unsigned char *message_array, unsigned length)
SHA1Input	tools/retrolaunch/sha1.h	/^void SHA1Input( SHA1Context *,$/;"	p	signature:( SHA1Context *, const unsigned char *, unsigned)
SHA1PadMessage	tools/retrolaunch/sha1.c	/^void SHA1PadMessage(SHA1Context *);$/;"	p	file:	signature:(SHA1Context *)
SHA1PadMessage	tools/retrolaunch/sha1.c	/^void SHA1PadMessage(SHA1Context *context)$/;"	f	signature:(SHA1Context *context)
SHA1ProcessMessageBlock	tools/retrolaunch/sha1.c	/^void SHA1ProcessMessageBlock(SHA1Context *);$/;"	p	file:	signature:(SHA1Context *)
SHA1ProcessMessageBlock	tools/retrolaunch/sha1.c	/^void SHA1ProcessMessageBlock(SHA1Context *context)$/;"	f	signature:(SHA1Context *context)
SHA1Reset	tools/retrolaunch/sha1.c	/^void SHA1Reset(SHA1Context *context)$/;"	f	signature:(SHA1Context *context)
SHA1Reset	tools/retrolaunch/sha1.h	/^void SHA1Reset(SHA1Context *);$/;"	p	signature:(SHA1Context *)
SHA1Result	tools/retrolaunch/sha1.c	/^int SHA1Result(SHA1Context *context)$/;"	f	signature:(SHA1Context *context)
SHA1Result	tools/retrolaunch/sha1.h	/^int SHA1Result(SHA1Context *);$/;"	p	signature:(SHA1Context *)
SHA1_LEN	tools/retrolaunch/main.c	23;"	d	file:
SHADER_COMMON_H__	gfx/shader_common.h	17;"	d
SHADER_PARSE_H	gfx/shader_parse.h	17;"	d
SHARED	libretro-test-gl/Makefile	/^   SHARED := -dynamiclib$/;"	m
SHARED	libretro-test-gl/Makefile	/^   SHARED := -shared -Wl,--version-script=link.T -Wl,--no-undefined$/;"	m
SHARED	libretro-test-gl/Makefile	/^   SHARED := -shared -Wl,--version-script=link.T$/;"	m
SHARED	libretro-test-gl/Makefile	/^   SHARED := -shared -static-libgcc -static-libstdc++ -s -Wl,--version-script=link.T -Wl,--no-undefined$/;"	m
SHARED	libretro-test/Makefile	/^	SHARED := -dynamiclib$/;"	m
SHARED	libretro-test/Makefile	/^   SHARED := -dynamiclib$/;"	m
SHARED	libretro-test/Makefile	/^   SHARED := -shared -Wl,--version-script=link.T -Wl,--no-undefined$/;"	m
SHARED	libretro-test/Makefile	/^   SHARED := -shared -static-libgcc -static-libstdc++ -s -Wl,--version-script=link.T -Wl,--no-undefined$/;"	m
SHF_ALLOC	ps3/rgl/src/cg/cgbdefs.hpp	160;"	d
SHF_ALLOC	ps3/rgl/src/libelf/elf.h	144;"	d
SHF_ALLOC	wii/app_booter/elf_abi.h	320;"	d
SHF_EXECINSTR	ps3/rgl/src/cg/cgbdefs.hpp	164;"	d
SHF_EXECINSTR	ps3/rgl/src/libelf/elf.h	145;"	d
SHF_EXECINSTR	wii/app_booter/elf_abi.h	321;"	d
SHF_GROUP	ps3/rgl/src/cg/cgbdefs.hpp	187;"	d
SHF_GROUP	wii/app_booter/elf_abi.h	327;"	d
SHF_INFO_LINK	ps3/rgl/src/cg/cgbdefs.hpp	176;"	d
SHF_INFO_LINK	ps3/rgl/src/libelf/elf.h	148;"	d
SHF_INFO_LINK	wii/app_booter/elf_abi.h	324;"	d
SHF_LINK_ORDER	ps3/rgl/src/cg/cgbdefs.hpp	180;"	d
SHF_LINK_ORDER	ps3/rgl/src/libelf/elf.h	149;"	d
SHF_LINK_ORDER	wii/app_booter/elf_abi.h	325;"	d
SHF_MASKOS	ps3/rgl/src/cg/cgbdefs.hpp	189;"	d
SHF_MASKOS	ps3/rgl/src/libelf/elf.h	152;"	d
SHF_MASKOS	wii/app_booter/elf_abi.h	329;"	d
SHF_MASKPROC	ps3/rgl/src/cg/cgbdefs.hpp	192;"	d
SHF_MASKPROC	ps3/rgl/src/libelf/elf.h	153;"	d
SHF_MASKPROC	wii/app_booter/elf_abi.h	330;"	d
SHF_MERGE	ps3/rgl/src/cg/cgbdefs.hpp	168;"	d
SHF_MERGE	ps3/rgl/src/libelf/elf.h	146;"	d
SHF_MERGE	wii/app_booter/elf_abi.h	322;"	d
SHF_OS_NONCONFORMING	ps3/rgl/src/cg/cgbdefs.hpp	184;"	d
SHF_OS_NONCONFORMING	ps3/rgl/src/libelf/elf.h	150;"	d
SHF_OS_NONCONFORMING	wii/app_booter/elf_abi.h	326;"	d
SHF_STRINGS	ps3/rgl/src/cg/cgbdefs.hpp	172;"	d
SHF_STRINGS	ps3/rgl/src/libelf/elf.h	147;"	d
SHF_STRINGS	wii/app_booter/elf_abi.h	323;"	d
SHF_TLS	ps3/rgl/src/cg/cgbdefs.hpp	188;"	d
SHF_TLS	wii/app_booter/elf_abi.h	328;"	d
SHF_WRITE	ps3/rgl/src/cg/cgbdefs.hpp	156;"	d
SHF_WRITE	ps3/rgl/src/libelf/elf.h	143;"	d
SHF_WRITE	wii/app_booter/elf_abi.h	319;"	d
SHN_ABS	ps3/rgl/src/cg/cgbdefs.hpp	110;"	d
SHN_ABS	ps3/rgl/src/libelf/elf.h	177;"	d
SHN_ABS	wii/app_booter/elf_abi.h	250;"	d
SHN_COMMON	ps3/rgl/src/cg/cgbdefs.hpp	114;"	d
SHN_COMMON	ps3/rgl/src/libelf/elf.h	180;"	d
SHN_COMMON	wii/app_booter/elf_abi.h	251;"	d
SHN_HIOS	ps3/rgl/src/cg/cgbdefs.hpp	106;"	d
SHN_HIOS	ps3/rgl/src/libelf/elf.h	176;"	d
SHN_HIOS	wii/app_booter/elf_abi.h	249;"	d
SHN_HIPROC	ps3/rgl/src/cg/cgbdefs.hpp	98;"	d
SHN_HIPROC	ps3/rgl/src/libelf/elf.h	174;"	d
SHN_HIPROC	wii/app_booter/elf_abi.h	247;"	d
SHN_HIRESERVE	ps3/rgl/src/cg/cgbdefs.hpp	122;"	d
SHN_HIRESERVE	ps3/rgl/src/libelf/elf.h	188;"	d
SHN_HIRESERVE	wii/app_booter/elf_abi.h	253;"	d
SHN_LOOS	ps3/rgl/src/cg/cgbdefs.hpp	102;"	d
SHN_LOOS	ps3/rgl/src/libelf/elf.h	175;"	d
SHN_LOOS	wii/app_booter/elf_abi.h	248;"	d
SHN_LOPROC	ps3/rgl/src/cg/cgbdefs.hpp	94;"	d
SHN_LOPROC	ps3/rgl/src/libelf/elf.h	173;"	d
SHN_LOPROC	wii/app_booter/elf_abi.h	246;"	d
SHN_LORESERVE	ps3/rgl/src/cg/cgbdefs.hpp	90;"	d
SHN_LORESERVE	ps3/rgl/src/libelf/elf.h	172;"	d
SHN_LORESERVE	wii/app_booter/elf_abi.h	245;"	d
SHN_UNDEF	ps3/rgl/src/cg/cgbdefs.hpp	86;"	d
SHN_UNDEF	ps3/rgl/src/libelf/elf.h	171;"	d
SHN_UNDEF	wii/app_booter/elf_abi.h	244;"	d
SHN_XINDEX	ps3/rgl/src/cg/cgbdefs.hpp	118;"	d
SHN_XINDEX	ps3/rgl/src/libelf/elf.h	184;"	d
SHN_XINDEX	wii/app_booter/elf_abi.h	252;"	d
SHT_DYNAMIC	ps3/rgl/src/cg/cgbdefs.hpp	132;"	d
SHT_DYNAMIC	ps3/rgl/src/libelf/elf.h	136;"	d
SHT_DYNAMIC	wii/app_booter/elf_abi.h	262;"	d
SHT_DYNSYM	ps3/rgl/src/cg/cgbdefs.hpp	137;"	d
SHT_DYNSYM	ps3/rgl/src/libelf/elf.h	141;"	d
SHT_DYNSYM	wii/app_booter/elf_abi.h	267;"	d
SHT_FINI_ARRAY	ps3/rgl/src/cg/cgbdefs.hpp	139;"	d
SHT_FINI_ARRAY	wii/app_booter/elf_abi.h	269;"	d
SHT_GROUP	ps3/rgl/src/cg/cgbdefs.hpp	141;"	d
SHT_GROUP	wii/app_booter/elf_abi.h	271;"	d
SHT_HASH	ps3/rgl/src/cg/cgbdefs.hpp	131;"	d
SHT_HASH	ps3/rgl/src/libelf/elf.h	135;"	d
SHT_HASH	wii/app_booter/elf_abi.h	261;"	d
SHT_HIOS	ps3/rgl/src/cg/cgbdefs.hpp	144;"	d
SHT_HIOS	wii/app_booter/elf_abi.h	275;"	d
SHT_HIPROC	ps3/rgl/src/cg/cgbdefs.hpp	150;"	d
SHT_HIPROC	wii/app_booter/elf_abi.h	277;"	d
SHT_HIUSER	ps3/rgl/src/cg/cgbdefs.hpp	152;"	d
SHT_HIUSER	wii/app_booter/elf_abi.h	279;"	d
SHT_INIT_ARRAY	ps3/rgl/src/cg/cgbdefs.hpp	138;"	d
SHT_INIT_ARRAY	wii/app_booter/elf_abi.h	268;"	d
SHT_LOOS	ps3/rgl/src/cg/cgbdefs.hpp	143;"	d
SHT_LOOS	wii/app_booter/elf_abi.h	274;"	d
SHT_LOPROC	ps3/rgl/src/cg/cgbdefs.hpp	145;"	d
SHT_LOPROC	wii/app_booter/elf_abi.h	276;"	d
SHT_LOUSER	ps3/rgl/src/cg/cgbdefs.hpp	151;"	d
SHT_LOUSER	wii/app_booter/elf_abi.h	278;"	d
SHT_NOBITS	ps3/rgl/src/cg/cgbdefs.hpp	134;"	d
SHT_NOBITS	ps3/rgl/src/libelf/elf.h	138;"	d
SHT_NOBITS	wii/app_booter/elf_abi.h	264;"	d
SHT_NOTE	ps3/rgl/src/cg/cgbdefs.hpp	133;"	d
SHT_NOTE	ps3/rgl/src/libelf/elf.h	137;"	d
SHT_NOTE	wii/app_booter/elf_abi.h	263;"	d
SHT_NULL	ps3/rgl/src/cg/cgbdefs.hpp	126;"	d
SHT_NULL	ps3/rgl/src/libelf/elf.h	130;"	d
SHT_NULL	wii/app_booter/elf_abi.h	256;"	d
SHT_NUM	wii/app_booter/elf_abi.h	273;"	d
SHT_PREINIT_ARRAY	ps3/rgl/src/cg/cgbdefs.hpp	140;"	d
SHT_PREINIT_ARRAY	wii/app_booter/elf_abi.h	270;"	d
SHT_PROGBITS	ps3/rgl/src/cg/cgbdefs.hpp	127;"	d
SHT_PROGBITS	ps3/rgl/src/libelf/elf.h	131;"	d
SHT_PROGBITS	wii/app_booter/elf_abi.h	257;"	d
SHT_REL	ps3/rgl/src/cg/cgbdefs.hpp	135;"	d
SHT_REL	ps3/rgl/src/libelf/elf.h	139;"	d
SHT_REL	wii/app_booter/elf_abi.h	265;"	d
SHT_RELA	ps3/rgl/src/cg/cgbdefs.hpp	130;"	d
SHT_RELA	ps3/rgl/src/libelf/elf.h	134;"	d
SHT_RELA	wii/app_booter/elf_abi.h	260;"	d
SHT_RSX_ANNOTATE	ps3/rgl/src/cg/cgbdefs.hpp	149;"	d
SHT_RSX_FXTAB	ps3/rgl/src/cg/cgbdefs.hpp	148;"	d
SHT_RSX_PARAM	ps3/rgl/src/cg/cgbdefs.hpp	146;"	d
SHT_RSX_SHADERTAB	ps3/rgl/src/cg/cgbdefs.hpp	147;"	d
SHT_SHLIB	ps3/rgl/src/cg/cgbdefs.hpp	136;"	d
SHT_SHLIB	ps3/rgl/src/libelf/elf.h	140;"	d
SHT_SHLIB	wii/app_booter/elf_abi.h	266;"	d
SHT_STRTAB	ps3/rgl/src/cg/cgbdefs.hpp	129;"	d
SHT_STRTAB	ps3/rgl/src/libelf/elf.h	133;"	d
SHT_STRTAB	wii/app_booter/elf_abi.h	259;"	d
SHT_SYMTAB	ps3/rgl/src/cg/cgbdefs.hpp	128;"	d
SHT_SYMTAB	ps3/rgl/src/libelf/elf.h	132;"	d
SHT_SYMTAB	wii/app_booter/elf_abi.h	258;"	d
SHT_SYMTAB_SHNDX	ps3/rgl/src/cg/cgbdefs.hpp	142;"	d
SHT_SYMTAB_SHNDX	wii/app_booter/elf_abi.h	272;"	d
SHUT_RD	audio/librsound.c	111;"	d	file:
SIDELOBES	audio/sinc.c	53;"	d	file:
SIDELOBES	audio/sinc.c	61;"	d	file:
SIDELOBES	audio/sinc.c	70;"	d	file:
SIDELOBES	audio/sinc.c	79;"	d	file:
SIDELOBES	audio/sinc.c	88;"	d	file:
SIG_ATOMIC_MAX	msvc/msvc-stdint/stdint.h	198;"	d
SIG_ATOMIC_MIN	msvc/msvc-stdint/stdint.h	197;"	d
SILVER	gfx/gfx_common.h	114;"	d
SIMD_PACKETSIZE	ps3/altivec_mem.h	105;"	d
SIMD_PACKETSIZE	ps3/altivec_mem.h	235;"	d
SINC_COEFF_LERP	audio/sinc.c	51;"	d	file:
SINC_COEFF_LERP	audio/sinc.c	60;"	d	file:
SINC_COEFF_LERP	audio/sinc.c	69;"	d	file:
SINC_COEFF_LERP	audio/sinc.c	78;"	d	file:
SINC_COEFF_LERP	audio/sinc.c	87;"	d	file:
SINC_WINDOW_KAISER	audio/sinc.c	64;"	d	file:
SINC_WINDOW_KAISER	audio/sinc.c	73;"	d	file:
SINC_WINDOW_KAISER	audio/sinc.c	82;"	d	file:
SINC_WINDOW_KAISER_BETA	audio/sinc.c	65;"	d	file:
SINC_WINDOW_KAISER_BETA	audio/sinc.c	74;"	d	file:
SINC_WINDOW_KAISER_BETA	audio/sinc.c	83;"	d	file:
SINC_WINDOW_LANCZOS	audio/sinc.c	48;"	d	file:
SINC_WINDOW_LANCZOS	audio/sinc.c	56;"	d	file:
SIZECENTRALDIRITEM	deps/minizip/unzip.c	84;"	d	file:
SIZEZIPLOCALHEADER	deps/minizip/unzip.c	85;"	d	file:
SIZE_MAX	msvc/msvc-stdint/stdint.h	202;"	d
SIZE_MAX	msvc/msvc-stdint/stdint.h	204;"	d
SLEngineItf_CreateAudioPlayer	audio/opensl.c	32;"	d	file:
SLEngineItf_CreateOutputMix	audio/opensl.c	31;"	d	file:
SLObjectItf_Destroy	audio/opensl.c	29;"	d	file:
SLObjectItf_GetInterface	audio/opensl.c	28;"	d	file:
SLObjectItf_Realize	audio/opensl.c	27;"	d	file:
SLPlayItf_SetPlayState	audio/opensl.c	34;"	d	file:
SMASH	ps3/altivec_mem.h	59;"	d
SM_DATA_PACKET	apple/iOS/bluetooth/btstack/hci_cmds.h	67;"	d
SOUND_FREQUENCY	xenon/xenon360_audio.c	24;"	d	file:
SOUND_MODE_HEADSET	general.h	/^   SOUND_MODE_HEADSET,$/;"	e	enum:sound_mode_enums
SOUND_MODE_LAST	general.h	/^   SOUND_MODE_LAST$/;"	e	enum:sound_mode_enums
SOUND_MODE_NORMAL	general.h	/^   SOUND_MODE_NORMAL = 0,$/;"	e	enum:sound_mode_enums
SOUND_MODE_RSOUND	general.h	/^   SOUND_MODE_RSOUND,$/;"	e	enum:sound_mode_enums
SOURCES	compat/rxml/Makefile	/^SOURCES := $(wildcard *.c)$/;"	m
SOURCES	gfx/rpng/Makefile	/^SOURCES := $(wildcard *.c)$/;"	m
SOURCE_COPY	patch.c	/^   SOURCE_COPY,$/;"	e	enum:bps_mode	file:
SOURCE_READ	patch.c	/^   SOURCE_READ = 0,$/;"	e	enum:bps_mode	file:
STACKSIZE	thread/gx_pthread.h	24;"	d
START_GROUP	apple/common/setting_data.c	305;"	d	file:
START_SUB_GROUP	apple/common/setting_data.c	307;"	d	file:
STATE_ANALOGLX	psp/sdk_defines.h	59;"	d
STATE_ANALOGLX	psp/sdk_defines.h	86;"	d
STATE_ANALOGLY	psp/sdk_defines.h	60;"	d
STATE_ANALOGLY	psp/sdk_defines.h	87;"	d
STATE_ANALOGRX	psp/sdk_defines.h	61;"	d
STATE_ANALOGRX	psp/sdk_defines.h	88;"	d
STATE_ANALOGRY	psp/sdk_defines.h	62;"	d
STATE_ANALOGRY	psp/sdk_defines.h	89;"	d
STATE_BUTTON	psp/sdk_defines.h	58;"	d
STATE_BUTTON	psp/sdk_defines.h	85;"	d
STATE_DEAD	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_DEAD = 4;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
STATE_DONE	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_DONE = 3;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
STATE_SIZE_INDEX	movie.h	28;"	d
STATE_START	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_START = 0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
STATE_TEST	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_TEST = 2;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
STATE_WARMUP	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final int STATE_WARMUP = 1;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
STATUS_DATA_OVERRUN	frontend/platform/platform_xdk.h	925;"	d
STATUS_INSUFFICIENT_RESOURCES	frontend/platform/platform_xdk.h	927;"	d
STATUS_INVALID_IMAGE_FORMAT	frontend/platform/platform_xdk.h	926;"	d
STATUS_REGION_MISMATCH	frontend/platform/platform_xdk.h	929;"	d
STATUS_SUCCESS	frontend/platform/platform_xdk.h	921;"	d
STATUS_TOO_MANY_SECRETS	frontend/platform/platform_xdk.h	928;"	d
STATUS_UNRECOGNIZED_MEDIA	frontend/platform/platform_xdk.h	923;"	d
STATUS_UNSUCCESSFUL	frontend/platform/platform_xdk.h	922;"	d
STB_GLOBAL	ps3/rgl/src/cg/cgbdefs.hpp	202;"	d
STB_GLOBAL	wii/app_booter/elf_abi.h	359;"	d
STB_HIOS	ps3/rgl/src/cg/cgbdefs.hpp	205;"	d
STB_HIOS	wii/app_booter/elf_abi.h	363;"	d
STB_HIPROC	ps3/rgl/src/cg/cgbdefs.hpp	207;"	d
STB_HIPROC	wii/app_booter/elf_abi.h	365;"	d
STB_LOCAL	ps3/rgl/src/cg/cgbdefs.hpp	201;"	d
STB_LOCAL	wii/app_booter/elf_abi.h	358;"	d
STB_LOOS	ps3/rgl/src/cg/cgbdefs.hpp	204;"	d
STB_LOOS	wii/app_booter/elf_abi.h	362;"	d
STB_LOPROC	ps3/rgl/src/cg/cgbdefs.hpp	206;"	d
STB_LOPROC	wii/app_booter/elf_abi.h	364;"	d
STB_NUM	wii/app_booter/elf_abi.h	361;"	d
STB_WEAK	ps3/rgl/src/cg/cgbdefs.hpp	203;"	d
STB_WEAK	wii/app_booter/elf_abi.h	360;"	d
STDIN_BUF_SIZE	command.c	36;"	d	file:
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnBufferEnd) (void *) $/;"	f	struct:xaudio2	access:public	signature:(void, OnBufferEnd)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnBufferStart) (void *) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnBufferStart)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnLoopEnd) (void *) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnLoopEnd)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnStreamEnd) () {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnStreamEnd)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceError) (void *, HRESULT) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceError)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceProcessingPassEnd) () {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceProcessingPassEnd)
STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceProcessingPassStart) (UINT32) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceProcessingPassStart)
STICK_THRESHOLD	frontend/frontend_xenon.c	52;"	d	file:
STN_UNDEF	ps3/rgl/src/cg/cgbdefs.hpp	233;"	d
STN_UNDEF	wii/app_booter/elf_abi.h	349;"	d
STO_RSX_EFFECT	ps3/rgl/src/cg/cgbdefs.hpp	230;"	d
STO_RSX_SHADER	ps3/rgl/src/cg/cgbdefs.hpp	229;"	d
STRCMPCASENOSENTIVEFUNCTION	deps/minizip/unzip.c	353;"	d	file:
STRING	frontend/platform/platform_xdk.h	/^} STRING;$/;"	t	typeref:struct:_STRING
STRING_H_	wii/app_booter/string.h	2;"	d
STRUCT_REGDEF_SIZE	gx/gx_video_inl.h	1;"	d
STT_COMMON	ps3/rgl/src/cg/cgbdefs.hpp	215;"	d
STT_FILE	ps3/rgl/src/cg/cgbdefs.hpp	214;"	d
STT_FILE	wii/app_booter/elf_abi.h	372;"	d
STT_FUNC	ps3/rgl/src/cg/cgbdefs.hpp	212;"	d
STT_FUNC	wii/app_booter/elf_abi.h	370;"	d
STT_HIOS	ps3/rgl/src/cg/cgbdefs.hpp	218;"	d
STT_HIOS	wii/app_booter/elf_abi.h	376;"	d
STT_HIPROC	ps3/rgl/src/cg/cgbdefs.hpp	220;"	d
STT_HIPROC	wii/app_booter/elf_abi.h	378;"	d
STT_LOOS	ps3/rgl/src/cg/cgbdefs.hpp	217;"	d
STT_LOOS	wii/app_booter/elf_abi.h	375;"	d
STT_LOPROC	ps3/rgl/src/cg/cgbdefs.hpp	219;"	d
STT_LOPROC	wii/app_booter/elf_abi.h	377;"	d
STT_NOTYPE	ps3/rgl/src/cg/cgbdefs.hpp	210;"	d
STT_NOTYPE	wii/app_booter/elf_abi.h	368;"	d
STT_NUM	wii/app_booter/elf_abi.h	373;"	d
STT_OBJECT	ps3/rgl/src/cg/cgbdefs.hpp	211;"	d
STT_OBJECT	wii/app_booter/elf_abi.h	369;"	d
STT_SECTION	ps3/rgl/src/cg/cgbdefs.hpp	213;"	d
STT_SECTION	wii/app_booter/elf_abi.h	371;"	d
STT_TLS	ps3/rgl/src/cg/cgbdefs.hpp	216;"	d
STT_TLS	wii/app_booter/elf_abi.h	374;"	d
STV_DEFAULT	ps3/rgl/src/cg/cgbdefs.hpp	223;"	d
STV_DEFAULT	wii/app_booter/elf_abi.h	381;"	d
STV_HIDDEN	ps3/rgl/src/cg/cgbdefs.hpp	225;"	d
STV_HIDDEN	wii/app_booter/elf_abi.h	383;"	d
STV_INTERNAL	ps3/rgl/src/cg/cgbdefs.hpp	224;"	d
STV_INTERNAL	wii/app_booter/elf_abi.h	382;"	d
STV_PROTECTED	ps3/rgl/src/cg/cgbdefs.hpp	226;"	d
STV_PROTECTED	wii/app_booter/elf_abi.h	384;"	d
ST_BIND	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_BOOL	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_END_GROUP	apple/common/setting_data.h	/^                    ST_GROUP, ST_SUB_GROUP, ST_END_GROUP, ST_END_SUB_GROUP };$/;"	e	enum:setting_type
ST_END_SUB_GROUP	apple/common/setting_data.h	/^                    ST_GROUP, ST_SUB_GROUP, ST_END_GROUP, ST_END_SUB_GROUP };$/;"	e	enum:setting_type
ST_FLOAT	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_GROUP	apple/common/setting_data.h	/^                    ST_GROUP, ST_SUB_GROUP, ST_END_GROUP, ST_END_SUB_GROUP };$/;"	e	enum:setting_type
ST_HEX	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_INT	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_NONE	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_PATH	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_STRING	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
ST_SUB_GROUP	apple/common/setting_data.h	/^                    ST_GROUP, ST_SUB_GROUP, ST_END_GROUP, ST_END_SUB_GROUP };$/;"	e	enum:setting_type
ST_UINT	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	e	enum:setting_type
SUBPHASE_BITS	audio/sinc.c	52;"	d	file:
SUBPHASE_BITS	audio/sinc.c	59;"	d	file:
SUBPHASE_BITS	audio/sinc.c	68;"	d	file:
SUBPHASE_BITS	audio/sinc.c	77;"	d	file:
SUBPHASE_BITS	audio/sinc.c	86;"	d	file:
SUBPHASE_MASK	audio/sinc.c	104;"	d	file:
SUBPHASE_MOD	audio/sinc.c	105;"	d	file:
SUBPIXEL_ADJUST	ps3/rgl/src/include/rgl-inline.h	108;"	d
SUBPIXEL_BITS	ps3/rgl/src/include/rgl-inline.h	107;"	d
SUFFIX_MATCH	tools/retrolaunch/main.c	/^const char *SUFFIX_MATCH[] = {$/;"	v
SUNXI_DISP_VERSION	gfx/context/sunxi_disp_ioctl.h	29;"	d
SUNXI_DISP_VERSION_MAJOR	gfx/context/sunxi_disp_ioctl.h	26;"	d
SUNXI_DISP_VERSION_MAJOR_GET	gfx/context/sunxi_disp_ioctl.h	30;"	d
SUNXI_DISP_VERSION_MINOR	gfx/context/sunxi_disp_ioctl.h	27;"	d
SUNXI_DISP_VERSION_MINOR_GET	gfx/context/sunxi_disp_ioctl.h	31;"	d
SWAP32	hash.c	24;"	d	file:
SWAP_IF_BIG_ENDIAN	ps3/rgl/src/rgl.h	34;"	d
SWAP_IF_BIG_ENDIAN	ps3/rgl/src/rgl.h	36;"	d
SWSCALE_CFLAGS	config.mk	/^SWSCALE_CFLAGS = $/;"	m
SWSCALE_LIBS	config.mk	/^SWSCALE_LIBS = $/;"	m
SYM	dynamic.c	47;"	d	file:
SYM	dynamic.c	48;"	d	file:
SYM	dynamic.c	56;"	d	file:
SYM	gfx/glsym/glsym_es2.c	3;"	d	file:
SYM	gfx/glsym/glsym_gl.c	3;"	d	file:
SYM_DUMMY	dynamic.c	59;"	d	file:
SYSMEM1_SIZE	gx/gx_video.c	42;"	d	file:
SYSTEM_ARGV	wii/app_booter/main.c	14;"	d	file:
SYS_NO_TIMEOUT	ps3/sdk_defines.h	69;"	d
SYS_PPU_THREAD_CREATE_JOINABLE	ps3/sdk_defines.h	337;"	d
S_ISDIR	file_path.c	33;"	d	file:
S_LBL_ASPECT_RATIO	frontend/menu/rmenu_xui.cpp	/^   S_LBL_ASPECT_RATIO = 0,$/;"	e	enum:__anon21	file:
S_LBL_LOAD_STATE_SLOT	frontend/menu/rmenu_xui.cpp	/^   S_LBL_LOAD_STATE_SLOT,$/;"	e	enum:__anon21	file:
S_LBL_RARCH_VERSION	frontend/menu/rmenu_xui.cpp	/^   S_LBL_RARCH_VERSION,$/;"	e	enum:__anon21	file:
S_LBL_REWIND_GRANULARITY	frontend/menu/rmenu_xui.cpp	/^   S_LBL_REWIND_GRANULARITY,$/;"	e	enum:__anon21	file:
S_LBL_ROTATION	frontend/menu/rmenu_xui.cpp	/^   S_LBL_ROTATION,$/;"	e	enum:__anon21	file:
S_LBL_SAVE_STATE_SLOT	frontend/menu/rmenu_xui.cpp	/^   S_LBL_SAVE_STATE_SLOT,$/;"	e	enum:__anon21	file:
ScreenUv	xenon/xenon360_video.c	/^static float ScreenUv[4] = {0.f, 1.0f, 1.0f, 0.f};$/;"	v	file:
ScsiStatus	frontend/platform/platform_xdk.h	/^    \/*002*\/ UCHAR ScsiStatus;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
SectionName	frontend/platform/platform_xdk.h	/^	PCSZ SectionName;$/;"	m	struct:_XBE_SECTION	access:public
SectionReferenceCount	frontend/platform/platform_xdk.h	/^	LONG SectionReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
Sections	frontend/platform/platform_xdk.h	/^	struct _XBE_SECTION *Sections;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_SECTION	access:public
SectorsPerAllocationUnit	frontend/platform/platform_xdk.h	/^	ULONG SectorsPerAllocationUnit;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
SeekbarPreference	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public SeekbarPreference(Context context, AttributeSet attrs) {$/;"	m	class:SeekbarPreference	access:public	signature:(Context context, AttributeSet attrs)
SeekbarPreference	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^public final class SeekbarPreference extends DialogPreference implements SeekBar.OnSeekBarChangeListener {$/;"	c	inherits:DialogPreference,SeekBar.OnSeekBarChangeListener
SeekbarPreference.SeekbarPreference	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public SeekbarPreference(Context context, AttributeSet attrs) {$/;"	m	class:SeekbarPreference	access:public	signature:(Context context, AttributeSet attrs)
SeekbarPreference.bar	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private SeekBar bar;$/;"	f	class:SeekbarPreference	file:	access:private
SeekbarPreference.context	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private final Context context;$/;"	f	class:SeekbarPreference	file:	access:private
SeekbarPreference.onCreateDialogView	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	protected View onCreateDialogView()$/;"	m	class:SeekbarPreference	access:protected	signature:()
SeekbarPreference.onDialogClosed	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	protected void onDialogClosed(boolean positiveResult) {$/;"	m	class:SeekbarPreference	access:protected	signature:(boolean positiveResult)
SeekbarPreference.onProgressChanged	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar, int progress, boolean fromUser)
SeekbarPreference.onStartTrackingTouch	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onStartTrackingTouch(SeekBar seekBar) {$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar)
SeekbarPreference.onStopTrackingTouch	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onStopTrackingTouch(SeekBar seekBar) {	$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar)
SeekbarPreference.seek_value	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private float seek_value;$/;"	f	class:SeekbarPreference	file:	access:private
SeekbarPreference.text	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private TextView text;$/;"	f	class:SeekbarPreference	file:	access:private
SelfHeader	ps3/ps3py/pkg.py	/^class SelfHeader(Struct):$/;"	c	inherits:Struct
SenseInfoLength	frontend/platform/platform_xdk.h	/^    \/*007*\/ UCHAR SenseInfoLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
SenseInfoOffset	frontend/platform/platform_xdk.h	/^    \/*018*\/ ULONG SenseInfoOffset;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
SetContextDmaSemaphore	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetContextDmaSemaphore;  \/* set sema ctxdma, write only      0060-0063*\/$/;"	m	struct:__anon54	access:public
SetReference	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetReference;            \/* set reference value              0050-0053*\/$/;"	m	struct:__anon54	access:public
SetSamplerState_function	xdk/xdk_defines.h	39;"	d
SetSemaphoreAcquire	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreAcquire;     \/* set sema acquire, write only     0068-006b*\/$/;"	m	struct:__anon54	access:public
SetSemaphoreOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreOffset;      \/* set sema offset, write only      0064-0067*\/$/;"	m	struct:__anon54	access:public
SetSemaphoreRelease	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreRelease;     \/* set sema release, write only     006c-006f*\/$/;"	m	struct:__anon54	access:public
ShaHash	frontend/platform/platform_xdk.h	/^	DWORD ShaHash[5];$/;"	m	struct:_XBE_SECTION	access:public
SignalState	frontend/platform/platform_xdk.h	/^    LONG SignalState;$/;"	m	struct:_DISPATCHER_HEADER	access:public
SignatureKey	frontend/platform/platform_xdk.h	/^	UCHAR SignatureKey[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
Size	frontend/platform/platform_xdk.h	/^	ULONG Size;$/;"	m	struct:_XBE_CERTIFICATE	access:public
Size	frontend/platform/platform_xdk.h	/^    CSHORT Size;$/;"	m	struct:_DRIVER_OBJECT	access:public
Size	frontend/platform/platform_xdk.h	/^    CSHORT Size;$/;"	m	struct:_FILE_OBJECT	access:public
Size	frontend/platform/platform_xdk.h	/^    UCHAR Size;$/;"	m	struct:_DISPATCHER_HEADER	access:public
Size	frontend/platform/platform_xdk.h	/^    USHORT Size;$/;"	m	struct:_DEVICE_OBJECT	access:public
SkipFirstVSync	ps3/rgl/include/RGL/Types.h	/^      GLboolean       SkipFirstVSync;$/;"	m	struct:RGLcontext	access:public
StackCommit	frontend/platform/platform_xdk.h	/^	ULONG StackCommit;$/;"	m	struct:_XBE_HEADER	access:public
Status	frontend/platform/platform_xdk.h	/^        NTSTATUS Status;$/;"	m	union:_IO_STATUS_BLOCK::__anon9	access:public
Struct	ps3/ps3py/pkg.py	/^class Struct(object):$/;"	c	inherits:object
StructType	ps3/ps3py/pkg.py	/^class StructType(tuple):$/;"	c	inherits:tuple
Subtitle	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public final String Subtitle;$/;"	f	class:DetectCoreDirectoryFragment.CoreItem	access:public
SynchronizationTimer	frontend/platform/platform_xdk.h	/^    SynchronizationTimer$/;"	e	enum:_TIMER_TYPE
SynchronizationTimerObject	frontend/platform/platform_xdk.h	98;"	d
SystemArgument1	frontend/platform/platform_xdk.h	/^	PVOID SystemArgument1;$/;"	m	struct:_KDPC	access:public
SystemArgument2	frontend/platform/platform_xdk.h	/^	PVOID SystemArgument2;$/;"	m	struct:_KDPC	access:public
TAG	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final String TAG = "GLESRenderer";$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
TAG	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private static final String TAG = "MainMenuFragment";$/;"	f	class:MainMenuFragment	file:	access:private
TAG	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    private static final String TAG = PreferenceManagerCompat.class.getSimpleName();$/;"	f	class:PreferenceManagerCompat	file:	access:private
TAG	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static final String TAG = "UserPreferences";$/;"	f	class:UserPreferences	file:	access:private
TAPS	audio/sinc.c	103;"	d	file:
TARGET	Makefile	/^TARGET = retroarch tools\/retroarch-joyconfig tools\/retrolaunch\/retrolaunch$/;"	m
TARGET	compat/rxml/Makefile	/^TARGET := rxml$/;"	m
TARGET	gfx/rpng/Makefile	/^TARGET := rpng$/;"	m
TARGET	libretro-test-gl/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.dylib$/;"	m
TARGET	libretro-test-gl/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.so$/;"	m
TARGET	libretro-test-gl/Makefile	/^   TARGET := $(TARGET_NAME)_libretro_ios.dylib$/;"	m
TARGET	libretro-test-gl/Makefile	/^   TARGET := $(TARGET_NAME)_libretro_qnx.so$/;"	m
TARGET	libretro-test-gl/Makefile	/^   TARGET := $(TARGET_NAME)_retro.dll$/;"	m
TARGET	libretro-test/Makefile	/^	TARGET := $(TARGET_NAME)_libretro_qnx.so$/;"	m
TARGET	libretro-test/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.dylib$/;"	m
TARGET	libretro-test/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.so$/;"	m
TARGET	libretro-test/Makefile	/^   TARGET := $(TARGET_NAME)_libretro_emscripten.so$/;"	m
TARGET	libretro-test/Makefile	/^   TARGET := $(TARGET_NAME)_libretro_ios.dylib$/;"	m
TARGET	libretro-test/Makefile	/^   TARGET := $(TARGET_NAME)_retro.dll$/;"	m
TARGET_COPY	patch.c	/^   TARGET_COPY$/;"	e	enum:bps_mode	file:
TARGET_NAME	libretro-test-gl/Makefile	/^TARGET_NAME = testgl$/;"	m
TARGET_NAME	libretro-test/Makefile	/^TARGET_NAME := test$/;"	m
TARGET_READ	patch.c	/^   TARGET_READ,$/;"	e	enum:bps_mode	file:
TCPDUMP_PRIO	console/logger/logger.h	22;"	d
TCPDUMP_STACKSIZE	console/logger/logger.h	21;"	d
TDEFL_COMPUTE_ADLER32	deps/miniz/zlib.h	/^  TDEFL_COMPUTE_ADLER32               = 0x02000,$/;"	e	enum:__anon126
TDEFL_DEFAULT_MAX_PROBES	deps/miniz/zlib.h	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon125
TDEFL_FILTER_MATCHES	deps/miniz/zlib.h	/^  TDEFL_FILTER_MATCHES                = 0x20000,$/;"	e	enum:__anon126
TDEFL_FINISH	deps/miniz/zlib.h	/^  TDEFL_FINISH = 4$/;"	e	enum:__anon131
TDEFL_FORCE_ALL_RAW_BLOCKS	deps/miniz/zlib.h	/^  TDEFL_FORCE_ALL_RAW_BLOCKS          = 0x80000$/;"	e	enum:__anon126
TDEFL_FORCE_ALL_STATIC_BLOCKS	deps/miniz/zlib.h	/^  TDEFL_FORCE_ALL_STATIC_BLOCKS       = 0x40000,$/;"	e	enum:__anon126
TDEFL_FULL_FLUSH	deps/miniz/zlib.h	/^  TDEFL_FULL_FLUSH = 3,$/;"	e	enum:__anon131
TDEFL_GREEDY_PARSING_FLAG	deps/miniz/zlib.h	/^  TDEFL_GREEDY_PARSING_FLAG           = 0x04000,$/;"	e	enum:__anon126
TDEFL_HUFFMAN_ONLY	deps/miniz/zlib.h	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon125
TDEFL_LESS_MEMORY	deps/miniz/zlib.h	625;"	d
TDEFL_LEVEL1_HASH_SIZE_MASK	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_LEVEL1_HASH_SIZE_MASK	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_LZ_CODE_BUF_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_LZ_CODE_BUF_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_LZ_DICT_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_LZ_DICT_SIZE_MASK	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_LZ_HASH_BITS	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_LZ_HASH_BITS	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_LZ_HASH_SHIFT	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_LZ_HASH_SHIFT	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_LZ_HASH_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_LZ_HASH_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_MAX_HUFF_SYMBOLS	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_MAX_HUFF_SYMBOLS	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_MAX_HUFF_SYMBOLS_0	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_MAX_HUFF_SYMBOLS_1	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_MAX_HUFF_SYMBOLS_2	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_MAX_HUFF_TABLES	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_MAX_MATCH_LEN	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_MAX_PROBES_MASK	deps/miniz/zlib.h	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon125
TDEFL_MAX_SUPPORTED_HUFF_CODESIZE	deps/miniz/miniz.c	/^enum { TDEFL_MAX_SUPPORTED_HUFF_CODESIZE = 32 };$/;"	e	enum:__anon135	file:
TDEFL_MIN_MATCH_LEN	deps/miniz/zlib.h	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 32768, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon127
TDEFL_NONDETERMINISTIC_PARSING_FLAG	deps/miniz/zlib.h	/^  TDEFL_NONDETERMINISTIC_PARSING_FLAG = 0x08000,$/;"	e	enum:__anon126
TDEFL_NO_FLUSH	deps/miniz/zlib.h	/^  TDEFL_NO_FLUSH = 0,$/;"	e	enum:__anon131
TDEFL_OUT_BUF_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon128
TDEFL_OUT_BUF_SIZE	deps/miniz/zlib.h	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon129
TDEFL_PROBE	deps/miniz/miniz.c	1423;"	d	file:
TDEFL_PROBE	deps/miniz/miniz.c	1457;"	d	file:
TDEFL_PUT_BITS	deps/miniz/miniz.c	1052;"	d	file:
TDEFL_PUT_BITS_FAST	deps/miniz/miniz.c	1174;"	d	file:
TDEFL_PUT_BITS_FAST	deps/miniz/miniz.c	1235;"	d	file:
TDEFL_READ_UNALIGNED_WORD	deps/miniz/miniz.c	1410;"	d	file:
TDEFL_RLE_MATCHES	deps/miniz/zlib.h	/^  TDEFL_RLE_MATCHES                   = 0x10000,$/;"	e	enum:__anon126
TDEFL_RLE_PREV_CODE_SIZE	deps/miniz/miniz.c	1063;"	d	file:
TDEFL_RLE_ZERO_CODE_SIZE	deps/miniz/miniz.c	1071;"	d	file:
TDEFL_STATUS_BAD_PARAM	deps/miniz/zlib.h	/^  TDEFL_STATUS_BAD_PARAM = -2,$/;"	e	enum:__anon130
TDEFL_STATUS_DONE	deps/miniz/zlib.h	/^  TDEFL_STATUS_DONE = 1,$/;"	e	enum:__anon130
TDEFL_STATUS_OKAY	deps/miniz/zlib.h	/^  TDEFL_STATUS_OKAY = 0,$/;"	e	enum:__anon130
TDEFL_STATUS_PUT_BUF_FAILED	deps/miniz/zlib.h	/^  TDEFL_STATUS_PUT_BUF_FAILED = -1,$/;"	e	enum:__anon130
TDEFL_SYNC_FLUSH	deps/miniz/zlib.h	/^  TDEFL_SYNC_FLUSH = 2,$/;"	e	enum:__anon131
TDEFL_WRITE_ZLIB_HEADER	deps/miniz/zlib.h	/^  TDEFL_WRITE_ZLIB_HEADER             = 0x01000,$/;"	e	enum:__anon126
TERM_HEIGHT	frontend/menu/disp/rgui.c	49;"	d	file:
TERM_START_X	frontend/menu/disp/rgui.c	46;"	d	file:
TERM_START_Y	frontend/menu/disp/rgui.c	47;"	d	file:
TERM_WIDTH	frontend/menu/disp/rgui.c	48;"	d	file:
TERM_WIDTH	frontend/menu/disp/rmenu.c	51;"	d	file:
TERM_WIDTH	frontend/menu/disp/rmenu.c	62;"	d	file:
TESTS	audio/test/Makefile	/^TESTS := test-sinc-lowest \\$/;"	m
TEST_SECONDS	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final double TEST_SECONDS = 10.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
THREAD_ATTR_USER	frontend/platform/platform_psp.c	/^PSP_MAIN_THREAD_ATTR(THREAD_ATTR_USER);$/;"	v
THREAD_H__	thread.h	17;"	d
TIMER_TYPE	frontend/platform/platform_xdk.h	/^    } TIMER_TYPE;$/;"	t	typeref:enum:_TIMER_TYPE
TINFL_BITBUF_SIZE	deps/miniz/zlib.h	606;"	d
TINFL_BITBUF_SIZE	deps/miniz/zlib.h	609;"	d
TINFL_CR_BEGIN	deps/miniz/miniz.c	509;"	d	file:
TINFL_CR_FINISH	deps/miniz/miniz.c	512;"	d	file:
TINFL_CR_RETURN	deps/miniz/miniz.c	510;"	d	file:
TINFL_CR_RETURN_FOREVER	deps/miniz/miniz.c	511;"	d	file:
TINFL_DECOMPRESS_MEM_TO_MEM_FAILED	deps/miniz/zlib.h	555;"	d
TINFL_FAST_LOOKUP_BITS	deps/miniz/zlib.h	/^  TINFL_FAST_LOOKUP_BITS = 10, TINFL_FAST_LOOKUP_SIZE = 1 << TINFL_FAST_LOOKUP_BITS$/;"	e	enum:__anon123
TINFL_FAST_LOOKUP_SIZE	deps/miniz/zlib.h	/^  TINFL_FAST_LOOKUP_BITS = 10, TINFL_FAST_LOOKUP_SIZE = 1 << TINFL_FAST_LOOKUP_BITS$/;"	e	enum:__anon123
TINFL_FLAG_COMPUTE_ADLER32	deps/miniz/zlib.h	/^  TINFL_FLAG_COMPUTE_ADLER32 = 8$/;"	e	enum:__anon121
TINFL_FLAG_HAS_MORE_INPUT	deps/miniz/zlib.h	/^  TINFL_FLAG_HAS_MORE_INPUT = 2,$/;"	e	enum:__anon121
TINFL_FLAG_PARSE_ZLIB_HEADER	deps/miniz/zlib.h	/^  TINFL_FLAG_PARSE_ZLIB_HEADER = 1,$/;"	e	enum:__anon121
TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF	deps/miniz/zlib.h	/^  TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF = 4,$/;"	e	enum:__anon121
TINFL_GET_BITS	deps/miniz/miniz.c	534;"	d	file:
TINFL_GET_BYTE	deps/miniz/miniz.c	516;"	d	file:
TINFL_HUFF_BITBUF_FILL	deps/miniz/miniz.c	540;"	d	file:
TINFL_HUFF_DECODE	deps/miniz/miniz.c	559;"	d	file:
TINFL_LZ_DICT_SIZE	deps/miniz/zlib.h	566;"	d
TINFL_MAX_HUFF_SYMBOLS_0	deps/miniz/zlib.h	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon123
TINFL_MAX_HUFF_SYMBOLS_1	deps/miniz/zlib.h	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon123
TINFL_MAX_HUFF_SYMBOLS_2	deps/miniz/zlib.h	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon123
TINFL_MAX_HUFF_TABLES	deps/miniz/zlib.h	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon123
TINFL_MEMCPY	deps/miniz/miniz.c	506;"	d	file:
TINFL_MEMSET	deps/miniz/miniz.c	507;"	d	file:
TINFL_NEED_BITS	deps/miniz/miniz.c	532;"	d	file:
TINFL_SKIP_BITS	deps/miniz/miniz.c	533;"	d	file:
TINFL_STATUS_ADLER32_MISMATCH	deps/miniz/zlib.h	/^  TINFL_STATUS_ADLER32_MISMATCH = -2,$/;"	e	enum:__anon122
TINFL_STATUS_BAD_PARAM	deps/miniz/zlib.h	/^  TINFL_STATUS_BAD_PARAM = -3,$/;"	e	enum:__anon122
TINFL_STATUS_DONE	deps/miniz/zlib.h	/^  TINFL_STATUS_DONE = 0,$/;"	e	enum:__anon122
TINFL_STATUS_FAILED	deps/miniz/zlib.h	/^  TINFL_STATUS_FAILED = -1,$/;"	e	enum:__anon122
TINFL_STATUS_HAS_MORE_OUTPUT	deps/miniz/zlib.h	/^  TINFL_STATUS_HAS_MORE_OUTPUT = 2$/;"	e	enum:__anon122
TINFL_STATUS_NEEDS_MORE_INPUT	deps/miniz/zlib.h	/^  TINFL_STATUS_NEEDS_MORE_INPUT = 1,$/;"	e	enum:__anon122
TINFL_USE_64BIT_BITBUF	deps/miniz/zlib.h	601;"	d
TRYFREE	deps/minizip/unzip.c	81;"	d	file:
TRY_ALSA	audio/alsa.c	22;"	d	file:
TRY_ALSA	audio/alsathread.c	25;"	d	file:
TVFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum TVFormat;$/;"	m	struct:__anon50	access:public
TVStandard	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLtvStandard TVStandard;$/;"	m	struct:__anon72	access:public
TVStandard	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum TVStandard;$/;"	m	struct:__anon50	access:public
TYPE_DIRECTORY	ps3/ps3py/pkg.py	/^TYPE_DIRECTORY = 0x4$/;"	v
TYPE_NPDRMSELF	ps3/ps3py/pkg.py	/^TYPE_NPDRMSELF = 0x1$/;"	v
TYPE_OVERWRITE_ALLOWED	ps3/ps3py/pkg.py	/^TYPE_OVERWRITE_ALLOWED = 0x80000000$/;"	v
TYPE_RAW	ps3/ps3py/pkg.py	/^TYPE_RAW = 0x3$/;"	v
T_H	hash.c	/^static const uint32_t T_H[8] = {$/;"	v	file:
T_K	hash.c	/^static const uint32_t T_K[64] = {$/;"	v	file:
Tag	frontend/platform/platform_xdk.h	/^	CHAR Tag[4];$/;"	m	struct:_OBJECT_TYPE	access:public
TagunzFile__	deps/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	s
TagunzFile__::unused	deps/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	m	struct:TagunzFile__	access:public
TailReferenceCount	frontend/platform/platform_xdk.h	/^	WORD *TailReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
TargetId	frontend/platform/platform_xdk.h	/^    \/*004*\/ UCHAR TargetId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
TexCoordReplaceMask	ps3/rgl/include/RGL/Types.h	/^      GLuint	TexCoordReplaceMask;$/;"	m	struct:RGLcontext	access:public
TextureBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint	TextureBuffer;$/;"	m	struct:RGLcontext	access:public
TextureImageUnits	ps3/rgl/include/RGL/Types.h	/^      rglTextureImageUnit	TextureImageUnits[RGL_MAX_TEXTURE_IMAGE_UNITS];$/;"	m	struct:RGLcontext	access:public
Textures	gfx/d3d9/render_chain.hpp	/^      enum { Textures = 8, TexturesMask = Textures - 1 };$/;"	e	enum:RenderChain::__anon223
TexturesMask	gfx/d3d9/render_chain.hpp	/^      enum { Textures = 8, TexturesMask = Textures - 1 };$/;"	e	enum:RenderChain::__anon223
ThreadObject	frontend/platform/platform_xdk.h	/^	PKTHREAD ThreadObject;$/;"	m	struct:_FS_STRUCTURE	access:public
TimeOutValue	frontend/platform/platform_xdk.h	/^    \/*010*\/ ULONG TimeOutValue;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
TimerListEntry	frontend/platform/platform_xdk.h	/^    LIST_ENTRY TimerListEntry;$/;"	m	struct:_KTIMER	access:public
Timestamp	frontend/platform/platform_xdk.h	/^	ULONG Timestamp;$/;"	m	struct:_XBE_CERTIFICATE	access:public
Timestamp	frontend/platform/platform_xdk.h	/^	ULONG Timestamp;$/;"	m	struct:_XBE_HEADER	access:public
Title	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public final String Title;$/;"	f	class:DetectCoreDirectoryFragment.CoreItem	access:public
TitleId	frontend/platform/platform_xdk.h	/^	ULONG TitleId;$/;"	m	struct:_XBE_CERTIFICATE	access:public
TitleName	frontend/platform/platform_xdk.h	/^	WCHAR TitleName[40];$/;"	m	struct:_XBE_CERTIFICATE	access:public
TlsData	frontend/platform/platform_xdk.h	/^	PVOID TlsData;$/;"	m	struct:_KTHREAD	access:public
TlsDataTop	frontend/platform/platform_xdk.h	/^	PVOID TlsDataTop;$/;"	m	struct:_FS_STRUCTURE	access:public
TlsDirectory	frontend/platform/platform_xdk.h	/^	struct _XBE_TLS_DIRECTORY *TlsDirectory;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_TLS_DIRECTORY	access:public
TopLevelGet	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint TopLevelGet;             \/* top level get offset, read only  0054-0057*\/$/;"	m	struct:__anon54	access:public
TotalAllocationUnits	frontend/platform/platform_xdk.h	/^	LARGE_INTEGER TotalAllocationUnits;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
Type	frontend/platform/platform_xdk.h	/^	CSHORT Type;$/;"	m	struct:_KDPC	access:public
Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_DEVICE_OBJECT	access:public
Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_DRIVER_OBJECT	access:public
Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_FILE_OBJECT	access:public
Type	frontend/platform/platform_xdk.h	/^    UCHAR Type;$/;"	m	struct:_DISPATCHER_HEADER	access:public
UDEV_CFLAGS	config.mk	/^UDEV_CFLAGS = $/;"	m
UDEV_LIBS	config.mk	/^UDEV_LIBS = $/;"	m
UDP_FRAME_PACKETS	netplay.c	58;"	d	file:
UINT16_C	msvc/msvc-stdint/stdint.h	234;"	d
UINT16_MAX	msvc/msvc-stdint/stdint.h	139;"	d
UINT32_C	msvc/msvc-stdint/stdint.h	235;"	d
UINT32_MAX	msvc/msvc-stdint/stdint.h	140;"	d
UINT64_C	msvc/msvc-stdint/stdint.h	236;"	d
UINT64_MAX	msvc/msvc-stdint/stdint.h	141;"	d
UINT8_C	msvc/msvc-stdint/stdint.h	233;"	d
UINT8_MAX	msvc/msvc-stdint/stdint.h	138;"	d
UINTMAX_C	msvc/msvc-stdint/stdint.h	240;"	d
UINTMAX_MAX	msvc/msvc-stdint/stdint.h	185;"	d
UINTPTR_MAX	msvc/msvc-stdint/stdint.h	175;"	d
UINTPTR_MAX	msvc/msvc-stdint/stdint.h	179;"	d
UINT_FAST16_MAX	msvc/msvc-stdint/stdint.h	167;"	d
UINT_FAST32_MAX	msvc/msvc-stdint/stdint.h	168;"	d
UINT_FAST64_MAX	msvc/msvc-stdint/stdint.h	169;"	d
UINT_FAST8_MAX	msvc/msvc-stdint/stdint.h	166;"	d
UINT_LEAST16_MAX	msvc/msvc-stdint/stdint.h	153;"	d
UINT_LEAST32_MAX	msvc/msvc-stdint/stdint.h	154;"	d
UINT_LEAST64_MAX	msvc/msvc-stdint/stdint.h	155;"	d
UINT_LEAST8_MAX	msvc/msvc-stdint/stdint.h	152;"	d
UNICODE	msvc/msvc_compat.h	21;"	d
UNZ_BADZIPFILE	deps/minizip/unzip.h	73;"	d
UNZ_BUFSIZE	deps/minizip/unzip.c	70;"	d	file:
UNZ_CRCERROR	deps/minizip/unzip.h	75;"	d
UNZ_END_OF_LIST_OF_FILE	deps/minizip/unzip.h	69;"	d
UNZ_EOF	deps/minizip/unzip.h	71;"	d
UNZ_ERRNO	deps/minizip/unzip.h	70;"	d
UNZ_INTERNALERROR	deps/minizip/unzip.h	74;"	d
UNZ_MAXFILENAMEINZIP	deps/minizip/unzip.c	74;"	d	file:
UNZ_OK	deps/minizip/unzip.h	68;"	d
UNZ_PARAMERROR	deps/minizip/unzip.h	72;"	d
UV_BOTTOM	xenon/xenon360_video.c	35;"	d	file:
UV_LEFT	xenon/xenon360_video.c	37;"	d	file:
UV_RIGHT	xenon/xenon360_video.c	38;"	d	file:
UV_TOP	xenon/xenon360_video.c	36;"	d	file:
UnregisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^      virtual HRESULT UnregisterXuiClasses();$/;"	p	class:CRetroArch	file:	access:protected	signature:()
UnregisterXuiClasses	frontend/menu/rmenu_xui.cpp	/^HRESULT CRetroArch::UnregisterXuiClasses (void)$/;"	f	class:CRetroArch	signature:(void)
Usage	dist-scripts/xdk1_env.bat	/^:Usage$/;"	l
Usage	dist-scripts/xdk1_env_bigstack.bat	/^:Usage$/;"	l
UserPreferences	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^public final class UserPreferences$/;"	c
UserPreferences.TAG	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static final String TAG = "UserPreferences";$/;"	f	class:UserPreferences	file:	access:private
UserPreferences.getDefaultConfigPath	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static String getDefaultConfigPath(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
UserPreferences.getDisplayRefreshRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static double getDisplayRefreshRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.getLowLatencyBufferSize	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getLowLatencyBufferSize(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.getLowLatencyOptimalSamplingRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getLowLatencyOptimalSamplingRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.getOptimalSamplingRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getOptimalSamplingRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.getPreferences	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static SharedPreferences getPreferences(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
UserPreferences.getRefreshRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static double getRefreshRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.hasLowLatencyAudio	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static boolean hasLowLatencyAudio(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
UserPreferences.readCPUInfo	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static String readCPUInfo()$/;"	m	class:UserPreferences	access:public	signature:()
UserPreferences.readbackBool	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackBool(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
UserPreferences.readbackConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static void readbackConfigFile(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
UserPreferences.readbackDouble	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackDouble(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
UserPreferences.readbackString	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackString(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
UserPreferences.sanitizeLibretroPath	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static String sanitizeLibretroPath(String path)$/;"	m	class:UserPreferences	file:	access:private	signature:(String path)
UserPreferences.updateConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static void updateConfigFile(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
V4L2_CFLAGS	config.mk	/^V4L2_CFLAGS = $/;"	m
V4L2_LIBS	config.mk	/^V4L2_LIBS = $/;"	m
VAT0reg	gx/gx_video_inl.h	/^	u32 VAT0reg[8];$/;"	m	struct:__gx_regdef	access:public
VAT1reg	gx/gx_video_inl.h	/^	u32 VAT1reg[8];$/;"	m	struct:__gx_regdef	access:public
VAT2reg	gx/gx_video_inl.h	/^	u32 VAT2reg[8];$/;"	m	struct:__gx_regdef	access:public
VATTable	gx/gx_video_inl.h	/^	u32 VATTable;$/;"	m	struct:__gx_regdef	access:public
VBP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VBP;$/;"	m	struct:__disp_video_timing	access:public
VCINSTALLDIR	dist-scripts/xdk1_env.bat	/^@if "%VCINSTALLDIR%"=="" set VCINSTALLDIR=%VSINSTALLDIR%$/;"	v
VCINSTALLDIR	dist-scripts/xdk1_env_bigstack.bat	/^@if "%VCINSTALLDIR%"=="" set VCINSTALLDIR=%VSINSTALLDIR%$/;"	v
VENDOR_INTEL_b	performance/performance_android.c	471;"	d	file:
VENDOR_INTEL_c	performance/performance_android.c	472;"	d	file:
VENDOR_INTEL_d	performance/performance_android.c	473;"	d	file:
VERTEX_PROFILE_INDEX	ps3/rgl/include/Cg/CgCommon.h	252;"	d
VERTEX_PROFILE_INDEX	ps3/rgl/src/include/rgl-constants.h	246;"	d
VFP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VFP;$/;"	m	struct:__disp_video_timing	access:public
VG_CFLAGS	config.mk	/^VG_CFLAGS = $/;"	m
VG_LIBS	config.mk	/^VG_LIBS = $/;"	m
VIC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VIC;$/;"	m	struct:__disp_video_timing	access:public
VIDEO_D3D9	config.def.h	/^   VIDEO_D3D9,$/;"	e	enum:__anon107
VIDEO_DEFAULT_DRIVER	config.def.h	103;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	105;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	107;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	109;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	111;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	113;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	115;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	117;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	119;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	121;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	123;"	d
VIDEO_DEFAULT_DRIVER	config.def.h	125;"	d
VIDEO_EXT	config.def.h	/^   VIDEO_EXT,$/;"	e	enum:__anon107
VIDEO_GL	config.def.h	/^   VIDEO_GL = 0,$/;"	e	enum:__anon107
VIDEO_NULL	config.def.h	/^   VIDEO_NULL,$/;"	e	enum:__anon107
VIDEO_OMAP	config.def.h	/^   VIDEO_OMAP,$/;"	e	enum:__anon107
VIDEO_PSP1	config.def.h	/^   VIDEO_PSP1,$/;"	e	enum:__anon107
VIDEO_SDL	config.def.h	/^   VIDEO_SDL,$/;"	e	enum:__anon107
VIDEO_SetTrapFilter	wii/vi_encoder.c	/^void VIDEO_SetTrapFilter(bool enable)$/;"	f	signature:(bool enable)
VIDEO_SetTrapFilter	wii/vi_encoder.h	/^extern void VIDEO_SetTrapFilter(bool enable);$/;"	p	signature:(bool enable)
VIDEO_VG	config.def.h	/^   VIDEO_VG,$/;"	e	enum:__anon107
VIDEO_VITA	config.def.h	/^   VIDEO_VITA,$/;"	e	enum:__anon107
VIDEO_WII	config.def.h	/^   VIDEO_WII,$/;"	e	enum:__anon107
VIDEO_XDK_D3D	config.def.h	/^   VIDEO_XDK_D3D,$/;"	e	enum:__anon107
VIDEO_XENON360	config.def.h	/^   VIDEO_XENON360,$/;"	e	enum:__anon107
VIDEO_XVIDEO	config.def.h	/^   VIDEO_XVIDEO,$/;"	e	enum:__anon107
VPSW	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VPSW;$/;"	m	struct:__disp_video_timing	access:public
VS100COMNTOOLS	dist-scripts/xdk360_env.bat	/^@set VS100COMNTOOLS=$/;"	v
VSYNC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VSYNC;	\/* 0: Negative 1: Positive *\/$/;"	m	struct:__disp_video_timing	access:public
VSync	ps3/rgl/include/RGL/Types.h	/^      GLboolean		VSync;$/;"	m	struct:RGLcontext	access:public
VT	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VT;$/;"	m	struct:__disp_video_timing	access:public
Vector	ps3/rgl/include/RGL/Base.h	/^      Vector(): array( 0 ), count( 0 ), capacity( 0 ), increment( 4 ) {}$/;"	f	class:RGL::Vector	access:public	signature:()
Vector	ps3/rgl/include/RGL/Base.h	/^   template<class T> class Vector$/;"	c	namespace:RGL
Version	frontend/platform/platform_xdk.h	/^	ULONG Version;$/;"	m	struct:_XBE_CERTIFICATE	access:public
Vertex	gfx/d3d9/render_chain.hpp	/^struct Vertex$/;"	s
Vertex::a	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
Vertex::b	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
Vertex::g	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
Vertex::lut_u	gfx/d3d9/render_chain.hpp	/^   float lut_u, lut_v;$/;"	m	struct:Vertex	access:public
Vertex::lut_v	gfx/d3d9/render_chain.hpp	/^   float lut_u, lut_v;$/;"	m	struct:Vertex	access:public
Vertex::r	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
Vertex::u	gfx/d3d9/render_chain.hpp	/^   float u, v;$/;"	m	struct:Vertex	access:public
Vertex::v	gfx/d3d9/render_chain.hpp	/^   float u, v;$/;"	m	struct:Vertex	access:public
Vertex::x	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
Vertex::y	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
Vertex::z	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
VertexProgram	ps3/rgl/include/RGL/Types.h	/^      GLboolean		VertexProgram;$/;"	m	struct:RGLcontext	access:public
VideoMode	ps3/rgl/src/rgl_ps3.cpp	/^VideoMode;$/;"	t	typeref:struct:__anon30	file:
VideoPreferenceFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^public final class VideoPreferenceFragment extends PreferenceListFragment implements OnPreferenceClickListener$/;"	c	inherits:PreferenceListFragment,OnPreferenceClickListener
VideoPreferenceFragment.onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:VideoPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
VideoPreferenceFragment.onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:VideoPreferenceFragment	access:public	signature:(Preference preference)
ViewPagerAdapter	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public ViewPagerAdapter(FragmentManager fm)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(FragmentManager fm)
ViewPagerAdapter	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private final class ViewPagerAdapter extends FragmentPagerAdapter$/;"	c	class:CoreManagerActivity	inherits:FragmentPagerAdapter	access:private
ViewPort	ps3/rgl/include/RGL/Types.h	/^      rglViewPort		ViewPort;$/;"	m	struct:RGLcontext	access:public
VirtualAddress	frontend/platform/platform_xdk.h	/^	PVOID VirtualAddress;$/;"	m	struct:_XBE_SECTION	access:public
VirtualSize	frontend/platform/platform_xdk.h	/^	ULONG VirtualSize;$/;"	m	struct:_XBE_SECTION	access:public
WARMUP_SECONDS	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private static final double WARMUP_SECONDS = 2.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
WCHAR_MAX	msvc/msvc-stdint/stdint.h	213;"	d
WCHAR_MIN	msvc/msvc-stdint/stdint.h	210;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	gfx/context/wgl_ctx.c	127;"	d	file:
WGL_CONTEXT_DEBUG_BIT_ARB	gfx/context/wgl_ctx.c	133;"	d	file:
WGL_CONTEXT_FLAGS_ARB	gfx/context/wgl_ctx.c	130;"	d	file:
WGL_CONTEXT_MAJOR_VERSION_ARB	gfx/context/wgl_ctx.c	118;"	d	file:
WGL_CONTEXT_MINOR_VERSION_ARB	gfx/context/wgl_ctx.c	121;"	d	file:
WGL_CONTEXT_PROFILE_MASK_ARB	gfx/context/wgl_ctx.c	124;"	d	file:
WHITE	gfx/gfx_common.h	106;"	d
WIIMOTE_BUTTON_A	apple/common/hidpad/wiimote.h	132;"	d
WIIMOTE_BUTTON_ALL	apple/common/hidpad/wiimote.h	145;"	d
WIIMOTE_BUTTON_B	apple/common/hidpad/wiimote.h	131;"	d
WIIMOTE_BUTTON_DOWN	apple/common/hidpad/wiimote.h	139;"	d
WIIMOTE_BUTTON_HOME	apple/common/hidpad/wiimote.h	136;"	d
WIIMOTE_BUTTON_LEFT	apple/common/hidpad/wiimote.h	137;"	d
WIIMOTE_BUTTON_MINUS	apple/common/hidpad/wiimote.h	133;"	d
WIIMOTE_BUTTON_ONE	apple/common/hidpad/wiimote.h	130;"	d
WIIMOTE_BUTTON_PLUS	apple/common/hidpad/wiimote.h	141;"	d
WIIMOTE_BUTTON_RIGHT	apple/common/hidpad/wiimote.h	138;"	d
WIIMOTE_BUTTON_TWO	apple/common/hidpad/wiimote.h	129;"	d
WIIMOTE_BUTTON_UNKNOWN	apple/common/hidpad/wiimote.h	144;"	d
WIIMOTE_BUTTON_UP	apple/common/hidpad/wiimote.h	140;"	d
WIIMOTE_BUTTON_ZACCEL_BIT4	apple/common/hidpad/wiimote.h	142;"	d
WIIMOTE_BUTTON_ZACCEL_BIT5	apple/common/hidpad/wiimote.h	143;"	d
WIIMOTE_BUTTON_ZACCEL_BIT6	apple/common/hidpad/wiimote.h	134;"	d
WIIMOTE_BUTTON_ZACCEL_BIT7	apple/common/hidpad/wiimote.h	135;"	d
WIIMOTE_DISABLE_STATE	apple/common/hidpad/wiimote.h	256;"	d
WIIMOTE_ENABLE_STATE	apple/common/hidpad/wiimote.h	255;"	d
WIIMOTE_IS_CONNECTED	apple/common/hidpad/wiimote.h	259;"	d
WIIMOTE_IS_SET	apple/common/hidpad/wiimote.h	254;"	d
WIIMOTE_LED_1	apple/common/hidpad/wiimote.h	123;"	d
WIIMOTE_LED_2	apple/common/hidpad/wiimote.h	124;"	d
WIIMOTE_LED_3	apple/common/hidpad/wiimote.h	125;"	d
WIIMOTE_LED_4	apple/common/hidpad/wiimote.h	126;"	d
WIIMOTE_LED_NONE	apple/common/hidpad/wiimote.h	122;"	d
WIIMOTE_STATE_CONNECTED	apple/common/hidpad/wiimote.h	64;"	d
WIIMOTE_STATE_DEV_FOUND	apple/common/hidpad/wiimote.h	61;"	d
WIIMOTE_STATE_EXP	apple/common/hidpad/wiimote.h	65;"	d
WIIMOTE_STATE_HANDSHAKE	apple/common/hidpad/wiimote.h	62;"	d
WIIMOTE_STATE_HANDSHAKE_COMPLETE	apple/common/hidpad/wiimote.h	63;"	d
WIIMOTE_TOGGLE_STATE	apple/common/hidpad/wiimote.h	257;"	d
WII_JOYSTICK_THRESHOLD	gx/gx_input.c	37;"	d	file:
WIN32_COMMON_H__	gfx/context/win32_common.h	17;"	d
WIN32_LEAN_AND_MEAN	audio/xaudio-c/xaudio.h	42;"	d
WIN32_LEAN_AND_MEAN	conf/config_file.c	31;"	d	file:
WIN32_LEAN_AND_MEAN	general.h	57;"	d
WIN32_LEAN_AND_MEAN	gfx/context/win32_common.h	23;"	d
WIN32_LEAN_AND_MEAN	miscellaneous.h	31;"	d
WIN32_LEAN_AND_MEAN	msvc/msvc-2010/GL/glext.h	38;"	d
WIN32_LEAN_AND_MEAN	netplay_compat.h	27;"	d
WIN32_LEAN_AND_MEAN	ps3/rgl/include/export/GLES/gl.h	48;"	d
WIN32_LEAN_AND_MEAN	retroarch.c	42;"	d	file:
WIN32_LEAN_AND_MEAN	thread.c	24;"	d	file:
WINDOW_BUFFERS	gfx/context/bbqnx_ctx.c	39;"	d	file:
WINT_MAX	msvc/msvc-stdint/stdint.h	217;"	d
WINT_MIN	msvc/msvc-stdint/stdint.h	216;"	d
WITH_FEATURE	apple/common/setting_data.c	304;"	d	file:
WITH_FLAGS	apple/common/setting_data.c	319;"	d	file:
WITH_RANGE	apple/common/setting_data.c	320;"	d	file:
WITH_VALUES	apple/common/setting_data.c	321;"	d	file:
WM_BT_INPUT	apple/common/hidpad/wiimote.h	95;"	d
WM_BT_OUTPUT	apple/common/hidpad/wiimote.h	96;"	d
WM_CMD_CTRL_STATUS	apple/common/hidpad/wiimote.h	78;"	d
WM_CMD_IR	apple/common/hidpad/wiimote.h	77;"	d
WM_CMD_IR_2	apple/common/hidpad/wiimote.h	81;"	d
WM_CMD_LED	apple/common/hidpad/wiimote.h	74;"	d
WM_CMD_READ_DATA	apple/common/hidpad/wiimote.h	80;"	d
WM_CMD_REPORT_TYPE	apple/common/hidpad/wiimote.h	75;"	d
WM_CMD_RUMBLE	apple/common/hidpad/wiimote.h	76;"	d
WM_CMD_WRITE_DATA	apple/common/hidpad/wiimote.h	79;"	d
WM_CTRL_STATUS_BYTE1_ATTACHMENT	apple/common/hidpad/wiimote.h	113;"	d
WM_CTRL_STATUS_BYTE1_IR_ENABLED	apple/common/hidpad/wiimote.h	115;"	d
WM_CTRL_STATUS_BYTE1_LED_1	apple/common/hidpad/wiimote.h	116;"	d
WM_CTRL_STATUS_BYTE1_LED_2	apple/common/hidpad/wiimote.h	117;"	d
WM_CTRL_STATUS_BYTE1_LED_3	apple/common/hidpad/wiimote.h	118;"	d
WM_CTRL_STATUS_BYTE1_LED_4	apple/common/hidpad/wiimote.h	119;"	d
WM_CTRL_STATUS_BYTE1_SPEAKER_ENABLED	apple/common/hidpad/wiimote.h	114;"	d
WM_EXP_MEM_BASE	apple/common/hidpad/wiimote.h	105;"	d
WM_EXP_MEM_CALIBR	apple/common/hidpad/wiimote.h	107;"	d
WM_EXP_MEM_ENABLE	apple/common/hidpad/wiimote.h	106;"	d
WM_INPUT_CHANNEL	apple/common/hidpad/wiimote.h	69;"	d
WM_MAX_BATTERY_CODE	apple/common/hidpad/wiimote.h	99;"	d
WM_MEM_OFFSET_CALIBRATION	apple/common/hidpad/wiimote.h	104;"	d
WM_OUTPUT_CHANNEL	apple/common/hidpad/wiimote.h	68;"	d
WM_POINTERDOWN	input/dinput.c	351;"	d	file:
WM_POINTERUP	input/dinput.c	354;"	d	file:
WM_POINTERUPDATE	input/dinput.c	348;"	d	file:
WM_RPT_BTN	apple/common/hidpad/wiimote.h	87;"	d
WM_RPT_BTN_ACC	apple/common/hidpad/wiimote.h	88;"	d
WM_RPT_BTN_ACC_EXP	apple/common/hidpad/wiimote.h	91;"	d
WM_RPT_BTN_ACC_IR	apple/common/hidpad/wiimote.h	89;"	d
WM_RPT_BTN_ACC_IR_EXP	apple/common/hidpad/wiimote.h	93;"	d
WM_RPT_BTN_EXP	apple/common/hidpad/wiimote.h	90;"	d
WM_RPT_BTN_IR_EXP	apple/common/hidpad/wiimote.h	92;"	d
WM_RPT_CTRL_STATUS	apple/common/hidpad/wiimote.h	84;"	d
WM_RPT_READ	apple/common/hidpad/wiimote.h	85;"	d
WM_RPT_WRITE	apple/common/hidpad/wiimote.h	86;"	d
WM_SET_REPORT	apple/common/hidpad/wiimote.h	71;"	d
WORDS_IN_PACKET	ps3/altivec_mem.h	106;"	d
WORDS_IN_PACKET	ps3/altivec_mem.h	236;"	d
WRITE_PREFETCH_START1	ps3/altivec_mem.h	92;"	d
WRITE_PREFETCH_START2	ps3/altivec_mem.h	93;"	d
WaitLabelIndex	ps3/rgl/src/rgl_ps3.cpp	/^static const uint32_t WaitLabelIndex = 111;$/;"	v	file:
WaitListHead	frontend/platform/platform_xdk.h	/^    LIST_ENTRY WaitListHead;$/;"	m	struct:_DISPATCHER_HEADER	access:public
WindowProc	gfx/d3d9/d3d9.cpp	/^   LRESULT CALLBACK WindowProc(HWND hWnd, UINT message,$/;"	f	namespace:Callback	signature:(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
WndProc	gfx/context/wgl_ctx.c	/^static LRESULT CALLBACK WndProc(HWND hwnd, UINT message,$/;"	f	file:	signature:(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam)
X	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
X11_COMMON_H__	gfx/context/x11_common.h	18;"	d
X2DEFAULT	audio/xaudio-c/xaudio.h	25;"	d
X2F	ps3/rgl/include/RGL/TypeUtils.h	85;"	d
XAUDIO2_ANY_PROCESSOR	audio/xaudio-c/xaudio.h	/^	XAUDIO2_ANY_PROCESSOR = XboxThread4,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XAUDIO2_ANY_PROCESSOR	audio/xaudio-c/xaudio.h	/^   XAUDIO2_ANY_PROCESSOR       = 0xffffffff,$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_BUFFER	audio/xaudio-c/xaudio.h	/^typedef struct XAUDIO2_BUFFER$/;"	s
XAUDIO2_BUFFER	audio/xaudio-c/xaudio.h	/^} XAUDIO2_BUFFER;$/;"	t	typeref:struct:XAUDIO2_BUFFER
XAUDIO2_BUFFER::AudioBytes	audio/xaudio-c/xaudio.h	/^   UINT32 AudioBytes;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::Flags	audio/xaudio-c/xaudio.h	/^   UINT32 Flags;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::LoopBegin	audio/xaudio-c/xaudio.h	/^   UINT32 LoopBegin;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::LoopCount	audio/xaudio-c/xaudio.h	/^   UINT32 LoopCount;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::LoopLength	audio/xaudio-c/xaudio.h	/^   UINT32 LoopLength;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::PlayBegin	audio/xaudio-c/xaudio.h	/^   UINT32 PlayBegin;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::PlayLength	audio/xaudio-c/xaudio.h	/^   UINT32 PlayLength;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::pAudioData	audio/xaudio-c/xaudio.h	/^   const BYTE* pAudioData;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_BUFFER::pContext	audio/xaudio-c/xaudio.h	/^   void *pContext;$/;"	m	struct:XAUDIO2_BUFFER	access:public
XAUDIO2_COMMIT_NOW	audio/xaudio-c/xaudio.h	66;"	d
XAUDIO2_DEBUG_ENGINE	audio/xaudio-c/xaudio.h	70;"	d
XAUDIO2_DEFAULT_CHANNELS	audio/xaudio-c/xaudio.h	67;"	d
XAUDIO2_DEFAULT_FREQ_RATIO	audio/xaudio-c/xaudio.h	61;"	d
XAUDIO2_DEFAULT_FREQ_RATIO	audio/xaudio-c/xaudio.h	63;"	d
XAUDIO2_DEFAULT_PROCESSOR	audio/xaudio-c/xaudio.h	/^	XAUDIO2_DEFAULT_PROCESSOR = XAUDIO2_ANY_PROCESSOR$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XAUDIO2_DEFAULT_PROCESSOR	audio/xaudio-c/xaudio.h	/^   XAUDIO2_DEFAULT_PROCESSOR   = XAUDIO2_ANY_PROCESSOR$/;"	e	enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_DEFAULT_SAMPLERATE	audio/xaudio-c/xaudio.h	68;"	d
XAUDIO2_DEVICE_DETAILS	audio/xaudio-c/xaudio.h	/^typedef struct XAUDIO2_DEVICE_DETAILS$/;"	s
XAUDIO2_DEVICE_DETAILS	audio/xaudio-c/xaudio.h	/^} XAUDIO2_DEVICE_DETAILS;$/;"	t	typeref:struct:XAUDIO2_DEVICE_DETAILS
XAUDIO2_DEVICE_DETAILS::DeviceID	audio/xaudio-c/xaudio.h	/^   WCHAR DeviceID[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
XAUDIO2_DEVICE_DETAILS::DisplayName	audio/xaudio-c/xaudio.h	/^   WCHAR DisplayName[256];$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
XAUDIO2_DEVICE_DETAILS::OutputFormat	audio/xaudio-c/xaudio.h	/^   WAVEFORMATEXTENSIBLE OutputFormat;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
XAUDIO2_DEVICE_DETAILS::Role	audio/xaudio-c/xaudio.h	/^   XAUDIO2_DEVICE_ROLE Role;$/;"	m	struct:XAUDIO2_DEVICE_DETAILS	access:public
XAUDIO2_DEVICE_ROLE	audio/xaudio-c/xaudio.h	/^typedef enum XAUDIO2_DEVICE_ROLE$/;"	g
XAUDIO2_DEVICE_ROLE	audio/xaudio-c/xaudio.h	/^} XAUDIO2_DEVICE_ROLE;$/;"	t	typeref:enum:XAUDIO2_DEVICE_ROLE
XAUDIO2_FILTER_TYPE	audio/xaudio-c/xaudio.h	/^typedef enum XAUDIO2_FILTER_TYPE {$/;"	g
XAUDIO2_FILTER_TYPE	audio/xaudio-c/xaudio.h	/^} XAUDIO2_FILTER_TYPE;$/;"	t	typeref:enum:XAUDIO2_FILTER_TYPE
XAUDIO2_PROCESSOR	audio/xaudio-c/xaudio.h	/^} XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_PROCESSOR	audio/xaudio-c/xaudio.h	/^} XAUDIO2_XBOX_HWTHREAD_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XAUDIO2_STRIPPED_H	audio/xaudio-c/xaudio.h	21;"	d
XAUDIO2_VOICE_NOSRC	audio/xaudio-c/xaudio.h	71;"	d
XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER	audio/xaudio-c/xaudio.h	/^typedef enum XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER$/;"	g
XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER	audio/xaudio-c/xaudio.h	/^} XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_WINDOWS_PROCESSOR_SPECIFIER
XAUDIO2_XBOX_HWTHREAD_SPECIFIER	audio/xaudio-c/xaudio.h	/^typedef enum XAUDIO2_XBOX_HWTHREAD_SPECIFIER$/;"	g
XAUDIO2_XBOX_HWTHREAD_SPECIFIER	audio/xaudio-c/xaudio.h	/^} XAUDIO2_XBOX_HWTHREAD_SPECIFIER, XAUDIO2_PROCESSOR;$/;"	t	typeref:enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XAUDIO_C_H	audio/xaudio-c/xaudio-c.h	8;"	d
XA_INIT	gfx/context/x11_common.c	62;"	d	file:
XA_NET_MOVERESIZE_WINDOW	gfx/context/x11_common.c	/^static Atom XA_NET_MOVERESIZE_WINDOW;$/;"	v	file:
XA_NET_WM_STATE	gfx/context/x11_common.c	/^static Atom XA_NET_WM_STATE;$/;"	v	file:
XA_NET_WM_STATE_FULLSCREEN	gfx/context/x11_common.c	/^static Atom XA_NET_WM_STATE_FULLSCREEN;$/;"	v	file:
XAudio2Create	audio/xaudio-c/xaudio.h	/^STDAPI XAudio2Create(__deref_out IXAudio2** ppXAudio2, UINT32 Flags X2DEFAULT(0),$/;"	p	signature:(__deref_out IXAudio2** ppXAudio2, UINT32 Flags X2DEFAULT(0), XAUDIO2_PROCESSOR XAudio2Processor X2DEFAULT(XAUDIO2_DEFAULT_PROCESSOR))
XAudio2Create	audio/xaudio-c/xaudio.h	/^static inline HRESULT XAudio2Create(IXAudio2 **ppXAudio2, UINT32, XAUDIO2_PROCESSOR)$/;"	f	signature:(IXAudio2 **ppXAudio2, UINT32, XAUDIO2_PROCESSOR)
XBE_CERTIFICATE	frontend/platform/platform_xdk.h	/^} XBE_CERTIFICATE, *PXBE_CERTIFICATE;$/;"	t	typeref:struct:_XBE_CERTIFICATE
XBE_HEADER	frontend/platform/platform_xdk.h	/^} XBE_HEADER, *PXBE_HEADER;$/;"	t	typeref:struct:_XBE_HEADER
XBE_INIT_64M_RAM_ONLY	frontend/platform/platform_xdk.h	606;"	d
XBE_INIT_DONT_SETUP_HDD	frontend/platform/platform_xdk.h	607;"	d
XBE_INIT_FORMAT_UTILITY	frontend/platform/platform_xdk.h	605;"	d
XBE_INIT_MOUNT_UTILITY	frontend/platform/platform_xdk.h	604;"	d
XBE_MEDIA_1LAYER_DVDR	frontend/platform/platform_xdk.h	622;"	d
XBE_MEDIA_1LAYER_DVDROM	frontend/platform/platform_xdk.h	620;"	d
XBE_MEDIA_2LAYER_DVDR	frontend/platform/platform_xdk.h	623;"	d
XBE_MEDIA_2LAYER_DVDROM	frontend/platform/platform_xdk.h	621;"	d
XBE_MEDIA_ALLOW_UNLOCKED_HDD	frontend/platform/platform_xdk.h	625;"	d
XBE_MEDIA_ANY_CD_OR_DVD	frontend/platform/platform_xdk.h	618;"	d
XBE_MEDIA_CD	frontend/platform/platform_xdk.h	619;"	d
XBE_MEDIA_HDD	frontend/platform/platform_xdk.h	616;"	d
XBE_MEDIA_USB	frontend/platform/platform_xdk.h	624;"	d
XBE_MEDIA_XBOX_DVD	frontend/platform/platform_xdk.h	617;"	d
XBE_REGION_DEBUG	frontend/platform/platform_xdk.h	613;"	d
XBE_REGION_ELSEWHERE	frontend/platform/platform_xdk.h	612;"	d
XBE_REGION_JAPAN	frontend/platform/platform_xdk.h	611;"	d
XBE_REGION_US_CANADA	frontend/platform/platform_xdk.h	610;"	d
XBE_SECTION	frontend/platform/platform_xdk.h	/^} XBE_SECTION, *PXBE_SECTION;$/;"	t	typeref:struct:_XBE_SECTION
XBE_SEC_EXECUTABLE	frontend/platform/platform_xdk.h	630;"	d
XBE_SEC_INSERTED_FILE	frontend/platform/platform_xdk.h	631;"	d
XBE_SEC_PRELOAD	frontend/platform/platform_xdk.h	629;"	d
XBE_SEC_RO_HEAD_PAGE	frontend/platform/platform_xdk.h	632;"	d
XBE_SEC_RO_TAIL_PAGE	frontend/platform/platform_xdk.h	633;"	d
XBE_SEC_WRITABLE	frontend/platform/platform_xdk.h	628;"	d
XBOX_CONTROLLER_NAMES	input/winxinput_joypad.c	/^static const char* const XBOX_CONTROLLER_NAMES[4] = $/;"	v	file:
XBOX_PRESENTATIONINTERVAL	gfx/context/xdk_ctx.c	36;"	d	file:
XBOX_PRESENTATIONINTERVAL	gfx/context/xdk_ctx.c	38;"	d	file:
XBRESOURCE	xdk/xdk_resources.h	/^struct XBRESOURCE$/;"	s
XBRESOURCE::dwOffset	xdk/xdk_resources.h	/^   DWORD dwOffset;$/;"	m	struct:XBRESOURCE	access:public
XBRESOURCE::strName	xdk/xdk_resources.h	/^   CHAR* strName;$/;"	m	struct:XBRESOURCE	access:public
XBResource_SizeOf	xdk/xdk_resources.h	/^DWORD XBResource_SizeOf( LPDIRECT3DRESOURCE pResource );$/;"	p	signature:( LPDIRECT3DRESOURCE pResource )
XE_H	xenon/xenon360_video.c	33;"	d	file:
XE_W	xenon/xenon360_video.c	32;"	d	file:
XINPUT_DEFAULT_BINDS	input/autoconf/builtin_win.c	18;"	d	file:
XINPUT_GAMEPAD	input/winxinput_joypad.c	/^} XINPUT_GAMEPAD;$/;"	t	typeref:struct:__anon86	file:
XINPUT_GAMEPAD_A	input/winxinput_joypad.c	46;"	d	file:
XINPUT_GAMEPAD_B	input/winxinput_joypad.c	47;"	d	file:
XINPUT_GAMEPAD_BACK	input/winxinput_joypad.c	41;"	d	file:
XINPUT_GAMEPAD_DPAD_DOWN	input/winxinput_joypad.c	37;"	d	file:
XINPUT_GAMEPAD_DPAD_LEFT	input/winxinput_joypad.c	38;"	d	file:
XINPUT_GAMEPAD_DPAD_RIGHT	input/winxinput_joypad.c	39;"	d	file:
XINPUT_GAMEPAD_DPAD_UP	input/winxinput_joypad.c	36;"	d	file:
XINPUT_GAMEPAD_GUIDE	input/winxinput_joypad.c	77;"	d	file:
XINPUT_GAMEPAD_LEFT_SHOULDER	input/winxinput_joypad.c	44;"	d	file:
XINPUT_GAMEPAD_LEFT_THUMB	input/winxinput_joypad.c	42;"	d	file:
XINPUT_GAMEPAD_RIGHT_SHOULDER	input/winxinput_joypad.c	45;"	d	file:
XINPUT_GAMEPAD_RIGHT_THUMB	input/winxinput_joypad.c	43;"	d	file:
XINPUT_GAMEPAD_START	input/winxinput_joypad.c	40;"	d	file:
XINPUT_GAMEPAD_X	input/winxinput_joypad.c	48;"	d	file:
XINPUT_GAMEPAD_Y	input/winxinput_joypad.c	49;"	d	file:
XINPUT_PAD_NAMES	input/dinput.c	/^static const char* const XINPUT_PAD_NAMES[] = $/;"	v	file:
XINPUT_STATE	input/winxinput_joypad.c	/^} XINPUT_STATE;$/;"	t	typeref:struct:__anon87	file:
XINPUT_VIBRATION	input/winxinput_joypad.c	/^} XINPUT_VIBRATION;$/;"	t	typeref:struct:__anon88	file:
XInputGetStateEx_t	input/winxinput_joypad.c	/^typedef uint32_t (__stdcall *XInputGetStateEx_t)(uint32_t, XINPUT_STATE*);$/;"	t	file:
XInputSetState_t	input/winxinput_joypad.c	/^typedef uint32_t (__stdcall *XInputSetState_t)(uint32_t, XINPUT_VIBRATION*);$/;"	t	file:
XKBCOMMON_CFLAGS	config.mk	/^XKBCOMMON_CFLAGS = $/;"	m
XKBCOMMON_LIBS	config.mk	/^XKBCOMMON_LIBS = $/;"	m
XML_ELEMENT_NODE	compat/rxml/rxml.h	69;"	d
XNetLoadConfigParams	frontend/platform/platform_xdk.h	/^	extern INT WINAPI XNetLoadConfigParams(LPBYTE);   $/;"	p	signature:(LPBYTE)
XNetSaveConfigParams	frontend/platform/platform_xdk.h	/^	extern INT WINAPI XNetSaveConfigParams(LPBYTE);     $/;"	p	signature:(LPBYTE)
XPR0_MAGIC_VALUE	xdk/xdk_resources.cpp	29;"	d	file:
XPR1_MAGIC_VALUE	xdk/xdk_resources.cpp	30;"	d	file:
XPR2_MAGIC_VALUE	xdk/xdk_resources.cpp	31;"	d	file:
XPR_HEADER	xdk/xdk_resources.cpp	/^struct XPR_HEADER$/;"	s	file:
XPR_HEADER::dwDataSize	xdk/xdk_resources.cpp	/^   DWORD dwDataSize;$/;"	m	struct:XPR_HEADER	file:	access:public
XPR_HEADER::dwHeaderSize	xdk/xdk_resources.cpp	/^   DWORD dwHeaderSize;$/;"	m	struct:XPR_HEADER	file:	access:public
XPR_HEADER::dwMagic	xdk/xdk_resources.cpp	/^   DWORD dwMagic;$/;"	m	struct:XPR_HEADER	file:	access:public
XSize	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
XUI_CONTROL_NAVIGATE_OK	frontend/menu/rmenu_xui.cpp	80;"	d	file:
XWriteTitleInfoNoReboot	frontend/platform/platform_xdk.h	/^	extern INT WINAPI XWriteTitleInfoNoReboot(LPVOID,LPVOID,DWORD,DWORD,LPVOID);$/;"	p	signature:(LPVOID,LPVOID,DWORD,DWORD,LPVOID)
XapiLibrary	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *XapiLibrary;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
XbeHeaderSize	frontend/platform/platform_xdk.h	/^	ULONG XbeHeaderSize;$/;"	m	struct:_XBE_HEADER	access:public
XboxThread0	audio/xaudio-c/xaudio.h	/^	XboxThread0 = 0x01,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XboxThread1	audio/xaudio-c/xaudio.h	/^	XboxThread1 = 0x02,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XboxThread2	audio/xaudio-c/xaudio.h	/^	XboxThread2 = 0x04,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XboxThread3	audio/xaudio-c/xaudio.h	/^	XboxThread3 = 0x08,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XboxThread4	audio/xaudio-c/xaudio.h	/^	XboxThread4 = 0x10,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XboxThread5	audio/xaudio-c/xaudio.h	/^	XboxThread5 = 0x20,$/;"	e	enum:XAUDIO2_XBOX_HWTHREAD_SPECIFIER
XeLoadSection	frontend/platform/platform_xdk.h	/^XeLoadSection($/;"	p	signature:( IN OUT PXBE_SECTION section )
Y	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
YELLOW	gfx/gfx_common.h	110;"	d
YSize	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
YUV_MAT_U_B	gfx/scaler/pixconv.c	679;"	d	file:
YUV_MAT_U_G	gfx/scaler/pixconv.c	678;"	d	file:
YUV_MAT_V_G	gfx/scaler/pixconv.c	681;"	d	file:
YUV_MAT_V_R	gfx/scaler/pixconv.c	680;"	d	file:
YUV_MAT_Y	gfx/scaler/pixconv.c	677;"	d	file:
YUV_OFFSET	gfx/scaler/pixconv.c	676;"	d	file:
YUV_SHIFT	gfx/scaler/pixconv.c	675;"	d	file:
ZLIB_CFLAGS	config.mk	/^ZLIB_CFLAGS = $/;"	m
ZLIB_FILEFUNC_MODE_CREATE	deps/minizip/unzip.c	117;"	d	file:
ZLIB_FILEFUNC_MODE_EXISTING	deps/minizip/unzip.c	116;"	d	file:
ZLIB_FILEFUNC_MODE_READ	deps/minizip/unzip.c	112;"	d	file:
ZLIB_FILEFUNC_MODE_READWRITEFILTER	deps/minizip/unzip.c	114;"	d	file:
ZLIB_FILEFUNC_MODE_WRITE	deps/minizip/unzip.c	113;"	d	file:
ZLIB_FILEFUNC_SEEK_CUR	deps/minizip/unzip.c	108;"	d	file:
ZLIB_FILEFUNC_SEEK_END	deps/minizip/unzip.c	109;"	d	file:
ZLIB_FILEFUNC_SEEK_SET	deps/minizip/unzip.c	110;"	d	file:
ZLIB_LIBS	config.mk	/^ZLIB_LIBS = -lz$/;"	m
ZLIB_VERNUM	deps/miniz/zlib.h	399;"	d
ZLIB_VERSION	deps/miniz/zlib.h	398;"	d
ZLIB_VER_MAJOR	deps/miniz/zlib.h	400;"	d
ZLIB_VER_MINOR	deps/miniz/zlib.h	401;"	d
ZLIB_VER_REVISION	deps/miniz/zlib.h	402;"	d
ZLIB_VER_SUBREVISION	deps/miniz/zlib.h	403;"	d
Z_BEST_COMPRESSION	deps/miniz/zlib.h	372;"	d
Z_BEST_SPEED	deps/miniz/zlib.h	371;"	d
Z_BLOCK	deps/miniz/zlib.h	359;"	d
Z_BUF_ERROR	deps/miniz/zlib.h	367;"	d
Z_BZIP2ED	deps/minizip/unzip.h	54;"	d
Z_DATA_ERROR	deps/miniz/zlib.h	365;"	d
Z_DEFAULT_COMPRESSION	deps/miniz/zlib.h	373;"	d
Z_DEFAULT_STRATEGY	deps/miniz/zlib.h	374;"	d
Z_DEFAULT_WINDOW_BITS	deps/miniz/zlib.h	380;"	d
Z_DEFLATED	deps/miniz/zlib.h	379;"	d
Z_ERRNO	deps/miniz/zlib.h	363;"	d
Z_FILTERED	deps/miniz/zlib.h	375;"	d
Z_FINISH	deps/miniz/zlib.h	358;"	d
Z_FIXED	deps/miniz/zlib.h	378;"	d
Z_FULL_FLUSH	deps/miniz/zlib.h	357;"	d
Z_HUFFMAN_ONLY	deps/miniz/zlib.h	376;"	d
Z_MEM_ERROR	deps/miniz/zlib.h	366;"	d
Z_NEED_DICT	deps/miniz/zlib.h	362;"	d
Z_NO_COMPRESSION	deps/miniz/zlib.h	370;"	d
Z_NO_FLUSH	deps/miniz/zlib.h	354;"	d
Z_NULL	deps/miniz/zlib.h	353;"	d
Z_OK	deps/miniz/zlib.h	360;"	d
Z_PARAM_ERROR	deps/miniz/zlib.h	369;"	d
Z_PARTIAL_FLUSH	deps/miniz/zlib.h	355;"	d
Z_RLE	deps/miniz/zlib.h	377;"	d
Z_STREAM_END	deps/miniz/zlib.h	361;"	d
Z_STREAM_ERROR	deps/miniz/zlib.h	364;"	d
Z_SYNC_FLUSH	deps/miniz/zlib.h	356;"	d
Z_VERSION_ERROR	deps/miniz/zlib.h	368;"	d
_ANDROID_INPUT_AUTODETECT_H	android/native/jni/input_autodetect.h	19;"	d
_BASE_H_	ps3/rgl/include/RGL/Base.h	2;"	d
_BUTTONMAP_H_	blackberry-qnx/bb10/src/ButtonMap.h	2;"	d
_CGC_CGBIO_CGBDEFS_HPP	ps3/rgl/src/cg/cgbdefs.hpp	2;"	d
_CGNVCONTAINERS	ps3/rgl/src/rgl_ps3_cg.cpp	/^} _CGNVCONTAINERS;$/;"	t	typeref:struct:__anon48	file:
_CGcontext	ps3/rgl/include/Cg/CgCommon.h	/^typedef struct _CGcontext$/;"	s
_CGcontext	ps3/rgl/include/Cg/CgCommon.h	/^} _CGcontext;$/;"	t	typeref:struct:_CGcontext
_CGcontext::compileType	ps3/rgl/include/Cg/CgCommon.h	/^   CGenum             compileType;     \/\/ compile manual, immediate or lazy (unused so far)$/;"	m	struct:_CGcontext	access:public
_CGcontext::currentParameterName	ps3/rgl/include/Cg/CgCommon.h	/^   char currentParameterName[128];$/;"	m	struct:_CGcontext	access:public
_CGcontext::currentParameterValue	ps3/rgl/include/Cg/CgCommon.h	/^   double currentParameterValue[16];$/;"	m	struct:_CGcontext	access:public
_CGcontext::defaultProgram	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogram        defaultProgram;$/;"	m	struct:_CGcontext	access:public
_CGcontext::groupList	ps3/rgl/include/Cg/CgCommon.h	/^   CGprogramGroup groupList;$/;"	m	struct:_CGcontext	access:public
_CGcontext::id	ps3/rgl/include/Cg/CgCommon.h	/^   CGcontext          id;              \/\/ numerical handle for this object$/;"	m	struct:_CGcontext	access:public
_CGcontext::next	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGcontext* next;            \/\/ for global linked list of CGcontexts$/;"	m	struct:_CGcontext	typeref:struct:_CGcontext::_CGcontext	access:public
_CGcontext::programCount	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int       programCount;    \/\/ number of programs in the list$/;"	m	struct:_CGcontext	access:public
_CGcontext::programList	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGprogram* programList;     \/\/ head of singly linked list of programs$/;"	m	struct:_CGcontext	typeref:struct:_CGcontext::_CGprogram	access:public
_CGnamedProgram	ps3/rgl/include/Cg/CgProgramGroup.h	/^_CGnamedProgram;$/;"	t	typeref:struct:_CGnamedProgram
_CGnamedProgram	ps3/rgl/include/Cg/CgProgramGroup.h	/^typedef struct _CGnamedProgram$/;"	s
_CGnamedProgram::name	ps3/rgl/include/Cg/CgProgramGroup.h	/^   const char *name;$/;"	m	struct:_CGnamedProgram	access:public
_CGnamedProgram::program	ps3/rgl/include/Cg/CgProgramGroup.h	/^   CGprogram program;$/;"	m	struct:_CGnamedProgram	access:public
_CGnamedProgram::refCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   int refCount;$/;"	m	struct:_CGnamedProgram	access:public
_CGprogram	ps3/rgl/include/Cg/CgCommon.h	/^struct _CGprogram$/;"	s
_CGprogram	ps3/rgl/include/Cg/CgCommon.h	/^typedef struct _CGprogram _CGprogram;$/;"	t	typeref:struct:_CGprogram
_CGprogram::constantPushBuffer	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int*        constantPushBuffer;$/;"	m	struct:_CGprogram	access:public
_CGprogram::constantPushBufferPointers	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int **constantPushBufferPointers;$/;"	m	struct:_CGprogram	access:public
_CGprogram::constantPushBufferWordSize	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         constantPushBufferWordSize;$/;"	m	struct:_CGprogram	access:public
_CGprogram::defaultValueCount	ps3/rgl/include/Cg/CgCommon.h	/^   int defaultValueCount;$/;"	m	struct:_CGprogram	access:public
_CGprogram::defaultValues	ps3/rgl/include/Cg/CgCommon.h	/^   const float *defaultValues;$/;"	m	struct:_CGprogram	access:public
_CGprogram::defaultValuesIndexCount	ps3/rgl/include/Cg/CgCommon.h	/^   int defaultValuesIndexCount;$/;"	m	struct:_CGprogram	access:public
_CGprogram::defaultValuesIndices	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterDefaultValue *defaultValuesIndices;$/;"	m	struct:_CGprogram	access:public
_CGprogram::header	ps3/rgl/include/Cg/CgCommon.h	/^   CgProgramHeader header;$/;"	m	struct:_CGprogram	access:public
_CGprogram::id	ps3/rgl/include/Cg/CgCommon.h	/^   CGprogram            id;            \/\/ numerical id for this program object$/;"	m	struct:_CGprogram	access:public
_CGprogram::inLocalMemory	ps3/rgl/include/Cg/CgCommon.h	/^   bool				 inLocalMemory; \/\/ only pertains to fragment programs which can be in location local, the default, or location main via cgb interfaces $/;"	m	struct:_CGprogram	access:public
_CGprogram::lastConstantUpdate	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         lastConstantUpdate;$/;"	m	struct:_CGprogram	access:public
_CGprogram::loadProgramId	ps3/rgl/include/Cg/CgCommon.h	/^   GLuint loadProgramId;$/;"	m	struct:_CGprogram	access:public
_CGprogram::loadProgramOffset	ps3/rgl/include/Cg/CgCommon.h	/^   GLuint loadProgramOffset; $/;"	m	struct:_CGprogram	access:public
_CGprogram::memoryBlock	ps3/rgl/include/Cg/CgCommon.h	/^   void *memoryBlock;$/;"	m	struct:_CGprogram	access:public
_CGprogram::name	ps3/rgl/include/Cg/CgCommon.h	/^   const char *name;$/;"	m	struct:_CGprogram	access:public
_CGprogram::next	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGprogram*   next;          \/\/ link to next in NULL-terminated singly linked list of programs$/;"	m	struct:_CGprogram	typeref:struct:_CGprogram::_CGprogram	access:public
_CGprogram::parameterResources	ps3/rgl/include/Cg/CgCommon.h	/^   char *parameterResources;$/;"	m	struct:_CGprogram	access:public
_CGprogram::parametersEntries	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterEntry *parametersEntries;$/;"	m	struct:_CGprogram	access:public
_CGprogram::parentContext	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGcontext*   parentContext; \/\/ parent context for this program$/;"	m	struct:_CGprogram	typeref:struct:_CGprogram::_CGcontext	access:public
_CGprogram::parentEffect	ps3/rgl/include/Cg/CgCommon.h	/^   void*                parentEffect;  \/\/ parent effect for this program (only used for default program of an effect, containing effect parameters)$/;"	m	struct:_CGprogram	access:public
_CGprogram::platformProgram	ps3/rgl/include/Cg/CgCommon.h	/^   void*     platformProgram;$/;"	m	struct:_CGprogram	access:public
_CGprogram::platformProgramBinary	ps3/rgl/include/Cg/CgCommon.h	/^   void*     platformProgramBinary;$/;"	m	struct:_CGprogram	access:public
_CGprogram::programGroup	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogramGroup *programGroup;$/;"	m	struct:_CGprogram	access:public
_CGprogram::programIndexInGroup	ps3/rgl/include/Cg/CgCommon.h	/^   int programIndexInGroup;$/;"	m	struct:_CGprogram	access:public
_CGprogram::pushBufferPointers	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned short *pushBufferPointers;$/;"	m	struct:_CGprogram	access:public
_CGprogram::resources	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned short *resources;$/;"	m	struct:_CGprogram	access:public
_CGprogram::rtParametersCount	ps3/rgl/include/Cg/CgCommon.h	/^   int rtParametersCount;$/;"	m	struct:_CGprogram	access:public
_CGprogram::runtimeElf	ps3/rgl/include/Cg/CgCommon.h	/^   void *runtimeElf;$/;"	m	struct:_CGprogram	access:public
_CGprogram::runtimeParameters	ps3/rgl/include/Cg/CgCommon.h	/^   CgRuntimeParameter *runtimeParameters;$/;"	m	struct:_CGprogram	access:public
_CGprogram::samplerCount	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         samplerCount;$/;"	m	struct:_CGprogram	access:public
_CGprogram::samplerIndices	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *       samplerIndices;$/;"	m	struct:_CGprogram	access:public
_CGprogram::samplerUnits	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *       samplerUnits;$/;"	m	struct:_CGprogram	access:public
_CGprogram::samplerValuesLocation	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *samplerValuesLocation;$/;"	m	struct:_CGprogram	access:public
_CGprogram::semanticCount	ps3/rgl/include/Cg/CgCommon.h	/^   int semanticCount;$/;"	m	struct:_CGprogram	access:public
_CGprogram::semanticIndices	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterSemantic *semanticIndices;$/;"	m	struct:_CGprogram	access:public
_CGprogram::stringTable	ps3/rgl/include/Cg/CgCommon.h	/^   const char *stringTable;$/;"	m	struct:_CGprogram	access:public
_CGprogram::ucode	ps3/rgl/include/Cg/CgCommon.h	/^   const void *ucode;$/;"	m	struct:_CGprogram	access:public
_CGprogram::version	ps3/rgl/include/Cg/CgCommon.h	/^   int version; \/\/contained a boolean indicating if the structure pointers have been patched or not$/;"	m	struct:_CGprogram	access:public
_CGprogramGroup	ps3/rgl/include/Cg/CgProgramGroup.h	/^_CGprogramGroup;$/;"	t	typeref:struct:_CGprogramGroup
_CGprogramGroup	ps3/rgl/include/Cg/CgProgramGroup.h	/^typedef struct _CGprogramGroup$/;"	s
_CGprogramGroup::constantTable	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int *constantTable;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::ctx	ps3/rgl/include/Cg/CgProgramGroup.h	/^   CGcontext ctx;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::filedata	ps3/rgl/include/Cg/CgProgramGroup.h	/^   char *filedata;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::name	ps3/rgl/include/Cg/CgProgramGroup.h	/^   char *name;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::next	ps3/rgl/include/Cg/CgProgramGroup.h	/^   struct _CGprogramGroup *next;$/;"	m	struct:_CGprogramGroup	typeref:struct:_CGprogramGroup::_CGprogramGroup	access:public
_CGprogramGroup::programCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int programCount;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::programs	ps3/rgl/include/Cg/CgProgramGroup.h	/^   _CGnamedProgram *programs;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::refCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   int refCount; \/\/total number of program refCounted$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::stringTable	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int *stringTable;$/;"	m	struct:_CGprogramGroup	access:public
_CGprogramGroup::userCreated	ps3/rgl/include/Cg/CgProgramGroup.h	/^   bool userCreated;$/;"	m	struct:_CGprogramGroup	access:public
_CgParameterArray	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterArray$/;"	s
_CgParameterArray::arrayType	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short arrayType;$/;"	m	struct:_CgParameterArray	access:public
_CgParameterArray::dimensionCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short dimensionCount;$/;"	m	struct:_CgParameterArray	access:public
_CgParameterArray::dimensions	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short dimensions[];$/;"	m	struct:_CgParameterArray	access:public
_CgParameterDefaultValue	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterDefaultValue$/;"	s
_CgParameterDefaultValue::defaultValueIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndex;$/;"	m	struct:_CgParameterDefaultValue	access:public
_CgParameterDefaultValue::entryIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryIndex;$/;"	m	struct:_CgParameterDefaultValue	access:public
_CgParameterEntry	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterEntry$/;"	s
_CgParameterEntry::flags	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short flags;$/;"	m	struct:_CgParameterEntry	access:public
_CgParameterEntry::nameOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int nameOffset;$/;"	m	struct:_CgParameterEntry	access:public
_CgParameterEntry::typeIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short typeIndex;$/;"	m	struct:_CgParameterEntry	access:public
_CgParameterResource	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterResource$/;"	s
_CgParameterResource::resource	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short resource;$/;"	m	struct:_CgParameterResource	access:public
_CgParameterResource::type	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short type;$/;"	m	struct:_CgParameterResource	access:public
_CgParameterSemantic	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterSemantic$/;"	s
_CgParameterSemantic::entryIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryIndex;$/;"	m	struct:_CgParameterSemantic	access:public
_CgParameterSemantic::reserved	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short reserved;$/;"	m	struct:_CgParameterSemantic	access:public
_CgParameterSemantic::semanticOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int semanticOffset;$/;"	m	struct:_CgParameterSemantic	access:public
_CgParameterStructure	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterStructure$/;"	s
_CgParameterStructure::memberCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short memberCount;$/;"	m	struct:_CgParameterStructure	access:public
_CgParameterStructure::reserved	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short reserved;$/;"	m	struct:_CgParameterStructure	access:public
_CgParameterTableHeader	ps3/rgl/include/Cg/CgInternal.h	/^   typedef struct _CgParameterTableHeader$/;"	s
_CgParameterTableHeader::defaultValueIndexCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndexCount;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgParameterTableHeader::defaultValueIndexTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndexTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgParameterTableHeader::entryCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryCount;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgParameterTableHeader::resourceTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short resourceTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgParameterTableHeader::semanticIndexCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short semanticIndexCount;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgParameterTableHeader::semanticIndexTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short semanticIndexTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
_CgUniform	ps3/rgl/include/Cg/CgCommon.h	/^typedef struct _CgUniform$/;"	s
_CgUniform	ps3/rgl/include/Cg/CgCommon.h	/^} _CgUniform;$/;"	t	typeref:struct:_CgUniform
_CgUniform::pushBufferPtr	ps3/rgl/include/Cg/CgCommon.h	/^   void *pushBufferPtr;$/;"	m	struct:_CgUniform	access:public
_CurrentContext	ps3/rgl/src/rgl_ps3.cpp	/^RGLcontext* _CurrentContext = NULL;$/;"	v
_CurrentDevice	ps3/rgl/src/rgl_ps3.cpp	/^RGLdevice *_CurrentDevice = NULL;$/;"	v
_DEVICE_OBJECT	frontend/platform/platform_xdk.h	/^typedef struct _DEVICE_OBJECT {$/;"	s
_DEVICE_OBJECT::DriverObject	frontend/platform/platform_xdk.h	/^    PDRIVER_OBJECT DriverObject;$/;"	m	struct:_DEVICE_OBJECT	access:public
_DEVICE_OBJECT::ReferenceCount	frontend/platform/platform_xdk.h	/^    LONG ReferenceCount;$/;"	m	struct:_DEVICE_OBJECT	access:public
_DEVICE_OBJECT::Size	frontend/platform/platform_xdk.h	/^    USHORT Size;$/;"	m	struct:_DEVICE_OBJECT	access:public
_DEVICE_OBJECT::Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_DEVICE_OBJECT	access:public
_DISPATCHER_HEADER	frontend/platform/platform_xdk.h	/^typedef struct _DISPATCHER_HEADER {$/;"	s
_DISPATCHER_HEADER::Absolute	frontend/platform/platform_xdk.h	/^    UCHAR Absolute;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DISPATCHER_HEADER::Inserted	frontend/platform/platform_xdk.h	/^    UCHAR Inserted;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DISPATCHER_HEADER::SignalState	frontend/platform/platform_xdk.h	/^    LONG SignalState;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DISPATCHER_HEADER::Size	frontend/platform/platform_xdk.h	/^    UCHAR Size;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DISPATCHER_HEADER::Type	frontend/platform/platform_xdk.h	/^    UCHAR Type;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DISPATCHER_HEADER::WaitListHead	frontend/platform/platform_xdk.h	/^    LIST_ENTRY WaitListHead;$/;"	m	struct:_DISPATCHER_HEADER	access:public
_DOLLOADER_H_	wii/app_booter/dolloader.h	2;"	d
_DRIVER_OBJECT	frontend/platform/platform_xdk.h	/^typedef struct _DRIVER_OBJECT {$/;"	s
_DRIVER_OBJECT::DeviceObject	frontend/platform/platform_xdk.h	/^    struct _DEVICE_OBJECT *DeviceObject;$/;"	m	struct:_DRIVER_OBJECT	typeref:struct:_DRIVER_OBJECT::_DEVICE_OBJECT	access:public
_DRIVER_OBJECT::Size	frontend/platform/platform_xdk.h	/^    CSHORT Size;$/;"	m	struct:_DRIVER_OBJECT	access:public
_DRIVER_OBJECT::Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_DRIVER_OBJECT	access:public
_ELFLOADER_H_	wii/app_booter/elfloader.h	2;"	d
_ELF_ABI_H	wii/app_booter/elf_abi.h	34;"	d
_ELF_section_t	ps3/rgl/src/libelf/readelf.h	/^   typedef struct _ELF_section_t$/;"	s
_ELF_section_t::data	ps3/rgl/src/libelf/readelf.h	/^      char* data;$/;"	m	struct:_ELF_section_t	access:public
_ELF_section_t::header	ps3/rgl/src/libelf/readelf.h	/^      Elf32_Shdr header;$/;"	m	struct:_ELF_section_t	access:public
_ELF_section_t::name	ps3/rgl/src/libelf/readelf.h	/^      const char* name;$/;"	m	struct:_ELF_section_t	access:public
_ELF_segment_t	ps3/rgl/src/libelf/readelf.h	/^   typedef struct _ELF_segment_t$/;"	s
_ELF_segment_t::data	ps3/rgl/src/libelf/readelf.h	/^      unsigned char* data;$/;"	m	struct:_ELF_segment_t	access:public
_ELF_segment_t::header	ps3/rgl/src/libelf/readelf.h	/^      Elf32_Phdr header;$/;"	m	struct:_ELF_segment_t	access:public
_ELF_segment_t::pointer	ps3/rgl/src/libelf/readelf.h	/^      unsigned char* pointer;$/;"	m	struct:_ELF_segment_t	access:public
_ELF_t	ps3/rgl/src/libelf/readelf.h	/^   typedef struct _ELF_t$/;"	s
_ELF_t::endian	ps3/rgl/src/libelf/readelf.h	/^      unsigned int endian;$/;"	m	struct:_ELF_t	access:public
_ELF_t::entrypoint	ps3/rgl/src/libelf/readelf.h	/^      unsigned int entrypoint;$/;"	m	struct:_ELF_t	access:public
_ELF_t::paramSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int paramSection;$/;"	m	struct:_ELF_t	access:public
_ELF_t::relocatable	ps3/rgl/src/libelf/readelf.h	/^      unsigned int relocatable;$/;"	m	struct:_ELF_t	access:public
_ELF_t::sectionCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int sectionCount;$/;"	m	struct:_ELF_t	access:public
_ELF_t::sections	ps3/rgl/src/libelf/readelf.h	/^      ELF_section_t* sections;$/;"	m	struct:_ELF_t	access:public
_ELF_t::segmentCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int segmentCount;$/;"	m	struct:_ELF_t	access:public
_ELF_t::segments	ps3/rgl/src/libelf/readelf.h	/^      ELF_segment_t* segments;$/;"	m	struct:_ELF_t	access:public
_ELF_t::symbolCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolCount;$/;"	m	struct:_ELF_t	access:public
_ELF_t::symbolNamesSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolNamesSection;$/;"	m	struct:_ELF_t	access:public
_ELF_t::symbols	ps3/rgl/src/libelf/readelf.h	/^      ELF_symbol_t* symbols;$/;"	m	struct:_ELF_t	access:public
_ELF_t::symbolsSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolsSection;$/;"	m	struct:_ELF_t	access:public
_Elf32_cgParameter	ps3/rgl/src/cg/cgbtypes.h	/^typedef struct _Elf32_cgParameter$/;"	s
_Elf32_cgParameter::cgp_default	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_default;  \/\/ index of default data in const \/\/Reduced to half$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_info	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_info;$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_name	ps3/rgl/src/cg/cgbtypes.h	/^   uint32_t cgp_name;     \/\/ index of name in strtab$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_reloc	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_reloc;	  \/\/ index of reloc indices in rel $/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_resource	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_resource; \/\/ index of hardware resource assigned$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_resource_index	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_resource_index;		\/\/ index of hardware resource assigned$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_semantic	ps3/rgl/src/cg/cgbtypes.h	/^   uint32_t cgp_semantic; \/\/ index of semantic string in strtab$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::cgp_type	ps3/rgl/src/cg/cgbtypes.h	/^   unsigned char cgp_type;$/;"	m	struct:_Elf32_cgParameter	access:public
_Elf32_cgParameter::unused	ps3/rgl/src/cg/cgbtypes.h	/^   unsigned char unused;$/;"	m	struct:_Elf32_cgParameter	access:public
_FILE_EXT_H	file_ext.h	18;"	d
_FILE_FS_DEVICE_INFORMATION	frontend/platform/platform_xdk.h	/^typedef struct _FILE_FS_DEVICE_INFORMATION {                    $/;"	s
_FILE_FS_DEVICE_INFORMATION::Characteristics	frontend/platform/platform_xdk.h	/^    ULONG Characteristics;                                      $/;"	m	struct:_FILE_FS_DEVICE_INFORMATION	access:public
_FILE_FS_DEVICE_INFORMATION::DeviceType	frontend/platform/platform_xdk.h	/^    DEVICE_TYPE DeviceType;                                     $/;"	m	struct:_FILE_FS_DEVICE_INFORMATION	access:public
_FILE_FS_SIZE_INFORMATION	frontend/platform/platform_xdk.h	/^typedef struct _FILE_FS_SIZE_INFORMATION {$/;"	s
_FILE_FS_SIZE_INFORMATION::AvailableAllocationUnits	frontend/platform/platform_xdk.h	/^	LARGE_INTEGER AvailableAllocationUnits;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
_FILE_FS_SIZE_INFORMATION::BytesPerSector	frontend/platform/platform_xdk.h	/^	ULONG BytesPerSector;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
_FILE_FS_SIZE_INFORMATION::SectorsPerAllocationUnit	frontend/platform/platform_xdk.h	/^	ULONG SectorsPerAllocationUnit;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
_FILE_FS_SIZE_INFORMATION::TotalAllocationUnits	frontend/platform/platform_xdk.h	/^	LARGE_INTEGER TotalAllocationUnits;$/;"	m	struct:_FILE_FS_SIZE_INFORMATION	access:public
_FILE_OBJECT	frontend/platform/platform_xdk.h	/^typedef struct _FILE_OBJECT {$/;"	s
_FILE_OBJECT::DeviceObject	frontend/platform/platform_xdk.h	/^    PDEVICE_OBJECT DeviceObject;$/;"	m	struct:_FILE_OBJECT	access:public
_FILE_OBJECT::Size	frontend/platform/platform_xdk.h	/^    CSHORT Size;$/;"	m	struct:_FILE_OBJECT	access:public
_FILE_OBJECT::Type	frontend/platform/platform_xdk.h	/^    CSHORT Type;$/;"	m	struct:_FILE_OBJECT	access:public
_FRONTENDQNX_H_	blackberry-qnx/frontend_qnx.h	2;"	d
_FRONTEND_SALAMANDER_H	frontend/frontend_salamander.h	18;"	d
_FSINFOCLASS	frontend/platform/platform_xdk.h	/^typedef enum _FSINFOCLASS {$/;"	g
_FS_STRUCTURE	frontend/platform/platform_xdk.h	/^typedef struct _FS_STRUCTURE$/;"	s
_FS_STRUCTURE::CurrentIrql	frontend/platform/platform_xdk.h	/^	KIRQL CurrentIrql;$/;"	m	struct:_FS_STRUCTURE	access:public
_FS_STRUCTURE::ExceptionFrame	frontend/platform/platform_xdk.h	/^	PVOID *ExceptionFrame;$/;"	m	struct:_FS_STRUCTURE	access:public
_FS_STRUCTURE::ThreadObject	frontend/platform/platform_xdk.h	/^	PKTHREAD ThreadObject;$/;"	m	struct:_FS_STRUCTURE	access:public
_FS_STRUCTURE::TlsDataTop	frontend/platform/platform_xdk.h	/^	PVOID TlsDataTop;$/;"	m	struct:_FS_STRUCTURE	access:public
_FS_STRUCTURE::unknown2	frontend/platform/platform_xdk.h	/^	BYTE unknown2[0x1C];$/;"	m	struct:_FS_STRUCTURE	access:public
_FS_STRUCTURE::unknown3	frontend/platform/platform_xdk.h	/^	BYTE unknown3[0x100];$/;"	m	struct:_FS_STRUCTURE	access:public
_GLfuncptr	ps3/rgl/include/export/GLES/gl.h	/^   typedef void( *_GLfuncptr )();$/;"	t
_GMM_ALLOC_H_	ps3/rgl/src/include/GmmAlloc.h	2;"	d
_GNU_SOURCE	ps3/rgl/src/libelf/readelf.c	7;"	d	file:
_GX_INPUT_H	gx/gx_input.h	19;"	d
_GX_PTHREAD_WRAP_GX_	thread/gx_pthread.h	18;"	d
_GX_VIDEO_H__	gx/gx_video.h	19;"	d
_H_CG_BINARY_H_	ps3/rgl/include/Cg/cgBinary.h	2;"	d
_IO_STATUS_BLOCK	frontend/platform/platform_xdk.h	/^typedef struct _IO_STATUS_BLOCK {$/;"	s
_IO_STATUS_BLOCK::Information	frontend/platform/platform_xdk.h	/^    ULONG_PTR Information;$/;"	m	struct:_IO_STATUS_BLOCK	access:public
_IO_STATUS_BLOCK::__anon9::Pointer	frontend/platform/platform_xdk.h	/^        PVOID Pointer;$/;"	m	union:_IO_STATUS_BLOCK::__anon9	access:public
_IO_STATUS_BLOCK::__anon9::Status	frontend/platform/platform_xdk.h	/^        NTSTATUS Status;$/;"	m	union:_IO_STATUS_BLOCK::__anon9	access:public
_Included_com_retroarch_browser_NativeInterface	android/phoenix/jni/native/com_retroarch_browser_NativeInterface.h	6;"	d
_JNI_MACROS_H	android/native/jni/jni_macros.h	18;"	d
_KCRITICAL_SECTION	frontend/platform/platform_xdk.h	/^typedef struct _KCRITICAL_SECTION$/;"	s
_KCRITICAL_SECTION::Header	frontend/platform/platform_xdk.h	/^	DISPATCHER_HEADER Header;$/;"	m	struct:_KCRITICAL_SECTION	access:public
_KCRITICAL_SECTION::LockCount	frontend/platform/platform_xdk.h	/^	LONG LockCount;$/;"	m	struct:_KCRITICAL_SECTION	access:public
_KCRITICAL_SECTION::OwningThread	frontend/platform/platform_xdk.h	/^	ULONG OwningThread;$/;"	m	struct:_KCRITICAL_SECTION	access:public
_KCRITICAL_SECTION::RecursionCount	frontend/platform/platform_xdk.h	/^	LONG RecursionCount;$/;"	m	struct:_KCRITICAL_SECTION	access:public
_KDPC	frontend/platform/platform_xdk.h	/^typedef struct _KDPC {$/;"	s
_KDPC::DeferredContext	frontend/platform/platform_xdk.h	/^	PVOID DeferredContext;$/;"	m	struct:_KDPC	access:public
_KDPC::DeferredRoutine	frontend/platform/platform_xdk.h	/^	PKDEFERRED_ROUTINE DeferredRoutine;$/;"	m	struct:_KDPC	access:public
_KDPC::DpcListEntry	frontend/platform/platform_xdk.h	/^	LIST_ENTRY DpcListEntry;$/;"	m	struct:_KDPC	access:public
_KDPC::Importance	frontend/platform/platform_xdk.h	/^	UCHAR Importance;$/;"	m	struct:_KDPC	access:public
_KDPC::Lock	frontend/platform/platform_xdk.h	/^	PULONG_PTR Lock;$/;"	m	struct:_KDPC	access:public
_KDPC::Number	frontend/platform/platform_xdk.h	/^	UCHAR Number;$/;"	m	struct:_KDPC	access:public
_KDPC::SystemArgument1	frontend/platform/platform_xdk.h	/^	PVOID SystemArgument1;$/;"	m	struct:_KDPC	access:public
_KDPC::SystemArgument2	frontend/platform/platform_xdk.h	/^	PVOID SystemArgument2;$/;"	m	struct:_KDPC	access:public
_KDPC::Type	frontend/platform/platform_xdk.h	/^	CSHORT Type;$/;"	m	struct:_KDPC	access:public
_KTHREAD	frontend/platform/platform_xdk.h	/^typedef struct _KTHREAD$/;"	s
_KTHREAD::Header	frontend/platform/platform_xdk.h	/^	DISPATCHER_HEADER Header;$/;"	m	struct:_KTHREAD	access:public
_KTHREAD::TlsData	frontend/platform/platform_xdk.h	/^	PVOID TlsData;$/;"	m	struct:_KTHREAD	access:public
_KTHREAD::unknown	frontend/platform/platform_xdk.h	/^	BYTE unknown[0x18];$/;"	m	struct:_KTHREAD	access:public
_KTHREAD::unknown2	frontend/platform/platform_xdk.h	/^	BYTE unknown2[0x100];$/;"	m	struct:_KTHREAD	access:public
_KTIMER	frontend/platform/platform_xdk.h	/^typedef struct _KTIMER {$/;"	s
_KTIMER::Dpc	frontend/platform/platform_xdk.h	/^    struct _KDPC *Dpc;$/;"	m	struct:_KTIMER	typeref:struct:_KTIMER::_KDPC	access:public
_KTIMER::DueTime	frontend/platform/platform_xdk.h	/^    ULARGE_INTEGER DueTime;$/;"	m	struct:_KTIMER	access:public
_KTIMER::Header	frontend/platform/platform_xdk.h	/^    DISPATCHER_HEADER Header;$/;"	m	struct:_KTIMER	access:public
_KTIMER::Period	frontend/platform/platform_xdk.h	/^    LONG Period;$/;"	m	struct:_KTIMER	access:public
_KTIMER::TimerListEntry	frontend/platform/platform_xdk.h	/^    LIST_ENTRY TimerListEntry;$/;"	m	struct:_KTIMER	access:public
_LOGGER_H_	console/logger/logger.h	18;"	d
_MEM2_MANAGER_H	wii/mem2_manager.h	11;"	d
_NET_WM_STATE_ADD	gfx/context/x11_common.c	63;"	d	file:
_OBJECT_ATTRIBUTES	frontend/platform/platform_xdk.h	/^typedef struct _OBJECT_ATTRIBUTES {$/;"	s
_OBJECT_ATTRIBUTES::Attributes	frontend/platform/platform_xdk.h	/^    ULONG Attributes;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
_OBJECT_ATTRIBUTES::ObjectName	frontend/platform/platform_xdk.h	/^    PANSI_STRING ObjectName;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
_OBJECT_ATTRIBUTES::RootDirectory	frontend/platform/platform_xdk.h	/^    HANDLE RootDirectory;$/;"	m	struct:_OBJECT_ATTRIBUTES	access:public
_OBJECT_TYPE	frontend/platform/platform_xdk.h	/^typedef struct _OBJECT_TYPE$/;"	s
_OBJECT_TYPE::AllocationFunction	frontend/platform/platform_xdk.h	/^	(NTAPI *AllocationFunction)($/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::CloseFunction	frontend/platform/platform_xdk.h	/^	void *CloseFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::DefaultObjectMaybe	frontend/platform/platform_xdk.h	/^	void *DefaultObjectMaybe;$/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::DeleteFunction	frontend/platform/platform_xdk.h	/^	void *DeleteFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::FreeFunction	frontend/platform/platform_xdk.h	/^	(NTAPI *FreeFunction)($/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::ParseFunction	frontend/platform/platform_xdk.h	/^	void *ParseFunction;$/;"	m	struct:_OBJECT_TYPE	access:public
_OBJECT_TYPE::Tag	frontend/platform/platform_xdk.h	/^	CHAR Tag[4];$/;"	m	struct:_OBJECT_TYPE	access:public
_PLATFORM_ANDROID_H	frontend/platform/platform_android.h	19;"	d
_PLATFORM_H	ps3/rgl/include/RGL/platform.h	2;"	d
_PS3_SDK_DEFINES_H	ps3/sdk_defines.h	18;"	d
_PSP_INPUT_H_	psp/psp_input.h	18;"	d
_PSP_SDK_DEFINES_H	psp/sdk_defines.h	18;"	d
_PSUPP	retroarch.c	620;"	d	file:
_PSUPP	retroarch.c	654;"	d	file:
_RARCH_APPLE_VIEWS_H	apple/iOS/views.h	17;"	d
_RARCH_DRIVER_FUNCS_H	driver_funcs.h	19;"	d
_RARCH_PERF_H	performance.h	18;"	d
_RETROARCHCASCADES_H_	blackberry-qnx/bb10/src/RetroArch-Cascades.h	2;"	d
_RGLP_H_	ps3/rgl/src/rglp.h	19;"	d
_RGLUTILS_H_	ps3/rgl/include/RGL/Utils.h	2;"	d
_RGL_CG_H	ps3/rgl/src/rgl_cg.h	19;"	d
_RGL_CONSTANTS_H	ps3/rgl/src/include/rgl-constants.h	2;"	d
_RGL_EXPORT_DEFINE_H	ps3/rgl/include/export/RGL/export.h	2;"	d
_RGL_EXPORT_H	ps3/rgl/include/export/RGL/rgl.h	2;"	d
_RGL_FLOAT_AS_UINT	ps3/rgl/include/RGL/Utils.h	24;"	d
_RGL_H	ps3/rgl/src/rgl.h	19;"	d
_RGL_PRIVATE_H	ps3/rgl/include/RGL/private.h	2;"	d
_RGL_RESTRICT	ps3/rgl/include/RGL/Types.h	46;"	d
_RGL_TYPES_H	ps3/rgl/include/RGL/Types.h	2;"	d
_SCSI_PASS_THROUGH_DIRECT	frontend/platform/platform_xdk.h	/^typedef struct _SCSI_PASS_THROUGH_DIRECT {$/;"	s
_SCSI_PASS_THROUGH_DIRECT::Cdb	frontend/platform/platform_xdk.h	/^    \/*01C*\/ UCHAR Cdb[16];$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::CdbLength	frontend/platform/platform_xdk.h	/^    \/*006*\/ UCHAR CdbLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::DataBuffer	frontend/platform/platform_xdk.h	/^    \/*014*\/ PVOID DataBuffer;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::DataIn	frontend/platform/platform_xdk.h	/^    \/*008*\/ UCHAR DataIn;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::DataTransferLength	frontend/platform/platform_xdk.h	/^    \/*00C*\/ ULONG DataTransferLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::Length	frontend/platform/platform_xdk.h	/^    \/*000*\/ USHORT Length;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::Lun	frontend/platform/platform_xdk.h	/^    \/*005*\/ UCHAR Lun;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::PathId	frontend/platform/platform_xdk.h	/^    \/*003*\/ UCHAR PathId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::ScsiStatus	frontend/platform/platform_xdk.h	/^    \/*002*\/ UCHAR ScsiStatus;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::SenseInfoLength	frontend/platform/platform_xdk.h	/^    \/*007*\/ UCHAR SenseInfoLength;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::SenseInfoOffset	frontend/platform/platform_xdk.h	/^    \/*018*\/ ULONG SenseInfoOffset;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::TargetId	frontend/platform/platform_xdk.h	/^    \/*004*\/ UCHAR TargetId;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SCSI_PASS_THROUGH_DIRECT::TimeOutValue	frontend/platform/platform_xdk.h	/^    \/*010*\/ ULONG TimeOutValue;$/;"	m	struct:_SCSI_PASS_THROUGH_DIRECT	access:public
_SHA1_H_	tools/retrolaunch/sha1.h	25;"	d
_SHIFTL	wii/vi_encoder.c	52;"	d	file:
_SHIFTR	wii/vi_encoder.c	54;"	d	file:
_STRING	frontend/platform/platform_xdk.h	/^typedef struct _STRING {$/;"	s
_STRING::Buffer	frontend/platform/platform_xdk.h	/^    PCHAR Buffer;$/;"	m	struct:_STRING	access:public
_STRING::Length	frontend/platform/platform_xdk.h	/^    USHORT Length;$/;"	m	struct:_STRING	access:public
_STRING::MaximumLength	frontend/platform/platform_xdk.h	/^    USHORT MaximumLength;$/;"	m	struct:_STRING	access:public
_TEST_CANCEL	audio/librsound.c	1108;"	d	file:
_TIMER_TYPE	frontend/platform/platform_xdk.h	/^typedef enum _TIMER_TYPE {$/;"	g
_TYPE_UTILS_H	ps3/rgl/include/RGL/TypeUtils.h	2;"	d
_W64	msvc/msvc-stdint/stdint.h	58;"	d
_W64	msvc/msvc-stdint/stdint.h	60;"	d
_WIN32_WINNT	gfx/context/wgl_ctx.c	21;"	d	file:
_WIN32_WINNT	netplay_compat.h	25;"	d
_XBE_CERTIFICATE	frontend/platform/platform_xdk.h	/^typedef struct _XBE_CERTIFICATE {$/;"	s
_XBE_CERTIFICATE::AlternateSignatureKeys	frontend/platform/platform_xdk.h	/^	UCHAR AlternateSignatureKeys[16][16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::AlternateTitleIds	frontend/platform/platform_xdk.h	/^	ULONG AlternateTitleIds[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::DiskNumber	frontend/platform/platform_xdk.h	/^	ULONG DiskNumber;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::GameRating	frontend/platform/platform_xdk.h	/^	ULONG GameRating;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::GameRegion	frontend/platform/platform_xdk.h	/^	ULONG GameRegion;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::LanKey	frontend/platform/platform_xdk.h	/^	UCHAR LanKey[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::MediaTypes	frontend/platform/platform_xdk.h	/^	ULONG MediaTypes;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::SignatureKey	frontend/platform/platform_xdk.h	/^	UCHAR SignatureKey[16];$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::Size	frontend/platform/platform_xdk.h	/^	ULONG Size;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::Timestamp	frontend/platform/platform_xdk.h	/^	ULONG Timestamp;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::TitleId	frontend/platform/platform_xdk.h	/^	ULONG TitleId;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::TitleName	frontend/platform/platform_xdk.h	/^	WCHAR TitleName[40];$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_CERTIFICATE::Version	frontend/platform/platform_xdk.h	/^	ULONG Version;$/;"	m	struct:_XBE_CERTIFICATE	access:public
_XBE_HEADER	frontend/platform/platform_xdk.h	/^typedef struct _XBE_HEADER {$/;"	s
_XBE_HEADER::BaseAddress	frontend/platform/platform_xdk.h	/^	PVOID BaseAddress;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::Certificate	frontend/platform/platform_xdk.h	/^	struct _XBE_CERTIFICATE *Certificate;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_CERTIFICATE	access:public
_XBE_HEADER::DebugImportTable	frontend/platform/platform_xdk.h	/^	PVOID DebugImportTable;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::EntryPoint	frontend/platform/platform_xdk.h	/^	PVOID EntryPoint;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::HeaderSignature	frontend/platform/platform_xdk.h	/^	UCHAR HeaderSignature[256];$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::HeaderSize	frontend/platform/platform_xdk.h	/^	ULONG HeaderSize;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::HeapCommit	frontend/platform/platform_xdk.h	/^	ULONG HeapCommit;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::HeapReserve	frontend/platform/platform_xdk.h	/^	ULONG HeapReserve;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::ImageSize	frontend/platform/platform_xdk.h	/^	ULONG ImageSize;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::InitFlags	frontend/platform/platform_xdk.h	/^	ULONG InitFlags;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::KernelLibrary	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *KernelLibrary;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
_XBE_HEADER::KernelThunkTable	frontend/platform/platform_xdk.h	/^	ULONG_PTR *KernelThunkTable;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::Libraries	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *Libraries;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
_XBE_HEADER::LogoBitmap	frontend/platform/platform_xdk.h	/^	PVOID LogoBitmap;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::LogoBitmapSize	frontend/platform/platform_xdk.h	/^	ULONG LogoBitmapSize;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::Magic	frontend/platform/platform_xdk.h	/^	CHAR Magic[4];$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::NumLibraries	frontend/platform/platform_xdk.h	/^	ULONG NumLibraries;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::NumSections	frontend/platform/platform_xdk.h	/^	DWORD NumSections;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PcExeFilename	frontend/platform/platform_xdk.h	/^	PCSZ PcExeFilename;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PcExeFilenameUnicode	frontend/platform/platform_xdk.h	/^	PWSTR PcExeFilenameUnicode;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PcExePath	frontend/platform/platform_xdk.h	/^	PCSZ PcExePath;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PeBaseAddress	frontend/platform/platform_xdk.h	/^	PVOID PeBaseAddress;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PeChecksum	frontend/platform/platform_xdk.h	/^	ULONG PeChecksum;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PeImageSize	frontend/platform/platform_xdk.h	/^	ULONG PeImageSize;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::PeTimestamp	frontend/platform/platform_xdk.h	/^	ULONG PeTimestamp;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::Sections	frontend/platform/platform_xdk.h	/^	struct _XBE_SECTION *Sections;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_SECTION	access:public
_XBE_HEADER::StackCommit	frontend/platform/platform_xdk.h	/^	ULONG StackCommit;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::Timestamp	frontend/platform/platform_xdk.h	/^	ULONG Timestamp;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_HEADER::TlsDirectory	frontend/platform/platform_xdk.h	/^	struct _XBE_TLS_DIRECTORY *TlsDirectory;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_TLS_DIRECTORY	access:public
_XBE_HEADER::XapiLibrary	frontend/platform/platform_xdk.h	/^	struct _XBE_LIBRARY *XapiLibrary;$/;"	m	struct:_XBE_HEADER	typeref:struct:_XBE_HEADER::_XBE_LIBRARY	access:public
_XBE_HEADER::XbeHeaderSize	frontend/platform/platform_xdk.h	/^	ULONG XbeHeaderSize;$/;"	m	struct:_XBE_HEADER	access:public
_XBE_SECTION	frontend/platform/platform_xdk.h	/^typedef struct _XBE_SECTION {$/;"	s
_XBE_SECTION::FileAddress	frontend/platform/platform_xdk.h	/^	ULONG FileAddress;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::FileSize	frontend/platform/platform_xdk.h	/^	ULONG FileSize;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::Flags	frontend/platform/platform_xdk.h	/^	ULONG Flags;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::HeadReferenceCount	frontend/platform/platform_xdk.h	/^	WORD *HeadReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::SectionName	frontend/platform/platform_xdk.h	/^	PCSZ SectionName;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::SectionReferenceCount	frontend/platform/platform_xdk.h	/^	LONG SectionReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::ShaHash	frontend/platform/platform_xdk.h	/^	DWORD ShaHash[5];$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::TailReferenceCount	frontend/platform/platform_xdk.h	/^	WORD *TailReferenceCount;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::VirtualAddress	frontend/platform/platform_xdk.h	/^	PVOID VirtualAddress;$/;"	m	struct:_XBE_SECTION	access:public
_XBE_SECTION::VirtualSize	frontend/platform/platform_xdk.h	/^	ULONG VirtualSize;$/;"	m	struct:_XBE_SECTION	access:public
_XDK_D3D_VIDEO_H	xdk/xdk_d3d.h	18;"	d
_XDK_DEFINES_H	xdk/xdk_defines.h	18;"	d
__APPLE_EXPORT_H	apple/common/apple_export.h	18;"	d
__APPLE_IOS_LOGGER_H	logger/ios_logger_override.h	18;"	d
__APPLE_RARCH_CORE_INFO_EXT_H__	apple/common/core_info_ext.h	17;"	d
__APPLE_RARCH_INPUT_H__	apple/common/apple_input.h	17;"	d
__APPLE_RARCH_IOS_MENU_H__	apple/iOS/menu.h	17;"	d
__APPLE_RARCH_SETTING_DATA_H__	apple/common/setting_data.h	17;"	d
__APPLE_RARCH_WRAPPER_H__	apple/common/rarch_wrapper.h	18;"	d
__BUFFER_H	fifo_buffer.h	17;"	d
__CONFIG_DEF_H	config.def.h	22;"	d
__CONFIG_FILE_H	conf/config_file.h	18;"	d
__DRIVER__H	driver.h	18;"	d
__DYNAMIC_H	dynamic.h	17;"	d
__FFEMU_H	record/ffemu.h	17;"	d
__FRONTEND_CONTEXT_H	frontend/frontend_context.h	18;"	d
__GFX_COMMON_H	gfx/gfx_common.h	17;"	d
__GFX_CONTEXT_H	gfx/gfx_context.h	17;"	d
__GL_COMMON_H	gfx/gl_common.h	17;"	d
__GXDefTexRegionCallback	gx/gx_video_inl.h	/^static GXTexRegion* __GXDefTexRegionCallback(GXTexObj *obj,u8 mapid)$/;"	f	signature:(GXTexObj *obj,u8 mapid)
__IOS_RARCH_BTDYNAMIC_H__	apple/iOS/bluetooth/btdynamic.h	17;"	d
__IOS_RARCH_BTPAD_H__	apple/iOS/bluetooth/btpad.h	17;"	d
__IOS_RARCH_BTPAD_QUEUE_H__	apple/iOS/bluetooth/btpad_queue.h	17;"	d
__MENU_CONTEXT_H	frontend/menu/menu_context.h	18;"	d
__MSVC_71_H	logger/xdk1_logger_override.h	18;"	d
__PATCH_H	patch.h	17;"	d
__RARCH_APPLE_H	apple/common/RetroArch_Apple.h	18;"	d
__RARCH_AUTOSAVE_H	autosave.h	17;"	d
__RARCH_BOOLEAN_H	boolean.h	17;"	d
__RARCH_CG_H	gfx/shader_cg.h	18;"	d
__RARCH_CHEATS_H	cheats.h	17;"	d
__RARCH_DSP_PLUGIN_H	audio/ext/rarch_dsp.h	7;"	d
__RARCH_FEATURES_H	config.features.h	2;"	d
__RARCH_FILE_H	file.h	17;"	d
__RARCH_FILE_PATH_H	file_path.h	2;"	d
__RARCH_FONTS_H	gfx/fonts/fonts.h	18;"	d
__RARCH_FONT_BITMAP_H	gfx/fonts/bitmap.h	17;"	d
__RARCH_GENERAL_H	general.h	18;"	d
__RARCH_GETOPT_H	compat/getopt_rarch.h	17;"	d
__RARCH_GLSL_H	gfx/shader_glsl.h	18;"	d
__RARCH_HASH_H	hash.h	17;"	d
__RARCH_HLSL_H	gfx/shader_hlsl.h	19;"	d
__RARCH_IMAGE_H	gfx/image.h	17;"	d
__RARCH_IOS_PLATFORM_H	apple/iOS/platform.h	18;"	d
__RARCH_LOGGER_H	retroarch_logger.h	18;"	d
__RARCH_LOGGER_OVERRIDE_H	console/logger/logger_override.h	17;"	d
__RARCH_MISCELLANEOUS_H	miscellaneous.h	18;"	d
__RARCH_MOVIE_H	movie.h	17;"	d
__RARCH_MSG_QUEUE_H	message_queue.h	18;"	d
__RARCH_MSVC_COMPAT_H	griffin/griffin.c	81;"	d	file:
__RARCH_MSVC_COMPAT_H	msvc/msvc_compat.h	17;"	d
__RARCH_NETPLAY_H	netplay.h	18;"	d
__RARCH_OSX_PLATFORM_H	apple/OSX/platform.h	18;"	d
__RARCH_POSIX_STRING_H	compat/posix_string.h	17;"	d
__RARCH_POSIX_STRING_H	griffin/griffin.c	80;"	d	file:
__RARCH_PY_STATE_H	gfx/py_state/py_state.h	17;"	d
__RARCH_RESAMPLER_H	audio/resampler.h	18;"	d
__RARCH_REWIND_H	rewind.h	17;"	d
__RARCH_SCREENSHOT_H	screenshot.h	17;"	d
__RARCH_SNES_TRACKER_H	gfx/state_tracker.h	17;"	d
__RARCH_STDINT_H	msvc/msvc-stdint/stdint.h	32;"	d
__RARCH_STRL_H	compat/strl.h	17;"	d
__RL_FNMATCH_H__	tools/retrolaunch/rl_fnmatch.h	2;"	d
__RSOUND_H	audio/rsound.h	17;"	d
__SSARAM__	ngc/ssaram.h	6;"	d
__SSE2__	gfx/scaler/pixconv.c	23;"	d	file:
__SSE2__	gfx/scaler/scaler_int.c	19;"	d	file:
__SUNXI_DISP_IOCTL_H__	gfx/context/sunxi_disp_ioctl.h	21;"	d
__SYNC_H_	wii/app_booter/sync.h	2;"	d
__WIIMOTE_H__	apple/common/hidpad/wiimote.h	42;"	d
__XBOX_INTERNAL_H__	frontend/platform/platform_xdk.h	11;"	d
__anon101::bufsize	audio/xaudio.c	/^   size_t bufsize;$/;"	m	struct:__anon101	file:	access:public
__anon101::nonblock	audio/xaudio.c	/^   bool nonblock;$/;"	m	struct:__anon101	file:	access:public
__anon101::xa	audio/xaudio.c	/^   xaudio2_t *xa;$/;"	m	struct:__anon101	file:	access:public
__anon102::buffer_size	audio/pulse.c	/^   size_t buffer_size;$/;"	m	struct:__anon102	file:	access:public
__anon102::context	audio/pulse.c	/^   pa_context *context;$/;"	m	struct:__anon102	file:	access:public
__anon102::mainloop	audio/pulse.c	/^   pa_threaded_mainloop *mainloop;$/;"	m	struct:__anon102	file:	access:public
__anon102::nonblock	audio/pulse.c	/^   bool nonblock;$/;"	m	struct:__anon102	file:	access:public
__anon102::stream	audio/pulse.c	/^   pa_stream *stream;$/;"	m	struct:__anon102	file:	access:public
__anon102::success	audio/pulse.c	/^   bool success;$/;"	m	struct:__anon102	file:	access:public
__anon103::nonblocking	audio/roar.c	/^   bool nonblocking;$/;"	m	struct:__anon103	file:	access:public
__anon103::vss	audio/roar.c	/^   roar_vs_t *vss;$/;"	m	struct:__anon103	file:	access:public
__anon108::data	file_extract.c	/^   void *data;$/;"	m	struct:__anon108	file:	access:public
__anon108::fd	file_extract.c	/^   int fd;$/;"	m	struct:__anon108	file:	access:public
__anon108::size	file_extract.c	/^   size_t size;$/;"	m	struct:__anon108	file:	access:public
__anon109::data	file_extract.c	/^   void *data;$/;"	m	struct:__anon109	file:	access:public
__anon109::size	file_extract.c	/^   size_t size;$/;"	m	struct:__anon109	file:	access:public
__anon110::byte_before_the_zipfile	deps/minizip/unzip.c	/^    uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon110	file:	access:public
__anon110::compression_method	deps/minizip/unzip.c	/^    uLong compression_method;   \/* compression method (0==store) *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::crc32	deps/minizip/unzip.c	/^    uLong crc32;                \/* crc32 of all data uncompressed *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::crc32_wait	deps/minizip/unzip.c	/^    uLong crc32_wait;           \/* crc32 we must obtain after decompress all *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::filestream	deps/minizip/unzip.c	/^    voidpf filestream;        \/* io structore of the zipfile *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::offset_local_extrafield	deps/minizip/unzip.c	/^    uLong offset_local_extrafield;\/* offset of the local extra field *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::pos_in_zipfile	deps/minizip/unzip.c	/^    uLong pos_in_zipfile;       \/* position in byte on the zipfile, for fseek*\/$/;"	m	struct:__anon110	file:	access:public
__anon110::pos_local_extrafield	deps/minizip/unzip.c	/^    uLong pos_local_extrafield;   \/* position in the local extra field in read*\/$/;"	m	struct:__anon110	file:	access:public
__anon110::raw	deps/minizip/unzip.c	/^    int   raw;$/;"	m	struct:__anon110	file:	access:public
__anon110::read_buffer	deps/minizip/unzip.c	/^    char  *read_buffer;         \/* internal buffer for compressed data *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::rest_read_compressed	deps/minizip/unzip.c	/^    uLong rest_read_compressed; \/* number of byte to be decompressed *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::rest_read_uncompressed	deps/minizip/unzip.c	/^    uLong rest_read_uncompressed;\/*number of byte to be obtained after decomp*\/$/;"	m	struct:__anon110	file:	access:public
__anon110::size_local_extrafield	deps/minizip/unzip.c	/^    uInt  size_local_extrafield;\/* size of the local extra field *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::stream	deps/minizip/unzip.c	/^    z_stream stream;            \/* zLib stream structure for inflate *\/$/;"	m	struct:__anon110	file:	access:public
__anon110::stream_initialised	deps/minizip/unzip.c	/^    uLong stream_initialised;   \/* flag set if stream structure is initialised*\/$/;"	m	struct:__anon110	file:	access:public
__anon110::z_filefunc	deps/minizip/unzip.c	/^    zlib_filefunc_def z_filefunc;$/;"	m	struct:__anon110	file:	access:public
__anon111::byte_before_the_zipfile	deps/minizip/unzip.c	/^    uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::central_pos	deps/minizip/unzip.c	/^    uLong central_pos;          \/* position of the beginning of the central dir*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::cur_file_info	deps/minizip/unzip.c	/^    unz_file_info cur_file_info; \/* public info about the current file in zip*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::cur_file_info_internal	deps/minizip/unzip.c	/^    unz_file_info_internal cur_file_info_internal; \/* private info about it*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::current_file_ok	deps/minizip/unzip.c	/^    uLong current_file_ok;      \/* flag about the usability of the current file*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::encrypted	deps/minizip/unzip.c	/^    int encrypted;$/;"	m	struct:__anon111	file:	access:public
__anon111::filestream	deps/minizip/unzip.c	/^    voidpf filestream;        \/* io structore of the zipfile *\/$/;"	m	struct:__anon111	file:	access:public
__anon111::gi	deps/minizip/unzip.c	/^    unz_global_info gi;       \/* public global information *\/$/;"	m	struct:__anon111	file:	access:public
__anon111::num_file	deps/minizip/unzip.c	/^    uLong num_file;             \/* number of the current file in the zipfile*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::offset_central_dir	deps/minizip/unzip.c	/^    uLong offset_central_dir;   \/* offset of start of central directory with$/;"	m	struct:__anon111	file:	access:public
__anon111::pfile_in_zip_read	deps/minizip/unzip.c	/^    file_in_zip_read_info_s* pfile_in_zip_read; \/* structure about the current$/;"	m	struct:__anon111	file:	access:public
__anon111::pos_in_central_dir	deps/minizip/unzip.c	/^    uLong pos_in_central_dir;   \/* pos of the current file in the central dir*\/$/;"	m	struct:__anon111	file:	access:public
__anon111::size_central_dir	deps/minizip/unzip.c	/^    uLong size_central_dir;     \/* size of the central directory  *\/$/;"	m	struct:__anon111	file:	access:public
__anon111::z_filefunc	deps/minizip/unzip.c	/^    zlib_filefunc_def z_filefunc;$/;"	m	struct:__anon111	file:	access:public
__anon117::m_bit_flag	deps/miniz/zlib.h	/^  mz_uint16 m_bit_flag;$/;"	m	struct:__anon117	access:public
__anon117::m_central_dir_ofs	deps/miniz/zlib.h	/^  mz_uint32 m_central_dir_ofs;$/;"	m	struct:__anon117	access:public
__anon117::m_comment	deps/miniz/zlib.h	/^  char m_comment[MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE];$/;"	m	struct:__anon117	access:public
__anon117::m_comment_size	deps/miniz/zlib.h	/^  mz_uint32 m_comment_size;$/;"	m	struct:__anon117	access:public
__anon117::m_comp_size	deps/miniz/zlib.h	/^  mz_uint64 m_comp_size;$/;"	m	struct:__anon117	access:public
__anon117::m_crc32	deps/miniz/zlib.h	/^  mz_uint32 m_crc32;$/;"	m	struct:__anon117	access:public
__anon117::m_external_attr	deps/miniz/zlib.h	/^  mz_uint32 m_external_attr;$/;"	m	struct:__anon117	access:public
__anon117::m_file_index	deps/miniz/zlib.h	/^  mz_uint32 m_file_index;$/;"	m	struct:__anon117	access:public
__anon117::m_filename	deps/miniz/zlib.h	/^  char m_filename[MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE];$/;"	m	struct:__anon117	access:public
__anon117::m_internal_attr	deps/miniz/zlib.h	/^  mz_uint16 m_internal_attr;$/;"	m	struct:__anon117	access:public
__anon117::m_local_header_ofs	deps/miniz/zlib.h	/^  mz_uint64 m_local_header_ofs;$/;"	m	struct:__anon117	access:public
__anon117::m_method	deps/miniz/zlib.h	/^  mz_uint16 m_method;$/;"	m	struct:__anon117	access:public
__anon117::m_time	deps/miniz/zlib.h	/^  time_t m_time;$/;"	m	struct:__anon117	access:public
__anon117::m_uncomp_size	deps/miniz/zlib.h	/^  mz_uint64 m_uncomp_size;$/;"	m	struct:__anon117	access:public
__anon117::m_version_made_by	deps/miniz/zlib.h	/^  mz_uint16 m_version_made_by;$/;"	m	struct:__anon117	access:public
__anon117::m_version_needed	deps/miniz/zlib.h	/^  mz_uint16 m_version_needed;$/;"	m	struct:__anon117	access:public
__anon119::m_archive_size	deps/miniz/zlib.h	/^  mz_uint64 m_archive_size;$/;"	m	struct:__anon119	access:public
__anon119::m_central_directory_file_ofs	deps/miniz/zlib.h	/^  mz_uint64 m_central_directory_file_ofs;$/;"	m	struct:__anon119	access:public
__anon119::m_file_offset_alignment	deps/miniz/zlib.h	/^  mz_uint m_file_offset_alignment;$/;"	m	struct:__anon119	access:public
__anon119::m_pAlloc	deps/miniz/zlib.h	/^  mz_alloc_func m_pAlloc;$/;"	m	struct:__anon119	access:public
__anon119::m_pAlloc_opaque	deps/miniz/zlib.h	/^  void *m_pAlloc_opaque;$/;"	m	struct:__anon119	access:public
__anon119::m_pFree	deps/miniz/zlib.h	/^  mz_free_func m_pFree;$/;"	m	struct:__anon119	access:public
__anon119::m_pIO_opaque	deps/miniz/zlib.h	/^  void *m_pIO_opaque;$/;"	m	struct:__anon119	access:public
__anon119::m_pRead	deps/miniz/zlib.h	/^  mz_file_read_func m_pRead;$/;"	m	struct:__anon119	access:public
__anon119::m_pState	deps/miniz/zlib.h	/^  mz_zip_internal_state *m_pState;$/;"	m	struct:__anon119	access:public
__anon119::m_total_files	deps/miniz/zlib.h	/^  mz_uint m_total_files;$/;"	m	struct:__anon119	access:public
__anon119::m_zip_mode	deps/miniz/zlib.h	/^  mz_zip_mode m_zip_mode;$/;"	m	struct:__anon119	access:public
__anon124::m_code_size	deps/miniz/zlib.h	/^  mz_uint8 m_code_size[TINFL_MAX_HUFF_SYMBOLS_0];$/;"	m	struct:__anon124	access:public
__anon124::m_look_up	deps/miniz/zlib.h	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon124	access:public
__anon124::m_tree	deps/miniz/zlib.h	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon124	access:public
__anon132::m_adler32	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
__anon132::m_bit_buffer	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
__anon132::m_bits_in	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
__anon132::m_block_index	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_dict	deps/miniz/zlib.h	/^  mz_uint8 m_dict[TDEFL_LZ_DICT_SIZE + TDEFL_MAX_MATCH_LEN - 1];$/;"	m	struct:__anon132	access:public
__anon132::m_dict_size	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
__anon132::m_finished	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_flags	deps/miniz/zlib.h	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon132	access:public
__anon132::m_flush	deps/miniz/zlib.h	/^  tdefl_flush m_flush;$/;"	m	struct:__anon132	access:public
__anon132::m_greedy_parsing	deps/miniz/zlib.h	/^  int m_greedy_parsing;$/;"	m	struct:__anon132	access:public
__anon132::m_hash	deps/miniz/zlib.h	/^  mz_uint16 m_hash[TDEFL_LZ_HASH_SIZE];$/;"	m	struct:__anon132	access:public
__anon132::m_huff_code_sizes	deps/miniz/zlib.h	/^  mz_uint8 m_huff_code_sizes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
__anon132::m_huff_codes	deps/miniz/zlib.h	/^  mz_uint16 m_huff_codes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
__anon132::m_huff_count	deps/miniz/zlib.h	/^  mz_uint16 m_huff_count[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
__anon132::m_lookahead_pos	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
__anon132::m_lookahead_size	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
__anon132::m_lz_code_buf	deps/miniz/zlib.h	/^  mz_uint8 m_lz_code_buf[TDEFL_LZ_CODE_BUF_SIZE];$/;"	m	struct:__anon132	access:public
__anon132::m_lz_code_buf_dict_pos	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
__anon132::m_max_probes	deps/miniz/zlib.h	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon132	access:public
__anon132::m_next	deps/miniz/zlib.h	/^  mz_uint16 m_next[TDEFL_LZ_DICT_SIZE];$/;"	m	struct:__anon132	access:public
__anon132::m_num_flags_left	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
__anon132::m_out_buf_ofs	deps/miniz/zlib.h	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon132	access:public
__anon132::m_output_buf	deps/miniz/zlib.h	/^  mz_uint8 m_output_buf[TDEFL_OUT_BUF_SIZE];$/;"	m	struct:__anon132	access:public
__anon132::m_output_flush_ofs	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_output_flush_remaining	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_pIn_buf	deps/miniz/zlib.h	/^  const void *m_pIn_buf;$/;"	m	struct:__anon132	access:public
__anon132::m_pIn_buf_size	deps/miniz/zlib.h	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon132	access:public
__anon132::m_pLZ_code_buf	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
__anon132::m_pLZ_flags	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
__anon132::m_pOut_buf	deps/miniz/zlib.h	/^  void *m_pOut_buf;$/;"	m	struct:__anon132	access:public
__anon132::m_pOut_buf_size	deps/miniz/zlib.h	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon132	access:public
__anon132::m_pOutput_buf	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
__anon132::m_pOutput_buf_end	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
__anon132::m_pPut_buf_func	deps/miniz/zlib.h	/^  tdefl_put_buf_func_ptr m_pPut_buf_func;$/;"	m	struct:__anon132	access:public
__anon132::m_pPut_buf_user	deps/miniz/zlib.h	/^  void *m_pPut_buf_user;$/;"	m	struct:__anon132	access:public
__anon132::m_pSrc	deps/miniz/zlib.h	/^  const mz_uint8 *m_pSrc;$/;"	m	struct:__anon132	access:public
__anon132::m_prev_return_status	deps/miniz/zlib.h	/^  tdefl_status m_prev_return_status;$/;"	m	struct:__anon132	access:public
__anon132::m_saved_lit	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_saved_match_dist	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_saved_match_len	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon132::m_src_buf_left	deps/miniz/zlib.h	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon132	access:public
__anon132::m_total_lz_bytes	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
__anon132::m_wants_to_finish	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
__anon133::m_decomp	deps/miniz/miniz.c	/^  tinfl_decompressor m_decomp;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_dict	deps/miniz/miniz.c	/^  mz_uint8 m_dict[TINFL_LZ_DICT_SIZE];$/;"	m	struct:__anon133	file:	access:public
__anon133::m_dict_avail	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_dict_ofs	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_first_call	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_has_flushed	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_last_status	deps/miniz/miniz.c	/^  tinfl_status m_last_status;$/;"	m	struct:__anon133	file:	access:public
__anon133::m_window_bits	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
__anon134::m_key	deps/miniz/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon134	file:	access:public
__anon134::m_sym_index	deps/miniz/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon134	file:	access:public
__anon136::m_capacity	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon136	file:	access:public
__anon136::m_expandable	deps/miniz/miniz.c	/^  mz_bool m_expandable;$/;"	m	struct:__anon136	file:	access:public
__anon136::m_pBuf	deps/miniz/miniz.c	/^  mz_uint8 *m_pBuf;$/;"	m	struct:__anon136	file:	access:public
__anon136::m_size	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon136	file:	access:public
__anon138::m_capacity	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon138	file:	access:public
__anon138::m_element_size	deps/miniz/miniz.c	/^  mz_uint m_element_size;$/;"	m	struct:__anon138	file:	access:public
__anon138::m_p	deps/miniz/miniz.c	/^  void *m_p;$/;"	m	struct:__anon138	file:	access:public
__anon138::m_size	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon138	file:	access:public
__anon139::data	miscellaneous.h	/^   uint32_t data[8];$/;"	m	struct:__anon139	access:public
__anon13::interface	frontend/platform/platform_gx.c	/^   const DISC_INTERFACE *interface;$/;"	m	struct:__anon13	file:	access:public
__anon13::mounted	frontend/platform/platform_gx.c	/^   bool mounted;$/;"	m	struct:__anon13	file:	access:public
__anon13::name	frontend/platform/platform_gx.c	/^   const char *name;$/;"	m	struct:__anon13	file:	access:public
__anon141::name	apple/iOS/bluetooth/btdynamic.c	/^   const char* name;$/;"	m	struct:__anon141	file:	access:public
__anon141::target	apple/iOS/bluetooth/btdynamic.c	/^   void** target;$/;"	m	struct:__anon141	file:	access:public
__anon14::function	frontend/platform/platform_apple.c	/^   void (*function)(void*);$/;"	m	struct:__anon14	file:	access:public
__anon14::userdata	frontend/platform/platform_apple.c	/^   void* userdata;$/;"	m	struct:__anon14	file:	access:public
__anon150::format	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    const char *format;$/;"	m	struct:__anon150	access:public
__anon150::opcode	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    uint16_t    opcode;$/;"	m	struct:__anon150	access:public
__anon154::__anon155::file	apple/iOS/platform.h	/^      FILE* file;$/;"	m	struct:__anon154::__anon155	access:public
__anon154::__anon155::stderr	apple/iOS/platform.h	/^      int stderr;$/;"	m	struct:__anon154::__anon155	access:public
__anon154::__anon155::stdout	apple/iOS/platform.h	/^      int stdout;$/;"	m	struct:__anon154::__anon155	access:public
__anon154::bluetooth_mode	apple/iOS/platform.h	/^   char bluetooth_mode[64];$/;"	m	struct:__anon154	access:public
__anon154::logging	apple/iOS/platform.h	/^   }  logging;$/;"	m	struct:__anon154	typeref:struct:__anon154::__anon155	access:public
__anon154::logging_enabled	apple/iOS/platform.h	/^   bool logging_enabled;$/;"	m	struct:__anon154	access:public
__anon154::orientation_flags	apple/iOS/platform.h	/^   unsigned orientation_flags;$/;"	m	struct:__anon154	access:public
__anon154::orientations	apple/iOS/platform.h	/^   char orientations[32];$/;"	m	struct:__anon154	access:public
__anon156::data	apple/common/apple_joypad.c	/^   void* data;$/;"	m	struct:__anon156	file:	access:public
__anon156::iface	apple/common/apple_joypad.c	/^   struct apple_pad_interface* iface;$/;"	m	struct:__anon156	typeref:struct:__anon156::apple_pad_interface	file:	access:public
__anon156::used	apple/common/apple_joypad.c	/^   bool used;$/;"	m	struct:__anon156	file:	access:public
__anon159::fixed_x	apple/common/apple_input.h	/^   int16_t fixed_x, fixed_y;$/;"	m	struct:__anon159	access:public
__anon159::fixed_y	apple/common/apple_input.h	/^   int16_t fixed_x, fixed_y;$/;"	m	struct:__anon159	access:public
__anon159::full_x	apple/common/apple_input.h	/^   int16_t full_x, full_y;$/;"	m	struct:__anon159	access:public
__anon159::full_y	apple/common/apple_input.h	/^   int16_t full_x, full_y;$/;"	m	struct:__anon159	access:public
__anon159::screen_x	apple/common/apple_input.h	/^   int16_t screen_x, screen_y;$/;"	m	struct:__anon159	access:public
__anon159::screen_y	apple/common/apple_input.h	/^   int16_t screen_x, screen_y;$/;"	m	struct:__anon159	access:public
__anon160::keys	apple/common/apple_input.h	/^   uint32_t keys[MAX_KEYS];$/;"	m	struct:__anon160	access:public
__anon160::mouse_buttons	apple/common/apple_input.h	/^   uint32_t mouse_buttons;$/;"	m	struct:__anon160	access:public
__anon160::mouse_delta	apple/common/apple_input.h	/^   int16_t mouse_delta[2];$/;"	m	struct:__anon160	access:public
__anon160::pad_axis	apple/common/apple_input.h	/^   int16_t pad_axis[MAX_PLAYERS][4];$/;"	m	struct:__anon160	access:public
__anon160::pad_buttons	apple/common/apple_input.h	/^   uint32_t pad_buttons[MAX_PLAYERS];$/;"	m	struct:__anon160	access:public
__anon160::touch_count	apple/common/apple_input.h	/^   uint32_t touch_count;$/;"	m	struct:__anon160	access:public
__anon160::touches	apple/common/apple_input.h	/^   apple_touch_data_t touches[MAX_TOUCHES];$/;"	m	struct:__anon160	access:public
__anon161::__anon162::boolean	apple/common/setting_data.h	/^      bool boolean;$/;"	m	union:__anon161::__anon162	access:public
__anon161::__anon162::fraction	apple/common/setting_data.h	/^      float fraction;$/;"	m	union:__anon161::__anon162	access:public
__anon161::__anon162::integer	apple/common/setting_data.h	/^      int integer;$/;"	m	union:__anon161::__anon162	access:public
__anon161::__anon162::keybind	apple/common/setting_data.h	/^      const struct retro_keybind* keybind;$/;"	m	union:__anon161::__anon162	typeref:struct:__anon161::__anon162::retro_keybind	access:public
__anon161::__anon162::string	apple/common/setting_data.h	/^      const char* string;$/;"	m	union:__anon161::__anon162	access:public
__anon161::__anon162::unsigned_integer	apple/common/setting_data.h	/^      unsigned int unsigned_integer;$/;"	m	union:__anon161::__anon162	access:public
__anon161::__anon163::boolean	apple/common/setting_data.h	/^      bool* boolean;$/;"	m	union:__anon161::__anon163	access:public
__anon161::__anon163::fraction	apple/common/setting_data.h	/^      float* fraction;$/;"	m	union:__anon161::__anon163	access:public
__anon161::__anon163::integer	apple/common/setting_data.h	/^      int* integer;$/;"	m	union:__anon161::__anon163	access:public
__anon161::__anon163::keybind	apple/common/setting_data.h	/^      struct retro_keybind* keybind;$/;"	m	union:__anon161::__anon163	typeref:struct:__anon161::__anon163::retro_keybind	access:public
__anon161::__anon163::string	apple/common/setting_data.h	/^      char* string;$/;"	m	union:__anon161::__anon163	access:public
__anon161::__anon163::unsigned_integer	apple/common/setting_data.h	/^      unsigned int* unsigned_integer;$/;"	m	union:__anon161::__anon163	access:public
__anon161::default_value	apple/common/setting_data.h	/^   } default_value;$/;"	m	struct:__anon161	typeref:union:__anon161::__anon162	access:public
__anon161::flags	apple/common/setting_data.h	/^   uint64_t flags;$/;"	m	struct:__anon161	access:public
__anon161::index	apple/common/setting_data.h	/^   uint32_t index;$/;"	m	struct:__anon161	access:public
__anon161::max	apple/common/setting_data.h	/^   double max;$/;"	m	struct:__anon161	access:public
__anon161::min	apple/common/setting_data.h	/^   double min;$/;"	m	struct:__anon161	access:public
__anon161::name	apple/common/setting_data.h	/^   const char* name;$/;"	m	struct:__anon161	access:public
__anon161::short_description	apple/common/setting_data.h	/^   const char* short_description;$/;"	m	struct:__anon161	access:public
__anon161::size	apple/common/setting_data.h	/^   uint32_t size;$/;"	m	struct:__anon161	access:public
__anon161::type	apple/common/setting_data.h	/^   enum setting_type type;$/;"	m	struct:__anon161	typeref:enum:__anon161::setting_type	access:public
__anon161::value	apple/common/setting_data.h	/^   } value;$/;"	m	struct:__anon161	typeref:union:__anon161::__anon163	access:public
__anon161::values	apple/common/setting_data.h	/^   const char* values;$/;"	m	struct:__anon161	access:public
__anon164::alpha	gfx/context/sunxi_disp_ioctl.h	/^	__u8 alpha;$/;"	m	struct:__anon164	access:public
__anon164::blue	gfx/context/sunxi_disp_ioctl.h	/^	__u8 blue;$/;"	m	struct:__anon164	access:public
__anon164::green	gfx/context/sunxi_disp_ioctl.h	/^	__u8 green;$/;"	m	struct:__anon164	access:public
__anon164::red	gfx/context/sunxi_disp_ioctl.h	/^	__u8 red;$/;"	m	struct:__anon164	access:public
__anon165::height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon165	access:public
__anon165::width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon165	access:public
__anon165::x	gfx/context/sunxi_disp_ioctl.h	/^	__s32 x;$/;"	m	struct:__anon165	access:public
__anon165::y	gfx/context/sunxi_disp_ioctl.h	/^	__s32 y;$/;"	m	struct:__anon165	access:public
__anon166::height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon166	access:public
__anon166::width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon166	access:public
__anon167::x	gfx/context/sunxi_disp_ioctl.h	/^	__s32 x;$/;"	m	struct:__anon167	access:public
__anon167::y	gfx/context/sunxi_disp_ioctl.h	/^	__s32 y;$/;"	m	struct:__anon167	access:public
__anon186::addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr[3];$/;"	m	struct:__anon186	access:public
__anon186::b_trd_src	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_trd_src; \/* if 3d source, used for scaler mode layer *\/$/;"	m	struct:__anon186	access:public
__anon186::br_swap	gfx/context/sunxi_disp_ioctl.h	/^	__bool br_swap;$/;"	m	struct:__anon186	access:public
__anon186::cs_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_cs_mode_t cs_mode; \/* color space *\/$/;"	m	struct:__anon186	access:public
__anon186::format	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_fmt_t format;$/;"	m	struct:__anon186	access:public
__anon186::mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_mod_t mode;$/;"	m	struct:__anon186	access:public
__anon186::seq	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_seq_t seq;$/;"	m	struct:__anon186	access:public
__anon186::size	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rectsz_t size; \/* unit is pixel *\/$/;"	m	struct:__anon186	access:public
__anon186::trd_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_3d_src_mode_t trd_mode;$/;"	m	struct:__anon186	access:public
__anon186::trd_right_addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 trd_right_addr[3]; \/* used when in frame packing 3d mode *\/$/;"	m	struct:__anon186	access:public
__anon187::alpha_en	gfx/context/sunxi_disp_ioctl.h	/^	__bool alpha_en; \/* layer global alpha enable *\/$/;"	m	struct:__anon187	access:public
__anon187::alpha_val	gfx/context/sunxi_disp_ioctl.h	/^	__u16 alpha_val; \/* layer global alpha value *\/$/;"	m	struct:__anon187	access:public
__anon187::b_from_screen	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_from_screen;$/;"	m	struct:__anon187	access:public
__anon187::b_trd_out	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_trd_out; \/* if output 3d mode, used for scaler mode layer *\/$/;"	m	struct:__anon187	access:public
__anon187::ck_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool ck_enable; \/* layer color key enable *\/$/;"	m	struct:__anon187	access:public
__anon187::fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t fb; \/* framebuffer *\/$/;"	m	struct:__anon187	access:public
__anon187::mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_layer_work_mode_t mode; \/* layer work mode *\/$/;"	m	struct:__anon187	access:public
__anon187::out_trd_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_3d_out_mode_t out_trd_mode;$/;"	m	struct:__anon187	access:public
__anon187::pipe	gfx/context/sunxi_disp_ioctl.h	/^	__u8 pipe;$/;"	m	struct:__anon187	access:public
__anon187::prio	gfx/context/sunxi_disp_ioctl.h	/^	__u8 prio;$/;"	m	struct:__anon187	access:public
__anon187::scn_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t scn_win; \/* screen window *\/$/;"	m	struct:__anon187	access:public
__anon187::src_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t src_win;$/;"	m	struct:__anon187	access:public
__anon188::blue_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 blue_match_rule;$/;"	m	struct:__anon188	access:public
__anon188::ck_max	gfx/context/sunxi_disp_ioctl.h	/^	__disp_color_t ck_max;$/;"	m	struct:__anon188	access:public
__anon188::ck_min	gfx/context/sunxi_disp_ioctl.h	/^	__disp_color_t ck_min;$/;"	m	struct:__anon188	access:public
__anon188::green_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 green_match_rule;$/;"	m	struct:__anon188	access:public
__anon188::red_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 red_match_rule;$/;"	m	struct:__anon188	access:public
__anon189::addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr[3];$/;"	m	struct:__anon189	access:public
__anon189::addr_right	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr_right[3]; \/* used when in frame packing 3d mode *\/$/;"	m	struct:__anon189	access:public
__anon189::flag_addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 flag_addr; \/* dit maf flag address *\/$/;"	m	struct:__anon189	access:public
__anon189::flag_stride	gfx/context/sunxi_disp_ioctl.h	/^	__u32 flag_stride; \/* dit maf flag line stride *\/$/;"	m	struct:__anon189	access:public
__anon189::frame_rate	gfx/context/sunxi_disp_ioctl.h	/^	__u32 frame_rate; \/*  *FRAME_RATE_BASE(now scheduled for 1000) *\/$/;"	m	struct:__anon189	access:public
__anon189::id	gfx/context/sunxi_disp_ioctl.h	/^	__s32 id;$/;"	m	struct:__anon189	access:public
__anon189::interlace	gfx/context/sunxi_disp_ioctl.h	/^	__bool interlace;$/;"	m	struct:__anon189	access:public
__anon189::maf_valid	gfx/context/sunxi_disp_ioctl.h	/^	__bool maf_valid;$/;"	m	struct:__anon189	access:public
__anon189::pre_frame_valid	gfx/context/sunxi_disp_ioctl.h	/^	__bool pre_frame_valid;$/;"	m	struct:__anon189	access:public
__anon189::top_field_first	gfx/context/sunxi_disp_ioctl.h	/^	__bool top_field_first;$/;"	m	struct:__anon189	access:public
__anon190::maf_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool maf_enable;$/;"	m	struct:__anon190	access:public
__anon190::pre_frame_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool pre_frame_enable;$/;"	m	struct:__anon190	access:public
__anon191::addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr;$/;"	m	struct:__anon191	access:public
__anon191::pat_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_hwc_mode_t pat_mode;$/;"	m	struct:__anon191	access:public
__anon192::input_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t input_fb;$/;"	m	struct:__anon192	access:public
__anon192::output_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t output_fb;$/;"	m	struct:__anon192	access:public
__anon192::source_regn	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t source_regn;$/;"	m	struct:__anon192	access:public
__anon193::fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t fb;$/;"	m	struct:__anon193	access:public
__anon193::scn_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t scn_win; \/*  sceen region *\/$/;"	m	struct:__anon193	access:public
__anon193::src_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t src_win;$/;"	m	struct:__anon193	access:public
__anon194::output_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t output_fb;$/;"	m	struct:__anon194	access:public
__anon194::screen_size	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rectsz_t screen_size;$/;"	m	struct:__anon194	access:public
__anon195::Hdmi_close	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*Hdmi_close) (void);$/;"	m	struct:__anon195	access:public
__anon195::Hdmi_open	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*Hdmi_open) (void);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_get_HPD_status	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_get_HPD_status) (void);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_get_video_timing	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_get_video_timing) (__disp_tv_mode_t mode,$/;"	m	struct:__anon195	access:public
__anon195::hdmi_mode_support	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_mode_support) (__disp_tv_mode_t mode);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_set_mode	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_mode) (__disp_tv_mode_t mode);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_set_pll	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_pll) (__u32 pll, __u32 clk);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_set_videomode	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_videomode) (const struct __disp_video_timing *mode);$/;"	m	struct:__anon195	access:public
__anon195::hdmi_wait_edid	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_wait_edid) (void);$/;"	m	struct:__anon195	access:public
__anon196::lcd_cpu_da	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_cpu_da;$/;"	m	struct:__anon196	access:public
__anon196::lcd_cpu_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_cpu_if;$/;"	m	struct:__anon196	access:public
__anon196::lcd_dclk_freq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_dclk_freq;$/;"	m	struct:__anon196	access:public
__anon196::lcd_frm	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_frm;$/;"	m	struct:__anon196	access:public
__anon196::lcd_gamma_correction_en	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_gamma_correction_en;$/;"	m	struct:__anon196	access:public
__anon196::lcd_gamma_tbl	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_gamma_tbl[256];$/;"	m	struct:__anon196	access:public
__anon196::lcd_hbp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hbp;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ht	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ht;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_hspw	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_hspw;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_if;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_lde_iovalue	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_lde_iovalue;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_lde_used	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_lde_used;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_s888_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_s888_if;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_smode	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_smode;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_srgb_seq0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_srgb_seq0;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_srgb_seq1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_srgb_seq1;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_syuv_fdly	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_fdly;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_syuv_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_if;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_syuv_seq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_seq;$/;"	m	struct:__anon196	access:public
__anon196::lcd_hv_vspw	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_vspw;$/;"	m	struct:__anon196	access:public
__anon196::lcd_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_if; \/* 0:hv(sync+de); 1:8080; 2:ttl; 3:lvds *\/$/;"	m	struct:__anon196	access:public
__anon196::lcd_io_cfg0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_cfg0;$/;"	m	struct:__anon196	access:public
__anon196::lcd_io_cfg1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_cfg1;$/;"	m	struct:__anon196	access:public
__anon196::lcd_io_strength	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_strength;$/;"	m	struct:__anon196	access:public
__anon196::lcd_lvds_bitwidth	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_bitwidth; \/*  0:24bit; 1:18bit *\/$/;"	m	struct:__anon196	access:public
__anon196::lcd_lvds_ch	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_ch; \/*  0: single channel; 1:dual channel *\/$/;"	m	struct:__anon196	access:public
__anon196::lcd_lvds_io_cross	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_io_cross; \/*  0:normal; 1:pn cross *\/$/;"	m	struct:__anon196	access:public
__anon196::lcd_lvds_mode	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_mode; \/*  0:NS mode; 1:JEIDA mode *\/$/;"	m	struct:__anon196	access:public
__anon196::lcd_pwm_ch	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_ch;$/;"	m	struct:__anon196	access:public
__anon196::lcd_pwm_freq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_freq;$/;"	m	struct:__anon196	access:public
__anon196::lcd_pwm_not_used	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_not_used;$/;"	m	struct:__anon196	access:public
__anon196::lcd_pwm_pol	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_pol;$/;"	m	struct:__anon196	access:public
__anon196::lcd_srgb	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_srgb;$/;"	m	struct:__anon196	access:public
__anon196::lcd_swap	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_swap;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_ckvd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvd;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_ckvh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvh;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_ckvt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvt;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_datainv_en	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datainv_en;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_datainv_sel	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datainv_sel;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_datarate	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datarate;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_oehd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oehd;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_oehh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oehh;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_oevd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevd;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_oevh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevh;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_oevt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevt;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_revd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_revd;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_revsel	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_revsel;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_sthd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_sthd;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_sthh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_sthh;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_stvdl	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvdl;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_stvdp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvdp;$/;"	m	struct:__anon196	access:public
__anon196::lcd_ttl_stvh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvh;$/;"	m	struct:__anon196	access:public
__anon196::lcd_uf	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_uf;$/;"	m	struct:__anon196	access:public
__anon196::lcd_vbp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_vbp;$/;"	m	struct:__anon196	access:public
__anon196::lcd_vt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_vt;$/;"	m	struct:__anon196	access:public
__anon196::lcd_x	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_x;$/;"	m	struct:__anon196	access:public
__anon196::lcd_y	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_y;$/;"	m	struct:__anon196	access:public
__anon196::port_index	gfx/context/sunxi_disp_ioctl.h	/^	__u32 port_index;$/;"	m	struct:__anon196	access:public
__anon196::start_delay	gfx/context/sunxi_disp_ioctl.h	/^	__u32 start_delay; \/* not need to config for user *\/$/;"	m	struct:__anon196	access:public
__anon196::tcon_index	gfx/context/sunxi_disp_ioctl.h	/^	__u32 tcon_index; \/* not need to config for user *\/$/;"	m	struct:__anon196	access:public
__anon197::base_ccmu	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_ccmu;$/;"	m	struct:__anon197	access:public
__anon197::base_lcdc0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_lcdc0;$/;"	m	struct:__anon197	access:public
__anon197::base_lcdc1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_lcdc1;$/;"	m	struct:__anon197	access:public
__anon197::base_pioc	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_pioc;$/;"	m	struct:__anon197	access:public
__anon197::base_pwm	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_pwm;$/;"	m	struct:__anon197	access:public
__anon198::cfg_close_flow	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*cfg_close_flow) (__u32 sel);$/;"	m	struct:__anon198	access:public
__anon198::cfg_open_flow	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*cfg_open_flow) (__u32 sel);$/;"	m	struct:__anon198	access:public
__anon198::cfg_panel_info	gfx/context/sunxi_disp_ioctl.h	/^	void (*cfg_panel_info) (__panel_para_t *info);$/;"	m	struct:__anon198	access:public
__anon198::lcd_user_defined_func	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*lcd_user_defined_func) (__u32 sel, __u32 para1, __u32 para2,$/;"	m	struct:__anon198	access:public
__anon199::active_state	gfx/context/sunxi_disp_ioctl.h	/^	__u32 active_state;$/;"	m	struct:__anon199	access:public
__anon199::duty_ns	gfx/context/sunxi_disp_ioctl.h	/^	__u32 duty_ns;$/;"	m	struct:__anon199	access:public
__anon199::enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool enable;$/;"	m	struct:__anon199	access:public
__anon199::period_ns	gfx/context/sunxi_disp_ioctl.h	/^	__u32 period_ns;$/;"	m	struct:__anon199	access:public
__anon201::aux_output_height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 aux_output_height;$/;"	m	struct:__anon201	access:public
__anon201::aux_output_width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 aux_output_width;$/;"	m	struct:__anon201	access:public
__anon201::buffer_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 buffer_num;$/;"	m	struct:__anon201	access:public
__anon201::ch1_offset	gfx/context/sunxi_disp_ioctl.h	/^	__u32 ch1_offset; \/* use when PLANAR or UV_COMBINED mode *\/$/;"	m	struct:__anon201	access:public
__anon201::ch2_offset	gfx/context/sunxi_disp_ioctl.h	/^	__u32 ch2_offset; \/* use when PLANAR mode *\/$/;"	m	struct:__anon201	access:public
__anon201::fb_mode	gfx/context/sunxi_disp_ioctl.h	/^	__fb_mode_t fb_mode;$/;"	m	struct:__anon201	access:public
__anon201::height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon201	access:public
__anon201::line_length	gfx/context/sunxi_disp_ioctl.h	/^	__u32 line_length; \/* in byte unit *\/$/;"	m	struct:__anon201	access:public
__anon201::mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_layer_work_mode_t mode;$/;"	m	struct:__anon201	access:public
__anon201::output_height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 output_height; \/* used when scaler mode *\/$/;"	m	struct:__anon201	access:public
__anon201::output_width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 output_width; \/* used when scaler mode *\/$/;"	m	struct:__anon201	access:public
__anon201::primary_screen_id	gfx/context/sunxi_disp_ioctl.h	/^	__u32 primary_screen_id;$/;"	m	struct:__anon201	access:public
__anon201::smem_len	gfx/context/sunxi_disp_ioctl.h	/^	__u32 smem_len;$/;"	m	struct:__anon201	access:public
__anon201::width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon201	access:public
__anon203::b_init	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_init;$/;"	m	struct:__anon203	access:public
__anon203::br_swap	gfx/context/sunxi_disp_ioctl.h	/^	__bool br_swap[2];$/;"	m	struct:__anon203	access:public
__anon203::buffer_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 buffer_num[2];$/;"	m	struct:__anon203	access:public
__anon203::disp_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_init_mode_t disp_mode;$/;"	m	struct:__anon203	access:public
__anon203::format	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_fmt_t format[2];$/;"	m	struct:__anon203	access:public
__anon203::output_type	gfx/context/sunxi_disp_ioctl.h	/^	__disp_output_type_t output_type[2];$/;"	m	struct:__anon203	access:public
__anon203::scaler_mode	gfx/context/sunxi_disp_ioctl.h	/^	__bool scaler_mode[2];$/;"	m	struct:__anon203	access:public
__anon203::seq	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_seq_t seq[2];$/;"	m	struct:__anon203	access:public
__anon203::tv_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_tv_mode_t tv_mode[2];$/;"	m	struct:__anon203	access:public
__anon203::vga_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_vga_mode_t vga_mode[2];$/;"	m	struct:__anon203	access:public
__anon204::color	gfx/gfx_common.h	/^   unsigned color;$/;"	m	struct:__anon204	access:public
__anon204::scale	gfx/gfx_common.h	/^   float scale;$/;"	m	struct:__anon204	access:public
__anon204::x	gfx/gfx_common.h	/^   float x;$/;"	m	struct:__anon204	access:public
__anon204::y	gfx/gfx_common.h	/^   float y;$/;"	m	struct:__anon204	access:public
__anon205::m_Glyphs	gfx/fonts/xdk360_fonts.cpp	/^   const GLYPH_ATTR* m_Glyphs;          \/\/ Array of glyphs$/;"	m	struct:__anon205	file:	access:public
__anon205::m_TranslatorTable	gfx/fonts/xdk360_fonts.cpp	/^   wchar_t * m_TranslatorTable;         \/\/ ASCII to glyph lookup table$/;"	m	struct:__anon205	file:	access:public
__anon205::m_cMaxGlyph	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_cMaxGlyph;           \/\/ Number of entries in the translator table$/;"	m	struct:__anon205	file:	access:public
__anon205::m_dwNumGlyphs	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwNumGlyphs;         \/\/ Number of valid glyphs$/;"	m	struct:__anon205	file:	access:public
__anon205::m_dwSavedState	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwSavedState;$/;"	m	struct:__anon205	file:	access:public
__anon205::m_fFontBottomPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontBottomPadding;          \/\/ Padding below the strike zone$/;"	m	struct:__anon205	file:	access:public
__anon205::m_fFontHeight	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontHeight;                 \/\/ Height of the font strike in pixels$/;"	m	struct:__anon205	file:	access:public
__anon205::m_fFontTopPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontTopPadding;             \/\/ Padding above the strike zone$/;"	m	struct:__anon205	file:	access:public
__anon205::m_fFontYAdvance	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontYAdvance;               \/\/ Number of pixels to move the cursor for a line feed$/;"	m	struct:__anon205	file:	access:public
__anon205::m_pFontTexture	gfx/fonts/xdk360_fonts.cpp	/^   D3DTexture* m_pFontTexture;$/;"	m	struct:__anon205	file:	access:public
__anon206::m_TranslatorTable	gfx/fonts/xdk360_fonts.cpp	/^   wchar_t m_TranslatorTable[1];   \/\/ ASCII to Glyph lookup table, NOTE: It's m_cMaxGlyph+1 in size.$/;"	m	struct:__anon206	file:	access:public
__anon206::m_cMaxGlyph	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short m_cMaxGlyph;     \/\/ Number of font characters (Should be an odd number to maintain DWORD Alignment)$/;"	m	struct:__anon206	file:	access:public
__anon206::m_dwFileVersion	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwFileVersion;   \/\/ Version of the font file (Must match FONTFILEVERSION)$/;"	m	struct:__anon206	file:	access:public
__anon206::m_fFontBottomPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontBottomPadding;     \/\/ Padding below the strike zone$/;"	m	struct:__anon206	file:	access:public
__anon206::m_fFontHeight	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontHeight;            \/\/ Height of the font strike in pixels$/;"	m	struct:__anon206	file:	access:public
__anon206::m_fFontTopPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontTopPadding;        \/\/ Padding above the strike zone$/;"	m	struct:__anon206	file:	access:public
__anon206::m_fFontYAdvance	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontYAdvance;          \/\/ Number of pixels to move the cursor for a line feed$/;"	m	struct:__anon206	file:	access:public
__anon207::m_Glyphs	gfx/fonts/xdk360_fonts.cpp	/^   GLYPH_ATTR m_Glyphs[1];         \/\/ Array of font strike uv's etc... NOTE: It's m_dwNumGlyphs in size$/;"	m	struct:__anon207	file:	access:public
__anon207::m_dwNumGlyphs	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwNumGlyphs;    \/\/ Size of font strike array (First entry is the unknown glyph)$/;"	m	struct:__anon207	file:	access:public
__anon208::m_pFontPixelShader	gfx/fonts/xdk360_fonts.cpp	/^   D3DPixelShader* m_pFontPixelShader;$/;"	m	struct:__anon208	file:	access:public
__anon208::m_pFontVertexDecl	gfx/fonts/xdk360_fonts.cpp	/^   D3DVertexDeclaration* m_pFontVertexDecl;$/;"	m	struct:__anon208	file:	access:public
__anon208::m_pFontVertexShader	gfx/fonts/xdk360_fonts.cpp	/^   D3DVertexShader* m_pFontVertexShader;$/;"	m	struct:__anon208	file:	access:public
__anon222::Coords	gfx/d3d9/d3d9.hpp	/^   struct Coords$/;"	s	struct:__anon222	access:public
__anon222::Coords::h	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
__anon222::Coords::w	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
__anon222::Coords::x	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
__anon222::Coords::y	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
__anon222::alpha_mod	gfx/d3d9/d3d9.hpp	/^   float alpha_mod;$/;"	m	struct:__anon222	access:public
__anon222::enabled	gfx/d3d9/d3d9.hpp	/^   bool enabled;$/;"	m	struct:__anon222	access:public
__anon222::fullscreen	gfx/d3d9/d3d9.hpp	/^   bool fullscreen;$/;"	m	struct:__anon222	access:public
__anon222::tex	gfx/d3d9/d3d9.hpp	/^   IDirect3DTexture9 *tex;$/;"	m	struct:__anon222	access:public
__anon222::tex_coords	gfx/d3d9/d3d9.hpp	/^   Coords tex_coords;$/;"	m	struct:__anon222	access:public
__anon222::tex_h	gfx/d3d9/d3d9.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:__anon222	access:public
__anon222::tex_w	gfx/d3d9/d3d9.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:__anon222	access:public
__anon222::vert_buf	gfx/d3d9/d3d9.hpp	/^   IDirect3DVertexBuffer9 *vert_buf;$/;"	m	struct:__anon222	access:public
__anon222::vert_coords	gfx/d3d9/d3d9.hpp	/^   Coords vert_coords;$/;"	m	struct:__anon222	access:public
__anon225::driver	gfx/vg.c	/^   const gfx_ctx_driver_t *driver;$/;"	m	struct:__anon225	file:	access:public
__anon225::font_driver	gfx/vg.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:__anon225	file:	access:public
__anon225::last_egl_image	gfx/vg.c	/^   EGLImageKHR last_egl_image;$/;"	m	struct:__anon225	file:	access:public
__anon225::mEglImageBuf	gfx/vg.c	/^   bool mEglImageBuf;$/;"	m	struct:__anon225	file:	access:public
__anon225::mFont	gfx/vg.c	/^   VGFont mFont;$/;"	m	struct:__anon225	file:	access:public
__anon225::mFontHeight	gfx/vg.c	/^   uint32_t mFontHeight;$/;"	m	struct:__anon225	file:	access:public
__anon225::mFontRenderer	gfx/vg.c	/^   void *mFontRenderer;$/;"	m	struct:__anon225	file:	access:public
__anon225::mFontsOn	gfx/vg.c	/^   bool mFontsOn;$/;"	m	struct:__anon225	file:	access:public
__anon225::mGlyphIndices	gfx/vg.c	/^   VGuint mGlyphIndices[1024];$/;"	m	struct:__anon225	file:	access:public
__anon225::mImage	gfx/vg.c	/^   VGImage mImage;$/;"	m	struct:__anon225	file:	access:public
__anon225::mKeepAspect	gfx/vg.c	/^   bool mKeepAspect;$/;"	m	struct:__anon225	file:	access:public
__anon225::mLastMsg	gfx/vg.c	/^   char *mLastMsg;$/;"	m	struct:__anon225	file:	access:public
__anon225::mMsgLength	gfx/vg.c	/^   VGuint mMsgLength;$/;"	m	struct:__anon225	file:	access:public
__anon225::mPaintBg	gfx/vg.c	/^   VGPaint mPaintBg;$/;"	m	struct:__anon225	file:	access:public
__anon225::mPaintFg	gfx/vg.c	/^   VGPaint mPaintFg;$/;"	m	struct:__anon225	file:	access:public
__anon225::mRenderHeight	gfx/vg.c	/^   unsigned mRenderHeight;$/;"	m	struct:__anon225	file:	access:public
__anon225::mRenderWidth	gfx/vg.c	/^   unsigned mRenderWidth;$/;"	m	struct:__anon225	file:	access:public
__anon225::mScreenAspect	gfx/vg.c	/^   float mScreenAspect;$/;"	m	struct:__anon225	file:	access:public
__anon225::mScreenHeight	gfx/vg.c	/^   uint32_t mScreenHeight;$/;"	m	struct:__anon225	file:	access:public
__anon225::mScreenWidth	gfx/vg.c	/^   uint32_t mScreenWidth;$/;"	m	struct:__anon225	file:	access:public
__anon225::mTexType	gfx/vg.c	/^   VGImageFormat mTexType;$/;"	m	struct:__anon225	file:	access:public
__anon225::mTextureHeight	gfx/vg.c	/^   unsigned mTextureHeight;$/;"	m	struct:__anon225	file:	access:public
__anon225::mTextureWidth	gfx/vg.c	/^   unsigned mTextureWidth;$/;"	m	struct:__anon225	file:	access:public
__anon225::mTransformMatrix	gfx/vg.c	/^   math_matrix_3x3 mTransformMatrix;$/;"	m	struct:__anon225	file:	access:public
__anon225::scissor	gfx/vg.c	/^   VGint scissor[4];$/;"	m	struct:__anon225	file:	access:public
__anon225::should_resize	gfx/vg.c	/^   bool should_resize;$/;"	m	struct:__anon225	file:	access:public
__anon225::x1	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
__anon225::x2	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
__anon225::y1	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
__anon225::y2	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
__anon226::id	gfx/rpng/rpng.c	/^   const char *id;$/;"	m	struct:__anon226	file:	access:public
__anon226::type	gfx/rpng/rpng.c	/^   enum png_chunk_type type;$/;"	m	struct:__anon226	typeref:enum:__anon226::png_chunk_type	file:	access:public
__anon247::cond	gx/gx_audio.c	/^   lwpq_t cond;$/;"	m	struct:__anon247	file:	access:public
__anon247::data	gx/gx_audio.c	/^   uint32_t data[BLOCKS][CHUNK_FRAMES];$/;"	m	struct:__anon247	file:	access:public
__anon247::dma_busy	gx/gx_audio.c	/^   volatile unsigned dma_busy;$/;"	m	struct:__anon247	file:	access:public
__anon247::dma_next	gx/gx_audio.c	/^   volatile unsigned dma_next;$/;"	m	struct:__anon247	file:	access:public
__anon247::dma_write	gx/gx_audio.c	/^   volatile unsigned dma_write;$/;"	m	struct:__anon247	file:	access:public
__anon247::nonblock	gx/gx_audio.c	/^   bool nonblock;$/;"	m	struct:__anon247	file:	access:public
__anon247::write_ptr	gx/gx_audio.c	/^   size_t write_ptr;$/;"	m	struct:__anon247	file:	access:public
__anon249::data	gx/gx_video.c	/^   uint32_t *data; \/\/ needs to be resizable$/;"	m	struct:__anon249	file:	access:public
__anon249::obj	gx/gx_video.c	/^   GXTexObj obj;$/;"	m	struct:__anon249	file:	access:public
__anon250::data	gx/gx_video.c	/^   uint32_t data[240 * 200];$/;"	m	struct:__anon250	file:	access:public
__anon250::obj	gx/gx_video.c	/^   GXTexObj obj;$/;"	m	struct:__anon250	file:	access:public
__anon251::desc	core_info.h	/^   char *desc;$/;"	m	struct:__anon251	access:public
__anon251::missing	core_info.h	/^   bool missing; \/\/ Set once to avoid opening the same file several times.$/;"	m	struct:__anon251	access:public
__anon251::path	core_info.h	/^   char *path;$/;"	m	struct:__anon251	access:public
__anon252::authors	core_info.h	/^   char *authors;$/;"	m	struct:__anon252	access:public
__anon252::authors_list	core_info.h	/^   struct string_list *authors_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
__anon252::data	core_info.h	/^   config_file_t *data;$/;"	m	struct:__anon252	access:public
__anon252::display_name	core_info.h	/^   char *display_name;$/;"	m	struct:__anon252	access:public
__anon252::firmware	core_info.h	/^   core_info_firmware_t *firmware;$/;"	m	struct:__anon252	access:public
__anon252::firmware_count	core_info.h	/^   size_t firmware_count;$/;"	m	struct:__anon252	access:public
__anon252::path	core_info.h	/^   char *path;$/;"	m	struct:__anon252	access:public
__anon252::permissions	core_info.h	/^   char *permissions;$/;"	m	struct:__anon252	access:public
__anon252::permissions_list	core_info.h	/^   struct string_list *permissions_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
__anon252::supported_extensions	core_info.h	/^   char *supported_extensions;$/;"	m	struct:__anon252	access:public
__anon252::supported_extensions_list	core_info.h	/^   struct string_list *supported_extensions_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
__anon253::all_ext	core_info.h	/^   char *all_ext;$/;"	m	struct:__anon253	access:public
__anon253::count	core_info.h	/^   size_t count;$/;"	m	struct:__anon253	access:public
__anon253::list	core_info.h	/^   core_info_t *list;$/;"	m	struct:__anon253	access:public
__anon25::__anon26::buffer	frontend/menu/menu_common.h	/^      const char **buffer;$/;"	m	struct:__anon25::__anon26	access:public
__anon25::__anon26::display	frontend/menu/menu_common.h	/^      bool display;$/;"	m	struct:__anon25::__anon26	access:public
__anon25::__anon26::label	frontend/menu/menu_common.h	/^      const char *label;$/;"	m	struct:__anon25::__anon26	access:public
__anon25::alloc_font	frontend/menu/menu_common.h	/^   bool alloc_font;$/;"	m	struct:__anon25	access:public
__anon25::base_path	frontend/menu/menu_common.h	/^   char base_path[PATH_MAX];$/;"	m	struct:__anon25	access:public
__anon25::binds	frontend/menu/menu_common.h	/^   struct rgui_bind_state binds;$/;"	m	struct:__anon25	typeref:struct:__anon25::rgui_bind_state	access:public
__anon25::core_info	frontend/menu/menu_common.h	/^   core_info_list_t *core_info;$/;"	m	struct:__anon25	access:public
__anon25::current_pad	frontend/menu/menu_common.h	/^   unsigned current_pad;$/;"	m	struct:__anon25	access:public
__anon25::default_cgp	frontend/menu/menu_common.h	/^   char default_cgp[PATH_MAX];$/;"	m	struct:__anon25	access:public
__anon25::default_glslp	frontend/menu/menu_common.h	/^   char default_glslp[PATH_MAX];$/;"	m	struct:__anon25	access:public
__anon25::defer_core	frontend/menu/menu_common.h	/^   bool defer_core;$/;"	m	struct:__anon25	access:public
__anon25::deferred_path	frontend/menu/menu_common.h	/^   char deferred_path[PATH_MAX];$/;"	m	struct:__anon25	access:public
__anon25::delay_count	frontend/menu/menu_common.h	/^   unsigned delay_count;$/;"	m	struct:__anon25	access:public
__anon25::delay_timer	frontend/menu/menu_common.h	/^   unsigned delay_timer;$/;"	m	struct:__anon25	access:public
__anon25::do_held	frontend/menu/menu_common.h	/^   bool do_held;$/;"	m	struct:__anon25	access:public
__anon25::font	frontend/menu/menu_common.h	/^   const uint8_t *font;$/;"	m	struct:__anon25	access:public
__anon25::frame_buf	frontend/menu/menu_common.h	/^   uint16_t *frame_buf;$/;"	m	struct:__anon25	access:public
__anon25::frame_buf_pitch	frontend/menu/menu_common.h	/^   size_t frame_buf_pitch;$/;"	m	struct:__anon25	access:public
__anon25::frame_buf_show	frontend/menu/menu_common.h	/^   bool frame_buf_show;$/;"	m	struct:__anon25	access:public
__anon25::height	frontend/menu/menu_common.h	/^   unsigned height;$/;"	m	struct:__anon25	access:public
__anon25::history	frontend/menu/menu_common.h	/^   rom_history_t *history;$/;"	m	struct:__anon25	access:public
__anon25::info	frontend/menu/menu_common.h	/^   struct retro_system_info info;$/;"	m	struct:__anon25	typeref:struct:__anon25::retro_system_info	access:public
__anon25::keyboard	frontend/menu/menu_common.h	/^   } keyboard;$/;"	m	struct:__anon25	typeref:struct:__anon25::__anon26	access:public
__anon25::last_time	frontend/menu/menu_common.h	/^   retro_time_t last_time; \/\/ Used to throttle RGUI in case VSync is broken.$/;"	m	struct:__anon25	access:public
__anon25::libretro_dir	frontend/menu/menu_common.h	/^   char libretro_dir[PATH_MAX];$/;"	m	struct:__anon25	access:public
__anon25::load_no_rom	frontend/menu/menu_common.h	/^   bool load_no_rom;$/;"	m	struct:__anon25	access:public
__anon25::menu_stack	frontend/menu/menu_common.h	/^   file_list_t *menu_stack;$/;"	m	struct:__anon25	access:public
__anon25::msg_force	frontend/menu/menu_common.h	/^   bool msg_force;$/;"	m	struct:__anon25	access:public
__anon25::need_refresh	frontend/menu/menu_common.h	/^   bool need_refresh;$/;"	m	struct:__anon25	access:public
__anon25::old_input_state	frontend/menu/menu_common.h	/^   uint64_t old_input_state;$/;"	m	struct:__anon25	access:public
__anon25::push_start_screen	frontend/menu/menu_common.h	/^   bool push_start_screen;$/;"	m	struct:__anon25	access:public
__anon25::scroll_accel	frontend/menu/menu_common.h	/^   unsigned scroll_accel;$/;"	m	struct:__anon25	access:public
__anon25::scroll_indices	frontend/menu/menu_common.h	/^   size_t scroll_indices[2 * (26 + 2) + 1];$/;"	m	struct:__anon25	access:public
__anon25::scroll_indices_size	frontend/menu/menu_common.h	/^   unsigned scroll_indices_size;$/;"	m	struct:__anon25	access:public
__anon25::selection_buf	frontend/menu/menu_common.h	/^   file_list_t *selection_buf;$/;"	m	struct:__anon25	access:public
__anon25::selection_ptr	frontend/menu/menu_common.h	/^   size_t selection_ptr;$/;"	m	struct:__anon25	access:public
__anon25::shader	frontend/menu/menu_common.h	/^   struct gfx_shader shader;$/;"	m	struct:__anon25	typeref:struct:__anon25::gfx_shader	access:public
__anon25::trigger_state	frontend/menu/menu_common.h	/^   uint64_t trigger_state;$/;"	m	struct:__anon25	access:public
__anon25::width	frontend/menu/menu_common.h	/^   unsigned width;$/;"	m	struct:__anon25	access:public
__anon28::bank	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint bank;$/;"	m	struct:__anon28	file:	access:public
__anon28::id	ps3/rgl/src/rgl_ps3.cpp	/^   int id;$/;"	m	struct:__anon28	file:	access:public
__anon28::offset	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint offset;$/;"	m	struct:__anon28	file:	access:public
__anon28::pitch	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint pitch;       \/\/ in bytes$/;"	m	struct:__anon28	file:	access:public
__anon28::size	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint size;        \/\/ 0 size indicates an unused tile$/;"	m	struct:__anon28	file:	access:public
__anon29::region	ps3/rgl/src/rgl_ps3.cpp	/^   rglTiledRegion region[RGLGCM_MAX_TILED_REGIONS];$/;"	m	struct:__anon29	file:	access:public
__anon2::buffer	xenon/xenon360_audio.c	/^   uint32_t buffer[2048];$/;"	m	struct:__anon2	file:	access:public
__anon2::nonblock	xenon/xenon360_audio.c	/^   bool nonblock;$/;"	m	struct:__anon2	file:	access:public
__anon30::height	ps3/rgl/src/rgl_ps3.cpp	/^   int height;$/;"	m	struct:__anon30	file:	access:public
__anon30::hwMode	ps3/rgl/src/rgl_ps3.cpp	/^   unsigned char hwMode;$/;"	m	struct:__anon30	file:	access:public
__anon30::width	ps3/rgl/src/rgl_ps3.cpp	/^   int width;$/;"	m	struct:__anon30	file:	access:public
__anon31::consttab	ps3/rgl/src/rgl_cg.h	/^   const char* consttab;$/;"	m	struct:__anon31	access:public
__anon31::consttabSize	ps3/rgl/src/rgl_cg.h	/^   size_t consttabSize;$/;"	m	struct:__anon31	access:public
__anon31::elfFile	ps3/rgl/src/rgl_cg.h	/^   const char* elfFile;$/;"	m	struct:__anon31	access:public
__anon31::elfFileSize	ps3/rgl/src/rgl_cg.h	/^   size_t elfFileSize;$/;"	m	struct:__anon31	access:public
__anon31::shadertab	ps3/rgl/src/rgl_cg.h	/^   const char* shadertab;$/;"	m	struct:__anon31	access:public
__anon31::shadertabSize	ps3/rgl/src/rgl_cg.h	/^   size_t shadertabSize;$/;"	m	struct:__anon31	access:public
__anon31::strtab	ps3/rgl/src/rgl_cg.h	/^   const char* strtab;$/;"	m	struct:__anon31	access:public
__anon31::strtabSize	ps3/rgl/src/rgl_cg.h	/^   size_t strtabSize;$/;"	m	struct:__anon31	access:public
__anon31::symbolCount	ps3/rgl/src/rgl_cg.h	/^   size_t symbolCount;$/;"	m	struct:__anon31	access:public
__anon31::symbolSize	ps3/rgl/src/rgl_cg.h	/^   size_t symbolSize;$/;"	m	struct:__anon31	access:public
__anon31::symbolstrtab	ps3/rgl/src/rgl_cg.h	/^   const char *symbolstrtab;$/;"	m	struct:__anon31	access:public
__anon31::symtab	ps3/rgl/src/rgl_cg.h	/^   const char *symtab;$/;"	m	struct:__anon31	access:public
__anon32::index	ps3/rgl/src/rgl_cg.h	/^   int index;$/;"	m	struct:__anon32	access:public
__anon32::paramtab	ps3/rgl/src/rgl_cg.h	/^   const char *paramtab;$/;"	m	struct:__anon32	access:public
__anon32::paramtabSize	ps3/rgl/src/rgl_cg.h	/^   size_t paramtabSize;$/;"	m	struct:__anon32	access:public
__anon32::texttab	ps3/rgl/src/rgl_cg.h	/^   const char *texttab;$/;"	m	struct:__anon32	access:public
__anon32::texttabSize	ps3/rgl/src/rgl_cg.h	/^   size_t texttabSize;$/;"	m	struct:__anon32	access:public
__anon35::foreign	ps3/rgl/src/libelf/readelf.h	/^      unsigned char foreign;$/;"	m	struct:__anon35	access:public
__anon35::name	ps3/rgl/src/libelf/readelf.h	/^      const char* name;$/;"	m	struct:__anon35	access:public
__anon35::resolved	ps3/rgl/src/libelf/readelf.h	/^      unsigned char resolved;$/;"	m	struct:__anon35	access:public
__anon35::section	ps3/rgl/src/libelf/readelf.h	/^      int section;$/;"	m	struct:__anon35	access:public
__anon35::size	ps3/rgl/src/libelf/readelf.h	/^      unsigned int size;$/;"	m	struct:__anon35	access:public
__anon35::vma	ps3/rgl/src/libelf/readelf.h	/^      unsigned int vma;$/;"	m	struct:__anon35	access:public
__anon36::mask	ps3/rgl/src/libelf/readelf.h	/^      unsigned int mask;$/;"	m	struct:__anon36	access:public
__anon36::position	ps3/rgl/src/libelf/readelf.h	/^      unsigned int position;$/;"	m	struct:__anon36	access:public
__anon36::relative	ps3/rgl/src/libelf/readelf.h	/^      unsigned int relative;$/;"	m	struct:__anon36	access:public
__anon36::shift	ps3/rgl/src/libelf/readelf.h	/^      unsigned int shift;$/;"	m	struct:__anon36	access:public
__anon36::size	ps3/rgl/src/libelf/readelf.h	/^      unsigned int size;$/;"	m	struct:__anon36	access:public
__anon37::e_ehsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_ehsize;$/;"	m	struct:__anon37	access:public
__anon37::e_entry	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_entry;$/;"	m	struct:__anon37	access:public
__anon37::e_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_flags;$/;"	m	struct:__anon37	access:public
__anon37::e_ident	ps3/rgl/src/libelf/elf.h	/^   unsigned char	e_ident[EI_NIDENT];$/;"	m	struct:__anon37	access:public
__anon37::e_machine	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_machine;$/;"	m	struct:__anon37	access:public
__anon37::e_phentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phentsize;$/;"	m	struct:__anon37	access:public
__anon37::e_phnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phnum;$/;"	m	struct:__anon37	access:public
__anon37::e_phoff	ps3/rgl/src/libelf/elf.h	/^   int32_t	e_phoff;$/;"	m	struct:__anon37	access:public
__anon37::e_shentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shentsize;$/;"	m	struct:__anon37	access:public
__anon37::e_shnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shnum;$/;"	m	struct:__anon37	access:public
__anon37::e_shoff	ps3/rgl/src/libelf/elf.h	/^   int32_t	e_shoff;$/;"	m	struct:__anon37	access:public
__anon37::e_shstrndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shstrndx;$/;"	m	struct:__anon37	access:public
__anon37::e_type	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_type;$/;"	m	struct:__anon37	access:public
__anon37::e_version	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_version;$/;"	m	struct:__anon37	access:public
__anon38::e_ehsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_ehsize;$/;"	m	struct:__anon38	access:public
__anon38::e_entry	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_entry;$/;"	m	struct:__anon38	access:public
__anon38::e_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_flags;$/;"	m	struct:__anon38	access:public
__anon38::e_ident	ps3/rgl/src/libelf/elf.h	/^   unsigned char	e_ident[EI_NIDENT];$/;"	m	struct:__anon38	access:public
__anon38::e_machine	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_machine;$/;"	m	struct:__anon38	access:public
__anon38::e_phentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phentsize;$/;"	m	struct:__anon38	access:public
__anon38::e_phnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phnum;$/;"	m	struct:__anon38	access:public
__anon38::e_phoff	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_phoff;$/;"	m	struct:__anon38	access:public
__anon38::e_shentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shentsize;$/;"	m	struct:__anon38	access:public
__anon38::e_shnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shnum;$/;"	m	struct:__anon38	access:public
__anon38::e_shoff	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_shoff;$/;"	m	struct:__anon38	access:public
__anon38::e_shstrndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shstrndx;$/;"	m	struct:__anon38	access:public
__anon38::e_type	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_type;$/;"	m	struct:__anon38	access:public
__anon38::e_version	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_version;$/;"	m	struct:__anon38	access:public
__anon39::p_align	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_align;$/;"	m	struct:__anon39	access:public
__anon39::p_filesz	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_filesz;$/;"	m	struct:__anon39	access:public
__anon39::p_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_flags;$/;"	m	struct:__anon39	access:public
__anon39::p_memsz	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_memsz;$/;"	m	struct:__anon39	access:public
__anon39::p_offset	ps3/rgl/src/libelf/elf.h	/^   int32_t	p_offset;$/;"	m	struct:__anon39	access:public
__anon39::p_paddr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_paddr;$/;"	m	struct:__anon39	access:public
__anon39::p_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_type;$/;"	m	struct:__anon39	access:public
__anon39::p_vaddr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_vaddr;$/;"	m	struct:__anon39	access:public
__anon3::sh_addr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	sh_addr;	\/* address *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_addralign	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_addralign;	\/* address alignment *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_entsize	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_entsize;	\/* section entry size *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_flags;	\/* flags *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_info;	\/* extra information *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_link	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_link;	\/* section header table index link *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_name	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_name;	\/* name - index into section header$/;"	m	struct:__anon3	access:public
__anon3::sh_offset	wii/app_booter/elf_abi.h	/^	Elf32_Off	sh_offset;	\/* file offset *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_size	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_size;	\/* section size *\/$/;"	m	struct:__anon3	access:public
__anon3::sh_type	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_type;	\/* type *\/$/;"	m	struct:__anon3	access:public
__anon40::p_align	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_align;$/;"	m	struct:__anon40	access:public
__anon40::p_filesz	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_filesz;$/;"	m	struct:__anon40	access:public
__anon40::p_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_flags;$/;"	m	struct:__anon40	access:public
__anon40::p_memsz	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_memsz;$/;"	m	struct:__anon40	access:public
__anon40::p_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_offset;$/;"	m	struct:__anon40	access:public
__anon40::p_paddr	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_paddr;$/;"	m	struct:__anon40	access:public
__anon40::p_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_type;$/;"	m	struct:__anon40	access:public
__anon40::p_vaddr	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_vaddr;$/;"	m	struct:__anon40	access:public
__anon41::sh_addr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_addr;$/;"	m	struct:__anon41	access:public
__anon41::sh_addralign	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_addralign;$/;"	m	struct:__anon41	access:public
__anon41::sh_entsize	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_entsize;$/;"	m	struct:__anon41	access:public
__anon41::sh_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_flags;$/;"	m	struct:__anon41	access:public
__anon41::sh_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_info;$/;"	m	struct:__anon41	access:public
__anon41::sh_link	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_link;$/;"	m	struct:__anon41	access:public
__anon41::sh_name	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_name;$/;"	m	struct:__anon41	access:public
__anon41::sh_offset	ps3/rgl/src/libelf/elf.h	/^   int32_t	sh_offset;$/;"	m	struct:__anon41	access:public
__anon41::sh_size	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_size;$/;"	m	struct:__anon41	access:public
__anon41::sh_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_type;$/;"	m	struct:__anon41	access:public
__anon42::st_info	ps3/rgl/src/libelf/elf.h	/^   unsigned char	st_info;$/;"	m	struct:__anon42	access:public
__anon42::st_name	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_name;$/;"	m	struct:__anon42	access:public
__anon42::st_other	ps3/rgl/src/libelf/elf.h	/^   unsigned char	st_other;$/;"	m	struct:__anon42	access:public
__anon42::st_shndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	st_shndx;$/;"	m	struct:__anon42	access:public
__anon42::st_size	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_size;$/;"	m	struct:__anon42	access:public
__anon42::st_value	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_value;$/;"	m	struct:__anon42	access:public
__anon43::r_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon43	access:public
__anon43::r_offset	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon43	access:public
__anon44::r_info	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon44	access:public
__anon44::r_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon44	access:public
__anon45::r_addend	ps3/rgl/src/libelf/elf.h	/^   int32_t	r_addend;		\/* Addend *\/$/;"	m	struct:__anon45	access:public
__anon45::r_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon45	access:public
__anon45::r_offset	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon45	access:public
__anon46::r_addend	ps3/rgl/src/libelf/elf.h	/^   int64_t	r_addend;		\/* Addend *\/$/;"	m	struct:__anon46	access:public
__anon46::r_info	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon46	access:public
__anon46::r_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon46	access:public
__anon47::name	ps3/rgl/src/rgl_ps3_cg.cpp	/^   const char *name;$/;"	m	struct:__anon47	file:	access:public
__anon47::resIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^   int resIndex;$/;"	m	struct:__anon47	file:	access:public
__anon48::_defaultValuesIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<unsigned short> _defaultValuesIndices;$/;"	m	struct:__anon48	file:	access:public
__anon48::_dimensions	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<short> _dimensions;$/;"	m	struct:__anon48	file:	access:public
__anon48::_elfDefaultsIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<unsigned short> _elfDefaultsIndices;$/;"	m	struct:__anon48	file:	access:public
__anon48::_resources	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<short> _resources;$/;"	m	struct:__anon48	file:	access:public
__anon48::_semanticIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<CgParameterSemantic> _semanticIndices;$/;"	m	struct:__anon48	file:	access:public
__anon49::bpp	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint bpp;		\/\/ bytes per pixel, derived from format$/;"	m	struct:__anon49	access:public
__anon49::dataId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dataId;		\/\/ id to get address and offset$/;"	m	struct:__anon49	access:public
__anon49::dataIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dataIdOffset;$/;"	m	struct:__anon49	access:public
__anon49::format	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum format;	\/\/ e.g. RGLGCM_ARGB8$/;"	m	struct:__anon49	access:public
__anon49::height	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint width, height;$/;"	m	struct:__anon49	access:public
__anon49::pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pitch;	\/\/ 0 if swizzled$/;"	m	struct:__anon49	access:public
__anon49::pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;	\/\/ type of memory$/;"	m	struct:__anon49	access:public
__anon49::source	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum source;	\/\/ device, texture, renderbuffer$/;"	m	struct:__anon49	access:public
__anon49::width	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint width, height;$/;"	m	struct:__anon49	access:public
__anon4::r_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	r_info;		\/* symbol table index and type *\/$/;"	m	struct:__anon4	access:public
__anon4::r_offset	wii/app_booter/elf_abi.h	/^	Elf32_Addr	r_offset;	\/* offset of relocation *\/$/;"	m	struct:__anon4	access:public
__anon50::RescColorBuffersId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescColorBuffersId;$/;"	m	struct:__anon50	access:public
__anon50::RescFragmentShaderId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescFragmentShaderId;$/;"	m	struct:__anon50	access:public
__anon50::RescVertexArrayId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint RescVertexArrayId;$/;"	m	struct:__anon50	access:public
__anon50::TVFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum TVFormat;$/;"	m	struct:__anon50	access:public
__anon50::TVStandard	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum TVStandard;$/;"	m	struct:__anon50	access:public
__anon50::color	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSurface color[3];$/;"	m	struct:__anon50	access:public
__anon50::deviceType	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum deviceType;$/;"	m	struct:__anon50	access:public
__anon50::drawBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint drawBuffer;	\/\/ 0, 1, or 2$/;"	m	struct:__anon50	access:public
__anon50::ms	ps3/rgl/src/include/rgl-typedefs.h	/^   const MODESTRUC *ms;$/;"	m	struct:__anon50	access:public
__anon50::rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:__anon50	access:public
__anon50::scanBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint scanBuffer;	\/\/ 0, 1, or 2$/;"	m	struct:__anon50	access:public
__anon50::semaValue	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint semaValue;$/;"	m	struct:__anon50	access:public
__anon50::setOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean setOffset;$/;"	m	struct:__anon50	access:public
__anon50::signal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean signal;$/;"	m	struct:__anon50	access:public
__anon50::skipFirstVsync	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean skipFirstVsync;$/;"	m	struct:__anon50	access:public
__anon50::swapFifoRef	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint swapFifoRef;$/;"	m	struct:__anon50	access:public
__anon50::swapFifoRef2	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint swapFifoRef2; \/\/ Added for supporting Triple buffering [RSTENSON]$/;"	m	struct:__anon50	access:public
__anon50::syncMethod	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int syncMethod;$/;"	m	struct:__anon50	access:public
__anon50::vsync	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean vsync;$/;"	m	struct:__anon50	access:public
__anon51::SET_TEXTURE_ADDRESS	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_ADDRESS; \/\/ wrap, signed and unsigned remap control, gamma, zfunc$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_CONTROL0	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL0; \/\/ enable, lod clamp, aniso, image field, alpha kill, colorkey$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_CONTROL1	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL1; \/\/ remap and crossbar setup.$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_CONTROL3	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_CONTROL3; \/\/ pitch and depth$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_FILTER	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_FILTER; \/\/ lod bias, convol filter, min\/mag filter, component signedness$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_FORMAT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_FORMAT; \/\/ which dma ctx, [123]D, border source, mem layout, mip levels$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_IMAGE_RECT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_IMAGE_RECT; \/\/ texture width\/height$/;"	m	struct:__anon51	access:public
__anon51::SET_TEXTURE_OFFSET	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SET_TEXTURE_OFFSET; \/\/ gpu addr (from dma ctx)$/;"	m	struct:__anon51	access:public
__anon52::baseDepth	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseDepth;$/;"	m	struct:__anon52	access:public
__anon52::baseHeight	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseHeight;$/;"	m	struct:__anon52	access:public
__anon52::baseWidth	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseWidth;$/;"	m	struct:__anon52	access:public
__anon52::faces	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		faces;$/;"	m	struct:__anon52	access:public
__anon52::internalFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum 	internalFormat;$/;"	m	struct:__anon52	access:public
__anon52::levels	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		levels;$/;"	m	struct:__anon52	access:public
__anon52::pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		pitch;$/;"	m	struct:__anon52	access:public
__anon52::pixelBits	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		pixelBits;$/;"	m	struct:__anon52	access:public
__anon53::gcmMethods	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureMethodParams 	gcmMethods;$/;"	m	struct:__anon53	access:public
__anon53::gcmTexture	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmTexture  		gcmTexture;$/;"	m	struct:__anon53	access:public
__anon53::gpuAddressId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuAddressId;$/;"	m	struct:__anon53	access:public
__anon53::gpuAddressIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuAddressIdOffset;$/;"	m	struct:__anon53	access:public
__anon53::gpuLayout	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureLayout gpuLayout;$/;"	m	struct:__anon53	access:public
__anon53::gpuSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuSize;$/;"	m	struct:__anon53	access:public
__anon53::methods	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureMethods 		methods; \/\/ [RSTENSON] soon to be legacy$/;"	m	struct:__anon53	access:public
__anon53::pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;$/;"	m	struct:__anon53	access:public
__anon54::Get	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Get;                     \/* get offset, read only            0044-0047*\/$/;"	m	struct:__anon54	access:public
__anon54::Ignored00	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored00[0x010];$/;"	m	struct:__anon54	access:public
__anon54::Ignored01	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored01[0x1];$/;"	m	struct:__anon54	access:public
__anon54::Ignored02	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored02[0x2];$/;"	m	struct:__anon54	access:public
__anon54::Ignored03	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Ignored03[0x7e4];$/;"	m	struct:__anon54	access:public
__anon54::Put	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Put;                     \/* put offset, write only           0040-0043*\/$/;"	m	struct:__anon54	access:public
__anon54::Reference	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint Reference;               \/* reference value, read only       0048-004b*\/$/;"	m	struct:__anon54	access:public
__anon54::SetContextDmaSemaphore	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetContextDmaSemaphore;  \/* set sema ctxdma, write only      0060-0063*\/$/;"	m	struct:__anon54	access:public
__anon54::SetReference	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetReference;            \/* set reference value              0050-0053*\/$/;"	m	struct:__anon54	access:public
__anon54::SetSemaphoreAcquire	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreAcquire;     \/* set sema acquire, write only     0068-006b*\/$/;"	m	struct:__anon54	access:public
__anon54::SetSemaphoreOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreOffset;      \/* set sema offset, write only      0064-0067*\/$/;"	m	struct:__anon54	access:public
__anon54::SetSemaphoreRelease	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint SetSemaphoreRelease;     \/* set sema release, write only     006c-006f*\/$/;"	m	struct:__anon54	access:public
__anon54::TopLevelGet	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint TopLevelGet;             \/* top level get offset, read only  0054-0057*\/$/;"	m	struct:__anon54	access:public
__anon55::bufferId	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int bufferId;		\/\/ allocated Id$/;"	m	struct:__anon55	access:public
__anon55::bufferSize	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int bufferSize;$/;"	m	struct:__anon55	access:public
__anon55::mapAccess	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum mapAccess;	\/\/ READ_ONLY, WRITE_ONLY, or READ_WRITE$/;"	m	struct:__anon55	access:public
__anon55::mapCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint mapCount;	\/\/ map reference count$/;"	m	struct:__anon55	access:public
__anon55::pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int pitch;$/;"	m	struct:__anon55	access:public
__anon55::pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;		\/\/ LINEAR, or NONE$/;"	m	struct:__anon55	access:public
__anon59::A	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
__anon59::B	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
__anon59::G	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
__anon59::R	ps3/rgl/include/RGL/Types.h	/^      GLfloat	R, G, B, A;$/;"	m	struct:__anon59	access:public
__anon5::r_addend	wii/app_booter/elf_abi.h	/^	Elf32_Sword	r_addend;$/;"	m	struct:__anon5	access:public
__anon5::r_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	r_info;		\/* symbol table index and type *\/$/;"	m	struct:__anon5	access:public
__anon5::r_offset	wii/app_booter/elf_abi.h	/^	Elf32_Addr	r_offset;	\/* offset of relocation *\/$/;"	m	struct:__anon5	access:public
__anon60::X	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
__anon60::XSize	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
__anon60::Y	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
__anon60::YSize	ps3/rgl/include/RGL/Types.h	/^      int	X, Y, XSize, YSize;$/;"	m	struct:__anon60	access:public
__anon62::data	ps3/rgl/include/RGL/Types.h	/^      void* data;$/;"	m	struct:__anon62	access:public
__anon62::depth	ps3/rgl/include/RGL/Types.h	/^      GLsizei depth;$/;"	m	struct:__anon62	access:public
__anon62::format	ps3/rgl/include/RGL/Types.h	/^      GLenum format;$/;"	m	struct:__anon62	access:public
__anon62::height	ps3/rgl/include/RGL/Types.h	/^      GLsizei height;$/;"	m	struct:__anon62	access:public
__anon62::type	ps3/rgl/include/RGL/Types.h	/^      GLenum type;$/;"	m	struct:__anon62	access:public
__anon62::width	ps3/rgl/include/RGL/Types.h	/^      GLsizei width;$/;"	m	struct:__anon62	access:public
__anon62::xstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride;$/;"	m	struct:__anon62	access:public
__anon62::ystride	ps3/rgl/include/RGL/Types.h	/^      GLsizei ystride;$/;"	m	struct:__anon62	access:public
__anon62::zstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei zstride;$/;"	m	struct:__anon62	access:public
__anon63::borderColor	ps3/rgl/include/RGL/Types.h	/^      rglColorRGBAf borderColor;$/;"	m	struct:__anon63	access:public
__anon63::compareFunc	ps3/rgl/include/RGL/Types.h	/^      GLenum compareFunc;$/;"	m	struct:__anon63	access:public
__anon63::compareMode	ps3/rgl/include/RGL/Types.h	/^      GLenum compareMode;$/;"	m	struct:__anon63	access:public
__anon63::framebuffers	ps3/rgl/include/RGL/Types.h	/^      RGL::Vector<rglFramebuffer *> framebuffers;$/;"	m	struct:__anon63	access:public
__anon63::gammaRemap	ps3/rgl/include/RGL/Types.h	/^      GLuint gammaRemap;$/;"	m	struct:__anon63	access:public
__anon63::image	ps3/rgl/include/RGL/Types.h	/^      rglImage*	image;$/;"	m	struct:__anon63	access:public
__anon63::imageCount	ps3/rgl/include/RGL/Types.h	/^      GLuint		imageCount;$/;"	m	struct:__anon63	access:public
__anon63::isComplete	ps3/rgl/include/RGL/Types.h	/^      GLboolean   isComplete;$/;"	m	struct:__anon63	access:public
__anon63::isRenderTarget	ps3/rgl/include/RGL/Types.h	/^      GLboolean isRenderTarget;$/;"	m	struct:__anon63	access:public
__anon63::lodBias	ps3/rgl/include/RGL/Types.h	/^      GLfloat lodBias;$/;"	m	struct:__anon63	access:public
__anon63::magFilter	ps3/rgl/include/RGL/Types.h	/^      GLuint magFilter;$/;"	m	struct:__anon63	access:public
__anon63::maxAnisotropy	ps3/rgl/include/RGL/Types.h	/^      GLfloat maxAnisotropy;$/;"	m	struct:__anon63	access:public
__anon63::maxLevel	ps3/rgl/include/RGL/Types.h	/^      GLuint maxLevel;$/;"	m	struct:__anon63	access:public
__anon63::maxLod	ps3/rgl/include/RGL/Types.h	/^      GLfloat maxLod;$/;"	m	struct:__anon63	access:public
__anon63::minFilter	ps3/rgl/include/RGL/Types.h	/^      GLuint minFilter;$/;"	m	struct:__anon63	access:public
__anon63::minLod	ps3/rgl/include/RGL/Types.h	/^      GLfloat minLod;$/;"	m	struct:__anon63	access:public
__anon63::offset	ps3/rgl/include/RGL/Types.h	/^      intptr_t offset;$/;"	m	struct:__anon63	access:public
__anon63::platformTexture	ps3/rgl/include/RGL/Types.h	/^      void * platformTexture[]; \/\/ C99 flexible array member$/;"	m	struct:__anon63	access:public
__anon63::referenceBuffer	ps3/rgl/include/RGL/Types.h	/^      rglBufferObject *referenceBuffer;$/;"	m	struct:__anon63	access:public
__anon63::revalidate	ps3/rgl/include/RGL/Types.h	/^      GLuint revalidate;$/;"	m	struct:__anon63	access:public
__anon63::target	ps3/rgl/include/RGL/Types.h	/^      GLuint target;$/;"	m	struct:__anon63	access:public
__anon63::usage	ps3/rgl/include/RGL/Types.h	/^      GLenum usage;$/;"	m	struct:__anon63	access:public
__anon63::vertexEnable	ps3/rgl/include/RGL/Types.h	/^      GLboolean vertexEnable;$/;"	m	struct:__anon63	access:public
__anon63::wrapR	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapR;$/;"	m	struct:__anon63	access:public
__anon63::wrapS	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapS;$/;"	m	struct:__anon63	access:public
__anon63::wrapT	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapT;$/;"	m	struct:__anon63	access:public
__anon64::isSet	ps3/rgl/include/RGL/Types.h	/^      GLboolean isSet;$/;"	m	struct:__anon64	access:public
__anon64::platformFenceObject	ps3/rgl/include/RGL/Types.h	/^      void* platformFenceObject[];$/;"	m	struct:__anon64	access:public
__anon65::bound2D	ps3/rgl/include/RGL/Types.h	/^      GLuint		bound2D;$/;"	m	struct:__anon65	access:public
__anon65::currentTexture	ps3/rgl/include/RGL/Types.h	/^      rglTexture* currentTexture;$/;"	m	struct:__anon65	access:public
__anon65::default2D	ps3/rgl/include/RGL/Types.h	/^      rglTexture*	default2D;$/;"	m	struct:__anon65	access:public
__anon65::enable2D	ps3/rgl/include/RGL/Types.h	/^      GLboolean	enable2D;$/;"	m	struct:__anon65	access:public
__anon65::fragmentTarget	ps3/rgl/include/RGL/Types.h	/^      GLenum      fragmentTarget;$/;"	m	struct:__anon65	access:public
__anon65::lodBias	ps3/rgl/include/RGL/Types.h	/^      GLfloat		lodBias;$/;"	m	struct:__anon65	access:public
__anon67::attribXferOffset	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferOffset[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon67	access:public
__anon67::attribXferSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferSize[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon67	access:public
__anon67::attribXferTotalSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferTotalSize;$/;"	m	struct:__anon67	access:public
__anon67::firstVertex	ps3/rgl/include/RGL/Types.h	/^      GLint	firstVertex;$/;"	m	struct:__anon67	access:public
__anon67::indexCount	ps3/rgl/include/RGL/Types.h	/^      GLsizei	indexCount;$/;"	m	struct:__anon67	access:public
__anon67::indexMax	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexMax;		\/\/ 0==glDrawElements; 0!=glDrawRangeElements$/;"	m	struct:__anon67	access:public
__anon67::indexMin	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexMin;$/;"	m	struct:__anon67	access:public
__anon67::indexXferOffset	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexXferOffset;$/;"	m	struct:__anon67	access:public
__anon67::indexXferSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexXferSize;$/;"	m	struct:__anon67	access:public
__anon67::mode	ps3/rgl/include/RGL/Types.h	/^      GLenum	mode;$/;"	m	struct:__anon67	access:public
__anon67::vertexCount	ps3/rgl/include/RGL/Types.h	/^      GLsizei	vertexCount;$/;"	m	struct:__anon67	access:public
__anon67::xferTotalSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	xferTotalSize;$/;"	m	struct:__anon67	access:public
__anon68::arrayBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint  arrayBuffer;  \/\/ name of buffer object; 0==none (ie client-side)$/;"	m	struct:__anon68	access:public
__anon68::clientData	ps3/rgl/include/RGL/Types.h	/^      GLvoid*	clientData;   \/\/ client-side array pointer or VBO offset$/;"	m	struct:__anon68	access:public
__anon68::clientSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	clientSize;   \/\/ number of components 1-4$/;"	m	struct:__anon68	access:public
__anon68::clientStride	ps3/rgl/include/RGL/Types.h	/^      GLsizei	clientStride; \/\/ element-to-element distance [bytes]$/;"	m	struct:__anon68	access:public
__anon68::clientType	ps3/rgl/include/RGL/Types.h	/^      GLenum	clientType;   \/\/ GL_SHORT, GL_INT, GL_FLOAT$/;"	m	struct:__anon68	access:public
__anon68::frequency	ps3/rgl/include/RGL/Types.h	/^      GLuint  frequency;    \/\/ instancing divisor$/;"	m	struct:__anon68	access:public
__anon68::normalized	ps3/rgl/include/RGL/Types.h	/^      GLboolean normalized;$/;"	m	struct:__anon68	access:public
__anon68::value	ps3/rgl/include/RGL/Types.h	/^      GLfloat	value[4];     \/\/ constant attribute value$/;"	m	struct:__anon68	access:public
__anon69::DirtyMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int DirtyMask; \/\/ 1 == attribute has changed & needs updating$/;"	m	struct:__anon69	access:public
__anon69::EnabledMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int EnabledMask; \/\/ 1 == attribute is enabled for drawing$/;"	m	struct:__anon69	access:public
__anon69::HasVBOMask	ps3/rgl/include/RGL/Types.h	/^      unsigned int HasVBOMask; \/\/ 1 == attribute is in a VBO (ie server-side)$/;"	m	struct:__anon69	access:public
__anon69::attrib	ps3/rgl/include/RGL/Types.h	/^      rglAttribute		attrib[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon69	access:public
__anon6::p_align	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_align;	\/* memory alignment *\/$/;"	m	struct:__anon6	access:public
__anon6::p_filesz	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_filesz;	\/* number of bytes in file for seg. *\/$/;"	m	struct:__anon6	access:public
__anon6::p_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_flags;	\/* flags *\/$/;"	m	struct:__anon6	access:public
__anon6::p_memsz	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_memsz;	\/* number of bytes in mem. for seg. *\/$/;"	m	struct:__anon6	access:public
__anon6::p_offset	wii/app_booter/elf_abi.h	/^	Elf32_Off	p_offset;	\/* segment offset *\/$/;"	m	struct:__anon6	access:public
__anon6::p_paddr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	p_paddr;	\/* physical address - ignored? *\/$/;"	m	struct:__anon6	access:public
__anon6::p_type	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_type;		\/* segment type *\/$/;"	m	struct:__anon6	access:public
__anon6::p_vaddr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	p_vaddr;	\/* virtual address of segment *\/$/;"	m	struct:__anon6	access:public
__anon71::f	ps3/rgl/include/RGL/TypeUtils.h	/^   float f;$/;"	m	union:__anon71	access:public
__anon71::i	ps3/rgl/include/RGL/TypeUtils.h	/^   unsigned int i;$/;"	m	union:__anon71	access:public
__anon72::TVStandard	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLtvStandard TVStandard;$/;"	m	struct:__anon72	access:public
__anon72::bufferingMode	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLbufferingMode bufferingMode;$/;"	m	struct:__anon72	access:public
__anon72::colorFormat	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum colorFormat;$/;"	m	struct:__anon72	access:public
__anon72::connector	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLdeviceConnector connector;$/;"	m	struct:__anon72	access:public
__anon72::depthFormat	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum depthFormat;$/;"	m	struct:__anon72	access:public
__anon72::enable	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint enable;$/;"	m	struct:__anon72	access:public
__anon72::height	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint height;$/;"	m	struct:__anon72	access:public
__anon72::horizontalScale	ps3/rgl/include/export/RGL/rgl.h	/^   GLfloat horizontalScale;$/;"	m	struct:__anon72	access:public
__anon72::multisamplingMode	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum multisamplingMode;$/;"	m	struct:__anon72	access:public
__anon72::renderHeight	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint renderHeight;$/;"	m	struct:__anon72	access:public
__anon72::renderWidth	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint renderWidth;$/;"	m	struct:__anon72	access:public
__anon72::rescInterlaceMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescInterlaceMode rescInterlaceMode;     \/\/ RESC interlace filter mode: normal bilinear or use the anti-flicker interlace filter$/;"	m	struct:__anon72	access:public
__anon72::rescPalTemporalMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescPalTemporalMode rescPalTemporalMode; \/\/ RESC pal frame rate conversion mode: none, drop frame, interpolate$/;"	m	struct:__anon72	access:public
__anon72::rescRatioMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescRatioMode rescRatioMode;             \/\/ RESC aspect ratio rescaling mode: full screen, letterbox, or pan & scan$/;"	m	struct:__anon72	access:public
__anon72::verticalScale	ps3/rgl/include/export/RGL/rgl.h	/^   GLfloat verticalScale;$/;"	m	struct:__anon72	access:public
__anon72::width	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint width;   \/\/ dimensions of display device (scanout buffer)$/;"	m	struct:__anon72	access:public
__anon77::x	ps3/ps3_input.c	/^   float x;$/;"	m	struct:__anon77	file:	access:public
__anon77::y	ps3/ps3_input.c	/^   float y;$/;"	m	struct:__anon77	file:	access:public
__anon77::z	ps3/ps3_input.c	/^   float z;$/;"	m	struct:__anon77	file:	access:public
__anon78::audio_port	ps3/ps3_audio.c	/^   uint32_t audio_port;$/;"	m	struct:__anon78	file:	access:public
__anon78::buffer	ps3/ps3_audio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:__anon78	file:	access:public
__anon78::cond	ps3/ps3_audio.c	/^   sys_lwcond_t cond;$/;"	m	struct:__anon78	file:	access:public
__anon78::cond_lock	ps3/ps3_audio.c	/^   sys_lwmutex_t cond_lock;$/;"	m	struct:__anon78	file:	access:public
__anon78::lock	ps3/ps3_audio.c	/^   sys_lwmutex_t lock;$/;"	m	struct:__anon78	file:	access:public
__anon78::nonblocking	ps3/ps3_audio.c	/^   bool nonblocking;$/;"	m	struct:__anon78	file:	access:public
__anon78::quit_thread	ps3/ps3_audio.c	/^   volatile bool quit_thread;$/;"	m	struct:__anon78	file:	access:public
__anon78::thread	ps3/ps3_audio.c	/^   sys_ppu_thread_t thread;$/;"	m	struct:__anon78	file:	access:public
__anon79::lx	android/native/jni/input_android.c	/^   int16_t lx, ly;$/;"	m	struct:__anon79	file:	access:public
__anon79::ly	android/native/jni/input_android.c	/^   int16_t lx, ly;$/;"	m	struct:__anon79	file:	access:public
__anon79::rx	android/native/jni/input_android.c	/^   int16_t rx, ry;$/;"	m	struct:__anon79	file:	access:public
__anon79::ry	android/native/jni/input_android.c	/^   int16_t rx, ry;$/;"	m	struct:__anon79	file:	access:public
__anon7::__anon8::d_ptr	wii/app_booter/elf_abi.h	/^		Elf32_Addr	d_ptr;	\/* program virtual address *\/$/;"	m	union:__anon7::__anon8	access:public
__anon7::__anon8::d_val	wii/app_booter/elf_abi.h	/^		Elf32_Word	d_val;	\/* Multiple meanings - see d_tag *\/$/;"	m	union:__anon7::__anon8	access:public
__anon7::d_tag	wii/app_booter/elf_abi.h	/^	Elf32_Sword	d_tag;		\/* controls meaning of d_val *\/$/;"	m	struct:__anon7	access:public
__anon7::d_un	wii/app_booter/elf_abi.h	/^	} d_un;$/;"	m	struct:__anon7	typeref:union:__anon7::__anon8	access:public
__anon80::x	android/native/jni/input_android.c	/^   float x;$/;"	m	struct:__anon80	file:	access:public
__anon80::y	android/native/jni/input_android.c	/^   float y;$/;"	m	struct:__anon80	file:	access:public
__anon80::z	android/native/jni/input_android.c	/^   float z;$/;"	m	struct:__anon80	file:	access:public
__anon85::core_dir	console/rarch_console.h	/^   char core_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
__anon85::port_dir	console/rarch_console.h	/^   char port_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
__anon85::savestate_dir	console/rarch_console.h	/^   char savestate_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
__anon85::sram_dir	console/rarch_console.h	/^   char sram_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
__anon85::system_dir	console/rarch_console.h	/^   char system_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
__anon86::bLeftTrigger	input/winxinput_joypad.c	/^   uint8_t  bLeftTrigger;$/;"	m	struct:__anon86	file:	access:public
__anon86::bRightTrigger	input/winxinput_joypad.c	/^   uint8_t  bRightTrigger;$/;"	m	struct:__anon86	file:	access:public
__anon86::sThumbLX	input/winxinput_joypad.c	/^   int16_t  sThumbLX;$/;"	m	struct:__anon86	file:	access:public
__anon86::sThumbLY	input/winxinput_joypad.c	/^   int16_t  sThumbLY;$/;"	m	struct:__anon86	file:	access:public
__anon86::sThumbRX	input/winxinput_joypad.c	/^   int16_t  sThumbRX;$/;"	m	struct:__anon86	file:	access:public
__anon86::sThumbRY	input/winxinput_joypad.c	/^   int16_t  sThumbRY;$/;"	m	struct:__anon86	file:	access:public
__anon86::wButtons	input/winxinput_joypad.c	/^   uint16_t wButtons;$/;"	m	struct:__anon86	file:	access:public
__anon87::Gamepad	input/winxinput_joypad.c	/^   XINPUT_GAMEPAD Gamepad;$/;"	m	struct:__anon87	file:	access:public
__anon87::dwPacketNumber	input/winxinput_joypad.c	/^   uint32_t       dwPacketNumber;$/;"	m	struct:__anon87	file:	access:public
__anon88::wLeftMotorSpeed	input/winxinput_joypad.c	/^   uint16_t wLeftMotorSpeed;$/;"	m	struct:__anon88	file:	access:public
__anon88::wRightMotorSpeed	input/winxinput_joypad.c	/^   uint16_t wRightMotorSpeed;$/;"	m	struct:__anon88	file:	access:public
__anon89::connected	input/winxinput_joypad.c	/^   bool         connected;$/;"	m	struct:__anon89	file:	access:public
__anon89::xstate	input/winxinput_joypad.c	/^   XINPUT_STATE xstate;$/;"	m	struct:__anon89	file:	access:public
__anon94::analog0	blackberry-qnx/frontend_qnx.h	/^    int analog0[3];$/;"	m	struct:__anon94	access:public
__anon94::analog1	blackberry-qnx/frontend_qnx.h	/^    int analog1[3];$/;"	m	struct:__anon94	access:public
__anon94::analogCount	blackberry-qnx/frontend_qnx.h	/^    int analogCount;$/;"	m	struct:__anon94	access:public
__anon94::buttonCount	blackberry-qnx/frontend_qnx.h	/^    int buttonCount;$/;"	m	struct:__anon94	access:public
__anon94::buttons	blackberry-qnx/frontend_qnx.h	/^    int buttons;$/;"	m	struct:__anon94	access:public
__anon94::device	blackberry-qnx/frontend_qnx.h	/^    int device;$/;"	m	struct:__anon94	access:public
__anon94::device_name	blackberry-qnx/frontend_qnx.h	/^    char device_name[64];$/;"	m	struct:__anon94	access:public
__anon94::handle	blackberry-qnx/frontend_qnx.h	/^    screen_device_t handle;$/;"	m	struct:__anon94	access:public
__anon94::id	blackberry-qnx/frontend_qnx.h	/^    char id[64];$/;"	m	struct:__anon94	access:public
__anon94::index	blackberry-qnx/frontend_qnx.h	/^    int index;$/;"	m	struct:__anon94	access:public
__anon94::port	blackberry-qnx/frontend_qnx.h	/^    int port;$/;"	m	struct:__anon94	access:public
__anon94::product	blackberry-qnx/frontend_qnx.h	/^    char product[64];$/;"	m	struct:__anon94	access:public
__anon94::type	blackberry-qnx/frontend_qnx.h	/^    int type;$/;"	m	struct:__anon94	access:public
__anon94::vendor	blackberry-qnx/frontend_qnx.h	/^    char vendor[64];$/;"	m	struct:__anon94	access:public
__anon96::code	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^   int code;$/;"	m	union:__anon96	access:public
__anon96::pulse	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	_pulse pulse;$/;"	m	union:__anon96	access:public
__anon97::mask	performance/performance_android.c	/^    uint32_t mask;$/;"	m	struct:__anon97	file:	access:public
__bool	gfx/context/sunxi_disp_ioctl.h	23;"	d
__call__	ps3/ps3py/pkg.py	/^	def __call__(self, value, endian='<'):$/;"	m	class:StructType	file:	access:private
__disp_3d_out_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_3d_out_mode_t;$/;"	t	typeref:enum:__anon172
__disp_3d_src_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_3d_src_mode_t;$/;"	t	typeref:enum:__anon171
__disp_capture_screen_para_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_capture_screen_para_t;$/;"	t	typeref:struct:__anon194
__disp_cmd_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_cmd_t;$/;"	t	typeref:enum:tag_DISP_CMD
__disp_color_range_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_color_range_t;$/;"	t	typeref:enum:__anon174
__disp_color_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_color_t;$/;"	t	typeref:struct:__anon164
__disp_colorkey_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_colorkey_t;$/;"	t	typeref:struct:__anon188
__disp_cs_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_cs_mode_t;$/;"	t	typeref:enum:__anon173
__disp_dit_info_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_dit_info_t;$/;"	t	typeref:struct:__anon190
__disp_exit_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_exit_mode_t;$/;"	t	typeref:enum:__anon184
__disp_fb_create_para_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_fb_create_para_t;$/;"	t	typeref:struct:__anon201
__disp_fb_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_fb_t;$/;"	t	typeref:struct:__anon186
__disp_hdmi_func	gfx/context/sunxi_disp_ioctl.h	/^} __disp_hdmi_func;$/;"	t	typeref:struct:__anon195
__disp_hwc_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_hwc_mode_t;$/;"	t	typeref:enum:__anon183
__disp_hwc_pattern_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_hwc_pattern_t;$/;"	t	typeref:struct:__anon191
__disp_init_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_init_mode_t;$/;"	t	typeref:enum:__anon202
__disp_init_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_init_t;$/;"	t	typeref:struct:__anon203
__disp_layer_info_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_layer_info_t;$/;"	t	typeref:struct:__anon187
__disp_layer_work_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_layer_work_mode_t;$/;"	t	typeref:enum:__anon181
__disp_lcdc_src_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_lcdc_src_t;$/;"	t	typeref:enum:__anon180
__disp_output_type_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_output_type_t;$/;"	t	typeref:enum:__anon175
__disp_pixel_fmt_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_pixel_fmt_t;$/;"	t	typeref:enum:__anon168
__disp_pixel_mod_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_pixel_mod_t;$/;"	t	typeref:enum:__anon169
__disp_pixel_seq_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_pixel_seq_t;$/;"	t	typeref:enum:__anon170
__disp_pos_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_pos_t;$/;"	t	typeref:struct:__anon167
__disp_rect_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_rect_t;$/;"	t	typeref:struct:__anon165
__disp_rectsz_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_rectsz_t;$/;"	t	typeref:struct:__anon166
__disp_reg_index_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_reg_index_t;$/;"	t	typeref:enum:__anon185
__disp_scaler_para_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_scaler_para_t;$/;"	t	typeref:struct:__anon192
__disp_sprite_block_para_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_sprite_block_para_t;$/;"	t	typeref:struct:__anon193
__disp_tv_dac_source	gfx/context/sunxi_disp_ioctl.h	/^} __disp_tv_dac_source;$/;"	t	typeref:enum:__anon178
__disp_tv_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_tv_mode_t;$/;"	t	typeref:enum:__anon177
__disp_tv_output_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_tv_output_t;$/;"	t	typeref:enum:__anon176
__disp_vga_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_vga_mode_t;$/;"	t	typeref:enum:__anon179
__disp_video_fb_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_video_fb_t;$/;"	t	typeref:struct:__anon189
__disp_video_smooth_t	gfx/context/sunxi_disp_ioctl.h	/^} __disp_video_smooth_t;$/;"	t	typeref:enum:__anon182
__disp_video_timing	gfx/context/sunxi_disp_ioctl.h	/^struct __disp_video_timing {$/;"	s
__disp_video_timing::AVI_PR	gfx/context/sunxi_disp_ioctl.h	/^	__s32 AVI_PR;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::HBP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HBP;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::HFP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HFP;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::HPSW	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HPSW;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::HSYNC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HSYNC;	\/* 0: Negative 1: Positive *\/$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::HT	gfx/context/sunxi_disp_ioctl.h	/^	__s32 HT;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::I	gfx/context/sunxi_disp_ioctl.h	/^	__s32 I;	\/* 0: Progressive 1: Interlaced *\/$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::INPUTX	gfx/context/sunxi_disp_ioctl.h	/^	__s32 INPUTX;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::INPUTY	gfx/context/sunxi_disp_ioctl.h	/^	__s32 INPUTY;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::PCLK	gfx/context/sunxi_disp_ioctl.h	/^	__s32 PCLK;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VBP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VBP;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VFP	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VFP;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VIC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VIC;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VPSW	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VPSW;$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VSYNC	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VSYNC;	\/* 0: Negative 1: Positive *\/$/;"	m	struct:__disp_video_timing	access:public
__disp_video_timing::VT	gfx/context/sunxi_disp_ioctl.h	/^	__s32 VT;$/;"	m	struct:__disp_video_timing	access:public
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = '<'$/;"	v	class:Struct
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:AppInfo
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:DigestBlock
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:EbootMeta
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:FileHeader
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:Header
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:MetaHeader
__endian__	ps3/ps3py/pkg.py	/^	__endian__ = Struct.BE$/;"	v	class:SelfHeader
__exception_setreload	frontend/platform/platform_gx.c	/^extern void __exception_setreload(int t);$/;"	p	file:	signature:(int t)
__fb_mode_t	gfx/context/sunxi_disp_ioctl.h	/^} __fb_mode_t;$/;"	t	typeref:enum:__anon200
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:AppInfo	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:DigestBlock	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:EbootMeta	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:FileHeader	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:Header	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:MetaHeader	file:	access:private
__format__	ps3/ps3py/pkg.py	/^	def __format__(self):$/;"	m	class:SelfHeader	file:	access:private
__getattr__	ps3/ps3py/pkg.py	/^	def __getattr__(self, name):$/;"	m	class:Struct	file:	access:private
__getitem__	ps3/ps3py/pkg.py	/^	def __getitem__(self, value):$/;"	m	class:Struct	file:	access:private
__getitem__	ps3/ps3py/pkg.py	/^	def __getitem__(self, value):$/;"	m	class:StructType	file:	access:private
__gl_ext_h_	ps3/rgl/include/export/GLES/glext.h	2;"	d
__gl_h_	ps3/rgl/include/export/GLES/gl.h	2;"	d
__glext_h_	msvc/msvc-2010/GL/glext.h	2;"	d
__gx_regdef	gx/gx_video_inl.h	/^struct __gx_regdef$/;"	s
__gx_regdef::VAT0reg	gx/gx_video_inl.h	/^	u32 VAT0reg[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::VAT1reg	gx/gx_video_inl.h	/^	u32 VAT1reg[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::VAT2reg	gx/gx_video_inl.h	/^	u32 VAT2reg[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::VATTable	gx/gx_video_inl.h	/^	u32 VATTable;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::_pad	gx/gx_video_inl.h	/^	u8 _pad;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::chnAmbColor	gx/gx_video_inl.h	/^	u32 chnAmbColor[2];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::chnCntrl	gx/gx_video_inl.h	/^	u32 chnCntrl[4];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::chnMatColor	gx/gx_video_inl.h	/^	u32 chnMatColor[2];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::cpCLreg	gx/gx_video_inl.h	/^	u16 cpCLreg;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::cpCRreg	gx/gx_video_inl.h	/^	u16 cpCRreg;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::cpPerfMode	gx/gx_video_inl.h	/^	u32 cpPerfMode;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::cpSRreg	gx/gx_video_inl.h	/^	u16 cpSRreg;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::dirtyState	gx/gx_video_inl.h	/^	u32 dirtyState;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::dispCopyCntrl	gx/gx_video_inl.h	/^	u32 dispCopyCntrl;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::dispCopyDst	gx/gx_video_inl.h	/^	u32 dispCopyDst;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::dispCopyTL	gx/gx_video_inl.h	/^	u32 dispCopyTL;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::dispCopyWH	gx/gx_video_inl.h	/^	u32 dispCopyWH;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::genMode	gx/gx_video_inl.h	/^	u32 genMode;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::gxFifoInited	gx/gx_video_inl.h	/^	u32 gxFifoInited;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::gxFifoUnlinked	gx/gx_video_inl.h	/^	u8 gxFifoUnlinked;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::lpWidth	gx/gx_video_inl.h	/^	u32 lpWidth;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::mtxIdxHi	gx/gx_video_inl.h	/^	u32 mtxIdxHi;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::mtxIdxLo	gx/gx_video_inl.h	/^	u32 mtxIdxLo;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::peCMode0	gx/gx_video_inl.h	/^	u32 peCMode0;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::peCMode1	gx/gx_video_inl.h	/^	u32 peCMode1;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::peCntrl	gx/gx_video_inl.h	/^	u32 peCntrl;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::peZMode	gx/gx_video_inl.h	/^	u32 peZMode;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::perf0Mode	gx/gx_video_inl.h	/^	u32 perf0Mode;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::perf1Mode	gx/gx_video_inl.h	/^	u32 perf1Mode;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::saveDLctx	gx/gx_video_inl.h	/^	u8 saveDLctx;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::sciBRcorner	gx/gx_video_inl.h	/^	u32 sciBRcorner;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::sciTLcorner	gx/gx_video_inl.h	/^	u32 sciTLcorner;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::suSsize	gx/gx_video_inl.h	/^	u32 suSsize[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::suTsize	gx/gx_video_inl.h	/^	u32 suTsize[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevAlphaEnv	gx/gx_video_inl.h	/^	u32 tevAlphaEnv[16];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevColorEnv	gx/gx_video_inl.h	/^	u32 tevColorEnv[16];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevIndMask	gx/gx_video_inl.h	/^	u32 tevIndMask;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevRasOrder	gx/gx_video_inl.h	/^	u32 tevRasOrder[11];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevSwapModeTable	gx/gx_video_inl.h	/^	u32 tevSwapModeTable[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevTexCoordEnable	gx/gx_video_inl.h	/^	u32 tevTexCoordEnable;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tevTexMap	gx/gx_video_inl.h	/^	u32 tevTexMap[16];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCoordGen	gx/gx_video_inl.h	/^	u32 texCoordGen[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCoordGen2	gx/gx_video_inl.h	/^	u32 texCoordGen2[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCoordManually	gx/gx_video_inl.h	/^	u32 texCoordManually;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCopyCntrl	gx/gx_video_inl.h	/^	u32 texCopyCntrl;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCopyDst	gx/gx_video_inl.h	/^	u32 texCopyDst;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCopyTL	gx/gx_video_inl.h	/^	u32 texCopyTL;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCopyWH	gx/gx_video_inl.h	/^	u32 texCopyWH;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texCopyZTex	gx/gx_video_inl.h	/^	u8 texCopyZTex;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texMapSize	gx/gx_video_inl.h	/^	u32 texMapSize[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texMapWrap	gx/gx_video_inl.h	/^	u32 texMapWrap[8];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::texRegion	gx/gx_video_inl.h	/^	GXTexRegion texRegion[24];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::tlutRegion	gx/gx_video_inl.h	/^	GXTlutRegion tlutRegion[20];$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::vcdClear	gx/gx_video_inl.h	/^	u32 vcdClear;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::vcdHi	gx/gx_video_inl.h	/^	u32 vcdHi;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::vcdLo	gx/gx_video_inl.h	/^	u32 vcdLo;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::vcdNrms	gx/gx_video_inl.h	/^	u32 vcdNrms;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::xfFlush	gx/gx_video_inl.h	/^	u16 xfFlush;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::xfFlushExp	gx/gx_video_inl.h	/^	u16 xfFlushExp;$/;"	m	struct:__gx_regdef	access:public
__gx_regdef::xfFlushSafe	gx/gx_video_inl.h	/^	u16 xfFlushSafe;$/;"	m	struct:__gx_regdef	access:public
__gx_texobj	gx/gx_video_inl.h	/^struct __gx_texobj$/;"	s
__gx_texobj::tex_filt	gx/gx_video_inl.h	/^	u32 tex_filt;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_flag	gx/gx_video_inl.h	/^	u8 tex_flag;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_fmt	gx/gx_video_inl.h	/^	u32 tex_fmt;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_lod	gx/gx_video_inl.h	/^	u32 tex_lod;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_maddr	gx/gx_video_inl.h	/^	u32 tex_maddr;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_size	gx/gx_video_inl.h	/^	u32 tex_size;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_tile_cnt	gx/gx_video_inl.h	/^	u16 tex_tile_cnt;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_tile_type	gx/gx_video_inl.h	/^	u8 tex_tile_type;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::tex_tlut	gx/gx_video_inl.h	/^	u32 tex_tlut;$/;"	m	struct:__gx_texobj	access:public
__gx_texobj::usr_data	gx/gx_video_inl.h	/^	u32 usr_data;$/;"	m	struct:__gx_texobj	access:public
__init__	ps3/ps3py/pkg.py	/^	def __init__(self):$/;"	m	class:FileHeader	access:public
__init__	ps3/ps3py/pkg.py	/^	def __init__(self, func=None, unpack=None, **kwargs):$/;"	m	class:Struct	access:public
__lcd_flow_t	gfx/context/sunxi_disp_ioctl.h	/^} __lcd_flow_t;$/;"	t	typeref:struct:lcd_flow
__lcd_function_t	gfx/context/sunxi_disp_ioctl.h	/^} __lcd_function_t;$/;"	t	typeref:struct:lcd_function
__lcd_panel_fun_t	gfx/context/sunxi_disp_ioctl.h	/^} __lcd_panel_fun_t;$/;"	t	typeref:struct:__anon198
__len__	ps3/ps3py/pkg.py	/^	def __len__(self):$/;"	m	class:Struct	file:	access:private
__lwp_heap_block_size	wii/mem2_manager.c	/^static u32 __lwp_heap_block_size(heap_cntrl *theheap, void *ptr)$/;"	f	file:	signature:(heap_cntrl *theheap, void *ptr)
__lwp_heap_blockat	wii/mem2_manager.c	/^static inline heap_block *__lwp_heap_blockat(heap_block *block, u32 offset)$/;"	f	file:	signature:(heap_block *block, u32 offset)
__lwp_heap_blockfree	wii/mem2_manager.c	/^static inline bool __lwp_heap_blockfree(heap_block *block)$/;"	f	file:	signature:(heap_block *block)
__lwp_heap_blockin	wii/mem2_manager.c	/^static inline bool __lwp_heap_blockin(heap_cntrl *heap, heap_block *block)$/;"	f	file:	signature:(heap_cntrl *heap, heap_block *block)
__lwp_heap_blocksize	wii/mem2_manager.c	/^static inline u32 __lwp_heap_blocksize(heap_block *block)$/;"	f	file:	signature:(heap_block *block)
__lwp_heap_usrblockat	wii/mem2_manager.c	/^static inline heap_block *__lwp_heap_usrblockat(void *ptr)$/;"	f	file:	signature:(void *ptr)
__panel_para_t	gfx/context/sunxi_disp_ioctl.h	/^} __panel_para_t;$/;"	t	typeref:struct:__anon196
__pwm_info_t	gfx/context/sunxi_disp_ioctl.h	/^} __pwm_info_t;$/;"	t	typeref:struct:__anon199
__real_calloc	wii/mem2_manager.c	/^void *__real_calloc(size_t n, size_t size);$/;"	p	file:	signature:(size_t n, size_t size)
__real_free	wii/mem2_manager.c	/^void __real_free(void *p);$/;"	p	file:	signature:(void *p)
__real_malloc	wii/mem2_manager.c	/^void *__real_malloc(size_t size);$/;"	p	file:	signature:(size_t size)
__real_malloc_usable_size	wii/mem2_manager.c	/^size_t __real_malloc_usable_size(void *p);$/;"	p	file:	signature:(void *p)
__real_memalign	wii/mem2_manager.c	/^void *__real_memalign(size_t a, size_t size);$/;"	p	file:	signature:(size_t a, size_t size)
__real_realloc	wii/mem2_manager.c	/^void *__real_realloc(void *p, size_t size);$/;"	p	file:	signature:(void *p, size_t size)
__real_strdup	wii/mem2_manager.c	/^void *__real_strdup(const char *s);$/;"	p	file:	signature:(const char *s)
__real_strndup	wii/mem2_manager.c	/^void *__real_strndup(const char *s, size_t n);$/;"	p	file:	signature:(const char *s, size_t n)
__reg_bases_t	gfx/context/sunxi_disp_ioctl.h	/^} __reg_bases_t;$/;"	t	typeref:struct:__anon197
__repr__	ps3/ps3py/pkg.py	/^	def __repr__(self):$/;"	m	class:FileHeader	file:	access:private
__rglgen_glAccumxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLACCUMXOESPROC __rglgen_glAccumxOES;$/;"	v
__rglgen_glActiveShaderProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLACTIVESHADERPROGRAMPROC __rglgen_glActiveShaderProgram;$/;"	v
__rglgen_glActiveTexture	gfx/glsym/glsym_gl.c	/^RGLSYMGLACTIVETEXTUREPROC __rglgen_glActiveTexture;$/;"	v
__rglgen_glActiveTextureARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLACTIVETEXTUREARBPROC __rglgen_glActiveTextureARB;$/;"	v
__rglgen_glAlphaFuncxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLALPHAFUNCXOESPROC __rglgen_glAlphaFuncxOES;$/;"	v
__rglgen_glAttachObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLATTACHOBJECTARBPROC __rglgen_glAttachObjectARB;$/;"	v
__rglgen_glAttachShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLATTACHSHADERPROC __rglgen_glAttachShader;$/;"	v
__rglgen_glBeginConditionalRender	gfx/glsym/glsym_gl.c	/^RGLSYMGLBEGINCONDITIONALRENDERPROC __rglgen_glBeginConditionalRender;$/;"	v
__rglgen_glBeginQuery	gfx/glsym/glsym_gl.c	/^RGLSYMGLBEGINQUERYPROC __rglgen_glBeginQuery;$/;"	v
__rglgen_glBeginQueryARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBEGINQUERYARBPROC __rglgen_glBeginQueryARB;$/;"	v
__rglgen_glBeginQueryIndexed	gfx/glsym/glsym_gl.c	/^RGLSYMGLBEGINQUERYINDEXEDPROC __rglgen_glBeginQueryIndexed;$/;"	v
__rglgen_glBeginTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLBEGINTRANSFORMFEEDBACKPROC __rglgen_glBeginTransformFeedback;$/;"	v
__rglgen_glBindAttribLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDATTRIBLOCATIONPROC __rglgen_glBindAttribLocation;$/;"	v
__rglgen_glBindAttribLocationARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDATTRIBLOCATIONARBPROC __rglgen_glBindAttribLocationARB;$/;"	v
__rglgen_glBindBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDBUFFERPROC __rglgen_glBindBuffer;$/;"	v
__rglgen_glBindBufferARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDBUFFERARBPROC __rglgen_glBindBufferARB;$/;"	v
__rglgen_glBindBufferBase	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDBUFFERBASEPROC __rglgen_glBindBufferBase;$/;"	v
__rglgen_glBindBufferRange	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDBUFFERRANGEPROC __rglgen_glBindBufferRange;$/;"	v
__rglgen_glBindFragDataLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDFRAGDATALOCATIONPROC __rglgen_glBindFragDataLocation;$/;"	v
__rglgen_glBindFragDataLocationIndexed	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDFRAGDATALOCATIONINDEXEDPROC __rglgen_glBindFragDataLocationIndexed;$/;"	v
__rglgen_glBindFramebuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDFRAMEBUFFERPROC __rglgen_glBindFramebuffer;$/;"	v
__rglgen_glBindImageTexture	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDIMAGETEXTUREPROC __rglgen_glBindImageTexture;$/;"	v
__rglgen_glBindProgramARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDPROGRAMARBPROC __rglgen_glBindProgramARB;$/;"	v
__rglgen_glBindProgramPipeline	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDPROGRAMPIPELINEPROC __rglgen_glBindProgramPipeline;$/;"	v
__rglgen_glBindRenderbuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDRENDERBUFFERPROC __rglgen_glBindRenderbuffer;$/;"	v
__rglgen_glBindSampler	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDSAMPLERPROC __rglgen_glBindSampler;$/;"	v
__rglgen_glBindTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDTRANSFORMFEEDBACKPROC __rglgen_glBindTransformFeedback;$/;"	v
__rglgen_glBindVertexArray	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDVERTEXARRAYPROC __rglgen_glBindVertexArray;$/;"	v
__rglgen_glBindVertexArrayOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLBINDVERTEXARRAYOESPROC __rglgen_glBindVertexArrayOES;$/;"	v
__rglgen_glBindVertexBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLBINDVERTEXBUFFERPROC __rglgen_glBindVertexBuffer;$/;"	v
__rglgen_glBitmapxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLBITMAPXOESPROC __rglgen_glBitmapxOES;$/;"	v
__rglgen_glBlendColor	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDCOLORPROC __rglgen_glBlendColor;$/;"	v
__rglgen_glBlendColorxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDCOLORXOESPROC __rglgen_glBlendColorxOES;$/;"	v
__rglgen_glBlendEquation	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONPROC __rglgen_glBlendEquation;$/;"	v
__rglgen_glBlendEquationSeparate	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONSEPARATEPROC __rglgen_glBlendEquationSeparate;$/;"	v
__rglgen_glBlendEquationSeparatei	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONSEPARATEIPROC __rglgen_glBlendEquationSeparatei;$/;"	v
__rglgen_glBlendEquationSeparateiARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONSEPARATEIARBPROC __rglgen_glBlendEquationSeparateiARB;$/;"	v
__rglgen_glBlendEquationi	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONIPROC __rglgen_glBlendEquationi;$/;"	v
__rglgen_glBlendEquationiARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDEQUATIONIARBPROC __rglgen_glBlendEquationiARB;$/;"	v
__rglgen_glBlendFuncSeparate	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDFUNCSEPARATEPROC __rglgen_glBlendFuncSeparate;$/;"	v
__rglgen_glBlendFuncSeparatei	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDFUNCSEPARATEIPROC __rglgen_glBlendFuncSeparatei;$/;"	v
__rglgen_glBlendFuncSeparateiARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDFUNCSEPARATEIARBPROC __rglgen_glBlendFuncSeparateiARB;$/;"	v
__rglgen_glBlendFunci	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDFUNCIPROC __rglgen_glBlendFunci;$/;"	v
__rglgen_glBlendFunciARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLENDFUNCIARBPROC __rglgen_glBlendFunciARB;$/;"	v
__rglgen_glBlitFramebuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLBLITFRAMEBUFFERPROC __rglgen_glBlitFramebuffer;$/;"	v
__rglgen_glBufferData	gfx/glsym/glsym_gl.c	/^RGLSYMGLBUFFERDATAPROC __rglgen_glBufferData;$/;"	v
__rglgen_glBufferDataARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBUFFERDATAARBPROC __rglgen_glBufferDataARB;$/;"	v
__rglgen_glBufferSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLBUFFERSUBDATAPROC __rglgen_glBufferSubData;$/;"	v
__rglgen_glBufferSubDataARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLBUFFERSUBDATAARBPROC __rglgen_glBufferSubDataARB;$/;"	v
__rglgen_glCheckFramebufferStatus	gfx/glsym/glsym_gl.c	/^RGLSYMGLCHECKFRAMEBUFFERSTATUSPROC __rglgen_glCheckFramebufferStatus;$/;"	v
__rglgen_glClampColor	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLAMPCOLORPROC __rglgen_glClampColor;$/;"	v
__rglgen_glClampColorARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLAMPCOLORARBPROC __rglgen_glClampColorARB;$/;"	v
__rglgen_glClearAccumxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARACCUMXOESPROC __rglgen_glClearAccumxOES;$/;"	v
__rglgen_glClearBufferData	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERDATAPROC __rglgen_glClearBufferData;$/;"	v
__rglgen_glClearBufferSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERSUBDATAPROC __rglgen_glClearBufferSubData;$/;"	v
__rglgen_glClearBufferfi	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERFIPROC __rglgen_glClearBufferfi;$/;"	v
__rglgen_glClearBufferfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERFVPROC __rglgen_glClearBufferfv;$/;"	v
__rglgen_glClearBufferiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERIVPROC __rglgen_glClearBufferiv;$/;"	v
__rglgen_glClearBufferuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARBUFFERUIVPROC __rglgen_glClearBufferuiv;$/;"	v
__rglgen_glClearColorxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARCOLORXOESPROC __rglgen_glClearColorxOES;$/;"	v
__rglgen_glClearDepthf	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARDEPTHFPROC __rglgen_glClearDepthf;$/;"	v
__rglgen_glClearDepthfOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARDEPTHFOESPROC __rglgen_glClearDepthfOES;$/;"	v
__rglgen_glClearDepthxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLEARDEPTHXOESPROC __rglgen_glClearDepthxOES;$/;"	v
__rglgen_glClientActiveTexture	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLIENTACTIVETEXTUREPROC __rglgen_glClientActiveTexture;$/;"	v
__rglgen_glClientActiveTextureARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLIENTACTIVETEXTUREARBPROC __rglgen_glClientActiveTextureARB;$/;"	v
__rglgen_glClientWaitSync	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLIENTWAITSYNCPROC __rglgen_glClientWaitSync;$/;"	v
__rglgen_glClipPlanefOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLIPPLANEFOESPROC __rglgen_glClipPlanefOES;$/;"	v
__rglgen_glClipPlanexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCLIPPLANEXOESPROC __rglgen_glClipPlanexOES;$/;"	v
__rglgen_glColor3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLOR3XOESPROC __rglgen_glColor3xOES;$/;"	v
__rglgen_glColor3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLOR3XVOESPROC __rglgen_glColor3xvOES;$/;"	v
__rglgen_glColor4xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLOR4XOESPROC __rglgen_glColor4xOES;$/;"	v
__rglgen_glColor4xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLOR4XVOESPROC __rglgen_glColor4xvOES;$/;"	v
__rglgen_glColorMaski	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORMASKIPROC __rglgen_glColorMaski;$/;"	v
__rglgen_glColorP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORP3UIPROC __rglgen_glColorP3ui;$/;"	v
__rglgen_glColorP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORP3UIVPROC __rglgen_glColorP3uiv;$/;"	v
__rglgen_glColorP4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORP4UIPROC __rglgen_glColorP4ui;$/;"	v
__rglgen_glColorP4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORP4UIVPROC __rglgen_glColorP4uiv;$/;"	v
__rglgen_glColorSubTable	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORSUBTABLEPROC __rglgen_glColorSubTable;$/;"	v
__rglgen_glColorTable	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORTABLEPROC __rglgen_glColorTable;$/;"	v
__rglgen_glColorTableParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORTABLEPARAMETERFVPROC __rglgen_glColorTableParameterfv;$/;"	v
__rglgen_glColorTableParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOLORTABLEPARAMETERIVPROC __rglgen_glColorTableParameteriv;$/;"	v
__rglgen_glCompileShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPILESHADERPROC __rglgen_glCompileShader;$/;"	v
__rglgen_glCompileShaderARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPILESHADERARBPROC __rglgen_glCompileShaderARB;$/;"	v
__rglgen_glCompileShaderIncludeARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPILESHADERINCLUDEARBPROC __rglgen_glCompileShaderIncludeARB;$/;"	v
__rglgen_glCompressedTexImage1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE1DPROC __rglgen_glCompressedTexImage1D;$/;"	v
__rglgen_glCompressedTexImage1DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE1DARBPROC __rglgen_glCompressedTexImage1DARB;$/;"	v
__rglgen_glCompressedTexImage2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE2DPROC __rglgen_glCompressedTexImage2D;$/;"	v
__rglgen_glCompressedTexImage2DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE2DARBPROC __rglgen_glCompressedTexImage2DARB;$/;"	v
__rglgen_glCompressedTexImage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE3DPROC __rglgen_glCompressedTexImage3D;$/;"	v
__rglgen_glCompressedTexImage3DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE3DARBPROC __rglgen_glCompressedTexImage3DARB;$/;"	v
__rglgen_glCompressedTexImage3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLCOMPRESSEDTEXIMAGE3DOESPROC __rglgen_glCompressedTexImage3DOES;$/;"	v
__rglgen_glCompressedTexSubImage1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DPROC __rglgen_glCompressedTexSubImage1D;$/;"	v
__rglgen_glCompressedTexSubImage1DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __rglgen_glCompressedTexSubImage1DARB;$/;"	v
__rglgen_glCompressedTexSubImage2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DPROC __rglgen_glCompressedTexSubImage2D;$/;"	v
__rglgen_glCompressedTexSubImage2DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __rglgen_glCompressedTexSubImage2DARB;$/;"	v
__rglgen_glCompressedTexSubImage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DPROC __rglgen_glCompressedTexSubImage3D;$/;"	v
__rglgen_glCompressedTexSubImage3DARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __rglgen_glCompressedTexSubImage3DARB;$/;"	v
__rglgen_glCompressedTexSubImage3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLCOMPRESSEDTEXSUBIMAGE3DOESPROC __rglgen_glCompressedTexSubImage3DOES;$/;"	v
__rglgen_glConvolutionFilter1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONFILTER1DPROC __rglgen_glConvolutionFilter1D;$/;"	v
__rglgen_glConvolutionFilter2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONFILTER2DPROC __rglgen_glConvolutionFilter2D;$/;"	v
__rglgen_glConvolutionParameterf	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERFPROC __rglgen_glConvolutionParameterf;$/;"	v
__rglgen_glConvolutionParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERFVPROC __rglgen_glConvolutionParameterfv;$/;"	v
__rglgen_glConvolutionParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERIPROC __rglgen_glConvolutionParameteri;$/;"	v
__rglgen_glConvolutionParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERIVPROC __rglgen_glConvolutionParameteriv;$/;"	v
__rglgen_glConvolutionParameterxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERXOESPROC __rglgen_glConvolutionParameterxOES;$/;"	v
__rglgen_glConvolutionParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLCONVOLUTIONPARAMETERXVOESPROC __rglgen_glConvolutionParameterxvOES;$/;"	v
__rglgen_glCopyBufferSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYBUFFERSUBDATAPROC __rglgen_glCopyBufferSubData;$/;"	v
__rglgen_glCopyColorSubTable	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYCOLORSUBTABLEPROC __rglgen_glCopyColorSubTable;$/;"	v
__rglgen_glCopyColorTable	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYCOLORTABLEPROC __rglgen_glCopyColorTable;$/;"	v
__rglgen_glCopyConvolutionFilter1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYCONVOLUTIONFILTER1DPROC __rglgen_glCopyConvolutionFilter1D;$/;"	v
__rglgen_glCopyConvolutionFilter2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYCONVOLUTIONFILTER2DPROC __rglgen_glCopyConvolutionFilter2D;$/;"	v
__rglgen_glCopyImageSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYIMAGESUBDATAPROC __rglgen_glCopyImageSubData;$/;"	v
__rglgen_glCopyTexSubImage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLCOPYTEXSUBIMAGE3DPROC __rglgen_glCopyTexSubImage3D;$/;"	v
__rglgen_glCopyTexSubImage3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLCOPYTEXSUBIMAGE3DOESPROC __rglgen_glCopyTexSubImage3DOES;$/;"	v
__rglgen_glCreateProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATEPROGRAMPROC __rglgen_glCreateProgram;$/;"	v
__rglgen_glCreateProgramObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATEPROGRAMOBJECTARBPROC __rglgen_glCreateProgramObjectARB;$/;"	v
__rglgen_glCreateShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATESHADERPROC __rglgen_glCreateShader;$/;"	v
__rglgen_glCreateShaderObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATESHADEROBJECTARBPROC __rglgen_glCreateShaderObjectARB;$/;"	v
__rglgen_glCreateShaderProgramv	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATESHADERPROGRAMVPROC __rglgen_glCreateShaderProgramv;$/;"	v
__rglgen_glCreateSyncFromCLeventARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCREATESYNCFROMCLEVENTARBPROC __rglgen_glCreateSyncFromCLeventARB;$/;"	v
__rglgen_glCurrentPaletteMatrixARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLCURRENTPALETTEMATRIXARBPROC __rglgen_glCurrentPaletteMatrixARB;$/;"	v
__rglgen_glDebugMessageCallback	gfx/glsym/glsym_es2.c	/^RGLSYMGLDEBUGMESSAGECALLBACKPROC __rglgen_glDebugMessageCallback;$/;"	v
__rglgen_glDebugMessageCallback	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGECALLBACKPROC __rglgen_glDebugMessageCallback;$/;"	v
__rglgen_glDebugMessageCallbackARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGECALLBACKARBPROC __rglgen_glDebugMessageCallbackARB;$/;"	v
__rglgen_glDebugMessageControl	gfx/glsym/glsym_es2.c	/^RGLSYMGLDEBUGMESSAGECONTROLPROC __rglgen_glDebugMessageControl;$/;"	v
__rglgen_glDebugMessageControl	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGECONTROLPROC __rglgen_glDebugMessageControl;$/;"	v
__rglgen_glDebugMessageControlARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGECONTROLARBPROC __rglgen_glDebugMessageControlARB;$/;"	v
__rglgen_glDebugMessageInsert	gfx/glsym/glsym_es2.c	/^RGLSYMGLDEBUGMESSAGEINSERTPROC __rglgen_glDebugMessageInsert;$/;"	v
__rglgen_glDebugMessageInsert	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGEINSERTPROC __rglgen_glDebugMessageInsert;$/;"	v
__rglgen_glDebugMessageInsertARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEBUGMESSAGEINSERTARBPROC __rglgen_glDebugMessageInsertARB;$/;"	v
__rglgen_glDeleteBuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEBUFFERSPROC __rglgen_glDeleteBuffers;$/;"	v
__rglgen_glDeleteBuffersARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEBUFFERSARBPROC __rglgen_glDeleteBuffersARB;$/;"	v
__rglgen_glDeleteFramebuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEFRAMEBUFFERSPROC __rglgen_glDeleteFramebuffers;$/;"	v
__rglgen_glDeleteNamedStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETENAMEDSTRINGARBPROC __rglgen_glDeleteNamedStringARB;$/;"	v
__rglgen_glDeleteObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEOBJECTARBPROC __rglgen_glDeleteObjectARB;$/;"	v
__rglgen_glDeleteProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEPROGRAMPROC __rglgen_glDeleteProgram;$/;"	v
__rglgen_glDeleteProgramPipelines	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEPROGRAMPIPELINESPROC __rglgen_glDeleteProgramPipelines;$/;"	v
__rglgen_glDeleteProgramsARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEPROGRAMSARBPROC __rglgen_glDeleteProgramsARB;$/;"	v
__rglgen_glDeleteQueries	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEQUERIESPROC __rglgen_glDeleteQueries;$/;"	v
__rglgen_glDeleteQueriesARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEQUERIESARBPROC __rglgen_glDeleteQueriesARB;$/;"	v
__rglgen_glDeleteRenderbuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETERENDERBUFFERSPROC __rglgen_glDeleteRenderbuffers;$/;"	v
__rglgen_glDeleteSamplers	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETESAMPLERSPROC __rglgen_glDeleteSamplers;$/;"	v
__rglgen_glDeleteShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETESHADERPROC __rglgen_glDeleteShader;$/;"	v
__rglgen_glDeleteSync	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETESYNCPROC __rglgen_glDeleteSync;$/;"	v
__rglgen_glDeleteTransformFeedbacks	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETETRANSFORMFEEDBACKSPROC __rglgen_glDeleteTransformFeedbacks;$/;"	v
__rglgen_glDeleteVertexArrays	gfx/glsym/glsym_gl.c	/^RGLSYMGLDELETEVERTEXARRAYSPROC __rglgen_glDeleteVertexArrays;$/;"	v
__rglgen_glDeleteVertexArraysOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLDELETEVERTEXARRAYSOESPROC __rglgen_glDeleteVertexArraysOES;$/;"	v
__rglgen_glDepthRangeArrayv	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEPTHRANGEARRAYVPROC __rglgen_glDepthRangeArrayv;$/;"	v
__rglgen_glDepthRangeIndexed	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEPTHRANGEINDEXEDPROC __rglgen_glDepthRangeIndexed;$/;"	v
__rglgen_glDepthRangef	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEPTHRANGEFPROC __rglgen_glDepthRangef;$/;"	v
__rglgen_glDepthRangefOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEPTHRANGEFOESPROC __rglgen_glDepthRangefOES;$/;"	v
__rglgen_glDepthRangexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLDEPTHRANGEXOESPROC __rglgen_glDepthRangexOES;$/;"	v
__rglgen_glDetachObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDETACHOBJECTARBPROC __rglgen_glDetachObjectARB;$/;"	v
__rglgen_glDetachShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLDETACHSHADERPROC __rglgen_glDetachShader;$/;"	v
__rglgen_glDisableVertexAttribArray	gfx/glsym/glsym_gl.c	/^RGLSYMGLDISABLEVERTEXATTRIBARRAYPROC __rglgen_glDisableVertexAttribArray;$/;"	v
__rglgen_glDisableVertexAttribArrayARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDISABLEVERTEXATTRIBARRAYARBPROC __rglgen_glDisableVertexAttribArrayARB;$/;"	v
__rglgen_glDisablei	gfx/glsym/glsym_gl.c	/^RGLSYMGLDISABLEIPROC __rglgen_glDisablei;$/;"	v
__rglgen_glDispatchCompute	gfx/glsym/glsym_gl.c	/^RGLSYMGLDISPATCHCOMPUTEPROC __rglgen_glDispatchCompute;$/;"	v
__rglgen_glDispatchComputeIndirect	gfx/glsym/glsym_gl.c	/^RGLSYMGLDISPATCHCOMPUTEINDIRECTPROC __rglgen_glDispatchComputeIndirect;$/;"	v
__rglgen_glDrawArraysIndirect	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWARRAYSINDIRECTPROC __rglgen_glDrawArraysIndirect;$/;"	v
__rglgen_glDrawArraysInstanced	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWARRAYSINSTANCEDPROC __rglgen_glDrawArraysInstanced;$/;"	v
__rglgen_glDrawArraysInstancedARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWARRAYSINSTANCEDARBPROC __rglgen_glDrawArraysInstancedARB;$/;"	v
__rglgen_glDrawArraysInstancedBaseInstance	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __rglgen_glDrawArraysInstancedBaseInstance;$/;"	v
__rglgen_glDrawBuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWBUFFERSPROC __rglgen_glDrawBuffers;$/;"	v
__rglgen_glDrawBuffersARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWBUFFERSARBPROC __rglgen_glDrawBuffersARB;$/;"	v
__rglgen_glDrawElementsBaseVertex	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSBASEVERTEXPROC __rglgen_glDrawElementsBaseVertex;$/;"	v
__rglgen_glDrawElementsIndirect	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINDIRECTPROC __rglgen_glDrawElementsIndirect;$/;"	v
__rglgen_glDrawElementsInstanced	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINSTANCEDPROC __rglgen_glDrawElementsInstanced;$/;"	v
__rglgen_glDrawElementsInstancedARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINSTANCEDARBPROC __rglgen_glDrawElementsInstancedARB;$/;"	v
__rglgen_glDrawElementsInstancedBaseInstance	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __rglgen_glDrawElementsInstancedBaseInstance;$/;"	v
__rglgen_glDrawElementsInstancedBaseVertex	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __rglgen_glDrawElementsInstancedBaseVertex;$/;"	v
__rglgen_glDrawElementsInstancedBaseVertexBaseInstance	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __rglgen_glDrawElementsInstancedBaseVertexBaseInstance;$/;"	v
__rglgen_glDrawRangeElements	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWRANGEELEMENTSPROC __rglgen_glDrawRangeElements;$/;"	v
__rglgen_glDrawRangeElementsBaseVertex	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWRANGEELEMENTSBASEVERTEXPROC __rglgen_glDrawRangeElementsBaseVertex;$/;"	v
__rglgen_glDrawTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWTRANSFORMFEEDBACKPROC __rglgen_glDrawTransformFeedback;$/;"	v
__rglgen_glDrawTransformFeedbackInstanced	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __rglgen_glDrawTransformFeedbackInstanced;$/;"	v
__rglgen_glDrawTransformFeedbackStream	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMPROC __rglgen_glDrawTransformFeedbackStream;$/;"	v
__rglgen_glDrawTransformFeedbackStreamInstanced	gfx/glsym/glsym_gl.c	/^RGLSYMGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __rglgen_glDrawTransformFeedbackStreamInstanced;$/;"	v
__rglgen_glEGLImageTargetRenderbufferStorageOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC __rglgen_glEGLImageTargetRenderbufferStorageOES;$/;"	v
__rglgen_glEGLImageTargetTexture2DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLEGLIMAGETARGETTEXTURE2DOESPROC __rglgen_glEGLImageTargetTexture2DOES;$/;"	v
__rglgen_glEnableVertexAttribArray	gfx/glsym/glsym_gl.c	/^RGLSYMGLENABLEVERTEXATTRIBARRAYPROC __rglgen_glEnableVertexAttribArray;$/;"	v
__rglgen_glEnableVertexAttribArrayARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLENABLEVERTEXATTRIBARRAYARBPROC __rglgen_glEnableVertexAttribArrayARB;$/;"	v
__rglgen_glEnablei	gfx/glsym/glsym_gl.c	/^RGLSYMGLENABLEIPROC __rglgen_glEnablei;$/;"	v
__rglgen_glEndConditionalRender	gfx/glsym/glsym_gl.c	/^RGLSYMGLENDCONDITIONALRENDERPROC __rglgen_glEndConditionalRender;$/;"	v
__rglgen_glEndQuery	gfx/glsym/glsym_gl.c	/^RGLSYMGLENDQUERYPROC __rglgen_glEndQuery;$/;"	v
__rglgen_glEndQueryARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLENDQUERYARBPROC __rglgen_glEndQueryARB;$/;"	v
__rglgen_glEndQueryIndexed	gfx/glsym/glsym_gl.c	/^RGLSYMGLENDQUERYINDEXEDPROC __rglgen_glEndQueryIndexed;$/;"	v
__rglgen_glEndTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLENDTRANSFORMFEEDBACKPROC __rglgen_glEndTransformFeedback;$/;"	v
__rglgen_glEvalCoord1xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLEVALCOORD1XOESPROC __rglgen_glEvalCoord1xOES;$/;"	v
__rglgen_glEvalCoord1xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLEVALCOORD1XVOESPROC __rglgen_glEvalCoord1xvOES;$/;"	v
__rglgen_glEvalCoord2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLEVALCOORD2XOESPROC __rglgen_glEvalCoord2xOES;$/;"	v
__rglgen_glEvalCoord2xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLEVALCOORD2XVOESPROC __rglgen_glEvalCoord2xvOES;$/;"	v
__rglgen_glFeedbackBufferxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLFEEDBACKBUFFERXOESPROC __rglgen_glFeedbackBufferxOES;$/;"	v
__rglgen_glFenceSync	gfx/glsym/glsym_gl.c	/^RGLSYMGLFENCESYNCPROC __rglgen_glFenceSync;$/;"	v
__rglgen_glFlushMappedBufferRange	gfx/glsym/glsym_gl.c	/^RGLSYMGLFLUSHMAPPEDBUFFERRANGEPROC __rglgen_glFlushMappedBufferRange;$/;"	v
__rglgen_glFogCoordPointer	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGCOORDPOINTERPROC __rglgen_glFogCoordPointer;$/;"	v
__rglgen_glFogCoordd	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGCOORDDPROC __rglgen_glFogCoordd;$/;"	v
__rglgen_glFogCoorddv	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGCOORDDVPROC __rglgen_glFogCoorddv;$/;"	v
__rglgen_glFogCoordf	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGCOORDFPROC __rglgen_glFogCoordf;$/;"	v
__rglgen_glFogCoordfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGCOORDFVPROC __rglgen_glFogCoordfv;$/;"	v
__rglgen_glFogxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGXOESPROC __rglgen_glFogxOES;$/;"	v
__rglgen_glFogxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLFOGXVOESPROC __rglgen_glFogxvOES;$/;"	v
__rglgen_glFramebufferParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERPARAMETERIPROC __rglgen_glFramebufferParameteri;$/;"	v
__rglgen_glFramebufferRenderbuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERRENDERBUFFERPROC __rglgen_glFramebufferRenderbuffer;$/;"	v
__rglgen_glFramebufferTexture	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTUREPROC __rglgen_glFramebufferTexture;$/;"	v
__rglgen_glFramebufferTexture1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTURE1DPROC __rglgen_glFramebufferTexture1D;$/;"	v
__rglgen_glFramebufferTexture2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTURE2DPROC __rglgen_glFramebufferTexture2D;$/;"	v
__rglgen_glFramebufferTexture3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTURE3DPROC __rglgen_glFramebufferTexture3D;$/;"	v
__rglgen_glFramebufferTexture3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLFRAMEBUFFERTEXTURE3DOESPROC __rglgen_glFramebufferTexture3DOES;$/;"	v
__rglgen_glFramebufferTextureARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTUREARBPROC __rglgen_glFramebufferTextureARB;$/;"	v
__rglgen_glFramebufferTextureFaceARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTUREFACEARBPROC __rglgen_glFramebufferTextureFaceARB;$/;"	v
__rglgen_glFramebufferTextureLayer	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTURELAYERPROC __rglgen_glFramebufferTextureLayer;$/;"	v
__rglgen_glFramebufferTextureLayerARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRAMEBUFFERTEXTURELAYERARBPROC __rglgen_glFramebufferTextureLayerARB;$/;"	v
__rglgen_glFrustumfOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRUSTUMFOESPROC __rglgen_glFrustumfOES;$/;"	v
__rglgen_glFrustumxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLFRUSTUMXOESPROC __rglgen_glFrustumxOES;$/;"	v
__rglgen_glGenBuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENBUFFERSPROC __rglgen_glGenBuffers;$/;"	v
__rglgen_glGenBuffersARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENBUFFERSARBPROC __rglgen_glGenBuffersARB;$/;"	v
__rglgen_glGenFramebuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENFRAMEBUFFERSPROC __rglgen_glGenFramebuffers;$/;"	v
__rglgen_glGenProgramPipelines	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENPROGRAMPIPELINESPROC __rglgen_glGenProgramPipelines;$/;"	v
__rglgen_glGenProgramsARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENPROGRAMSARBPROC __rglgen_glGenProgramsARB;$/;"	v
__rglgen_glGenQueries	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENQUERIESPROC __rglgen_glGenQueries;$/;"	v
__rglgen_glGenQueriesARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENQUERIESARBPROC __rglgen_glGenQueriesARB;$/;"	v
__rglgen_glGenRenderbuffers	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENRENDERBUFFERSPROC __rglgen_glGenRenderbuffers;$/;"	v
__rglgen_glGenSamplers	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENSAMPLERSPROC __rglgen_glGenSamplers;$/;"	v
__rglgen_glGenTransformFeedbacks	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENTRANSFORMFEEDBACKSPROC __rglgen_glGenTransformFeedbacks;$/;"	v
__rglgen_glGenVertexArrays	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENVERTEXARRAYSPROC __rglgen_glGenVertexArrays;$/;"	v
__rglgen_glGenVertexArraysOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLGENVERTEXARRAYSOESPROC __rglgen_glGenVertexArraysOES;$/;"	v
__rglgen_glGenerateMipmap	gfx/glsym/glsym_gl.c	/^RGLSYMGLGENERATEMIPMAPPROC __rglgen_glGenerateMipmap;$/;"	v
__rglgen_glGetActiveAtomicCounterBufferiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __rglgen_glGetActiveAtomicCounterBufferiv;$/;"	v
__rglgen_glGetActiveAttrib	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEATTRIBPROC __rglgen_glGetActiveAttrib;$/;"	v
__rglgen_glGetActiveAttribARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEATTRIBARBPROC __rglgen_glGetActiveAttribARB;$/;"	v
__rglgen_glGetActiveSubroutineName	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVESUBROUTINENAMEPROC __rglgen_glGetActiveSubroutineName;$/;"	v
__rglgen_glGetActiveSubroutineUniformName	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __rglgen_glGetActiveSubroutineUniformName;$/;"	v
__rglgen_glGetActiveSubroutineUniformiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVESUBROUTINEUNIFORMIVPROC __rglgen_glGetActiveSubroutineUniformiv;$/;"	v
__rglgen_glGetActiveUniform	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMPROC __rglgen_glGetActiveUniform;$/;"	v
__rglgen_glGetActiveUniformARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMARBPROC __rglgen_glGetActiveUniformARB;$/;"	v
__rglgen_glGetActiveUniformBlockName	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMBLOCKNAMEPROC __rglgen_glGetActiveUniformBlockName;$/;"	v
__rglgen_glGetActiveUniformBlockiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMBLOCKIVPROC __rglgen_glGetActiveUniformBlockiv;$/;"	v
__rglgen_glGetActiveUniformName	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMNAMEPROC __rglgen_glGetActiveUniformName;$/;"	v
__rglgen_glGetActiveUniformsiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETACTIVEUNIFORMSIVPROC __rglgen_glGetActiveUniformsiv;$/;"	v
__rglgen_glGetAttachedObjectsARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETATTACHEDOBJECTSARBPROC __rglgen_glGetAttachedObjectsARB;$/;"	v
__rglgen_glGetAttachedShaders	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETATTACHEDSHADERSPROC __rglgen_glGetAttachedShaders;$/;"	v
__rglgen_glGetAttribLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETATTRIBLOCATIONPROC __rglgen_glGetAttribLocation;$/;"	v
__rglgen_glGetAttribLocationARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETATTRIBLOCATIONARBPROC __rglgen_glGetAttribLocationARB;$/;"	v
__rglgen_glGetBooleani_v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBOOLEANI_VPROC __rglgen_glGetBooleani_v;$/;"	v
__rglgen_glGetBufferParameteri64v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERPARAMETERI64VPROC __rglgen_glGetBufferParameteri64v;$/;"	v
__rglgen_glGetBufferParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERPARAMETERIVPROC __rglgen_glGetBufferParameteriv;$/;"	v
__rglgen_glGetBufferParameterivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERPARAMETERIVARBPROC __rglgen_glGetBufferParameterivARB;$/;"	v
__rglgen_glGetBufferPointerv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERPOINTERVPROC __rglgen_glGetBufferPointerv;$/;"	v
__rglgen_glGetBufferPointervARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERPOINTERVARBPROC __rglgen_glGetBufferPointervARB;$/;"	v
__rglgen_glGetBufferPointervOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETBUFFERPOINTERVOESPROC __rglgen_glGetBufferPointervOES;$/;"	v
__rglgen_glGetBufferSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERSUBDATAPROC __rglgen_glGetBufferSubData;$/;"	v
__rglgen_glGetBufferSubDataARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETBUFFERSUBDATAARBPROC __rglgen_glGetBufferSubDataARB;$/;"	v
__rglgen_glGetClipPlanefOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCLIPPLANEFOESPROC __rglgen_glGetClipPlanefOES;$/;"	v
__rglgen_glGetClipPlanexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCLIPPLANEXOESPROC __rglgen_glGetClipPlanexOES;$/;"	v
__rglgen_glGetColorTable	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCOLORTABLEPROC __rglgen_glGetColorTable;$/;"	v
__rglgen_glGetColorTableParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCOLORTABLEPARAMETERFVPROC __rglgen_glGetColorTableParameterfv;$/;"	v
__rglgen_glGetColorTableParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCOLORTABLEPARAMETERIVPROC __rglgen_glGetColorTableParameteriv;$/;"	v
__rglgen_glGetCompressedTexImage	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCOMPRESSEDTEXIMAGEPROC __rglgen_glGetCompressedTexImage;$/;"	v
__rglgen_glGetCompressedTexImageARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCOMPRESSEDTEXIMAGEARBPROC __rglgen_glGetCompressedTexImageARB;$/;"	v
__rglgen_glGetConvolutionFilter	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCONVOLUTIONFILTERPROC __rglgen_glGetConvolutionFilter;$/;"	v
__rglgen_glGetConvolutionParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCONVOLUTIONPARAMETERFVPROC __rglgen_glGetConvolutionParameterfv;$/;"	v
__rglgen_glGetConvolutionParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCONVOLUTIONPARAMETERIVPROC __rglgen_glGetConvolutionParameteriv;$/;"	v
__rglgen_glGetConvolutionParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETCONVOLUTIONPARAMETERXVOESPROC __rglgen_glGetConvolutionParameterxvOES;$/;"	v
__rglgen_glGetDebugMessageLog	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETDEBUGMESSAGELOGPROC __rglgen_glGetDebugMessageLog;$/;"	v
__rglgen_glGetDebugMessageLog	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETDEBUGMESSAGELOGPROC __rglgen_glGetDebugMessageLog;$/;"	v
__rglgen_glGetDebugMessageLogARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETDEBUGMESSAGELOGARBPROC __rglgen_glGetDebugMessageLogARB;$/;"	v
__rglgen_glGetDoublei_v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETDOUBLEI_VPROC __rglgen_glGetDoublei_v;$/;"	v
__rglgen_glGetFixedvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFIXEDVOESPROC __rglgen_glGetFixedvOES;$/;"	v
__rglgen_glGetFloati_v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFLOATI_VPROC __rglgen_glGetFloati_v;$/;"	v
__rglgen_glGetFragDataIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFRAGDATAINDEXPROC __rglgen_glGetFragDataIndex;$/;"	v
__rglgen_glGetFragDataLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFRAGDATALOCATIONPROC __rglgen_glGetFragDataLocation;$/;"	v
__rglgen_glGetFramebufferAttachmentParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __rglgen_glGetFramebufferAttachmentParameteriv;$/;"	v
__rglgen_glGetFramebufferParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETFRAMEBUFFERPARAMETERIVPROC __rglgen_glGetFramebufferParameteriv;$/;"	v
__rglgen_glGetGraphicsResetStatusARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETGRAPHICSRESETSTATUSARBPROC __rglgen_glGetGraphicsResetStatusARB;$/;"	v
__rglgen_glGetHandleARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETHANDLEARBPROC __rglgen_glGetHandleARB;$/;"	v
__rglgen_glGetHistogram	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETHISTOGRAMPROC __rglgen_glGetHistogram;$/;"	v
__rglgen_glGetHistogramParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETHISTOGRAMPARAMETERFVPROC __rglgen_glGetHistogramParameterfv;$/;"	v
__rglgen_glGetHistogramParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETHISTOGRAMPARAMETERIVPROC __rglgen_glGetHistogramParameteriv;$/;"	v
__rglgen_glGetHistogramParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETHISTOGRAMPARAMETERXVOESPROC __rglgen_glGetHistogramParameterxvOES;$/;"	v
__rglgen_glGetImageTransformParameterfvHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETIMAGETRANSFORMPARAMETERFVHPPROC __rglgen_glGetImageTransformParameterfvHP;$/;"	v
__rglgen_glGetImageTransformParameterivHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETIMAGETRANSFORMPARAMETERIVHPPROC __rglgen_glGetImageTransformParameterivHP;$/;"	v
__rglgen_glGetInfoLogARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINFOLOGARBPROC __rglgen_glGetInfoLogARB;$/;"	v
__rglgen_glGetInteger64i_v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINTEGER64I_VPROC __rglgen_glGetInteger64i_v;$/;"	v
__rglgen_glGetInteger64v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINTEGER64VPROC __rglgen_glGetInteger64v;$/;"	v
__rglgen_glGetIntegeri_v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINTEGERI_VPROC __rglgen_glGetIntegeri_v;$/;"	v
__rglgen_glGetInternalformati64v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINTERNALFORMATI64VPROC __rglgen_glGetInternalformati64v;$/;"	v
__rglgen_glGetInternalformativ	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETINTERNALFORMATIVPROC __rglgen_glGetInternalformativ;$/;"	v
__rglgen_glGetLightxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETLIGHTXOESPROC __rglgen_glGetLightxOES;$/;"	v
__rglgen_glGetMapxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMAPXVOESPROC __rglgen_glGetMapxvOES;$/;"	v
__rglgen_glGetMaterialxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMATERIALXOESPROC __rglgen_glGetMaterialxOES;$/;"	v
__rglgen_glGetMinmax	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMINMAXPROC __rglgen_glGetMinmax;$/;"	v
__rglgen_glGetMinmaxParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMINMAXPARAMETERFVPROC __rglgen_glGetMinmaxParameterfv;$/;"	v
__rglgen_glGetMinmaxParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMINMAXPARAMETERIVPROC __rglgen_glGetMinmaxParameteriv;$/;"	v
__rglgen_glGetMultisamplefv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETMULTISAMPLEFVPROC __rglgen_glGetMultisamplefv;$/;"	v
__rglgen_glGetNamedStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNAMEDSTRINGARBPROC __rglgen_glGetNamedStringARB;$/;"	v
__rglgen_glGetNamedStringivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNAMEDSTRINGIVARBPROC __rglgen_glGetNamedStringivARB;$/;"	v
__rglgen_glGetObjectLabel	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETOBJECTLABELPROC __rglgen_glGetObjectLabel;$/;"	v
__rglgen_glGetObjectLabel	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETOBJECTLABELPROC __rglgen_glGetObjectLabel;$/;"	v
__rglgen_glGetObjectParameterfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETOBJECTPARAMETERFVARBPROC __rglgen_glGetObjectParameterfvARB;$/;"	v
__rglgen_glGetObjectParameterivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETOBJECTPARAMETERIVARBPROC __rglgen_glGetObjectParameterivARB;$/;"	v
__rglgen_glGetObjectPtrLabel	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETOBJECTPTRLABELPROC __rglgen_glGetObjectPtrLabel;$/;"	v
__rglgen_glGetObjectPtrLabel	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETOBJECTPTRLABELPROC __rglgen_glGetObjectPtrLabel;$/;"	v
__rglgen_glGetPixelMapxv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPIXELMAPXVPROC __rglgen_glGetPixelMapxv;$/;"	v
__rglgen_glGetPointerv	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETPOINTERVPROC __rglgen_glGetPointerv;$/;"	v
__rglgen_glGetProgramBinary	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMBINARYPROC __rglgen_glGetProgramBinary;$/;"	v
__rglgen_glGetProgramBinaryOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLGETPROGRAMBINARYOESPROC __rglgen_glGetProgramBinaryOES;$/;"	v
__rglgen_glGetProgramEnvParameterdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMENVPARAMETERDVARBPROC __rglgen_glGetProgramEnvParameterdvARB;$/;"	v
__rglgen_glGetProgramEnvParameterfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMENVPARAMETERFVARBPROC __rglgen_glGetProgramEnvParameterfvARB;$/;"	v
__rglgen_glGetProgramInfoLog	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMINFOLOGPROC __rglgen_glGetProgramInfoLog;$/;"	v
__rglgen_glGetProgramInterfaceiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMINTERFACEIVPROC __rglgen_glGetProgramInterfaceiv;$/;"	v
__rglgen_glGetProgramLocalParameterdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMLOCALPARAMETERDVARBPROC __rglgen_glGetProgramLocalParameterdvARB;$/;"	v
__rglgen_glGetProgramLocalParameterfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMLOCALPARAMETERFVARBPROC __rglgen_glGetProgramLocalParameterfvARB;$/;"	v
__rglgen_glGetProgramPipelineInfoLog	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMPIPELINEINFOLOGPROC __rglgen_glGetProgramPipelineInfoLog;$/;"	v
__rglgen_glGetProgramPipelineiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMPIPELINEIVPROC __rglgen_glGetProgramPipelineiv;$/;"	v
__rglgen_glGetProgramResourceIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMRESOURCEINDEXPROC __rglgen_glGetProgramResourceIndex;$/;"	v
__rglgen_glGetProgramResourceLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMRESOURCELOCATIONPROC __rglgen_glGetProgramResourceLocation;$/;"	v
__rglgen_glGetProgramResourceLocationIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMRESOURCELOCATIONINDEXPROC __rglgen_glGetProgramResourceLocationIndex;$/;"	v
__rglgen_glGetProgramResourceName	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMRESOURCENAMEPROC __rglgen_glGetProgramResourceName;$/;"	v
__rglgen_glGetProgramResourceiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMRESOURCEIVPROC __rglgen_glGetProgramResourceiv;$/;"	v
__rglgen_glGetProgramStageiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMSTAGEIVPROC __rglgen_glGetProgramStageiv;$/;"	v
__rglgen_glGetProgramStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMSTRINGARBPROC __rglgen_glGetProgramStringARB;$/;"	v
__rglgen_glGetProgramiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMIVPROC __rglgen_glGetProgramiv;$/;"	v
__rglgen_glGetProgramivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETPROGRAMIVARBPROC __rglgen_glGetProgramivARB;$/;"	v
__rglgen_glGetQueryIndexediv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYINDEXEDIVPROC __rglgen_glGetQueryIndexediv;$/;"	v
__rglgen_glGetQueryObjecti64v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTI64VPROC __rglgen_glGetQueryObjecti64v;$/;"	v
__rglgen_glGetQueryObjectiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTIVPROC __rglgen_glGetQueryObjectiv;$/;"	v
__rglgen_glGetQueryObjectivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTIVARBPROC __rglgen_glGetQueryObjectivARB;$/;"	v
__rglgen_glGetQueryObjectui64v	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTUI64VPROC __rglgen_glGetQueryObjectui64v;$/;"	v
__rglgen_glGetQueryObjectuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTUIVPROC __rglgen_glGetQueryObjectuiv;$/;"	v
__rglgen_glGetQueryObjectuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYOBJECTUIVARBPROC __rglgen_glGetQueryObjectuivARB;$/;"	v
__rglgen_glGetQueryiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYIVPROC __rglgen_glGetQueryiv;$/;"	v
__rglgen_glGetQueryivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETQUERYIVARBPROC __rglgen_glGetQueryivARB;$/;"	v
__rglgen_glGetRenderbufferParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETRENDERBUFFERPARAMETERIVPROC __rglgen_glGetRenderbufferParameteriv;$/;"	v
__rglgen_glGetSamplerParameterIiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSAMPLERPARAMETERIIVPROC __rglgen_glGetSamplerParameterIiv;$/;"	v
__rglgen_glGetSamplerParameterIuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSAMPLERPARAMETERIUIVPROC __rglgen_glGetSamplerParameterIuiv;$/;"	v
__rglgen_glGetSamplerParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSAMPLERPARAMETERFVPROC __rglgen_glGetSamplerParameterfv;$/;"	v
__rglgen_glGetSamplerParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSAMPLERPARAMETERIVPROC __rglgen_glGetSamplerParameteriv;$/;"	v
__rglgen_glGetSeparableFilter	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSEPARABLEFILTERPROC __rglgen_glGetSeparableFilter;$/;"	v
__rglgen_glGetShaderInfoLog	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSHADERINFOLOGPROC __rglgen_glGetShaderInfoLog;$/;"	v
__rglgen_glGetShaderPrecisionFormat	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSHADERPRECISIONFORMATPROC __rglgen_glGetShaderPrecisionFormat;$/;"	v
__rglgen_glGetShaderSource	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSHADERSOURCEPROC __rglgen_glGetShaderSource;$/;"	v
__rglgen_glGetShaderSourceARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSHADERSOURCEARBPROC __rglgen_glGetShaderSourceARB;$/;"	v
__rglgen_glGetShaderiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSHADERIVPROC __rglgen_glGetShaderiv;$/;"	v
__rglgen_glGetStringi	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSTRINGIPROC __rglgen_glGetStringi;$/;"	v
__rglgen_glGetSubroutineIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSUBROUTINEINDEXPROC __rglgen_glGetSubroutineIndex;$/;"	v
__rglgen_glGetSubroutineUniformLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSUBROUTINEUNIFORMLOCATIONPROC __rglgen_glGetSubroutineUniformLocation;$/;"	v
__rglgen_glGetSynciv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETSYNCIVPROC __rglgen_glGetSynciv;$/;"	v
__rglgen_glGetTexEnvxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXENVXVOESPROC __rglgen_glGetTexEnvxvOES;$/;"	v
__rglgen_glGetTexGenxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXGENXVOESPROC __rglgen_glGetTexGenxvOES;$/;"	v
__rglgen_glGetTexLevelParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXLEVELPARAMETERXVOESPROC __rglgen_glGetTexLevelParameterxvOES;$/;"	v
__rglgen_glGetTexParameterIiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXPARAMETERIIVPROC __rglgen_glGetTexParameterIiv;$/;"	v
__rglgen_glGetTexParameterIuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXPARAMETERIUIVPROC __rglgen_glGetTexParameterIuiv;$/;"	v
__rglgen_glGetTexParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTEXPARAMETERXVOESPROC __rglgen_glGetTexParameterxvOES;$/;"	v
__rglgen_glGetTransformFeedbackVarying	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETTRANSFORMFEEDBACKVARYINGPROC __rglgen_glGetTransformFeedbackVarying;$/;"	v
__rglgen_glGetUniformBlockIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMBLOCKINDEXPROC __rglgen_glGetUniformBlockIndex;$/;"	v
__rglgen_glGetUniformIndices	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMINDICESPROC __rglgen_glGetUniformIndices;$/;"	v
__rglgen_glGetUniformLocation	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMLOCATIONPROC __rglgen_glGetUniformLocation;$/;"	v
__rglgen_glGetUniformLocationARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMLOCATIONARBPROC __rglgen_glGetUniformLocationARB;$/;"	v
__rglgen_glGetUniformSubroutineuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMSUBROUTINEUIVPROC __rglgen_glGetUniformSubroutineuiv;$/;"	v
__rglgen_glGetUniformdv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMDVPROC __rglgen_glGetUniformdv;$/;"	v
__rglgen_glGetUniformfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMFVPROC __rglgen_glGetUniformfv;$/;"	v
__rglgen_glGetUniformfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMFVARBPROC __rglgen_glGetUniformfvARB;$/;"	v
__rglgen_glGetUniformiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMIVPROC __rglgen_glGetUniformiv;$/;"	v
__rglgen_glGetUniformivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMIVARBPROC __rglgen_glGetUniformivARB;$/;"	v
__rglgen_glGetUniformuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETUNIFORMUIVPROC __rglgen_glGetUniformuiv;$/;"	v
__rglgen_glGetVertexAttribIiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBIIVPROC __rglgen_glGetVertexAttribIiv;$/;"	v
__rglgen_glGetVertexAttribIuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBIUIVPROC __rglgen_glGetVertexAttribIuiv;$/;"	v
__rglgen_glGetVertexAttribLdv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBLDVPROC __rglgen_glGetVertexAttribLdv;$/;"	v
__rglgen_glGetVertexAttribPointerv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBPOINTERVPROC __rglgen_glGetVertexAttribPointerv;$/;"	v
__rglgen_glGetVertexAttribPointervARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBPOINTERVARBPROC __rglgen_glGetVertexAttribPointervARB;$/;"	v
__rglgen_glGetVertexAttribdv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBDVPROC __rglgen_glGetVertexAttribdv;$/;"	v
__rglgen_glGetVertexAttribdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBDVARBPROC __rglgen_glGetVertexAttribdvARB;$/;"	v
__rglgen_glGetVertexAttribfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBFVPROC __rglgen_glGetVertexAttribfv;$/;"	v
__rglgen_glGetVertexAttribfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBFVARBPROC __rglgen_glGetVertexAttribfvARB;$/;"	v
__rglgen_glGetVertexAttribiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBIVPROC __rglgen_glGetVertexAttribiv;$/;"	v
__rglgen_glGetVertexAttribivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETVERTEXATTRIBIVARBPROC __rglgen_glGetVertexAttribivARB;$/;"	v
__rglgen_glGetnColorTableARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNCOLORTABLEARBPROC __rglgen_glGetnColorTableARB;$/;"	v
__rglgen_glGetnCompressedTexImageARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNCOMPRESSEDTEXIMAGEARBPROC __rglgen_glGetnCompressedTexImageARB;$/;"	v
__rglgen_glGetnConvolutionFilterARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNCONVOLUTIONFILTERARBPROC __rglgen_glGetnConvolutionFilterARB;$/;"	v
__rglgen_glGetnHistogramARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNHISTOGRAMARBPROC __rglgen_glGetnHistogramARB;$/;"	v
__rglgen_glGetnMapdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNMAPDVARBPROC __rglgen_glGetnMapdvARB;$/;"	v
__rglgen_glGetnMapfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNMAPFVARBPROC __rglgen_glGetnMapfvARB;$/;"	v
__rglgen_glGetnMapivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNMAPIVARBPROC __rglgen_glGetnMapivARB;$/;"	v
__rglgen_glGetnMinmaxARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNMINMAXARBPROC __rglgen_glGetnMinmaxARB;$/;"	v
__rglgen_glGetnPixelMapfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNPIXELMAPFVARBPROC __rglgen_glGetnPixelMapfvARB;$/;"	v
__rglgen_glGetnPixelMapuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNPIXELMAPUIVARBPROC __rglgen_glGetnPixelMapuivARB;$/;"	v
__rglgen_glGetnPixelMapusvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNPIXELMAPUSVARBPROC __rglgen_glGetnPixelMapusvARB;$/;"	v
__rglgen_glGetnPolygonStippleARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNPOLYGONSTIPPLEARBPROC __rglgen_glGetnPolygonStippleARB;$/;"	v
__rglgen_glGetnSeparableFilterARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNSEPARABLEFILTERARBPROC __rglgen_glGetnSeparableFilterARB;$/;"	v
__rglgen_glGetnTexImageARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNTEXIMAGEARBPROC __rglgen_glGetnTexImageARB;$/;"	v
__rglgen_glGetnUniformdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNUNIFORMDVARBPROC __rglgen_glGetnUniformdvARB;$/;"	v
__rglgen_glGetnUniformfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNUNIFORMFVARBPROC __rglgen_glGetnUniformfvARB;$/;"	v
__rglgen_glGetnUniformivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNUNIFORMIVARBPROC __rglgen_glGetnUniformivARB;$/;"	v
__rglgen_glGetnUniformuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLGETNUNIFORMUIVARBPROC __rglgen_glGetnUniformuivARB;$/;"	v
__rglgen_glHistogram	gfx/glsym/glsym_gl.c	/^RGLSYMGLHISTOGRAMPROC __rglgen_glHistogram;$/;"	v
__rglgen_glImageTransformParameterfHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLIMAGETRANSFORMPARAMETERFHPPROC __rglgen_glImageTransformParameterfHP;$/;"	v
__rglgen_glImageTransformParameterfvHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLIMAGETRANSFORMPARAMETERFVHPPROC __rglgen_glImageTransformParameterfvHP;$/;"	v
__rglgen_glImageTransformParameteriHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLIMAGETRANSFORMPARAMETERIHPPROC __rglgen_glImageTransformParameteriHP;$/;"	v
__rglgen_glImageTransformParameterivHP	gfx/glsym/glsym_gl.c	/^RGLSYMGLIMAGETRANSFORMPARAMETERIVHPPROC __rglgen_glImageTransformParameterivHP;$/;"	v
__rglgen_glIndexxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLINDEXXOESPROC __rglgen_glIndexxOES;$/;"	v
__rglgen_glIndexxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLINDEXXVOESPROC __rglgen_glIndexxvOES;$/;"	v
__rglgen_glInvalidateBufferData	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATEBUFFERDATAPROC __rglgen_glInvalidateBufferData;$/;"	v
__rglgen_glInvalidateBufferSubData	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATEBUFFERSUBDATAPROC __rglgen_glInvalidateBufferSubData;$/;"	v
__rglgen_glInvalidateFramebuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATEFRAMEBUFFERPROC __rglgen_glInvalidateFramebuffer;$/;"	v
__rglgen_glInvalidateSubFramebuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATESUBFRAMEBUFFERPROC __rglgen_glInvalidateSubFramebuffer;$/;"	v
__rglgen_glInvalidateTexImage	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATETEXIMAGEPROC __rglgen_glInvalidateTexImage;$/;"	v
__rglgen_glInvalidateTexSubImage	gfx/glsym/glsym_gl.c	/^RGLSYMGLINVALIDATETEXSUBIMAGEPROC __rglgen_glInvalidateTexSubImage;$/;"	v
__rglgen_glIsBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLISBUFFERPROC __rglgen_glIsBuffer;$/;"	v
__rglgen_glIsBufferARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLISBUFFERARBPROC __rglgen_glIsBufferARB;$/;"	v
__rglgen_glIsEnabledi	gfx/glsym/glsym_gl.c	/^RGLSYMGLISENABLEDIPROC __rglgen_glIsEnabledi;$/;"	v
__rglgen_glIsFramebuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLISFRAMEBUFFERPROC __rglgen_glIsFramebuffer;$/;"	v
__rglgen_glIsNamedStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLISNAMEDSTRINGARBPROC __rglgen_glIsNamedStringARB;$/;"	v
__rglgen_glIsProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLISPROGRAMPROC __rglgen_glIsProgram;$/;"	v
__rglgen_glIsProgramARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLISPROGRAMARBPROC __rglgen_glIsProgramARB;$/;"	v
__rglgen_glIsProgramPipeline	gfx/glsym/glsym_gl.c	/^RGLSYMGLISPROGRAMPIPELINEPROC __rglgen_glIsProgramPipeline;$/;"	v
__rglgen_glIsQuery	gfx/glsym/glsym_gl.c	/^RGLSYMGLISQUERYPROC __rglgen_glIsQuery;$/;"	v
__rglgen_glIsQueryARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLISQUERYARBPROC __rglgen_glIsQueryARB;$/;"	v
__rglgen_glIsRenderbuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLISRENDERBUFFERPROC __rglgen_glIsRenderbuffer;$/;"	v
__rglgen_glIsSampler	gfx/glsym/glsym_gl.c	/^RGLSYMGLISSAMPLERPROC __rglgen_glIsSampler;$/;"	v
__rglgen_glIsShader	gfx/glsym/glsym_gl.c	/^RGLSYMGLISSHADERPROC __rglgen_glIsShader;$/;"	v
__rglgen_glIsSync	gfx/glsym/glsym_gl.c	/^RGLSYMGLISSYNCPROC __rglgen_glIsSync;$/;"	v
__rglgen_glIsTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLISTRANSFORMFEEDBACKPROC __rglgen_glIsTransformFeedback;$/;"	v
__rglgen_glIsVertexArray	gfx/glsym/glsym_gl.c	/^RGLSYMGLISVERTEXARRAYPROC __rglgen_glIsVertexArray;$/;"	v
__rglgen_glIsVertexArrayOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLISVERTEXARRAYOESPROC __rglgen_glIsVertexArrayOES;$/;"	v
__rglgen_glLightModelxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLIGHTMODELXOESPROC __rglgen_glLightModelxOES;$/;"	v
__rglgen_glLightModelxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLIGHTMODELXVOESPROC __rglgen_glLightModelxvOES;$/;"	v
__rglgen_glLightxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLIGHTXOESPROC __rglgen_glLightxOES;$/;"	v
__rglgen_glLightxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLIGHTXVOESPROC __rglgen_glLightxvOES;$/;"	v
__rglgen_glLineWidthxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLINEWIDTHXOESPROC __rglgen_glLineWidthxOES;$/;"	v
__rglgen_glLinkProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLLINKPROGRAMPROC __rglgen_glLinkProgram;$/;"	v
__rglgen_glLinkProgramARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLLINKPROGRAMARBPROC __rglgen_glLinkProgramARB;$/;"	v
__rglgen_glLoadMatrixxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADMATRIXXOESPROC __rglgen_glLoadMatrixxOES;$/;"	v
__rglgen_glLoadTransposeMatrixd	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADTRANSPOSEMATRIXDPROC __rglgen_glLoadTransposeMatrixd;$/;"	v
__rglgen_glLoadTransposeMatrixdARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADTRANSPOSEMATRIXDARBPROC __rglgen_glLoadTransposeMatrixdARB;$/;"	v
__rglgen_glLoadTransposeMatrixf	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADTRANSPOSEMATRIXFPROC __rglgen_glLoadTransposeMatrixf;$/;"	v
__rglgen_glLoadTransposeMatrixfARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADTRANSPOSEMATRIXFARBPROC __rglgen_glLoadTransposeMatrixfARB;$/;"	v
__rglgen_glLoadTransposeMatrixxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLLOADTRANSPOSEMATRIXXOESPROC __rglgen_glLoadTransposeMatrixxOES;$/;"	v
__rglgen_glMap1xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAP1XOESPROC __rglgen_glMap1xOES;$/;"	v
__rglgen_glMap2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAP2XOESPROC __rglgen_glMap2xOES;$/;"	v
__rglgen_glMapBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAPBUFFERPROC __rglgen_glMapBuffer;$/;"	v
__rglgen_glMapBufferARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAPBUFFERARBPROC __rglgen_glMapBufferARB;$/;"	v
__rglgen_glMapBufferOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLMAPBUFFEROESPROC __rglgen_glMapBufferOES;$/;"	v
__rglgen_glMapBufferRange	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAPBUFFERRANGEPROC __rglgen_glMapBufferRange;$/;"	v
__rglgen_glMapGrid1xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAPGRID1XOESPROC __rglgen_glMapGrid1xOES;$/;"	v
__rglgen_glMapGrid2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMAPGRID2XOESPROC __rglgen_glMapGrid2xOES;$/;"	v
__rglgen_glMaterialxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATERIALXOESPROC __rglgen_glMaterialxOES;$/;"	v
__rglgen_glMaterialxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATERIALXVOESPROC __rglgen_glMaterialxvOES;$/;"	v
__rglgen_glMatrixIndexPointerARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATRIXINDEXPOINTERARBPROC __rglgen_glMatrixIndexPointerARB;$/;"	v
__rglgen_glMatrixIndexubvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATRIXINDEXUBVARBPROC __rglgen_glMatrixIndexubvARB;$/;"	v
__rglgen_glMatrixIndexuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATRIXINDEXUIVARBPROC __rglgen_glMatrixIndexuivARB;$/;"	v
__rglgen_glMatrixIndexusvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMATRIXINDEXUSVARBPROC __rglgen_glMatrixIndexusvARB;$/;"	v
__rglgen_glMemoryBarrier	gfx/glsym/glsym_gl.c	/^RGLSYMGLMEMORYBARRIERPROC __rglgen_glMemoryBarrier;$/;"	v
__rglgen_glMinSampleShading	gfx/glsym/glsym_gl.c	/^RGLSYMGLMINSAMPLESHADINGPROC __rglgen_glMinSampleShading;$/;"	v
__rglgen_glMinSampleShadingARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMINSAMPLESHADINGARBPROC __rglgen_glMinSampleShadingARB;$/;"	v
__rglgen_glMinmax	gfx/glsym/glsym_gl.c	/^RGLSYMGLMINMAXPROC __rglgen_glMinmax;$/;"	v
__rglgen_glMultMatrixxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTMATRIXXOESPROC __rglgen_glMultMatrixxOES;$/;"	v
__rglgen_glMultTransposeMatrixd	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTTRANSPOSEMATRIXDPROC __rglgen_glMultTransposeMatrixd;$/;"	v
__rglgen_glMultTransposeMatrixdARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTTRANSPOSEMATRIXDARBPROC __rglgen_glMultTransposeMatrixdARB;$/;"	v
__rglgen_glMultTransposeMatrixf	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTTRANSPOSEMATRIXFPROC __rglgen_glMultTransposeMatrixf;$/;"	v
__rglgen_glMultTransposeMatrixfARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTTRANSPOSEMATRIXFARBPROC __rglgen_glMultTransposeMatrixfARB;$/;"	v
__rglgen_glMultTransposeMatrixxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTTRANSPOSEMATRIXXOESPROC __rglgen_glMultTransposeMatrixxOES;$/;"	v
__rglgen_glMultiDrawArrays	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTIDRAWARRAYSPROC __rglgen_glMultiDrawArrays;$/;"	v
__rglgen_glMultiDrawArraysIndirect	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTIDRAWARRAYSINDIRECTPROC __rglgen_glMultiDrawArraysIndirect;$/;"	v
__rglgen_glMultiDrawElements	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTIDRAWELEMENTSPROC __rglgen_glMultiDrawElements;$/;"	v
__rglgen_glMultiDrawElementsBaseVertex	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTIDRAWELEMENTSBASEVERTEXPROC __rglgen_glMultiDrawElementsBaseVertex;$/;"	v
__rglgen_glMultiDrawElementsIndirect	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTIDRAWELEMENTSINDIRECTPROC __rglgen_glMultiDrawElementsIndirect;$/;"	v
__rglgen_glMultiTexCoord1bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1BOESPROC __rglgen_glMultiTexCoord1bOES;$/;"	v
__rglgen_glMultiTexCoord1bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1BVOESPROC __rglgen_glMultiTexCoord1bvOES;$/;"	v
__rglgen_glMultiTexCoord1d	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1DPROC __rglgen_glMultiTexCoord1d;$/;"	v
__rglgen_glMultiTexCoord1dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1DARBPROC __rglgen_glMultiTexCoord1dARB;$/;"	v
__rglgen_glMultiTexCoord1dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1DVPROC __rglgen_glMultiTexCoord1dv;$/;"	v
__rglgen_glMultiTexCoord1dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1DVARBPROC __rglgen_glMultiTexCoord1dvARB;$/;"	v
__rglgen_glMultiTexCoord1f	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1FPROC __rglgen_glMultiTexCoord1f;$/;"	v
__rglgen_glMultiTexCoord1fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1FARBPROC __rglgen_glMultiTexCoord1fARB;$/;"	v
__rglgen_glMultiTexCoord1fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1FVPROC __rglgen_glMultiTexCoord1fv;$/;"	v
__rglgen_glMultiTexCoord1fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1FVARBPROC __rglgen_glMultiTexCoord1fvARB;$/;"	v
__rglgen_glMultiTexCoord1i	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1IPROC __rglgen_glMultiTexCoord1i;$/;"	v
__rglgen_glMultiTexCoord1iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1IARBPROC __rglgen_glMultiTexCoord1iARB;$/;"	v
__rglgen_glMultiTexCoord1iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1IVPROC __rglgen_glMultiTexCoord1iv;$/;"	v
__rglgen_glMultiTexCoord1ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1IVARBPROC __rglgen_glMultiTexCoord1ivARB;$/;"	v
__rglgen_glMultiTexCoord1s	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1SPROC __rglgen_glMultiTexCoord1s;$/;"	v
__rglgen_glMultiTexCoord1sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1SARBPROC __rglgen_glMultiTexCoord1sARB;$/;"	v
__rglgen_glMultiTexCoord1sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1SVPROC __rglgen_glMultiTexCoord1sv;$/;"	v
__rglgen_glMultiTexCoord1svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1SVARBPROC __rglgen_glMultiTexCoord1svARB;$/;"	v
__rglgen_glMultiTexCoord1xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1XOESPROC __rglgen_glMultiTexCoord1xOES;$/;"	v
__rglgen_glMultiTexCoord1xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD1XVOESPROC __rglgen_glMultiTexCoord1xvOES;$/;"	v
__rglgen_glMultiTexCoord2bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2BOESPROC __rglgen_glMultiTexCoord2bOES;$/;"	v
__rglgen_glMultiTexCoord2bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2BVOESPROC __rglgen_glMultiTexCoord2bvOES;$/;"	v
__rglgen_glMultiTexCoord2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2DPROC __rglgen_glMultiTexCoord2d;$/;"	v
__rglgen_glMultiTexCoord2dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2DARBPROC __rglgen_glMultiTexCoord2dARB;$/;"	v
__rglgen_glMultiTexCoord2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2DVPROC __rglgen_glMultiTexCoord2dv;$/;"	v
__rglgen_glMultiTexCoord2dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2DVARBPROC __rglgen_glMultiTexCoord2dvARB;$/;"	v
__rglgen_glMultiTexCoord2f	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2FPROC __rglgen_glMultiTexCoord2f;$/;"	v
__rglgen_glMultiTexCoord2fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2FARBPROC __rglgen_glMultiTexCoord2fARB;$/;"	v
__rglgen_glMultiTexCoord2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2FVPROC __rglgen_glMultiTexCoord2fv;$/;"	v
__rglgen_glMultiTexCoord2fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2FVARBPROC __rglgen_glMultiTexCoord2fvARB;$/;"	v
__rglgen_glMultiTexCoord2i	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2IPROC __rglgen_glMultiTexCoord2i;$/;"	v
__rglgen_glMultiTexCoord2iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2IARBPROC __rglgen_glMultiTexCoord2iARB;$/;"	v
__rglgen_glMultiTexCoord2iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2IVPROC __rglgen_glMultiTexCoord2iv;$/;"	v
__rglgen_glMultiTexCoord2ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2IVARBPROC __rglgen_glMultiTexCoord2ivARB;$/;"	v
__rglgen_glMultiTexCoord2s	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2SPROC __rglgen_glMultiTexCoord2s;$/;"	v
__rglgen_glMultiTexCoord2sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2SARBPROC __rglgen_glMultiTexCoord2sARB;$/;"	v
__rglgen_glMultiTexCoord2sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2SVPROC __rglgen_glMultiTexCoord2sv;$/;"	v
__rglgen_glMultiTexCoord2svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2SVARBPROC __rglgen_glMultiTexCoord2svARB;$/;"	v
__rglgen_glMultiTexCoord2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2XOESPROC __rglgen_glMultiTexCoord2xOES;$/;"	v
__rglgen_glMultiTexCoord2xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD2XVOESPROC __rglgen_glMultiTexCoord2xvOES;$/;"	v
__rglgen_glMultiTexCoord3bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3BOESPROC __rglgen_glMultiTexCoord3bOES;$/;"	v
__rglgen_glMultiTexCoord3bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3BVOESPROC __rglgen_glMultiTexCoord3bvOES;$/;"	v
__rglgen_glMultiTexCoord3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3DPROC __rglgen_glMultiTexCoord3d;$/;"	v
__rglgen_glMultiTexCoord3dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3DARBPROC __rglgen_glMultiTexCoord3dARB;$/;"	v
__rglgen_glMultiTexCoord3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3DVPROC __rglgen_glMultiTexCoord3dv;$/;"	v
__rglgen_glMultiTexCoord3dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3DVARBPROC __rglgen_glMultiTexCoord3dvARB;$/;"	v
__rglgen_glMultiTexCoord3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3FPROC __rglgen_glMultiTexCoord3f;$/;"	v
__rglgen_glMultiTexCoord3fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3FARBPROC __rglgen_glMultiTexCoord3fARB;$/;"	v
__rglgen_glMultiTexCoord3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3FVPROC __rglgen_glMultiTexCoord3fv;$/;"	v
__rglgen_glMultiTexCoord3fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3FVARBPROC __rglgen_glMultiTexCoord3fvARB;$/;"	v
__rglgen_glMultiTexCoord3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3IPROC __rglgen_glMultiTexCoord3i;$/;"	v
__rglgen_glMultiTexCoord3iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3IARBPROC __rglgen_glMultiTexCoord3iARB;$/;"	v
__rglgen_glMultiTexCoord3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3IVPROC __rglgen_glMultiTexCoord3iv;$/;"	v
__rglgen_glMultiTexCoord3ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3IVARBPROC __rglgen_glMultiTexCoord3ivARB;$/;"	v
__rglgen_glMultiTexCoord3s	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3SPROC __rglgen_glMultiTexCoord3s;$/;"	v
__rglgen_glMultiTexCoord3sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3SARBPROC __rglgen_glMultiTexCoord3sARB;$/;"	v
__rglgen_glMultiTexCoord3sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3SVPROC __rglgen_glMultiTexCoord3sv;$/;"	v
__rglgen_glMultiTexCoord3svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3SVARBPROC __rglgen_glMultiTexCoord3svARB;$/;"	v
__rglgen_glMultiTexCoord3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3XOESPROC __rglgen_glMultiTexCoord3xOES;$/;"	v
__rglgen_glMultiTexCoord3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD3XVOESPROC __rglgen_glMultiTexCoord3xvOES;$/;"	v
__rglgen_glMultiTexCoord4bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4BOESPROC __rglgen_glMultiTexCoord4bOES;$/;"	v
__rglgen_glMultiTexCoord4bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4BVOESPROC __rglgen_glMultiTexCoord4bvOES;$/;"	v
__rglgen_glMultiTexCoord4d	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4DPROC __rglgen_glMultiTexCoord4d;$/;"	v
__rglgen_glMultiTexCoord4dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4DARBPROC __rglgen_glMultiTexCoord4dARB;$/;"	v
__rglgen_glMultiTexCoord4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4DVPROC __rglgen_glMultiTexCoord4dv;$/;"	v
__rglgen_glMultiTexCoord4dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4DVARBPROC __rglgen_glMultiTexCoord4dvARB;$/;"	v
__rglgen_glMultiTexCoord4f	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4FPROC __rglgen_glMultiTexCoord4f;$/;"	v
__rglgen_glMultiTexCoord4fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4FARBPROC __rglgen_glMultiTexCoord4fARB;$/;"	v
__rglgen_glMultiTexCoord4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4FVPROC __rglgen_glMultiTexCoord4fv;$/;"	v
__rglgen_glMultiTexCoord4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4FVARBPROC __rglgen_glMultiTexCoord4fvARB;$/;"	v
__rglgen_glMultiTexCoord4i	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4IPROC __rglgen_glMultiTexCoord4i;$/;"	v
__rglgen_glMultiTexCoord4iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4IARBPROC __rglgen_glMultiTexCoord4iARB;$/;"	v
__rglgen_glMultiTexCoord4iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4IVPROC __rglgen_glMultiTexCoord4iv;$/;"	v
__rglgen_glMultiTexCoord4ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4IVARBPROC __rglgen_glMultiTexCoord4ivARB;$/;"	v
__rglgen_glMultiTexCoord4s	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4SPROC __rglgen_glMultiTexCoord4s;$/;"	v
__rglgen_glMultiTexCoord4sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4SARBPROC __rglgen_glMultiTexCoord4sARB;$/;"	v
__rglgen_glMultiTexCoord4sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4SVPROC __rglgen_glMultiTexCoord4sv;$/;"	v
__rglgen_glMultiTexCoord4svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4SVARBPROC __rglgen_glMultiTexCoord4svARB;$/;"	v
__rglgen_glMultiTexCoord4xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4XOESPROC __rglgen_glMultiTexCoord4xOES;$/;"	v
__rglgen_glMultiTexCoord4xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORD4XVOESPROC __rglgen_glMultiTexCoord4xvOES;$/;"	v
__rglgen_glMultiTexCoordP1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP1UIPROC __rglgen_glMultiTexCoordP1ui;$/;"	v
__rglgen_glMultiTexCoordP1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP1UIVPROC __rglgen_glMultiTexCoordP1uiv;$/;"	v
__rglgen_glMultiTexCoordP2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP2UIPROC __rglgen_glMultiTexCoordP2ui;$/;"	v
__rglgen_glMultiTexCoordP2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP2UIVPROC __rglgen_glMultiTexCoordP2uiv;$/;"	v
__rglgen_glMultiTexCoordP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP3UIPROC __rglgen_glMultiTexCoordP3ui;$/;"	v
__rglgen_glMultiTexCoordP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP3UIVPROC __rglgen_glMultiTexCoordP3uiv;$/;"	v
__rglgen_glMultiTexCoordP4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP4UIPROC __rglgen_glMultiTexCoordP4ui;$/;"	v
__rglgen_glMultiTexCoordP4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLMULTITEXCOORDP4UIVPROC __rglgen_glMultiTexCoordP4uiv;$/;"	v
__rglgen_glNamedStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLNAMEDSTRINGARBPROC __rglgen_glNamedStringARB;$/;"	v
__rglgen_glNormal3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLNORMAL3XOESPROC __rglgen_glNormal3xOES;$/;"	v
__rglgen_glNormal3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLNORMAL3XVOESPROC __rglgen_glNormal3xvOES;$/;"	v
__rglgen_glNormalP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLNORMALP3UIPROC __rglgen_glNormalP3ui;$/;"	v
__rglgen_glNormalP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLNORMALP3UIVPROC __rglgen_glNormalP3uiv;$/;"	v
__rglgen_glObjectLabel	gfx/glsym/glsym_es2.c	/^RGLSYMGLOBJECTLABELPROC __rglgen_glObjectLabel;$/;"	v
__rglgen_glObjectLabel	gfx/glsym/glsym_gl.c	/^RGLSYMGLOBJECTLABELPROC __rglgen_glObjectLabel;$/;"	v
__rglgen_glObjectPtrLabel	gfx/glsym/glsym_es2.c	/^RGLSYMGLOBJECTPTRLABELPROC __rglgen_glObjectPtrLabel;$/;"	v
__rglgen_glObjectPtrLabel	gfx/glsym/glsym_gl.c	/^RGLSYMGLOBJECTPTRLABELPROC __rglgen_glObjectPtrLabel;$/;"	v
__rglgen_glOrthofOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLORTHOFOESPROC __rglgen_glOrthofOES;$/;"	v
__rglgen_glOrthoxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLORTHOXOESPROC __rglgen_glOrthoxOES;$/;"	v
__rglgen_glPassThroughxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPASSTHROUGHXOESPROC __rglgen_glPassThroughxOES;$/;"	v
__rglgen_glPatchParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPATCHPARAMETERFVPROC __rglgen_glPatchParameterfv;$/;"	v
__rglgen_glPatchParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLPATCHPARAMETERIPROC __rglgen_glPatchParameteri;$/;"	v
__rglgen_glPauseTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLPAUSETRANSFORMFEEDBACKPROC __rglgen_glPauseTransformFeedback;$/;"	v
__rglgen_glPixelMapx	gfx/glsym/glsym_gl.c	/^RGLSYMGLPIXELMAPXPROC __rglgen_glPixelMapx;$/;"	v
__rglgen_glPixelStorex	gfx/glsym/glsym_gl.c	/^RGLSYMGLPIXELSTOREXPROC __rglgen_glPixelStorex;$/;"	v
__rglgen_glPixelTransferxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPIXELTRANSFERXOESPROC __rglgen_glPixelTransferxOES;$/;"	v
__rglgen_glPixelZoomxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPIXELZOOMXOESPROC __rglgen_glPixelZoomxOES;$/;"	v
__rglgen_glPointParameterf	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERFPROC __rglgen_glPointParameterf;$/;"	v
__rglgen_glPointParameterfARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERFARBPROC __rglgen_glPointParameterfARB;$/;"	v
__rglgen_glPointParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERFVPROC __rglgen_glPointParameterfv;$/;"	v
__rglgen_glPointParameterfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERFVARBPROC __rglgen_glPointParameterfvARB;$/;"	v
__rglgen_glPointParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERIPROC __rglgen_glPointParameteri;$/;"	v
__rglgen_glPointParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERIVPROC __rglgen_glPointParameteriv;$/;"	v
__rglgen_glPointParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTPARAMETERXVOESPROC __rglgen_glPointParameterxvOES;$/;"	v
__rglgen_glPointSizexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOINTSIZEXOESPROC __rglgen_glPointSizexOES;$/;"	v
__rglgen_glPolygonOffsetxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOLYGONOFFSETXOESPROC __rglgen_glPolygonOffsetxOES;$/;"	v
__rglgen_glPopDebugGroup	gfx/glsym/glsym_es2.c	/^RGLSYMGLPOPDEBUGGROUPPROC __rglgen_glPopDebugGroup;$/;"	v
__rglgen_glPopDebugGroup	gfx/glsym/glsym_gl.c	/^RGLSYMGLPOPDEBUGGROUPPROC __rglgen_glPopDebugGroup;$/;"	v
__rglgen_glPrimitiveRestartIndex	gfx/glsym/glsym_gl.c	/^RGLSYMGLPRIMITIVERESTARTINDEXPROC __rglgen_glPrimitiveRestartIndex;$/;"	v
__rglgen_glPrioritizeTexturesxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLPRIORITIZETEXTURESXOESPROC __rglgen_glPrioritizeTexturesxOES;$/;"	v
__rglgen_glProgramBinary	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMBINARYPROC __rglgen_glProgramBinary;$/;"	v
__rglgen_glProgramBinaryOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLPROGRAMBINARYOESPROC __rglgen_glProgramBinaryOES;$/;"	v
__rglgen_glProgramEnvParameter4dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMENVPARAMETER4DARBPROC __rglgen_glProgramEnvParameter4dARB;$/;"	v
__rglgen_glProgramEnvParameter4dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMENVPARAMETER4DVARBPROC __rglgen_glProgramEnvParameter4dvARB;$/;"	v
__rglgen_glProgramEnvParameter4fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMENVPARAMETER4FARBPROC __rglgen_glProgramEnvParameter4fARB;$/;"	v
__rglgen_glProgramEnvParameter4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMENVPARAMETER4FVARBPROC __rglgen_glProgramEnvParameter4fvARB;$/;"	v
__rglgen_glProgramLocalParameter4dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMLOCALPARAMETER4DARBPROC __rglgen_glProgramLocalParameter4dARB;$/;"	v
__rglgen_glProgramLocalParameter4dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMLOCALPARAMETER4DVARBPROC __rglgen_glProgramLocalParameter4dvARB;$/;"	v
__rglgen_glProgramLocalParameter4fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMLOCALPARAMETER4FARBPROC __rglgen_glProgramLocalParameter4fARB;$/;"	v
__rglgen_glProgramLocalParameter4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMLOCALPARAMETER4FVARBPROC __rglgen_glProgramLocalParameter4fvARB;$/;"	v
__rglgen_glProgramParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMPARAMETERIPROC __rglgen_glProgramParameteri;$/;"	v
__rglgen_glProgramParameteriARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMPARAMETERIARBPROC __rglgen_glProgramParameteriARB;$/;"	v
__rglgen_glProgramStringARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMSTRINGARBPROC __rglgen_glProgramStringARB;$/;"	v
__rglgen_glProgramUniform1d	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1DPROC __rglgen_glProgramUniform1d;$/;"	v
__rglgen_glProgramUniform1dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1DVPROC __rglgen_glProgramUniform1dv;$/;"	v
__rglgen_glProgramUniform1f	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1FPROC __rglgen_glProgramUniform1f;$/;"	v
__rglgen_glProgramUniform1fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1FVPROC __rglgen_glProgramUniform1fv;$/;"	v
__rglgen_glProgramUniform1i	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1IPROC __rglgen_glProgramUniform1i;$/;"	v
__rglgen_glProgramUniform1iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1IVPROC __rglgen_glProgramUniform1iv;$/;"	v
__rglgen_glProgramUniform1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1UIPROC __rglgen_glProgramUniform1ui;$/;"	v
__rglgen_glProgramUniform1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM1UIVPROC __rglgen_glProgramUniform1uiv;$/;"	v
__rglgen_glProgramUniform2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2DPROC __rglgen_glProgramUniform2d;$/;"	v
__rglgen_glProgramUniform2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2DVPROC __rglgen_glProgramUniform2dv;$/;"	v
__rglgen_glProgramUniform2f	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2FPROC __rglgen_glProgramUniform2f;$/;"	v
__rglgen_glProgramUniform2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2FVPROC __rglgen_glProgramUniform2fv;$/;"	v
__rglgen_glProgramUniform2i	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2IPROC __rglgen_glProgramUniform2i;$/;"	v
__rglgen_glProgramUniform2iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2IVPROC __rglgen_glProgramUniform2iv;$/;"	v
__rglgen_glProgramUniform2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2UIPROC __rglgen_glProgramUniform2ui;$/;"	v
__rglgen_glProgramUniform2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM2UIVPROC __rglgen_glProgramUniform2uiv;$/;"	v
__rglgen_glProgramUniform3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3DPROC __rglgen_glProgramUniform3d;$/;"	v
__rglgen_glProgramUniform3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3DVPROC __rglgen_glProgramUniform3dv;$/;"	v
__rglgen_glProgramUniform3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3FPROC __rglgen_glProgramUniform3f;$/;"	v
__rglgen_glProgramUniform3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3FVPROC __rglgen_glProgramUniform3fv;$/;"	v
__rglgen_glProgramUniform3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3IPROC __rglgen_glProgramUniform3i;$/;"	v
__rglgen_glProgramUniform3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3IVPROC __rglgen_glProgramUniform3iv;$/;"	v
__rglgen_glProgramUniform3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3UIPROC __rglgen_glProgramUniform3ui;$/;"	v
__rglgen_glProgramUniform3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM3UIVPROC __rglgen_glProgramUniform3uiv;$/;"	v
__rglgen_glProgramUniform4d	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4DPROC __rglgen_glProgramUniform4d;$/;"	v
__rglgen_glProgramUniform4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4DVPROC __rglgen_glProgramUniform4dv;$/;"	v
__rglgen_glProgramUniform4f	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4FPROC __rglgen_glProgramUniform4f;$/;"	v
__rglgen_glProgramUniform4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4FVPROC __rglgen_glProgramUniform4fv;$/;"	v
__rglgen_glProgramUniform4i	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4IPROC __rglgen_glProgramUniform4i;$/;"	v
__rglgen_glProgramUniform4iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4IVPROC __rglgen_glProgramUniform4iv;$/;"	v
__rglgen_glProgramUniform4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4UIPROC __rglgen_glProgramUniform4ui;$/;"	v
__rglgen_glProgramUniform4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORM4UIVPROC __rglgen_glProgramUniform4uiv;$/;"	v
__rglgen_glProgramUniformMatrix2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2DVPROC __rglgen_glProgramUniformMatrix2dv;$/;"	v
__rglgen_glProgramUniformMatrix2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2FVPROC __rglgen_glProgramUniformMatrix2fv;$/;"	v
__rglgen_glProgramUniformMatrix2x3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2X3DVPROC __rglgen_glProgramUniformMatrix2x3dv;$/;"	v
__rglgen_glProgramUniformMatrix2x3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2X3FVPROC __rglgen_glProgramUniformMatrix2x3fv;$/;"	v
__rglgen_glProgramUniformMatrix2x4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2X4DVPROC __rglgen_glProgramUniformMatrix2x4dv;$/;"	v
__rglgen_glProgramUniformMatrix2x4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX2X4FVPROC __rglgen_glProgramUniformMatrix2x4fv;$/;"	v
__rglgen_glProgramUniformMatrix3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3DVPROC __rglgen_glProgramUniformMatrix3dv;$/;"	v
__rglgen_glProgramUniformMatrix3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3FVPROC __rglgen_glProgramUniformMatrix3fv;$/;"	v
__rglgen_glProgramUniformMatrix3x2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3X2DVPROC __rglgen_glProgramUniformMatrix3x2dv;$/;"	v
__rglgen_glProgramUniformMatrix3x2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3X2FVPROC __rglgen_glProgramUniformMatrix3x2fv;$/;"	v
__rglgen_glProgramUniformMatrix3x4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3X4DVPROC __rglgen_glProgramUniformMatrix3x4dv;$/;"	v
__rglgen_glProgramUniformMatrix3x4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX3X4FVPROC __rglgen_glProgramUniformMatrix3x4fv;$/;"	v
__rglgen_glProgramUniformMatrix4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4DVPROC __rglgen_glProgramUniformMatrix4dv;$/;"	v
__rglgen_glProgramUniformMatrix4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4FVPROC __rglgen_glProgramUniformMatrix4fv;$/;"	v
__rglgen_glProgramUniformMatrix4x2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4X2DVPROC __rglgen_glProgramUniformMatrix4x2dv;$/;"	v
__rglgen_glProgramUniformMatrix4x2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4X2FVPROC __rglgen_glProgramUniformMatrix4x2fv;$/;"	v
__rglgen_glProgramUniformMatrix4x3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4X3DVPROC __rglgen_glProgramUniformMatrix4x3dv;$/;"	v
__rglgen_glProgramUniformMatrix4x3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROGRAMUNIFORMMATRIX4X3FVPROC __rglgen_glProgramUniformMatrix4x3fv;$/;"	v
__rglgen_glProvokingVertex	gfx/glsym/glsym_gl.c	/^RGLSYMGLPROVOKINGVERTEXPROC __rglgen_glProvokingVertex;$/;"	v
__rglgen_glPushDebugGroup	gfx/glsym/glsym_es2.c	/^RGLSYMGLPUSHDEBUGGROUPPROC __rglgen_glPushDebugGroup;$/;"	v
__rglgen_glPushDebugGroup	gfx/glsym/glsym_gl.c	/^RGLSYMGLPUSHDEBUGGROUPPROC __rglgen_glPushDebugGroup;$/;"	v
__rglgen_glQueryCounter	gfx/glsym/glsym_gl.c	/^RGLSYMGLQUERYCOUNTERPROC __rglgen_glQueryCounter;$/;"	v
__rglgen_glQueryMatrixxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLQUERYMATRIXXOESPROC __rglgen_glQueryMatrixxOES;$/;"	v
__rglgen_glRasterPos2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS2XOESPROC __rglgen_glRasterPos2xOES;$/;"	v
__rglgen_glRasterPos2xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS2XVOESPROC __rglgen_glRasterPos2xvOES;$/;"	v
__rglgen_glRasterPos3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS3XOESPROC __rglgen_glRasterPos3xOES;$/;"	v
__rglgen_glRasterPos3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS3XVOESPROC __rglgen_glRasterPos3xvOES;$/;"	v
__rglgen_glRasterPos4xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS4XOESPROC __rglgen_glRasterPos4xOES;$/;"	v
__rglgen_glRasterPos4xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRASTERPOS4XVOESPROC __rglgen_glRasterPos4xvOES;$/;"	v
__rglgen_glReadnPixelsARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLREADNPIXELSARBPROC __rglgen_glReadnPixelsARB;$/;"	v
__rglgen_glRectxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRECTXOESPROC __rglgen_glRectxOES;$/;"	v
__rglgen_glRectxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLRECTXVOESPROC __rglgen_glRectxvOES;$/;"	v
__rglgen_glReleaseShaderCompiler	gfx/glsym/glsym_gl.c	/^RGLSYMGLRELEASESHADERCOMPILERPROC __rglgen_glReleaseShaderCompiler;$/;"	v
__rglgen_glRenderbufferStorage	gfx/glsym/glsym_gl.c	/^RGLSYMGLRENDERBUFFERSTORAGEPROC __rglgen_glRenderbufferStorage;$/;"	v
__rglgen_glRenderbufferStorageMultisample	gfx/glsym/glsym_gl.c	/^RGLSYMGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __rglgen_glRenderbufferStorageMultisample;$/;"	v
__rglgen_glResetHistogram	gfx/glsym/glsym_gl.c	/^RGLSYMGLRESETHISTOGRAMPROC __rglgen_glResetHistogram;$/;"	v
__rglgen_glResetMinmax	gfx/glsym/glsym_gl.c	/^RGLSYMGLRESETMINMAXPROC __rglgen_glResetMinmax;$/;"	v
__rglgen_glResumeTransformFeedback	gfx/glsym/glsym_gl.c	/^RGLSYMGLRESUMETRANSFORMFEEDBACKPROC __rglgen_glResumeTransformFeedback;$/;"	v
__rglgen_glRotatexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLROTATEXOESPROC __rglgen_glRotatexOES;$/;"	v
__rglgen_glSampleCoverage	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLECOVERAGEPROC __rglgen_glSampleCoverage;$/;"	v
__rglgen_glSampleCoverageARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLECOVERAGEARBPROC __rglgen_glSampleCoverageARB;$/;"	v
__rglgen_glSampleCoverageOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLECOVERAGEOESPROC __rglgen_glSampleCoverageOES;$/;"	v
__rglgen_glSampleMaski	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLEMASKIPROC __rglgen_glSampleMaski;$/;"	v
__rglgen_glSamplerParameterIiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERIIVPROC __rglgen_glSamplerParameterIiv;$/;"	v
__rglgen_glSamplerParameterIuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERIUIVPROC __rglgen_glSamplerParameterIuiv;$/;"	v
__rglgen_glSamplerParameterf	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERFPROC __rglgen_glSamplerParameterf;$/;"	v
__rglgen_glSamplerParameterfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERFVPROC __rglgen_glSamplerParameterfv;$/;"	v
__rglgen_glSamplerParameteri	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERIPROC __rglgen_glSamplerParameteri;$/;"	v
__rglgen_glSamplerParameteriv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSAMPLERPARAMETERIVPROC __rglgen_glSamplerParameteriv;$/;"	v
__rglgen_glScalexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLSCALEXOESPROC __rglgen_glScalexOES;$/;"	v
__rglgen_glScissorArrayv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSCISSORARRAYVPROC __rglgen_glScissorArrayv;$/;"	v
__rglgen_glScissorIndexed	gfx/glsym/glsym_gl.c	/^RGLSYMGLSCISSORINDEXEDPROC __rglgen_glScissorIndexed;$/;"	v
__rglgen_glScissorIndexedv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSCISSORINDEXEDVPROC __rglgen_glScissorIndexedv;$/;"	v
__rglgen_glSecondaryColor3b	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3BPROC __rglgen_glSecondaryColor3b;$/;"	v
__rglgen_glSecondaryColor3bv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3BVPROC __rglgen_glSecondaryColor3bv;$/;"	v
__rglgen_glSecondaryColor3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3DPROC __rglgen_glSecondaryColor3d;$/;"	v
__rglgen_glSecondaryColor3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3DVPROC __rglgen_glSecondaryColor3dv;$/;"	v
__rglgen_glSecondaryColor3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3FPROC __rglgen_glSecondaryColor3f;$/;"	v
__rglgen_glSecondaryColor3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3FVPROC __rglgen_glSecondaryColor3fv;$/;"	v
__rglgen_glSecondaryColor3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3IPROC __rglgen_glSecondaryColor3i;$/;"	v
__rglgen_glSecondaryColor3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3IVPROC __rglgen_glSecondaryColor3iv;$/;"	v
__rglgen_glSecondaryColor3s	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3SPROC __rglgen_glSecondaryColor3s;$/;"	v
__rglgen_glSecondaryColor3sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3SVPROC __rglgen_glSecondaryColor3sv;$/;"	v
__rglgen_glSecondaryColor3ub	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3UBPROC __rglgen_glSecondaryColor3ub;$/;"	v
__rglgen_glSecondaryColor3ubv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3UBVPROC __rglgen_glSecondaryColor3ubv;$/;"	v
__rglgen_glSecondaryColor3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3UIPROC __rglgen_glSecondaryColor3ui;$/;"	v
__rglgen_glSecondaryColor3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3UIVPROC __rglgen_glSecondaryColor3uiv;$/;"	v
__rglgen_glSecondaryColor3us	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3USPROC __rglgen_glSecondaryColor3us;$/;"	v
__rglgen_glSecondaryColor3usv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLOR3USVPROC __rglgen_glSecondaryColor3usv;$/;"	v
__rglgen_glSecondaryColorP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLORP3UIPROC __rglgen_glSecondaryColorP3ui;$/;"	v
__rglgen_glSecondaryColorP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLORP3UIVPROC __rglgen_glSecondaryColorP3uiv;$/;"	v
__rglgen_glSecondaryColorPointer	gfx/glsym/glsym_gl.c	/^RGLSYMGLSECONDARYCOLORPOINTERPROC __rglgen_glSecondaryColorPointer;$/;"	v
__rglgen_glSeparableFilter2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLSEPARABLEFILTER2DPROC __rglgen_glSeparableFilter2D;$/;"	v
__rglgen_glShaderBinary	gfx/glsym/glsym_gl.c	/^RGLSYMGLSHADERBINARYPROC __rglgen_glShaderBinary;$/;"	v
__rglgen_glShaderSource	gfx/glsym/glsym_gl.c	/^RGLSYMGLSHADERSOURCEPROC __rglgen_glShaderSource;$/;"	v
__rglgen_glShaderSourceARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLSHADERSOURCEARBPROC __rglgen_glShaderSourceARB;$/;"	v
__rglgen_glShaderStorageBlockBinding	gfx/glsym/glsym_gl.c	/^RGLSYMGLSHADERSTORAGEBLOCKBINDINGPROC __rglgen_glShaderStorageBlockBinding;$/;"	v
__rglgen_glStencilFuncSeparate	gfx/glsym/glsym_gl.c	/^RGLSYMGLSTENCILFUNCSEPARATEPROC __rglgen_glStencilFuncSeparate;$/;"	v
__rglgen_glStencilMaskSeparate	gfx/glsym/glsym_gl.c	/^RGLSYMGLSTENCILMASKSEPARATEPROC __rglgen_glStencilMaskSeparate;$/;"	v
__rglgen_glStencilOpSeparate	gfx/glsym/glsym_gl.c	/^RGLSYMGLSTENCILOPSEPARATEPROC __rglgen_glStencilOpSeparate;$/;"	v
__rglgen_glTexBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXBUFFERPROC __rglgen_glTexBuffer;$/;"	v
__rglgen_glTexBufferARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXBUFFERARBPROC __rglgen_glTexBufferARB;$/;"	v
__rglgen_glTexBufferRange	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXBUFFERRANGEPROC __rglgen_glTexBufferRange;$/;"	v
__rglgen_glTexCoord1bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD1BOESPROC __rglgen_glTexCoord1bOES;$/;"	v
__rglgen_glTexCoord1bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD1BVOESPROC __rglgen_glTexCoord1bvOES;$/;"	v
__rglgen_glTexCoord1xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD1XOESPROC __rglgen_glTexCoord1xOES;$/;"	v
__rglgen_glTexCoord1xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD1XVOESPROC __rglgen_glTexCoord1xvOES;$/;"	v
__rglgen_glTexCoord2bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD2BOESPROC __rglgen_glTexCoord2bOES;$/;"	v
__rglgen_glTexCoord2bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD2BVOESPROC __rglgen_glTexCoord2bvOES;$/;"	v
__rglgen_glTexCoord2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD2XOESPROC __rglgen_glTexCoord2xOES;$/;"	v
__rglgen_glTexCoord2xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD2XVOESPROC __rglgen_glTexCoord2xvOES;$/;"	v
__rglgen_glTexCoord3bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD3BOESPROC __rglgen_glTexCoord3bOES;$/;"	v
__rglgen_glTexCoord3bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD3BVOESPROC __rglgen_glTexCoord3bvOES;$/;"	v
__rglgen_glTexCoord3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD3XOESPROC __rglgen_glTexCoord3xOES;$/;"	v
__rglgen_glTexCoord3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD3XVOESPROC __rglgen_glTexCoord3xvOES;$/;"	v
__rglgen_glTexCoord4bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD4BOESPROC __rglgen_glTexCoord4bOES;$/;"	v
__rglgen_glTexCoord4bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD4BVOESPROC __rglgen_glTexCoord4bvOES;$/;"	v
__rglgen_glTexCoord4xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD4XOESPROC __rglgen_glTexCoord4xOES;$/;"	v
__rglgen_glTexCoord4xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORD4XVOESPROC __rglgen_glTexCoord4xvOES;$/;"	v
__rglgen_glTexCoordP1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP1UIPROC __rglgen_glTexCoordP1ui;$/;"	v
__rglgen_glTexCoordP1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP1UIVPROC __rglgen_glTexCoordP1uiv;$/;"	v
__rglgen_glTexCoordP2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP2UIPROC __rglgen_glTexCoordP2ui;$/;"	v
__rglgen_glTexCoordP2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP2UIVPROC __rglgen_glTexCoordP2uiv;$/;"	v
__rglgen_glTexCoordP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP3UIPROC __rglgen_glTexCoordP3ui;$/;"	v
__rglgen_glTexCoordP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP3UIVPROC __rglgen_glTexCoordP3uiv;$/;"	v
__rglgen_glTexCoordP4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP4UIPROC __rglgen_glTexCoordP4ui;$/;"	v
__rglgen_glTexCoordP4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXCOORDP4UIVPROC __rglgen_glTexCoordP4uiv;$/;"	v
__rglgen_glTexEnvxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXENVXOESPROC __rglgen_glTexEnvxOES;$/;"	v
__rglgen_glTexEnvxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXENVXVOESPROC __rglgen_glTexEnvxvOES;$/;"	v
__rglgen_glTexGenxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXGENXOESPROC __rglgen_glTexGenxOES;$/;"	v
__rglgen_glTexGenxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXGENXVOESPROC __rglgen_glTexGenxvOES;$/;"	v
__rglgen_glTexImage2DMultisample	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXIMAGE2DMULTISAMPLEPROC __rglgen_glTexImage2DMultisample;$/;"	v
__rglgen_glTexImage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXIMAGE3DPROC __rglgen_glTexImage3D;$/;"	v
__rglgen_glTexImage3DMultisample	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXIMAGE3DMULTISAMPLEPROC __rglgen_glTexImage3DMultisample;$/;"	v
__rglgen_glTexImage3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLTEXIMAGE3DOESPROC __rglgen_glTexImage3DOES;$/;"	v
__rglgen_glTexParameterIiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXPARAMETERIIVPROC __rglgen_glTexParameterIiv;$/;"	v
__rglgen_glTexParameterIuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXPARAMETERIUIVPROC __rglgen_glTexParameterIuiv;$/;"	v
__rglgen_glTexParameterxOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXPARAMETERXOESPROC __rglgen_glTexParameterxOES;$/;"	v
__rglgen_glTexParameterxvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXPARAMETERXVOESPROC __rglgen_glTexParameterxvOES;$/;"	v
__rglgen_glTexStorage1D	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSTORAGE1DPROC __rglgen_glTexStorage1D;$/;"	v
__rglgen_glTexStorage2D	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSTORAGE2DPROC __rglgen_glTexStorage2D;$/;"	v
__rglgen_glTexStorage2DMultisample	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSTORAGE2DMULTISAMPLEPROC __rglgen_glTexStorage2DMultisample;$/;"	v
__rglgen_glTexStorage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSTORAGE3DPROC __rglgen_glTexStorage3D;$/;"	v
__rglgen_glTexStorage3DMultisample	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSTORAGE3DMULTISAMPLEPROC __rglgen_glTexStorage3DMultisample;$/;"	v
__rglgen_glTexSubImage3D	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXSUBIMAGE3DPROC __rglgen_glTexSubImage3D;$/;"	v
__rglgen_glTexSubImage3DOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLTEXSUBIMAGE3DOESPROC __rglgen_glTexSubImage3DOES;$/;"	v
__rglgen_glTextureView	gfx/glsym/glsym_gl.c	/^RGLSYMGLTEXTUREVIEWPROC __rglgen_glTextureView;$/;"	v
__rglgen_glTransformFeedbackVaryings	gfx/glsym/glsym_gl.c	/^RGLSYMGLTRANSFORMFEEDBACKVARYINGSPROC __rglgen_glTransformFeedbackVaryings;$/;"	v
__rglgen_glTranslatexOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLTRANSLATEXOESPROC __rglgen_glTranslatexOES;$/;"	v
__rglgen_glUniform1d	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1DPROC __rglgen_glUniform1d;$/;"	v
__rglgen_glUniform1dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1DVPROC __rglgen_glUniform1dv;$/;"	v
__rglgen_glUniform1f	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1FPROC __rglgen_glUniform1f;$/;"	v
__rglgen_glUniform1fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1FARBPROC __rglgen_glUniform1fARB;$/;"	v
__rglgen_glUniform1fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1FVPROC __rglgen_glUniform1fv;$/;"	v
__rglgen_glUniform1fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1FVARBPROC __rglgen_glUniform1fvARB;$/;"	v
__rglgen_glUniform1i	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1IPROC __rglgen_glUniform1i;$/;"	v
__rglgen_glUniform1iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1IARBPROC __rglgen_glUniform1iARB;$/;"	v
__rglgen_glUniform1iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1IVPROC __rglgen_glUniform1iv;$/;"	v
__rglgen_glUniform1ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1IVARBPROC __rglgen_glUniform1ivARB;$/;"	v
__rglgen_glUniform1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1UIPROC __rglgen_glUniform1ui;$/;"	v
__rglgen_glUniform1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM1UIVPROC __rglgen_glUniform1uiv;$/;"	v
__rglgen_glUniform2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2DPROC __rglgen_glUniform2d;$/;"	v
__rglgen_glUniform2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2DVPROC __rglgen_glUniform2dv;$/;"	v
__rglgen_glUniform2f	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2FPROC __rglgen_glUniform2f;$/;"	v
__rglgen_glUniform2fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2FARBPROC __rglgen_glUniform2fARB;$/;"	v
__rglgen_glUniform2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2FVPROC __rglgen_glUniform2fv;$/;"	v
__rglgen_glUniform2fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2FVARBPROC __rglgen_glUniform2fvARB;$/;"	v
__rglgen_glUniform2i	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2IPROC __rglgen_glUniform2i;$/;"	v
__rglgen_glUniform2iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2IARBPROC __rglgen_glUniform2iARB;$/;"	v
__rglgen_glUniform2iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2IVPROC __rglgen_glUniform2iv;$/;"	v
__rglgen_glUniform2ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2IVARBPROC __rglgen_glUniform2ivARB;$/;"	v
__rglgen_glUniform2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2UIPROC __rglgen_glUniform2ui;$/;"	v
__rglgen_glUniform2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM2UIVPROC __rglgen_glUniform2uiv;$/;"	v
__rglgen_glUniform3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3DPROC __rglgen_glUniform3d;$/;"	v
__rglgen_glUniform3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3DVPROC __rglgen_glUniform3dv;$/;"	v
__rglgen_glUniform3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3FPROC __rglgen_glUniform3f;$/;"	v
__rglgen_glUniform3fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3FARBPROC __rglgen_glUniform3fARB;$/;"	v
__rglgen_glUniform3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3FVPROC __rglgen_glUniform3fv;$/;"	v
__rglgen_glUniform3fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3FVARBPROC __rglgen_glUniform3fvARB;$/;"	v
__rglgen_glUniform3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3IPROC __rglgen_glUniform3i;$/;"	v
__rglgen_glUniform3iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3IARBPROC __rglgen_glUniform3iARB;$/;"	v
__rglgen_glUniform3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3IVPROC __rglgen_glUniform3iv;$/;"	v
__rglgen_glUniform3ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3IVARBPROC __rglgen_glUniform3ivARB;$/;"	v
__rglgen_glUniform3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3UIPROC __rglgen_glUniform3ui;$/;"	v
__rglgen_glUniform3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM3UIVPROC __rglgen_glUniform3uiv;$/;"	v
__rglgen_glUniform4d	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4DPROC __rglgen_glUniform4d;$/;"	v
__rglgen_glUniform4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4DVPROC __rglgen_glUniform4dv;$/;"	v
__rglgen_glUniform4f	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4FPROC __rglgen_glUniform4f;$/;"	v
__rglgen_glUniform4fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4FARBPROC __rglgen_glUniform4fARB;$/;"	v
__rglgen_glUniform4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4FVPROC __rglgen_glUniform4fv;$/;"	v
__rglgen_glUniform4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4FVARBPROC __rglgen_glUniform4fvARB;$/;"	v
__rglgen_glUniform4i	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4IPROC __rglgen_glUniform4i;$/;"	v
__rglgen_glUniform4iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4IARBPROC __rglgen_glUniform4iARB;$/;"	v
__rglgen_glUniform4iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4IVPROC __rglgen_glUniform4iv;$/;"	v
__rglgen_glUniform4ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4IVARBPROC __rglgen_glUniform4ivARB;$/;"	v
__rglgen_glUniform4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4UIPROC __rglgen_glUniform4ui;$/;"	v
__rglgen_glUniform4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORM4UIVPROC __rglgen_glUniform4uiv;$/;"	v
__rglgen_glUniformBlockBinding	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMBLOCKBINDINGPROC __rglgen_glUniformBlockBinding;$/;"	v
__rglgen_glUniformMatrix2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2DVPROC __rglgen_glUniformMatrix2dv;$/;"	v
__rglgen_glUniformMatrix2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2FVPROC __rglgen_glUniformMatrix2fv;$/;"	v
__rglgen_glUniformMatrix2fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2FVARBPROC __rglgen_glUniformMatrix2fvARB;$/;"	v
__rglgen_glUniformMatrix2x3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2X3DVPROC __rglgen_glUniformMatrix2x3dv;$/;"	v
__rglgen_glUniformMatrix2x3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2X3FVPROC __rglgen_glUniformMatrix2x3fv;$/;"	v
__rglgen_glUniformMatrix2x4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2X4DVPROC __rglgen_glUniformMatrix2x4dv;$/;"	v
__rglgen_glUniformMatrix2x4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX2X4FVPROC __rglgen_glUniformMatrix2x4fv;$/;"	v
__rglgen_glUniformMatrix3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3DVPROC __rglgen_glUniformMatrix3dv;$/;"	v
__rglgen_glUniformMatrix3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3FVPROC __rglgen_glUniformMatrix3fv;$/;"	v
__rglgen_glUniformMatrix3fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3FVARBPROC __rglgen_glUniformMatrix3fvARB;$/;"	v
__rglgen_glUniformMatrix3x2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3X2DVPROC __rglgen_glUniformMatrix3x2dv;$/;"	v
__rglgen_glUniformMatrix3x2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3X2FVPROC __rglgen_glUniformMatrix3x2fv;$/;"	v
__rglgen_glUniformMatrix3x4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3X4DVPROC __rglgen_glUniformMatrix3x4dv;$/;"	v
__rglgen_glUniformMatrix3x4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX3X4FVPROC __rglgen_glUniformMatrix3x4fv;$/;"	v
__rglgen_glUniformMatrix4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4DVPROC __rglgen_glUniformMatrix4dv;$/;"	v
__rglgen_glUniformMatrix4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4FVPROC __rglgen_glUniformMatrix4fv;$/;"	v
__rglgen_glUniformMatrix4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4FVARBPROC __rglgen_glUniformMatrix4fvARB;$/;"	v
__rglgen_glUniformMatrix4x2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4X2DVPROC __rglgen_glUniformMatrix4x2dv;$/;"	v
__rglgen_glUniformMatrix4x2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4X2FVPROC __rglgen_glUniformMatrix4x2fv;$/;"	v
__rglgen_glUniformMatrix4x3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4X3DVPROC __rglgen_glUniformMatrix4x3dv;$/;"	v
__rglgen_glUniformMatrix4x3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMMATRIX4X3FVPROC __rglgen_glUniformMatrix4x3fv;$/;"	v
__rglgen_glUniformSubroutinesuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNIFORMSUBROUTINESUIVPROC __rglgen_glUniformSubroutinesuiv;$/;"	v
__rglgen_glUnmapBuffer	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNMAPBUFFERPROC __rglgen_glUnmapBuffer;$/;"	v
__rglgen_glUnmapBufferARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUNMAPBUFFERARBPROC __rglgen_glUnmapBufferARB;$/;"	v
__rglgen_glUnmapBufferOES	gfx/glsym/glsym_es2.c	/^RGLSYMGLUNMAPBUFFEROESPROC __rglgen_glUnmapBufferOES;$/;"	v
__rglgen_glUseProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLUSEPROGRAMPROC __rglgen_glUseProgram;$/;"	v
__rglgen_glUseProgramObjectARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLUSEPROGRAMOBJECTARBPROC __rglgen_glUseProgramObjectARB;$/;"	v
__rglgen_glUseProgramStages	gfx/glsym/glsym_gl.c	/^RGLSYMGLUSEPROGRAMSTAGESPROC __rglgen_glUseProgramStages;$/;"	v
__rglgen_glValidateProgram	gfx/glsym/glsym_gl.c	/^RGLSYMGLVALIDATEPROGRAMPROC __rglgen_glValidateProgram;$/;"	v
__rglgen_glValidateProgramARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVALIDATEPROGRAMARBPROC __rglgen_glValidateProgramARB;$/;"	v
__rglgen_glValidateProgramPipeline	gfx/glsym/glsym_gl.c	/^RGLSYMGLVALIDATEPROGRAMPIPELINEPROC __rglgen_glValidateProgramPipeline;$/;"	v
__rglgen_glVertex2bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX2BOESPROC __rglgen_glVertex2bOES;$/;"	v
__rglgen_glVertex2bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX2BVOESPROC __rglgen_glVertex2bvOES;$/;"	v
__rglgen_glVertex2xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX2XOESPROC __rglgen_glVertex2xOES;$/;"	v
__rglgen_glVertex2xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX2XVOESPROC __rglgen_glVertex2xvOES;$/;"	v
__rglgen_glVertex3bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX3BOESPROC __rglgen_glVertex3bOES;$/;"	v
__rglgen_glVertex3bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX3BVOESPROC __rglgen_glVertex3bvOES;$/;"	v
__rglgen_glVertex3xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX3XOESPROC __rglgen_glVertex3xOES;$/;"	v
__rglgen_glVertex3xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX3XVOESPROC __rglgen_glVertex3xvOES;$/;"	v
__rglgen_glVertex4bOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX4BOESPROC __rglgen_glVertex4bOES;$/;"	v
__rglgen_glVertex4bvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX4BVOESPROC __rglgen_glVertex4bvOES;$/;"	v
__rglgen_glVertex4xOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX4XOESPROC __rglgen_glVertex4xOES;$/;"	v
__rglgen_glVertex4xvOES	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEX4XVOESPROC __rglgen_glVertex4xvOES;$/;"	v
__rglgen_glVertexAttrib1d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1DPROC __rglgen_glVertexAttrib1d;$/;"	v
__rglgen_glVertexAttrib1dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1DARBPROC __rglgen_glVertexAttrib1dARB;$/;"	v
__rglgen_glVertexAttrib1dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1DVPROC __rglgen_glVertexAttrib1dv;$/;"	v
__rglgen_glVertexAttrib1dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1DVARBPROC __rglgen_glVertexAttrib1dvARB;$/;"	v
__rglgen_glVertexAttrib1f	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1FPROC __rglgen_glVertexAttrib1f;$/;"	v
__rglgen_glVertexAttrib1fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1FARBPROC __rglgen_glVertexAttrib1fARB;$/;"	v
__rglgen_glVertexAttrib1fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1FVPROC __rglgen_glVertexAttrib1fv;$/;"	v
__rglgen_glVertexAttrib1fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1FVARBPROC __rglgen_glVertexAttrib1fvARB;$/;"	v
__rglgen_glVertexAttrib1s	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1SPROC __rglgen_glVertexAttrib1s;$/;"	v
__rglgen_glVertexAttrib1sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1SARBPROC __rglgen_glVertexAttrib1sARB;$/;"	v
__rglgen_glVertexAttrib1sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1SVPROC __rglgen_glVertexAttrib1sv;$/;"	v
__rglgen_glVertexAttrib1svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB1SVARBPROC __rglgen_glVertexAttrib1svARB;$/;"	v
__rglgen_glVertexAttrib2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2DPROC __rglgen_glVertexAttrib2d;$/;"	v
__rglgen_glVertexAttrib2dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2DARBPROC __rglgen_glVertexAttrib2dARB;$/;"	v
__rglgen_glVertexAttrib2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2DVPROC __rglgen_glVertexAttrib2dv;$/;"	v
__rglgen_glVertexAttrib2dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2DVARBPROC __rglgen_glVertexAttrib2dvARB;$/;"	v
__rglgen_glVertexAttrib2f	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2FPROC __rglgen_glVertexAttrib2f;$/;"	v
__rglgen_glVertexAttrib2fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2FARBPROC __rglgen_glVertexAttrib2fARB;$/;"	v
__rglgen_glVertexAttrib2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2FVPROC __rglgen_glVertexAttrib2fv;$/;"	v
__rglgen_glVertexAttrib2fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2FVARBPROC __rglgen_glVertexAttrib2fvARB;$/;"	v
__rglgen_glVertexAttrib2s	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2SPROC __rglgen_glVertexAttrib2s;$/;"	v
__rglgen_glVertexAttrib2sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2SARBPROC __rglgen_glVertexAttrib2sARB;$/;"	v
__rglgen_glVertexAttrib2sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2SVPROC __rglgen_glVertexAttrib2sv;$/;"	v
__rglgen_glVertexAttrib2svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB2SVARBPROC __rglgen_glVertexAttrib2svARB;$/;"	v
__rglgen_glVertexAttrib3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3DPROC __rglgen_glVertexAttrib3d;$/;"	v
__rglgen_glVertexAttrib3dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3DARBPROC __rglgen_glVertexAttrib3dARB;$/;"	v
__rglgen_glVertexAttrib3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3DVPROC __rglgen_glVertexAttrib3dv;$/;"	v
__rglgen_glVertexAttrib3dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3DVARBPROC __rglgen_glVertexAttrib3dvARB;$/;"	v
__rglgen_glVertexAttrib3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3FPROC __rglgen_glVertexAttrib3f;$/;"	v
__rglgen_glVertexAttrib3fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3FARBPROC __rglgen_glVertexAttrib3fARB;$/;"	v
__rglgen_glVertexAttrib3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3FVPROC __rglgen_glVertexAttrib3fv;$/;"	v
__rglgen_glVertexAttrib3fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3FVARBPROC __rglgen_glVertexAttrib3fvARB;$/;"	v
__rglgen_glVertexAttrib3s	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3SPROC __rglgen_glVertexAttrib3s;$/;"	v
__rglgen_glVertexAttrib3sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3SARBPROC __rglgen_glVertexAttrib3sARB;$/;"	v
__rglgen_glVertexAttrib3sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3SVPROC __rglgen_glVertexAttrib3sv;$/;"	v
__rglgen_glVertexAttrib3svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB3SVARBPROC __rglgen_glVertexAttrib3svARB;$/;"	v
__rglgen_glVertexAttrib4Nbv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NBVPROC __rglgen_glVertexAttrib4Nbv;$/;"	v
__rglgen_glVertexAttrib4NbvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NBVARBPROC __rglgen_glVertexAttrib4NbvARB;$/;"	v
__rglgen_glVertexAttrib4Niv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NIVPROC __rglgen_glVertexAttrib4Niv;$/;"	v
__rglgen_glVertexAttrib4NivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NIVARBPROC __rglgen_glVertexAttrib4NivARB;$/;"	v
__rglgen_glVertexAttrib4Nsv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NSVPROC __rglgen_glVertexAttrib4Nsv;$/;"	v
__rglgen_glVertexAttrib4NsvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NSVARBPROC __rglgen_glVertexAttrib4NsvARB;$/;"	v
__rglgen_glVertexAttrib4Nub	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUBPROC __rglgen_glVertexAttrib4Nub;$/;"	v
__rglgen_glVertexAttrib4NubARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUBARBPROC __rglgen_glVertexAttrib4NubARB;$/;"	v
__rglgen_glVertexAttrib4Nubv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUBVPROC __rglgen_glVertexAttrib4Nubv;$/;"	v
__rglgen_glVertexAttrib4NubvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUBVARBPROC __rglgen_glVertexAttrib4NubvARB;$/;"	v
__rglgen_glVertexAttrib4Nuiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUIVPROC __rglgen_glVertexAttrib4Nuiv;$/;"	v
__rglgen_glVertexAttrib4NuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUIVARBPROC __rglgen_glVertexAttrib4NuivARB;$/;"	v
__rglgen_glVertexAttrib4Nusv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUSVPROC __rglgen_glVertexAttrib4Nusv;$/;"	v
__rglgen_glVertexAttrib4NusvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4NUSVARBPROC __rglgen_glVertexAttrib4NusvARB;$/;"	v
__rglgen_glVertexAttrib4bv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4BVPROC __rglgen_glVertexAttrib4bv;$/;"	v
__rglgen_glVertexAttrib4bvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4BVARBPROC __rglgen_glVertexAttrib4bvARB;$/;"	v
__rglgen_glVertexAttrib4d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4DPROC __rglgen_glVertexAttrib4d;$/;"	v
__rglgen_glVertexAttrib4dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4DARBPROC __rglgen_glVertexAttrib4dARB;$/;"	v
__rglgen_glVertexAttrib4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4DVPROC __rglgen_glVertexAttrib4dv;$/;"	v
__rglgen_glVertexAttrib4dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4DVARBPROC __rglgen_glVertexAttrib4dvARB;$/;"	v
__rglgen_glVertexAttrib4f	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4FPROC __rglgen_glVertexAttrib4f;$/;"	v
__rglgen_glVertexAttrib4fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4FARBPROC __rglgen_glVertexAttrib4fARB;$/;"	v
__rglgen_glVertexAttrib4fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4FVPROC __rglgen_glVertexAttrib4fv;$/;"	v
__rglgen_glVertexAttrib4fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4FVARBPROC __rglgen_glVertexAttrib4fvARB;$/;"	v
__rglgen_glVertexAttrib4iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4IVPROC __rglgen_glVertexAttrib4iv;$/;"	v
__rglgen_glVertexAttrib4ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4IVARBPROC __rglgen_glVertexAttrib4ivARB;$/;"	v
__rglgen_glVertexAttrib4s	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4SPROC __rglgen_glVertexAttrib4s;$/;"	v
__rglgen_glVertexAttrib4sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4SARBPROC __rglgen_glVertexAttrib4sARB;$/;"	v
__rglgen_glVertexAttrib4sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4SVPROC __rglgen_glVertexAttrib4sv;$/;"	v
__rglgen_glVertexAttrib4svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4SVARBPROC __rglgen_glVertexAttrib4svARB;$/;"	v
__rglgen_glVertexAttrib4ubv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4UBVPROC __rglgen_glVertexAttrib4ubv;$/;"	v
__rglgen_glVertexAttrib4ubvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4UBVARBPROC __rglgen_glVertexAttrib4ubvARB;$/;"	v
__rglgen_glVertexAttrib4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4UIVPROC __rglgen_glVertexAttrib4uiv;$/;"	v
__rglgen_glVertexAttrib4uivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4UIVARBPROC __rglgen_glVertexAttrib4uivARB;$/;"	v
__rglgen_glVertexAttrib4usv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4USVPROC __rglgen_glVertexAttrib4usv;$/;"	v
__rglgen_glVertexAttrib4usvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIB4USVARBPROC __rglgen_glVertexAttrib4usvARB;$/;"	v
__rglgen_glVertexAttribBinding	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBBINDINGPROC __rglgen_glVertexAttribBinding;$/;"	v
__rglgen_glVertexAttribDivisor	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBDIVISORPROC __rglgen_glVertexAttribDivisor;$/;"	v
__rglgen_glVertexAttribDivisorARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBDIVISORARBPROC __rglgen_glVertexAttribDivisorARB;$/;"	v
__rglgen_glVertexAttribFormat	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBFORMATPROC __rglgen_glVertexAttribFormat;$/;"	v
__rglgen_glVertexAttribI1i	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI1IPROC __rglgen_glVertexAttribI1i;$/;"	v
__rglgen_glVertexAttribI1iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI1IVPROC __rglgen_glVertexAttribI1iv;$/;"	v
__rglgen_glVertexAttribI1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI1UIPROC __rglgen_glVertexAttribI1ui;$/;"	v
__rglgen_glVertexAttribI1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI1UIVPROC __rglgen_glVertexAttribI1uiv;$/;"	v
__rglgen_glVertexAttribI2i	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI2IPROC __rglgen_glVertexAttribI2i;$/;"	v
__rglgen_glVertexAttribI2iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI2IVPROC __rglgen_glVertexAttribI2iv;$/;"	v
__rglgen_glVertexAttribI2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI2UIPROC __rglgen_glVertexAttribI2ui;$/;"	v
__rglgen_glVertexAttribI2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI2UIVPROC __rglgen_glVertexAttribI2uiv;$/;"	v
__rglgen_glVertexAttribI3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI3IPROC __rglgen_glVertexAttribI3i;$/;"	v
__rglgen_glVertexAttribI3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI3IVPROC __rglgen_glVertexAttribI3iv;$/;"	v
__rglgen_glVertexAttribI3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI3UIPROC __rglgen_glVertexAttribI3ui;$/;"	v
__rglgen_glVertexAttribI3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI3UIVPROC __rglgen_glVertexAttribI3uiv;$/;"	v
__rglgen_glVertexAttribI4bv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4BVPROC __rglgen_glVertexAttribI4bv;$/;"	v
__rglgen_glVertexAttribI4i	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4IPROC __rglgen_glVertexAttribI4i;$/;"	v
__rglgen_glVertexAttribI4iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4IVPROC __rglgen_glVertexAttribI4iv;$/;"	v
__rglgen_glVertexAttribI4sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4SVPROC __rglgen_glVertexAttribI4sv;$/;"	v
__rglgen_glVertexAttribI4ubv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4UBVPROC __rglgen_glVertexAttribI4ubv;$/;"	v
__rglgen_glVertexAttribI4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4UIPROC __rglgen_glVertexAttribI4ui;$/;"	v
__rglgen_glVertexAttribI4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4UIVPROC __rglgen_glVertexAttribI4uiv;$/;"	v
__rglgen_glVertexAttribI4usv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBI4USVPROC __rglgen_glVertexAttribI4usv;$/;"	v
__rglgen_glVertexAttribIFormat	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBIFORMATPROC __rglgen_glVertexAttribIFormat;$/;"	v
__rglgen_glVertexAttribIPointer	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBIPOINTERPROC __rglgen_glVertexAttribIPointer;$/;"	v
__rglgen_glVertexAttribL1d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL1DPROC __rglgen_glVertexAttribL1d;$/;"	v
__rglgen_glVertexAttribL1dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL1DVPROC __rglgen_glVertexAttribL1dv;$/;"	v
__rglgen_glVertexAttribL2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL2DPROC __rglgen_glVertexAttribL2d;$/;"	v
__rglgen_glVertexAttribL2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL2DVPROC __rglgen_glVertexAttribL2dv;$/;"	v
__rglgen_glVertexAttribL3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL3DPROC __rglgen_glVertexAttribL3d;$/;"	v
__rglgen_glVertexAttribL3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL3DVPROC __rglgen_glVertexAttribL3dv;$/;"	v
__rglgen_glVertexAttribL4d	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL4DPROC __rglgen_glVertexAttribL4d;$/;"	v
__rglgen_glVertexAttribL4dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBL4DVPROC __rglgen_glVertexAttribL4dv;$/;"	v
__rglgen_glVertexAttribLFormat	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBLFORMATPROC __rglgen_glVertexAttribLFormat;$/;"	v
__rglgen_glVertexAttribLPointer	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBLPOINTERPROC __rglgen_glVertexAttribLPointer;$/;"	v
__rglgen_glVertexAttribP1ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP1UIPROC __rglgen_glVertexAttribP1ui;$/;"	v
__rglgen_glVertexAttribP1uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP1UIVPROC __rglgen_glVertexAttribP1uiv;$/;"	v
__rglgen_glVertexAttribP2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP2UIPROC __rglgen_glVertexAttribP2ui;$/;"	v
__rglgen_glVertexAttribP2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP2UIVPROC __rglgen_glVertexAttribP2uiv;$/;"	v
__rglgen_glVertexAttribP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP3UIPROC __rglgen_glVertexAttribP3ui;$/;"	v
__rglgen_glVertexAttribP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP3UIVPROC __rglgen_glVertexAttribP3uiv;$/;"	v
__rglgen_glVertexAttribP4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP4UIPROC __rglgen_glVertexAttribP4ui;$/;"	v
__rglgen_glVertexAttribP4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBP4UIVPROC __rglgen_glVertexAttribP4uiv;$/;"	v
__rglgen_glVertexAttribPointer	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBPOINTERPROC __rglgen_glVertexAttribPointer;$/;"	v
__rglgen_glVertexAttribPointerARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXATTRIBPOINTERARBPROC __rglgen_glVertexAttribPointerARB;$/;"	v
__rglgen_glVertexBindingDivisor	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXBINDINGDIVISORPROC __rglgen_glVertexBindingDivisor;$/;"	v
__rglgen_glVertexBlendARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXBLENDARBPROC __rglgen_glVertexBlendARB;$/;"	v
__rglgen_glVertexP2ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP2UIPROC __rglgen_glVertexP2ui;$/;"	v
__rglgen_glVertexP2uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP2UIVPROC __rglgen_glVertexP2uiv;$/;"	v
__rglgen_glVertexP3ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP3UIPROC __rglgen_glVertexP3ui;$/;"	v
__rglgen_glVertexP3uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP3UIVPROC __rglgen_glVertexP3uiv;$/;"	v
__rglgen_glVertexP4ui	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP4UIPROC __rglgen_glVertexP4ui;$/;"	v
__rglgen_glVertexP4uiv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVERTEXP4UIVPROC __rglgen_glVertexP4uiv;$/;"	v
__rglgen_glViewportArrayv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVIEWPORTARRAYVPROC __rglgen_glViewportArrayv;$/;"	v
__rglgen_glViewportIndexedf	gfx/glsym/glsym_gl.c	/^RGLSYMGLVIEWPORTINDEXEDFPROC __rglgen_glViewportIndexedf;$/;"	v
__rglgen_glViewportIndexedfv	gfx/glsym/glsym_gl.c	/^RGLSYMGLVIEWPORTINDEXEDFVPROC __rglgen_glViewportIndexedfv;$/;"	v
__rglgen_glWaitSync	gfx/glsym/glsym_gl.c	/^RGLSYMGLWAITSYNCPROC __rglgen_glWaitSync;$/;"	v
__rglgen_glWeightPointerARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTPOINTERARBPROC __rglgen_glWeightPointerARB;$/;"	v
__rglgen_glWeightbvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTBVARBPROC __rglgen_glWeightbvARB;$/;"	v
__rglgen_glWeightdvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTDVARBPROC __rglgen_glWeightdvARB;$/;"	v
__rglgen_glWeightfvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTFVARBPROC __rglgen_glWeightfvARB;$/;"	v
__rglgen_glWeightivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTIVARBPROC __rglgen_glWeightivARB;$/;"	v
__rglgen_glWeightsvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTSVARBPROC __rglgen_glWeightsvARB;$/;"	v
__rglgen_glWeightubvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTUBVARBPROC __rglgen_glWeightubvARB;$/;"	v
__rglgen_glWeightuivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTUIVARBPROC __rglgen_glWeightuivARB;$/;"	v
__rglgen_glWeightusvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWEIGHTUSVARBPROC __rglgen_glWeightusvARB;$/;"	v
__rglgen_glWindowPos2d	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2DPROC __rglgen_glWindowPos2d;$/;"	v
__rglgen_glWindowPos2dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2DARBPROC __rglgen_glWindowPos2dARB;$/;"	v
__rglgen_glWindowPos2dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2DVPROC __rglgen_glWindowPos2dv;$/;"	v
__rglgen_glWindowPos2dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2DVARBPROC __rglgen_glWindowPos2dvARB;$/;"	v
__rglgen_glWindowPos2f	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2FPROC __rglgen_glWindowPos2f;$/;"	v
__rglgen_glWindowPos2fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2FARBPROC __rglgen_glWindowPos2fARB;$/;"	v
__rglgen_glWindowPos2fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2FVPROC __rglgen_glWindowPos2fv;$/;"	v
__rglgen_glWindowPos2fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2FVARBPROC __rglgen_glWindowPos2fvARB;$/;"	v
__rglgen_glWindowPos2i	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2IPROC __rglgen_glWindowPos2i;$/;"	v
__rglgen_glWindowPos2iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2IARBPROC __rglgen_glWindowPos2iARB;$/;"	v
__rglgen_glWindowPos2iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2IVPROC __rglgen_glWindowPos2iv;$/;"	v
__rglgen_glWindowPos2ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2IVARBPROC __rglgen_glWindowPos2ivARB;$/;"	v
__rglgen_glWindowPos2s	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2SPROC __rglgen_glWindowPos2s;$/;"	v
__rglgen_glWindowPos2sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2SARBPROC __rglgen_glWindowPos2sARB;$/;"	v
__rglgen_glWindowPos2sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2SVPROC __rglgen_glWindowPos2sv;$/;"	v
__rglgen_glWindowPos2svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS2SVARBPROC __rglgen_glWindowPos2svARB;$/;"	v
__rglgen_glWindowPos3d	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3DPROC __rglgen_glWindowPos3d;$/;"	v
__rglgen_glWindowPos3dARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3DARBPROC __rglgen_glWindowPos3dARB;$/;"	v
__rglgen_glWindowPos3dv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3DVPROC __rglgen_glWindowPos3dv;$/;"	v
__rglgen_glWindowPos3dvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3DVARBPROC __rglgen_glWindowPos3dvARB;$/;"	v
__rglgen_glWindowPos3f	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3FPROC __rglgen_glWindowPos3f;$/;"	v
__rglgen_glWindowPos3fARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3FARBPROC __rglgen_glWindowPos3fARB;$/;"	v
__rglgen_glWindowPos3fv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3FVPROC __rglgen_glWindowPos3fv;$/;"	v
__rglgen_glWindowPos3fvARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3FVARBPROC __rglgen_glWindowPos3fvARB;$/;"	v
__rglgen_glWindowPos3i	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3IPROC __rglgen_glWindowPos3i;$/;"	v
__rglgen_glWindowPos3iARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3IARBPROC __rglgen_glWindowPos3iARB;$/;"	v
__rglgen_glWindowPos3iv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3IVPROC __rglgen_glWindowPos3iv;$/;"	v
__rglgen_glWindowPos3ivARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3IVARBPROC __rglgen_glWindowPos3ivARB;$/;"	v
__rglgen_glWindowPos3s	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3SPROC __rglgen_glWindowPos3s;$/;"	v
__rglgen_glWindowPos3sARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3SARBPROC __rglgen_glWindowPos3sARB;$/;"	v
__rglgen_glWindowPos3sv	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3SVPROC __rglgen_glWindowPos3sv;$/;"	v
__rglgen_glWindowPos3svARB	gfx/glsym/glsym_gl.c	/^RGLSYMGLWINDOWPOS3SVARBPROC __rglgen_glWindowPos3svARB;$/;"	v
__sendSlaveAddress	wii/vi_encoder.c	/^static u32 __sendSlaveAddress(u8 addr)$/;"	f	file:	signature:(u8 addr)
__setattr__	ps3/ps3py/pkg.py	/^	def __setattr__(self, name, value):$/;"	m	class:Struct	file:	access:private
__slots__	ps3/ps3py/pkg.py	/^	__slots__ = ('__attrs__', '__baked__', '__defs__', '__endian__', '__next__', '__sizes__', '__values__')$/;"	v	class:Struct
__str__	ps3/ps3py/pkg.py	/^	def __str__(self):$/;"	m	class:FileHeader	file:	access:private
__str__	ps3/ps3py/pkg.py	/^	def __str__(self):$/;"	m	class:Header	file:	access:private
__trace__	ps3/ps3py/pkg.py	/^	def __trace__(self, frame, event, arg):$/;"	m	class:Struct	file:	access:private
__viGetSDA	wii/vi_encoder.c	83;"	d	file:
__viOpenI2C	wii/vi_encoder.c	/^static inline void __viOpenI2C(u32 channel)$/;"	f	file:	signature:(u32 channel)
__viSetSCL	wii/vi_encoder.c	/^static inline void __viSetSCL(u32 channel)$/;"	f	file:	signature:(u32 channel)
__viSetSDA	wii/vi_encoder.c	/^static inline void __viSetSDA(u32 channel)$/;"	f	file:	signature:(u32 channel)
__wrap_calloc	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_calloc(size_t n, size_t size)$/;"	f	signature:(size_t n, size_t size)
__wrap_free	wii/mem2_manager.c	/^__attribute__ ((used)) void __wrap_free(void *p)$/;"	f	signature:(void *p)
__wrap_malloc	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_malloc(size_t size)$/;"	f	signature:(size_t size)
__wrap_malloc_usable_size	wii/mem2_manager.c	/^__attribute__ ((used)) size_t __wrap_malloc_usable_size(void *p)$/;"	f	signature:(void *p)
__wrap_memalign	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_memalign(size_t a, size_t size)$/;"	f	signature:(size_t a, size_t size)
__wrap_realloc	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_realloc(void *p, size_t size)$/;"	f	signature:(void *p, size_t size)
__wrap_strdup	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_strdup(const char *s)$/;"	f	signature:(const char *s)
__wrap_strndup	wii/mem2_manager.c	/^__attribute__ ((used)) void *__wrap_strndup(const char *s, size_t n)$/;"	f	signature:(const char *s, size_t n)
_al_supp	config.features.h	/^static const bool _al_supp = false;$/;"	v
_al_supp	config.features.h	/^static const bool _al_supp = true;$/;"	v
_alsa_supp	config.features.h	/^static const bool _alsa_supp = false;$/;"	v
_alsa_supp	config.features.h	/^static const bool _alsa_supp = true;$/;"	v
_angle	gfx/context/androidegl_ctx.c	/^GLfloat _angle;$/;"	v
_angle	gfx/context/bbqnx_ctx.c	/^GLfloat _angle;$/;"	v
_angle	gfx/context/gles_egl_ctx.c	/^GLfloat _angle;$/;"	v
_cgContextCreateHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgcontextHookFunction _cgContextCreateHook = NULL;$/;"	v
_cgContextDestroyHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgcontextHookFunction _cgContextDestroyHook = NULL;$/;"	v
_cgGLTestArrayParameter	ps3/rgl/include/Cg/CgCommon.h	/^CgRuntimeParameter* _cgGLTestArrayParameter( CGparameter paramIn, long offset, long nelements );$/;"	p	signature:( CGparameter paramIn, long offset, long nelements )
_cgGLTestTextureParameter	ps3/rgl/include/Cg/CgCommon.h	/^CgRuntimeParameter* _cgGLTestTextureParameter( CGparameter param );$/;"	p	signature:( CGparameter param )
_cgGLTestTextureParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CgRuntimeParameter* _cgGLTestTextureParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
_cgGetContextPtr	ps3/rgl/include/Cg/CgCommon.h	/^inline static _CGcontext* _cgGetContextPtr( CGcontext c )$/;"	f	signature:( CGcontext c )
_cgGetNamedParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^static _CGparameter *_cgGetNamedParameter( _CGprogram* progPtr, const char* name, CGenum name_space, int *arrayIndex, const CgParameterEntry *_startEntry = NULL, int _entryCount = -1 )$/;"	f	file:	signature:( _CGprogram* progPtr, const char* name, CGenum name_space, int *arrayIndex, const CgParameterEntry *_startEntry = NULL, int _entryCount = -1 )
_cgGetParamPtr	ps3/rgl/include/Cg/CgCommon.h	/^inline static CgRuntimeParameter* _cgGetParamPtr (CGparameter p)$/;"	f	signature:(CGparameter p)
_cgGetProgPtr	ps3/rgl/include/Cg/CgCommon.h	/^inline static _CGprogram* _cgGetProgPtr( CGprogram p )$/;"	f	signature:( CGprogram p )
_cgIgnoreParamIndex	ps3/rgl/include/Cg/CgCommon.h	/^void _cgIgnoreParamIndex( void *dat, const void*v, const int index );$/;"	p	signature:( void *dat, const void*v, const int index )
_cgIgnoreParamIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^void _cgIgnoreParamIndex (void *data, const void*v, const int index )$/;"	f	signature:(void *data, const void*v, const int index )
_cgIgnoreSetParam	ps3/rgl/include/Cg/CgCommon.h	/^void _cgIgnoreSetParam( void *dat, const void*v );$/;"	p	signature:( void *dat, const void*v )
_cgParameterCreateHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgparameterHookFunction _cgParameterCreateHook = NULL;$/;"	v
_cgParameterDestroyHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgparameterHookFunction _cgParameterDestroyHook = NULL;$/;"	v
_cgProgramCopyHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgprogramCopyHookFunction _cgProgramCopyHook = NULL;$/;"	v
_cgProgramCreateHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgprogramHookFunction _cgProgramCreateHook = NULL;$/;"	v
_cgProgramDestroyHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT CgprogramHookFunction _cgProgramDestroyHook = NULL;$/;"	v
_cgRTCgcCompileProgramHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT cgRTCgcCompileHookFunction _cgRTCgcCompileProgramHook = NULL;$/;"	v
_cgRTCgcFreeCompiledProgramHook	ps3/rgl/src/rgl_ps3_cg.cpp	/^RGL_EXPORT cgRTCgcFreeHookFunction _cgRTCgcFreeCompiledProgramHook;$/;"	v
_cgRaiseInvalidParam	ps3/rgl/include/Cg/CgCommon.h	/^void _cgRaiseInvalidParam( void *data, const void*v );$/;"	p	signature:( void *data, const void*v )
_cgRaiseInvalidParam	ps3/rgl/src/rgl_ps3_cg.cpp	/^void _cgRaiseInvalidParam (void *data, const void*v )$/;"	f	signature:(void *data, const void*v )
_cgRaiseNotMatrixParam	ps3/rgl/include/Cg/CgCommon.h	/^void _cgRaiseNotMatrixParam( void *data, const void*v );$/;"	p	signature:( void *data, const void*v )
_cgRaiseNotMatrixParam	ps3/rgl/src/rgl_ps3_cg.cpp	/^void _cgRaiseNotMatrixParam (void *data, const void*v )$/;"	f	signature:(void *data, const void*v )
_cgSetArrayIndexFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void(*_cgSetArrayIndexFunction) (void *, const void*, const int index);$/;"	t
_cgSetFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void(*_cgSetFunction) (void *, const void* _RGL_RESTRICT);$/;"	t
_cg_common_h	ps3/rgl/include/Cg/CgCommon.h	2;"	d
_cg_internal_h	ps3/rgl/include/Cg/CgInternal.h	2;"	d
_cg_supp	config.features.h	/^static const bool _cg_supp = false;$/;"	v
_cg_supp	config.features.h	/^static const bool _cg_supp = true;$/;"	v
_defaultValuesIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<unsigned short> _defaultValuesIndices;$/;"	m	struct:__anon48	file:	access:public
_dimensionCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned char _dimensionCount;$/;"	m	class:CgArrayType	file:	access:public
_dimensionItemCountsOffset	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _dimensionItemCountsOffset;$/;"	m	class:CgArrayType	file:	access:public
_dimensions	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<short> _dimensions;$/;"	m	struct:__anon48	file:	access:public
_dolheader	wii/app_booter/dolloader.c	/^typedef struct _dolheader {$/;"	s	file:
_dolheader::bss_size	wii/app_booter/dolloader.c	/^	u32 bss_size;$/;"	m	struct:_dolheader	file:	access:public
_dolheader::bss_start	wii/app_booter/dolloader.c	/^	u32 bss_start;$/;"	m	struct:_dolheader	file:	access:public
_dolheader::data_pos	wii/app_booter/dolloader.c	/^	u32 data_pos[11];$/;"	m	struct:_dolheader	file:	access:public
_dolheader::data_size	wii/app_booter/dolloader.c	/^	u32 data_size[11];$/;"	m	struct:_dolheader	file:	access:public
_dolheader::data_start	wii/app_booter/dolloader.c	/^	u32 data_start[11];$/;"	m	struct:_dolheader	file:	access:public
_dolheader::entry_point	wii/app_booter/dolloader.c	/^	u32 entry_point;$/;"	m	struct:_dolheader	file:	access:public
_dolheader::text_pos	wii/app_booter/dolloader.c	/^	u32 text_pos[7];$/;"	m	struct:_dolheader	file:	access:public
_dolheader::text_size	wii/app_booter/dolloader.c	/^	u32 text_size[7];$/;"	m	struct:_dolheader	file:	access:public
_dolheader::text_start	wii/app_booter/dolloader.c	/^	u32 text_start[7];$/;"	m	struct:_dolheader	file:	access:public
_dsound_supp	config.features.h	/^static const bool _dsound_supp = false;$/;"	v
_dsound_supp	config.features.h	/^static const bool _dsound_supp = true;$/;"	v
_dylib_supp	config.features.h	/^static const bool _dylib_supp = false;$/;"	v
_dylib_supp	config.features.h	/^static const bool _dylib_supp = true;$/;"	v
_dynamic_supp	config.features.h	/^static const bool _dynamic_supp = false;$/;"	v
_dynamic_supp	config.features.h	/^static const bool _dynamic_supp = true;$/;"	v
_egl_supp	config.features.h	/^static const bool _egl_supp = false;$/;"	v
_egl_supp	config.features.h	/^static const bool _egl_supp = true;$/;"	v
_elementType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      CgBaseType *_elementType;$/;"	m	class:CgArrayType	file:	access:public
_elements	ps3/rgl/src/rgl_ps3_cg.cpp	/^      std::vector<CgStructuralElement> _elements;$/;"	m	class:CgStructureType	file:	access:public
_elfDefaultsIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<unsigned short> _elfDefaultsIndices;$/;"	m	struct:__anon48	file:	access:public
_fbo_supp	config.features.h	/^static const bool _fbo_supp = false;$/;"	v
_fbo_supp	config.features.h	/^static const bool _fbo_supp = true;$/;"	v
_ffmpeg_supp	config.features.h	/^static const bool _ffmpeg_supp = false;$/;"	v
_ffmpeg_supp	config.features.h	/^static const bool _ffmpeg_supp = true;$/;"	v
_flags	ps3/rgl/src/rgl_ps3_cg.cpp	/^            unsigned short _flags; \/\/in,out,global,varying,const,uniform,shared, hasDefaults(base types only) -> consecutive reg allocation flag$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
_float4	ps3/rgl/src/rgl_ps3_cg.cpp	/^typedef float _float4[4];$/;"	t	file:
_freetype_supp	config.features.h	/^static const bool _freetype_supp = false;$/;"	v
_freetype_supp	config.features.h	/^static const bool _freetype_supp = true;$/;"	v
_getStringTable	ps3/rgl/src/libelf/readelf.c	/^static const char *_getStringTable(const Elf32_Ehdr *ehdr)$/;"	f	file:	signature:(const Elf32_Ehdr *ehdr)
_i2cReg	wii/vi_encoder.c	/^static vu32* const _i2cReg = (u32*)0xCD800000;$/;"	v	file:
_index	ps3/rgl/src/rgl_ps3_cg.cpp	/^            unsigned short _index; \/\/helper index ?$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
_insideArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bool _insideArray; \/\/modifies the way the resources are stored, they should be sent directly to the resources,$/;"	m	class:CgStructureType	file:	access:public
_jack_supp	config.features.h	/^static const bool _jack_supp = false;$/;"	v
_jack_supp	config.features.h	/^static const bool _jack_supp = true;$/;"	v
_kms_supp	config.features.h	/^static const bool _kms_supp = false;$/;"	v
_kms_supp	config.features.h	/^static const bool _kms_supp = true;$/;"	v
_libxml2_supp	config.features.h	/^static const bool _libxml2_supp = false;$/;"	v
_libxml2_supp	config.features.h	/^static const bool _libxml2_supp = true;$/;"	v
_mem2_calloc	wii/mem2_manager.c	/^void *_mem2_calloc(u32 num, u32 size)$/;"	f	signature:(u32 num, u32 size)
_mem2_free	wii/mem2_manager.c	/^void _mem2_free(void *ptr)$/;"	f	signature:(void *ptr)
_mem2_malloc	wii/mem2_manager.c	/^void *_mem2_malloc(u32 size)$/;"	f	signature:(u32 size)
_mem2_memalign	wii/mem2_manager.c	/^void *_mem2_memalign(u8 align, u32 size)$/;"	f	signature:(u8 align, u32 size)
_mem2_realloc	wii/mem2_manager.c	/^void *_mem2_realloc(void *ptr, u32 newsize)$/;"	f	signature:(void *ptr, u32 newsize)
_mem2_strdup	wii/mem2_manager.c	/^char *_mem2_strdup(const char *s)$/;"	f	signature:(const char *s)
_mem2_strndup	wii/mem2_manager.c	/^char *_mem2_strndup(const char *s, size_t n)$/;"	f	signature:(const char *s, size_t n)
_name	ps3/rgl/src/rgl_ps3_cg.cpp	/^            char _name[256];$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
_netplay_supp	config.features.h	/^static const bool _netplay_supp = false;$/;"	v
_netplay_supp	config.features.h	/^static const bool _netplay_supp = true;$/;"	v
_opengl_supp	config.features.h	/^static const bool _opengl_supp = false;$/;"	v
_opengl_supp	config.features.h	/^static const bool _opengl_supp = true;$/;"	v
_oss_supp	config.features.h	/^static const bool _oss_supp = false;$/;"	v
_oss_supp	config.features.h	/^static const bool _oss_supp = true;$/;"	v
_pad	gx/gx_video_inl.h	/^	u8 _pad;$/;"	m	struct:__gx_regdef	access:public
_parameterAlloc	ps3/rgl/src/rgl_ps3_raster.cpp	/^int _parameterAlloc = 0;$/;"	v
_point2	gfx/lima_gfx.c	/^typedef struct _point2 {$/;"	s	file:
_point2::x	gfx/lima_gfx.c	/^	float x,y;$/;"	m	struct:_point2	file:	access:public
_point2::y	gfx/lima_gfx.c	/^	float x,y;$/;"	m	struct:_point2	file:	access:public
_pulse_supp	config.features.h	/^static const bool _pulse_supp = false;$/;"	v
_pulse_supp	config.features.h	/^static const bool _pulse_supp = true;$/;"	v
_python_supp	config.features.h	/^static const bool _python_supp = false;$/;"	v
_python_supp	config.features.h	/^static const bool _python_supp = true;$/;"	v
_resource	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _resource; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
_resourceIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^      short _resourceIndex; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
_resources	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<short> _resources;$/;"	m	struct:__anon48	file:	access:public
_rgui	gfx/lima_gfx.c	/^static bool _rgui = false;$/;"	v	file:
_rgui	gfx/sdl_gfx.c	/^static bool _rgui = false;$/;"	v	file:
_roar_supp	config.features.h	/^static const bool _roar_supp = false;$/;"	v
_roar_supp	config.features.h	/^static const bool _roar_supp = true;$/;"	v
_root	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bool _root;$/;"	m	class:CgStructureType	file:	access:public
_rsound_supp	config.features.h	/^static const bool _rsound_supp = false;$/;"	v
_rsound_supp	config.features.h	/^static const bool _rsound_supp = true;$/;"	v
_sdl_image_supp	config.features.h	/^static const bool _sdl_image_supp = false;$/;"	v
_sdl_image_supp	config.features.h	/^static const bool _sdl_image_supp = true;$/;"	v
_sdl_supp	config.features.h	/^static const bool _sdl_supp = false;$/;"	v
_sdl_supp	config.features.h	/^static const bool _sdl_supp = true;$/;"	v
_semantic	ps3/rgl/src/rgl_ps3_cg.cpp	/^            char _semantic[256];$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
_semanticIndices	ps3/rgl/src/rgl_ps3_cg.cpp	/^   std::vector<CgParameterSemantic> _semanticIndices;$/;"	m	struct:__anon48	file:	access:public
_start	wii/app_booter/crt0.s	/^_start:$/;"	l
_sysutilDetectedVideoMode	ps3/rgl/src/rgl_ps3.cpp	/^static VideoMode _sysutilDetectedVideoMode;$/;"	v	file:
_tagMODESTRUC	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct  _tagMODESTRUC$/;"	s
_tagMODESTRUC::dwDotClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint    dwDotClock;      \/\/ In 10K Hertz$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHSyncPolarity	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHSyncPolarity;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizBlankEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizBlankEnd;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizBlankStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizBlankStart;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizSyncEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizSyncEnd;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizSyncStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizSyncStart;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizTotal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizTotal;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wHorizVisible	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizVisible;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wInterlacedMode	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wInterlacedMode;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wRefresh	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wRefresh;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVSyncPolarity	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVSyncPolarity;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertBlankEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertBlankEnd;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertBlankStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertBlankStart;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertSyncEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertSyncEnd;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertSyncStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertSyncStart;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertTotal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertTotal;$/;"	m	struct:_tagMODESTRUC	access:public
_tagMODESTRUC::wVertVisible	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertVisible;$/;"	m	struct:_tagMODESTRUC	access:public
_thread_supp	config.features.h	/^static const bool _thread_supp = false;$/;"	v
_thread_supp	config.features.h	/^static const bool _thread_supp = true;$/;"	v
_type	ps3/rgl/src/rgl_ps3_cg.cpp	/^            CgBaseType *_type;$/;"	m	class:CgStructureType::CgStructuralElement	file:	access:public
_type	ps3/rgl/src/rgl_ps3_cg.cpp	/^      unsigned short _type; \/\/index of the type in the types array of the program if >= STRUCT, else it's a BASETYPE$/;"	m	class:CgBaseType	file:	access:public
_typesColCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int _typesColCount[] =$/;"	v	file:
_typesRowCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int _typesRowCount[] =$/;"	v	file:
_ucodeAlloc	ps3/rgl/src/rgl_ps3_raster.cpp	/^int _ucodeAlloc = 0;$/;"	v
_udev_supp	config.features.h	/^static const bool _udev_supp = false;$/;"	v
_udev_supp	config.features.h	/^static const bool _udev_supp = true;$/;"	v
_unz64_H	deps/minizip/unzip.h	44;"	d
_vg_supp	config.features.h	/^static const bool _vg_supp = false;$/;"	v
_vg_supp	config.features.h	/^static const bool _vg_supp = true;$/;"	v
_xaudio_supp	config.features.h	/^static const bool _xaudio_supp = false;$/;"	v
_xaudio_supp	config.features.h	/^static const bool _xaudio_supp = true;$/;"	v
_xvideo_supp	config.features.h	/^static const bool _xvideo_supp = false;$/;"	v
_xvideo_supp	config.features.h	/^static const bool _xvideo_supp = true;$/;"	v
_zlib_supp	config.features.h	/^static const bool _zlib_supp = false;$/;"	v
_zlib_supp	config.features.h	/^static const bool _zlib_supp = true;$/;"	v
a	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
a	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
aboutToQuit	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::aboutToQuit()$/;"	f	class:RetroArch	signature:()
aboutToQuit	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void aboutToQuit();$/;"	p	class:RetroArch	access:public	signature:()
abs_x	gfx/shader_parse.h	/^   unsigned abs_x;$/;"	m	struct:gfx_fbo_scale	access:public
abs_y	gfx/shader_parse.h	/^   unsigned abs_y;$/;"	m	struct:gfx_fbo_scale	access:public
absf	apple/common/hidpad/wiimote.h	57;"	d
absinfo	input/udev_joypad.c	/^   struct input_absinfo absinfo[NUM_AXES];$/;"	m	struct:udev_joypad	typeref:struct:udev_joypad::input_absinfo	file:	access:public
accelerometerSensor	frontend/platform/platform_android.h	/^   const ASensor* accelerometerSensor;$/;"	m	struct:android_app	access:public
accelerometer_event_rate	frontend/platform/platform_android.h	/^   unsigned accelerometer_event_rate;$/;"	m	struct:android_app	access:public
accelerometer_state	android/native/jni/input_android.c	/^   sensor_t accelerometer_state;$/;"	m	struct:android_input	file:	access:public
accelerometer_state	ps3/ps3_input.c	/^   sensor_t accelerometer_state[MAX_PADS];$/;"	m	struct:ps3_input	file:	access:public
acodec	record/ffemu.c	/^   char acodec[64];$/;"	m	struct:ff_config_param	file:	access:public
action	command.c	/^   bool (*action)(const char *arg);$/;"	m	struct:cmd_action_map	file:	access:public
actionRan	apple/iOS/menu.h	/^@property (nonatomic) bool actionRan;$/;"	v
action_map	command.c	/^static const struct cmd_action_map action_map[] = {$/;"	v	typeref:struct:cmd_action_map	file:
active	general.h	/^      bool active;$/;"	m	struct:global::__anon237	access:public
active	input/overlay.c	/^   const struct overlay *active;$/;"	m	struct:input_overlay	typeref:struct:input_overlay::overlay	file:	access:public
active_index	gfx/shader_cg.c	/^static unsigned active_index;$/;"	v	file:
active_index	gfx/shader_glsl.c	/^static unsigned active_index;$/;"	v	file:
active_index	gfx/shader_hlsl.c	/^static unsigned active_index = 0;$/;"	v	file:
active_state	gfx/context/sunxi_disp_ioctl.h	/^	__u32 active_state;$/;"	m	struct:__anon199	access:public
activity	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private Activity activity;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
activity	frontend/platform/platform_android.h	/^   ANativeActivity* activity;$/;"	m	struct:android_app	access:public
activityState	frontend/platform/platform_android.h	/^   int activityState;$/;"	m	struct:android_app	access:public
adam7_pass	gfx/rpng/rpng.c	/^struct adam7_pass$/;"	s	file:
adam7_pass::stride_x	gfx/rpng/rpng.c	/^   unsigned stride_x;$/;"	m	struct:adam7_pass	file:	access:public
adam7_pass::stride_y	gfx/rpng/rpng.c	/^   unsigned stride_y;$/;"	m	struct:adam7_pass	file:	access:public
adam7_pass::x	gfx/rpng/rpng.c	/^   unsigned x;$/;"	m	struct:adam7_pass	file:	access:public
adam7_pass::y	gfx/rpng/rpng.c	/^   unsigned y;$/;"	m	struct:adam7_pass	file:	access:public
adapter	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	private IconAdapter<ModuleWrapper> adapter;$/;"	f	class:CoreSelection	file:	access:private
adapter	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private IconAdapter<HistoryWrapper> adapter;$/;"	f	class:HistorySelection	file:	access:private
adapter	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private InstalledCoresAdapter adapter;$/;"	f	class:InstalledCoresFragment	file:	access:private
adapter	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected IconAdapter<FileWrapper> adapter;$/;"	f	class:DirectoryFragment	access:protected
adaptor_set_format	gfx/xvideo.c	/^static bool adaptor_set_format(xv_t *xv, Display *dpy, XvPortID port, const video_info_t *video)$/;"	f	file:	signature:(xv_t *xv, Display *dpy, XvPortID port, const video_info_t *video)
addAllowedExts	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void addAllowedExts(String... exts)$/;"	m	class:DirectoryFragment	access:public	signature:(String... exts)
addDisallowedExts	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void addDisallowedExts(String... exts)$/;"	m	class:DirectoryFragment	access:public	signature:(String... exts)
addPreferencesFromIntent	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void addPreferencesFromIntent(Intent intent)$/;"	m	class:PreferenceListFragment	access:public	signature:(Intent intent)
addPreferencesFromResource	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void addPreferencesFromResource(int preferencesResId)$/;"	m	class:PreferenceListFragment	access:public	signature:(int preferencesResId)
add_child_list	conf/config_file.c	/^static void add_child_list(config_file_t *parent, config_file_t *child)$/;"	f	file:	signature:(config_file_t *parent, config_file_t *child)
add_define_header	qb/qb.libs.sh	/^add_define_header()$/;"	f
add_define_make	qb/qb.libs.sh	/^add_define_make()$/;"	f
add_device	input/udev_input.c	/^static bool add_device(udev_input_t *udev, const char *devnode, device_handle_cb cb)$/;"	f	file:	signature:(udev_input_t *udev, const char *devnode, device_handle_cb cb)
add_image_index	libretro.h	/^   retro_add_image_index_t add_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
add_import_value	gfx/shader_parse.c	/^static bool add_import_value(struct gfx_shader *shader, xmlNodePtr ptr)$/;"	f	file:	signature:(struct gfx_shader *shader, xmlNodePtr ptr)
add_include_dirs	qb/qb.libs.sh	/^add_include_dirs()$/;"	f
add_include_list	conf/config_file.c	/^static void add_include_list(config_file_t *conf, const char *path)$/;"	f	file:	signature:(config_file_t *conf, const char *path)
add_library_dirs	qb/qb.libs.sh	/^add_library_dirs()$/;"	f
add_lut	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_lut(const std::string &id,$/;"	f	class:RenderChain	signature:(const std::string &id, const std::string &path, bool smooth)
add_lut	gfx/d3d9/render_chain.hpp	/^      void add_lut(const std::string &id, const std::string &path, bool smooth);$/;"	p	class:RenderChain	access:public	signature:(const std::string &id, const std::string &path, bool smooth)
add_pad	input/udev_joypad.c	/^static bool add_pad(unsigned p, int fd, const char *path)$/;"	f	file:	signature:(unsigned p, int fd, const char *path)
add_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_pass(const LinkInfo &info)$/;"	f	class:RenderChain	signature:(const LinkInfo &info)
add_pass	gfx/d3d9/render_chain.hpp	/^      void add_pass(const LinkInfo &info);$/;"	p	class:RenderChain	access:public	signature:(const LinkInfo &info)
add_state_tracker	gfx/d3d9/render_chain.cpp	/^void RenderChain::add_state_tracker(std::shared_ptr<state_tracker_t> tracker)$/;"	f	class:RenderChain	signature:(std::shared_ptr<state_tracker_t> tracker)
add_state_tracker	gfx/d3d9/render_chain.hpp	/^      void add_state_tracker(std::shared_ptr<state_tracker_t> tracker);$/;"	p	class:RenderChain	access:public	signature:(std::shared_ptr<state_tracker_t> tracker)
add_sub_conf	conf/config_file.c	/^static void add_sub_conf(config_file_t *conf, char *line)$/;"	f	file:	signature:(config_file_t *conf, char *line)
add_texture_image	gfx/shader_parse.c	/^static bool add_texture_image(struct gfx_shader *shader,$/;"	f	file:	signature:(struct gfx_shader *shader, xmlNodePtr ptr)
addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr;$/;"	m	struct:__anon191	access:public
addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr[3];$/;"	m	struct:__anon186	access:public
addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr[3];$/;"	m	struct:__anon189	access:public
addr	gfx/state_tracker.c	/^   uint32_t addr;$/;"	m	struct:state_tracker_internal	file:	access:public
addr	gfx/state_tracker.h	/^   uint32_t addr;$/;"	m	struct:state_tracker_uniform_info	access:public
addr	netplay.c	/^   struct addrinfo *addr;$/;"	m	struct:netplay	typeref:struct:netplay::addrinfo	file:	access:public
addr_right	gfx/context/sunxi_disp_ioctl.h	/^	__u32 addr_right[3]; \/* used when in frame packing 3d mode *\/$/;"	m	struct:__anon189	access:public
address	apple/iOS/bluetooth/btpad.c	/^   bd_addr_t address;$/;"	m	struct:apple_pad_connection	file:	access:public
address	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    address;$/;"	m	struct:GmmBaseBlock	access:public
address	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureAddress  address;$/;"	m	struct:rglGcmTextureMethodParams	access:public
addrinfo	netplay.c	1468;"	d	file:
addrinfo	netplay.c	1474;"	d	file:
addrinfo	netplay_compat.h	/^struct addrinfo$/;"	s
addrinfo	netplay_compat.h	82;"	d
addrinfo::ai_addr	netplay_compat.h	/^   struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	netplay_compat.h	/^   size_t ai_addrlen;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	netplay_compat.h	/^   char *ai_canonname;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	netplay_compat.h	/^   int ai_family;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	netplay_compat.h	/^   int ai_flags;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	netplay_compat.h	/^   struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	netplay_compat.h	/^   int ai_protocol;$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	netplay_compat.h	/^   int ai_socktype;$/;"	m	struct:addrinfo	access:public
adjust_power_of_two	gfx/fonts/gl_raster_font.c	/^static void adjust_power_of_two(gl_t *gl, struct font_rect *geom)$/;"	f	file:	signature:(gl_t *gl, struct font_rect *geom)
adjust_system_rates	driver.c	/^static void adjust_system_rates(void)$/;"	f	file:	signature:(void)
adler	deps/miniz/zlib.h	/^  mz_ulong adler;                   \/\/ adler32 of the source or uncompressed data$/;"	m	struct:mz_stream_s	access:public
adler32	deps/miniz/zlib.h	394;"	d
advance_x	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
advance_y	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
ai_addr	netplay_compat.h	/^   struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	netplay_compat.h	/^   size_t ai_addrlen;$/;"	m	struct:addrinfo	access:public
ai_canonname	netplay_compat.h	/^   char *ai_canonname;$/;"	m	struct:addrinfo	access:public
ai_family	netplay_compat.h	/^   int ai_family;$/;"	m	struct:addrinfo	access:public
ai_flags	netplay_compat.h	/^   int ai_flags;$/;"	m	struct:addrinfo	access:public
ai_next	netplay_compat.h	/^   struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	netplay_compat.h	/^   int ai_protocol;$/;"	m	struct:addrinfo	access:public
ai_socktype	netplay_compat.h	/^   int ai_socktype;$/;"	m	struct:addrinfo	access:public
al	audio/openal.c	/^typedef struct al$/;"	s	file:
al::buffers	audio/openal.c	/^   ALuint *buffers;$/;"	m	struct:al	file:	access:public
al::ctx	audio/openal.c	/^   ALCcontext *ctx;$/;"	m	struct:al	file:	access:public
al::format	audio/openal.c	/^   ALenum format;$/;"	m	struct:al	file:	access:public
al::handle	audio/openal.c	/^   ALCdevice *handle;$/;"	m	struct:al	file:	access:public
al::nonblock	audio/openal.c	/^   bool nonblock;$/;"	m	struct:al	file:	access:public
al::num_buffers	audio/openal.c	/^   size_t num_buffers;$/;"	m	struct:al	file:	access:public
al::rate	audio/openal.c	/^   int rate;$/;"	m	struct:al	file:	access:public
al::res_buf	audio/openal.c	/^   ALuint *res_buf;$/;"	m	struct:al	file:	access:public
al::res_ptr	audio/openal.c	/^   size_t res_ptr;$/;"	m	struct:al	file:	access:public
al::source	audio/openal.c	/^   ALuint source;$/;"	m	struct:al	file:	access:public
al::tmpbuf	audio/openal.c	/^   uint8_t tmpbuf[BUFSIZE];$/;"	m	struct:al	file:	access:public
al::tmpbuf_ptr	audio/openal.c	/^   size_t tmpbuf_ptr;$/;"	m	struct:al	file:	access:public
al_buffer_size	audio/openal.c	/^static size_t al_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
al_fill_internal_buf	audio/openal.c	/^static size_t al_fill_internal_buf(al_t *al, const void *buf, size_t size)$/;"	f	file:	signature:(al_t *al, const void *buf, size_t size)
al_free	audio/openal.c	/^static void al_free(void *data)$/;"	f	file:	signature:(void *data)
al_get_buffer	audio/openal.c	/^static bool al_get_buffer(al_t *al, ALuint *buffer)$/;"	f	file:	signature:(al_t *al, ALuint *buffer)
al_init	audio/openal.c	/^static void *al_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
al_set_nonblock_state	audio/openal.c	/^static void al_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
al_start	audio/openal.c	/^static bool al_start(void *data)$/;"	f	file:	signature:(void *data)
al_stop	audio/openal.c	/^static bool al_stop(void *data)$/;"	f	file:	signature:(void *data)
al_t	audio/openal.c	/^} al_t;$/;"	t	typeref:struct:al	file:
al_unqueue_buffers	audio/openal.c	/^static bool al_unqueue_buffers(al_t *al)$/;"	f	file:	signature:(al_t *al)
al_write	audio/openal.c	/^static ssize_t al_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
al_write_avail	audio/openal.c	/^static size_t al_write_avail(void *data)$/;"	f	file:	signature:(void *data)
alias_freq	audio/test/snr.c	/^   unsigned alias_freq[3];$/;"	m	struct:snr_result	file:	access:public
alias_power	audio/test/snr.c	/^   double alias_power[3];$/;"	m	struct:snr_result	file:	access:public
align_program	gfx/py_state/py_state.c	/^static char *align_program(const char *program)$/;"	f	file:	signature:(const char *program)
aligned_alloc__	audio/sinc.c	/^static void *aligned_alloc__(size_t boundary, size_t size)$/;"	f	file:	signature:(size_t boundary, size_t size)
aligned_free__	audio/sinc.c	/^static void aligned_free__(void *ptr)$/;"	f	file:	signature:(void *ptr)
alignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei	alignment;$/;"	m	struct:rglImage_	access:public
alive	audio/thread_wrapper.c	/^   bool alive;$/;"	m	struct:audio_thread	file:	access:public
alive	driver.h	/^   bool (*alive)(void *data);$/;"	m	struct:video_driver	access:public
alive	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::alive()$/;"	f	class:D3DVideo	signature:()
alive	gfx/d3d9/d3d9.hpp	/^      bool alive();$/;"	p	class:D3DVideo	access:public	signature:()
alive	gfx/thread_wrapper.c	/^   bool alive;$/;"	m	struct:thread_video	file:	access:public
alive	record/ffemu.c	/^   volatile bool alive;$/;"	m	struct:ffemu	file:	access:public
all_ext	core_info.h	/^   char *all_ext;$/;"	m	struct:__anon253	access:public
all_hms	gfx/d3d9/d3d9.cpp	/^   static HMONITOR all_hms[MAX_MONITORS];$/;"	m	namespace:Monitor	file:
alloc_font	frontend/menu/menu_common.h	/^   bool alloc_font;$/;"	m	struct:__anon25	access:public
alloc_func	deps/miniz/zlib.h	381;"	d
allocate_filters	gfx/scaler/filter.c	/^static bool allocate_filters(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
allocate_frames	gfx/scaler/scaler.c	/^static bool allocate_frames(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
allow_rotate	config.def.h	/^static const bool allow_rotate = true;$/;"	v
allow_rotate	general.h	/^      bool allow_rotate;$/;"	m	struct:settings::__anon227	access:public
allowedExt	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private ArrayList<String> allowedExt;$/;"	f	class:DirectoryFragment	file:	access:private
alpha	gfx/context/sunxi_disp_ioctl.h	/^	__u8 alpha;$/;"	m	struct:__anon164	access:public
alpha	gfx/thread_wrapper.c	/^      float alpha;$/;"	m	struct:thread_video::__anon214	file:	access:public
alpha	gfx/thread_wrapper.c	/^      } alpha;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon218	file:	access:public
alphaFunc	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint alphaFunc;$/;"	m	struct:rglGcmBlendState	access:public
alphaRef	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat alphaRef;$/;"	m	struct:rglGcmBlendState	access:public
alpha_en	gfx/context/sunxi_disp_ioctl.h	/^	__bool alpha_en; \/* layer global alpha enable *\/$/;"	m	struct:__anon187	access:public
alpha_mod	gfx/d3d9/d3d9.hpp	/^   float alpha_mod;$/;"	m	struct:__anon222	access:public
alpha_mod	gfx/gl_common.h	/^   GLfloat alpha_mod;$/;"	m	struct:gl_overlay_data	access:public
alpha_mod	input/overlay.c	/^   float alpha_mod;$/;"	m	struct:overlay_desc	file:	access:public
alpha_select	ps3/sdk_defines.h	313;"	d
alpha_val	gfx/context/sunxi_disp_ioctl.h	/^	__u16 alpha_val; \/* layer global alpha value *\/$/;"	m	struct:__anon187	access:public
alsa	audio/alsa.c	/^typedef struct alsa$/;"	s	file:
alsa	blackberry-qnx/alsa_qsa.c	/^typedef struct alsa$/;"	s	file:
alsa::buffer_size	audio/alsa.c	/^   size_t buffer_size;$/;"	m	struct:alsa	file:	access:public
alsa::buffer_size	blackberry-qnx/alsa_qsa.c	/^   size_t buffer_size;$/;"	m	struct:alsa	file:	access:public
alsa::can_pause	audio/alsa.c	/^   bool can_pause;$/;"	m	struct:alsa	file:	access:public
alsa::can_pause	blackberry-qnx/alsa_qsa.c	/^   bool can_pause;$/;"	m	struct:alsa	file:	access:public
alsa::has_float	audio/alsa.c	/^   bool has_float;$/;"	m	struct:alsa	file:	access:public
alsa::has_float	blackberry-qnx/alsa_qsa.c	/^   bool has_float;$/;"	m	struct:alsa	file:	access:public
alsa::is_paused	audio/alsa.c	/^   bool is_paused;$/;"	m	struct:alsa	file:	access:public
alsa::is_paused	blackberry-qnx/alsa_qsa.c	/^   bool is_paused;$/;"	m	struct:alsa	file:	access:public
alsa::nonblock	audio/alsa.c	/^   bool nonblock;$/;"	m	struct:alsa	file:	access:public
alsa::nonblock	blackberry-qnx/alsa_qsa.c	/^   bool nonblock;$/;"	m	struct:alsa	file:	access:public
alsa::pcm	audio/alsa.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa	file:	access:public
alsa::pcm	blackberry-qnx/alsa_qsa.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa	file:	access:public
alsa_buffer_size	audio/alsa.c	/^static size_t alsa_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
alsa_free	audio/alsa.c	/^static void alsa_free(void *data)$/;"	f	file:	signature:(void *data)
alsa_init	audio/alsa.c	/^static void *alsa_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
alsa_qsa_buffer_size	blackberry-qnx/alsa_qsa.c	/^static size_t alsa_qsa_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
alsa_qsa_free	blackberry-qnx/alsa_qsa.c	/^static void alsa_qsa_free(void *data)$/;"	f	file:	signature:(void *data)
alsa_qsa_init	blackberry-qnx/alsa_qsa.c	/^static void *alsa_qsa_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
alsa_qsa_set_nonblock_state	blackberry-qnx/alsa_qsa.c	/^static void alsa_qsa_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
alsa_qsa_start	blackberry-qnx/alsa_qsa.c	/^static bool alsa_qsa_start(void *data)$/;"	f	file:	signature:(void *data)
alsa_qsa_stop	blackberry-qnx/alsa_qsa.c	/^static bool alsa_qsa_stop(void *data)$/;"	f	file:	signature:(void *data)
alsa_qsa_use_float	blackberry-qnx/alsa_qsa.c	/^static bool alsa_qsa_use_float(void *data)$/;"	f	file:	signature:(void *data)
alsa_qsa_write	blackberry-qnx/alsa_qsa.c	/^static ssize_t alsa_qsa_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
alsa_qsa_write_avail	blackberry-qnx/alsa_qsa.c	/^static size_t alsa_qsa_write_avail(void *data)$/;"	f	file:	signature:(void *data)
alsa_set_nonblock_state	audio/alsa.c	/^static void alsa_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
alsa_start	audio/alsa.c	/^static bool alsa_start(void *data)$/;"	f	file:	signature:(void *data)
alsa_stop	audio/alsa.c	/^static bool alsa_stop(void *data)$/;"	f	file:	signature:(void *data)
alsa_t	audio/alsa.c	/^} alsa_t;$/;"	t	typeref:struct:alsa	file:
alsa_t	blackberry-qnx/alsa_qsa.c	/^} alsa_t;$/;"	t	typeref:struct:alsa	file:
alsa_thread	audio/alsathread.c	/^typedef struct alsa_thread$/;"	s	file:
alsa_thread::buffer	audio/alsathread.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::buffer_size	audio/alsathread.c	/^   size_t buffer_size;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::cond	audio/alsathread.c	/^   scond_t *cond;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::cond_lock	audio/alsathread.c	/^   slock_t *cond_lock;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::fifo_lock	audio/alsathread.c	/^   slock_t *fifo_lock;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::has_float	audio/alsathread.c	/^   bool has_float;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::nonblock	audio/alsathread.c	/^   bool nonblock;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::pcm	audio/alsathread.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::period_frames	audio/alsathread.c	/^   snd_pcm_uframes_t period_frames;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::period_size	audio/alsathread.c	/^   size_t period_size;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::thread_dead	audio/alsathread.c	/^   volatile bool thread_dead;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread::worker_thread	audio/alsathread.c	/^   sthread_t *worker_thread;$/;"	m	struct:alsa_thread	file:	access:public
alsa_thread_buffer_size	audio/alsathread.c	/^static size_t alsa_thread_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
alsa_thread_free	audio/alsathread.c	/^static void alsa_thread_free(void *data)$/;"	f	file:	signature:(void *data)
alsa_thread_init	audio/alsathread.c	/^static void *alsa_thread_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
alsa_thread_set_nonblock_state	audio/alsathread.c	/^static void alsa_thread_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
alsa_thread_start	audio/alsathread.c	/^static bool alsa_thread_start(void *data)$/;"	f	file:	signature:(void *data)
alsa_thread_stop	audio/alsathread.c	/^static bool alsa_thread_stop(void *data)$/;"	f	file:	signature:(void *data)
alsa_thread_t	audio/alsathread.c	/^} alsa_thread_t;$/;"	t	typeref:struct:alsa_thread	file:
alsa_thread_use_float	audio/alsathread.c	/^static bool alsa_thread_use_float(void *data)$/;"	f	file:	signature:(void *data)
alsa_thread_write	audio/alsathread.c	/^static ssize_t alsa_thread_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
alsa_thread_write_avail	audio/alsathread.c	/^static size_t alsa_thread_write_avail(void *data)$/;"	f	file:	signature:(void *data)
alsa_use_float	audio/alsa.c	/^static bool alsa_use_float(void *data)$/;"	f	file:	signature:(void *data)
alsa_worker_thread	audio/alsathread.c	/^static void alsa_worker_thread(void *data)$/;"	f	file:	signature:(void *data)
alsa_write	audio/alsa.c	/^static ssize_t alsa_write(void *data, const void *buf_, size_t size_)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size_)
alsa_write_avail	audio/alsa.c	/^static size_t alsa_write_avail(void *data)$/;"	f	file:	signature:(void *data)
alsathread_find_float_format	audio/alsathread.c	/^static bool alsathread_find_float_format(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)$/;"	f	file:	signature:(snd_pcm_t *pcm, snd_pcm_hw_params_t *params)
alt	file_list.c	/^   char *alt;$/;"	m	struct:item_file	file:	access:public
analog	input/overlay.h	/^   int16_t analog[4];  \/\/ Left X, Left Y, Right X, Right Y$/;"	m	struct:input_overlay_state	access:public
analog0	blackberry-qnx/frontend_qnx.h	/^    int analog0[3];$/;"	m	struct:__anon94	access:public
analog1	blackberry-qnx/frontend_qnx.h	/^    int analog1[3];$/;"	m	struct:__anon94	access:public
analogCount	blackberry-qnx/frontend_qnx.h	/^    int analogCount;$/;"	m	struct:__anon94	access:public
analog_dpad_bind_enums	driver.h	/^enum analog_dpad_bind_enums$/;"	g
analog_saturate_pct	input/overlay.c	/^   float analog_saturate_pct;$/;"	m	struct:overlay_desc	file:	access:public
analog_state	android/native/jni/input_android.c	/^   analog_t analog_state[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
analog_state	gx/gx_input.c	/^   int16_t analog_state[MAX_PADS][2][2];$/;"	m	struct:gx_input	file:	access:public
analog_state	ps3/ps3_input.c	/^uint8_t analog_state[MAX_PADS][2][2];$/;"	v
analog_t	android/native/jni/input_android.c	/^} analog_t;$/;"	t	typeref:struct:__anon79	file:
android_app	frontend/platform/platform_android.h	/^struct android_app$/;"	s
android_app::accelerometerSensor	frontend/platform/platform_android.h	/^   const ASensor* accelerometerSensor;$/;"	m	struct:android_app	access:public
android_app::accelerometer_event_rate	frontend/platform/platform_android.h	/^   unsigned accelerometer_event_rate;$/;"	m	struct:android_app	access:public
android_app::activity	frontend/platform/platform_android.h	/^   ANativeActivity* activity;$/;"	m	struct:android_app	access:public
android_app::activityState	frontend/platform/platform_android.h	/^   int activityState;$/;"	m	struct:android_app	access:public
android_app::clearPendingIntent	frontend/platform/platform_android.h	/^   jmethodID clearPendingIntent;$/;"	m	struct:android_app	access:public
android_app::cond	frontend/platform/platform_android.h	/^   scond_t *cond;$/;"	m	struct:android_app	access:public
android_app::current_ime	frontend/platform/platform_android.h	/^   char current_ime[PATH_MAX];$/;"	m	struct:android_app	access:public
android_app::getIntent	frontend/platform/platform_android.h	/^   jmethodID getIntent;$/;"	m	struct:android_app	access:public
android_app::getPendingIntentConfigPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentConfigPath;$/;"	m	struct:android_app	access:public
android_app::getPendingIntentFullPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentFullPath;$/;"	m	struct:android_app	access:public
android_app::getPendingIntentIME	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentIME;$/;"	m	struct:android_app	access:public
android_app::getPendingIntentLibretroPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentLibretroPath;$/;"	m	struct:android_app	access:public
android_app::getStringExtra	frontend/platform/platform_android.h	/^   jmethodID getStringExtra;$/;"	m	struct:android_app	access:public
android_app::hasPendingIntent	frontend/platform/platform_android.h	/^   jmethodID hasPendingIntent;$/;"	m	struct:android_app	access:public
android_app::inputQueue	frontend/platform/platform_android.h	/^   AInputQueue* inputQueue;$/;"	m	struct:android_app	access:public
android_app::looper	frontend/platform/platform_android.h	/^   ALooper* looper;$/;"	m	struct:android_app	access:public
android_app::msgread	frontend/platform/platform_android.h	/^   int msgread;$/;"	m	struct:android_app	access:public
android_app::msgwrite	frontend/platform/platform_android.h	/^   int msgwrite;$/;"	m	struct:android_app	access:public
android_app::mutex	frontend/platform/platform_android.h	/^   slock_t *mutex;$/;"	m	struct:android_app	access:public
android_app::pendingInputQueue	frontend/platform/platform_android.h	/^   AInputQueue* pendingInputQueue;$/;"	m	struct:android_app	access:public
android_app::pendingWindow	frontend/platform/platform_android.h	/^   ANativeWindow* pendingWindow;$/;"	m	struct:android_app	access:public
android_app::running	frontend/platform/platform_android.h	/^   int running;$/;"	m	struct:android_app	access:public
android_app::sensor_state_mask	frontend/platform/platform_android.h	/^   uint64_t sensor_state_mask;$/;"	m	struct:android_app	access:public
android_app::thread	frontend/platform/platform_android.h	/^   sthread_t *thread;$/;"	m	struct:android_app	access:public
android_app::window	frontend/platform/platform_android.h	/^   ANativeWindow* window;$/;"	m	struct:android_app	access:public
android_app_entry	frontend/platform/platform_android.c	/^extern void android_app_entry(void *args);$/;"	p	file:	signature:(void *args)
android_app_set_activity_state	frontend/platform/platform_android.c	/^static void android_app_set_activity_state (void *data, int8_t cmd)$/;"	f	file:	signature:(void *data, int8_t cmd)
android_app_set_input	frontend/platform/platform_android.c	/^static void android_app_set_input (void *data, AInputQueue* inputQueue)$/;"	f	file:	signature:(void *data, AInputQueue* inputQueue)
android_app_set_window	frontend/platform/platform_android.c	/^static void android_app_set_window (void *data, ANativeWindow* window)$/;"	f	file:	signature:(void *data, ANativeWindow* window)
android_app_write_cmd	frontend/platform/platform_android.c	/^static inline void android_app_write_cmd (void *data, int8_t cmd)$/;"	f	file:	signature:(void *data, int8_t cmd)
android_camera	camera/android.c	/^typedef struct android_camera$/;"	s	file:
android_camera::onCameraFree	camera/android.c	/^   jmethodID onCameraFree;$/;"	m	struct:android_camera	file:	access:public
android_camera::onCameraInit	camera/android.c	/^   jmethodID onCameraInit;$/;"	m	struct:android_camera	file:	access:public
android_camera::onCameraPoll	camera/android.c	/^   jmethodID onCameraPoll;$/;"	m	struct:android_camera	file:	access:public
android_camera::onCameraSetTexture	camera/android.c	/^   jmethodID onCameraSetTexture;$/;"	m	struct:android_camera	file:	access:public
android_camera::onCameraStart	camera/android.c	/^   jmethodID onCameraStart;$/;"	m	struct:android_camera	file:	access:public
android_camera::onCameraStop	camera/android.c	/^   jmethodID onCameraStop;$/;"	m	struct:android_camera	file:	access:public
android_camera::tex	camera/android.c	/^   GLuint tex;$/;"	m	struct:android_camera	file:	access:public
android_camera_free	camera/android.c	/^static void android_camera_free(void *data)$/;"	f	file:	signature:(void *data)
android_camera_init	camera/android.c	/^static void *android_camera_init(const char *device, uint64_t caps, unsigned width, unsigned height)$/;"	f	file:	signature:(const char *device, uint64_t caps, unsigned width, unsigned height)
android_camera_poll	camera/android.c	/^static bool android_camera_poll(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb,$/;"	f	file:	signature:(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb, retro_camera_frame_opengl_texture_t frame_gl_cb)
android_camera_start	camera/android.c	/^static bool android_camera_start(void *data)$/;"	f	file:	signature:(void *data)
android_camera_stop	camera/android.c	/^static void android_camera_stop(void *data)$/;"	f	file:	signature:(void *data)
android_cpuInit	performance/performance_android.c	/^static void android_cpuInit(void)$/;"	f	file:	signature:(void)
android_getCpuCount	performance/performance_android.c	/^int android_getCpuCount(void)$/;"	f	signature:(void)
android_getCpuCount	performance/performance_android.h	/^extern int         android_getCpuCount(void);$/;"	p	signature:(void)
android_getCpuFamily	performance/performance_android.c	/^AndroidCpuFamily android_getCpuFamily(void)$/;"	f	signature:(void)
android_getCpuFamily	performance/performance_android.h	/^extern AndroidCpuFamily   android_getCpuFamily(void);$/;"	p	signature:(void)
android_getCpuFeatures	performance/performance_android.c	/^uint64_t android_getCpuFeatures(void)$/;"	f	signature:(void)
android_getCpuFeatures	performance/performance_android.h	/^extern uint64_t    android_getCpuFeatures(void);$/;"	p	signature:(void)
android_input	android/native/jni/input_android.c	/^typedef struct android_input$/;"	s	file:
android_input::accelerometer_state	android/native/jni/input_android.c	/^   sensor_t accelerometer_state;$/;"	m	struct:android_input	file:	access:public
android_input::analog_state	android/native/jni/input_android.c	/^   analog_t analog_state[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
android_input::dpad_emulation	android/native/jni/input_android.c	/^   unsigned dpad_emulation[MAX_PLAYERS];$/;"	m	struct:android_input	file:	access:public
android_input::keycode_lut	android/native/jni/input_android.c	/^   uint64_t keycode_lut[LAST_KEYCODE];$/;"	m	struct:android_input	file:	access:public
android_input::onBackPressed	android/native/jni/input_android.c	/^   jmethodID onBackPressed;$/;"	m	struct:android_input	file:	access:public
android_input::pads_connected	android/native/jni/input_android.c	/^   unsigned pads_connected;$/;"	m	struct:android_input	file:	access:public
android_input::pointer	android/native/jni/input_android.c	/^   struct input_pointer pointer[MAX_TOUCH];$/;"	m	struct:android_input	typeref:struct:android_input::input_pointer	file:	access:public
android_input::pointer_count	android/native/jni/input_android.c	/^   unsigned pointer_count;$/;"	m	struct:android_input	file:	access:public
android_input::sensorEventQueue	android/native/jni/input_android.c	/^   ASensorEventQueue* sensorEventQueue;$/;"	m	struct:android_input	file:	access:public
android_input::sensorManager	android/native/jni/input_android.c	/^   ASensorManager* sensorManager;$/;"	m	struct:android_input	file:	access:public
android_input::state	android/native/jni/input_android.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
android_input::state_device_ids	android/native/jni/input_android.c	/^   int state_device_ids[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
android_input_enable_sensor_manager	android/native/jni/input_android.c	/^static void android_input_enable_sensor_manager(void *data)$/;"	f	file:	signature:(void *data)
android_input_free_input	android/native/jni/input_android.c	/^static void android_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
android_input_get_capabilities	android/native/jni/input_android.c	/^static uint64_t android_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
android_input_init	android/native/jni/input_android.c	/^static void *android_input_init(void)$/;"	f	file:	signature:(void)
android_input_key_pressed	android/native/jni/input_android.c	/^static bool android_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
android_input_poll	android/native/jni/input_android.c	/^static void android_input_poll(void *data)$/;"	f	file:	signature:(void *data)
android_input_set_keybinds	android/native/jni/input_android.c	/^static void android_input_set_keybinds(void *data, unsigned device,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
android_input_set_sensor_state	android/native/jni/input_android.c	/^static bool android_input_set_sensor_state(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate)
android_input_set_sensor_state	android/native/jni/input_android.c	/^static bool android_input_set_sensor_state(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate);$/;"	p	file:	signature:(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate)
android_input_state	android/native/jni/input_android.c	/^static int16_t android_input_state(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
android_input_t	android/native/jni/input_android.c	/^} android_input_t;$/;"	t	typeref:struct:android_input	file:
android_location	location/android.c	/^typedef struct android_location$/;"	s	file:
android_location::onLocationFree	location/android.c	/^   jmethodID onLocationFree;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationGetHorizontalAccuracy	location/android.c	/^   jmethodID onLocationGetHorizontalAccuracy;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationGetLatitude	location/android.c	/^   jmethodID onLocationGetLatitude;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationGetLongitude	location/android.c	/^   jmethodID onLocationGetLongitude;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationHasChanged	location/android.c	/^   jmethodID onLocationHasChanged;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationInit	location/android.c	/^   jmethodID onLocationInit;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationSetInterval	location/android.c	/^   jmethodID onLocationSetInterval;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationStart	location/android.c	/^   jmethodID onLocationStart;$/;"	m	struct:android_location	file:	access:public
android_location::onLocationStop	location/android.c	/^   jmethodID onLocationStop;$/;"	m	struct:android_location	file:	access:public
android_location_free	location/android.c	/^static void android_location_free(void *data)$/;"	f	file:	signature:(void *data)
android_location_get_position	location/android.c	/^static bool android_location_get_position(void *data, double *latitude, double *longitude, double *horiz_accuracy,$/;"	f	file:	signature:(void *data, double *latitude, double *longitude, double *horiz_accuracy, double *vert_accuracy)
android_location_init	location/android.c	/^static void *android_location_init(void)$/;"	f	file:	signature:(void)
android_location_set_interval	location/android.c	/^static void android_location_set_interval(void *data, unsigned interval_ms, unsigned interval_distance)$/;"	f	file:	signature:(void *data, unsigned interval_ms, unsigned interval_distance)
android_location_start	location/android.c	/^static bool android_location_start(void *data)$/;"	f	file:	signature:(void *data)
android_location_stop	location/android.c	/^static void android_location_stop(void *data)$/;"	f	file:	signature:(void *data)
android_run_events	frontend/platform/platform_android.c	/^static bool android_run_events (void *data)$/;"	f	file:	signature:(void *data)
androidcamera_t	camera/android.c	/^} androidcamera_t;$/;"	t	typeref:struct:android_camera	file:
androidlocation_t	location/android.c	/^} androidlocation_t;$/;"	t	typeref:struct:android_location	file:
api_version	audio/ext/rarch_dsp.h	/^   int api_version;$/;"	m	struct:rarch_dsp_plugin	access:public
app	frontend/menu/rmenu_xui.cpp	/^CRetroArch app;$/;"	v
app_booter_main	wii/app_booter/main.c	/^void app_booter_main(void)$/;"	f	signature:(void)
append	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void append(InputStream stream) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(InputStream stream)
append_config_path	general.h	/^   char append_config_path[PATH_MAX];$/;"	m	struct:global	access:public
append_dir_to_path	frontend/frontend_xenon.c	/^static void append_dir_to_path(char *path, const char *dir)$/;"	f	file:	signature:(char *path, const char *dir)
append_matching_dictionary	apple/OSX/hid_pad.c	/^static void append_matching_dictionary(CFMutableArrayRef array, uint32_t page, uint32_t use)$/;"	f	file:	signature:(CFMutableArrayRef array, uint32_t page, uint32_t use)
apple_bind_button_pressed	apple/common/apple_input.c	/^static bool apple_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
apple_bind_game_view_fbo	apple/common/rarch_wrapper.h	/^void apple_bind_game_view_fbo(void);$/;"	p	signature:(void)
apple_bind_game_view_fbo	gfx/gl.c	/^void apple_bind_game_view_fbo(void);$/;"	p	file:	signature:(void)
apple_core_info_get_custom_config	apple/common/core_info_ext.c	/^const char* apple_core_info_get_custom_config(const char* core_id, char* buffer, size_t buffer_length)$/;"	f	signature:(const char* core_id, char* buffer, size_t buffer_length)
apple_core_info_get_custom_config	apple/common/core_info_ext.h	/^const char* apple_core_info_get_custom_config(const char* core_id, char* buffer, size_t buffer_length);$/;"	p	signature:(const char* core_id, char* buffer, size_t buffer_length)
apple_core_info_get_id	apple/common/core_info_ext.c	/^const char* apple_core_info_get_id(const core_info_t* info, char* buffer, size_t buffer_length)$/;"	f	signature:(const core_info_t* info, char* buffer, size_t buffer_length)
apple_core_info_get_id	apple/common/core_info_ext.h	/^const char* apple_core_info_get_id(const core_info_t* info, char* buffer, size_t buffer_length);$/;"	p	signature:(const core_info_t* info, char* buffer, size_t buffer_length)
apple_core_info_has_custom_config	apple/common/core_info_ext.c	/^bool apple_core_info_has_custom_config(const char* core_id)$/;"	f	signature:(const char* core_id)
apple_core_info_has_custom_config	apple/common/core_info_ext.h	/^bool apple_core_info_has_custom_config(const char* core_id);$/;"	p	signature:(const char* core_id)
apple_core_info_list_get	apple/common/core_info_ext.c	/^core_info_list_t* apple_core_info_list_get(void)$/;"	f	signature:(void)
apple_core_info_list_get	apple/common/core_info_ext.h	/^core_info_list_t* apple_core_info_list_get(void);$/;"	p	signature:(void)
apple_core_info_list_get_by_id	apple/common/core_info_ext.c	/^const core_info_t* apple_core_info_list_get_by_id(const char* core_id)$/;"	f	signature:(const char* core_id)
apple_core_info_list_get_by_id	apple/common/core_info_ext.h	/^const core_info_t* apple_core_info_list_get_by_id(const char* core_id);$/;"	p	signature:(const char* core_id)
apple_core_info_set_config_path	apple/common/core_info_ext.c	/^void apple_core_info_set_config_path(const char* config_path)$/;"	f	signature:(const char* config_path)
apple_core_info_set_config_path	apple/common/core_info_ext.h	/^void apple_core_info_set_config_path(const char* config_path);$/;"	p	signature:(const char* config_path)
apple_core_info_set_core_path	apple/common/core_info_ext.c	/^void apple_core_info_set_core_path(const char* core_path)$/;"	f	signature:(const char* core_path)
apple_core_info_set_core_path	apple/common/core_info_ext.h	/^void apple_core_info_set_core_path(const char* core_path);$/;"	p	signature:(const char* core_path)
apple_display_alert	apple/common/RetroArch_Apple.h	/^extern void apple_display_alert(NSString* message, NSString* title);$/;"	p	signature:(NSString* message, NSString* title)
apple_enter_stasis	apple/common/apple_export.h	/^extern void apple_enter_stasis(void);$/;"	p	signature:(void)
apple_enter_stasis	frontend/platform/platform_apple.c	/^void apple_enter_stasis()$/;"	f
apple_event_basic_command	apple/common/apple_export.h	/^extern void apple_event_basic_command(void* userdata);$/;"	p	signature:(void* userdata)
apple_event_basic_command	frontend/platform/platform_apple.c	/^void apple_event_basic_command(void* userdata)$/;"	f	signature:(void* userdata)
apple_event_queue	frontend/platform/platform_apple.c	/^} apple_event_queue[16];$/;"	v	typeref:struct:__anon14	file:
apple_event_queue_lock	frontend/platform/platform_apple.c	/^static pthread_mutex_t apple_event_queue_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
apple_event_queue_size	frontend/platform/platform_apple.c	/^static uint32_t apple_event_queue_size;$/;"	v	file:
apple_event_set_state_slot	apple/common/apple_export.h	/^extern void apple_event_set_state_slot(void* userdata);$/;"	p	signature:(void* userdata)
apple_event_set_state_slot	frontend/platform/platform_apple.c	/^void apple_event_set_state_slot(void* userdata)$/;"	f	signature:(void* userdata)
apple_event_show_rgui	apple/common/apple_export.h	/^extern void apple_event_show_rgui(void* userdata);$/;"	p	signature:(void* userdata)
apple_event_show_rgui	frontend/platform/platform_apple.c	/^void apple_event_show_rgui(void* userdata)$/;"	f	signature:(void* userdata)
apple_exit_stasis	apple/common/apple_export.h	/^extern void apple_exit_stasis(bool reload_config);$/;"	p	signature:(bool reload_config)
apple_exit_stasis	frontend/platform/platform_apple.c	/^void apple_exit_stasis(bool reload_config)$/;"	f	signature:(bool reload_config)
apple_frontend_post_event	apple/common/RetroArch_Apple.h	/^extern void apple_frontend_post_event(void (*fn)(void*), void* userdata);$/;"	p	signature:(void (*fn)(void*), void* userdata)
apple_frontend_post_event	frontend/platform/platform_apple.c	/^void apple_frontend_post_event(void (*fn)(void*), void* userdata)$/;"	f	signature:(void (*fn)(void*), void* userdata)
apple_frontend_settings_t	apple/iOS/platform.h	/^} apple_frontend_settings_t;$/;"	t	typeref:struct:__anon154
apple_get_core_display_name	apple/common/RetroArch_Apple.h	/^extern NSString *apple_get_core_display_name(NSString *core_id);$/;"	p	signature:(NSString *core_id)
apple_get_core_id	apple/common/RetroArch_Apple.h	/^extern NSString *apple_get_core_id(const core_info_t *core);$/;"	p	signature:(const core_info_t *core)
apple_get_frontend_settings	apple/iOS/platform.h	/^const void* apple_get_frontend_settings(void);$/;"	p	signature:(void)
apple_gfx_ctx_bind_api	apple/common/rarch_wrapper.h	/^bool apple_gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor);$/;"	p	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
apple_gfx_ctx_destroy	apple/common/rarch_wrapper.h	/^void apple_gfx_ctx_destroy(void);$/;"	p	signature:(void)
apple_gfx_ctx_get_proc_address	apple/common/rarch_wrapper.h	/^gfx_ctx_proc_t apple_gfx_ctx_get_proc_address(const char *symbol_name);$/;"	p	signature:(const char *symbol_name)
apple_gfx_ctx_get_video_size	apple/common/rarch_wrapper.h	/^void apple_gfx_ctx_get_video_size(unsigned* width, unsigned* height);$/;"	p	signature:(unsigned* width, unsigned* height)
apple_gfx_ctx_has_focus	apple/common/rarch_wrapper.h	/^bool apple_gfx_ctx_has_focus(void);$/;"	p	signature:(void)
apple_gfx_ctx_init	apple/common/rarch_wrapper.h	/^bool apple_gfx_ctx_init(void);$/;"	p	signature:(void)
apple_gfx_ctx_set_video_mode	apple/common/rarch_wrapper.h	/^bool apple_gfx_ctx_set_video_mode(unsigned width, unsigned height, bool fullscreen);$/;"	p	signature:(unsigned width, unsigned height, bool fullscreen)
apple_gfx_ctx_swap_buffers	apple/common/rarch_wrapper.h	/^void apple_gfx_ctx_swap_buffers(void);$/;"	p	signature:(void)
apple_gfx_ctx_swap_interval	apple/common/rarch_wrapper.h	/^void apple_gfx_ctx_swap_interval(unsigned interval);$/;"	p	signature:(unsigned interval)
apple_gfx_ctx_update_window_title	apple/common/rarch_wrapper.h	/^void apple_gfx_ctx_update_window_title(void);$/;"	p	signature:(void)
apple_input_data_t	apple/common/apple_input.h	/^} apple_input_data_t;$/;"	t	typeref:struct:__anon160
apple_input_enable_icade	apple/common/apple_input.c	/^void apple_input_enable_icade(bool on)$/;"	f	signature:(bool on)
apple_input_enable_icade	apple/common/apple_input.h	/^void apple_input_enable_icade(bool on);$/;"	p	signature:(bool on)
apple_input_find_any_axis	apple/common/apple_input.c	/^int32_t apple_input_find_any_axis(uint32_t port)$/;"	f	signature:(uint32_t port)
apple_input_find_any_axis	apple/common/apple_input.h	/^extern int32_t apple_input_find_any_axis(uint32_t port);$/;"	p	signature:(uint32_t port)
apple_input_find_any_button	apple/common/apple_input.c	/^int32_t apple_input_find_any_button(uint32_t port)$/;"	f	signature:(uint32_t port)
apple_input_find_any_button	apple/common/apple_input.h	/^extern int32_t apple_input_find_any_button(uint32_t port);$/;"	p	signature:(uint32_t port)
apple_input_find_any_key	apple/common/apple_input.c	/^int32_t apple_input_find_any_key(void)$/;"	f	signature:(void)
apple_input_find_any_key	apple/common/apple_input.h	/^extern int32_t apple_input_find_any_key(void);$/;"	p	signature:(void)
apple_input_free_input	apple/common/apple_input.c	/^static void apple_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
apple_input_get_capabilities	apple/common/apple_input.c	/^static uint64_t apple_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
apple_input_get_icade_buttons	apple/common/apple_input.c	/^uint32_t apple_input_get_icade_buttons(void)$/;"	f	signature:(void)
apple_input_get_icade_buttons	apple/common/apple_input.h	/^uint32_t apple_input_get_icade_buttons(void);$/;"	p	signature:(void)
apple_input_handle_key_event	apple/common/apple_input.c	/^void apple_input_handle_key_event(unsigned keycode, bool down)$/;"	f	signature:(unsigned keycode, bool down)
apple_input_handle_key_event	apple/common/apple_input.h	/^void apple_input_handle_key_event(unsigned keycode, bool down);$/;"	p	signature:(unsigned keycode, bool down)
apple_input_init	apple/common/apple_input.c	/^static void *apple_input_init(void)$/;"	f	file:	signature:(void)
apple_input_poll	apple/common/apple_input.c	/^static void apple_input_poll(void *data)$/;"	f	file:	signature:(void *data)
apple_input_reset_icade_buttons	apple/common/apple_input.c	/^void apple_input_reset_icade_buttons(void)$/;"	f	signature:(void)
apple_input_reset_icade_buttons	apple/common/apple_input.h	/^void apple_input_reset_icade_buttons(void);$/;"	p	signature:(void)
apple_input_set_keybinds	apple/common/apple_input.c	/^static void apple_input_set_keybinds(void *data, unsigned device, unsigned port,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
apple_input_set_rumble	apple/common/apple_input.c	/^static bool apple_input_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
apple_input_state	apple/common/apple_input.c	/^static int16_t apple_input_state(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
apple_is_pressed	apple/common/apple_input.c	/^static bool apple_is_pressed(unsigned port_num, const struct retro_keybind *binds, unsigned key)$/;"	f	file:	signature:(unsigned port_num, const struct retro_keybind *binds, unsigned key)
apple_joypad	apple/common/apple_joypad.c	/^const rarch_joypad_driver_t apple_joypad = {$/;"	v
apple_joypad_axis	apple/common/apple_joypad.c	/^static int16_t apple_joypad_axis(unsigned port, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port, uint32_t joyaxis)
apple_joypad_button	apple/common/apple_joypad.c	/^static bool apple_joypad_button(unsigned port, uint16_t joykey)$/;"	f	file:	signature:(unsigned port, uint16_t joykey)
apple_joypad_connect	apple/common/apple_input.h	/^int32_t apple_joypad_connect(const char* name, struct apple_pad_connection* connection);$/;"	p	signature:(const char* name, struct apple_pad_connection* connection)
apple_joypad_connect	apple/common/apple_joypad.c	/^int32_t apple_joypad_connect(const char* name, struct apple_pad_connection* connection)$/;"	f	signature:(const char* name, struct apple_pad_connection* connection)
apple_joypad_destroy	apple/common/apple_joypad.c	/^static void apple_joypad_destroy(void)$/;"	f	file:	signature:(void)
apple_joypad_disconnect	apple/common/apple_input.h	/^void apple_joypad_disconnect(uint32_t slot);$/;"	p	signature:(uint32_t slot)
apple_joypad_disconnect	apple/common/apple_joypad.c	/^void apple_joypad_disconnect(uint32_t slot)$/;"	f	signature:(uint32_t slot)
apple_joypad_has_interface	apple/common/apple_input.h	/^bool apple_joypad_has_interface(uint32_t slot);$/;"	p	signature:(uint32_t slot)
apple_joypad_has_interface	apple/common/apple_joypad.c	/^bool apple_joypad_has_interface(uint32_t slot)$/;"	f	signature:(uint32_t slot)
apple_joypad_init	apple/common/apple_joypad.c	/^static bool apple_joypad_init(void)$/;"	f	file:	signature:(void)
apple_joypad_name	apple/common/apple_joypad.c	/^static const char *apple_joypad_name(unsigned joypad)$/;"	f	file:	signature:(unsigned joypad)
apple_joypad_packet	apple/common/apple_input.h	/^void apple_joypad_packet(uint32_t slot, uint8_t* data, uint32_t length);$/;"	p	signature:(uint32_t slot, uint8_t* data, uint32_t length)
apple_joypad_packet	apple/common/apple_joypad.c	/^void apple_joypad_packet(uint32_t slot, uint8_t* data, uint32_t length)$/;"	f	signature:(uint32_t slot, uint8_t* data, uint32_t length)
apple_joypad_poll	apple/common/apple_joypad.c	/^static void apple_joypad_poll(void)$/;"	f	file:	signature:(void)
apple_joypad_query_pad	apple/common/apple_joypad.c	/^static bool apple_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
apple_joypad_rumble	apple/common/apple_joypad.c	/^static bool apple_joypad_rumble(unsigned pad, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(unsigned pad, enum retro_rumble_effect effect, uint16_t strength)
apple_joypad_send_hid_control	apple/common/apple_input.h	/^void apple_joypad_send_hid_control(struct apple_pad_connection* connection, uint8_t* data, size_t size);$/;"	p	signature:(struct apple_pad_connection* connection, uint8_t* data, size_t size)
apple_key_name_map_entry	apple/common/keycode.h	/^struct apple_key_name_map_entry$/;"	s
apple_key_name_map_entry::hid_id	apple/common/keycode.h	/^   const uint32_t hid_id;$/;"	m	struct:apple_key_name_map_entry	access:public
apple_key_name_map_entry::keyname	apple/common/keycode.h	/^   const char* const keyname;$/;"	m	struct:apple_key_name_map_entry	access:public
apple_key_pressed	apple/common/apple_input.c	/^static bool apple_key_pressed(enum retro_key key)$/;"	f	file:	signature:(enum retro_key key)
apple_keycode_hidusage_to_name	apple/common/keycode.h	/^const char* apple_keycode_hidusage_to_name(uint32_t hid_usage);$/;"	p	signature:(uint32_t hid_usage)
apple_pad_connection	apple/OSX/hid_pad.c	/^struct apple_pad_connection$/;"	s	file:
apple_pad_connection	apple/iOS/bluetooth/btpad.c	/^struct apple_pad_connection$/;"	s	file:
apple_pad_connection::address	apple/iOS/bluetooth/btpad.c	/^   bd_addr_t address;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::channels	apple/iOS/bluetooth/btpad.c	/^   uint16_t channels[2]; \/\/0: Control, 1: Interrupt$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::data	apple/OSX/hid_pad.c	/^   uint8_t data[2048];$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::device	apple/OSX/hid_pad.c	/^   IOHIDDeviceRef device;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::handle	apple/iOS/bluetooth/btpad.c	/^   uint16_t handle;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::has_address	apple/iOS/bluetooth/btpad.c	/^   bool has_address;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::slot	apple/OSX/hid_pad.c	/^   uint32_t slot;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::slot	apple/iOS/bluetooth/btpad.c	/^   uint32_t slot;$/;"	m	struct:apple_pad_connection	file:	access:public
apple_pad_connection::state	apple/iOS/bluetooth/btpad.c	/^   enum btpad_state state;$/;"	m	struct:apple_pad_connection	typeref:enum:apple_pad_connection::btpad_state	file:	access:public
apple_pad_interface	apple/common/apple_input.h	/^struct apple_pad_interface$/;"	s
apple_pad_interface::connect	apple/common/apple_input.h	/^   void* (*connect)(struct apple_pad_connection* connection, uint32_t slot);$/;"	m	struct:apple_pad_interface	access:public
apple_pad_interface::disconnect	apple/common/apple_input.h	/^   void (*disconnect)(void* device);$/;"	m	struct:apple_pad_interface	access:public
apple_pad_interface::packet_handler	apple/common/apple_input.h	/^   void (*packet_handler)(void* device, uint8_t *packet, uint16_t size);$/;"	m	struct:apple_pad_interface	access:public
apple_pad_interface::set_rumble	apple/common/apple_input.h	/^   void (*set_rumble)(void* device, enum retro_rumble_effect effect, uint16_t strength);$/;"	m	struct:apple_pad_interface	access:public
apple_pad_ps3	apple/common/hidpad/apple_ps3_pad.c	/^struct apple_pad_interface apple_pad_ps3 =$/;"	v	typeref:struct:apple_pad_interface
apple_pad_send_control	apple/OSX/hid_pad.c	/^void apple_pad_send_control(struct apple_pad_connection* connection, uint8_t* data, size_t size)$/;"	f	signature:(struct apple_pad_connection* connection, uint8_t* data, size_t size)
apple_pad_send_control	apple/iOS/bluetooth/btpad.c	/^void apple_pad_send_control(struct apple_pad_connection* connection, uint8_t* data, size_t size)$/;"	f	signature:(struct apple_pad_connection* connection, uint8_t* data, size_t size)
apple_pad_wii	apple/common/hidpad/apple_wii_pad.c	/^struct apple_pad_interface apple_pad_wii =$/;"	v	typeref:struct:apple_pad_interface
apple_rarch_exited	apple/common/rarch_wrapper.h	/^void apple_rarch_exited (void* result);$/;"	p	signature:(void* result)
apple_refresh_config	apple/common/apple_export.h	/^extern void apple_refresh_config(void);$/;"	p	signature:(void)
apple_refresh_config	frontend/platform/platform_apple.c	/^void apple_refresh_config()$/;"	f
apple_rom_history_get_core_name	apple/common/core_info_ext.c	/^const char* apple_rom_history_get_core_name(rom_history_t* history, uint32_t index)$/;"	f	signature:(rom_history_t* history, uint32_t index)
apple_rom_history_get_core_name	apple/common/core_info_ext.h	/^const char* apple_rom_history_get_core_name(rom_history_t* history, uint32_t index);$/;"	p	signature:(rom_history_t* history, uint32_t index)
apple_rom_history_get_core_path	apple/common/core_info_ext.c	/^const char* apple_rom_history_get_core_path(rom_history_t* history, uint32_t index)$/;"	f	signature:(rom_history_t* history, uint32_t index)
apple_rom_history_get_core_path	apple/common/core_info_ext.h	/^const char* apple_rom_history_get_core_path(rom_history_t* history, uint32_t index);$/;"	p	signature:(rom_history_t* history, uint32_t index)
apple_rom_history_get_path	apple/common/core_info_ext.c	/^const char* apple_rom_history_get_path(rom_history_t* history, uint32_t index)$/;"	f	signature:(rom_history_t* history, uint32_t index)
apple_rom_history_get_path	apple/common/core_info_ext.h	/^const char* apple_rom_history_get_path(rom_history_t* history, uint32_t index);$/;"	p	signature:(rom_history_t* history, uint32_t index)
apple_run_core	apple/common/RetroArch_Apple.h	/^extern void apple_run_core(NSString* core, const char* file);$/;"	p	signature:(NSString* core, const char* file)
apple_touch_data_t	apple/common/apple_input.h	/^} apple_touch_data_t;$/;"	t	typeref:struct:__anon159
apply_state_changes	driver.h	/^   void (*apply_state_changes)(void *data);$/;"	m	struct:video_poke_interface	access:public
apply_state_changes	gfx/thread_wrapper.c	/^   bool apply_state_changes;$/;"	m	struct:thread_video	file:	access:public
areAssetsExtracted	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private boolean areAssetsExtracted()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
arg_desc	command.c	/^   const char *arg_desc;$/;"	m	struct:cmd_action_map	file:	access:public
args_initial_ptr	frontend/frontend.c	103;"	d	file:
args_initial_ptr	frontend/frontend.c	118;"	d	file:
args_initial_ptr	frontend/frontend.c	133;"	d	file:
args_initial_ptr	frontend/frontend.c	148;"	d	file:
args_type	frontend/frontend.c	102;"	d	file:
args_type	frontend/frontend.c	117;"	d	file:
args_type	frontend/frontend.c	132;"	d	file:
args_type	frontend/frontend.c	147;"	d	file:
array	ps3/rgl/include/RGL/Base.h	/^      T* array;$/;"	m	class:RGL::Vector	access:private
arrayBuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint  arrayBuffer;  \/\/ name of buffer object; 0==none (ie client-side)$/;"	m	struct:__anon68	access:public
arrayType	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short arrayType;$/;"	m	struct:_CgParameterArray	access:public
aspect_ratio	config.def.h	/^static const float aspect_ratio = DEFAULT_ASPECT_RATIO; \/\/ Automatic$/;"	v
aspect_ratio	general.h	/^      float aspect_ratio;$/;"	m	struct:global::__anon234	access:public
aspect_ratio	general.h	/^      float aspect_ratio;$/;"	m	struct:settings::__anon227	access:public
aspect_ratio	gfx/gfx_common.h	/^enum aspect_ratio$/;"	g
aspect_ratio	libretro.h	/^   float    aspect_ratio;  \/\/ Nominal aspect ratio of game. If aspect_ratio is <= 0.0,$/;"	m	struct:retro_game_geometry	access:public
aspect_ratio	record/ffemu.h	/^   float aspect_ratio;$/;"	m	struct:ffemu_params	access:public
aspect_ratio_auto	config.def.h	/^static const bool aspect_ratio_auto = false; \/\/ 1:1 PAR$/;"	v
aspect_ratio_auto	general.h	/^      bool aspect_ratio_auto;$/;"	m	struct:settings::__anon227	access:public
aspect_ratio_elem	gfx/gfx_common.h	/^struct aspect_ratio_elem$/;"	s
aspect_ratio_elem::name	gfx/gfx_common.h	/^   char name[64];$/;"	m	struct:aspect_ratio_elem	access:public
aspect_ratio_elem::value	gfx/gfx_common.h	/^   float value;$/;"	m	struct:aspect_ratio_elem	access:public
aspect_ratio_idx	config.def.h	/^static unsigned aspect_ratio_idx = ASPECT_RATIO_16_9;$/;"	v
aspect_ratio_idx	config.def.h	/^static unsigned aspect_ratio_idx = ASPECT_RATIO_4_3;$/;"	v
aspect_ratio_idx	config.def.h	/^static unsigned aspect_ratio_idx = ASPECT_RATIO_CONFIG; \/\/ Use g_settings.video.aspect_ratio.$/;"	v
aspect_ratio_idx	general.h	/^      unsigned aspect_ratio_idx;$/;"	m	struct:settings::__anon227	access:public
aspectratio_lut	gfx/gfx_common.c	/^struct aspect_ratio_elem aspectratio_lut[ASPECT_RATIO_END] = {$/;"	v	typeref:struct:aspect_ratio_elem
astream	record/ffemu.c	/^   AVStream *astream;$/;"	m	struct:ff_muxer_info	file:	access:public
attempt_load_game	frontend/frontend.c	161;"	d	file:
attempt_load_game	frontend/frontend.c	163;"	d	file:
attempt_load_game_fails	frontend/frontend.c	183;"	d	file:
attempt_load_game_fails	frontend/frontend.c	185;"	d	file:
attempt_load_game_push_history	frontend/frontend.c	173;"	d	file:
attempt_load_game_push_history	frontend/frontend.c	175;"	d	file:
attr	file_path.h	/^   union string_list_elem_attr attr;$/;"	m	struct:string_list_elem	typeref:union:string_list_elem::string_list_elem_attr	access:public
attr_fifo	record/ffemu.c	/^   fifo_buffer_t *attr_fifo;$/;"	m	struct:ffemu	file:	access:public
attrib	compat/rxml/rxml.h	/^   char *attrib;$/;"	m	struct:rxml_attrib_node	access:public
attrib	compat/rxml/rxml.h	/^   struct rxml_attrib_node *attrib;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_attrib_node	access:public
attrib	ps3/rgl/include/RGL/Types.h	/^      rglAttribute		attrib[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon69	access:public
attribXferOffset	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferOffset[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon67	access:public
attribXferSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferSize[RGL_MAX_VERTEX_ATTRIBS];$/;"	m	struct:__anon67	access:public
attribXferTotalSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	attribXferTotalSize;$/;"	m	struct:__anon67	access:public
attrib_map	gfx/d3d9/render_chain.hpp	/^         std::vector<unsigned> attrib_map;$/;"	m	struct:RenderChain::Pass	access:public
attribs	ps3/rgl/include/RGL/Types.h	/^      rglAttributeState *attribs;			\/\/ ptr to current rglAttributeState$/;"	m	struct:RGLcontext	access:public
attributeInputMask	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int attributeInputMask;$/;"	m	struct:CgProgramHeader	access:public
attributeInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeInputMask;       \/\/ attributes fp reads (uses SET_VERTEX_ATTRIB_OUTPUT_MASK bits)$/;"	m	struct:CgBinaryFragmentProgram	access:public
attributeInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeInputMask;       \/\/ attributes vs reads from$/;"	m	struct:CgBinaryVertexProgram	access:public
attributeOutputMask	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int attributeOutputMask;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
attributeOutputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  attributeOutputMask;      \/\/ attributes vs writes (uses SET_VERTEX_ATTRIB_OUTPUT_MASK bits)$/;"	m	struct:CgBinaryVertexProgram	access:public
audio	driver.h	/^   const audio_driver_t *audio;$/;"	m	struct:driver	access:public
audio	general.h	/^   } audio;$/;"	m	struct:settings	typeref:struct:settings::__anon231	access:public
audio	record/ffemu.c	/^   struct ff_audio_info audio;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_audio_info	file:	access:public
audioAddData	ps3/sdk_defines.h	/^extern int audioAddData(uint32_t portNum, float *data, uint32_t frames, float volume);$/;"	p	signature:(uint32_t portNum, float *data, uint32_t frames, float volume)
audio_active	general.h	/^   bool audio_active;$/;"	m	struct:global	access:public
audio_alsa	audio/alsa.c	/^const audio_driver_t audio_alsa = {$/;"	v
audio_alsa	blackberry-qnx/alsa_qsa.c	/^const audio_driver_t audio_alsa = {$/;"	v
audio_alsathread	audio/alsathread.c	/^const audio_driver_t audio_alsathread = {$/;"	v
audio_batch_cb	libretro-test-gl/libretro-test.c	/^static retro_audio_sample_batch_t audio_batch_cb;$/;"	v	file:
audio_batch_cb	libretro-test/libretro-test.c	/^static retro_audio_sample_batch_t audio_batch_cb;$/;"	v	file:
audio_bit_rate	record/ffemu.c	/^   int audio_bit_rate;$/;"	m	struct:ff_config_param	file:	access:public
audio_buffer_size_func	driver_funcs.h	35;"	d
audio_callback	audio/rsound.h	/^      rsd_audio_callback_t audio_callback;$/;"	m	struct:rsound	access:public
audio_callback	general.h	/^      struct retro_audio_callback audio_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_audio_callback	access:public
audio_cb	libretro-test-gl/libretro-test.c	/^static retro_audio_sample_t audio_cb;$/;"	v	file:
audio_cb	libretro-test/libretro-test.c	/^static retro_audio_sample_t audio_cb;$/;"	v	file:
audio_convert_float_s16_asm	audio/utils.c	/^void audio_convert_float_s16_asm(int16_t *out, const float *in, size_t samples);$/;"	p	file:	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_s16_asm	audio/utils_neon.S	/^audio_convert_float_s16_asm:$/;"	l
audio_convert_float_to_s16	audio/utils.h	28;"	d
audio_convert_float_to_s16	audio/utils.h	38;"	d
audio_convert_float_to_s16	audio/utils.h	48;"	d
audio_convert_float_to_s16	audio/utils.h	57;"	d
audio_convert_float_to_s16_C	audio/utils.c	/^void audio_convert_float_to_s16_C(int16_t *out,$/;"	f	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_C	audio/utils.h	/^void audio_convert_float_to_s16_C(int16_t *out,$/;"	p	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_SSE2	audio/utils.c	/^void audio_convert_float_to_s16_SSE2(int16_t *out,$/;"	f	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_SSE2	audio/utils.h	/^void audio_convert_float_to_s16_SSE2(int16_t *out,$/;"	p	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_altivec	audio/utils.c	/^void audio_convert_float_to_s16_altivec(int16_t *out,$/;"	f	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_altivec	audio/utils.h	/^void audio_convert_float_to_s16_altivec(int16_t *out,$/;"	p	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_float_to_s16_arm	audio/utils.h	/^void (*audio_convert_float_to_s16_arm)(int16_t *out,$/;"	v
audio_convert_float_to_s16_neon	audio/utils.c	/^static void audio_convert_float_to_s16_neon(int16_t *out, const float *in, size_t samples)$/;"	f	file:	signature:(int16_t *out, const float *in, size_t samples)
audio_convert_init_simd	audio/utils.c	/^void audio_convert_init_simd(void)$/;"	f	signature:(void)
audio_convert_init_simd	audio/utils.h	/^void audio_convert_init_simd(void);$/;"	p	signature:(void)
audio_convert_s16_float_asm	audio/utils.c	/^void audio_convert_s16_float_asm(float *out, const int16_t *in, size_t samples);$/;"	p	file:	signature:(float *out, const int16_t *in, size_t samples)
audio_convert_s16_float_asm	audio/utils_neon.S	/^audio_convert_s16_float_asm:$/;"	l
audio_convert_s16_to_float	audio/utils.h	27;"	d
audio_convert_s16_to_float	audio/utils.h	37;"	d
audio_convert_s16_to_float	audio/utils.h	47;"	d
audio_convert_s16_to_float	audio/utils.h	56;"	d
audio_convert_s16_to_float_C	audio/utils.c	/^void audio_convert_s16_to_float_C(float *out,$/;"	f	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_C	audio/utils.h	/^void audio_convert_s16_to_float_C(float *out,$/;"	p	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_SSE2	audio/utils.c	/^void audio_convert_s16_to_float_SSE2(float *out,$/;"	f	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_SSE2	audio/utils.h	/^void audio_convert_s16_to_float_SSE2(float *out,$/;"	p	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_altivec	audio/utils.c	/^void audio_convert_s16_to_float_altivec(float *out,$/;"	f	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_altivec	audio/utils.h	/^void audio_convert_s16_to_float_altivec(float *out,$/;"	p	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_convert_s16_to_float_arm	audio/utils.h	/^void (*audio_convert_s16_to_float_arm)(float *out,$/;"	v
audio_convert_s16_to_float_neon	audio/utils.c	/^static void audio_convert_s16_to_float_neon(float *out, const int16_t *in, size_t samples,$/;"	f	file:	signature:(float *out, const int16_t *in, size_t samples, float gain)
audio_coreaudio	audio/coreaudio.c	/^const audio_driver_t audio_coreaudio = {$/;"	v
audio_data	driver.h	/^   void *audio_data;$/;"	m	struct:driver	access:public
audio_data	general.h	/^   } audio_data;$/;"	m	struct:global	typeref:struct:global::__anon235	access:public
audio_data_own	driver.h	/^   bool audio_data_own;$/;"	m	struct:driver	access:public
audio_device	config.def.h	/^static const char *audio_device = NULL;$/;"	v
audio_driver	driver.h	/^typedef struct audio_driver$/;"	s
audio_driver::buffer_size	driver.h	/^   size_t (*buffer_size)(void *data); \/\/ Optional$/;"	m	struct:audio_driver	access:public
audio_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:audio_driver	access:public
audio_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:audio_driver	access:public
audio_driver::init	driver.h	/^   void *(*init)(const char *device, unsigned rate, unsigned latency);$/;"	m	struct:audio_driver	access:public
audio_driver::set_nonblock_state	driver.h	/^   void (*set_nonblock_state)(void *data, bool toggle); \/\/ Should we care about blocking in audio thread? Fast forwarding.$/;"	m	struct:audio_driver	access:public
audio_driver::start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:audio_driver	access:public
audio_driver::stop	driver.h	/^   bool (*stop)(void *data);$/;"	m	struct:audio_driver	access:public
audio_driver::use_float	driver.h	/^   bool (*use_float)(void *data); \/\/ Defines if driver will take standard floating point samples, or int16_t samples.$/;"	m	struct:audio_driver	access:public
audio_driver::write	driver.h	/^   ssize_t (*write)(void *data, const void *buf, size_t size);$/;"	m	struct:audio_driver	access:public
audio_driver::write_avail	driver.h	/^   size_t (*write_avail)(void *data); \/\/ Optional$/;"	m	struct:audio_driver	access:public
audio_driver_t	driver.h	/^} audio_driver_t;$/;"	t	typeref:struct:audio_driver
audio_drivers	driver.c	/^static const audio_driver_t *audio_drivers[] = {$/;"	v	file:
audio_dsound	audio/dsound.c	/^const audio_driver_t audio_dsound = {$/;"	v
audio_enable	config.def.h	/^static const bool audio_enable = true;$/;"	v
audio_fifo	record/ffemu.c	/^   fifo_buffer_t *audio_fifo;$/;"	m	struct:ffemu	file:	access:public
audio_flush	retroarch.c	/^static bool audio_flush(const int16_t *data, size_t samples)$/;"	f	file:	signature:(const int16_t *data, size_t samples)
audio_free_func	driver_funcs.h	32;"	d
audio_global_quality	record/ffemu.c	/^   int audio_global_quality;$/;"	m	struct:ff_config_param	file:	access:public
audio_gx	gx/gx_audio.c	/^const audio_driver_t audio_gx = {$/;"	v
audio_init_func	driver_funcs.h	27;"	d
audio_jack	audio/jack.c	/^const audio_driver_t audio_jack = {$/;"	v
audio_lock	audio/dsound.c	/^struct audio_lock$/;"	s	file:
audio_lock::chunk1	audio/dsound.c	/^   void *chunk1;$/;"	m	struct:audio_lock	file:	access:public
audio_lock::chunk2	audio/dsound.c	/^   void *chunk2;$/;"	m	struct:audio_lock	file:	access:public
audio_lock::size1	audio/dsound.c	/^   DWORD size1;$/;"	m	struct:audio_lock	file:	access:public
audio_lock::size2	audio/dsound.c	/^   DWORD size2;$/;"	m	struct:audio_lock	file:	access:public
audio_null	audio/null.c	/^const audio_driver_t audio_null = {$/;"	v
audio_openal	audio/openal.c	/^const audio_driver_t audio_openal = {$/;"	v
audio_opensl	audio/opensl.c	/^const audio_driver_t audio_opensl = {$/;"	v
audio_opts	record/ffemu.c	/^   AVDictionary *audio_opts;$/;"	m	struct:ff_config_param	file:	access:public
audio_oss	audio/oss.c	/^const audio_driver_t audio_oss = {$/;"	v
audio_port	ps3/ps3_audio.c	/^   uint32_t audio_port;$/;"	m	struct:__anon78	file:	access:public
audio_ps3	ps3/ps3_audio.c	/^const audio_driver_t audio_ps3 = {$/;"	v
audio_pulse	audio/pulse.c	/^const audio_driver_t audio_pulse = {$/;"	v
audio_qscale	record/ffemu.c	/^   bool audio_qscale;$/;"	m	struct:ff_config_param	file:	access:public
audio_roar	audio/roar.c	/^const audio_driver_t audio_roar = {$/;"	v
audio_rsound	audio/rsound.c	/^const audio_driver_t audio_rsound = {$/;"	v
audio_rwebaudio	audio/rwebaudio.c	/^const audio_driver_t audio_rwebaudio = {$/;"	v
audio_sample	retroarch.c	/^static void audio_sample(int16_t left, int16_t right)$/;"	f	file:	signature:(int16_t left, int16_t right)
audio_sample_batch	retroarch.c	/^size_t audio_sample_batch(const int16_t *data, size_t frames)$/;"	f	signature:(const int16_t *data, size_t frames)
audio_sample_batch_net	netplay.c	/^size_t audio_sample_batch_net(const int16_t *data, size_t frames)$/;"	f	signature:(const int16_t *data, size_t frames)
audio_sample_batch_net	netplay.h	/^size_t audio_sample_batch_net(const int16_t *data, size_t frames);$/;"	p	signature:(const int16_t *data, size_t frames)
audio_sample_batch_rewind	retroarch.c	/^size_t audio_sample_batch_rewind(const int16_t *data, size_t frames)$/;"	f	signature:(const int16_t *data, size_t frames)
audio_sample_net	netplay.c	/^void audio_sample_net(int16_t left, int16_t right)$/;"	f	signature:(int16_t left, int16_t right)
audio_sample_net	netplay.h	/^void audio_sample_net(int16_t left, int16_t right);$/;"	p	signature:(int16_t left, int16_t right)
audio_sample_rewind	retroarch.c	/^static void audio_sample_rewind(int16_t left, int16_t right)$/;"	f	file:	signature:(int16_t left, int16_t right)
audio_sdl	audio/sdl_audio.c	/^const audio_driver_t audio_sdl = {$/;"	v
audio_set_nonblock_state_func	driver_funcs.h	31;"	d
audio_start_func	driver_funcs.h	30;"	d
audio_stop_func	driver_funcs.h	29;"	d
audio_sync	config.def.h	/^static const bool audio_sync = true;$/;"	v
audio_thread	audio/thread_wrapper.c	/^static const audio_driver_t audio_thread = {$/;"	v	file:
audio_thread	audio/thread_wrapper.c	/^typedef struct audio_thread$/;"	s	file:
audio_thread::alive	audio/thread_wrapper.c	/^   bool alive;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::cond	audio/thread_wrapper.c	/^   scond_t *cond;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::driver	audio/thread_wrapper.c	/^   const audio_driver_t *driver;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::driver_data	audio/thread_wrapper.c	/^   void *driver_data;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::lock	audio/thread_wrapper.c	/^   slock_t *lock;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::stopped	audio/thread_wrapper.c	/^   bool stopped;$/;"	m	struct:audio_thread	file:	access:public
audio_thread::thread	audio/thread_wrapper.c	/^   sthread_t *thread;$/;"	m	struct:audio_thread	file:	access:public
audio_thread_block	audio/thread_wrapper.c	/^static void audio_thread_block(audio_thread_t *thr)$/;"	f	file:	signature:(audio_thread_t *thr)
audio_thread_free	audio/thread_wrapper.c	/^static void audio_thread_free(void *data)$/;"	f	file:	signature:(void *data)
audio_thread_loop	audio/thread_wrapper.c	/^static void audio_thread_loop(void *data)$/;"	f	file:	signature:(void *data)
audio_thread_set_nonblock_state	audio/thread_wrapper.c	/^static void audio_thread_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
audio_thread_start	audio/thread_wrapper.c	/^static bool audio_thread_start(void *data)$/;"	f	file:	signature:(void *data)
audio_thread_stop	audio/thread_wrapper.c	/^static bool audio_thread_stop(void *data)$/;"	f	file:	signature:(void *data)
audio_thread_t	audio/thread_wrapper.c	/^} audio_thread_t;$/;"	t	typeref:struct:audio_thread	file:
audio_thread_unblock	audio/thread_wrapper.c	/^static void audio_thread_unblock(audio_thread_t *thr)$/;"	f	file:	signature:(audio_thread_t *thr)
audio_thread_use_float	audio/thread_wrapper.c	/^static bool audio_thread_use_float(void *data)$/;"	f	file:	signature:(void *data)
audio_thread_write	audio/thread_wrapper.c	/^static ssize_t audio_thread_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
audio_use_float_func	driver_funcs.h	33;"	d
audio_volume	config.def.h	/^static const float audio_volume = 0.0;$/;"	v
audio_write_avail_func	driver_funcs.h	34;"	d
audio_write_cb	audio/coreaudio.c	/^static OSStatus audio_write_cb(void *userdata, AudioUnitRenderActionFlags *action_flags,$/;"	f	file:	signature:(void *userdata, AudioUnitRenderActionFlags *action_flags, const AudioTimeStamp *time_stamp, UInt32 bus_number, UInt32 number_frames, AudioBufferList *io_data)
audio_write_func	driver_funcs.h	28;"	d
audio_xa	audio/xaudio.c	/^const audio_driver_t audio_xa = {$/;"	v
audio_xenon360	xenon/xenon360_audio.c	/^const audio_driver_t audio_xenon360 = {$/;"	v
authors	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> authors;$/;"	f	class:ModuleWrapper	file:	access:private
authors	core_info.h	/^   char *authors;$/;"	m	struct:__anon252	access:public
authors_list	core_info.h	/^   struct string_list *authors_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
autoconf_binds	general.h	/^      struct retro_keybind autoconf_binds[MAX_PLAYERS][RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
autoconfig_dir	general.h	/^      char autoconfig_dir[PATH_MAX];$/;"	m	struct:settings::__anon232	access:public
autoconfigured	general.h	/^      bool autoconfigured[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
autodetect_enable	general.h	/^      bool autodetect_enable;$/;"	m	struct:settings::__anon232	access:public
autosave	autosave.c	/^struct autosave$/;"	s	file:
autosave	general.h	/^   autosave_t *autosave[2];$/;"	m	struct:global	access:public
autosave::buffer	autosave.c	/^   void *buffer;$/;"	m	struct:autosave	file:	access:public
autosave::bufsize	autosave.c	/^   size_t bufsize;$/;"	m	struct:autosave	file:	access:public
autosave::cond	autosave.c	/^   scond_t *cond;$/;"	m	struct:autosave	file:	access:public
autosave::cond_lock	autosave.c	/^   slock_t *cond_lock;$/;"	m	struct:autosave	file:	access:public
autosave::interval	autosave.c	/^   unsigned interval;$/;"	m	struct:autosave	file:	access:public
autosave::lock	autosave.c	/^   slock_t *lock;$/;"	m	struct:autosave	file:	access:public
autosave::path	autosave.c	/^   const char *path;$/;"	m	struct:autosave	file:	access:public
autosave::quit	autosave.c	/^   volatile bool quit;$/;"	m	struct:autosave	file:	access:public
autosave::retro_buffer	autosave.c	/^   const void *retro_buffer;$/;"	m	struct:autosave	file:	access:public
autosave::thread	autosave.c	/^   sthread_t *thread;$/;"	m	struct:autosave	file:	access:public
autosave_free	autosave.c	/^void autosave_free(autosave_t *handle)$/;"	f	signature:(autosave_t *handle)
autosave_free	autosave.h	/^void autosave_free(autosave_t *handle);$/;"	p	signature:(autosave_t *handle)
autosave_interval	config.def.h	/^static const unsigned autosave_interval = 0;$/;"	v
autosave_interval	general.h	/^   unsigned autosave_interval;$/;"	m	struct:settings	access:public
autosave_lock	autosave.c	/^void autosave_lock(autosave_t *handle)$/;"	f	signature:(autosave_t *handle)
autosave_lock	autosave.h	/^void autosave_lock(autosave_t *handle);$/;"	p	signature:(autosave_t *handle)
autosave_new	autosave.c	/^autosave_t *autosave_new(const char *path, const void *data, size_t size, unsigned interval)$/;"	f	signature:(const char *path, const void *data, size_t size, unsigned interval)
autosave_new	autosave.h	/^autosave_t *autosave_new(const char *path, const void *data, size_t size, unsigned interval);$/;"	p	signature:(const char *path, const void *data, size_t size, unsigned interval)
autosave_t	autosave.h	/^typedef struct autosave autosave_t;$/;"	t	typeref:struct:autosave
autosave_thread	autosave.c	/^static void autosave_thread(void *data)$/;"	f	file:	signature:(void *data)
autosave_unlock	autosave.c	/^void autosave_unlock(autosave_t *handle)$/;"	f	signature:(autosave_t *handle)
autosave_unlock	autosave.h	/^void autosave_unlock(autosave_t *handle);$/;"	p	signature:(autosave_t *handle)
aux_output_height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 aux_output_height;$/;"	m	struct:__anon201	access:public
aux_output_width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 aux_output_width;$/;"	m	struct:__anon201	access:public
av_info	general.h	/^      struct retro_system_av_info av_info;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_system_av_info	access:public
avail_in	deps/miniz/zlib.h	/^  unsigned int avail_in;            \/\/ number of bytes available at next_in$/;"	m	struct:mz_stream_s	access:public
avail_out	deps/miniz/zlib.h	/^  unsigned int avail_out;           \/\/ number of bytes that can be written to next_out$/;"	m	struct:mz_stream_s	access:public
axes	frontend/menu/menu_common.h	/^   int16_t axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_state_port	access:public
axes	input/linuxraw_joypad.c	/^   int16_t axes[NUM_AXES];$/;"	m	struct:linuxraw_joypad	file:	access:public
axes	input/udev_joypad.c	/^   int16_t axes[NUM_AXES];$/;"	m	struct:udev_joypad	file:	access:public
axes	tools/retroarch-joyconfig.c	/^   int16_t axes[MAX_AXES];$/;"	m	struct:poll_data	file:	access:public
axes_bind	input/udev_joypad.c	/^   uint8_t axes_bind[ABS_MAX];$/;"	m	struct:udev_joypad	file:	access:public
axis	input/input_common.h	/^   int16_t (*axis)(unsigned, uint32_t);$/;"	m	struct:rarch_joypad_driver	access:public
axis_state	frontend/menu/menu_common.h	/^   struct rgui_bind_axis_state axis_state[MAX_PLAYERS];$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::rgui_bind_axis_state	access:public
axis_threshold	config.def.h	/^static const float axis_threshold = 0.5;$/;"	v
axis_threshold	general.h	/^      float axis_threshold;$/;"	m	struct:settings::__anon232	access:public
b	file_path.h	/^   bool  b;$/;"	m	union:string_list_elem_attr	access:public
b	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
b	gfx/thread_wrapper.c	/^      bool b;$/;"	m	union:thread_video::__anon215	file:	access:public
b	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
bInserted	xdk/xdk_xinput_input.c	/^   bool bInserted[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
bIsVertexProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^static bool bIsVertexProgram = true;$/;"	v	file:
bLeftTrigger	input/winxinput_joypad.c	/^   uint8_t  bLeftTrigger;$/;"	m	struct:__anon86	file:	access:public
bRemoved	xdk/xdk_xinput_input.c	/^   bool bRemoved[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
bRightTrigger	input/winxinput_joypad.c	/^   uint8_t  bRightTrigger;$/;"	m	struct:__anon86	file:	access:public
b_from_screen	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_from_screen;$/;"	m	struct:__anon187	access:public
b_init	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_init;$/;"	m	struct:__anon203	access:public
b_trd_out	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_trd_out; \/* if output 3d mode, used for scaler mode layer *\/$/;"	m	struct:__anon187	access:public
b_trd_src	gfx/context/sunxi_disp_ioctl.h	/^	__bool b_trd_src; \/* if 3d source, used for scaler mode layer *\/$/;"	m	struct:__anon186	access:public
backStack	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected ArrayList<BackStackItem> backStack;$/;"	f	class:DirectoryFragment	access:protected
back_behavior	general.h	/^      unsigned back_behavior;$/;"	m	struct:settings::__anon232	access:public
back_button_enums	input/input_common.h	/^enum back_button_enums$/;"	g
backend_info	audio/rsound.h	/^      } backend_info;$/;"	m	struct:rsound	typeref:struct:rsound::__anon105	access:public
backingListView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private ListView backingListView = null;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
bank	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint bank;$/;"	m	struct:__anon28	file:	access:public
banned_ext	gfx/glsym/glgen.py	/^banned_ext = [ 'AMD', 'APPLE', 'EXT', 'NV', 'NVX', 'ATI', '3DLABS', 'SUN', 'SGI', 'SGIX', 'SGIS', 'INTEL', '3DFX', 'IBM', 'MESA', 'GREMEDY', 'OML', 'PGI', 'I3D', 'INGL', 'MTX', 'QCOM', 'IMG', 'ANGLE', 'SUNX', 'INGR' ]$/;"	v
bar	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private SeekBar bar;$/;"	f	class:SeekbarPreference	file:	access:private
base	input/input_common.h	/^   const char *base;$/;"	m	struct:input_bind_map	access:public
base	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBaseBlock        base;	\/\/ inheritence$/;"	m	struct:GmmTileBlock	access:public
base	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBaseBlock    base;	\/\/ inheritence$/;"	m	struct:GmmBlock	access:public
baseDepth	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseDepth;$/;"	m	struct:__anon52	access:public
baseHeight	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseHeight;$/;"	m	struct:__anon52	access:public
baseWidth	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		baseWidth;$/;"	m	struct:__anon52	access:public
base_ccmu	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_ccmu;$/;"	m	struct:__anon197	access:public
base_height	libretro.h	/^   unsigned base_height;   \/\/ Nominal video height of game.$/;"	m	struct:retro_game_geometry	access:public
base_lcdc0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_lcdc0;$/;"	m	struct:__anon197	access:public
base_lcdc1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_lcdc1;$/;"	m	struct:__anon197	access:public
base_path	frontend/menu/menu_common.h	/^   char base_path[PATH_MAX];$/;"	m	struct:__anon25	access:public
base_pioc	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_pioc;$/;"	m	struct:__anon197	access:public
base_pwm	gfx/context/sunxi_disp_ioctl.h	/^	__u32 base_pwm;$/;"	m	struct:__anon197	access:public
base_size	gfx/gl_common.h	/^   unsigned base_size; \/\/ 2 or 4$/;"	m	struct:gl	access:public
base_size	xdk/xdk_d3d.h	/^   unsigned base_size;$/;"	m	struct:xdk_d3d_video	access:public
base_width	libretro.h	/^   unsigned base_width;    \/\/ Nominal video width of game.$/;"	m	struct:retro_game_geometry	access:public
basename	general.h	/^   char basename[PATH_MAX];$/;"	m	struct:global	access:public
basic_event_t	apple/common/apple_export.h	/^enum basic_event_t {$/;"	g
batch_mode	tools/cg2glsl.py	/^batch_mode = False$/;"	v
battery_level	apple/common/hidpad/wiimote.h	/^		float battery_level;				\/**< battery level							*\/$/;"	m	struct:wiimote_t	access:public
bb	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^namespace bb$/;"	n
bb::cascades	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    namespace cascades$/;"	n	namespace:bb
bd_addr	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t bd_addr;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
bd_addr	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t bd_addr;$/;"	m	struct:btpad_queue_command::__anon142::__anon147	file:	access:public
bd_addr_t	apple/iOS/bluetooth/btstack/utils.h	/^typedef uint8_t bd_addr_t[BD_ADDR_LEN];$/;"	t
bd_addr_to_str	apple/iOS/bluetooth/btstack/utils.h	/^char * bd_addr_to_str(bd_addr_t addr);$/;"	p	signature:(bd_addr_t addr)
bd_addr_to_str_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT char* (*bd_addr_to_str_ptr)(bd_addr_t addr);$/;"	v
begin	frontend/menu/menu_common.h	/^   unsigned begin;$/;"	m	struct:rgui_bind_state	access:public
besseli0	audio/sinc.c	/^static inline double besseli0(double x)$/;"	f	file:	signature:(double x)
bias	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint  bias;$/;"	m	struct:rglGcmTextureFilter	access:public
bin_io	ps3/rgl/src/cg/cgbio.hpp	/^            bin_io( const bin_io& );$/;"	p	class:cgc::bio::bin_io	access:private	signature:( const bin_io& )
bin_io	ps3/rgl/src/cg/cgbio.hpp	/^            bin_io();$/;"	p	class:cgc::bio::bin_io	access:private	signature:()
bin_io	ps3/rgl/src/cg/cgbio.hpp	/^      class bin_io$/;"	c	namespace:cgc::bio
bin_io	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io::bin_io( const bin_io& )$/;"	f	class:cgc::bio::bin_io	signature:( const bin_io& )
bin_io	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io::bin_io()$/;"	f	class:cgc::bio::bin_io	signature:()
binaryFormatRevision	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int binaryFormatRevision;$/;"	m	struct:CgBinaryProgram	access:public
bind	input/overlay.c	/^   unsigned bind;$/;"	m	struct:str_to_bind_map	file:	access:public
bindPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void bindPreferences()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
bind_api	gfx/gfx_context.h	/^   bool (*bind_api)(enum gfx_ctx_api, unsigned major, unsigned minor); \/\/ Which API to bind to.$/;"	m	struct:gfx_ctx_driver	access:public
bind_luts	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_luts(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
bind_luts	gfx/d3d9/render_chain.hpp	/^      void bind_luts(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
bind_orig	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_orig(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
bind_orig	gfx/d3d9/render_chain.hpp	/^      void bind_orig(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
bind_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_pass(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
bind_pass	gfx/d3d9/render_chain.hpp	/^      void bind_pass(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
bind_player_prefix	input/input_common.c	/^static const char *bind_player_prefix[MAX_PLAYERS] = {$/;"	v	file:
bind_prev	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_prev(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
bind_prev	gfx/d3d9/render_chain.hpp	/^      void bind_prev(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
bind_tracker	gfx/d3d9/render_chain.cpp	/^void RenderChain::bind_tracker(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
bind_tracker	gfx/d3d9/render_chain.hpp	/^      void bind_tracker(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
binds	frontend/menu/menu_common.h	/^   struct rgui_bind_state binds;$/;"	m	struct:__anon25	typeref:struct:__anon25::rgui_bind_state	access:public
binds	general.h	/^      struct retro_keybind binds[MAX_PLAYERS][RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
bio	ps3/rgl/src/cg/cgbio.hpp	/^   namespace bio$/;"	n	namespace:cgc
bio	ps3/rgl/src/cg/cgbutils.hpp	/^   namespace bio$/;"	n	namespace:cgc
bio	ps3/rgl/src/cg/nvbi.hpp	/^   namespace bio$/;"	n	namespace:cgc
bio	ps3/rgl/src/cg/nvbiimpl.hpp	/^   namespace bio$/;"	n	namespace:cgc
bio	ps3/rgl/src/rgl_ps3_cg.cpp	/^   namespace bio {$/;"	n	namespace:cgc	file:
bit	emscripten/library_rwebinput.js	/^               var bit = 1 << (key & 7);$/;"	v
bit	input/udev_input.c	/^      uint16_t bit;$/;"	m	struct:udev_input::__anon92	file:	access:public
bit_depth	ps3/sdk_defines.h	311;"	d
bitmap_alloc	gfx/fonts/bitmapfont.c	/^   uint8_t *bitmap_alloc;$/;"	m	struct:font_renderer	file:	access:public
bitmap_bin	gfx/fonts/bitmap.h	/^static const unsigned char bitmap_bin[1792] = {$/;"	v
bitmap_chars	gfx/fonts/bitmapfont.c	/^   uint8_t *bitmap_chars[256];$/;"	m	struct:font_renderer	file:	access:public
bitmap_font_renderer	gfx/fonts/bitmapfont.c	/^const font_renderer_driver_t bitmap_font_renderer = {$/;"	v
bitrange	audio/test/snr.c	/^static unsigned bitrange(unsigned len)$/;"	f	file:	signature:(unsigned len)
bitswap	audio/test/snr.c	/^static unsigned bitswap(unsigned i, unsigned range)$/;"	f	file:	signature:(unsigned i, unsigned range)
black_frame_insertion	config.def.h	/^static bool black_frame_insertion = false;$/;"	v
black_frame_insertion	general.h	/^      bool black_frame_insertion;$/;"	m	struct:settings::__anon227	access:public
blend	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmBlendState blend;$/;"	m	struct:rglGcmCachedState	access:public
blit_fonts	gfx/fonts/gl_raster_font.c	/^static void blit_fonts(gl_t *gl, const struct font_output *head, const struct font_rect *geom)$/;"	f	file:	signature:(gl_t *gl, const struct font_output *head, const struct font_rect *geom)
blit_line	frontend/menu/disp/rgui.c	/^static void blit_line(rgui_handle_t *rgui,$/;"	f	file:	signature:(rgui_handle_t *rgui, int x, int y, const char *message, bool green)
blit_to_texture	gfx/d3d9/render_chain.cpp	/^void RenderChain::blit_to_texture(const void *frame,$/;"	f	class:RenderChain	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch)
blit_to_texture	gfx/d3d9/render_chain.hpp	/^      void blit_to_texture(const void *data,$/;"	p	class:RenderChain	access:private	signature:(const void *data, unsigned width, unsigned height, unsigned pitch)
block_chunk_size	general.h	/^      size_t block_chunk_size;$/;"	m	struct:global::__anon235	access:public
block_config_read	general.h	/^   bool block_config_read;$/;"	m	struct:global	access:public
block_extract	general.h	/^      bool block_extract;$/;"	m	struct:global::__anon234	access:public
block_extract	libretro.h	/^   bool        block_extract;     \/\/ If true, the frontend is not allowed to extract any archives before loading the real ROM.$/;"	m	struct:retro_system_info	access:public
block_frames	general.h	/^      unsigned block_frames;$/;"	m	struct:settings::__anon231	access:public
block_hotkey	driver.h	/^   bool block_hotkey;$/;"	m	struct:driver	access:public
block_input	driver.h	/^   bool block_input;$/;"	m	struct:driver	access:public
block_patch	general.h	/^   bool block_patch;$/;"	m	struct:global	access:public
block_scale	input/overlay.c	/^   bool block_scale;$/;"	m	struct:overlay	file:	access:public
block_sram_overwrite	config.def.h	/^static const bool block_sram_overwrite = false;$/;"	v
block_sram_overwrite	general.h	/^   bool block_sram_overwrite;$/;"	m	struct:settings	access:public
blocked	input/overlay.c	/^   bool blocked;$/;"	m	struct:input_overlay	file:	access:public
blue	gfx/context/sunxi_disp_ioctl.h	/^	__u8 blue;$/;"	m	struct:__anon164	access:public
blue_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 blue_match_rule;$/;"	m	struct:__anon188	access:public
bluetooth_mode	apple/iOS/platform.h	/^   char bluetooth_mode[64];$/;"	m	struct:__anon154	access:public
bo	gfx/context/drm_egl_ctx.c	/^   struct gbm_bo *bo;$/;"	m	struct:drm_fb	typeref:struct:drm_fb::gbm_bo	file:	access:public
bool	libretro.h	35;"	d
boolean	apple/common/setting_data.h	/^      bool boolean;$/;"	m	union:__anon161::__anon162	access:public
boolean	apple/common/setting_data.h	/^      bool* boolean;$/;"	m	union:__anon161::__anon163	access:public
booter_end	frontend/platform/platform_wii.c	19;"	d	file:
booter_start	frontend/platform/platform_wii.c	18;"	d	file:
borderColor	ps3/rgl/include/RGL/Types.h	/^      rglColorRGBAf borderColor;$/;"	m	struct:__anon63	access:public
borderColor	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint borderColor; \/\/ texture border color$/;"	m	struct:rglGcmTextureMethodParams	access:public
bottom	gfx/gl_common.h	/^   GLfloat bottom;$/;"	m	struct:gl_ortho	access:public
bottom_left_origin	libretro.h	/^   bool bottom_left_origin; \/\/ Use conventional bottom-left origin convention. Is false, standard libretro top-left origin semantics are used.$/;"	m	struct:retro_hw_render_callback	access:public
bottom_ptr	rewind.c	/^   size_t bottom_ptr;$/;"	m	struct:state_manager	file:	access:public
bound2D	ps3/rgl/include/RGL/Types.h	/^      GLuint		bound2D;$/;"	m	struct:__anon65	access:public
bound_tex	gfx/d3d9/render_chain.hpp	/^      std::vector<unsigned> bound_tex;$/;"	m	class:RenderChain	access:private
bound_vert	gfx/d3d9/render_chain.hpp	/^      std::vector<unsigned> bound_vert;$/;"	m	class:RenderChain	access:private
bpp	gfx/omap_gfx.c	/^  unsigned bpp;$/;"	m	struct:omapfb_data	file:	access:public
bpp	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint bpp;		\/\/ bytes per pixel, derived from format$/;"	m	struct:__anon49	access:public
bps_apply_patch	patch.c	/^patch_error_t bps_apply_patch($/;"	f	signature:( const uint8_t *modify_data, size_t modify_length, const uint8_t *source_data, size_t source_length, uint8_t *target_data, size_t *target_length)
bps_apply_patch	patch.h	/^patch_error_t bps_apply_patch($/;"	p	signature:( const uint8_t *patch_data, size_t patch_length, const uint8_t *source_data, size_t source_length, uint8_t *target_data, size_t *target_length)
bps_data	patch.c	/^struct bps_data$/;"	s	file:
bps_data::modify_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
bps_data::modify_data	patch.c	/^   const uint8_t *modify_data, *source_data; $/;"	m	struct:bps_data	file:	access:public
bps_data::modify_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
bps_data::modify_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
bps_data::output_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
bps_data::source_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
bps_data::source_data	patch.c	/^   const uint8_t *modify_data, *source_data; $/;"	m	struct:bps_data	file:	access:public
bps_data::source_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
bps_data::source_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
bps_data::source_relative_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
bps_data::target_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
bps_data::target_data	patch.c	/^   uint8_t *target_data;$/;"	m	struct:bps_data	file:	access:public
bps_data::target_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
bps_data::target_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
bps_data::target_relative_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
bps_decode	patch.c	/^static uint64_t bps_decode(struct bps_data *bps)$/;"	f	file:	signature:(struct bps_data *bps)
bps_mode	patch.c	/^enum bps_mode$/;"	g	file:
bps_name	general.h	/^   char bps_name[PATH_MAX];$/;"	m	struct:global	access:public
bps_pref	general.h	/^   bool bps_pref;$/;"	m	struct:global	access:public
bps_read	patch.c	/^static uint8_t bps_read(struct bps_data *bps)$/;"	f	file:	signature:(struct bps_data *bps)
bps_write	patch.c	/^static void bps_write(struct bps_data *bps, uint8_t data)$/;"	f	file:	signature:(struct bps_data *bps, uint8_t data)
br_swap	gfx/context/sunxi_disp_ioctl.h	/^	__bool br_swap;$/;"	m	struct:__anon186	access:public
br_swap	gfx/context/sunxi_disp_ioctl.h	/^	__bool br_swap[2];$/;"	m	struct:__anon203	access:public
break_loop	frontend/frontend.c	106;"	d	file:
break_loop	frontend/frontend.c	121;"	d	file:
break_loop	frontend/frontend.c	136;"	d	file:
break_loop	frontend/frontend.c	151;"	d	file:
broken_cores	tools/retrolaunch/main.c	/^	char broken_cores[PATH_MAX];$/;"	m	struct:RunInfo	file:	access:public
bss_size	wii/app_booter/dolloader.c	/^	u32 bss_size;$/;"	m	struct:_dolheader	file:	access:public
bss_start	wii/app_booter/dolloader.c	/^	u32 bss_start;$/;"	m	struct:_dolheader	file:	access:public
bsv	general.h	/^   } bsv;$/;"	m	struct:global	typeref:struct:global::__anon238	access:public
bsv_header_generate	netplay.c	/^static uint32_t *bsv_header_generate(size_t *size, uint32_t magic)$/;"	f	file:	signature:(size_t *size, uint32_t magic)
bsv_movie	movie.c	/^struct bsv_movie$/;"	s	file:
bsv_movie::did_rewind	movie.c	/^   bool did_rewind;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::file	movie.c	/^   FILE *file;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::first_rewind	movie.c	/^   bool first_rewind;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::frame_mask	movie.c	/^   size_t frame_mask;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::frame_pos	movie.c	/^   size_t *frame_pos; \/\/ A ring buffer keeping track of positions in the file for each frame.$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::frame_ptr	movie.c	/^   size_t frame_ptr;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::min_file_pos	movie.c	/^   size_t min_file_pos;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::playback	movie.c	/^   bool playback;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::state	movie.c	/^   uint8_t *state;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie::state_size	movie.c	/^   size_t state_size;$/;"	m	struct:bsv_movie	file:	access:public
bsv_movie_frame_rewind	movie.c	/^void bsv_movie_frame_rewind(bsv_movie_t *handle)$/;"	f	signature:(bsv_movie_t *handle)
bsv_movie_frame_rewind	movie.h	/^void bsv_movie_frame_rewind(bsv_movie_t *handle);$/;"	p	signature:(bsv_movie_t *handle)
bsv_movie_free	movie.c	/^void bsv_movie_free(bsv_movie_t *handle)$/;"	f	signature:(bsv_movie_t *handle)
bsv_movie_free	movie.h	/^void bsv_movie_free(bsv_movie_t *handle);$/;"	p	signature:(bsv_movie_t *handle)
bsv_movie_get_input	movie.c	/^bool bsv_movie_get_input(bsv_movie_t *handle, int16_t *input)$/;"	f	signature:(bsv_movie_t *handle, int16_t *input)
bsv_movie_get_input	movie.h	/^bool bsv_movie_get_input(bsv_movie_t *handle, int16_t *input);$/;"	p	signature:(bsv_movie_t *handle, int16_t *input)
bsv_movie_init	movie.c	/^bsv_movie_t *bsv_movie_init(const char *path, enum rarch_movie_type type)$/;"	f	signature:(const char *path, enum rarch_movie_type type)
bsv_movie_init	movie.h	/^bsv_movie_t *bsv_movie_init(const char *path, enum rarch_movie_type type);$/;"	p	signature:(const char *path, enum rarch_movie_type type)
bsv_movie_set_frame_end	movie.c	/^void bsv_movie_set_frame_end(bsv_movie_t *handle)$/;"	f	signature:(bsv_movie_t *handle)
bsv_movie_set_frame_end	movie.h	/^void bsv_movie_set_frame_end(bsv_movie_t *handle);$/;"	p	signature:(bsv_movie_t *handle)
bsv_movie_set_frame_start	movie.c	/^void bsv_movie_set_frame_start(bsv_movie_t *handle)$/;"	f	signature:(bsv_movie_t *handle)
bsv_movie_set_frame_start	movie.h	/^void bsv_movie_set_frame_start(bsv_movie_t *handle); \/\/ Debugging purposes.$/;"	p	signature:(bsv_movie_t *handle)
bsv_movie_set_input	movie.c	/^void bsv_movie_set_input(bsv_movie_t *handle, int16_t input)$/;"	f	signature:(bsv_movie_t *handle, int16_t input)
bsv_movie_set_input	movie.h	/^void bsv_movie_set_input(bsv_movie_t *handle, int16_t input);$/;"	p	signature:(bsv_movie_t *handle, int16_t input)
bsv_movie_t	movie.h	/^typedef struct bsv_movie bsv_movie_t;$/;"	t	typeref:struct:bsv_movie
bsv_parse_header	netplay.c	/^static bool bsv_parse_header(const uint32_t *header, uint32_t magic)$/;"	f	file:	signature:(const uint32_t *header, uint32_t magic)
bswap_32	xenon/xenon360_audio.c	/^static inline uint32_t bswap_32(uint32_t val)$/;"	f	file:	signature:(uint32_t val)
bsx_rom_path	general.h	/^   char bsx_rom_path[PATH_MAX];$/;"	m	struct:global	access:public
bt_close	apple/iOS/bluetooth/btstack/btstack.h	/^int bt_close(void);$/;"	p	signature:(void)
bt_flip_addr	apple/iOS/bluetooth/btstack/utils.h	/^void bt_flip_addr(bd_addr_t dest, bd_addr_t src);$/;"	p	signature:(bd_addr_t dest, bd_addr_t src)
bt_flip_addr_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT void (*bt_flip_addr_ptr)(bd_addr_t dest, bd_addr_t src);$/;"	v
bt_open	apple/iOS/bluetooth/btstack/btstack.h	/^int bt_open(void);$/;"	p	signature:(void)
bt_open_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT int (*bt_open_ptr)(void);$/;"	v
bt_register_packet_handler	apple/iOS/bluetooth/btstack/btstack.h	/^btstack_packet_handler_t bt_register_packet_handler(btstack_packet_handler_t handler);$/;"	p	signature:(btstack_packet_handler_t handler)
bt_register_packet_handler_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT btstack_packet_handler_t (*bt_register_packet_handler_ptr)(btstack_packet_handler_t handler);$/;"	v
bt_send_acl	apple/iOS/bluetooth/btstack/btstack.h	/^void bt_send_acl(uint8_t * data, uint16_t len);$/;"	p	signature:(uint8_t * data, uint16_t len)
bt_send_cmd	apple/iOS/bluetooth/btstack/btstack.h	/^int bt_send_cmd(const hci_cmd_t *cmd, ...);$/;"	p	signature:(const hci_cmd_t *cmd, ...)
bt_send_cmd_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT int (*bt_send_cmd_ptr)(const hci_cmd_t *cmd, ...);$/;"	v
bt_send_l2cap	apple/iOS/bluetooth/btstack/btstack.h	/^void bt_send_l2cap(uint16_t local_cid, uint8_t *data, uint16_t len);$/;"	p	signature:(uint16_t local_cid, uint8_t *data, uint16_t len)
bt_send_l2cap_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT void (*bt_send_l2cap_ptr)(uint16_t local_cid, uint8_t *data, uint16_t len);$/;"	v
bt_send_rfcomm	apple/iOS/bluetooth/btstack/btstack.h	/^void bt_send_rfcomm(uint16_t rfcom_cid, uint8_t *data, uint16_t len);$/;"	p	signature:(uint16_t rfcom_cid, uint8_t *data, uint16_t len)
bt_store_16	apple/iOS/bluetooth/btstack/utils.h	/^void bt_store_16(uint8_t *buffer, uint16_t pos, uint16_t value);$/;"	p	signature:(uint8_t *buffer, uint16_t pos, uint16_t value)
bt_store_32	apple/iOS/bluetooth/btstack/utils.h	/^void bt_store_32(uint8_t *buffer, uint16_t pos, uint32_t value);$/;"	p	signature:(uint8_t *buffer, uint16_t pos, uint32_t value)
bt_use_tcp	apple/iOS/bluetooth/btstack/btstack.h	/^void bt_use_tcp(const char * address, uint16_t port); $/;"	p	signature:(const char * address, uint16_t port)
btns	apple/common/hidpad/wiimote.h	/^		short btns;						\/**< what buttons have just been pressed	*\/$/;"	m	struct:classic_ctrl_t	access:public
btns	apple/common/hidpad/wiimote.h	/^		unsigned short btns;				\/**< what buttons have just been pressed	*\/$/;"	m	struct:wiimote_t	access:public
btpad_close_all_connections	apple/iOS/bluetooth/btpad.c	/^static void btpad_close_all_connections()$/;"	f	file:
btpad_close_connection	apple/iOS/bluetooth/btpad.c	/^static void btpad_close_connection(struct apple_pad_connection* connection)$/;"	f	file:	signature:(struct apple_pad_connection* connection)
btpad_find_connection_for	apple/iOS/bluetooth/btpad.c	/^static struct apple_pad_connection* btpad_find_connection_for(uint16_t handle, bd_addr_t address)$/;"	f	file:	signature:(uint16_t handle, bd_addr_t address)
btpad_find_empty_connection	apple/iOS/bluetooth/btpad.c	/^static struct apple_pad_connection* btpad_find_empty_connection()$/;"	f	file:
btpad_packet_handler	apple/iOS/bluetooth/btdynamic.c	/^extern void btpad_packet_handler(uint8_t packet_type, uint16_t channel, uint8_t *packet, uint16_t size);$/;"	p	file:	signature:(uint8_t packet_type, uint16_t channel, uint8_t *packet, uint16_t size)
btpad_packet_handler	apple/iOS/bluetooth/btpad.c	/^void btpad_packet_handler(uint8_t packet_type, uint16_t channel, uint8_t *packet, uint16_t size)$/;"	f	signature:(uint8_t packet_type, uint16_t channel, uint8_t *packet, uint16_t size)
btpad_queue_btstack_set_power_mode	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_btstack_set_power_mode(uint8_t on)$/;"	f	signature:(uint8_t on)
btpad_queue_btstack_set_power_mode	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_btstack_set_power_mode(uint8_t on);$/;"	p	signature:(uint8_t on)
btpad_queue_command	apple/iOS/bluetooth/btpad_queue.c	/^struct btpad_queue_command$/;"	s	file:
btpad_queue_command::__anon142::__anon143::on	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t on;$/;"	m	struct:btpad_queue_command::__anon142::__anon143	file:	access:public
btpad_queue_command::__anon142::__anon144::handle	apple/iOS/bluetooth/btpad_queue.c	/^         uint16_t handle;$/;"	m	struct:btpad_queue_command::__anon142::__anon144	file:	access:public
btpad_queue_command::__anon142::__anon144::reason	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t reason;$/;"	m	struct:btpad_queue_command::__anon142::__anon144	file:	access:public
btpad_queue_command::__anon142::__anon145::lap	apple/iOS/bluetooth/btpad_queue.c	/^         uint32_t lap;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
btpad_queue_command::__anon142::__anon145::length	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t length;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
btpad_queue_command::__anon142::__anon145::num_responses	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t num_responses;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
btpad_queue_command::__anon142::__anon146::bd_addr	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t bd_addr;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
btpad_queue_command::__anon142::__anon146::clock_offset	apple/iOS/bluetooth/btpad_queue.c	/^         uint16_t clock_offset;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
btpad_queue_command::__anon142::__anon146::page_scan_repetition_mode	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t page_scan_repetition_mode;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
btpad_queue_command::__anon142::__anon146::reserved	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t reserved;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
btpad_queue_command::__anon142::__anon147::bd_addr	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t bd_addr;$/;"	m	struct:btpad_queue_command::__anon142::__anon147	file:	access:public
btpad_queue_command::__anon142::__anon147::pin	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t pin;$/;"	m	struct:btpad_queue_command::__anon142::__anon147	file:	access:public
btpad_queue_command::__anon142::btstack_set_power_mode	apple/iOS/bluetooth/btpad_queue.c	/^      }  btstack_set_power_mode;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon143	file:	access:public
btpad_queue_command::__anon142::hci_disconnect	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_disconnect;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon144	file:	access:public
btpad_queue_command::__anon142::hci_inquiry	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_inquiry;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon145	file:	access:public
btpad_queue_command::__anon142::hci_pin_code_request_reply	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_pin_code_request_reply;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon147	file:	access:public
btpad_queue_command::__anon142::hci_remote_name_request	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_remote_name_request;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon146	file:	access:public
btpad_queue_command::command	apple/iOS/bluetooth/btpad_queue.c	/^   const hci_cmd_t* command;$/;"	m	struct:btpad_queue_command	file:	access:public
btpad_queue_hci_disconnect	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_hci_disconnect(uint16_t handle, uint8_t reason)$/;"	f	signature:(uint16_t handle, uint8_t reason)
btpad_queue_hci_disconnect	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_hci_disconnect(uint16_t handle, uint8_t reason);$/;"	p	signature:(uint16_t handle, uint8_t reason)
btpad_queue_hci_inquiry	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_hci_inquiry(uint32_t lap, uint8_t length, uint8_t num_responses)$/;"	f	signature:(uint32_t lap, uint8_t length, uint8_t num_responses)
btpad_queue_hci_inquiry	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_hci_inquiry(uint32_t lap, uint8_t length, uint8_t num_responses);$/;"	p	signature:(uint32_t lap, uint8_t length, uint8_t num_responses)
btpad_queue_hci_pin_code_request_reply	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_hci_pin_code_request_reply(bd_addr_t bd_addr, bd_addr_t pin)$/;"	f	signature:(bd_addr_t bd_addr, bd_addr_t pin)
btpad_queue_hci_pin_code_request_reply	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_hci_pin_code_request_reply(bd_addr_t bd_addr, bd_addr_t pin);$/;"	p	signature:(bd_addr_t bd_addr, bd_addr_t pin)
btpad_queue_hci_read_bd_addr	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_hci_read_bd_addr()$/;"	f
btpad_queue_hci_read_bd_addr	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_hci_read_bd_addr();$/;"	p	signature:()
btpad_queue_hci_remote_name_request	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_hci_remote_name_request(bd_addr_t bd_addr, uint8_t page_scan_repetition_mode, uint8_t reserved, uint16_t clock_offset)$/;"	f	signature:(bd_addr_t bd_addr, uint8_t page_scan_repetition_mode, uint8_t reserved, uint16_t clock_offset)
btpad_queue_hci_remote_name_request	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_hci_remote_name_request(bd_addr_t bd_addr, uint8_t page_scan_repetition_mode, uint8_t reserved, uint16_t clock_offset);$/;"	p	signature:(bd_addr_t bd_addr, uint8_t page_scan_repetition_mode, uint8_t reserved, uint16_t clock_offset)
btpad_queue_process	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_process()$/;"	f
btpad_queue_process	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_process();$/;"	p	signature:()
btpad_queue_reset	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_reset()$/;"	f
btpad_queue_reset	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_reset();$/;"	p	signature:()
btpad_queue_run	apple/iOS/bluetooth/btpad_queue.c	/^void btpad_queue_run(uint32_t count)$/;"	f	signature:(uint32_t count)
btpad_queue_run	apple/iOS/bluetooth/btpad_queue.h	/^void btpad_queue_run(uint32_t count);$/;"	p	signature:(uint32_t count)
btpad_set_inquiry_state	apple/iOS/bluetooth/btpad.c	/^void btpad_set_inquiry_state(bool on)$/;"	f	signature:(bool on)
btpad_set_inquiry_state	apple/iOS/bluetooth/btpad.h	/^void btpad_set_inquiry_state(bool on);$/;"	p	signature:(bool on)
btpad_state	apple/iOS/bluetooth/btpad.c	/^enum btpad_state { BTPAD_EMPTY, BTPAD_CONNECTING, BTPAD_CONNECTED };$/;"	g	file:
btstack_is_running	apple/iOS/bluetooth/btdynamic.c	/^bool btstack_is_running()$/;"	f
btstack_is_running	apple/iOS/bluetooth/btdynamic.h	/^bool btstack_is_running();$/;"	p	signature:()
btstack_loaded	apple/iOS/bluetooth/btdynamic.c	/^static bool btstack_loaded;$/;"	v	file:
btstack_open	apple/iOS/bluetooth/btdynamic.c	/^static bool btstack_open;$/;"	v	file:
btstack_packet_handler_t	apple/iOS/bluetooth/btstack/btstack.h	/^typedef void (*btstack_packet_handler_t) (uint8_t packet_type, uint16_t channel, uint8_t *packet, uint16_t size);$/;"	t
btstack_poweron	apple/iOS/bluetooth/btdynamic.c	/^static bool btstack_poweron;$/;"	v	file:
btstack_set_power_mode	apple/iOS/bluetooth/btpad_queue.c	/^      }  btstack_set_power_mode;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon143	file:	access:public
btstack_set_power_mode_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* btstack_set_power_mode_ptr;$/;"	v
btstack_set_poweron	apple/iOS/bluetooth/btdynamic.c	/^void btstack_set_poweron(bool on)$/;"	f	signature:(bool on)
btstack_set_poweron	apple/iOS/bluetooth/btdynamic.h	/^void btstack_set_poweron(bool on);$/;"	p	signature:(bool on)
btstack_tested	apple/iOS/bluetooth/btdynamic.c	/^static bool btstack_tested;$/;"	v	file:
btstack_try_load	apple/iOS/bluetooth/btdynamic.c	/^bool btstack_try_load()$/;"	f
btstack_try_load	apple/iOS/bluetooth/btdynamic.h	/^bool btstack_try_load();$/;"	p	signature:()
buf	audio/xaudio-c/xaudio-c.cpp	/^   uint8_t *buf;$/;"	m	struct:xaudio2	file:	access:public
buf	gfx/omap_gfx.c	/^  void *buf;$/;"	m	struct:omapfb_page	file:	access:public
buf_count	audio/opensl.c	/^   unsigned buf_count;$/;"	m	struct:sl	file:	access:public
buf_size	audio/opensl.c	/^   unsigned buf_size;$/;"	m	struct:sl	file:	access:public
buf_size	cheats.c	/^   unsigned buf_size;$/;"	m	struct:cheat_manager	file:	access:public
buf_size	rewind.c	/^   size_t buf_size;$/;"	m	struct:state_manager	file:	access:public
buf_size_mask	rewind.c	/^   size_t buf_size_mask;$/;"	m	struct:state_manager	file:	access:public
buffer	audio/alsathread.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:alsa_thread	file:	access:public
buffer	audio/coreaudio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:coreaudio	file:	access:public
buffer	audio/dsound.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:dsound	file:	access:public
buffer	audio/jack.c	/^   jack_ringbuffer_t *buffer[2];$/;"	m	struct:jack	file:	access:public
buffer	audio/opensl.c	/^   uint8_t **buffer;$/;"	m	struct:sl	file:	access:public
buffer	audio/rsound.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:rsd	file:	access:public
buffer	audio/rsound.h	/^      char *buffer; \/* Obsolete, but kept for backwards header compatibility. *\/$/;"	m	struct:rsound	access:public
buffer	audio/sdl_audio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:sdl_audio	file:	access:public
buffer	autosave.c	/^   void *buffer;$/;"	m	struct:autosave	file:	access:public
buffer	camera/video4linux2.c	/^struct buffer$/;"	s	file:
buffer	fifo_buffer.c	/^   uint8_t *buffer;$/;"	m	struct:fifo_buffer	file:	access:public
buffer	frontend/menu/menu_common.h	/^      const char **buffer;$/;"	m	struct:__anon25::__anon26	access:public
buffer	general.h	/^      uint32_t *buffer;$/;"	m	struct:global::__anon237	access:public
buffer	gfx/thread_wrapper.c	/^      uint8_t *buffer;$/;"	m	struct:thread_video::__anon221	file:	access:public
buffer	input/keyboard_line.c	/^   char *buffer;$/;"	m	struct:input_keyboard_line	file:	access:public
buffer	netplay.c	/^   struct delta_frame *buffer;$/;"	m	struct:netplay	typeref:struct:netplay::delta_frame	file:	access:public
buffer	ps3/ps3_audio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:__anon78	file:	access:public
buffer	record/ffemu.c	/^   uint8_t *buffer;$/;"	m	struct:ff_audio_info	file:	access:public
buffer	rewind.c	/^   uint64_t *buffer;$/;"	m	struct:state_manager	file:	access:public
buffer	xenon/xenon360_audio.c	/^   uint32_t buffer[2048];$/;"	m	struct:__anon2	file:	access:public
buffer::length	camera/video4linux2.c	/^   size_t length;$/;"	m	struct:buffer	file:	access:public
buffer::start	camera/video4linux2.c	/^   void *start;$/;"	m	struct:buffer	file:	access:public
bufferId	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int bufferId;		\/\/ allocated Id$/;"	m	struct:__anon55	access:public
bufferObjectNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace	bufferObjectNameSpace;$/;"	m	struct:RGLcontext	access:public
bufferSize	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int bufferSize;$/;"	m	struct:__anon55	access:public
bufferSource	emscripten/library_rwebaudio.js	/^         var bufferSource = RA.context.createBufferSource();$/;"	v
buffer_attr_cb	audio/pulse.c	/^static void buffer_attr_cb(pa_stream *s, void *data)$/;"	f	file:	signature:(pa_stream *s, void *data)
buffer_chunk	audio/opensl.c	/^   uint8_t *buffer_chunk;$/;"	m	struct:sl	file:	access:public
buffer_free_samples	general.h	/^      unsigned buffer_free_samples[AUDIO_BUFFER_FREE_SAMPLES_COUNT];$/;"	m	struct:global::__anon236	access:public
buffer_free_samples_count	general.h	/^      uint64_t buffer_free_samples_count;$/;"	m	struct:global::__anon236	access:public
buffer_index	audio/opensl.c	/^   unsigned buffer_index;$/;"	m	struct:sl	file:	access:public
buffer_l	audio/sinc.c	/^   float *buffer_l;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
buffer_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 buffer_num;$/;"	m	struct:__anon201	access:public
buffer_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 buffer_num[2];$/;"	m	struct:__anon203	access:public
buffer_output	camera/video4linux2.c	/^   uint32_t *buffer_output;$/;"	m	struct:video4linux	file:	access:public
buffer_pointer	audio/rsound.h	/^      volatile int buffer_pointer; \/* Obsolete, but kept for backwards header compatibility. *\/$/;"	m	struct:rsound	access:public
buffer_primary	gfx/shader_glsl.c	/^   GLfloat buffer_primary[128];$/;"	m	struct:cache_vbo	file:	access:public
buffer_ptr	audio/opensl.c	/^   unsigned buffer_ptr;$/;"	m	struct:sl	file:	access:public
buffer_queue	audio/opensl.c	/^   SLAndroidSimpleBufferQueueItf buffer_queue;$/;"	m	struct:sl	file:	access:public
buffer_queue_object	audio/opensl.c	/^   SLObjectItf buffer_queue_object;$/;"	m	struct:sl	file:	access:public
buffer_r	audio/sinc.c	/^   float *buffer_r;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
buffer_secondary	gfx/shader_glsl.c	/^   GLfloat buffer_secondary[128];$/;"	m	struct:cache_vbo	file:	access:public
buffer_size	audio/alsa.c	/^   size_t buffer_size;$/;"	m	struct:alsa	file:	access:public
buffer_size	audio/alsathread.c	/^   size_t buffer_size;$/;"	m	struct:alsa_thread	file:	access:public
buffer_size	audio/coreaudio.c	/^   size_t buffer_size;$/;"	m	struct:coreaudio	file:	access:public
buffer_size	audio/dsound.c	/^   unsigned buffer_size;$/;"	m	struct:dsound	file:	access:public
buffer_size	audio/jack.c	/^   size_t buffer_size;$/;"	m	struct:jack	file:	access:public
buffer_size	audio/pulse.c	/^   size_t buffer_size;$/;"	m	struct:__anon102	file:	access:public
buffer_size	audio/rsound.h	/^      size_t buffer_size; $/;"	m	struct:rsound	access:public
buffer_size	blackberry-qnx/alsa_qsa.c	/^   size_t buffer_size;$/;"	m	struct:alsa	file:	access:public
buffer_size	driver.h	/^   size_t (*buffer_size)(void *data); \/\/ Optional$/;"	m	struct:audio_driver	access:public
buffer_size	netplay.c	/^   size_t buffer_size;$/;"	m	struct:netplay	file:	access:public
buffered_blocks	audio/opensl.c	/^   volatile unsigned buffered_blocks;$/;"	m	struct:sl	file:	access:public
bufferingMode	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLbufferingMode bufferingMode;$/;"	m	struct:__anon72	access:public
buffers	audio/openal.c	/^   ALuint *buffers;$/;"	m	struct:al	file:	access:public
buffers	audio/xaudio-c/xaudio-c.cpp	/^   volatile long buffers;$/;"	m	struct:xaudio2	file:	access:public
buffers	camera/video4linux2.c	/^   struct buffer *buffers;$/;"	m	struct:video4linux	typeref:struct:video4linux::buffer	file:	access:public
bufptr	audio/xaudio-c/xaudio-c.cpp	/^   unsigned bufptr;$/;"	m	struct:xaudio2	file:	access:public
bufsize	audio/xaudio-c/xaudio-c.cpp	/^   unsigned bufsize;$/;"	m	struct:xaudio2	file:	access:public
bufsize	audio/xaudio.c	/^   size_t bufsize;$/;"	m	struct:__anon101	file:	access:public
bufsize	autosave.c	/^   size_t bufsize;$/;"	m	struct:autosave	file:	access:public
bufsize	fifo_buffer.c	/^   size_t bufsize;$/;"	m	struct:fifo_buffer	file:	access:public
build_argb64	gfx/scaler/scaler_int.c	/^static inline uint64_t build_argb64(uint16_t a, uint16_t r, uint16_t g, uint16_t b)$/;"	f	file:	signature:(uint16_t a, uint16_t r, uint16_t g, uint16_t b)
build_disp_list	gx/gx_video.c	/^static void build_disp_list(void)$/;"	f	file:	signature:(void)
butterflies	audio/test/snr.c	/^static void butterflies(complex double *butterfly_buf, double phase_dir, size_t step_size, size_t samples)$/;"	f	file:	signature:(complex double *butterfly_buf, double phase_dir, size_t step_size, size_t samples)
butterfly	audio/test/snr.c	/^static void butterfly(complex double *a, complex double *b, complex double mod)$/;"	f	file:	signature:(complex double *a, complex double *b, complex double mod)
button	blackberry-qnx/bb10/src/ButtonMap.h	/^    int button;$/;"	m	class:ButtonMap	access:private
button	input/input_common.h	/^   bool (*button)(unsigned, uint16_t);$/;"	m	struct:rarch_joypad_driver	access:public
buttonCount	blackberry-qnx/frontend_qnx.h	/^    int buttonCount;$/;"	m	struct:__anon94	access:public
buttonDataModel	blackberry-qnx/bb10/src/ButtonMap.h	/^    ArrayDataModel *buttonDataModel;$/;"	m	class:ButtonMap	access:public
buttonMap	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	ButtonMap *buttonMap;$/;"	m	class:RetroArch	access:private
buttonToString	blackberry-qnx/bb10/src/ButtonMap.cpp	/^QString ButtonMap::buttonToString(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
buttonToString	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE QString buttonToString(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
button_bind	input/udev_joypad.c	/^   uint8_t button_bind[KEY_MAX];$/;"	m	struct:udev_joypad	file:	access:public
button_index_to_bitmap_code	input/winxinput_joypad.c	/^static const uint16_t button_index_to_bitmap_code[] =  {$/;"	v	file:
buttons	blackberry-qnx/frontend_qnx.h	/^    int buttons;$/;"	m	struct:__anon94	access:public
buttons	frontend/menu/menu_common.h	/^   bool buttons[RGUI_MAX_BUTTONS];$/;"	m	struct:rgui_bind_state_port	access:public
buttons	input/linuxraw_joypad.c	/^   bool buttons[NUM_BUTTONS];$/;"	m	struct:linuxraw_joypad	file:	access:public
buttons	input/overlay.h	/^   uint64_t buttons;   \/\/ This is a bitmask of (1 << key_bind_id).$/;"	m	struct:input_overlay_state	access:public
buttons	input/udev_joypad.c	/^   bool buttons[NUM_BUTTONS];$/;"	m	struct:udev_joypad	file:	access:public
buttons	tools/retroarch-joyconfig.c	/^   bool buttons[MAX_BUTTONS];$/;"	m	struct:poll_data	file:	access:public
byte	apple/common/hidpad/wiimote.h	/^	typedef unsigned char byte;$/;"	t
byte_before_the_zipfile	deps/minizip/unzip.c	/^    uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon110	file:	access:public
byte_before_the_zipfile	deps/minizip/unzip.c	/^    uLong byte_before_the_zipfile;\/* byte before the zipfile, (>0 for sfx)*\/$/;"	m	struct:__anon111	file:	access:public
bytes_in_buffer	audio/rsound.h	/^      int bytes_in_buffer;$/;"	m	struct:rsound	access:public
bytes_per_pixel	gfx/omap_gfx.c	/^  unsigned bytes_per_pixel;$/;"	m	struct:omap_video	file:	access:public
c_rounded_size_ofrglDrawParams	ps3/rgl/src/rgl_ps3_raster.cpp	/^const uint32_t c_rounded_size_ofrglDrawParams = (sizeof(rglDrawParams)+0x7f)&~0x7f;$/;"	v
cache_context	libretro.h	/^   bool cache_context; \/\/ If this is true, the frontend will go very far to avoid resetting context in scenarios like toggling fullscreen, etc.$/;"	m	struct:retro_hw_render_callback	access:public
cache_vbo	gfx/shader_glsl.c	/^struct cache_vbo$/;"	s	file:
cache_vbo::buffer_primary	gfx/shader_glsl.c	/^   GLfloat buffer_primary[128];$/;"	m	struct:cache_vbo	file:	access:public
cache_vbo::buffer_secondary	gfx/shader_glsl.c	/^   GLfloat buffer_secondary[128];$/;"	m	struct:cache_vbo	file:	access:public
cache_vbo::size_primary	gfx/shader_glsl.c	/^   size_t size_primary;$/;"	m	struct:cache_vbo	file:	access:public
cache_vbo::size_secondary	gfx/shader_glsl.c	/^   size_t size_secondary;$/;"	m	struct:cache_vbo	file:	access:public
cache_vbo::vbo_primary	gfx/shader_glsl.c	/^   GLuint vbo_primary;$/;"	m	struct:cache_vbo	file:	access:public
cache_vbo::vbo_secondary	gfx/shader_glsl.c	/^   GLuint vbo_secondary;$/;"	m	struct:cache_vbo	file:	access:public
cachedLockValue	ps3/rgl/src/rgl_ps3.cpp	/^static uint32_t             cachedLockValue = 0;$/;"	v	file:
calc_joystick_state	apple/common/hidpad/wiimote.c	/^void calc_joystick_state(struct joystick_t* js, float x, float y) {$/;"	f	signature:(struct joystick_t* js, float x, float y)
calc_joystick_state	apple/common/hidpad/wiimote.c	/^void calc_joystick_state(struct joystick_t* js, float x, float y);$/;"	p	file:	signature:(struct joystick_t* js, float x, float y)
calc_out_rect	gfx/xvideo.c	/^static void calc_out_rect(bool keep_aspect, struct rarch_viewport *vp, unsigned vp_width, unsigned vp_height)$/;"	f	file:	signature:(bool keep_aspect, struct rarch_viewport *vp, unsigned vp_width, unsigned vp_height)
calculate_fft	audio/test/snr.c	/^static void calculate_fft(const float *data, complex double *butterfly_buf, size_t samples)$/;"	f	file:	signature:(const float *data, complex double *butterfly_buf, size_t samples)
calculate_fft_adjust	audio/test/snr.c	/^static void calculate_fft_adjust(complex double *butterfly_buf, double gain, bool merge_high, size_t samples)$/;"	f	file:	signature:(complex double *butterfly_buf, double gain, bool merge_high, size_t samples)
calculate_font_coords	gfx/fonts/gl_raster_font.c	/^static void calculate_font_coords(gl_t *gl,$/;"	f	file:	signature:(gl_t *gl, GLfloat font_vertex[8], GLfloat font_vertex_dark[8], GLfloat font_tex_coords[8], GLfloat scale, GLfloat pos_x, GLfloat pos_y)
calculate_ifft	audio/test/snr.c	/^static void calculate_ifft(complex double *butterfly_buf, size_t samples, bool normalize)$/;"	f	file:	signature:(complex double *butterfly_buf, size_t samples, bool normalize)
calculate_msg_geometry	gfx/fonts/gl_raster_font.c	/^static void calculate_msg_geometry(const struct font_output *head, struct font_rect *rect)$/;"	f	file:	signature:(const struct font_output *head, struct font_rect *rect)
calculate_rect	gfx/d3d9/d3d9.cpp	/^void D3DVideo::calculate_rect(unsigned width, unsigned height,$/;"	f	class:D3DVideo	signature:(unsigned width, unsigned height, bool keep, float desired_aspect)
calculate_rect	gfx/d3d9/d3d9.hpp	/^      void calculate_rect(unsigned width, unsigned height, bool keep, float aspect);$/;"	p	class:D3DVideo	access:private	signature:(unsigned width, unsigned height, bool keep, float aspect)
calculate_snr	audio/test/snr.c	/^static void calculate_snr(struct snr_result *res,$/;"	f	file:	signature:(struct snr_result *res, unsigned in_rate, unsigned max_rate, const float *resamp, complex double *butterfly_buf, size_t samples)
calculate_yuv	gfx/xvideo.c	/^static inline void calculate_yuv(uint8_t *y, uint8_t *u, uint8_t *v, unsigned r, unsigned g, unsigned b)$/;"	f	file:	signature:(uint8_t *y, uint8_t *u, uint8_t *v, unsigned r, unsigned g, unsigned b)
call_cnt	libretro.h	/^   retro_perf_tick_t call_cnt;$/;"	m	struct:retro_perf_counter	access:public
callback	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private OnCoreItemClickedListener callback;$/;"	f	class:InstalledCoresFragment	file:	access:private
callback	libretro.h	/^   retro_audio_callback_t callback;$/;"	m	struct:retro_audio_callback	access:public
callback	libretro.h	/^   retro_frame_time_callback_t callback;$/;"	m	struct:retro_frame_time_callback	access:public
callback	libretro.h	/^   retro_keyboard_event_t callback;$/;"	m	struct:retro_keyboard_callback	access:public
callback_sysutil_exit	frontend/platform/platform_ps3.c	/^static void callback_sysutil_exit(uint64_t status, uint64_t param, void *userdata)$/;"	f	file:	signature:(uint64_t status, uint64_t param, void *userdata)
callback_thread	frontend/platform/platform_psp.c	/^int callback_thread(SceSize args, void *argp)$/;"	f	signature:(SceSize args, void *argp)
camera	driver.h	/^   const camera_driver_t *camera;$/;"	m	struct:driver	access:public
camera	general.h	/^   } camera;$/;"	m	struct:settings	typeref:struct:settings::__anon228	access:public
camera_active	general.h	/^   bool camera_active;$/;"	m	struct:global	access:public
camera_android	camera/android.c	/^const camera_driver_t camera_android = {$/;"	v
camera_callback	general.h	/^      struct retro_camera_callback camera_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_camera_callback	access:public
camera_data	driver.h	/^   void *camera_data;$/;"	m	struct:driver	access:public
camera_data_own	driver.h	/^   bool camera_data_own;$/;"	m	struct:driver	access:public
camera_driver	driver.h	/^typedef struct camera_driver$/;"	s
camera_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:camera_driver	access:public
camera_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:camera_driver	access:public
camera_driver::init	driver.h	/^   void *(*init)(const char *device, uint64_t buffer_types, unsigned width, unsigned height);$/;"	m	struct:camera_driver	access:public
camera_driver::poll	driver.h	/^   bool (*poll)(void *data,$/;"	m	struct:camera_driver	access:public
camera_driver::start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:camera_driver	access:public
camera_driver::stop	driver.h	/^   void (*stop)(void *data);$/;"	m	struct:camera_driver	access:public
camera_driver_t	driver.h	/^} camera_driver_t;$/;"	t	typeref:struct:camera_driver
camera_drivers	driver.c	/^static const camera_driver_t *camera_drivers[] = {$/;"	v	file:
camera_init_func	driver_funcs.h	21;"	d
camera_rwebcam	camera/rwebcam.c	/^const camera_driver_t camera_rwebcam = {$/;"	v
camera_service_running	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private boolean camera_service_running = false;$/;"	f	class:RetroActivityCamera	file:	access:private
camera_v4l2	camera/video4linux2.c	/^const camera_driver_t camera_v4l2 = {$/;"	v
can_pause	audio/alsa.c	/^   bool can_pause;$/;"	m	struct:alsa	file:	access:public
can_pause	blackberry-qnx/alsa_qsa.c	/^   bool can_pause;$/;"	m	struct:alsa	file:	access:public
can_poll	netplay.c	/^   bool can_poll; \/\/ We don't want to poll several times on a frame.$/;"	m	struct:netplay	file:	access:public
can_run	apple/iOS/bluetooth/btpad_queue.c	/^static uint32_t can_run;$/;"	v	file:
can_sleep	record/ffemu.c	/^   volatile bool can_sleep;$/;"	m	struct:ffemu	file:	access:public
cap	file_path.h	/^   size_t cap;$/;"	m	struct:string_list	access:public
cap	frontend/menu/history.c	/^   size_t cap;$/;"	m	struct:rom_history	file:	access:public
capacity	file_list.h	/^   size_t capacity;$/;"	m	struct:file_list	access:public
capacity	ps3/rgl/include/RGL/Base.h	/^      unsigned int capacity;$/;"	m	class:RGL::Vector	access:private
capacity	ps3/rgl/include/RGL/Types.h	/^      GLuint capacity;$/;"	m	struct:rglTexNameSpace	access:public
capacity	ps3/rgl/include/RGL/Types.h	/^      unsigned long capacity;$/;"	m	struct:rglNameSpace	access:public
caps	libretro.h	/^   uint64_t caps; \/\/ Set by libretro core. Example bitmask: caps = (1 << RETRO_CAMERA_BUFFER_OPENGL_TEXTURE) | (1 << RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER).$/;"	m	struct:retro_camera_callback	access:public
cart_crc	general.h	/^   uint32_t cart_crc;$/;"	m	struct:global	access:public
cascades	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    namespace cascades$/;"	n	namespace:bb
casencmp	compat/compat.c	/^static int casencmp(const char *a, const char *b, size_t n)$/;"	f	file:	signature:(const char *a, const char *b, size_t n)
cb	input/keyboard_line.c	/^   input_keyboard_line_complete_t cb;$/;"	m	struct:input_keyboard_line	file:	access:public
cb_callback	general.h	/^      bool (*cb_callback)(void *data);$/;"	m	struct:global::__anon239	access:public
cb_data	audio/rsound.h	/^      void *cb_data;$/;"	m	struct:rsound	access:public
cb_init	general.h	/^      bool (*cb_init)(void *data);$/;"	m	struct:global::__anon239	access:public
cb_lock	audio/rsound.h	/^      slock_t *cb_lock;$/;"	m	struct:rsound	access:public
cb_max_size	audio/rsound.h	/^      size_t cb_max_size;$/;"	m	struct:rsound	access:public
cbs	netplay.c	/^   struct retro_callbacks cbs;$/;"	m	struct:netplay	typeref:struct:netplay::retro_callbacks	file:	access:public
celGcmSetInvalidateVertexCache	ps3/sdk_defines.h	545;"	d
celGcmSetInvalidateVertexCache	ps3/sdk_defines.h	548;"	d
cellAudioAddData	ps3/sdk_defines.h	45;"	d
cellAudioCreateNotifyEventQueue	ps3/sdk_defines.h	51;"	d
cellAudioInit	ps3/sdk_defines.h	38;"	d
cellAudioPortClose	ps3/sdk_defines.h	41;"	d
cellAudioPortOpen	ps3/sdk_defines.h	40;"	d
cellAudioPortOpen	ps3/sdk_defines.h	44;"	d
cellAudioPortStart	ps3/sdk_defines.h	39;"	d
cellAudioPortStop	ps3/sdk_defines.h	42;"	d
cellAudioQuit	ps3/sdk_defines.h	37;"	d
cellAudioRemoveNotifyEventQueue	ps3/sdk_defines.h	50;"	d
cellAudioSetNotifyEventQueue	ps3/sdk_defines.h	49;"	d
cellGameBootCheck	ps3/sdk_defines.h	612;"	d
cellGameContentPermit	ps3/sdk_defines.h	611;"	d
cellGcmAddressToOffset	ps3/sdk_defines.h	501;"	d
cellGcmBindTile	ps3/sdk_defines.h	499;"	d
cellGcmFinish	ps3/sdk_defines.h	482;"	d
cellGcmFlush	ps3/sdk_defines.h	494;"	d
cellGcmGetConfiguration	ps3/sdk_defines.h	492;"	d
cellGcmGetFlipStatus	ps3/sdk_defines.h	484;"	d
cellGcmGetLabelAddress	ps3/sdk_defines.h	497;"	d
cellGcmResetFlipStatus	ps3/sdk_defines.h	485;"	d
cellGcmSetBlendColor	ps3/sdk_defines.h	540;"	d
cellGcmSetBlendColorInline	ps3/sdk_defines.h	534;"	d
cellGcmSetBlendEnableInline	ps3/sdk_defines.h	531;"	d
cellGcmSetBlendEquation	ps3/sdk_defines.h	541;"	d
cellGcmSetBlendEquationInline	ps3/sdk_defines.h	526;"	d
cellGcmSetBlendFunc	ps3/sdk_defines.h	542;"	d
cellGcmSetBlendFuncInline	ps3/sdk_defines.h	533;"	d
cellGcmSetClearColor	ps3/sdk_defines.h	543;"	d
cellGcmSetClearColorInline	ps3/sdk_defines.h	532;"	d
cellGcmSetCullFaceEnableInline	ps3/sdk_defines.h	537;"	d
cellGcmSetDebugOutputLevel	ps3/sdk_defines.h	487;"	d
cellGcmSetDepthTestEnableInline	ps3/sdk_defines.h	529;"	d
cellGcmSetDisplayBuffer	ps3/sdk_defines.h	488;"	d
cellGcmSetFlip	ps3/sdk_defines.h	496;"	d
cellGcmSetFlipHandler	ps3/sdk_defines.h	490;"	d
cellGcmSetFlipMode	ps3/sdk_defines.h	495;"	d
cellGcmSetGraphicsHandler	ps3/sdk_defines.h	489;"	d
cellGcmSetJumpCommand	ps3/sdk_defines.h	493;"	d
cellGcmSetReferenceCommandInline	ps3/sdk_defines.h	525;"	d
cellGcmSetScissor	ps3/sdk_defines.h	544;"	d
cellGcmSetScissorInline	ps3/sdk_defines.h	530;"	d
cellGcmSetShadeModeInline	ps3/sdk_defines.h	538;"	d
cellGcmSetTextureControlInline	ps3/sdk_defines.h	536;"	d
cellGcmSetTextureFilterInline	ps3/sdk_defines.h	535;"	d
cellGcmSetTileInfo	ps3/sdk_defines.h	500;"	d
cellGcmSetTransferImage	ps3/sdk_defines.h	539;"	d
cellGcmSetTransferImage	ps3/sdk_defines.h	547;"	d
cellGcmSetVBlankHandler	ps3/sdk_defines.h	491;"	d
cellGcmSetViewportInline	ps3/sdk_defines.h	524;"	d
cellGcmSetWaitFlip	ps3/sdk_defines.h	486;"	d
cellGcmSetWaitLabelInline	ps3/sdk_defines.h	528;"	d
cellGcmSetWriteBackEndLabelInline	ps3/sdk_defines.h	527;"	d
cellGcmUnbindTile	ps3/sdk_defines.h	498;"	d
cellJpgDecClose	ps3/sdk_defines.h	258;"	d
cellJpgDecCreate	ps3/sdk_defines.h	253;"	d
cellJpgDecDecodeData	ps3/sdk_defines.h	257;"	d
cellJpgDecDestroy	ps3/sdk_defines.h	259;"	d
cellJpgDecOpen	ps3/sdk_defines.h	254;"	d
cellJpgDecReadHeader	ps3/sdk_defines.h	255;"	d
cellJpgDecSetParameter	ps3/sdk_defines.h	256;"	d
cellMouseEnd	ps3/sdk_defines.h	123;"	d
cellMouseGetData	ps3/sdk_defines.h	122;"	d
cellMouseGetInfo	ps3/sdk_defines.h	124;"	d
cellMouseInit	ps3/sdk_defines.h	121;"	d
cellNetCtlGetState	ps3/sdk_defines.h	579;"	d
cellNetCtlInit	ps3/sdk_defines.h	578;"	d
cellNetCtlTerm	ps3/sdk_defines.h	580;"	d
cellPadEnd	ps3/sdk_defines.h	100;"	d
cellPadGetData	ps3/sdk_defines.h	98;"	d
cellPadGetInfo2	ps3/sdk_defines.h	97;"	d
cellPadInit	ps3/sdk_defines.h	99;"	d
cellPngDecClose	ps3/sdk_defines.h	266;"	d
cellPngDecCreate	ps3/sdk_defines.h	261;"	d
cellPngDecDecodeData	ps3/sdk_defines.h	265;"	d
cellPngDecDestroy	ps3/sdk_defines.h	267;"	d
cellPngDecOpen	ps3/sdk_defines.h	262;"	d
cellPngDecReadHeader	ps3/sdk_defines.h	263;"	d
cellPngDecSetParameter	ps3/sdk_defines.h	264;"	d
cellRescAdjustAspectRatio	ps3/sdk_defines.h	513;"	d
cellRescCreateInterlaceTable	ps3/sdk_defines.h	503;"	d
cellRescExit	ps3/sdk_defines.h	517;"	d
cellRescGetBufferSize	ps3/sdk_defines.h	506;"	d
cellRescGetFlipStatus	ps3/sdk_defines.h	508;"	d
cellRescGetNumColorBuffers	ps3/sdk_defines.h	505;"	d
cellRescInit	ps3/sdk_defines.h	516;"	d
cellRescResetFlipStatus	ps3/sdk_defines.h	509;"	d
cellRescSetBufferAddress	ps3/sdk_defines.h	507;"	d
cellRescSetConvertAndFlip	ps3/sdk_defines.h	510;"	d
cellRescSetDisplayMode	ps3/sdk_defines.h	504;"	d
cellRescSetFlipHandler	ps3/sdk_defines.h	512;"	d
cellRescSetSrc	ps3/sdk_defines.h	515;"	d
cellRescSetVBlankHandler	ps3/sdk_defines.h	511;"	d
cellRescSetWaitFlip	ps3/sdk_defines.h	514;"	d
cellSysmoduleLoadModule	ps3/sdk_defines.h	659;"	d
cellSysmoduleUnloadModule	ps3/sdk_defines.h	660;"	d
cellSysutilCheckCallback	ps3/sdk_defines.h	632;"	d
cellSysutilRegisterCallback	ps3/sdk_defines.h	631;"	d
cellVideoOutConfigure	ps3/sdk_defines.h	519;"	d
cellVideoOutGetResolution	ps3/sdk_defines.h	521;"	d
cellVideoOutGetResolutionAvailability	ps3/sdk_defines.h	522;"	d
cellVideoOutGetState	ps3/sdk_defines.h	520;"	d
center	apple/common/hidpad/wiimote.h	/^		struct vec2b_t center;		    \/**< center joystick values		*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
center_x	input/overlay.c	/^   float center_x, center_y;$/;"	m	struct:overlay	file:	access:public
center_y	input/overlay.c	/^   float center_x, center_y;$/;"	m	struct:overlay	file:	access:public
central_pos	deps/minizip/unzip.c	/^    uLong central_pos;          \/* position of the beginning of the central dir*\/$/;"	m	struct:__anon111	file:	access:public
cfg_close_flow	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*cfg_close_flow) (__u32 sel);$/;"	m	struct:__anon198	access:public
cfg_open_flow	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*cfg_open_flow) (__u32 sel);$/;"	m	struct:__anon198	access:public
cfg_panel_info	gfx/context/sunxi_disp_ioctl.h	/^	void (*cfg_panel_info) (__panel_para_t *info);$/;"	m	struct:__anon198	access:public
cg	gfx/shader_parse.h	/^      char cg[PATH_MAX];$/;"	m	struct:gfx_shader_pass::__anon212	access:public
cgContextNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgContextNameSpace;$/;"	m	struct:RGLcontext	access:public
cgCopyProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGprogram cgCopyProgram( CGprogram program )$/;"	f	signature:( CGprogram program )
cgCreateContext	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGcontext cgCreateContext( void )$/;"	f	signature:( void )
cgCreateProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGprogram cgCreateProgram( CGcontext ctx,$/;"	f	signature:( CGcontext ctx, CGenum program_type, const char* program, CGprofile profile, const char* entry, const char** args )
cgCreateProgramFromFile	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGprogram cgCreateProgramFromFile( CGcontext ctx,$/;"	f	signature:( CGcontext ctx, CGenum program_type, const char* program_file, CGprofile profile, const char* entry, const char** args )
cgCtx	gfx/d3d9/d3d9.hpp	/^      CGcontext cgCtx;$/;"	m	class:D3DVideo	access:private
cgCtx	gfx/d3d9/render_chain.hpp	/^      CGcontext cgCtx;$/;"	m	class:RenderChain	access:private
cgCtx	gfx/shader_cg.c	/^static CGcontext cgCtx;$/;"	v	file:
cgDestroyContext	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API void cgDestroyContext( CGcontext c )$/;"	f	signature:( CGcontext c )
cgDestroyProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API void cgDestroyProgram( CGprogram program )$/;"	f	signature:( CGprogram program )
cgFProf	gfx/shader_cg.c	/^static CGprofile cgVProf, cgFProf;$/;"	v	file:
cgGLBindProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLBindProgram( CGprogram program )$/;"	f	signature:( CGprogram program )
cgGLDisableClientState	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLDisableClientState( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGLDisableProfile	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLDisableProfile( CGprofile profile )$/;"	f	signature:( CGprofile profile )
cgGLDisableTextureParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLDisableTextureParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGLEnableClientState	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLEnableClientState( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGLEnableProfile	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLEnableProfile( CGprofile profile )$/;"	f	signature:( CGprofile profile )
cgGLEnableTextureParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLEnableTextureParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGLGetLatestProfile	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API CGprofile cgGLGetLatestProfile( CGGLenum profile_type )$/;"	f	signature:( CGGLenum profile_type )
cgGLGetTextureParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API GLuint cgGLGetTextureParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGLIsProfileSupported	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API CGbool cgGLIsProfileSupported( CGprofile profile )$/;"	f	signature:( CGprofile profile )
cgGLIsProgramLoaded	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API CGbool cgGLIsProgramLoaded( CGprogram program )$/;"	f	signature:( CGprogram program )
cgGLLoadProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLLoadProgram( CGprogram program )$/;"	f	signature:( CGprogram program )
cgGLSetMatrixParameterfc	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetMatrixParameterfc( CGparameter param, const float *matrix )$/;"	f	signature:( CGparameter param, const float *matrix )
cgGLSetOptimalOptions	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetOptimalOptions( CGprofile profile )$/;"	f	signature:( CGprofile profile )
cgGLSetParameter1f	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetParameter1f( CGparameter param, float x )$/;"	f	signature:( CGparameter param, float x )
cgGLSetParameter2f	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetParameter2f( CGparameter param, float x, float y )$/;"	f	signature:( CGparameter param, float x, float y )
cgGLSetParameterPointer	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetParameterPointer( CGparameter param,$/;"	f	signature:( CGparameter param, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer )
cgGLSetTextureParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLSetTextureParameter( CGparameter param, GLuint texobj )$/;"	f	signature:( CGparameter param, GLuint texobj )
cgGLUnbindProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGGL_API void cgGLUnbindProgram( CGprofile profile )$/;"	f	signature:( CGprofile profile )
cgGetElfProgramByIndex	ps3/rgl/src/rgl_cg.h	/^extern bool cgGetElfProgramByIndex( CGELFBinary *elfBinary, int index, CGELFProgram *elfProgram );$/;"	p	signature:( CGELFBinary *elfBinary, int index, CGELFProgram *elfProgram )
cgGetElfProgramByIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^bool cgGetElfProgramByIndex( CGELFBinary *elfBinary, int index, CGELFProgram *elfProgram )$/;"	f	signature:( CGELFBinary *elfBinary, int index, CGELFProgram *elfProgram )
cgGetElfProgramByName	ps3/rgl/src/rgl_ps3_cg.cpp	/^static bool cgGetElfProgramByName( CGELFBinary *elfBinary, const char *name, CGELFProgram *elfProgram )$/;"	f	file:	signature:( CGELFBinary *elfBinary, const char *name, CGELFProgram *elfProgram )
cgGetError	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGerror cgGetError( void )$/;"	f	signature:( void )
cgGetErrorCallback	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGerrorCallbackFunc cgGetErrorCallback( void )$/;"	f	signature:( void )
cgGetErrorString	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API const char* cgGetErrorString( CGerror error )$/;"	f	signature:( CGerror error )
cgGetFirstParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGparameter cgGetFirstParameter( CGprogram prog, CGenum name_space )$/;"	f	signature:( CGprogram prog, CGenum name_space )
cgGetLastListing	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API const char* cgGetLastListing( CGcontext c )$/;"	f	signature:( CGcontext c )
cgGetNamedParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGparameter cgGetNamedParameter( CGprogram prog, const char* name )$/;"	f	signature:( CGprogram prog, const char* name )
cgGetNextParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGparameter cgGetNextParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGetParameterDirection	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGenum cgGetParameterDirection( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGetParameterSemantic	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API const char* cgGetParameterSemantic( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGetParameterVariability	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API CGenum cgGetParameterVariability( CGparameter param )$/;"	f	signature:( CGparameter param )
cgGetString	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API const char* cgGetString( CGenum sname )$/;"	f	signature:( CGenum sname )
cgOpenElf	ps3/rgl/src/rgl_cg.h	/^extern bool cgOpenElf( const void *ptr, size_t size, CGELFBinary *elfBinary );$/;"	p	signature:( const void *ptr, size_t size, CGELFBinary *elfBinary )
cgOpenElf	ps3/rgl/src/rgl_ps3_cg.cpp	/^bool cgOpenElf( const void *ptr, size_t size, CGELFBinary *elfBinary )$/;"	f	signature:( const void *ptr, size_t size, CGELFBinary *elfBinary )
cgParameterNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgParameterNameSpace;$/;"	m	struct:RGLcontext	access:public
cgProgramNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglNameSpace  cgProgramNameSpace;$/;"	m	struct:RGLcontext	access:public
cgRTCgcCompileHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef int (*cgRTCgcCompileHookFunction) (const char*, const char*, const char*, const char**, char**);$/;"	t
cgRTCgcFree	ps3/rgl/src/rgl_ps3_cg.cpp	/^void cgRTCgcFree( void )$/;"	f	signature:( void )
cgRTCgcFreeHookFunction	ps3/rgl/include/Cg/CgCommon.h	/^typedef void(*cgRTCgcFreeHookFunction) (char*);$/;"	t
cgRTCgcInit	ps3/rgl/src/rgl_ps3_cg.cpp	/^void cgRTCgcInit( void )$/;"	f	signature:( void )
cgSetErrorCallback	ps3/rgl/src/rgl_ps3_cg.cpp	/^CG_API void cgSetErrorCallback( CGerrorCallbackFunc func )$/;"	f	signature:( CGerrorCallbackFunc func )
cgVProf	gfx/shader_cg.c	/^static CGprofile cgVProf, cgFProf;$/;"	v	file:
cg_active	gfx/shader_cg.c	/^static bool cg_active;$/;"	v	file:
cg_arguments	gfx/shader_cg.c	/^static const char **cg_arguments;$/;"	v	file:
cg_attrib_index	gfx/shader_cg.c	/^static unsigned cg_attrib_index;$/;"	v	file:
cg_attribs	gfx/shader_cg.c	/^static CGparameter cg_attribs[PREV_TEXTURES + 1 + 4 + GFX_MAX_SHADERS];$/;"	v	file:
cg_error_handler	gfx/shader_cg.c	/^static void cg_error_handler(CGcontext ctx, CGerror error, void *data)$/;"	f	file:	signature:(CGcontext ctx, CGerror error, void *data)
cg_fbo_params	gfx/shader_cg.c	/^struct cg_fbo_params$/;"	s	file:
cg_fbo_params::coord	gfx/shader_cg.c	/^   CGparameter coord;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_fbo_params::tex	gfx/shader_cg.c	/^   CGparameter tex;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_fbo_params::tex_size_f	gfx/shader_cg.c	/^   CGparameter tex_size_f;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_fbo_params::tex_size_v	gfx/shader_cg.c	/^   CGparameter tex_size_v;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_fbo_params::vid_size_f	gfx/shader_cg.c	/^   CGparameter vid_size_f;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_fbo_params::vid_size_v	gfx/shader_cg.c	/^   CGparameter vid_size_v;$/;"	m	struct:cg_fbo_params	file:	access:public
cg_program	gfx/shader_cg.c	/^struct cg_program$/;"	s	file:
cg_program::color	gfx/shader_cg.c	/^   CGparameter color;$/;"	m	struct:cg_program	file:	access:public
cg_program::fbo	gfx/shader_cg.c	/^   struct cg_fbo_params fbo[GFX_MAX_SHADERS];$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
cg_program::fprg	gfx/shader_cg.c	/^   CGprogram fprg;$/;"	m	struct:cg_program	file:	access:public
cg_program::frame_cnt_f	gfx/shader_cg.c	/^   CGparameter frame_cnt_f;$/;"	m	struct:cg_program	file:	access:public
cg_program::frame_cnt_v	gfx/shader_cg.c	/^   CGparameter frame_cnt_v;$/;"	m	struct:cg_program	file:	access:public
cg_program::frame_dir_f	gfx/shader_cg.c	/^   CGparameter frame_dir_f;$/;"	m	struct:cg_program	file:	access:public
cg_program::frame_dir_v	gfx/shader_cg.c	/^   CGparameter frame_dir_v;$/;"	m	struct:cg_program	file:	access:public
cg_program::lut_tex	gfx/shader_cg.c	/^   CGparameter lut_tex;$/;"	m	struct:cg_program	file:	access:public
cg_program::mvp	gfx/shader_cg.c	/^   CGparameter mvp;$/;"	m	struct:cg_program	file:	access:public
cg_program::orig	gfx/shader_cg.c	/^   struct cg_fbo_params orig;$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
cg_program::out_size_f	gfx/shader_cg.c	/^   CGparameter out_size_f;$/;"	m	struct:cg_program	file:	access:public
cg_program::out_size_v	gfx/shader_cg.c	/^   CGparameter out_size_v;$/;"	m	struct:cg_program	file:	access:public
cg_program::prev	gfx/shader_cg.c	/^   struct cg_fbo_params prev[PREV_TEXTURES];$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
cg_program::tex	gfx/shader_cg.c	/^   CGparameter tex;$/;"	m	struct:cg_program	file:	access:public
cg_program::tex_size_f	gfx/shader_cg.c	/^   CGparameter tex_size_f;$/;"	m	struct:cg_program	file:	access:public
cg_program::tex_size_v	gfx/shader_cg.c	/^   CGparameter tex_size_v;$/;"	m	struct:cg_program	file:	access:public
cg_program::vertex	gfx/shader_cg.c	/^   CGparameter vertex;$/;"	m	struct:cg_program	file:	access:public
cg_program::vid_size_f	gfx/shader_cg.c	/^   CGparameter vid_size_f;$/;"	m	struct:cg_program	file:	access:public
cg_program::vid_size_v	gfx/shader_cg.c	/^   CGparameter vid_size_v;$/;"	m	struct:cg_program	file:	access:public
cg_program::vprg	gfx/shader_cg.c	/^   CGprogram vprg;$/;"	m	struct:cg_program	file:	access:public
cg_shader	gfx/d3d9/d3d9.hpp	/^      std::string cg_shader;$/;"	m	class:D3DVideo	access:private
cg_shader	gfx/shader_cg.c	/^static struct gfx_shader *cg_shader;$/;"	v	typeref:struct:gfx_shader	file:
cg_shader	gfx/shader_hlsl.c	/^static struct gfx_shader *cg_shader;$/;"	v	typeref:struct:gfx_shader	file:
cgc	ps3/rgl/src/cg/cgbio.hpp	/^namespace cgc$/;"	n
cgc	ps3/rgl/src/cg/cgbutils.hpp	/^namespace cgc$/;"	n
cgc	ps3/rgl/src/cg/nvbi.hpp	/^namespace cgc$/;"	n
cgc	ps3/rgl/src/cg/nvbiimpl.hpp	/^namespace cgc$/;"	n
cgc	ps3/rgl/src/rgl_ps3_cg.cpp	/^namespace cgc {$/;"	n	file:
cgc::bio	ps3/rgl/src/cg/cgbio.hpp	/^   namespace bio$/;"	n	namespace:cgc
cgc::bio	ps3/rgl/src/cg/cgbutils.hpp	/^   namespace bio$/;"	n	namespace:cgc
cgc::bio	ps3/rgl/src/cg/nvbi.hpp	/^   namespace bio$/;"	n	namespace:cgc
cgc::bio	ps3/rgl/src/cg/nvbiimpl.hpp	/^   namespace bio$/;"	n	namespace:cgc
cgc::bio	ps3/rgl/src/rgl_ps3_cg.cpp	/^   namespace bio {$/;"	n	namespace:cgc	file:
cgc::bio::CGBIODATALSB	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATALSB = ELFDATA2LSB,$/;"	e	enum:cgc::bio::__anon33
cgc::bio::CGBIODATAMSB	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATAMSB = ELFDATA2MSB$/;"	e	enum:cgc::bio::__anon33
cgc::bio::CGBIODATANONE	ps3/rgl/src/cg/cgbutils.hpp	/^         CGBIODATANONE = ELFDATANONE,$/;"	e	enum:cgc::bio::__anon33
cgc::bio::CGBIO_ERROR	ps3/rgl/src/cg/cgbio.hpp	/^      enum CGBIO_ERROR$/;"	g	namespace:cgc::bio
cgc::bio::CGBIO_ERROR_FILEIO	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_FILEIO,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_FORMAT	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_FORMAT,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_INDEX	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_INDEX,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_LOADED	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_LOADED,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_MEMORY	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_MEMORY,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_NO_ERROR	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_NO_ERROR,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_RELOC	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_RELOC,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_SYMBOL	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_SYMBOL,$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::CGBIO_ERROR_UNKNOWN_TYPE	ps3/rgl/src/cg/cgbio.hpp	/^         CGBIO_ERROR_UNKNOWN_TYPE$/;"	e	enum:cgc::bio::CGBIO_ERROR
cgc::bio::HOST_ENDIANNESS	ps3/rgl/src/cg/cgbutils.hpp	/^      } HOST_ENDIANNESS; \/\/ endianness$/;"	t	namespace:cgc::bio	typeref:enum:cgc::bio::__anon33
cgc::bio::bin_io	ps3/rgl/src/cg/cgbio.hpp	/^      class bin_io$/;"	c	namespace:cgc::bio
cgc::bio::bin_io::bin_io	ps3/rgl/src/cg/cgbio.hpp	/^            bin_io( const bin_io& );$/;"	p	class:cgc::bio::bin_io	access:private	signature:( const bin_io& )
cgc::bio::bin_io::bin_io	ps3/rgl/src/cg/cgbio.hpp	/^            bin_io();$/;"	p	class:cgc::bio::bin_io	access:private	signature:()
cgc::bio::bin_io::bin_io	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io::bin_io( const bin_io& )$/;"	f	class:cgc::bio::bin_io	signature:( const bin_io& )
cgc::bio::bin_io::bin_io	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io::bin_io()$/;"	f	class:cgc::bio::bin_io	signature:()
cgc::bio::bin_io::delete_instance	ps3/rgl/src/cg/cgbio.hpp	/^            static void delete_instance();$/;"	p	class:cgc::bio::bin_io	access:public	signature:()
cgc::bio::bin_io::delete_instance	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::delete_instance()$/;"	f	class:cgc::bio::bin_io	signature:()
cgc::bio::bin_io::error_string	ps3/rgl/src/cg/cgbio.hpp	/^            const char *error_string( CGBIO_ERROR error ) const;$/;"	p	class:cgc::bio::bin_io	access:public	signature:( CGBIO_ERROR error ) const
cgc::bio::bin_io::error_string	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::error_string( CGBIO_ERROR error ) const$/;"	f	class:cgc::bio::bin_io	signature:( CGBIO_ERROR error ) const
cgc::bio::bin_io::instance	ps3/rgl/src/cg/cgbio.hpp	/^            static const bin_io* instance();$/;"	p	class:cgc::bio::bin_io	access:public	signature:()
cgc::bio::bin_io::instance	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::instance()$/;"	f	class:cgc::bio::bin_io	signature:()
cgc::bio::bin_io::instance_	ps3/rgl/src/cg/cgbio.hpp	/^            static bin_io* instance_;$/;"	m	class:cgc::bio::bin_io	access:private
cgc::bio::bin_io::instance_	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io* bin_io::instance_ = 0;$/;"	m	class:cgc::bio::bin_io	file:
cgc::bio::bin_io::new_nvb_reader	ps3/rgl/src/cg/cgbio.hpp	/^            CGBIO_ERROR new_nvb_reader( nvb_reader** obj ) const;$/;"	p	class:cgc::bio::bin_io	access:public	signature:( nvb_reader** obj ) const
cgc::bio::bin_io::new_nvb_reader	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::new_nvb_reader( nvb_reader** obj ) const$/;"	f	class:cgc::bio::bin_io	signature:( nvb_reader** obj ) const
cgc::bio::convert_endianness	ps3/rgl/src/cg/cgbutils.hpp	/^      template< typename T > inline T convert_endianness( const T value, unsigned char endianness )$/;"	f	namespace:cgc::bio	signature:( const T value, unsigned char endianness )
cgc::bio::host_endianness	ps3/rgl/src/cg/cgbutils.hpp	/^      inline HOST_ENDIANNESS host_endianness(void)$/;"	f	namespace:cgc::bio	signature:(void)
cgc::bio::nvb_reader	ps3/rgl/src/cg/nvbi.hpp	/^      class nvb_reader$/;"	c	namespace:cgc::bio
cgc::bio::nvb_reader::endianness	ps3/rgl/src/cg/nvbi.hpp	/^               endianness() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::fragment_program	ps3/rgl/src/cg/nvbi.hpp	/^               fragment_program() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::get_param	ps3/rgl/src/cg/nvbi.hpp	/^               get_param( unsigned int index,$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
cgc::bio::nvb_reader::get_param_name	ps3/rgl/src/cg/nvbi.hpp	/^            virtual CGBIO_ERROR get_param_name( unsigned int index, const char** name, bool& is_referenced) const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( unsigned int index, const char** name, bool& is_referenced) const
cgc::bio::nvb_reader::is_loaded	ps3/rgl/src/cg/nvbi.hpp	/^               is_loaded() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::loadFromString	ps3/rgl/src/cg/nvbi.hpp	/^               loadFromString( const char* source, size_t length ) = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( const char* source, size_t length )
cgc::bio::nvb_reader::number_of_params	ps3/rgl/src/cg/nvbi.hpp	/^               number_of_params() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::profile	ps3/rgl/src/cg/nvbi.hpp	/^               profile() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::reference	ps3/rgl/src/cg/nvbi.hpp	/^               reference() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::release	ps3/rgl/src/cg/nvbi.hpp	/^               release() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::revision	ps3/rgl/src/cg/nvbi.hpp	/^               revision() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::size	ps3/rgl/src/cg/nvbi.hpp	/^               size() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::ucode	ps3/rgl/src/cg/nvbi.hpp	/^               ucode() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::ucode_size	ps3/rgl/src/cg/nvbi.hpp	/^               ucode_size() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::vertex_program	ps3/rgl/src/cg/nvbi.hpp	/^               vertex_program() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
cgc::bio::nvb_reader::~nvb_reader	ps3/rgl/src/cg/nvbi.hpp	/^            virtual ~nvb_reader() {}$/;"	f	class:cgc::bio::nvb_reader	access:public	signature:()
cgc::bio::nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^      class nvb_reader_impl : public nvb_reader$/;"	c	namespace:cgc::bio	inherits:nvb_reader
cgc::bio::nvb_reader_impl::endianness	ps3/rgl/src/cg/nvbiimpl.hpp	/^               endianness() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::endianness	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::endianness() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::endianness_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            unsigned char		endianness_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::fragment_program	ps3/rgl/src/cg/nvbiimpl.hpp	/^               fragment_program() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::fragment_program	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::fragment_program() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::get_param	ps3/rgl/src/cg/nvbiimpl.hpp	/^               get_param( unsigned int index,$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char ** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char ** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
cgc::bio::nvb_reader_impl::get_param	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::get_param( unsigned int index,$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char ** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char ** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
cgc::bio::nvb_reader_impl::get_param_name	ps3/rgl/src/cg/nvbiimpl.hpp	/^            virtual CGBIO_ERROR get_param_name( unsigned int index, const char ** name ,  bool& is_referenced) const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( unsigned int index, const char ** name , bool& is_referenced) const
cgc::bio::nvb_reader_impl::get_param_name	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::get_param_name( unsigned int index, const char **name, bool& is_referenced ) const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( unsigned int index, const char **name, bool& is_referenced ) const
cgc::bio::nvb_reader_impl::header_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            CgBinaryProgram		header_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::image_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            char*			image_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::is_loaded	ps3/rgl/src/cg/nvbiimpl.hpp	/^               is_loaded() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::is_loaded	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::is_loaded() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::loadFromString	ps3/rgl/src/cg/nvbiimpl.hpp	/^               loadFromString( const char* source, size_t length);$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( const char* source, size_t length)
cgc::bio::nvb_reader_impl::loadFromString	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::loadFromString( const char* source, size_t length)$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( const char* source, size_t length)
cgc::bio::nvb_reader_impl::loaded_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			loaded_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::number_of_params	ps3/rgl/src/cg/nvbiimpl.hpp	/^               number_of_params() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::number_of_params	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::number_of_params() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^            nvb_reader_impl();$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:()
cgc::bio::nvb_reader_impl::nvb_reader_impl	ps3/rgl/src/rgl_ps3_cg.cpp	/^      nvb_reader_impl::nvb_reader_impl()$/;"	f	class:cgc::bio::nvb_reader_impl	signature:()
cgc::bio::nvb_reader_impl::offset_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            int			offset_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::owner_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			owner_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::profile	ps3/rgl/src/cg/nvbiimpl.hpp	/^               profile() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::profile	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::profile() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::ref_count_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            mutable ptrdiff_t	ref_count_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::reference	ps3/rgl/src/cg/nvbiimpl.hpp	/^               reference() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::reference	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::reference() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::release	ps3/rgl/src/cg/nvbiimpl.hpp	/^               release() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::release	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::release() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::revision	ps3/rgl/src/cg/nvbiimpl.hpp	/^               revision() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::revision	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::revision() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::size	ps3/rgl/src/cg/nvbiimpl.hpp	/^               size() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::size	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::size() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::strStream_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			strStream_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
cgc::bio::nvb_reader_impl::ucode	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ucode() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::ucode	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::ucode() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::ucode_size	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ucode_size() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::ucode_size	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::ucode_size() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::vertex_program	ps3/rgl/src/cg/nvbiimpl.hpp	/^               vertex_program() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
cgc::bio::nvb_reader_impl::vertex_program	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::vertex_program() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
cgc::bio::nvb_reader_impl::~nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ~nvb_reader_impl();$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:()
cgc::bio::nvb_reader_impl::~nvb_reader_impl	ps3/rgl/src/rgl_ps3_cg.cpp	/^      nvb_reader_impl::~nvb_reader_impl()$/;"	f	class:cgc::bio::nvb_reader_impl	signature:()
cgp_default	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_default;  \/\/ index of default data in const \/\/Reduced to half$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_info	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_info;$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_name	ps3/rgl/src/cg/cgbtypes.h	/^   uint32_t cgp_name;     \/\/ index of name in strtab$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_reloc	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_reloc;	  \/\/ index of reloc indices in rel $/;"	m	struct:_Elf32_cgParameter	access:public
cgp_resource	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_resource; \/\/ index of hardware resource assigned$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_resource_index	ps3/rgl/src/cg/cgbtypes.h	/^   uint16_t cgp_resource_index;		\/\/ index of hardware resource assigned$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_semantic	ps3/rgl/src/cg/cgbtypes.h	/^   uint32_t cgp_semantic; \/\/ index of semantic string in strtab$/;"	m	struct:_Elf32_cgParameter	access:public
cgp_type	ps3/rgl/src/cg/cgbtypes.h	/^   unsigned char cgp_type;$/;"	m	struct:_Elf32_cgParameter	access:public
ch1_offset	gfx/context/sunxi_disp_ioctl.h	/^	__u32 ch1_offset; \/* use when PLANAR or UV_COMBINED mode *\/$/;"	m	struct:__anon201	access:public
ch2_offset	gfx/context/sunxi_disp_ioctl.h	/^	__u32 ch2_offset; \/* use when PLANAR mode *\/$/;"	m	struct:__anon201	access:public
chain	gfx/d3d9/d3d9.hpp	/^      std::unique_ptr<RenderChain> chain;$/;"	m	class:D3DVideo	access:private
channels	apple/iOS/bluetooth/btpad.c	/^   uint16_t channels[2]; \/\/0: Control, 1: Interrupt$/;"	m	struct:apple_pad_connection	file:	access:public
channels	audio/rsound.h	/^      uint32_t channels;$/;"	m	struct:rsound	access:public
channels	record/ffemu.h	/^   unsigned channels;$/;"	m	struct:ffemu_params	access:public
char_off_x	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
char_off_y	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
char_to_texture	gfx/fonts/bitmapfont.c	/^static void char_to_texture(font_renderer_t *handle, uint8_t letter)$/;"	f	file:	signature:(font_renderer_t *handle, uint8_t letter)
charf	deps/miniz/zlib.h	/^  typedef char charf;$/;"	t
charmask	ps3/altivec_mem.h	103;"	d
charmask	ps3/altivec_mem.h	233;"	d
charmask16	ps3/altivec_mem.h	53;"	d
charmask32	ps3/altivec_mem.h	54;"	d
charmask64	ps3/altivec_mem.h	55;"	d
charmask8	ps3/altivec_mem.h	52;"	d
cheat	cheats.c	/^struct cheat$/;"	s	file:
cheat	general.h	/^   cheat_manager_t *cheat;$/;"	m	struct:global	access:public
cheat::code	cheats.c	/^   char *code;$/;"	m	struct:cheat	file:	access:public
cheat::desc	cheats.c	/^   char *desc;$/;"	m	struct:cheat	file:	access:public
cheat::state	cheats.c	/^   bool state;$/;"	m	struct:cheat	file:	access:public
cheat_database	general.h	/^   char cheat_database[PATH_MAX];$/;"	m	struct:settings	access:public
cheat_manager	cheats.c	/^struct cheat_manager$/;"	s	file:
cheat_manager::buf_size	cheats.c	/^   unsigned buf_size;$/;"	m	struct:cheat_manager	file:	access:public
cheat_manager::cheats	cheats.c	/^   struct cheat *cheats;$/;"	m	struct:cheat_manager	typeref:struct:cheat_manager::cheat	file:	access:public
cheat_manager::ptr	cheats.c	/^   unsigned ptr;$/;"	m	struct:cheat_manager	file:	access:public
cheat_manager::size	cheats.c	/^   unsigned size;$/;"	m	struct:cheat_manager	file:	access:public
cheat_manager_apply_cheats	cheats.c	/^static void cheat_manager_apply_cheats(cheat_manager_t *handle)$/;"	f	file:	signature:(cheat_manager_t *handle)
cheat_manager_free	cheats.c	/^void cheat_manager_free(cheat_manager_t *handle)$/;"	f	signature:(cheat_manager_t *handle)
cheat_manager_free	cheats.h	/^void cheat_manager_free(cheat_manager_t *handle);$/;"	p	signature:(cheat_manager_t *handle)
cheat_manager_index_next	cheats.c	/^void cheat_manager_index_next(cheat_manager_t *handle)$/;"	f	signature:(cheat_manager_t *handle)
cheat_manager_index_next	cheats.h	/^void cheat_manager_index_next(cheat_manager_t *handle);$/;"	p	signature:(cheat_manager_t *handle)
cheat_manager_index_prev	cheats.c	/^void cheat_manager_index_prev(cheat_manager_t *handle)$/;"	f	signature:(cheat_manager_t *handle)
cheat_manager_index_prev	cheats.h	/^void cheat_manager_index_prev(cheat_manager_t *handle);$/;"	p	signature:(cheat_manager_t *handle)
cheat_manager_load_config	cheats.c	/^static void cheat_manager_load_config(cheat_manager_t *handle, const char *path, const char *sha256)$/;"	f	file:	signature:(cheat_manager_t *handle, const char *path, const char *sha256)
cheat_manager_new	cheats.c	/^cheat_manager_t *cheat_manager_new(const char *path)$/;"	f	signature:(const char *path)
cheat_manager_new	cheats.h	/^cheat_manager_t* cheat_manager_new(const char *path);$/;"	p	signature:(const char *path)
cheat_manager_save_config	cheats.c	/^static void cheat_manager_save_config(cheat_manager_t *handle, const char *path, const char *sha256)$/;"	f	file:	signature:(cheat_manager_t *handle, const char *path, const char *sha256)
cheat_manager_t	cheats.h	/^typedef struct cheat_manager cheat_manager_t;$/;"	t	typeref:struct:cheat_manager
cheat_manager_toggle	cheats.c	/^void cheat_manager_toggle(cheat_manager_t *handle)$/;"	f	signature:(cheat_manager_t *handle)
cheat_manager_toggle	cheats.h	/^void cheat_manager_toggle(cheat_manager_t *handle);$/;"	p	signature:(cheat_manager_t *handle)
cheat_manager_update	cheats.c	/^static void cheat_manager_update(cheat_manager_t *handle)$/;"	f	file:	signature:(cheat_manager_t *handle)
cheat_settings_path	general.h	/^   char cheat_settings_path[PATH_MAX];$/;"	m	struct:settings	access:public
cheats	cheats.c	/^   struct cheat *cheats;$/;"	m	struct:cheat_manager	typeref:struct:cheat_manager::cheat	file:	access:public
check	general.h	/^            bool check;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
check_cheats	retroarch.c	/^static void check_cheats(void)$/;"	f	file:	signature:(void)
check_code_c	qb/qb.libs.sh	/^check_code_c()$/;"	f
check_code_cxx	qb/qb.libs.sh	/^check_code_cxx()$/;"	f
check_device	input/udev_joypad.c	/^static void check_device(const char *path, bool hotplugged)$/;"	f	file:	signature:(const char *path, bool hotplugged)
check_device	input/udev_joypad.c	/^static void check_device(const char *path, bool hotplugged);$/;"	p	file:	signature:(const char *path, bool hotplugged)
check_disk	retroarch.c	/^static void check_disk(void)$/;"	f	file:	signature:(void)
check_dsp_config	retroarch.c	/^static void check_dsp_config(void)$/;"	f	file:	signature:(void)
check_eglimage_proc	gfx/gl.c	/^static bool check_eglimage_proc(void)$/;"	f	file:	signature:(void)
check_enter_rgui	retroarch.c	/^static inline bool check_enter_rgui(void)$/;"	f	file:	signature:(void)
check_fast_forward_button	retroarch.c	/^static void check_fast_forward_button(void)$/;"	f	file:	signature:(void)
check_fbo_proc	gfx/gl.c	/^static bool check_fbo_proc(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
check_fbo_proc	gfx/gl.c	182;"	d	file:
check_fbo_proc	gfx/gl.c	196;"	d	file:
check_fullscreen	retroarch.c	/^static bool check_fullscreen(void)$/;"	f	file:	signature:(void)
check_grab_mouse_toggle	retroarch.c	/^static void check_grab_mouse_toggle(void)$/;"	f	file:	signature:(void)
check_header	qb/qb.libs.sh	/^check_header()	#$1 = HAVE_$1	$2 = header file$/;"	f
check_lib	qb/qb.libs.sh	/^check_lib()	#$1 = HAVE_$1	$2 = lib	$3 = function in lib	$4 = extralibs$/;"	f
check_lib_cxx	qb/qb.libs.sh	/^check_lib_cxx()	#$1 = HAVE_$1	$2 = lib	$3 = function in lib	$4 = extralibs	$5 = critical error message [checked only if non-empty]$/;"	f
check_macro	qb/qb.libs.sh	/^check_macro()	#$1 = HAVE_$1	$2 = macro name$/;"	f
check_movie	retroarch.c	/^static void check_movie(void)$/;"	f	file:	signature:(void)
check_movie_playback	retroarch.c	/^static void check_movie_playback(bool pressed)$/;"	f	file:	signature:(bool pressed)
check_movie_record	retroarch.c	/^static void check_movie_record(bool pressed)$/;"	f	file:	signature:(bool pressed)
check_mute	retroarch.c	/^static void check_mute(void)$/;"	f	file:	signature:(void)
check_netplay_flip	retroarch.c	/^static void check_netplay_flip(void)$/;"	f	file:	signature:(void)
check_oneshot	retroarch.c	/^static void check_oneshot(void)$/;"	f	file:	signature:(void)
check_pause	retroarch.c	/^static void check_pause(void)$/;"	f	file:	signature:(void)
check_pkgconf	qb/qb.libs.sh	/^check_pkgconf()	#$1 = HAVE_$1	$2 = package	$3 = version	$4 = critical error message [checked only if non-empty]$/;"	f
check_reset	retroarch.c	/^static void check_reset(void)$/;"	f	file:	signature:(void)
check_resize	gfx/xvideo.c	/^static bool check_resize(xv_t *xv, unsigned width, unsigned height)$/;"	f	file:	signature:(xv_t *xv, unsigned width, unsigned height)
check_rewind	retroarch.c	/^static void check_rewind(void)$/;"	f	file:	signature:(void)
check_savestates	retroarch.c	/^static void check_savestates(bool immutable)$/;"	f	file:	signature:(bool immutable)
check_screenshot	retroarch.c	/^static void check_screenshot(void)$/;"	f	file:	signature:(void)
check_shader_dir	retroarch.c	/^static void check_shader_dir(void)$/;"	f	file:	signature:(void)
check_slowmotion	retroarch.c	/^static void check_slowmotion(void)$/;"	f	file:	signature:(void)
check_stateslots	retroarch.c	/^static void check_stateslots(void)$/;"	f	file:	signature:(void)
check_switch_c	qb/qb.libs.sh	/^check_switch_c()	#$1 = HAVE_$1	$2 = switch	$3 = critical error message [checked only if non-empty]$/;"	f
check_switch_cxx	qb/qb.libs.sh	/^check_switch_cxx()	#$1 = HAVE_$1	$2 = switch	$3 = critical error message [checked only if non-empty]$/;"	f
check_sync_proc	gfx/gl.c	/^static bool check_sync_proc(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
check_turbo	retroarch.c	/^static void check_turbo(void)$/;"	f	file:	signature:(void)
check_variables	libretro-test/libretro-test.c	/^static void check_variables(void)$/;"	f	file:	signature:(void)
check_volume	retroarch.c	/^static void check_volume(void)$/;"	f	file:	signature:(void)
check_window	gfx/gfx_context.h	/^   void (*check_window)(bool*, bool*, unsigned*, unsigned*, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
check_window	gfx/lima_gfx.c	/^static void check_window(lima_video_t *vid)$/;"	f	file:	signature:(lima_video_t *vid)
check_window	gfx/sdl_gfx.c	/^static void check_window(sdl_video_t *vid)$/;"	f	file:	signature:(sdl_video_t *vid)
check_window	xdk/xdk_d3d.cpp	/^static void check_window(void *data)$/;"	f	file:	signature:(void *data)
chid	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int chid, coid;$/;"	m	class:RetroArch	access:private
children	compat/rxml/rxml.h	/^   struct rxml_node *children;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_node	access:public
chnAmbColor	gx/gx_video_inl.h	/^	u32 chnAmbColor[2];$/;"	m	struct:__gx_regdef	access:public
chnCntrl	gx/gx_video_inl.h	/^	u32 chnCntrl[4];$/;"	m	struct:__gx_regdef	access:public
chnMatColor	gx/gx_video_inl.h	/^	u32 chnMatColor[2];$/;"	m	struct:__gx_regdef	access:public
choose_output_device	audio/coreaudio.c	/^static void choose_output_device(coreaudio_t *dev, const char* device)$/;"	f	file:	signature:(coreaudio_t *dev, const char* device)
chosenFile	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private File chosenFile = null;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
chroma_u_index	gfx/xvideo.c	/^   unsigned chroma_u_index;$/;"	m	struct:xv	file:	access:public
chroma_v_index	gfx/xvideo.c	/^   unsigned chroma_v_index;$/;"	m	struct:xv	file:	access:public
chunk1	audio/dsound.c	/^   void *chunk1;$/;"	m	struct:audio_lock	file:	access:public
chunk2	audio/dsound.c	/^   void *chunk2;$/;"	m	struct:audio_lock	file:	access:public
chunk_map	gfx/rpng/rpng.c	/^} static const chunk_map[] = {$/;"	v	file:
chunk_size	audio/rsound.h	/^         uint32_t chunk_size;$/;"	m	struct:rsound::__anon105	access:public
chunk_size	general.h	/^      size_t chunk_size;$/;"	m	struct:global::__anon235	access:public
ck_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool ck_enable; \/* layer color key enable *\/$/;"	m	struct:__anon187	access:public
ck_max	gfx/context/sunxi_disp_ioctl.h	/^	__disp_color_t ck_max;$/;"	m	struct:__anon188	access:public
ck_min	gfx/context/sunxi_disp_ioctl.h	/^	__disp_color_t ck_min;$/;"	m	struct:__anon188	access:public
clamp	input/overlay.c	/^static inline float clamp(float val, float lower, float upper)$/;"	f	file:	signature:(float val, float lower, float upper)
clamp_8bit	gfx/scaler/scaler_common.h	/^static inline uint8_t clamp_8bit(int val)$/;"	f	signature:(int val)
classic	apple/common/hidpad/wiimote.h	/^			struct classic_ctrl_t classic;$/;"	m	union:expansion_t::__anon158	typeref:struct:expansion_t::__anon158::classic_ctrl_t	access:public
classic_ctrl_event	apple/common/hidpad/wiimote.c	/^void classic_ctrl_event(struct classic_ctrl_t* cc, byte* msg) {$/;"	f	signature:(struct classic_ctrl_t* cc, byte* msg)
classic_ctrl_event	apple/common/hidpad/wiimote.c	/^void classic_ctrl_event(struct classic_ctrl_t* cc, byte* msg);$/;"	p	file:	signature:(struct classic_ctrl_t* cc, byte* msg)
classic_ctrl_handshake	apple/common/hidpad/wiimote.c	/^int classic_ctrl_handshake(struct wiimote_t* wm, struct classic_ctrl_t* cc, byte* data, unsigned short len)$/;"	f	signature:(struct wiimote_t* wm, struct classic_ctrl_t* cc, byte* data, unsigned short len)
classic_ctrl_handshake	apple/common/hidpad/wiimote.c	/^int classic_ctrl_handshake(struct wiimote_t* wm, struct classic_ctrl_t* cc, byte* data, unsigned short len);$/;"	p	file:	signature:(struct wiimote_t* wm, struct classic_ctrl_t* cc, byte* data, unsigned short len)
classic_ctrl_pressed_buttons	apple/common/hidpad/wiimote.c	/^static void classic_ctrl_pressed_buttons(struct classic_ctrl_t* cc, short now) {$/;"	f	file:	signature:(struct classic_ctrl_t* cc, short now)
classic_ctrl_pressed_buttons	apple/common/hidpad/wiimote.c	/^static void classic_ctrl_pressed_buttons(struct classic_ctrl_t* cc, short now);$/;"	p	file:	signature:(struct classic_ctrl_t* cc, short now)
classic_ctrl_t	apple/common/hidpad/wiimote.h	/^	typedef struct classic_ctrl_t {$/;"	s
classic_ctrl_t	apple/common/hidpad/wiimote.h	/^	} classic_ctrl_t;$/;"	t	typeref:struct:classic_ctrl_t
classic_ctrl_t::btns	apple/common/hidpad/wiimote.h	/^		short btns;						\/**< what buttons have just been pressed	*\/$/;"	m	struct:classic_ctrl_t	access:public
classic_ctrl_t::l_shoulder	apple/common/hidpad/wiimote.h	/^		float l_shoulder;				\/**< left shoulder button (range 0-1)		*\/$/;"	m	struct:classic_ctrl_t	access:public
classic_ctrl_t::ljs	apple/common/hidpad/wiimote.h	/^		struct joystick_t ljs;			\/**< left joystick calibration				*\/$/;"	m	struct:classic_ctrl_t	typeref:struct:classic_ctrl_t::joystick_t	access:public
classic_ctrl_t::r_shoulder	apple/common/hidpad/wiimote.h	/^		float r_shoulder;				\/**< right shoulder button (range 0-1)		*\/$/;"	m	struct:classic_ctrl_t	access:public
classic_ctrl_t::rjs	apple/common/hidpad/wiimote.h	/^		struct joystick_t rjs;			\/**< right joystick calibration				*\/$/;"	m	struct:classic_ctrl_t	typeref:struct:classic_ctrl_t::joystick_t	access:public
classnames	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int classnames[] = {$/;"	v	file:
clear	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void clear()$/;"	m	class:ConfigFile	access:public	signature:()
clear	gfx/d3d9/render_chain.cpp	/^void RenderChain::clear()$/;"	f	class:RenderChain	signature:()
clear	gfx/d3d9/render_chain.hpp	/^      void clear();$/;"	p	class:RenderChain	access:public	signature:()
clear	ps3/rgl/include/RGL/Base.h	/^      inline void clear()$/;"	f	class:RGL::Vector	access:public	signature:()
clearPendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void clearPendingIntent()$/;"	m	class:RetroActivityCommon	access:public	signature:()
clearPendingIntent	frontend/platform/platform_android.h	/^   jmethodID clearPendingIntent;$/;"	m	struct:android_app	access:public
clear_bit	input/udev_input.c	/^static inline void clear_bit(uint8_t *buf, unsigned bit)$/;"	f	file:	signature:(uint8_t *buf, unsigned bit)
clear_texture	gfx/d3d9/render_chain.cpp	/^void RenderChain::clear_texture(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
clear_texture	gfx/d3d9/render_chain.hpp	/^      void clear_texture(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
clear_uniforms_frame	gfx/shader_glsl.c	/^static void clear_uniforms_frame(struct shader_uniforms_frame *frame)$/;"	f	file:	signature:(struct shader_uniforms_frame *frame)
client	audio/jack.c	/^   jack_client_t *client;$/;"	m	struct:jack	file:	access:public
clientData	ps3/rgl/include/RGL/Types.h	/^      GLvoid*	clientData;   \/\/ client-side array pointer or VBO offset$/;"	m	struct:__anon68	access:public
clientSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	clientSize;   \/\/ number of components 1-4$/;"	m	struct:__anon68	access:public
clientStride	ps3/rgl/include/RGL/Types.h	/^      GLsizei	clientStride; \/\/ element-to-element distance [bytes]$/;"	m	struct:__anon68	access:public
clientType	ps3/rgl/include/RGL/Types.h	/^      GLenum	clientType;   \/\/ GL_SHORT, GL_INT, GL_FLOAT$/;"	m	struct:__anon68	access:public
clock_offset	apple/iOS/bluetooth/btpad_queue.c	/^         uint16_t clock_offset;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
close	netplay_compat.h	60;"	d
close	netplay_compat.h	70;"	d
close_file_func	deps/minizip/unzip.c	/^typedef int (*close_file_func) (voidpf opaque, voidpf stream);$/;"	t	file:
cmd_action_map	command.c	/^struct cmd_action_map$/;"	s	file:
cmd_action_map::action	command.c	/^   bool (*action)(const char *arg);$/;"	m	struct:cmd_action_map	file:	access:public
cmd_action_map::arg_desc	command.c	/^   const char *arg_desc;$/;"	m	struct:cmd_action_map	file:	access:public
cmd_action_map::str	command.c	/^   const char *str;$/;"	m	struct:cmd_action_map	file:	access:public
cmd_data	gfx/thread_wrapper.c	/^   } cmd_data;$/;"	m	struct:thread_video	typeref:union:thread_video::__anon215	file:	access:public
cmd_init_network	command.c	/^static bool cmd_init_network(rarch_cmd_t *handle, uint16_t port)$/;"	f	file:	signature:(rarch_cmd_t *handle, uint16_t port)
cmd_init_stdin	command.c	/^static bool cmd_init_stdin(rarch_cmd_t *handle)$/;"	f	file:	signature:(rarch_cmd_t *handle)
cmd_map	command.c	/^struct cmd_map$/;"	s	file:
cmd_map::id	command.c	/^   unsigned id;$/;"	m	struct:cmd_map	file:	access:public
cmd_map::str	command.c	/^   const char *str;$/;"	m	struct:cmd_map	file:	access:public
cmd_ptr	ps3/sdk_defines.h	305;"	d
cmd_set_shader	command.c	/^static bool cmd_set_shader(const char *arg)$/;"	f	file:	signature:(const char *arg)
code	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^   int code;$/;"	m	union:__anon96	access:public
code	cheats.c	/^   char *code;$/;"	m	struct:cheat	file:	access:public
codec	record/ffemu.c	/^   AVCodecContext *codec;$/;"	m	struct:ff_audio_info	file:	access:public
codec	record/ffemu.c	/^   AVCodecContext *codec;$/;"	m	struct:ff_video_info	file:	access:public
coid	blackberry-qnx/bb10/src/ButtonMap.h	/^    int coid;$/;"	m	class:ButtonMap	access:private
coid	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int chid, coid;$/;"	m	class:RetroArch	access:private
color	gfx/fonts/fonts.h	/^   unsigned color;$/;"	m	struct:font_output	access:public
color	gfx/gfx_common.h	/^   unsigned color;$/;"	m	struct:__anon204	access:public
color	gfx/gl_common.h	/^   const GLfloat *color;$/;"	m	struct:gl_coords	access:public
color	gfx/shader_cg.c	/^   CGparameter color;$/;"	m	struct:cg_program	file:	access:public
color	gfx/shader_glsl.c	/^   int color;$/;"	m	struct:shader_uniforms	file:	access:public
color	ps3/rgl/include/RGL/Types.h	/^   rglFramebufferAttachment color[RGL_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:rglFramebuffer	access:public
color	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSurface color[3];$/;"	m	struct:__anon50	access:public
color	xenon/xenon360_video.c	/^   unsigned int color;$/;"	m	struct:DrawVerticeFormats	file:	access:public
colorBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorBufferCount;$/;"	m	struct:rglGcmRenderTargetEx	access:public
colorBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  colorBufferCount;$/;"	m	struct:rglGcmRenderTarget	access:public
colorFormat	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum colorFormat;$/;"	m	struct:__anon72	access:public
colorFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  colorFormat;$/;"	m	struct:rglGcmRenderTarget	access:public
colorFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum   colorFormat;$/;"	m	struct:rglGcmRenderTargetEx	access:public
colorId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorId[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
colorIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorIdOffset[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
colorPitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorPitch[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
color_alpha	ps3/sdk_defines.h	245;"	d
color_alpha	ps3/sdk_defines.h	303;"	d
color_space	ps3/sdk_defines.h	246;"	d
color_space	ps3/sdk_defines.h	304;"	d
color_type	gfx/rpng/rpng.c	/^   uint8_t color_type;$/;"	m	struct:png_ihdr	file:	access:public
colormap	general.h	/^      uint32_t *colormap;$/;"	m	struct:global::__anon237	access:public
colormap	gfx/xvideo.c	/^   Colormap colormap;$/;"	m	struct:xv	file:	access:public
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser	android/phoenix/src/com/retroarch/browser/NativeInterface.java	/^package com.retroarch.browser;$/;"	p
com.retroarch.browser.coremanager	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^package com.retroarch.browser.coremanager;$/;"	p
com.retroarch.browser.coremanager.fragments	android/phoenix/src/com/retroarch/browser/coremanager/fragments/DownloadableCoresFragment.java	/^package com.retroarch.browser.coremanager.fragments;$/;"	p
com.retroarch.browser.coremanager.fragments	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^package com.retroarch.browser.coremanager.fragments;$/;"	p
com.retroarch.browser.coremanager.fragments	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^package com.retroarch.browser.coremanager.fragments;$/;"	p
com.retroarch.browser.coremanager.fragments	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^package com.retroarch.browser.coremanager.fragments;$/;"	p
com.retroarch.browser.coremanager.fragments	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^package com.retroarch.browser.coremanager.fragments;$/;"	p
com.retroarch.browser.dirfragment	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^package com.retroarch.browser.dirfragment;$/;"	p
com.retroarch.browser.dirfragment	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^package com.retroarch.browser.dirfragment;$/;"	p
com.retroarch.browser.mainmenu	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^package com.retroarch.browser.mainmenu;$/;"	p
com.retroarch.browser.mainmenu	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^package com.retroarch.browser.mainmenu;$/;"	p
com.retroarch.browser.mainmenu.gplwaiver	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^package com.retroarch.browser.mainmenu.gplwaiver;$/;"	p
com.retroarch.browser.preferences	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^package com.retroarch.browser.preferences;$/;"	p
com.retroarch.browser.preferences.fragments	android/phoenix/src/com/retroarch/browser/preferences/fragments/AudioPreferenceFragment.java	/^package com.retroarch.browser.preferences.fragments;$/;"	p
com.retroarch.browser.preferences.fragments	android/phoenix/src/com/retroarch/browser/preferences/fragments/GeneralPreferenceFragment.java	/^package com.retroarch.browser.preferences.fragments;$/;"	p
com.retroarch.browser.preferences.fragments	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^package com.retroarch.browser.preferences.fragments;$/;"	p
com.retroarch.browser.preferences.fragments	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^package com.retroarch.browser.preferences.fragments;$/;"	p
com.retroarch.browser.preferences.fragments	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^package com.retroarch.browser.preferences.fragments;$/;"	p
com.retroarch.browser.preferences.fragments.util	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^package com.retroarch.browser.preferences.fragments.util;$/;"	p
com.retroarch.browser.preferences.fragments.util	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^package com.retroarch.browser.preferences.fragments.util;$/;"	p
com.retroarch.browser.preferences.util	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^package com.retroarch.browser.preferences.util;$/;"	p
com.retroarch.browser.preferences.util	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^package com.retroarch.browser.preferences.util;$/;"	p
com.retroarch.browser.preferences.util	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^package com.retroarch.browser.preferences.util;$/;"	p
com.retroarch.browser.preferences.util	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^package com.retroarch.browser.preferences.util;$/;"	p
com.retroarch.browser.retroactivity	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^package com.retroarch.browser.retroactivity;$/;"	p
com.retroarch.browser.retroactivity	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^package com.retroarch.browser.retroactivity;$/;"	p
com.retroarch.browser.retroactivity	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityFuture.java	/^package com.retroarch.browser.retroactivity;$/;"	p
com.retroarch.browser.retroactivity	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^package com.retroarch.browser.retroactivity;$/;"	p
com.retroarch.browser.retroactivity	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityPast.java	/^package com.retroarch.browser.retroactivity;$/;"	p
command	apple/iOS/bluetooth/btpad_queue.c	/^   const hci_cmd_t* command;$/;"	m	struct:btpad_queue_command	file:	access:public
command	driver.h	/^   rarch_cmd_t *command;$/;"	m	struct:driver	access:public
command_get_arg	command.c	/^static bool command_get_arg(const char *tok, const char **arg, unsigned *index)$/;"	f	file:	signature:(const char *tok, const char **arg, unsigned *index)
commands	apple/iOS/bluetooth/btpad_queue.c	/^struct btpad_queue_command commands[64];$/;"	v	typeref:struct:btpad_queue_command
compareFunc	ps3/rgl/include/RGL/Types.h	/^      GLenum compareFunc;$/;"	m	struct:__anon63	access:public
compareMode	ps3/rgl/include/RGL/Types.h	/^      GLenum compareMode;$/;"	m	struct:__anon63	access:public
compareTo	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public int compareTo(FileWrapper other) {$/;"	m	class:FileWrapper	access:public	signature:(FileWrapper other)
compareTo	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public int compareTo(ModuleWrapper other)$/;"	m	class:ModuleWrapper	access:public	signature:(ModuleWrapper other)
compileType	ps3/rgl/include/Cg/CgCommon.h	/^   CGenum             compileType;     \/\/ compile manual, immediate or lazy (unused so far)$/;"	m	struct:_CGcontext	access:public
compile_program	gfx/shader_glsl.c	/^static GLuint compile_program(const char *vertex, const char *fragment, unsigned i)$/;"	f	file:	signature:(const char *vertex, const char *fragment, unsigned i)
compile_program	libretro-test-gl/libretro-test.c	/^static void compile_program(void)$/;"	f	file:	signature:(void)
compile_programs	gfx/shader_glsl.c	/^static bool compile_programs(GLuint *gl_prog)$/;"	f	file:	signature:(GLuint *gl_prog)
compile_shader	gfx/shader_glsl.c	/^static bool compile_shader(GLuint shader, const char *define, const char *program)$/;"	f	file:	signature:(GLuint shader, const char *define, const char *program)
compile_shaders	gfx/d3d9/render_chain.cpp	/^void RenderChain::compile_shaders(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)$/;"	f	class:RenderChain	signature:(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)
compile_shaders	gfx/d3d9/render_chain.hpp	/^      void compile_shaders(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader);$/;"	p	class:RenderChain	access:private	signature:(CGprogram &fPrg, CGprogram &vPrg, const std::string &shader)
compilerVersion	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short compilerVersion;$/;"	m	struct:CgProgramHeader	access:public
complete	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean complete;$/;"	m	struct:rglPlatformFramebuffer	access:public
components	gfx/xvideo.c	/^   char components[4];$/;"	m	struct:format_desc	file:	access:public
compress	deps/miniz/zlib.h	388;"	d
compress2	deps/miniz/zlib.h	389;"	d
compressBound	deps/miniz/zlib.h	390;"	d
compressed_size	deps/minizip/unzip.h	/^    uLong compressed_size;      \/* compressed size                 4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
compressed_size	deps/minizip/unzip.h	/^    uLong compressed_size;   \/* compressed size                 8 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
compression	gfx/rpng/rpng.c	/^   uint8_t compression;$/;"	m	struct:png_ihdr	file:	access:public
compression_method	deps/minizip/unzip.c	/^    uLong compression_method;   \/* compression method (0==store) *\/$/;"	m	struct:__anon110	file:	access:public
compression_method	deps/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
compression_method	deps/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
compute_audio_buffer_statistics	driver.c	/^static void compute_audio_buffer_statistics(void)$/;"	f	file:	signature:(void)
compute_axis	input/udev_joypad.c	/^static inline int16_t compute_axis(const struct input_absinfo *info, int value)$/;"	f	file:	signature:(const struct input_absinfo *info, int value)
compute_monitor_fps_statistics	driver.c	/^static void compute_monitor_fps_statistics(void)$/;"	f	file:	signature:(void)
cond	audio/alsathread.c	/^   scond_t *cond;$/;"	m	struct:alsa_thread	file:	access:public
cond	audio/coreaudio.c	/^   pthread_cond_t cond;$/;"	m	struct:coreaudio	file:	access:public
cond	audio/jack.c	/^   pthread_cond_t cond;$/;"	m	struct:jack	file:	access:public
cond	audio/opensl.c	/^   scond_t *cond;$/;"	m	struct:sl	file:	access:public
cond	audio/rsound.c	/^   scond_t *cond;$/;"	m	struct:rsd	file:	access:public
cond	audio/rsound.h	/^         scond_t *cond;$/;"	m	struct:rsound::__anon106	access:public
cond	audio/sdl_audio.c	/^   scond_t *cond;$/;"	m	struct:sdl_audio	file:	access:public
cond	audio/thread_wrapper.c	/^   scond_t *cond;$/;"	m	struct:audio_thread	file:	access:public
cond	autosave.c	/^   scond_t *cond;$/;"	m	struct:autosave	file:	access:public
cond	frontend/platform/platform_android.h	/^   scond_t *cond;$/;"	m	struct:android_app	access:public
cond	gx/gx_audio.c	/^   lwpq_t cond;$/;"	m	struct:__anon247	file:	access:public
cond	ps3/ps3_audio.c	/^   sys_lwcond_t cond;$/;"	m	struct:__anon78	file:	access:public
cond	record/ffemu.c	/^   scond_t *cond;$/;"	m	struct:ffemu	file:	access:public
cond	thread.c	/^   pthread_cond_t cond;$/;"	m	struct:scond	file:	access:public
cond_cmd	gfx/thread_wrapper.c	/^   scond_t *cond_cmd;$/;"	m	struct:thread_video	file:	access:public
cond_lock	audio/alsathread.c	/^   slock_t *cond_lock;$/;"	m	struct:alsa_thread	file:	access:public
cond_lock	audio/jack.c	/^   pthread_mutex_t cond_lock;$/;"	m	struct:jack	file:	access:public
cond_lock	audio/rsound.c	/^   slock_t *cond_lock;$/;"	m	struct:rsd	file:	access:public
cond_lock	autosave.c	/^   slock_t *cond_lock;$/;"	m	struct:autosave	file:	access:public
cond_lock	ps3/ps3_audio.c	/^   sys_lwmutex_t cond_lock;$/;"	m	struct:__anon78	file:	access:public
cond_lock	record/ffemu.c	/^   slock_t *cond_lock;$/;"	m	struct:ffemu	file:	access:public
cond_mutex	audio/rsound.h	/^         slock_t *cond_mutex;$/;"	m	struct:rsound::__anon106	access:public
cond_thread	gfx/thread_wrapper.c	/^   scond_t *cond_thread;$/;"	m	struct:thread_video	file:	access:public
conf	core_options.c	/^   config_file_t *conf;$/;"	m	struct:core_option_manager	file:	access:public
conf	record/ffemu.c	/^   config_file_t *conf;$/;"	m	struct:ff_config_param	file:	access:public
conf_path	core_options.c	/^   char conf_path[PATH_MAX];$/;"	m	struct:core_option_manager	file:	access:public
conf_path	frontend/menu/history.c	/^   char *conf_path;$/;"	m	struct:rom_history	file:	access:public
config	audio/ext/rarch_dsp.h	/^   void (*config)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
config	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmConfig config;$/;"	m	struct:rglGcmState	access:public
config	record/ffemu.c	/^   struct ff_config_param config;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_config_param	file:	access:public
config	record/ffemu.h	/^   const char *config;$/;"	m	struct:ffemu_params	access:public
configDirectory	apple/OSX/platform.h	/^@property (nonatomic, copy) NSString* configDirectory;    \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch$/;"	v
configDirectory	apple/iOS/platform.h	/^@property (nonatomic) NSString* configDirectory;    \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch$/;"	v
config_append_file	conf/config_file.c	/^bool config_append_file(config_file_t *conf, const char *path)$/;"	f	signature:(config_file_t *conf, const char *path)
config_append_file	conf/config_file.h	/^bool config_append_file(config_file_t *conf, const char *path);$/;"	p	signature:(config_file_t *conf, const char *path)
config_entry_exists	conf/config_file.c	/^bool config_entry_exists(config_file_t *conf, const char *entry)$/;"	f	signature:(config_file_t *conf, const char *entry)
config_entry_exists	conf/config_file.h	/^bool config_entry_exists(config_file_t *conf, const char *entry);$/;"	p	signature:(config_file_t *conf, const char *entry)
config_entry_list	conf/config_file.c	/^struct config_entry_list$/;"	s	file:
config_entry_list::key	conf/config_file.c	/^   char *key;$/;"	m	struct:config_entry_list	file:	access:public
config_entry_list::next	conf/config_file.c	/^   struct config_entry_list *next;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list::config_entry_list	file:	access:public
config_entry_list::readonly	conf/config_file.c	/^   bool readonly; \/\/ If we got this from an #include, do not allow write.$/;"	m	struct:config_entry_list	file:	access:public
config_entry_list::value	conf/config_file.c	/^   char *value;$/;"	m	struct:config_entry_list	file:	access:public
config_file	conf/config_file.c	/^struct config_file$/;"	s	file:
config_file::entries	conf/config_file.c	/^   struct config_entry_list *entries;$/;"	m	struct:config_file	typeref:struct:config_file::config_entry_list	file:	access:public
config_file::include_depth	conf/config_file.c	/^   unsigned include_depth;$/;"	m	struct:config_file	file:	access:public
config_file::includes	conf/config_file.c	/^   struct include_list *includes;$/;"	m	struct:config_file	typeref:struct:config_file::include_list	file:	access:public
config_file::path	conf/config_file.c	/^   char *path;$/;"	m	struct:config_file	file:	access:public
config_file::tail	conf/config_file.c	/^   struct config_entry_list *tail;$/;"	m	struct:config_file	typeref:struct:config_file::config_entry_list	file:	access:public
config_file_dump	conf/config_file.c	/^void config_file_dump(config_file_t *conf, FILE *file)$/;"	f	signature:(config_file_t *conf, FILE *file)
config_file_dump	conf/config_file.h	/^void config_file_dump(config_file_t *conf, FILE *file);$/;"	p	signature:(config_file_t *conf, FILE *file)
config_file_dump_all	conf/config_file.c	/^void config_file_dump_all(config_file_t *conf, FILE *file)$/;"	f	signature:(config_file_t *conf, FILE *file)
config_file_dump_all	conf/config_file.h	/^void config_file_dump_all(config_file_t *conf, FILE *file);$/;"	p	signature:(config_file_t *conf, FILE *file)
config_file_entry	conf/config_file.h	/^struct config_file_entry$/;"	s
config_file_entry::key	conf/config_file.h	/^   const char *key;$/;"	m	struct:config_file_entry	access:public
config_file_entry::next	conf/config_file.h	/^   const struct config_entry_list *next; \/\/ Used internally. Opaque here.$/;"	m	struct:config_file_entry	typeref:struct:config_file_entry::config_entry_list	access:public
config_file_entry::value	conf/config_file.h	/^   const char *value;$/;"	m	struct:config_file_entry	access:public
config_file_free	conf/config_file.c	/^void config_file_free(config_file_t *conf)$/;"	f	signature:(config_file_t *conf)
config_file_free	conf/config_file.h	/^void config_file_free(config_file_t *conf);$/;"	p	signature:(config_file_t *conf)
config_file_new	conf/config_file.c	/^config_file_t *config_file_new(const char *path)$/;"	f	signature:(const char *path)
config_file_new	conf/config_file.h	/^config_file_t *config_file_new(const char *path);$/;"	p	signature:(const char *path)
config_file_new_from_string	conf/config_file.c	/^config_file_t *config_file_new_from_string(const char *from_string)$/;"	f	signature:(const char *from_string)
config_file_new_from_string	conf/config_file.h	/^config_file_t *config_file_new_from_string(const char *from_string);$/;"	p	signature:(const char *from_string)
config_file_new_internal	conf/config_file.c	/^static config_file_t *config_file_new_internal(const char *path, unsigned depth)$/;"	f	file:	signature:(const char *path, unsigned depth)
config_file_new_internal	conf/config_file.c	/^static config_file_t *config_file_new_internal(const char *path, unsigned depth);$/;"	p	file:	signature:(const char *path, unsigned depth)
config_file_t	conf/config_file.h	/^typedef struct config_file config_file_t;$/;"	t	typeref:struct:config_file
config_file_write	conf/config_file.c	/^bool config_file_write(config_file_t *conf, const char *path)$/;"	f	signature:(config_file_t *conf, const char *path)
config_file_write	conf/config_file.h	/^bool config_file_write(config_file_t *conf, const char *path);$/;"	p	signature:(config_file_t *conf, const char *path)
config_get_array	conf/config_file.c	/^bool config_get_array(config_file_t *conf, const char *key, char *buf, size_t size)$/;"	f	signature:(config_file_t *conf, const char *key, char *buf, size_t size)
config_get_array	conf/config_file.h	/^bool config_get_array(config_file_t *conf, const char *entry, char *in, size_t size);$/;"	p	signature:(config_file_t *conf, const char *entry, char *in, size_t size)
config_get_bool	conf/config_file.c	/^bool config_get_bool(config_file_t *conf, const char *key, bool *in)$/;"	f	signature:(config_file_t *conf, const char *key, bool *in)
config_get_bool	conf/config_file.h	/^bool config_get_bool(config_file_t *conf, const char *entry, bool *in);$/;"	p	signature:(config_file_t *conf, const char *entry, bool *in)
config_get_char	conf/config_file.c	/^bool config_get_char(config_file_t *conf, const char *key, char *in)$/;"	f	signature:(config_file_t *conf, const char *key, char *in)
config_get_char	conf/config_file.h	/^bool config_get_char(config_file_t *conf, const char *entry, char *in);$/;"	p	signature:(config_file_t *conf, const char *entry, char *in)
config_get_default_audio	general.h	/^const char *config_get_default_audio(void);$/;"	p	signature:(void)
config_get_default_audio	settings.c	/^const char *config_get_default_audio(void)$/;"	f	signature:(void)
config_get_default_camera	general.h	/^const char *config_get_default_camera(void);$/;"	p	signature:(void)
config_get_default_camera	settings.c	/^const char *config_get_default_camera(void)$/;"	f	signature:(void)
config_get_default_input	general.h	/^const char *config_get_default_input(void);$/;"	p	signature:(void)
config_get_default_input	settings.c	/^const char *config_get_default_input(void)$/;"	f	signature:(void)
config_get_default_location	general.h	/^const char *config_get_default_location(void);$/;"	p	signature:(void)
config_get_default_location	settings.c	/^const char *config_get_default_location(void)$/;"	f	signature:(void)
config_get_default_osk	general.h	/^const char *config_get_default_osk(void);$/;"	p	signature:(void)
config_get_default_osk	settings.c	/^const char *config_get_default_osk(void)$/;"	f	signature:(void)
config_get_default_video	general.h	/^const char *config_get_default_video(void);$/;"	p	signature:(void)
config_get_default_video	settings.c	/^const char *config_get_default_video(void)$/;"	f	signature:(void)
config_get_double	conf/config_file.c	/^bool config_get_double(config_file_t *conf, const char *key, double *in)$/;"	f	signature:(config_file_t *conf, const char *key, double *in)
config_get_double	conf/config_file.h	/^bool config_get_double(config_file_t *conf, const char *entry, double *in);$/;"	p	signature:(config_file_t *conf, const char *entry, double *in)
config_get_entry_list_head	conf/config_file.c	/^bool config_get_entry_list_head(config_file_t *conf, struct config_file_entry *entry)$/;"	f	signature:(config_file_t *conf, struct config_file_entry *entry)
config_get_entry_list_head	conf/config_file.h	/^bool config_get_entry_list_head(config_file_t *conf, struct config_file_entry *entry);$/;"	p	signature:(config_file_t *conf, struct config_file_entry *entry)
config_get_entry_list_next	conf/config_file.c	/^bool config_get_entry_list_next(struct config_file_entry *entry)$/;"	f	signature:(struct config_file_entry *entry)
config_get_entry_list_next	conf/config_file.h	/^bool config_get_entry_list_next(struct config_file_entry *entry);$/;"	p	signature:(struct config_file_entry *entry)
config_get_float	conf/config_file.c	/^bool config_get_float(config_file_t *conf, const char *key, float *in)$/;"	f	signature:(config_file_t *conf, const char *key, float *in)
config_get_float	conf/config_file.h	/^bool config_get_float(config_file_t *conf, const char *entry, float *in);$/;"	p	signature:(config_file_t *conf, const char *entry, float *in)
config_get_hex	conf/config_file.c	/^bool config_get_hex(config_file_t *conf, const char *key, unsigned *in)$/;"	f	signature:(config_file_t *conf, const char *key, unsigned *in)
config_get_hex	conf/config_file.h	/^bool config_get_hex(config_file_t *conf, const char *entry, unsigned *in);$/;"	p	signature:(config_file_t *conf, const char *entry, unsigned *in)
config_get_int	conf/config_file.c	/^bool config_get_int(config_file_t *conf, const char *key, int *in)$/;"	f	signature:(config_file_t *conf, const char *key, int *in)
config_get_int	conf/config_file.h	/^bool config_get_int(config_file_t *conf, const char *entry, int *in);$/;"	p	signature:(config_file_t *conf, const char *entry, int *in)
config_get_path	conf/config_file.c	/^bool config_get_path(config_file_t *conf, const char *key, char *buf, size_t size)$/;"	f	signature:(config_file_t *conf, const char *key, char *buf, size_t size)
config_get_path	conf/config_file.h	/^bool config_get_path(config_file_t *conf, const char *entry, char *in, size_t size);$/;"	p	signature:(config_file_t *conf, const char *entry, char *in, size_t size)
config_get_string	conf/config_file.c	/^bool config_get_string(config_file_t *conf, const char *key, char **str)$/;"	f	signature:(config_file_t *conf, const char *key, char **str)
config_get_string	conf/config_file.h	/^bool config_get_string(config_file_t *conf, const char *entry, char **in);$/;"	p	signature:(config_file_t *conf, const char *entry, char **in)
config_get_uint	conf/config_file.c	/^bool config_get_uint(config_file_t *conf, const char *key, unsigned *in)$/;"	f	signature:(config_file_t *conf, const char *key, unsigned *in)
config_get_uint	conf/config_file.h	/^bool config_get_uint(config_file_t *conf, const char *entry, unsigned *in);$/;"	p	signature:(config_file_t *conf, const char *entry, unsigned *in)
config_get_uint64	conf/config_file.c	/^bool config_get_uint64(config_file_t *conf, const char *key, uint64_t *in)$/;"	f	signature:(config_file_t *conf, const char *key, uint64_t *in)
config_get_uint64	conf/config_file.h	/^bool config_get_uint64(config_file_t *conf, const char *entry, uint64_t *in);$/;"	p	signature:(config_file_t *conf, const char *entry, uint64_t *in)
config_load	general.h	/^void config_load(void);$/;"	p	signature:(void)
config_load	settings.c	/^void config_load(void)$/;"	f	signature:(void)
config_load_file	general.h	/^bool config_load_file(const char *path);$/;"	p	signature:(const char *path)
config_load_file	settings.c	/^bool config_load_file(const char *path)$/;"	f	signature:(const char *path)
config_path	frontend/platform/platform_gx.c	/^char config_path[512];$/;"	v
config_path	frontend/platform/platform_ps3.c	/^char config_path[512];$/;"	v
config_path	frontend/platform/platform_xdk.c	/^char config_path[512];$/;"	v
config_path	general.h	/^   char config_path[PATH_MAX];$/;"	m	struct:global	access:public
config_path	general.h	/^   const char *config_path;$/;"	m	struct:rarch_main_wrap	access:public
config_read_keybinds	general.h	/^bool config_read_keybinds(const char *path);$/;"	p	signature:(const char *path)
config_read_keybinds	settings.c	/^bool config_read_keybinds(const char *path)$/;"	f	signature:(const char *path)
config_read_keybinds_conf	settings.c	/^static void config_read_keybinds_conf(config_file_t *conf)$/;"	f	file:	signature:(config_file_t *conf)
config_read_keybinds_conf	settings.c	/^static void config_read_keybinds_conf(config_file_t *conf);$/;"	p	file:	signature:(config_file_t *conf)
config_save_file	general.h	/^bool config_save_file(const char *path);$/;"	p	signature:(const char *path)
config_save_file	settings.c	/^bool config_save_file(const char *path)$/;"	f	signature:(const char *path)
config_save_on_exit	config.def.h	/^static bool config_save_on_exit = false;$/;"	v
config_save_on_exit	config.def.h	/^static bool config_save_on_exit = true;$/;"	v
config_save_on_exit	general.h	/^   bool config_save_on_exit;$/;"	m	struct:global	access:public
config_set_bool	conf/config_file.c	/^void config_set_bool(config_file_t *conf, const char *key, bool val)$/;"	f	signature:(config_file_t *conf, const char *key, bool val)
config_set_bool	conf/config_file.h	/^void config_set_bool(config_file_t *conf, const char *entry, bool val);$/;"	p	signature:(config_file_t *conf, const char *entry, bool val)
config_set_char	conf/config_file.c	/^void config_set_char(config_file_t *conf, const char *key, char val)$/;"	f	signature:(config_file_t *conf, const char *key, char val)
config_set_char	conf/config_file.h	/^void config_set_char(config_file_t *conf, const char *entry, char val);$/;"	p	signature:(config_file_t *conf, const char *entry, char val)
config_set_defaults	general.h	/^void config_set_defaults(void);$/;"	p	signature:(void)
config_set_defaults	settings.c	/^void config_set_defaults(void)$/;"	f	signature:(void)
config_set_double	conf/config_file.c	/^void config_set_double(config_file_t *conf, const char *key, double val)$/;"	f	signature:(config_file_t *conf, const char *key, double val)
config_set_double	conf/config_file.h	/^void config_set_double(config_file_t *conf, const char *entry, double value);$/;"	p	signature:(config_file_t *conf, const char *entry, double value)
config_set_float	conf/config_file.c	/^void config_set_float(config_file_t *conf, const char *key, float val)$/;"	f	signature:(config_file_t *conf, const char *key, float val)
config_set_float	conf/config_file.h	/^void config_set_float(config_file_t *conf, const char *entry, float value);$/;"	p	signature:(config_file_t *conf, const char *entry, float value)
config_set_hex	conf/config_file.c	/^void config_set_hex(config_file_t *conf, const char *key, unsigned val)$/;"	f	signature:(config_file_t *conf, const char *key, unsigned val)
config_set_hex	conf/config_file.h	/^void config_set_hex(config_file_t *conf, const char *entry, unsigned val);$/;"	p	signature:(config_file_t *conf, const char *entry, unsigned val)
config_set_int	conf/config_file.c	/^void config_set_int(config_file_t *conf, const char *key, int val)$/;"	f	signature:(config_file_t *conf, const char *key, int val)
config_set_int	conf/config_file.h	/^void config_set_int(config_file_t *conf, const char *entry, int val);$/;"	p	signature:(config_file_t *conf, const char *entry, int val)
config_set_string	conf/config_file.c	/^void config_set_string(config_file_t *conf, const char *key, const char *val)$/;"	f	signature:(config_file_t *conf, const char *key, const char *val)
config_set_string	conf/config_file.h	/^void config_set_string(config_file_t *conf, const char *entry, const char *val);$/;"	p	signature:(config_file_t *conf, const char *entry, const char *val)
config_set_uint64	conf/config_file.c	/^void config_set_uint64(config_file_t *conf, const char *key, uint64_t val)$/;"	f	signature:(config_file_t *conf, const char *key, uint64_t val)
config_set_uint64	conf/config_file.h	/^void config_set_uint64(config_file_t *conf, const char *entry, uint64_t val);$/;"	p	signature:(config_file_t *conf, const char *entry, uint64_t val)
configured_strength	input/udev_joypad.c	/^   uint16_t configured_strength[2];$/;"	m	struct:udev_joypad	file:	access:public
conn	audio/rsound.h	/^      } conn;$/;"	m	struct:rsound	typeref:struct:rsound::__anon104	access:public
conn_type	audio/rsound.h	/^      int conn_type;$/;"	m	struct:rsound	access:public
connect	apple/common/apple_input.h	/^   void* (*connect)(struct apple_pad_connection* connection, uint32_t slot);$/;"	m	struct:apple_pad_interface	access:public
connected	input/winxinput_joypad.c	/^   bool         connected;$/;"	m	struct:__anon89	file:	access:public
connection	apple/common/hidpad/apple_ps3_pad.c	/^   struct apple_pad_connection* connection;$/;"	m	struct:hidpad_ps3_data	typeref:struct:hidpad_ps3_data::apple_pad_connection	file:	access:public
connection	apple/common/hidpad/wiimote.h	/^      struct apple_pad_connection* connection;$/;"	m	struct:wiimote_t	typeref:struct:wiimote_t::apple_pad_connection	access:public
connector	ps3/rgl/include/export/RGL/rgl.h	/^   PSGLdeviceConnector connector;$/;"	m	struct:__anon72	access:public
console	general.h	/^   } console;$/;"	m	struct:global	typeref:struct:global::__anon242	access:public
constantPushBuffer	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int*        constantPushBuffer;$/;"	m	struct:_CGprogram	access:public
constantPushBufferPointers	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int **constantPushBufferPointers;$/;"	m	struct:_CGprogram	access:public
constantPushBufferWordSize	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         constantPushBufferWordSize;$/;"	m	struct:_CGprogram	access:public
constantTable	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int *constantTable;$/;"	m	struct:_CGprogramGroup	access:public
consttab	ps3/rgl/src/rgl_cg.h	/^   const char* consttab;$/;"	m	struct:__anon31	access:public
consttabSize	ps3/rgl/src/rgl_cg.h	/^   size_t consttabSize;$/;"	m	struct:__anon31	access:public
contact_id	blackberry-qnx/qnx_input.c	/^   int contact_id;$/;"	m	struct:touches	file:	access:public
containerid	ps3/ps3_input_osk.c	/^   sys_memory_container_t containerid;$/;"	m	struct:ps3_osk	file:	access:public
context	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	private final Context context;$/;"	f	class:IconAdapter	file:	access:private
context	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		private final Context context;$/;"	f	class:InstalledCoreInfoFragment.CoreInfoAdapter	file:	access:private
context	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final Context context;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
context	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private final Context context;$/;"	f	class:KeyBindPreference	file:	access:private
context	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private final Context context;$/;"	f	class:SeekbarPreference	file:	access:private
context	audio/pulse.c	/^   pa_context *context;$/;"	m	struct:__anon102	file:	access:public
context	input/rwebinput_input.c	/^   int context;$/;"	m	struct:rwebinput_input	file:	access:public
context_alive	libretro-test-gl/libretro-test.c	/^static bool context_alive;$/;"	v	file:
context_check_window_func	gfx/gl_common.h	49;"	d
context_destroy	libretro-test-gl/libretro-test.c	/^static void context_destroy(void)$/;"	f	file:	signature:(void)
context_destroy	libretro.h	/^   retro_hw_context_reset_t context_destroy; \/\/ A callback to be called before the context is destroyed. Resources can be deinitialized at this step. This can be set to NULL, in which resources will just be destroyed without any notification.$/;"	m	struct:retro_hw_render_callback	access:public
context_destroy_func	gfx/gl_common.h	42;"	d
context_get_video_size_func	gfx/gl_common.h	40;"	d
context_has_focus_func	gfx/gl_common.h	48;"	d
context_init_egl_image_buffer_func	gfx/gl_common.h	56;"	d
context_input_driver_func	gfx/gl_common.h	53;"	d
context_post_render_func	gfx/gl_common.h	46;"	d
context_reset	libretro-test-gl/libretro-test.c	/^static void context_reset(void)$/;"	f	file:	signature:(void)
context_reset	libretro.h	/^   retro_hw_context_reset_t context_reset; \/\/ Called when a context has been created or when it has been reset.$/;"	m	struct:retro_hw_render_callback	access:public
context_set_resize_func	gfx/gl_common.h	44;"	d
context_set_video_mode_func	gfx/gl_common.h	52;"	d
context_state_cb	audio/pulse.c	/^static void context_state_cb(pa_context *c, void *data)$/;"	f	file:	signature:(pa_context *c, void *data)
context_swap_buffers_func	gfx/gl_common.h	45;"	d
context_swap_interval_func	gfx/gl_common.h	47;"	d
context_translate_aspect_func	gfx/gl_common.h	43;"	d
context_type	libretro.h	/^   enum retro_hw_context_type context_type; \/\/ Which API to use. Set by libretro core.$/;"	m	struct:retro_hw_render_callback	typeref:enum:retro_hw_render_callback::retro_hw_context_type	access:public
context_update_window_title_func	gfx/gl_common.h	41;"	d
context_write_egl_image_func	gfx/gl_common.h	57;"	d
control0	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureControl0 control0;$/;"	m	struct:rglGcmTextureMethodParams	access:public
conv	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	conv;$/;"	m	struct:rglGcmTextureFilter	access:public
conv_0rgb1555_argb8888	gfx/scaler/pixconv.c	/^void conv_0rgb1555_argb8888(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_0rgb1555_argb8888	gfx/scaler/pixconv.h	/^void conv_0rgb1555_argb8888(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_0rgb1555_bgr24	gfx/scaler/pixconv.c	/^void conv_0rgb1555_bgr24(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_0rgb1555_bgr24	gfx/scaler/pixconv.h	/^void conv_0rgb1555_bgr24(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_0rgb1555_rgb565	gfx/scaler/pixconv.c	/^void conv_0rgb1555_rgb565(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_0rgb1555_rgb565	gfx/scaler/pixconv.h	/^void conv_0rgb1555_rgb565(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_argb8888_0rgb1555	gfx/scaler/pixconv.c	/^void conv_argb8888_0rgb1555(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_argb8888_0rgb1555	gfx/scaler/pixconv.h	/^void conv_argb8888_0rgb1555(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_argb8888_abgr8888	gfx/scaler/pixconv.c	/^void conv_argb8888_abgr8888(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_argb8888_abgr8888	gfx/scaler/pixconv.h	/^void conv_argb8888_abgr8888(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_argb8888_bgr24	gfx/scaler/pixconv.c	/^void conv_argb8888_bgr24(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_argb8888_bgr24	gfx/scaler/pixconv.h	/^void conv_argb8888_bgr24(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_argb8888_rgb565	gfx/scaler/pixconv.h	/^void conv_argb8888_rgb565(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_bgr24_argb8888	gfx/scaler/pixconv.c	/^void conv_bgr24_argb8888(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_bgr24_argb8888	gfx/scaler/pixconv.h	/^void conv_bgr24_argb8888(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_buffer	gfx/gl_common.h	/^   void *conv_buffer;$/;"	m	struct:gl	access:public
conv_copy	gfx/scaler/pixconv.c	/^void conv_copy(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_copy	gfx/scaler/pixconv.h	/^void conv_copy(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_frame	record/ffemu.c	/^   AVFrame *conv_frame;$/;"	m	struct:ff_video_info	file:	access:public
conv_frame_buf	record/ffemu.c	/^   uint8_t *conv_frame_buf;$/;"	m	struct:ff_video_info	file:	access:public
conv_outsamples	general.h	/^      int16_t *conv_outsamples;$/;"	m	struct:global::__anon235	access:public
conv_rgb565_0rgb1555	gfx/scaler/pixconv.c	/^void conv_rgb565_0rgb1555(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_rgb565_0rgb1555	gfx/scaler/pixconv.h	/^void conv_rgb565_0rgb1555(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_rgb565_argb8888	gfx/scaler/pixconv.c	/^void conv_rgb565_argb8888(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_rgb565_argb8888	gfx/scaler/pixconv.h	/^void conv_rgb565_argb8888(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_rgb565_bgr24	gfx/scaler/pixconv.c	/^void conv_rgb565_bgr24(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_rgb565_bgr24	gfx/scaler/pixconv.h	/^void conv_rgb565_bgr24(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
conv_utf8_utf32	gfx/context/x11_common.c	/^static size_t conv_utf8_utf32(uint32_t *out, size_t out_chars, const char *in, size_t in_size)$/;"	f	file:	signature:(uint32_t *out, size_t out_chars, const char *in, size_t in_size)
conv_yuyv_argb8888	gfx/scaler/pixconv.c	/^void conv_yuyv_argb8888(void *output_, const void *input_,$/;"	f	signature:(void *output_, const void *input_, int width, int height, int out_stride, int in_stride)
conv_yuyv_argb8888	gfx/scaler/pixconv.h	/^void conv_yuyv_argb8888(void *output, const void *input,$/;"	p	signature:(void *output, const void *input, int width, int height, int out_stride, int in_stride)
convert	tools/cg2glsl.py	/^def convert(source, dest):$/;"	f	access:public
convertNvToElfFreeBinaryShader	ps3/rgl/src/cg/cgnv2rt.h	/^int convertNvToElfFreeBinaryShader(void *binaryShader);$/;"	p	signature:(void *binaryShader)
convertNvToElfFreeBinaryShader	ps3/rgl/src/rgl_ps3_cg.cpp	/^int convertNvToElfFreeBinaryShader(void *binaryShader)$/;"	f	signature:(void *binaryShader)
convertNvToElfFromMemory	ps3/rgl/src/cg/cgnv2rt.h	/^int convertNvToElfFromMemory(const void *sourceData, size_t size, int endianness, int constTableOffset, void **binaryShader, int *binarySize, $/;"	p	signature:(const void *sourceData, size_t size, int endianness, int constTableOffset, void **binaryShader, int *binarySize, std::vector<char> &stringTable, std::vector<float> &defaultValues)
convertNvToElfFromMemory	ps3/rgl/src/rgl_ps3_cg.cpp	/^int convertNvToElfFromMemory(const void *sourceData, size_t size, int endianness, int constTableOffset, void **binaryShader, int *binarySize,$/;"	f	signature:(const void *sourceData, size_t size, int endianness, int constTableOffset, void **binaryShader, int *binarySize, std::vector<char> &stringTable, std::vector<float> &defaultValues)
convert_cgp	tools/cg2glsl.py	/^def convert_cgp(source, dest):$/;"	f	access:public
convert_endianness	ps3/rgl/src/cg/cgbutils.hpp	/^      template< typename T > inline T convert_endianness( const T value, unsigned char endianness )$/;"	f	namespace:cgc::bio	signature:( const T value, unsigned char endianness )
convert_geometry	gfx/d3d9/render_chain.cpp	/^void RenderChain::convert_geometry(const LinkInfo &info,$/;"	f	class:RenderChain	signature:(const LinkInfo &info, unsigned &out_width, unsigned &out_height, unsigned width, unsigned height, const D3DVIEWPORT9 &final_viewport)
convert_geometry	gfx/d3d9/render_chain.hpp	/^      static void convert_geometry(const LinkInfo &info,$/;"	p	class:RenderChain	access:public	signature:(const LinkInfo &info, unsigned &out_width, unsigned &out_height, unsigned width, unsigned height, const D3DVIEWPORT9 &final_viewport)
convert_path	tools/cg2glsl.py	/^def convert_path(source, source_dir, dest_dir, conv):$/;"	f	access:public
convert_texture16	gx/gx_video.c	/^static void convert_texture16(const uint32_t *_src, uint32_t *_dst,$/;"	f	file:	signature:(const uint32_t *_src, uint32_t *_dst, unsigned width, unsigned height, unsigned pitch)
convert_texture16_conv	gx/gx_video.c	/^static void convert_texture16_conv(const uint32_t *_src, uint32_t *_dst,$/;"	f	file:	signature:(const uint32_t *_src, uint32_t *_dst, unsigned width, unsigned height, unsigned pitch)
convert_texture32	gx/gx_video.c	/^static void convert_texture32(const uint32_t *_src, uint32_t *_dst,$/;"	f	file:	signature:(const uint32_t *_src, uint32_t *_dst, unsigned width, unsigned height, unsigned pitch)
coord	gfx/gl_common.h	/^   GLfloat coord[8];$/;"	m	struct:gl_tex_info	access:public
coord	gfx/shader_cg.c	/^   CGparameter coord;$/;"	m	struct:cg_fbo_params	file:	access:public
coords	gfx/gl_common.h	/^   struct gl_coords coords;$/;"	m	struct:gl	typeref:struct:gl::gl_coords	access:public
coords	gfx/lima_gfx.c	/^Point2 coords[] =$/;"	v
copy_argb_line	gfx/rpng/rpng.c	/^static void copy_argb_line(uint8_t *dst, const uint32_t *src, unsigned width)$/;"	f	file:	signature:(uint8_t *dst, const uint32_t *src, unsigned width)
copy_bgr24_line	gfx/rpng/rpng.c	/^static void copy_bgr24_line(uint8_t *dst, const uint8_t *src, unsigned width)$/;"	f	file:	signature:(uint8_t *dst, const uint8_t *src, unsigned width)
copy_fwd_rest_blocks_aligned	ps3/altivec_mem.h	/^static inline void copy_fwd_rest_blocks_aligned(word_t *d, const uint8_t *s, size_t blocks)$/;"	f	signature:(word_t *d, const uint8_t *s, size_t blocks)
copy_fwd_rest_blocks_unaligned	ps3/altivec_mem.h	/^static inline void copy_fwd_rest_blocks_unaligned(word_t *d, const uint8_t *s, int srcoffset, int sl, int sr, size_t blocks)$/;"	f	signature:(word_t *d, const uint8_t *s, int srcoffset, int sl, int sr, size_t blocks)
copy_fwd_rest_bytes	ps3/altivec_mem.h	/^static inline void copy_fwd_rest_bytes(uint8_t *d, const uint8_t *s, size_t len)$/;"	f	signature:(uint8_t *d, const uint8_t *s, size_t len)
copy_fwd_rest_words_aligned	ps3/altivec_mem.h	/^static inline void copy_fwd_rest_words_aligned(word_t *d, const word_t *s, size_t l)$/;"	f	signature:(word_t *d, const word_t *s, size_t l)
copy_fwd_rest_words_unaligned	ps3/altivec_mem.h	/^static inline void copy_fwd_rest_words_unaligned(word_t *d, const word_t *s, int sl, int sr, size_t l)$/;"	f	signature:(word_t *d, const word_t *s, int sl, int sr, size_t l)
copy_fwd_until_dst_simd_aligned	ps3/altivec_mem.h	/^static inline void copy_fwd_until_dst_simd_aligned(word_t *d, const word_t *s, $/;"	f	signature:(word_t *d, const word_t *s, int srcoffset4, size_t dstal, int sl, int sr)
copy_fwd_until_dst_word_aligned	ps3/altivec_mem.h	/^static inline int copy_fwd_until_dst_word_aligned(uint8_t *d, const uint8_t *s)$/;"	f	signature:(uint8_t *d, const uint8_t *s)
copy_glyph	gfx/fonts/gl_raster_font.c	/^static void copy_glyph(const struct font_output *head, const struct font_rect *geom, uint32_t *buffer, unsigned width, unsigned height)$/;"	f	file:	signature:(const struct font_output *head, const struct font_rect *geom, uint32_t *buffer, unsigned width, unsigned height)
copy_line_bw	gfx/rpng/rpng.c	/^static inline void copy_line_bw(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned depth)$/;"	f	file:	signature:(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned depth)
copy_line_gray_alpha	gfx/rpng/rpng.c	/^static inline void copy_line_gray_alpha(uint32_t *data, const uint8_t *decoded, unsigned width,$/;"	f	file:	signature:(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned bpp)
copy_line_plt	gfx/rpng/rpng.c	/^static inline void copy_line_plt(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned depth, const uint32_t *palette)$/;"	f	file:	signature:(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned depth, const uint32_t *palette)
copy_line_rgb	gfx/rpng/rpng.c	/^static inline void copy_line_rgb(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned bpp)$/;"	f	file:	signature:(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned bpp)
copy_line_rgba	gfx/rpng/rpng.c	/^static inline void copy_line_rgba(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned bpp)$/;"	f	file:	signature:(uint32_t *data, const uint8_t *decoded, unsigned width, unsigned bpp)
copy_swapped	gx/gx_audio.c	/^static inline void copy_swapped(uint32_t * restrict dst, const uint32_t * restrict src, size_t size)$/;"	f	file:	signature:(uint32_t * restrict dst, const uint32_t * restrict src, size_t size)
core	apple/iOS/menu.h	/^@property (nonatomic) NSString* core;$/;"	v
core	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString core;$/;"	m	class:RetroArch	access:private
coreChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void coreChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
coreDirectory	apple/OSX/platform.h	/^@property (nonatomic, copy) NSString* coreDirectory;      \/\/ e.g. \/Applications\/RetroArch.app\/modules$/;"	v
coreDirectory	apple/iOS/platform.h	/^@property (nonatomic) NSString* coreDirectory;      \/\/ e.g. \/Applications\/RetroArch.app\/modules$/;"	v
coreFrequency	ps3/sdk_defines.h	480;"	d
coreID	apple/iOS/menu.h	/^@property (copy) void (^action)(NSString* coreID);$/;"	v
coreInfo	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QVariantMap coreInfo;$/;"	m	class:RetroArch	access:private
coreList	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	char **coreList;$/;"	m	class:RetroArch	access:private
coreName	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String coreName;$/;"	f	class:HistoryWrapper	file:	access:private
coreName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String coreName;$/;"	f	class:ModuleWrapper	file:	access:private
corePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String corePath;$/;"	f	class:HistoryWrapper	file:	access:private
coreSelectedIndex	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int coreSelectedIndex;$/;"	m	class:RetroArch	access:private
coreSelection	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	DropDown *coreSelection;$/;"	m	class:RetroArch	access:private
core_config_path	apple/common/core_info_ext.c	/^static char core_config_path[PATH_MAX];$/;"	v	file:
core_context	gfx/gl_common.h	/^   bool core_context;$/;"	m	struct:gl	access:public
core_dir	console/rarch_console.h	/^   char core_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
core_info	frontend/menu/menu_common.h	/^   core_info_list_t *core_info;$/;"	m	struct:__anon25	access:public
core_info_does_support_any_file	core_info.c	/^bool core_info_does_support_any_file(const core_info_t *core, const struct string_list *list)$/;"	f	signature:(const core_info_t *core, const struct string_list *list)
core_info_does_support_any_file	core_info.h	/^bool core_info_does_support_any_file(const core_info_t *core, const struct string_list *list);$/;"	p	signature:(const core_info_t *core, const struct string_list *list)
core_info_does_support_file	core_info.c	/^bool core_info_does_support_file(const core_info_t *core, const char *path)$/;"	f	signature:(const core_info_t *core, const char *path)
core_info_does_support_file	core_info.h	/^bool core_info_does_support_file(const core_info_t *core, const char *path);$/;"	p	signature:(const core_info_t *core, const char *path)
core_info_firmware_cmp	core_info.c	/^static int core_info_firmware_cmp(const void *a_, const void *b_)$/;"	f	file:	signature:(const void *a_, const void *b_)
core_info_firmware_t	core_info.h	/^} core_info_firmware_t;$/;"	t	typeref:struct:__anon251
core_info_list	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	core_info_list_t *core_info_list;$/;"	m	class:RetroArch	access:private
core_info_list_free	core_info.c	/^void core_info_list_free(core_info_list_t *core_info_list)$/;"	f	signature:(core_info_list_t *core_info_list)
core_info_list_free	core_info.h	/^void core_info_list_free(core_info_list_t *core_info_list);$/;"	p	signature:(core_info_list_t *core_info_list)
core_info_list_get_all_extensions	core_info.c	/^const char *core_info_list_get_all_extensions(core_info_list_t *core_info_list)$/;"	f	signature:(core_info_list_t *core_info_list)
core_info_list_get_all_extensions	core_info.h	/^const char *core_info_list_get_all_extensions(core_info_list_t *core_info_list);$/;"	p	signature:(core_info_list_t *core_info_list)
core_info_list_get_display_name	core_info.c	/^bool core_info_list_get_display_name(core_info_list_t *core_info_list, const char *path, char *buf, size_t size)$/;"	f	signature:(core_info_list_t *core_info_list, const char *path, char *buf, size_t size)
core_info_list_get_display_name	core_info.h	/^bool core_info_list_get_display_name(core_info_list_t *core_info_list, const char *path, char *buf, size_t size);$/;"	p	signature:(core_info_list_t *core_info_list, const char *path, char *buf, size_t size)
core_info_list_get_missing_firmware	core_info.c	/^void core_info_list_get_missing_firmware(core_info_list_t *core_info_list,$/;"	f	signature:(core_info_list_t *core_info_list, const char *core, const char *systemdir, const core_info_firmware_t **firmware, size_t *num_firmware)
core_info_list_get_missing_firmware	core_info.h	/^void core_info_list_get_missing_firmware(core_info_list_t *core_info_list,$/;"	p	signature:(core_info_list_t *core_info_list, const char *core, const char *systemdir, const core_info_firmware_t **firmware, size_t *num_firmware)
core_info_list_get_supported_cores	core_info.c	/^void core_info_list_get_supported_cores(core_info_list_t *core_info_list, const char *path,$/;"	f	signature:(core_info_list_t *core_info_list, const char *path, const core_info_t **infos, size_t *num_infos)
core_info_list_get_supported_cores	core_info.h	/^void core_info_list_get_supported_cores(core_info_list_t *core_info_list, const char *path,$/;"	p	signature:(core_info_list_t *core_info_list, const char *path, const core_info_t **infos, size_t *num_infos)
core_info_list_new	core_info.c	/^core_info_list_t *core_info_list_new(const char *modules_path)$/;"	f	signature:(const char *modules_path)
core_info_list_new	core_info.h	/^core_info_list_t *core_info_list_new(const char *modules_path);$/;"	p	signature:(const char *modules_path)
core_info_list_num_info_files	core_info.c	/^size_t core_info_list_num_info_files(core_info_list_t *core_info_list)$/;"	f	signature:(core_info_list_t *core_info_list)
core_info_list_num_info_files	core_info.h	/^size_t core_info_list_num_info_files(core_info_list_t *core_info_list);$/;"	p	signature:(core_info_list_t *core_info_list)
core_info_list_resolve_all_extensions	core_info.c	/^static void core_info_list_resolve_all_extensions(core_info_list_t *core_info_list)$/;"	f	file:	signature:(core_info_list_t *core_info_list)
core_info_list_resolve_all_firmware	core_info.c	/^static void core_info_list_resolve_all_firmware(core_info_list_t *core_info_list)$/;"	f	file:	signature:(core_info_list_t *core_info_list)
core_info_list_t	core_info.h	/^} core_info_list_t;$/;"	t	typeref:struct:__anon253
core_info_qsort_cmp	core_info.c	/^static int core_info_qsort_cmp(const void *a_, const void *b_)$/;"	f	file:	signature:(const void *a_, const void *b_)
core_info_t	core_info.h	/^} core_info_t;$/;"	t	typeref:struct:__anon252
core_info_tmp_list	core_info.c	/^static const struct string_list *core_info_tmp_list;$/;"	v	typeref:struct:string_list	file:
core_info_tmp_path	core_info.c	/^static const char *core_info_tmp_path;$/;"	v	file:
core_name	frontend/menu/history.c	/^   char *core_name;$/;"	m	struct:rom_history_entry	file:	access:public
core_option	core_options.c	/^struct core_option$/;"	s	file:
core_option::desc	core_options.c	/^   char *desc;$/;"	m	struct:core_option	file:	access:public
core_option::index	core_options.c	/^   size_t index;$/;"	m	struct:core_option	file:	access:public
core_option::key	core_options.c	/^   char *key;$/;"	m	struct:core_option	file:	access:public
core_option::vals	core_options.c	/^   struct string_list *vals;$/;"	m	struct:core_option	typeref:struct:core_option::string_list	file:	access:public
core_option_flush	core_options.c	/^void core_option_flush(core_option_manager_t *opt)$/;"	f	signature:(core_option_manager_t *opt)
core_option_flush	core_options.h	/^void core_option_flush(core_option_manager_t *opt);$/;"	p	signature:(core_option_manager_t *opt)
core_option_free	core_options.c	/^void core_option_free(core_option_manager_t *opt)$/;"	f	signature:(core_option_manager_t *opt)
core_option_free	core_options.h	/^void core_option_free(core_option_manager_t *opt);$/;"	p	signature:(core_option_manager_t *opt)
core_option_get	core_options.c	/^void core_option_get(core_option_manager_t *opt, struct retro_variable *var)$/;"	f	signature:(core_option_manager_t *opt, struct retro_variable *var)
core_option_get	core_options.h	/^void core_option_get(core_option_manager_t *opt, struct retro_variable *var);$/;"	p	signature:(core_option_manager_t *opt, struct retro_variable *var)
core_option_get_desc	core_options.c	/^const char *core_option_get_desc(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_get_desc	core_options.h	/^const char *core_option_get_desc(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_get_val	core_options.c	/^const char *core_option_get_val(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_get_val	core_options.h	/^const char *core_option_get_val(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_get_vals	core_options.c	/^struct string_list *core_option_get_vals(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_get_vals	core_options.h	/^struct string_list *core_option_get_vals(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_manager	core_options.c	/^struct core_option_manager$/;"	s	file:
core_option_manager::conf	core_options.c	/^   config_file_t *conf;$/;"	m	struct:core_option_manager	file:	access:public
core_option_manager::conf_path	core_options.c	/^   char conf_path[PATH_MAX];$/;"	m	struct:core_option_manager	file:	access:public
core_option_manager::opts	core_options.c	/^   struct core_option *opts;$/;"	m	struct:core_option_manager	typeref:struct:core_option_manager::core_option	file:	access:public
core_option_manager::size	core_options.c	/^   size_t size;$/;"	m	struct:core_option_manager	file:	access:public
core_option_manager::updated	core_options.c	/^   bool updated;$/;"	m	struct:core_option_manager	file:	access:public
core_option_manager_t	core_options.h	/^typedef struct core_option_manager core_option_manager_t;$/;"	t	typeref:struct:core_option_manager
core_option_new	core_options.c	/^core_option_manager_t *core_option_new(const char *conf_path, const struct retro_variable *vars)$/;"	f	signature:(const char *conf_path, const struct retro_variable *vars)
core_option_new	core_options.h	/^core_option_manager_t *core_option_new(const char *conf_path, const struct retro_variable *vars);$/;"	p	signature:(const char *conf_path, const struct retro_variable *vars)
core_option_next	core_options.c	/^void core_option_next(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_next	core_options.h	/^void core_option_next(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_prev	core_options.c	/^void core_option_prev(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_prev	core_options.h	/^void core_option_prev(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_set_default	core_options.c	/^void core_option_set_default(core_option_manager_t *opt, size_t index)$/;"	f	signature:(core_option_manager_t *opt, size_t index)
core_option_set_default	core_options.h	/^void core_option_set_default(core_option_manager_t *opt, size_t index);$/;"	p	signature:(core_option_manager_t *opt, size_t index)
core_option_set_val	core_options.c	/^void core_option_set_val(core_option_manager_t *opt, size_t index, size_t val_index)$/;"	f	signature:(core_option_manager_t *opt, size_t index, size_t val_index)
core_option_set_val	core_options.h	/^void core_option_set_val(core_option_manager_t *opt, size_t index, size_t val_index);$/;"	p	signature:(core_option_manager_t *opt, size_t index, size_t val_index)
core_option_size	core_options.c	/^size_t core_option_size(core_option_manager_t *opt)$/;"	f	signature:(core_option_manager_t *opt)
core_option_size	core_options.h	/^size_t core_option_size(core_option_manager_t *opt);$/;"	p	signature:(core_option_manager_t *opt)
core_option_updated	core_options.c	/^bool core_option_updated(core_option_manager_t *opt)$/;"	f	signature:(core_option_manager_t *opt)
core_option_updated	core_options.h	/^bool core_option_updated(core_option_manager_t *opt);$/;"	p	signature:(core_option_manager_t *opt)
core_options	general.h	/^      core_option_manager_t *core_options;$/;"	m	struct:global::__anon234	access:public
core_options_path	general.h	/^   char core_options_path[PATH_MAX];$/;"	m	struct:settings	access:public
core_path	frontend/menu/history.c	/^   char *core_path;$/;"	m	struct:rom_history_entry	file:	access:public
coreaudio	audio/coreaudio.c	/^typedef struct coreaudio$/;"	s	file:
coreaudio::buffer	audio/coreaudio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::buffer_size	audio/coreaudio.c	/^   size_t buffer_size;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::cond	audio/coreaudio.c	/^   pthread_cond_t cond;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::dev	audio/coreaudio.c	/^   AudioComponentInstance dev;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::dev_alive	audio/coreaudio.c	/^   bool dev_alive;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::lock	audio/coreaudio.c	/^   pthread_mutex_t lock;$/;"	m	struct:coreaudio	file:	access:public
coreaudio::nonblock	audio/coreaudio.c	/^   bool nonblock;$/;"	m	struct:coreaudio	file:	access:public
coreaudio_buffer_size	audio/coreaudio.c	/^static size_t coreaudio_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
coreaudio_free	audio/coreaudio.c	/^static void coreaudio_free(void *data)$/;"	f	file:	signature:(void *data)
coreaudio_init	audio/coreaudio.c	/^static void *coreaudio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
coreaudio_interrupt_listener	audio/coreaudio.c	/^static void coreaudio_interrupt_listener(void *data, UInt32 interrupt_state)$/;"	f	file:	signature:(void *data, UInt32 interrupt_state)
coreaudio_set_nonblock_state	audio/coreaudio.c	/^static void coreaudio_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
coreaudio_start	audio/coreaudio.c	/^static bool coreaudio_start(void *data)$/;"	f	file:	signature:(void *data)
coreaudio_stop	audio/coreaudio.c	/^static bool coreaudio_stop(void *data)$/;"	f	file:	signature:(void *data)
coreaudio_t	audio/coreaudio.c	/^} coreaudio_t;$/;"	t	typeref:struct:coreaudio	file:
coreaudio_use_float	audio/coreaudio.c	/^static bool coreaudio_use_float(void *data)$/;"	f	file:	signature:(void *data)
coreaudio_write	audio/coreaudio.c	/^static ssize_t coreaudio_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
coreaudio_write_avail	audio/coreaudio.c	/^static size_t coreaudio_write_avail(void *data)$/;"	f	file:	signature:(void *data)
count	core_info.h	/^   size_t count;$/;"	m	struct:__anon253	access:public
count	emscripten/library_rwebaudio.js	/^      var count = 0;$/;"	v
count	general.h	/^            unsigned count;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
count	ps3/rgl/include/RGL/Base.h	/^      unsigned int count;$/;"	m	class:RGL::Vector	access:private
count_sad	gfx/rpng/rpng.c	/^static unsigned count_sad(const uint8_t *data, size_t size)$/;"	f	file:	signature:(const uint8_t *data, size_t size)
cpCLreg	gx/gx_video_inl.h	/^	u16 cpCLreg;$/;"	m	struct:__gx_regdef	access:public
cpCRreg	gx/gx_video_inl.h	/^	u16 cpCRreg;$/;"	m	struct:__gx_regdef	access:public
cpPerfMode	gx/gx_video_inl.h	/^	u32 cpPerfMode;$/;"	m	struct:__gx_regdef	access:public
cpSRreg	gx/gx_video_inl.h	/^	u16 cpSRreg;$/;"	m	struct:__gx_regdef	access:public
cpu_read_file	performance/performance_android.c	/^cpu_read_file(const char*  pathname, char*  buffer, size_t  buffsize)$/;"	f	file:	signature:(const char* pathname, char* buffer, size_t buffsize)
cpu_x86_cpuid	performance/performance_android.c	/^static __inline__ void cpu_x86_cpuid(int func, int values[4])$/;"	f	file:	signature:(int func, int values[4])
cpulist_parse	performance/performance_android.c	/^static void cpulist_parse(CpuList* list, const char* line, int line_len)$/;"	f	file:	signature:(CpuList* list, const char* line, int line_len)
cpulist_read_from	performance/performance_android.c	/^cpulist_read_from(CpuList* list, const char* filename)$/;"	f	file:	signature:(CpuList* list, const char* filename)
crc	deps/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
crc	deps/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
crc32	deps/miniz/miniz.c	/^unsigned crc32(unsigned crc, const void *ptr_tmp, size_t buf_len)$/;"	f	signature:(unsigned crc, const void *ptr_tmp, size_t buf_len)
crc32	deps/miniz/zlib.h	/^unsigned crc32(unsigned crc, const void *ptr, size_t buf_len);$/;"	p	signature:(unsigned crc, const void *ptr, size_t buf_len)
crc32	deps/miniz/zlib.h	393;"	d
crc32	deps/minizip/unzip.c	/^    uLong crc32;                \/* crc32 of all data uncompressed *\/$/;"	m	struct:__anon110	file:	access:public
crc32_adjust	hash.c	/^uint32_t crc32_adjust(uint32_t crc32, uint8_t input)$/;"	f	signature:(uint32_t crc32, uint8_t input)
crc32_adjust	hash.h	/^static inline uint32_t crc32_adjust(uint32_t crc, uint8_t data)$/;"	f	signature:(uint32_t crc, uint8_t data)
crc32_adjust	hash.h	/^uint32_t crc32_adjust(uint32_t crc, uint8_t data);$/;"	p	signature:(uint32_t crc, uint8_t data)
crc32_calculate	hash.c	/^uint32_t crc32_calculate(const uint8_t *data, size_t length)$/;"	f	signature:(const uint8_t *data, size_t length)
crc32_calculate	hash.h	/^static inline uint32_t crc32_calculate(const uint8_t *data, size_t length)$/;"	f	signature:(const uint8_t *data, size_t length)
crc32_calculate	hash.h	/^uint32_t crc32_calculate(const uint8_t *data, size_t length);$/;"	p	signature:(const uint8_t *data, size_t length)
crc32_table	hash.c	/^static const uint32_t crc32_table[256] = {$/;"	v	file:
crc32_wait	deps/minizip/unzip.c	/^    uLong crc32_wait;           \/* crc32 we must obtain after decompress all *\/$/;"	m	struct:__anon110	file:	access:public
crc8_calc	apple/iOS/bluetooth/btstack/utils.h	/^uint8_t crc8_calc(uint8_t *data, uint16_t len);$/;"	p	signature:(uint8_t *data, uint16_t len)
crc8_check	apple/iOS/bluetooth/btstack/utils.h	/^uint8_t crc8_check(uint8_t *data, uint16_t len, uint8_t check_sum);$/;"	p	signature:(uint8_t *data, uint16_t len, uint8_t check_sum)
create	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpaceCreateFunction create;$/;"	m	struct:rglTexNameSpace	access:public
create_config_header	qb/qb.libs.sh	/^create_config_header()$/;"	f
create_config_make	qb/qb.libs.sh	/^create_config_make()$/;"	f
create_first_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::create_first_pass(const LinkInfo &info, PixelFormat fmt)$/;"	f	class:RenderChain	signature:(const LinkInfo &info, PixelFormat fmt)
create_first_pass	gfx/d3d9/render_chain.hpp	/^      void create_first_pass(const LinkInfo &info, PixelFormat fmt);$/;"	p	class:RenderChain	access:private	signature:(const LinkInfo &info, PixelFormat fmt)
create_gl_context	gfx/context/wgl_ctx.c	/^static void create_gl_context(HWND hwnd)$/;"	f	file:	signature:(HWND hwnd)
crit	audio/dsound.c	/^   CRITICAL_SECTION crit;$/;"	m	struct:dsound	file:	access:public
crop_overscan	config.def.h	/^static const bool crop_overscan = true;$/;"	v
crop_overscan	general.h	/^      bool crop_overscan;$/;"	m	struct:settings::__anon227	access:public
crypt	ps3/ps3py/pkg.py	/^def crypt(key, inbuf, length):$/;"	f	access:public
cryptMethods	ps3/ps3py/crypt.c	/^static PyMethodDef cryptMethods[] = {$/;"	v	file:
cs_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_cs_mode_t cs_mode; \/* color space *\/$/;"	m	struct:__anon186	access:public
ctl_socket	audio/rsound.h	/^         volatile int ctl_socket;$/;"	m	struct:rsound::__anon104	access:public
ctx	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private FragmentActivity ctx;$/;"	f	class:HistorySelection	file:	access:private
ctx	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private Context ctx;$/;"	f	class:MainMenuFragment	file:	access:private
ctx	audio/openal.c	/^   ALCcontext *ctx;$/;"	m	struct:al	file:	access:public
ctx	ps3/rgl/include/Cg/CgProgramGroup.h	/^   CGcontext ctx;$/;"	m	struct:_CGprogramGroup	access:public
ctx	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmContextData ctx;$/;"	m	struct:rglGcmFifo	access:public
ctx	record/ffemu.c	/^   AVFormatContext *ctx;$/;"	m	struct:ff_muxer_info	file:	access:public
ctx_driver	gfx/gl_common.h	/^   const gfx_ctx_driver_t *ctx_driver;$/;"	m	struct:gl	access:public
ctx_driver	xdk/xdk_d3d.h	/^   const gfx_ctx_driver_t *ctx_driver;$/;"	m	struct:xdk_d3d_video	access:public
curD3D	gfx/d3d9/d3d9.cpp	/^   static D3DVideo *curD3D = nullptr;$/;"	m	namespace:Callback	file:
cur_file_info	deps/minizip/unzip.c	/^    unz_file_info cur_file_info; \/* public info about the current file in zip*\/$/;"	m	struct:__anon111	file:	access:public
cur_file_info_internal	deps/minizip/unzip.c	/^    unz_file_info_internal cur_file_info_internal; \/* private info about it*\/$/;"	m	struct:__anon111	file:	access:public
cur_mon_id	gfx/d3d9/d3d9.cpp	/^   static unsigned cur_mon_id;$/;"	m	namespace:Monitor	file:
cur_page	gfx/omap_gfx.c	/^  omapfb_page_t *cur_page;$/;"	m	struct:omapfb_data	file:	access:public
current	general.h	/^            rarch_resolution_t current;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
currentParameterName	ps3/rgl/include/Cg/CgCommon.h	/^   char currentParameterName[128];$/;"	m	struct:_CGcontext	access:public
currentParameterValue	ps3/rgl/include/Cg/CgCommon.h	/^   double currentParameterValue[16];$/;"	m	struct:_CGcontext	access:public
currentTexture	ps3/rgl/include/RGL/Types.h	/^      rglTexture* currentTexture;$/;"	m	struct:__anon65	access:public
current_accuracy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_accuracy  = 0.0;$/;"	f	class:RetroActivityLocation	access:default
current_file_ok	deps/minizip/unzip.c	/^    uLong current_file_ok;      \/* flag about the usability of the current file*\/$/;"	m	struct:__anon111	file:	access:public
current_ime	frontend/platform/platform_android.h	/^   char current_ime[PATH_MAX];$/;"	m	struct:android_app	access:public
current_latitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_latitude  = 0.0;$/;"	f	class:RetroActivityLocation	access:default
current_longitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	double current_longitude = 0.0;$/;"	f	class:RetroActivityLocation	access:default
current_menu	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ current_menu;$/;"	v
current_msg	driver.h	/^   const char *current_msg;$/;"	m	struct:driver	access:public
current_pad	frontend/menu/menu_common.h	/^   unsigned current_pad;$/;"	m	struct:__anon25	access:public
current_state	gfx/omap_gfx.c	/^  omapfb_state_t* current_state;$/;"	m	struct:omapfb_data	file:	access:public
custom_vp	general.h	/^            rarch_viewport_t custom_vp;$/;"	m	struct:global::__anon242::__anon243::__anon245	access:public
d3d9_alive	gfx/d3d9/d3d9.cpp	/^static bool d3d9_alive(void *data)$/;"	f	file:	signature:(void *data)
d3d9_apply_state_changes	gfx/d3d9/d3d9.cpp	/^static void d3d9_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
d3d9_focus	gfx/d3d9/d3d9.cpp	/^static bool d3d9_focus(void *data)$/;"	f	file:	signature:(void *data)
d3d9_frame	gfx/d3d9/d3d9.cpp	/^static bool d3d9_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
d3d9_free	gfx/d3d9/d3d9.cpp	/^static void d3d9_free(void *data)$/;"	f	file:	signature:(void *data)
d3d9_get_overlay_interface	gfx/d3d9/d3d9.cpp	/^static void d3d9_get_overlay_interface(void *data, const video_overlay_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_overlay_interface_t **iface)
d3d9_get_poke_interface	gfx/d3d9/d3d9.cpp	/^static void d3d9_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
d3d9_get_poke_interface	gfx/d3d9/d3d9.cpp	/^static void d3d9_get_poke_interface(void *data, const video_poke_interface_t **iface);$/;"	p	file:	signature:(void *data, const video_poke_interface_t **iface)
d3d9_init	gfx/d3d9/d3d9.cpp	/^static void *d3d9_init(const video_info_t *info, const input_driver_t **input,$/;"	f	file:	signature:(const video_info_t *info, const input_driver_t **input, void **input_data)
d3d9_overlay_enable	gfx/d3d9/d3d9.cpp	/^static void d3d9_overlay_enable(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
d3d9_overlay_full_screen	gfx/d3d9/d3d9.cpp	/^static void d3d9_overlay_full_screen(void *data, bool enable)$/;"	f	file:	signature:(void *data, bool enable)
d3d9_overlay_interface	gfx/d3d9/d3d9.cpp	/^static const video_overlay_interface_t d3d9_overlay_interface = {$/;"	v	file:
d3d9_overlay_load	gfx/d3d9/d3d9.cpp	/^static bool d3d9_overlay_load(void *data, const video_overlay_image *images, unsigned num_images)$/;"	f	file:	signature:(void *data, const video_overlay_image *images, unsigned num_images)
d3d9_overlay_set_alpha	gfx/d3d9/d3d9.cpp	/^static void d3d9_overlay_set_alpha(void *data, unsigned index, float mod)$/;"	f	file:	signature:(void *data, unsigned index, float mod)
d3d9_overlay_tex_geom	gfx/d3d9/d3d9.cpp	/^static void d3d9_overlay_tex_geom(void *data,$/;"	f	file:	signature:(void *data, unsigned index, float x, float y, float w, float h)
d3d9_overlay_vertex_geom	gfx/d3d9/d3d9.cpp	/^static void d3d9_overlay_vertex_geom(void *data,$/;"	f	file:	signature:(void *data, unsigned index, float x, float y, float w, float h)
d3d9_poke_interface	gfx/d3d9/d3d9.cpp	/^static const video_poke_interface_t d3d9_poke_interface = {$/;"	v	file:
d3d9_read_viewport	gfx/d3d9/d3d9.cpp	/^static bool d3d9_read_viewport(void *data, uint8_t *buffer)$/;"	f	file:	signature:(void *data, uint8_t *buffer)
d3d9_set_aspect_ratio	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
d3d9_set_nonblock_state	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
d3d9_set_osd_msg	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_osd_msg(void *data, const char *msg, void *userdata)$/;"	f	file:	signature:(void *data, const char *msg, void *userdata)
d3d9_set_rgui_texture_enable	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_rgui_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
d3d9_set_rgui_texture_frame	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_rgui_texture_frame(void *data,$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
d3d9_set_rotation	gfx/d3d9/d3d9.cpp	/^static void d3d9_set_rotation(void *data, unsigned rot)$/;"	f	file:	signature:(void *data, unsigned rot)
d3d9_set_shader	gfx/d3d9/d3d9.cpp	/^static bool d3d9_set_shader(void *data, enum rarch_shader_type type, const char *path)$/;"	f	file:	signature:(void *data, enum rarch_shader_type type, const char *path)
d3d9_show_mouse	gfx/d3d9/d3d9.cpp	/^static void d3d9_show_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
d3d9_viewport_info	gfx/d3d9/d3d9.cpp	/^static void d3d9_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
d3d_device	xdk/xdk_d3d.h	/^   LPDIRECT3D d3d_device;$/;"	m	struct:xdk_d3d_video	access:public
d3d_device_ptr	gfx/shader_hlsl.c	/^static IDirect3DDevice9 *d3d_device_ptr;$/;"	v	file:
d3d_err	gfx/d3d9/d3d9.cpp	/^   static HRESULT d3d_err;$/;"	m	namespace:Callback	file:
d3d_font_backends	gfx/fonts/d3d_font.c	/^static const d3d_font_renderer_t *d3d_font_backends[] = {$/;"	v	file:
d3d_font_init_first	gfx/fonts/d3d_font.c	/^const d3d_font_renderer_t *d3d_font_init_first(void *data, const char *font_path, unsigned font_size)$/;"	f	signature:(void *data, const char *font_path, unsigned font_size)
d3d_font_init_first	gfx/fonts/d3d_font.h	/^const d3d_font_renderer_t *d3d_font_init_first(void *data,$/;"	p	signature:(void *data, const char *font_path, unsigned font_size)
d3d_font_renderer	gfx/fonts/d3d_font.h	/^typedef struct d3d_font_renderer$/;"	s
d3d_font_renderer::deinit	gfx/fonts/d3d_font.h	/^   void (*deinit)(void *data);$/;"	m	struct:d3d_font_renderer	access:public
d3d_font_renderer::ident	gfx/fonts/d3d_font.h	/^   const char *ident;$/;"	m	struct:d3d_font_renderer	access:public
d3d_font_renderer::init	gfx/fonts/d3d_font.h	/^   bool (*init)(void *data, const char *font_path, unsigned font_size);$/;"	m	struct:d3d_font_renderer	access:public
d3d_font_renderer::render_msg	gfx/fonts/d3d_font.h	/^   void (*render_msg)(void *data, const char *msg, void *parms);$/;"	m	struct:d3d_font_renderer	access:public
d3d_font_renderer_t	gfx/fonts/d3d_font.h	/^} d3d_font_renderer_t;$/;"	t	typeref:struct:d3d_font_renderer
d3d_get_poke_interface	xdk/xdk_d3d.cpp	/^static void d3d_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
d3d_poke_interface	xdk/xdk_d3d.cpp	/^static const video_poke_interface_t d3d_poke_interface = {$/;"	v	file:
d3d_render_device	xdk/xdk_d3d.h	/^   LPDIRECT3DDEVICE d3d_render_device;$/;"	m	struct:xdk_d3d_video	access:public
d3d_xbox360_font	gfx/fonts/xdk360_fonts.cpp	/^const d3d_font_renderer_t d3d_xbox360_font = {$/;"	v
d3d_xdk1_font	gfx/fonts/xdk1_xfonts.c	/^const d3d_font_renderer_t d3d_xdk1_font = {$/;"	v
d_ptr	ps3/rgl/src/cg/cgbdefs.hpp	/^        unsigned int d_ptr;$/;"	m	union:Elf32_Dyn::__anon34	access:public
d_ptr	wii/app_booter/elf_abi.h	/^		Elf32_Addr	d_ptr;	\/* program virtual address *\/$/;"	m	union:__anon7::__anon8	access:public
d_tag	ps3/rgl/src/cg/cgbdefs.hpp	/^    signed int d_tag;$/;"	m	struct:Elf32_Dyn	access:public
d_tag	wii/app_booter/elf_abi.h	/^	Elf32_Sword	d_tag;		\/* controls meaning of d_val *\/$/;"	m	struct:__anon7	access:public
d_un	ps3/rgl/src/cg/cgbdefs.hpp	/^    } d_un;$/;"	m	struct:Elf32_Dyn	typeref:union:Elf32_Dyn::__anon34	access:public
d_un	wii/app_booter/elf_abi.h	/^	} d_un;$/;"	m	struct:__anon7	typeref:union:__anon7::__anon8	access:public
d_val	ps3/rgl/src/cg/cgbdefs.hpp	/^        unsigned int d_val;$/;"	m	union:Elf32_Dyn::__anon34	access:public
d_val	wii/app_booter/elf_abi.h	/^		Elf32_Word	d_val;	\/* Multiple meanings - see d_tag *\/$/;"	m	union:__anon7::__anon8	access:public
data	apple/OSX/hid_pad.c	/^   uint8_t data[2048];$/;"	m	struct:apple_pad_connection	file:	access:public
data	apple/common/apple_joypad.c	/^   void* data;$/;"	m	struct:__anon156	file:	access:public
data	apple/common/hidpad/apple_ps3_pad.c	/^   uint8_t data[512];$/;"	m	struct:hidpad_ps3_data	file:	access:public
data	compat/rxml/rxml.h	/^   char *data;$/;"	m	struct:rxml_node	access:public
data	core_info.h	/^   config_file_t *data;$/;"	m	struct:__anon252	access:public
data	file_extract.c	/^   const uint8_t *(*data)(void *handle);$/;"	m	struct:zlib_file_backend	file:	access:public
data	file_extract.c	/^   void *data;$/;"	m	struct:__anon108	file:	access:public
data	file_extract.c	/^   void *data;$/;"	m	struct:__anon109	file:	access:public
data	file_path.h	/^   char *data;$/;"	m	struct:string_list_elem	access:public
data	general.h	/^      const void *data;$/;"	m	struct:global::__anon240	access:public
data	general.h	/^      float *data;$/;"	m	struct:global::__anon235	access:public
data	gfx/math/matrix.h	/^   float data[16];$/;"	m	struct:math_matrix	access:public
data	gfx/math/matrix_3x3.h	/^   float data[9];$/;"	m	struct:math_matrix_3x3	access:public
data	gfx/rpng/rpng.c	/^   uint8_t *data;$/;"	m	struct:idat_buffer	file:	access:public
data	gfx/rpng/rpng.c	/^   uint8_t *data;$/;"	m	struct:png_chunk	file:	access:public
data	gfx/thread_wrapper.c	/^         const struct video_overlay_image *data;$/;"	m	struct:thread_video::__anon215::__anon219	typeref:struct:thread_video::__anon215::__anon219::video_overlay_image	file:	access:public
data	gx/gx_audio.c	/^   uint32_t data[BLOCKS][CHUNK_FRAMES];$/;"	m	struct:__anon247	file:	access:public
data	gx/gx_video.c	/^   uint32_t *data; \/\/ needs to be resizable$/;"	m	struct:__anon249	file:	access:public
data	gx/gx_video.c	/^   uint32_t data[240 * 200];$/;"	m	struct:__anon250	file:	access:public
data	libretro.h	/^   const void *data;       \/\/ Memory buffer of loaded game. Will be NULL if need_fullpath was set.$/;"	m	struct:retro_game_info	access:public
data	miscellaneous.h	/^   uint32_t data[8];$/;"	m	struct:__anon139	access:public
data	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char data[1];$/;"	m	struct:CgBinaryProgram	access:public
data	ps3/rgl/include/RGL/Types.h	/^      char *data;$/;"	m	struct:rglImage_	access:public
data	ps3/rgl/include/RGL/Types.h	/^      void* data;$/;"	m	struct:__anon62	access:public
data	ps3/rgl/include/RGL/Types.h	/^      void** data;$/;"	m	struct:rglNameSpace	access:public
data	ps3/rgl/include/RGL/Types.h	/^      void** data;$/;"	m	struct:rglTexNameSpace	access:public
data	ps3/rgl/src/libelf/readelf.h	/^      char* data;$/;"	m	struct:_ELF_section_t	access:public
data	ps3/rgl/src/libelf/readelf.h	/^      unsigned char* data;$/;"	m	struct:_ELF_segment_t	access:public
data	record/ffemu.h	/^   const void *data;$/;"	m	struct:ffemu_audio_data	access:public
data	record/ffemu.h	/^   const void *data;$/;"	m	struct:ffemu_video_data	access:public
dataId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dataId;		\/\/ id to get address and offset$/;"	m	struct:__anon49	access:public
dataIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dataIdOffset;$/;"	m	struct:__anon49	access:public
dataState	ps3/rgl/include/RGL/Types.h	/^      GLenum dataState;	\/\/ valid data location (see enum above)$/;"	m	struct:rglImage_	access:public
data_in	audio/resampler.h	/^   const float *data_in;$/;"	m	struct:resampler_data	access:public
data_out	audio/resampler.h	/^   float *data_out;$/;"	m	struct:resampler_data	access:public
data_pos	wii/app_booter/dolloader.c	/^	u32 data_pos[11];$/;"	m	struct:_dolheader	file:	access:public
data_ptr	general.h	/^      size_t data_ptr;$/;"	m	struct:global::__anon235	access:public
data_size	wii/app_booter/dolloader.c	/^	u32 data_size[11];$/;"	m	struct:_dolheader	file:	access:public
data_source	apple/iOS/bluetooth/btstack/run_loop.h	/^typedef struct data_source {$/;"	s
data_source::fd	apple/iOS/bluetooth/btstack/run_loop.h	/^    int  fd;                                 \/\/ <-- file descriptor to watch or 0$/;"	m	struct:data_source	access:public
data_source::item	apple/iOS/bluetooth/btstack/run_loop.h	/^    linked_item_t item;$/;"	m	struct:data_source	access:public
data_source::process	apple/iOS/bluetooth/btstack/run_loop.h	/^    int  (*process)(struct data_source *ds); \/\/ <-- do processing$/;"	m	struct:data_source	access:public
data_source_t	apple/iOS/bluetooth/btstack/run_loop.h	/^} data_source_t;$/;"	t	typeref:struct:data_source
data_start	wii/app_booter/dolloader.c	/^	u32 data_start[11];$/;"	m	struct:_dolheader	file:	access:public
data_type	deps/miniz/zlib.h	/^  int data_type;                    \/\/ data_type (unused)$/;"	m	struct:mz_stream_s	access:public
db_to_gain	general.h	/^static inline float db_to_gain(float db)$/;"	f	signature:(float db)
de_add_data	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_add_data( uint8_t *seq, de_type_t type, uint16_t size, uint8_t *data);$/;"	p	signature:( uint8_t *seq, de_type_t type, uint16_t size, uint8_t *data)
de_add_number	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_add_number(uint8_t *seq, de_type_t type, de_size_t size, uint32_t value);$/;"	p	signature:(uint8_t *seq, de_type_t type, de_size_t size, uint32_t value)
de_add_uuid128	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_add_uuid128(uint8_t * seq, uint8_t * uuid);$/;"	p	signature:(uint8_t * seq, uint8_t * uuid)
de_create_sequence	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_create_sequence(uint8_t *header);$/;"	p	signature:(uint8_t *header)
de_dump_data_element	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_dump_data_element(uint8_t * record);$/;"	p	signature:(uint8_t * record)
de_get_data_size	apple/iOS/bluetooth/btstack/sdp_util.h	/^int de_get_data_size(uint8_t * header);$/;"	p	signature:(uint8_t * header)
de_get_element_type	apple/iOS/bluetooth/btstack/sdp_util.h	/^de_type_t de_get_element_type(uint8_t *header);$/;"	p	signature:(uint8_t *header)
de_get_header_size	apple/iOS/bluetooth/btstack/sdp_util.h	/^int de_get_header_size(uint8_t * header);$/;"	p	signature:(uint8_t * header)
de_get_len	apple/iOS/bluetooth/btstack/sdp_util.h	/^int de_get_len(uint8_t *header);$/;"	p	signature:(uint8_t *header)
de_get_size_type	apple/iOS/bluetooth/btstack/sdp_util.h	/^de_size_t de_get_size_type(uint8_t *header);$/;"	p	signature:(uint8_t *header)
de_pop_sequence	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_pop_sequence(uint8_t * parent, uint8_t * child);$/;"	p	signature:(uint8_t * parent, uint8_t * child)
de_push_sequence	apple/iOS/bluetooth/btstack/sdp_util.h	/^uint8_t * de_push_sequence(uint8_t *header);$/;"	p	signature:(uint8_t *header)
de_size_t	apple/iOS/bluetooth/btstack/sdp_util.h	/^} de_size_t;$/;"	t	typeref:enum:__anon153
de_store_descriptor_with_len	apple/iOS/bluetooth/btstack/sdp_util.h	/^void de_store_descriptor_with_len(uint8_t * header, de_type_t type, de_size_t size, uint32_t len);$/;"	p	signature:(uint8_t * header, de_type_t type, de_size_t size, uint32_t len)
de_type_t	apple/iOS/bluetooth/btstack/sdp_util.h	/^} de_type_t;$/;"	t	typeref:enum:__anon152
debug_context	libretro.h	/^   bool debug_context; \/\/ Creates a debug context.$/;"	m	struct:retro_hw_render_callback	access:public
debug_enable	general.h	/^      bool debug_enable;$/;"	m	struct:settings::__anon232	access:public
debug_font	gfx/fonts/xdk1_xfonts.c	/^static XFONT *debug_font;$/;"	v	file:
declare_argc	frontend/frontend.c	100;"	d	file:
declare_argc	frontend/frontend.c	115;"	d	file:
declare_argc	frontend/frontend.c	130;"	d	file:
declare_argc	frontend/frontend.c	145;"	d	file:
declare_argv	frontend/frontend.c	101;"	d	file:
declare_argv	frontend/frontend.c	116;"	d	file:
declare_argv	frontend/frontend.c	131;"	d	file:
declare_argv	frontend/frontend.c	146;"	d	file:
def_alloc_func	deps/miniz/miniz.c	113;"	d	file:
def_free_func	deps/miniz/miniz.c	114;"	d	file:
def_joykey	driver.h	/^   uint64_t def_joykey;$/;"	m	struct:retro_keybind	access:public
def_realloc_func	deps/miniz/miniz.c	115;"	d	file:
default2D	ps3/rgl/include/RGL/Types.h	/^      rglTexture*	default2D;$/;"	m	struct:__anon65	access:public
defaultAttribs0	ps3/rgl/include/RGL/Types.h	/^      rglAttributeState defaultAttribs0;	\/\/ a default rglAttributeState, for bind = 0$/;"	m	struct:RGLcontext	access:public
defaultParameters	ps3/rgl/src/rgl_ps3.cpp	/^static const RGLdeviceParameters defaultParameters =$/;"	v	file:
defaultProgram	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogram        defaultProgram;$/;"	m	struct:_CGcontext	access:public
defaultValue	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryFloatOffset             defaultValue;  \/\/ default constant value$/;"	m	struct:CgBinaryParameter	access:public
defaultValueCount	ps3/rgl/include/Cg/CgCommon.h	/^   int defaultValueCount;$/;"	m	struct:_CGprogram	access:public
defaultValueIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndex;$/;"	m	struct:_CgParameterDefaultValue	access:public
defaultValueIndexCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndexCount;$/;"	m	struct:_CgParameterTableHeader	access:public
defaultValueIndexTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short defaultValueIndexTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
defaultValues	ps3/rgl/include/Cg/CgCommon.h	/^   const float *defaultValues;$/;"	m	struct:_CGprogram	access:public
defaultValuesIndexCount	ps3/rgl/include/Cg/CgCommon.h	/^   int defaultValuesIndexCount;$/;"	m	struct:_CGprogram	access:public
defaultValuesIndices	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterDefaultValue *defaultValuesIndices;$/;"	m	struct:_CGprogram	access:public
default_block_config_read	config.def.h	/^static bool default_block_config_read = false;$/;"	v
default_block_config_read	config.def.h	/^static bool default_block_config_read = true;$/;"	v
default_cgp	frontend/menu/menu_common.h	/^   char default_cgp[PATH_MAX];$/;"	m	struct:__anon25	access:public
default_config_path	config.def.h	/^static const char *default_config_path = "app\/native\/retroarch.cfg";$/;"	v
default_config_path	config.def.h	/^static const char *default_config_path = NULL;$/;"	v
default_glslp	frontend/menu/menu_common.h	/^   char default_glslp[PATH_MAX];$/;"	m	struct:__anon25	access:public
default_libretro_info_path	config.def.h	/^static const char *default_libretro_info_path = "\/app\/native\/info\/";$/;"	v
default_libretro_info_path	config.def.h	/^static const char *default_libretro_info_path = "\/data\/data\/com.retroarch\/info\/";$/;"	v
default_libretro_info_path	config.def.h	/^static const char *default_libretro_info_path = NULL;$/;"	v
default_libretro_path	config.def.h	/^static const char *default_libretro_path = "\/app\/native\/lib\/";$/;"	v
default_libretro_path	config.def.h	/^static const char *default_libretro_path = "\/data\/data\/com.retroarch\/cores\/";$/;"	v
default_libretro_path	config.def.h	/^static const char *default_libretro_path = NULL;$/;"	v
default_log_file	general.h	/^   char default_log_file[PATH_MAX];$/;"	m	struct:global	access:public
default_overlay_dir	config.def.h	/^static const char *default_overlay_dir = "\/data\/data\/com.retroarch\/overlays\/";$/;"	v
default_overlay_dir	config.def.h	/^static const char *default_overlay_dir = "app\/native\/overlays\/";$/;"	v
default_overlay_dir	config.def.h	/^static const char *default_overlay_dir = NULL;$/;"	v
default_paths	frontend/frontend.c	/^default_paths_t default_paths;$/;"	v
default_paths	frontend/frontend_salamander.c	/^default_paths_t default_paths;$/;"	v
default_paths_t	console/rarch_console.h	/^} default_paths_t;$/;"	t	typeref:struct:__anon85
default_shader_dir	config.def.h	/^static const char *default_shader_dir = "\/app\/native\/shaders_glsl\/";$/;"	v
default_shader_dir	config.def.h	/^static const char *default_shader_dir = "\/data\/data\/com.retroarch\/shaders_glsl\/";$/;"	v
default_shader_dir	config.def.h	/^static const char *default_shader_dir = NULL;$/;"	v
default_value	apple/common/setting_data.h	/^   } default_value;$/;"	m	struct:__anon161	typeref:union:__anon161::__anon162	access:public
defer_core	frontend/menu/menu_common.h	/^   bool defer_core;$/;"	m	struct:__anon25	access:public
deferred_path	frontend/menu/menu_common.h	/^   char deferred_path[PATH_MAX];$/;"	m	struct:__anon25	access:public
deflate	deps/miniz/miniz.c	/^int deflate(z_streamp pStream, int flush)$/;"	f	signature:(z_streamp pStream, int flush)
deflate	deps/miniz/zlib.h	/^int deflate(z_streamp pStream, int flush);$/;"	p	signature:(z_streamp pStream, int flush)
deflateBound	deps/miniz/zlib.h	387;"	d
deflateEnd	deps/miniz/miniz.c	/^int deflateEnd(z_streamp pStream)$/;"	f	signature:(z_streamp pStream)
deflateEnd	deps/miniz/zlib.h	/^int deflateEnd(z_streamp pStream);$/;"	p	signature:(z_streamp pStream)
deflateInit	deps/miniz/zlib.h	385;"	d
deflateInit2	deps/miniz/zlib.h	386;"	d
deflateInit2_	deps/miniz/miniz.c	/^int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, char * version, int stream_size)$/;"	f	signature:(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, char * version, int stream_size)
deflateInit2_	deps/miniz/zlib.h	/^int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, char * version, int stream_size);$/;"	p	signature:(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, char * version, int stream_size)
deflateReset	deps/miniz/miniz.c	/^int deflateReset(z_streamp pStream)$/;"	f	signature:(z_streamp pStream)
deflateReset	deps/miniz/zlib.h	/^int deflateReset(z_streamp pStream);$/;"	p	signature:(z_streamp pStream)
deinit	frontend/frontend_context.h	/^   void (*deinit)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
deinit	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit()$/;"	f	class:D3DVideo	signature:()
deinit	gfx/d3d9/d3d9.hpp	/^      void deinit();$/;"	p	class:D3DVideo	access:private	signature:()
deinit	gfx/fonts/d3d_font.h	/^   void (*deinit)(void *data);$/;"	m	struct:d3d_font_renderer	access:public
deinit	gfx/fonts/gl_font.h	/^   void (*deinit)(void *data);$/;"	m	struct:gl_font_renderer	access:public
deinit	gfx/shader_common.h	/^   void (*deinit)(void);$/;"	m	struct:gl_shader_backend	access:public
deinit_cg	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_cg()$/;"	f	class:D3DVideo	signature:()
deinit_cg	gfx/d3d9/d3d9.hpp	/^      void deinit_cg();$/;"	p	class:D3DVideo	access:private	signature:()
deinit_chain	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_chain()$/;"	f	class:D3DVideo	signature:()
deinit_chain	gfx/d3d9/d3d9.hpp	/^      void deinit_chain();$/;"	p	class:D3DVideo	access:private	signature:()
deinit_cheats	retroarch.c	/^static void deinit_cheats(void)$/;"	f	file:	signature:(void)
deinit_command	retroarch.c	/^static void deinit_command(void)$/;"	f	file:	signature:(void)
deinit_dsp_plugin	driver.c	/^static void deinit_dsp_plugin(void)$/;"	f	file:	signature:(void)
deinit_filter	driver.c	/^static void deinit_filter(void)$/;"	f	file:	signature:(void)
deinit_font	gfx/d3d9/d3d9.cpp	/^void D3DVideo::deinit_font()$/;"	f	class:D3DVideo	signature:()
deinit_font	gfx/d3d9/d3d9.hpp	/^      void deinit_font();$/;"	p	class:D3DVideo	access:private	signature:()
deinit_movie	retroarch.c	/^static void deinit_movie(void)$/;"	f	file:	signature:(void)
deinit_netplay	retroarch.c	/^static void deinit_netplay(void)$/;"	f	file:	signature:(void)
deinit_pixel_converter	driver.c	/^static void deinit_pixel_converter(void)$/;"	f	file:	signature:(void)
deinit_recording	retroarch.c	/^static void deinit_recording(void)$/;"	f	file:	signature:(void)
deinit_recording	retroarch.c	/^static void deinit_recording(void);$/;"	p	file:	signature:(void)
deinit_shader_dir	driver.c	/^static void deinit_shader_dir(void)$/;"	f	file:	signature:(void)
deinit_thread	record/ffemu.c	/^static void deinit_thread(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
deinit_thread_buf	record/ffemu.c	/^static void deinit_thread_buf(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
deinitialized	libretro.h	/^   retro_camera_lifetime_status_t deinitialized;$/;"	m	struct:retro_camera_callback	access:public
deinitialized	libretro.h	/^   retro_location_lifetime_status_t deinitialized;$/;"	m	struct:retro_location_callback	access:public
deinterlace_pass	gfx/rpng/rpng.c	/^static void deinterlace_pass(uint32_t *data, const struct png_ihdr *ihdr,$/;"	f	file:	signature:(uint32_t *data, const struct png_ihdr *ihdr, const uint32_t *input, unsigned pass_width, unsigned pass_height, const struct adam7_pass *pass)
delay	gfx/context/sunxi_disp_ioctl.h	/^	__u32 delay; \/* ms *\/$/;"	m	struct:lcd_function	access:public
delay_count	frontend/menu/menu_common.h	/^   unsigned delay_count;$/;"	m	struct:__anon25	access:public
delay_offset	audio/rsound.h	/^      int delay_offset;$/;"	m	struct:rsound	access:public
delay_timer	frontend/menu/menu_common.h	/^   unsigned delay_timer;$/;"	m	struct:__anon25	access:public
delete_instance	ps3/rgl/src/cg/cgbio.hpp	/^            static void delete_instance();$/;"	p	class:cgc::bio::bin_io	access:public	signature:()
delete_instance	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::delete_instance()$/;"	f	class:cgc::bio::bin_io	signature:()
delta_frame	netplay.c	/^struct delta_frame$/;"	s	file:
delta_frame::is_simulated	netplay.c	/^   bool is_simulated;$/;"	m	struct:delta_frame	file:	access:public
delta_frame::real_input_state	netplay.c	/^   uint16_t real_input_state;$/;"	m	struct:delta_frame	file:	access:public
delta_frame::self_state	netplay.c	/^   uint16_t self_state;$/;"	m	struct:delta_frame	file:	access:public
delta_frame::simulated_input_state	netplay.c	/^   uint16_t simulated_input_state;$/;"	m	struct:delta_frame	file:	access:public
delta_frame::state	netplay.c	/^   void *state;$/;"	m	struct:delta_frame	file:	access:public
delta_frame::used_real	netplay.c	/^   bool used_real;$/;"	m	struct:delta_frame	file:	access:public
depth	gfx/rpng/rpng.c	/^   uint8_t depth;$/;"	m	struct:png_ihdr	file:	access:public
depth	gfx/xvideo.c	/^   int depth;$/;"	m	struct:xv	file:	access:public
depth	libretro.h	/^   bool depth; \/\/ Set if render buffers should have depth component attached.$/;"	m	struct:retro_hw_render_callback	access:public
depth	ps3/rgl/include/RGL/Types.h	/^      GLsizei depth;$/;"	m	struct:__anon62	access:public
depth	ps3/rgl/include/RGL/Types.h	/^      GLsizei depth;$/;"	m	struct:rglImage_	access:public
depthFormat	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum depthFormat;$/;"	m	struct:__anon72	access:public
depthReplace	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char depthReplace;             \/\/ fp generated z epth value$/;"	m	struct:CgBinaryFragmentProgram	access:public
desc	cheats.c	/^   char *desc;$/;"	m	struct:cheat	file:	access:public
desc	core_info.h	/^   char *desc;$/;"	m	struct:__anon251	access:public
desc	core_options.c	/^   char *desc;$/;"	m	struct:core_option	file:	access:public
desc	driver.h	/^   char desc[64];$/;"	m	struct:platform_bind	access:public
desc	driver.h	/^   const char *desc;$/;"	m	struct:retro_keybind	access:public
desc	input/input_common.h	/^   const char *desc;$/;"	m	struct:input_bind_map	access:public
describeContents	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public int describeContents()$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:()
description	apple/iOS/menu.h	/^@property (nonatomic) NSString* description;$/;"	v
description	libretro.h	/^   const char *description; \/\/ Human readable description for parameters.$/;"	m	struct:retro_input_descriptor	access:public
description	ps3/ps3py/setup.py	/^       description = 'C implementation of the crypt function from pkg.py',$/;"	v
descs	input/overlay.c	/^   struct overlay_desc *descs;$/;"	m	struct:overlay	typeref:struct:overlay::overlay_desc	file:	access:public
dest	android/phoenix/jni/apk-extract/apk-extract.c	/^   const char *dest;$/;"	m	struct:userdata	file:	access:public
destroy	gfx/gfx_context.h	/^   void (*destroy)(void);$/;"	m	struct:gfx_ctx_driver	access:public
destroy	input/input_common.h	/^   void (*destroy)(void);$/;"	m	struct:rarch_joypad_driver	access:public
destroy	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpaceDestroyFunction destroy;$/;"	m	struct:rglTexNameSpace	access:public
destroy_context	ps3/rgl/src/rgl_ps3_cg.cpp	/^static void destroy_context( _CGcontext*ctx )$/;"	f	file:	signature:( _CGcontext*ctx )
destructify_varyings	tools/cg2glsl.py	/^def destructify_varyings(source, direction):$/;"	f	access:public
detectDevice	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private boolean detectDevice(boolean show_dialog)$/;"	m	class:MainMenuFragment	file:	access:private	signature:(boolean show_dialog)
detect_cd_game	tools/retrolaunch/cd_detect.c	/^int detect_cd_game(const char* target_path, char* game_name, size_t max_len) {$/;"	f	signature:(const char* target_path, char* game_name, size_t max_len)
detect_cd_game	tools/retrolaunch/cd_detect.h	/^int detect_cd_game(const char* cue_path, char* game_name, size_t max_len);$/;"	p	signature:(const char* cue_path, char* game_name, size_t max_len)
detect_game	tools/retrolaunch/main.c	/^static int detect_game(const char *path, char *game_name, size_t max_len)$/;"	f	file:	signature:(const char *path, char *game_name, size_t max_len)
detect_ps1_game	tools/retrolaunch/cd_detect.c	/^static int detect_ps1_game(const char* track_path, int32_t offset,$/;"	f	file:	signature:(const char* track_path, int32_t offset, char* game_name, size_t max_len)
detect_rom_game	tools/retrolaunch/main.c	/^static int detect_rom_game(const char *path, char *game_name, size_t max_len)$/;"	f	file:	signature:(const char *path, char *game_name, size_t max_len)
detect_system	tools/retrolaunch/cd_detect.c	/^static int detect_system(const char* track_path, int32_t offset,$/;"	f	file:	signature:(const char* track_path, int32_t offset, const char** system_name)
dev	audio/coreaudio.c	/^   AudioComponentInstance dev;$/;"	m	struct:coreaudio	file:	access:public
dev	gfx/d3d9/d3d9.hpp	/^      IDirect3DDevice9 *dev;$/;"	m	class:D3DVideo	access:private
dev	gfx/d3d9/render_chain.hpp	/^      IDirect3DDevice9 *dev;$/;"	m	class:RenderChain	access:private
dev	input/udev_input.c	/^   dev_t dev;$/;"	m	struct:input_device	file:	access:public
dev_alive	audio/coreaudio.c	/^   bool dev_alive;$/;"	m	struct:coreaudio	file:	access:public
dev_name	camera/video4linux2.c	/^   char dev_name[PATH_MAX];$/;"	m	struct:video4linux	file:	access:public
device	apple/OSX/hid_pad.c	/^   IOHIDDeviceRef device;$/;"	m	struct:apple_pad_connection	file:	access:public
device	audio/dsound.c	/^   unsigned device;$/;"	m	struct:dsound_dev	file:	access:public
device	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_device_t device;$/;"	m	class:ButtonMap	access:private
device	blackberry-qnx/frontend_qnx.h	/^    int device;$/;"	m	struct:__anon94	access:public
device	general.h	/^      char device[PATH_MAX];$/;"	m	struct:settings::__anon228	access:public
device	general.h	/^      char device[PATH_MAX];$/;"	m	struct:settings::__anon231	access:public
device	general.h	/^      unsigned device[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
device	input/udev_joypad.c	/^   dev_t device;$/;"	m	struct:udev_joypad	file:	access:public
device	libretro.h	/^   unsigned device;$/;"	m	struct:retro_input_descriptor	access:public
deviceParameters	ps3/rgl/include/RGL/Types.h	/^      PSGLdeviceParameters deviceParameters;$/;"	m	struct:RGLdevice	access:public
deviceSelection	blackberry-qnx/bb10/src/ButtonMap.h	/^    DropDown *deviceSelection;$/;"	m	class:ButtonMap	access:public
deviceSelection	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	DropDown *deviceSelection;$/;"	m	class:RetroArch	access:private
deviceType	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum deviceType;$/;"	m	struct:__anon50	access:public
device_handle_cb	input/udev_input.c	/^typedef void (*device_handle_cb)(udev_input_t *udev,$/;"	t	file:
device_name	blackberry-qnx/frontend_qnx.h	/^    char device_name[64];$/;"	m	struct:__anon94	access:public
device_name_t	apple/iOS/bluetooth/btstack/utils.h	/^typedef uint8_t device_name_t[DEVICE_NAME_LEN+1]; $/;"	t
device_names	general.h	/^      char device_names[MAX_PLAYERS][64];$/;"	m	struct:settings::__anon232	access:public
devices	blackberry-qnx/qnx_input.c	/^input_device_t devices[MAX_PADS];$/;"	v
devices	input/udev_input.c	/^   struct input_device **devices;$/;"	m	struct:udev_input	typeref:struct:udev_input::input_device	file:	access:public
devnode	input/udev_input.c	/^   char devnode[PATH_MAX];$/;"	m	struct:input_device	file:	access:public
dialogParam	ps3/ps3_input_osk.c	/^   CellOskDialogParam dialogParam;$/;"	m	struct:ps3_osk	file:	access:public
dict	gfx/py_state/py_state.c	/^   PyObject *dict;$/;"	m	struct:py_state	file:	access:public
did_rewind	movie.c	/^   bool did_rewind;$/;"	m	struct:bsv_movie	file:	access:public
die	retroarch-mingw-build.sh	/^die()$/;"	f
diff_f	apple/common/hidpad/wiimote.h	58;"	d
dimensionCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short dimensionCount;$/;"	m	struct:_CgParameterArray	access:public
dimensions	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short dimensions[];$/;"	m	struct:_CgParameterArray	access:public
dinput	gfx/context/wgl_ctx.c	/^static void *dinput;$/;"	v	file:
dinput	gfx/d3d9/d3d9.cpp	/^   static void *dinput;$/;"	m	namespace:Callback	file:
dinput_add_pointer	input/dinput.c	/^void dinput_add_pointer(struct dinput_input *di, struct pointer_status *new_pointer)$/;"	f	signature:(struct dinput_input *di, struct pointer_status *new_pointer)
dinput_clear_pointers	input/dinput.c	/^void dinput_clear_pointers(struct dinput_input *di)$/;"	f	signature:(struct dinput_input *di)
dinput_delete_pointer	input/dinput.c	/^void dinput_delete_pointer(struct dinput_input *di, int pointer_id)$/;"	f	signature:(struct dinput_input *di, int pointer_id)
dinput_destroy_context	input/dinput.c	/^static void dinput_destroy_context(void)$/;"	f	file:	signature:(void)
dinput_find_pointer	input/dinput.c	/^struct pointer_status *dinput_find_pointer(struct dinput_input *di, int pointer_id)$/;"	f	signature:(struct dinput_input *di, int pointer_id)
dinput_free	input/dinput.c	/^static void dinput_free(void *data)$/;"	f	file:	signature:(void *data)
dinput_get_capabilities	input/dinput.c	/^static uint64_t dinput_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
dinput_get_joypad_driver	input/dinput.c	/^static const rarch_joypad_driver_t *dinput_get_joypad_driver(void *data)$/;"	f	file:	signature:(void *data)
dinput_grab_mouse	input/dinput.c	/^static void dinput_grab_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
dinput_handle_message	input/dinput.c	/^bool dinput_handle_message(void *dinput, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	signature:(void *dinput, UINT message, WPARAM wParam, LPARAM lParam)
dinput_init	input/dinput.c	/^static void *dinput_init(void)$/;"	f	file:	signature:(void)
dinput_init_context	input/dinput.c	/^static bool dinput_init_context(void)$/;"	f	file:	signature:(void)
dinput_input	input/dinput.c	/^struct dinput_input$/;"	s	file:
dinput_input::joypad	input/dinput.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::keyboard	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 keyboard;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 mouse;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_l	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_m	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_r	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_rel_x	input/dinput.c	/^   int mouse_rel_x;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_rel_y	input/dinput.c	/^   int mouse_rel_y;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_x	input/dinput.c	/^   int mouse_x;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::mouse_y	input/dinput.c	/^   int mouse_y;$/;"	m	struct:dinput_input	file:	access:public
dinput_input::pointer_head	input/dinput.c	/^   struct pointer_status pointer_head;  \/\/ dummy head for easier iteration$/;"	m	struct:dinput_input	typeref:struct:dinput_input::pointer_status	file:	access:public
dinput_input::state	input/dinput.c	/^   uint8_t state[256];$/;"	m	struct:dinput_input	file:	access:public
dinput_input_state	input/dinput.c	/^static int16_t dinput_input_state(void *data,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
dinput_is_pressed	input/dinput.c	/^static bool dinput_is_pressed(struct dinput_input *di, const struct retro_keybind *binds,$/;"	f	file:	signature:(struct dinput_input *di, const struct retro_keybind *binds, unsigned port, unsigned id)
dinput_joypad	input/dinput.c	/^const rarch_joypad_driver_t dinput_joypad = {$/;"	v
dinput_joypad	input/dinput.c	/^struct dinput_joypad$/;"	s	file:
dinput_joypad::joy_name	input/dinput.c	/^   char* joy_name;$/;"	m	struct:dinput_joypad	file:	access:public
dinput_joypad::joy_state	input/dinput.c	/^   DIJOYSTATE2 joy_state;$/;"	m	struct:dinput_joypad	file:	access:public
dinput_joypad::joypad	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 joypad;$/;"	m	struct:dinput_joypad	file:	access:public
dinput_joypad_axis	input/dinput.c	/^static int16_t dinput_joypad_axis(unsigned port_num, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port_num, uint32_t joyaxis)
dinput_joypad_button	input/dinput.c	/^static bool dinput_joypad_button(unsigned port_num, uint16_t joykey)$/;"	f	file:	signature:(unsigned port_num, uint16_t joykey)
dinput_joypad_destroy	input/dinput.c	/^static void dinput_joypad_destroy(void)$/;"	f	file:	signature:(void)
dinput_joypad_init	input/dinput.c	/^static bool dinput_joypad_init(void)$/;"	f	file:	signature:(void)
dinput_joypad_name	input/dinput.c	/^static const char *dinput_joypad_name(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
dinput_joypad_name	input/dinput.c	/^static const char *dinput_joypad_name(unsigned pad);$/;"	p	file:	signature:(unsigned pad)
dinput_joypad_poll	input/dinput.c	/^static void dinput_joypad_poll(void)$/;"	f	file:	signature:(void)
dinput_joypad_query_pad	input/dinput.c	/^static bool dinput_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
dinput_key_pressed	input/dinput.c	/^static bool dinput_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
dinput_keyboard_pressed	input/dinput.c	/^static bool dinput_keyboard_pressed(struct dinput_input *di, unsigned key)$/;"	f	file:	signature:(struct dinput_input *di, unsigned key)
dinput_lightgun_state	input/dinput.c	/^static int16_t dinput_lightgun_state(struct dinput_input *di, unsigned id)$/;"	f	file:	signature:(struct dinput_input *di, unsigned id)
dinput_mouse_state	input/dinput.c	/^static int16_t dinput_mouse_state(struct dinput_input *di, unsigned id)$/;"	f	file:	signature:(struct dinput_input *di, unsigned id)
dinput_pointer_state	input/dinput.c	/^static int16_t dinput_pointer_state(struct dinput_input *di, unsigned index, unsigned id, bool screen)$/;"	f	file:	signature:(struct dinput_input *di, unsigned index, unsigned id, bool screen)
dinput_pointer_store_pos	input/dinput.c	/^void dinput_pointer_store_pos(struct pointer_status *pointer, WPARAM lParam)$/;"	f	signature:(struct pointer_status *pointer, WPARAM lParam)
dinput_poll	input/dinput.c	/^static void dinput_poll(void *data)$/;"	f	file:	signature:(void *data)
dinput_pressed_analog	input/dinput.c	/^static int16_t dinput_pressed_analog(struct dinput_input *di,$/;"	f	file:	signature:(struct dinput_input *di, const struct retro_keybind *binds, unsigned index, unsigned id)
dinput_set_rumble	input/dinput.c	/^static bool dinput_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
dirSelectItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean dirSelectItem;$/;"	f	class:FileWrapper	file:	access:private
dir_list_free	file_path.c	/^void dir_list_free(struct string_list *list)$/;"	f	signature:(struct string_list *list)
dir_list_free	file_path.h	/^void dir_list_free(struct string_list *list);$/;"	p	signature:(struct string_list *list)
dir_list_new	file_path.c	/^struct string_list *dir_list_new(const char *dir, const char *ext, bool include_dirs)$/;"	f	signature:(const char *dir, const char *ext, bool include_dirs)
dir_list_new	file_path.h	/^struct string_list *dir_list_new(const char *dir, const char *ext, bool include_dirs);$/;"	p	signature:(const char *dir, const char *ext, bool include_dirs)
dir_list_sort	file_path.c	/^void dir_list_sort(struct string_list *list, bool dir_first)$/;"	f	signature:(struct string_list *list, bool dir_first)
dir_list_sort	file_path.h	/^void dir_list_sort(struct string_list *list, bool dir_first);$/;"	p	signature:(struct string_list *list, bool dir_first)
dir_table	ps3/rgl/src/rgl_ps3_cg.cpp	/^static const CGenum dir_table[] = {CG_IN, CG_OUT, CG_INOUT, CG_ERROR};$/;"	v	file:
direct3d_create_ctx	xdk/xdk_defines.h	36;"	d
direct3d_create_ctx	xdk/xdk_defines.h	79;"	d
direct_pixconv	gfx/scaler/scaler.h	/^   void (*direct_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
direction	ps3/rgl/include/Cg/cgBinary.h	/^      CGenum                          direction;     \/\/ cgGetParameterDirection()$/;"	m	struct:CgBinaryParameter	access:public
directoryDelegate	apple/iOS/views.h	/^@property (nonatomic, weak) id<RADirectoryListDelegate> directoryDelegate;$/;"	v
directory_ptr	file_list.c	/^   size_t directory_ptr;$/;"	m	struct:item_file	file:	access:public
dirent_is_directory	file_path.c	/^static bool dirent_is_directory(const char *path, const struct dirent *entry)$/;"	f	file:	signature:(const char *path, const struct dirent *entry)
dirtyState	gx/gx_video_inl.h	/^	u32 dirtyState;$/;"	m	struct:__gx_regdef	access:public
disable_composition	config.def.h	/^static const bool disable_composition = false;$/;"	v
disable_composition	general.h	/^      bool disable_composition;$/;"	m	struct:settings::__anon227	access:public
disable_terminal_input	input/udev_input.c	/^static void disable_terminal_input(void)$/;"	f	file:	signature:(void)
disallowedExt	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private ArrayList<String> disallowedExt;$/;"	f	class:DirectoryFragment	file:	access:private
disconnect	apple/common/apple_input.h	/^   void (*disconnect)(void* device);$/;"	m	struct:apple_pad_interface	access:public
discoverController	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::discoverController(int player)$/;"	f	class:RetroArch	signature:(int player)
discoverController	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void discoverController(int player);$/;"	p	class:RetroArch	access:public	signature:(int player)
discoverControllers	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^extern "C" void discoverControllers();$/;"	p	file:	signature:()
discoverControllers	blackberry-qnx/qnx_input.c	/^void discoverControllers()$/;"	f
disk_control	general.h	/^      struct retro_disk_control_callback disk_control; $/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_disk_control_callback	access:public
disk_num_start	deps/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
disk_num_start	deps/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
dispCopyCntrl	gx/gx_video_inl.h	/^	u32 dispCopyCntrl;$/;"	m	struct:__gx_regdef	access:public
dispCopyDst	gx/gx_video_inl.h	/^	u32 dispCopyDst;$/;"	m	struct:__gx_regdef	access:public
dispCopyTL	gx/gx_video_inl.h	/^	u32 dispCopyTL;$/;"	m	struct:__gx_regdef	access:public
dispCopyWH	gx/gx_video_inl.h	/^	u32 dispCopyWH;$/;"	m	struct:__gx_regdef	access:public
disp_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_init_mode_t disp_mode;$/;"	m	struct:__anon203	access:public
dispatchActivityDestroy	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityDestroy(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
dispatchActivityResult	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityResult(PreferenceManager manager, int requestCode, int resultCode, Intent data)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, int requestCode, int resultCode, Intent data)
dispatchActivityStop	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void dispatchActivityStop(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
display	frontend/menu/menu_common.h	/^      bool display;$/;"	m	struct:__anon25::__anon26	access:public
display	gfx/xvideo.c	/^   Display *display;$/;"	m	struct:xv	file:	access:public
display	input/x11_input.c	/^   Display *display;$/;"	m	struct:x11_input	file:	access:public
displayName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String displayName;$/;"	f	class:ModuleWrapper	file:	access:private
display_list_size	gx/gx_video.c	/^size_t display_list_size;$/;"	v
display_name	core_info.h	/^   char *display_name;$/;"	m	struct:__anon252	access:public
display_type	driver.h	/^   enum rarch_display_type display_type;$/;"	m	struct:driver	typeref:enum:driver::rarch_display_type	access:public
dmaControl	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmControlDma *dmaControl;$/;"	m	struct:rglGcmFifo	access:public
dmaControl	ps3/rgl/src/include/rgl-typedefs.h	/^   void*   dmaControl;$/;"	m	struct:rglGcmResource	access:public
dmaPushBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   char *  dmaPushBuffer;$/;"	m	struct:rglGcmResource	access:public
dmaPushBufferBegin	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferBegin;$/;"	m	struct:rglGcmFifo	access:public
dmaPushBufferEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferEnd;$/;"	m	struct:rglGcmFifo	access:public
dmaPushBufferGPU	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferGPU;$/;"	m	struct:rglGcmFifo	access:public
dmaPushBufferOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned long dmaPushBufferOffset;$/;"	m	struct:rglGcmFifo	access:public
dmaPushBufferOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned long dmaPushBufferOffset;$/;"	m	struct:rglGcmResource	access:public
dmaPushBufferSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  dmaPushBufferSize;$/;"	m	struct:rglGcmResource	access:public
dmaPushBufferSizeInWords	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dmaPushBufferSizeInWords;$/;"	m	struct:rglGcmFifo	access:public
dma_busy	gx/gx_audio.c	/^   volatile unsigned dma_busy;$/;"	m	struct:__anon247	file:	access:public
dma_callback	gx/gx_audio.c	/^static void dma_callback(void)$/;"	f	file:	signature:(void)
dma_next	gx/gx_audio.c	/^   volatile unsigned dma_next;$/;"	m	struct:__anon247	file:	access:public
dma_write	gx/gx_audio.c	/^   volatile unsigned dma_write;$/;"	m	struct:__anon247	file:	access:public
doRelocations	ps3/rgl/src/libelf/readelf.h	/^   void doRelocations(ELF_t* elf,char* memory,int memorySize,int origin,const ELF_rel_type_t* rel_types,unsigned int rel_types_count);$/;"	p	signature:(ELF_t* elf,char* memory,int memorySize,int origin,const ELF_rel_type_t* rel_types,unsigned int rel_types_count)
do_build	retroarch-mingw-build.sh	/^do_build()$/;"	f
do_held	frontend/menu/menu_common.h	/^   bool do_held;$/;"	m	struct:__anon25	access:public
do_phoenix_build	retroarch-mingw-build.sh	/^do_phoenix_build()$/;"	f
do_state_checks	retroarch.c	/^static void do_state_checks(void)$/;"	f	file:	signature:(void)
documentsDirectory	apple/iOS/platform.h	/^@property (nonatomic) NSString* documentsDirectory; \/\/ e.g. \/var\/mobile\/Documents$/;"	v
dol_copy_argv_path	frontend/platform/platform_wii.c	/^static void dol_copy_argv_path(const char *dolpath, const char *argpath)$/;"	f	file:	signature:(const char *dolpath, const char *argpath)
dolheader	wii/app_booter/dolloader.c	/^} dolheader;$/;"	t	typeref:struct:_dolheader	file:
dosDate	deps/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
dosDate	deps/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
dotab_stdout	frontend/platform/platform_gx.c	/^static devoptab_t dotab_stdout = {$/;"	v	file:
double_strike	gx/gx_video.h	/^   bool double_strike;$/;"	m	struct:gx_video	access:public
down_scale	ps3/sdk_defines.h	302;"	d
dpad_emulation	android/native/jni/input_android.c	/^   unsigned dpad_emulation[MAX_PLAYERS];$/;"	m	struct:android_input	file:	access:public
drawBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint drawBuffer;	\/\/ 0, 1, or 2$/;"	m	struct:__anon50	access:public
driver	audio/thread_wrapper.c	/^   const audio_driver_t *driver;$/;"	m	struct:audio_thread	file:	access:public
driver	driver.c	/^driver_t driver;$/;"	v
driver	driver.h	/^typedef struct driver$/;"	s
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon227	access:public
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon228	access:public
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon229	access:public
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon230	access:public
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon231	access:public
driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon232	access:public
driver	gfx/thread_wrapper.c	/^   const video_driver_t *driver;$/;"	m	struct:thread_video	file:	access:public
driver	gfx/vg.c	/^   const gfx_ctx_driver_t *driver;$/;"	m	struct:__anon225	file:	access:public
driver	tools/retroarch-joyconfig.c	/^driver_t driver;$/;"	v
driver::audio	driver.h	/^   const audio_driver_t *audio;$/;"	m	struct:driver	access:public
driver::audio_data	driver.h	/^   void *audio_data;$/;"	m	struct:driver	access:public
driver::audio_data_own	driver.h	/^   bool audio_data_own;$/;"	m	struct:driver	access:public
driver::block_hotkey	driver.h	/^   bool block_hotkey;$/;"	m	struct:driver	access:public
driver::block_input	driver.h	/^   bool block_input;$/;"	m	struct:driver	access:public
driver::camera	driver.h	/^   const camera_driver_t *camera;$/;"	m	struct:driver	access:public
driver::camera_data	driver.h	/^   void *camera_data;$/;"	m	struct:driver	access:public
driver::camera_data_own	driver.h	/^   bool camera_data_own;$/;"	m	struct:driver	access:public
driver::command	driver.h	/^   rarch_cmd_t *command;$/;"	m	struct:driver	access:public
driver::current_msg	driver.h	/^   const char *current_msg;$/;"	m	struct:driver	access:public
driver::display_type	driver.h	/^   enum rarch_display_type display_type;$/;"	m	struct:driver	typeref:enum:driver::rarch_display_type	access:public
driver::gfx_use_rgba	driver.h	/^   bool gfx_use_rgba;$/;"	m	struct:driver	access:public
driver::input	driver.h	/^   const input_driver_t *input;$/;"	m	struct:driver	access:public
driver::input_data	driver.h	/^   void *input_data;$/;"	m	struct:driver	access:public
driver::input_data_own	driver.h	/^   bool input_data_own;$/;"	m	struct:driver	access:public
driver::location	driver.h	/^   const location_driver_t *location;$/;"	m	struct:driver	access:public
driver::location_data	driver.h	/^   void *location_data;$/;"	m	struct:driver	access:public
driver::location_data_own	driver.h	/^   bool location_data_own;$/;"	m	struct:driver	access:public
driver::nonblock_state	driver.h	/^   bool nonblock_state;$/;"	m	struct:driver	access:public
driver::osk	driver.h	/^   const input_osk_driver_t *osk;$/;"	m	struct:driver	access:public
driver::osk_data	driver.h	/^   void *osk_data;$/;"	m	struct:driver	access:public
driver::osk_data_own	driver.h	/^   bool osk_data_own;$/;"	m	struct:driver	access:public
driver::overlay	driver.h	/^   input_overlay_t *overlay;$/;"	m	struct:driver	access:public
driver::overlay_state	driver.h	/^   input_overlay_state_t overlay_state;$/;"	m	struct:driver	access:public
driver::scaler	driver.h	/^   struct scaler_ctx scaler;$/;"	m	struct:driver	typeref:struct:driver::scaler_ctx	access:public
driver::scaler_out	driver.h	/^   void *scaler_out;$/;"	m	struct:driver	access:public
driver::stdin_claimed	driver.h	/^   bool stdin_claimed;$/;"	m	struct:driver	access:public
driver::threaded_video	driver.h	/^   bool threaded_video;$/;"	m	struct:driver	access:public
driver::video	driver.h	/^   const video_driver_t *video;$/;"	m	struct:driver	access:public
driver::video_cache_context	driver.h	/^   bool video_cache_context;$/;"	m	struct:driver	access:public
driver::video_cache_context_ack	driver.h	/^   bool video_cache_context_ack; \/\/ Set to true by driver if context caching succeeded.$/;"	m	struct:driver	access:public
driver::video_data	driver.h	/^   void *video_data;$/;"	m	struct:driver	access:public
driver::video_data_own	driver.h	/^   bool video_data_own;$/;"	m	struct:driver	access:public
driver::video_display	driver.h	/^   uintptr_t video_display;$/;"	m	struct:driver	access:public
driver::video_poke	driver.h	/^   const video_poke_interface_t *video_poke;$/;"	m	struct:driver	access:public
driver::video_window	driver.h	/^   uintptr_t video_window;$/;"	m	struct:driver	access:public
driver_buffer_size	general.h	/^      size_t driver_buffer_size;$/;"	m	struct:global::__anon235	access:public
driver_camera_poll	driver.c	/^void driver_camera_poll(void)$/;"	f	signature:(void)
driver_camera_poll	driver.h	/^void driver_camera_poll(void);$/;"	p	signature:(void)
driver_camera_start	driver.c	/^bool driver_camera_start(void)$/;"	f	signature:(void)
driver_camera_start	driver.h	/^bool driver_camera_start(void);$/;"	p	signature:(void)
driver_camera_stop	driver.c	/^void driver_camera_stop(void)$/;"	f	signature:(void)
driver_camera_stop	driver.h	/^void driver_camera_stop(void);$/;"	p	signature:(void)
driver_data	audio/thread_wrapper.c	/^   void *driver_data;$/;"	m	struct:audio_thread	file:	access:public
driver_data	gfx/thread_wrapper.c	/^   void *driver_data;$/;"	m	struct:thread_video	file:	access:public
driver_get_current_framebuffer	driver.c	/^uintptr_t driver_get_current_framebuffer(void)$/;"	f	signature:(void)
driver_get_current_framebuffer	driver.h	/^uintptr_t driver_get_current_framebuffer(void);$/;"	p	signature:(void)
driver_get_proc_address	driver.c	/^retro_proc_address_t driver_get_proc_address(const char *sym)$/;"	f	signature:(const char *sym)
driver_get_proc_address	driver.h	/^retro_proc_address_t driver_get_proc_address(const char *sym);$/;"	p	signature:(const char *sym)
driver_location_get_position	driver.c	/^bool driver_location_get_position(double *lat, double *lon, double *horiz_accuracy,$/;"	f	signature:(double *lat, double *lon, double *horiz_accuracy, double *vert_accuracy)
driver_location_get_position	driver.h	/^bool driver_location_get_position(double *lat, double *lon, double *horiz_accuracy, double *vert_accuracy);$/;"	p	signature:(double *lat, double *lon, double *horiz_accuracy, double *vert_accuracy)
driver_location_set_interval	driver.c	/^void driver_location_set_interval(unsigned interval_msecs, unsigned interval_distance)$/;"	f	signature:(unsigned interval_msecs, unsigned interval_distance)
driver_location_set_interval	driver.h	/^void driver_location_set_interval(unsigned interval_msecs, unsigned interval_distance);$/;"	p	signature:(unsigned interval_msecs, unsigned interval_distance)
driver_location_start	driver.c	/^bool driver_location_start(void)$/;"	f	signature:(void)
driver_location_start	driver.h	/^bool driver_location_start(void);$/;"	p	signature:(void)
driver_location_stop	driver.c	/^void driver_location_stop(void)$/;"	f	signature:(void)
driver_location_stop	driver.h	/^void driver_location_stop(void);$/;"	p	signature:(void)
driver_monitor_fps_statistics	driver.c	/^bool driver_monitor_fps_statistics(double *refresh_rate, double *deviation, unsigned *sample_points)$/;"	f	signature:(double *refresh_rate, double *deviation, unsigned *sample_points)
driver_monitor_fps_statistics	driver.h	/^bool driver_monitor_fps_statistics(double *refresh_rate, double *deviation, unsigned *sample_points);$/;"	p	signature:(double *refresh_rate, double *deviation, unsigned *sample_points)
driver_set_monitor_refresh_rate	driver.c	/^void driver_set_monitor_refresh_rate(float hz)$/;"	f	signature:(float hz)
driver_set_monitor_refresh_rate	driver.h	/^void driver_set_monitor_refresh_rate(float hz);$/;"	p	signature:(float hz)
driver_set_nonblock_state	driver.c	/^void driver_set_nonblock_state(bool nonblock)$/;"	f	signature:(bool nonblock)
driver_set_nonblock_state	driver.h	/^void driver_set_nonblock_state(bool nonblock);$/;"	p	signature:(bool nonblock)
driver_set_rumble_state	driver.c	/^bool driver_set_rumble_state(unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	signature:(unsigned port, enum retro_rumble_effect effect, uint16_t strength)
driver_set_rumble_state	driver.h	/^bool driver_set_rumble_state(unsigned port, enum retro_rumble_effect effect, uint16_t strength);$/;"	p	signature:(unsigned port, enum retro_rumble_effect effect, uint16_t strength)
driver_set_sensor_state	driver.c	/^bool driver_set_sensor_state(unsigned port, enum retro_sensor_action action, unsigned rate)$/;"	f	signature:(unsigned port, enum retro_sensor_action action, unsigned rate)
driver_set_sensor_state	driver.h	/^bool driver_set_sensor_state(unsigned port, enum retro_sensor_action action, unsigned rate);$/;"	p	signature:(unsigned port, enum retro_sensor_action action, unsigned rate)
driver_t	driver.h	/^} driver_t;$/;"	t	typeref:struct:driver
drm_fb	gfx/context/drm_egl_ctx.c	/^struct drm_fb$/;"	s	file:
drm_fb::bo	gfx/context/drm_egl_ctx.c	/^   struct gbm_bo *bo;$/;"	m	struct:drm_fb	typeref:struct:drm_fb::gbm_bo	file:	access:public
drm_fb::fb_id	gfx/context/drm_egl_ctx.c	/^   uint32_t fb_id;$/;"	m	struct:drm_fb	file:	access:public
drm_fb_destroy_callback	gfx/context/drm_egl_ctx.c	/^static void drm_fb_destroy_callback(struct gbm_bo *bo, void *data)$/;"	f	file:	signature:(struct gbm_bo *bo, void *data)
drm_fb_get_from_bo	gfx/context/drm_egl_ctx.c	/^static struct drm_fb *drm_fb_get_from_bo(struct gbm_bo *bo)$/;"	f	file:	signature:(struct gbm_bo *bo)
drm_fb_get_from_bo	gfx/context/drm_egl_ctx.c	/^static struct drm_fb *drm_fb_get_from_bo(struct gbm_bo *bo);$/;"	p	file:	signature:(struct gbm_bo *bo)
ds	audio/dsound.c	/^   LPDIRECTSOUND ds;$/;"	m	struct:dsound	file:	access:public
dsb	audio/dsound.c	/^   LPDIRECTSOUNDBUFFER dsb;$/;"	m	struct:dsound	file:	access:public
dsmb	audio/dsound.c	/^static DSMIXBINS dsmb;$/;"	v	file:
dsmbvp	audio/dsound.c	/^static DSMIXBINVOLUMEPAIR dsmbvp[8] = {$/;"	v	file:
dsound	audio/dsound.c	/^typedef struct dsound$/;"	s	file:
dsound::buffer	audio/dsound.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:dsound	file:	access:public
dsound::buffer_size	audio/dsound.c	/^   unsigned buffer_size;$/;"	m	struct:dsound	file:	access:public
dsound::crit	audio/dsound.c	/^   CRITICAL_SECTION crit;$/;"	m	struct:dsound	file:	access:public
dsound::ds	audio/dsound.c	/^   LPDIRECTSOUND ds;$/;"	m	struct:dsound	file:	access:public
dsound::dsb	audio/dsound.c	/^   LPDIRECTSOUNDBUFFER dsb;$/;"	m	struct:dsound	file:	access:public
dsound::event	audio/dsound.c	/^   HANDLE event;$/;"	m	struct:dsound	file:	access:public
dsound::nonblock	audio/dsound.c	/^   bool nonblock;$/;"	m	struct:dsound	file:	access:public
dsound::thread	audio/dsound.c	/^   HANDLE thread;$/;"	m	struct:dsound	file:	access:public
dsound::thread_alive	audio/dsound.c	/^   volatile bool thread_alive;$/;"	m	struct:dsound	file:	access:public
dsound_buffer_size	audio/dsound.c	/^static size_t dsound_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
dsound_clear_buffer	audio/dsound.c	/^static void dsound_clear_buffer(dsound_t *ds)$/;"	f	file:	signature:(dsound_t *ds)
dsound_dev	audio/dsound.c	/^struct dsound_dev$/;"	s	file:
dsound_dev::device	audio/dsound.c	/^   unsigned device;$/;"	m	struct:dsound_dev	file:	access:public
dsound_dev::guid	audio/dsound.c	/^   LPGUID guid;$/;"	m	struct:dsound_dev	file:	access:public
dsound_dev::total_count	audio/dsound.c	/^   unsigned total_count;$/;"	m	struct:dsound_dev	file:	access:public
dsound_free	audio/dsound.c	/^static void dsound_free(void *data)$/;"	f	file:	signature:(void *data)
dsound_init	audio/dsound.c	/^static void *dsound_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
dsound_set_nonblock_state	audio/dsound.c	/^static void dsound_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
dsound_start	audio/dsound.c	/^static bool dsound_start(void *data)$/;"	f	file:	signature:(void *data)
dsound_start_thread	audio/dsound.c	/^static bool dsound_start_thread(dsound_t *ds)$/;"	f	file:	signature:(dsound_t *ds)
dsound_stop	audio/dsound.c	/^static bool dsound_stop(void *data)$/;"	f	file:	signature:(void *data)
dsound_stop_thread	audio/dsound.c	/^static void dsound_stop_thread(dsound_t *ds)$/;"	f	file:	signature:(dsound_t *ds)
dsound_t	audio/dsound.c	/^} dsound_t;$/;"	t	typeref:struct:dsound	file:
dsound_thread	audio/dsound.c	/^static DWORD CALLBACK dsound_thread(PVOID data)$/;"	f	file:	signature:(PVOID data)
dsound_write	audio/dsound.c	/^static ssize_t dsound_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
dsound_write_avail	audio/dsound.c	/^static size_t dsound_write_avail(void *data)$/;"	f	file:	signature:(void *data)
dsp_handle	general.h	/^      void *dsp_handle;$/;"	m	struct:global::__anon235	access:public
dsp_lib	general.h	/^      dylib_t dsp_lib;$/;"	m	struct:global::__anon235	access:public
dsp_plugin	general.h	/^      char dsp_plugin[PATH_MAX];$/;"	m	struct:settings::__anon231	access:public
dsp_plugin	general.h	/^      const rarch_dsp_plugin_t *dsp_plugin;$/;"	m	struct:global::__anon235	access:public
dualanalog	tools/retrolaunch/main.c	/^	int dualanalog;$/;"	m	struct:RunInfo	file:	access:public
dummy_audio_batch_cb	dynamic_dummy.c	/^static retro_audio_sample_batch_t dummy_audio_batch_cb;$/;"	v	file:
dummy_audio_cb	dynamic_dummy.c	/^static retro_audio_sample_t dummy_audio_cb;$/;"	v	file:
dummy_environ_cb	dynamic_dummy.c	/^static retro_environment_t dummy_environ_cb;$/;"	v	file:
dummy_input_poll_cb	dynamic_dummy.c	/^static retro_input_poll_t dummy_input_poll_cb;$/;"	v	file:
dummy_input_state_cb	dynamic_dummy.c	/^static retro_input_state_t dummy_input_state_cb;$/;"	v	file:
dummy_video_cb	dynamic_dummy.c	/^static retro_video_refresh_t dummy_video_cb;$/;"	v	file:
dump	gfx/glsym/glgen.py	/^def dump(f, lines):$/;"	f	access:public
dump_content	screenshot.c	/^static void dump_content(FILE *file, const void *frame,$/;"	f	file:	signature:(FILE *file, const void *frame, int width, int height, int pitch, bool bgr24)
dump_line_16	screenshot.c	/^static void dump_line_16(uint8_t *line, const uint16_t *src, unsigned width)$/;"	f	file:	signature:(uint8_t *line, const uint16_t *src, unsigned width)
dump_line_32	screenshot.c	/^static void dump_line_32(uint8_t *line, const uint32_t *src, unsigned width)$/;"	f	file:	signature:(uint8_t *line, const uint32_t *src, unsigned width)
dump_line_bgr	screenshot.c	/^static void dump_line_bgr(uint8_t *line, const uint8_t *src, unsigned width)$/;"	f	file:	signature:(uint8_t *line, const uint8_t *src, unsigned width)
dump_lines_file	screenshot.c	/^static void dump_lines_file(FILE *file, uint8_t **lines, size_t line_size, unsigned height)$/;"	f	file:	signature:(FILE *file, uint8_t **lines, size_t line_size, unsigned height)
dump_to_file_desperate	file.c	/^static void dump_to_file_desperate(const void *data, size_t size, int type)$/;"	f	file:	signature:(const void *data, size_t size, int type)
dupe_newline	gfx/py_state/py_state.c	/^static char *dupe_newline(const char *str)$/;"	f	file:	signature:(const char *str)
duration	message_queue.c	/^   unsigned duration;$/;"	m	struct:queue_elem	file:	access:public
duty_ns	gfx/context/sunxi_disp_ioctl.h	/^	__u32 duty_ns;$/;"	m	struct:__anon199	access:public
dwDataSize	xdk/xdk_resources.cpp	/^   DWORD dwDataSize;$/;"	m	struct:XPR_HEADER	file:	access:public
dwDeviceMask	xdk/xdk_xinput_input.c	/^   DWORD dwDeviceMask;$/;"	m	struct:xdk_input	file:	access:public
dwDotClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint    dwDotClock;      \/\/ In 10K Hertz$/;"	m	struct:_tagMODESTRUC	access:public
dwHeaderSize	xdk/xdk_resources.cpp	/^   DWORD dwHeaderSize;$/;"	m	struct:XPR_HEADER	file:	access:public
dwMagic	xdk/xdk_resources.cpp	/^   DWORD dwMagic;$/;"	m	struct:XPR_HEADER	file:	access:public
dwOffset	xdk/xdk_resources.h	/^   DWORD dwOffset;$/;"	m	struct:XBRESOURCE	access:public
dwPacketNumber	input/winxinput_joypad.c	/^   uint32_t       dwPacketNumber;$/;"	m	struct:__anon87	file:	access:public
dwmlib	gfx/gfx_common.c	/^static dylib_t dwmlib = NULL;$/;"	v	file:
dword_be	gfx/rpng/rpng.c	/^static uint32_t dword_be(const uint8_t *buf)$/;"	f	file:	signature:(const uint8_t *buf)
dword_write_be	gfx/rpng/rpng.c	/^static void dword_write_be(uint8_t *buf, uint32_t val)$/;"	f	file:	signature:(uint8_t *buf, uint32_t val)
dylib_close	dynamic.c	/^void dylib_close(dylib_t lib)$/;"	f	signature:(dylib_t lib)
dylib_close	dynamic.h	/^void dylib_close(dylib_t lib);$/;"	p	signature:(dylib_t lib)
dylib_load	dynamic.c	/^dylib_t dylib_load(const char *path)$/;"	f	signature:(const char *path)
dylib_load	dynamic.h	/^dylib_t dylib_load(const char *path);$/;"	p	signature:(const char *path)
dylib_proc	dynamic.c	/^function_t dylib_proc(dylib_t lib, const char *proc)$/;"	f	signature:(dylib_t lib, const char *proc)
dylib_proc	dynamic.h	/^function_t dylib_proc(dylib_t lib, const char *proc);$/;"	p	signature:(dylib_t lib, const char *proc)
dylib_t	dynamic.h	/^typedef void *dylib_t;$/;"	t
e_ehsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_ehsize;$/;"	m	struct:__anon37	access:public
e_ehsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_ehsize;$/;"	m	struct:__anon38	access:public
e_ehsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_ehsize;	\/* ELF header size *\/$/;"	m	struct:elfhdr	access:public
e_entry	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_entry;$/;"	m	struct:__anon37	access:public
e_entry	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_entry;$/;"	m	struct:__anon38	access:public
e_entry	wii/app_booter/elf_abi.h	/^	Elf32_Addr	e_entry;	\/* virtual entry point *\/$/;"	m	struct:elfhdr	access:public
e_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_flags;$/;"	m	struct:__anon37	access:public
e_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_flags;$/;"	m	struct:__anon38	access:public
e_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	e_flags;	\/* processor-specific flags *\/$/;"	m	struct:elfhdr	access:public
e_ident	ps3/rgl/src/libelf/elf.h	/^   unsigned char	e_ident[EI_NIDENT];$/;"	m	struct:__anon37	access:public
e_ident	ps3/rgl/src/libelf/elf.h	/^   unsigned char	e_ident[EI_NIDENT];$/;"	m	struct:__anon38	access:public
e_ident	wii/app_booter/elf_abi.h	/^	unsigned char	e_ident[EI_NIDENT]; \/* ELF Identification *\/$/;"	m	struct:elfhdr	access:public
e_machine	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_machine;$/;"	m	struct:__anon37	access:public
e_machine	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_machine;$/;"	m	struct:__anon38	access:public
e_machine	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_machine;	\/* machine *\/$/;"	m	struct:elfhdr	access:public
e_phentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phentsize;$/;"	m	struct:__anon37	access:public
e_phentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phentsize;$/;"	m	struct:__anon38	access:public
e_phentsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_phentsize;	\/* program header entry size *\/$/;"	m	struct:elfhdr	access:public
e_phnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phnum;$/;"	m	struct:__anon37	access:public
e_phnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_phnum;$/;"	m	struct:__anon38	access:public
e_phnum	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_phnum;	\/* number of program header entries *\/$/;"	m	struct:elfhdr	access:public
e_phoff	ps3/rgl/src/libelf/elf.h	/^   int32_t	e_phoff;$/;"	m	struct:__anon37	access:public
e_phoff	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_phoff;$/;"	m	struct:__anon38	access:public
e_phoff	wii/app_booter/elf_abi.h	/^	Elf32_Off	e_phoff;	\/* program header table offset *\/$/;"	m	struct:elfhdr	access:public
e_shentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shentsize;$/;"	m	struct:__anon37	access:public
e_shentsize	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shentsize;$/;"	m	struct:__anon38	access:public
e_shentsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shentsize;	\/* section header entry size *\/$/;"	m	struct:elfhdr	access:public
e_shnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shnum;$/;"	m	struct:__anon37	access:public
e_shnum	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shnum;$/;"	m	struct:__anon38	access:public
e_shnum	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shnum;	\/* number of section header entries *\/$/;"	m	struct:elfhdr	access:public
e_shoff	ps3/rgl/src/libelf/elf.h	/^   int32_t	e_shoff;$/;"	m	struct:__anon37	access:public
e_shoff	ps3/rgl/src/libelf/elf.h	/^   uint64_t	e_shoff;$/;"	m	struct:__anon38	access:public
e_shoff	wii/app_booter/elf_abi.h	/^	Elf32_Off	e_shoff;	\/* section header table offset *\/$/;"	m	struct:elfhdr	access:public
e_shstrndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shstrndx;$/;"	m	struct:__anon37	access:public
e_shstrndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_shstrndx;$/;"	m	struct:__anon38	access:public
e_shstrndx	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shstrndx;	\/* section header table's "section$/;"	m	struct:elfhdr	access:public
e_type	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_type;$/;"	m	struct:__anon37	access:public
e_type	ps3/rgl/src/libelf/elf.h	/^   uint16_t	e_type;$/;"	m	struct:__anon38	access:public
e_type	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_type;		\/* object file type *\/$/;"	m	struct:elfhdr	access:public
e_version	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_version;$/;"	m	struct:__anon37	access:public
e_version	ps3/rgl/src/libelf/elf.h	/^   uint32_t	e_version;$/;"	m	struct:__anon38	access:public
e_version	wii/app_booter/elf_abi.h	/^	Elf32_Word	e_version;	\/* object file version *\/$/;"	m	struct:elfhdr	access:public
effects	input/udev_joypad.c	/^   int effects[2]; \/\/ [0] - strong, [1] - weak $/;"	m	struct:udev_joypad	file:	access:public
eglBuffer	gfx/context/vc_egl_ctx.c	/^static EGLImageKHR eglBuffer[MAX_EGLIMAGE_TEXTURES];$/;"	v	file:
egl_config	gfx/context/bbqnx_ctx.c	/^static EGLConfig egl_config;$/;"	v	file:
egl_images	gfx/gl_common.h	/^   bool egl_images;$/;"	m	struct:gl	access:public
egl_report_error	gfx/context/xegl_ctx.c	/^static void egl_report_error(void)$/;"	f	file:	signature:(void)
egl_wait_notify	gfx/context/xegl_ctx.c	/^static Bool egl_wait_notify(Display *d, XEvent *e, char *arg)$/;"	f	file:	signature:(Display *d, XEvent *e, char *arg)
elems	file_path.h	/^   struct string_list_elem *elems;$/;"	m	struct:string_list	typeref:struct:string_list::string_list_elem	access:public
elems	message_queue.c	/^   struct queue_elem **elems;$/;"	m	struct:msg_queue	typeref:struct:msg_queue::queue_elem	file:	access:public
elf32_sym	wii/app_booter/elf_abi.h	/^typedef struct elf32_sym {$/;"	s
elf32_sym::st_info	wii/app_booter/elf_abi.h	/^	unsigned char	st_info;	\/* type and binding *\/$/;"	m	struct:elf32_sym	access:public
elf32_sym::st_name	wii/app_booter/elf_abi.h	/^	Elf32_Word	st_name;	\/* name - index into string table *\/$/;"	m	struct:elf32_sym	access:public
elf32_sym::st_other	wii/app_booter/elf_abi.h	/^	unsigned char	st_other;	\/* 0 - no defined meaning *\/$/;"	m	struct:elf32_sym	access:public
elf32_sym::st_shndx	wii/app_booter/elf_abi.h	/^	Elf32_Half	st_shndx;	\/* section header index *\/$/;"	m	struct:elf32_sym	access:public
elf32_sym::st_size	wii/app_booter/elf_abi.h	/^	Elf32_Word	st_size;	\/* symbol size *\/$/;"	m	struct:elf32_sym	access:public
elf32_sym::st_value	wii/app_booter/elf_abi.h	/^	Elf32_Addr	st_value;	\/* symbol value *\/$/;"	m	struct:elf32_sym	access:public
elfFile	ps3/rgl/src/rgl_cg.h	/^   const char* elfFile;$/;"	m	struct:__anon31	access:public
elfFileSize	ps3/rgl/src/rgl_cg.h	/^   size_t elfFileSize;$/;"	m	struct:__anon31	access:public
elf_hash	wii/app_booter/elf_abi.h	/^unsigned long elf_hash(const unsigned char *name);$/;"	p	signature:(const unsigned char *name)
elfhdr	wii/app_booter/elf_abi.h	/^typedef struct elfhdr{$/;"	s
elfhdr::e_ehsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_ehsize;	\/* ELF header size *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_entry	wii/app_booter/elf_abi.h	/^	Elf32_Addr	e_entry;	\/* virtual entry point *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	e_flags;	\/* processor-specific flags *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_ident	wii/app_booter/elf_abi.h	/^	unsigned char	e_ident[EI_NIDENT]; \/* ELF Identification *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_machine	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_machine;	\/* machine *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_phentsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_phentsize;	\/* program header entry size *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_phnum	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_phnum;	\/* number of program header entries *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_phoff	wii/app_booter/elf_abi.h	/^	Elf32_Off	e_phoff;	\/* program header table offset *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_shentsize	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shentsize;	\/* section header entry size *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_shnum	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shnum;	\/* number of section header entries *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_shoff	wii/app_booter/elf_abi.h	/^	Elf32_Off	e_shoff;	\/* section header table offset *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_shstrndx	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_shstrndx;	\/* section header table's "section$/;"	m	struct:elfhdr	access:public
elfhdr::e_type	wii/app_booter/elf_abi.h	/^	Elf32_Half	e_type;		\/* object file type *\/$/;"	m	struct:elfhdr	access:public
elfhdr::e_version	wii/app_booter/elf_abi.h	/^	Elf32_Word	e_version;	\/* object file version *\/$/;"	m	struct:elfhdr	access:public
embeddedConst	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryEmbeddedConstantOffset  embeddedConst; \/\/ embedded constant information$/;"	m	struct:CgBinaryParameter	access:public
embedded_get_ticks	apple/iOS/bluetooth/btstack/run_loop.h	/^uint32_t embedded_get_ticks(void);$/;"	p	signature:(void)
embedded_ticks_for_ms	apple/iOS/bluetooth/btstack/run_loop.h	/^uint32_t embedded_ticks_for_ms(uint32_t time_in_ms);$/;"	p	signature:(uint32_t time_in_ms)
embedded_trigger	apple/iOS/bluetooth/btstack/run_loop.h	/^void     embedded_trigger(void);    $/;"	p	signature:(void)
empty_buf	gfx/gl_common.h	/^   void *empty_buf;$/;"	m	struct:gl	access:public
enable	driver.h	/^   void (*enable)(void *data, bool state);$/;"	m	struct:video_overlay_interface	access:public
enable	general.h	/^      bool enable;$/;"	m	struct:settings::__anon231	access:public
enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool enable;$/;"	m	struct:__anon199	access:public
enable	gfx/thread_wrapper.c	/^      bool enable;$/;"	m	struct:thread_video::__anon214	file:	access:public
enable	input/overlay.c	/^   bool enable;$/;"	m	struct:input_overlay	file:	access:public
enable	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			enable;	\/\/ bitfield of options to set$/;"	m	struct:PSGLinitOptions	access:public
enable	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint enable;$/;"	m	struct:__anon72	access:public
enable2D	ps3/rgl/include/RGL/Types.h	/^      GLboolean	enable2D;$/;"	m	struct:__anon65	access:public
enable_key_layout	driver.h	/^   bool (*enable_key_layout)(void *data);$/;"	m	struct:input_osk_driver	access:public
enabled	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean enabled;$/;"	f	class:FileWrapper	file:	access:private
enabled	gfx/d3d9/d3d9.hpp	/^   bool enabled;$/;"	m	struct:__anon222	access:public
encode_audio	record/ffemu.c	/^static bool encode_audio(ffemu_t *handle, AVPacket *pkt, bool dry)$/;"	f	file:	signature:(ffemu_t *handle, AVPacket *pkt, bool dry)
encode_video	record/ffemu.c	/^static bool encode_video(ffemu_t *handle, AVPacket *pkt, AVFrame *frame)$/;"	f	file:	signature:(ffemu_t *handle, AVPacket *pkt, AVFrame *frame)
encoder	record/ffemu.c	/^   AVCodec *encoder;$/;"	m	struct:ff_audio_info	file:	access:public
encoder	record/ffemu.c	/^   AVCodec *encoder;$/;"	m	struct:ff_video_info	file:	access:public
encrypted	deps/minizip/unzip.c	/^    int encrypted;$/;"	m	struct:__anon111	file:	access:public
end	dist-scripts/xdk1_env.bat	/^:end$/;"	l
end	dist-scripts/xdk1_env_bigstack.bat	/^:end$/;"	l
end	dist-scripts/xdk360_env.bat	/^:end$/;"	l
end	fifo_buffer.c	/^   size_t end;$/;"	m	struct:fifo_buffer	file:	access:public
end_render	gfx/d3d9/render_chain.cpp	/^void RenderChain::end_render()$/;"	f	class:RenderChain	signature:()
end_render	gfx/d3d9/render_chain.hpp	/^      void end_render();$/;"	p	class:RenderChain	access:private	signature:()
endian	ps3/rgl/src/libelf/readelf.h	/^      unsigned int endian;$/;"	m	struct:_ELF_t	access:public
endianSwapHalf	ps3/rgl/include/RGL/Utils.h	/^   static inline unsigned short endianSwapHalf( unsigned short v )$/;"	f	signature:( unsigned short v )
endianSwapWord	ps3/rgl/include/RGL/Utils.h	/^   static inline unsigned int endianSwapWord( unsigned int v )$/;"	f	signature:( unsigned int v )
endianSwapWordByHalf	ps3/rgl/include/RGL/Utils.h	/^   static inline unsigned int endianSwapWordByHalf( unsigned int v )$/;"	f	signature:( unsigned int v )
endian_addr	ps3/rgl/src/libelf/readelf.h	83;"	d
endian_half	ps3/rgl/src/libelf/readelf.h	/^   uint16_t endian_half(int endian, uint16_t v);$/;"	p	signature:(int endian, uint16_t v)
endian_off	ps3/rgl/src/libelf/readelf.h	84;"	d
endian_size	ps3/rgl/src/libelf/readelf.h	85;"	d
endian_word	ps3/rgl/src/libelf/readelf.h	/^   uint32_t endian_word(int endian, uint32_t v);$/;"	p	signature:(int endian, uint32_t v)
endianness	ps3/rgl/src/cg/nvbi.hpp	/^               endianness() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
endianness	ps3/rgl/src/cg/nvbiimpl.hpp	/^               endianness() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
endianness	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::endianness() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
endianness_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            unsigned char		endianness_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
endloop	frontend/frontend_emscripten.c	/^static void endloop(void)$/;"	f	file:	signature:(void)
engine	audio/opensl.c	/^   SLEngineItf engine;$/;"	m	struct:sl	file:	access:public
engine_handle_cmd	frontend/platform/platform_android.c	/^void engine_handle_cmd(void *data)$/;"	f	signature:(void *data)
engine_handle_cmd	frontend/platform/platform_android.h	/^extern void engine_handle_cmd(void*);$/;"	p	signature:(void*)
engine_handle_dpad	android/native/jni/input_android.c	/^void (*engine_handle_dpad)(void *data, AInputEvent*, size_t, int, char*, size_t, int, bool, unsigned);$/;"	v
engine_handle_dpad_default	android/native/jni/input_android.c	/^static void engine_handle_dpad_default(void *data, AInputEvent *event,$/;"	f	file:	signature:(void *data, AInputEvent *event, size_t motion_pointer, int state_id, char *msg, size_t msg_sizeof, int source, bool debug_enable, unsigned emulation)
engine_handle_dpad_getaxisvalue	android/native/jni/input_android.c	/^static void engine_handle_dpad_getaxisvalue(void *data, AInputEvent *event,$/;"	f	file:	signature:(void *data, AInputEvent *event, size_t motion_pointer, int state_id, char *msg, size_t msg_sizeof, int source, bool debug_enable, unsigned emulation)
engine_object	audio/opensl.c	/^   SLObjectItf engine_object;$/;"	m	struct:sl	file:	access:public
ensureList	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void ensureList()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
entries	conf/config_file.c	/^   struct config_entry_list *entries;$/;"	m	struct:config_file	typeref:struct:config_file::config_entry_list	file:	access:public
entries	frontend/frontend_xenon.c	/^static struct dirent entries[MAX_FILES];$/;"	v	typeref:struct:dirent	file:
entries	frontend/menu/history.c	/^   struct rom_history_entry *entries;$/;"	m	struct:rom_history	typeref:struct:rom_history::rom_history_entry	file:	access:public
entryCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryCount;$/;"	m	struct:_CgParameterTableHeader	access:public
entryIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryIndex;$/;"	m	struct:_CgParameterDefaultValue	access:public
entryIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short entryIndex;$/;"	m	struct:_CgParameterSemantic	access:public
entry_point	wii/app_booter/dolloader.c	/^	u32 entry_point;$/;"	m	struct:_dolheader	file:	access:public
entrycount	frontend/frontend_xenon.c	/^static int entrycount;$/;"	v	file:
entrypoint	ps3/rgl/src/libelf/readelf.h	/^      unsigned int entrypoint;$/;"	m	struct:_ELF_t	access:public
entrypoint	wii/app_booter/dolloader.h	/^typedef void (*entrypoint) (void);$/;"	t
enum_axes_cb	input/dinput.c	/^static BOOL CALLBACK enum_axes_cb(const DIDEVICEOBJECTINSTANCE *inst, void *p)$/;"	f	file:	signature:(const DIDEVICEOBJECTINSTANCE *inst, void *p)
enum_joypad_cb	input/dinput.c	/^static BOOL CALLBACK enum_joypad_cb(const DIDEVICEINSTANCE *inst, void *p)$/;"	f	file:	signature:(const DIDEVICEINSTANCE *inst, void *p)
enumerate_cb	audio/dsound.c	/^static BOOL CALLBACK enumerate_cb(LPGUID guid, LPCSTR desc, LPCSTR module, LPVOID context)$/;"	f	file:	signature:(LPGUID guid, LPCSTR desc, LPCSTR module, LPVOID context)
environ_cb	libretro-test-gl/libretro-test.c	/^static retro_environment_t environ_cb;$/;"	v	file:
environ_cb	libretro-test/libretro-test.c	/^static retro_environment_t environ_cb;$/;"	v	file:
environ_cb_get_system_info	dynamic.c	/^static bool environ_cb_get_system_info(unsigned cmd, void *data)$/;"	f	file:	signature:(unsigned cmd, void *data)
environment_get	frontend/frontend_context.h	/^   void (*environment_get)(int argc, char *argv[], void *args);$/;"	m	struct:frontend_ctx_driver	access:public
epfd	input/udev_input.c	/^   int epfd;$/;"	m	struct:udev_input	file:	access:public
equal	gfx/state_tracker.c	/^   uint16_t equal;$/;"	m	struct:state_tracker_internal	file:	access:public
equal	gfx/state_tracker.h	/^   uint16_t equal;$/;"	m	struct:state_tracker_uniform_info	access:public
err_cb	audio/rsound.c	/^static void err_cb(void *userdata)$/;"	f	file:	signature:(void *userdata)
error	ps3/rgl/include/RGL/Types.h	/^      GLenum			error;$/;"	m	struct:RGLcontext	access:public
errorConsole	ps3/rgl/include/export/RGL/rgl.h	/^   int				errorConsole;$/;"	m	struct:PSGLinitOptions	access:public
error_callback	audio/rsound.h	/^      rsd_error_callback_t error_callback;$/;"	m	struct:rsound	access:public
error_in_init	general.h	/^   bool error_in_init;$/;"	m	struct:global	access:public
error_no_Framework35Version	dist-scripts/xdk360_env.bat	/^:error_no_Framework35Version$/;"	l
error_no_FrameworkDIR32	dist-scripts/xdk360_env.bat	/^:error_no_FrameworkDIR32$/;"	l
error_no_FrameworkVer32	dist-scripts/xdk360_env.bat	/^:error_no_FrameworkVer32$/;"	l
error_no_VS100COMNTOOLSDIR	dist-scripts/xdk360_env.bat	/^:error_no_VS100COMNTOOLSDIR$/;"	l
error_no_VSINSTALLDIR	dist-scripts/xdk360_env.bat	/^:error_no_VSINSTALLDIR$/;"	l
error_sjlj_context	general.h	/^   jmp_buf error_sjlj_context;$/;"	m	struct:global	access:public
error_string	general.h	/^   char error_string[1024];$/;"	m	struct:global	access:public
error_string	ps3/rgl/src/cg/cgbio.hpp	/^            const char *error_string( CGBIO_ERROR error ) const;$/;"	p	class:cgc::bio::bin_io	access:public	signature:( CGBIO_ERROR error ) const
error_string	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::error_string( CGBIO_ERROR error ) const$/;"	f	class:cgc::bio::bin_io	signature:( CGBIO_ERROR error ) const
event	audio/dsound.c	/^   HANDLE event;$/;"	m	struct:dsound	file:	access:public
event	thread.c	/^   HANDLE event;$/;"	m	struct:scond	file:	access:public
event_loop	ps3/ps3_audio.c	/^static void event_loop(void *data)$/;"	f	file:	signature:(void *data)
event_reload_config	frontend/platform/platform_apple.c	/^static void event_reload_config(void* userdata)$/;"	f	file:	signature:(void* userdata)
event_stasis	frontend/platform/platform_apple.c	/^static void event_stasis(void* userdata)$/;"	f	file:	signature:(void* userdata)
events	audio/ext/rarch_dsp.h	/^   void (*events)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
everAttached	ps3/rgl/include/RGL/Types.h	/^      GLboolean		everAttached;$/;"	m	struct:RGLcontext	access:public
exec	frontend/frontend_context.h	/^   void (*exec)(const char *, bool);$/;"	m	struct:frontend_ctx_driver	access:public
exec	general.h	/^   bool exec;$/;"	m	struct:global	access:public
exit_callback	frontend/platform/platform_psp.c	/^static int exit_callback(int arg1, int arg2, void *common)$/;"	f	file:	signature:(int arg1, int arg2, void *common)
exitspawn	frontend/frontend_context.h	/^   void (*exitspawn)(void);$/;"	m	struct:frontend_ctx_driver	access:public
exp	apple/common/hidpad/wiimote.h	/^		struct expansion_t exp;			\/**< wiimote expansion device				*\/$/;"	m	struct:wiimote_t	typeref:struct:wiimote_t::expansion_t	access:public
expansion_t	apple/common/hidpad/wiimote.h	/^	typedef struct expansion_t {$/;"	s
expansion_t	apple/common/hidpad/wiimote.h	/^	} expansion_t;$/;"	t	typeref:struct:expansion_t
expansion_t::__anon158::classic	apple/common/hidpad/wiimote.h	/^			struct classic_ctrl_t classic;$/;"	m	union:expansion_t::__anon158	typeref:struct:expansion_t::__anon158::classic_ctrl_t	access:public
expansion_t::type	apple/common/hidpad/wiimote.h	/^		int type;						\/**< type of expansion attached				*\/$/;"	m	struct:expansion_t	access:public
ext	file_extract.c	/^   struct string_list *ext;$/;"	m	struct:zip_extract_userdata	typeref:struct:zip_extract_userdata::string_list	file:	access:public
ext_modules	ps3/ps3py/setup.py	/^       ext_modules = [module1])$/;"	v
external_fa	deps/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
external_fa	deps/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
extractArchiveTo	android/phoenix/src/com/retroarch/browser/NativeInterface.java	/^	public static native boolean extractArchiveTo(String archive,$/;"	m	class:NativeInterface	access:public	signature:(String archive, String subDirectory, String destinationFolder)
extractAssets	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private void extractAssets()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
extractAssetsThread	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private void extractAssetsThread()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
extract_cpuinfo_field	performance/performance_android.c	/^extract_cpuinfo_field(char* buffer, int buflen, const char* field)$/;"	f	file:	signature:(char* buffer, int buflen, const char* field)
extract_value	conf/config_file.c	/^static char *extract_value(char *line, bool is_value)$/;"	f	file:	signature:(char *line, bool is_value)
f	gfx/thread_wrapper.c	/^      float f;$/;"	m	union:thread_video::__anon215	file:	access:public
f	ps3/rgl/include/RGL/TypeUtils.h	/^   float f;$/;"	m	union:__anon71	access:public
fPrg	gfx/d3d9/render_chain.hpp	/^         CGprogram vPrg, fPrg;$/;"	m	struct:RenderChain::Pass	access:public
fStock	gfx/d3d9/render_chain.hpp	/^      CGprogram vStock, fStock;$/;"	m	class:RenderChain	access:private
f_ctable	gfx/shader_hlsl.c	/^   LPD3DXCONSTANTTABLE f_ctable;$/;"	m	struct:hlsl_program	file:	access:public
face	gfx/fonts/freetype.c	/^   FT_Face face;$/;"	m	struct:font_renderer	file:	access:public
faces	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		faces;$/;"	m	struct:__anon52	access:public
fake_extern	apple/common/setting_data.c	/^struct global fake_extern;$/;"	v	typeref:struct:global
fake_settings	apple/common/setting_data.c	/^struct settings fake_settings;$/;"	v	typeref:struct:settings
fallback_log	libretro-test/libretro-test.c	/^static void fallback_log(enum retro_log_level level, const char *fmt, ...)$/;"	f	file:	signature:(enum retro_log_level level, const char *fmt, ...)
false	libretro.h	37;"	d
fastforward_ratio	config.def.h	/^static const float fastforward_ratio = -1.0;$/;"	v
fastforward_ratio	general.h	/^   float fastforward_ratio;$/;"	m	struct:settings	access:public
fb	gfx/context/gles_egl_ctx.c	/^int fb;$/;"	v
fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t fb; \/* framebuffer *\/$/;"	m	struct:__anon187	access:public
fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t fb;$/;"	m	struct:__anon193	access:public
fb_framesize	gfx/omap_gfx.c	/^  unsigned fb_framesize;$/;"	m	struct:omapfb_data	file:	access:public
fb_height	record/ffemu.h	/^   unsigned fb_height;$/;"	m	struct:ffemu_params	access:public
fb_id	gfx/context/drm_egl_ctx.c	/^   uint32_t fb_id;$/;"	m	struct:drm_fb	file:	access:public
fb_mem	gfx/omap_gfx.c	/^  void *fb_mem;$/;"	m	struct:omapfb_data	file:	access:public
fb_mode	gfx/context/sunxi_disp_ioctl.h	/^	__fb_mode_t fb_mode;$/;"	m	struct:__anon201	access:public
fb_width	record/ffemu.h	/^   unsigned fb_width;$/;"	m	struct:ffemu_params	access:public
fbname	gfx/omap_gfx.c	/^  const char* fbname;$/;"	m	struct:omapfb_data	file:	access:public
fbo	gfx/gl_common.h	/^   GLuint fbo[MAX_SHADERS];$/;"	m	struct:gl	access:public
fbo	gfx/shader_cg.c	/^   struct cg_fbo_params fbo[GFX_MAX_SHADERS];$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
fbo	gfx/shader_parse.h	/^   struct gfx_fbo_scale fbo;$/;"	m	struct:gfx_shader_pass	typeref:struct:gfx_shader_pass::gfx_fbo_scale	access:public
fbo	libretro-test-gl/libretro-test.c	/^static GLuint fbo;$/;"	v	file:
fbo_inited	gfx/gl_common.h	/^   bool fbo_inited;$/;"	m	struct:gl	access:public
fbo_inited	xdk/xdk_d3d.h	/^   bool fbo_inited;$/;"	m	struct:xdk_d3d_video	access:public
fbo_pass	gfx/gl_common.h	/^   int fbo_pass;$/;"	m	struct:gl	access:public
fbo_rect	gfx/gl_common.h	/^   struct gl_fbo_rect fbo_rect[MAX_SHADERS];$/;"	m	struct:gl	typeref:struct:gl::gl_fbo_rect	access:public
fbo_scale	gfx/gl_common.h	/^   struct gfx_fbo_scale fbo_scale[MAX_SHADERS];$/;"	m	struct:gl	typeref:struct:gl::gfx_fbo_scale	access:public
fbo_texture	gfx/gl_common.h	/^   GLuint fbo_texture[MAX_SHADERS];$/;"	m	struct:gl	access:public
fd	apple/iOS/bluetooth/btstack/run_loop.h	/^    int  fd;                                 \/\/ <-- file descriptor to watch or 0$/;"	m	struct:data_source	access:public
fd	camera/video4linux2.c	/^   int fd;$/;"	m	struct:video4linux	file:	access:public
fd	file_extract.c	/^   int fd;$/;"	m	struct:__anon108	file:	access:public
fd	gfx/omap_gfx.c	/^  int fd;$/;"	m	struct:omapfb_data	file:	access:public
fd	input/linuxraw_joypad.c	/^   int fd;$/;"	m	struct:linuxraw_joypad	file:	access:public
fd	input/udev_input.c	/^   int fd;$/;"	m	struct:input_device	file:	access:public
fd	input/udev_joypad.c	/^   int fd;$/;"	m	struct:udev_joypad	file:	access:public
fd	netplay.c	/^   int fd; \/\/ TCP connection for state sending, etc. Also used for commands.$/;"	m	struct:netplay	file:	access:public
features	apple/common/setting_data.c	/^static const uint32_t features = SD_FEATURE_SHADERS;$/;"	v	file:
features	apple/common/setting_data.c	/^static const uint32_t features = SD_FEATURE_VIDEO_MODE | SD_FEATURE_SHADERS |$/;"	v	file:
fence	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    fence;$/;"	m	struct:GmmBlock	access:public
fence_count	gfx/gl_common.h	/^   unsigned fence_count;$/;"	m	struct:gl	access:public
fences	gfx/gl_common.h	/^   GLsync fences[MAX_FENCES];$/;"	m	struct:gl	access:public
fetch	gfx/state_tracker.c	/^static inline uint16_t fetch(const struct state_tracker_internal *info)$/;"	f	file:	signature:(const struct state_tracker_internal *info)
ff_audio_info	record/ffemu.c	/^struct ff_audio_info$/;"	s	file:
ff_audio_info::buffer	record/ffemu.c	/^   uint8_t *buffer;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::codec	record/ffemu.c	/^   AVCodecContext *codec;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::encoder	record/ffemu.c	/^   AVCodec *encoder;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::fixed_conv	record/ffemu.c	/^   int16_t *fixed_conv;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::fixed_conv_frames	record/ffemu.c	/^   size_t fixed_conv_frames;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::float_conv	record/ffemu.c	/^   float *float_conv;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::float_conv_frames	record/ffemu.c	/^   size_t float_conv_frames;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::frame_cnt	record/ffemu.c	/^   int64_t frame_cnt;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::frames_in_buffer	record/ffemu.c	/^   size_t frames_in_buffer;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::is_planar	record/ffemu.c	/^   bool is_planar;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::outbuf	record/ffemu.c	/^   uint8_t *outbuf;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::outbuf_size	record/ffemu.c	/^   size_t outbuf_size;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::planar_buf	record/ffemu.c	/^   void *planar_buf;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::planar_buf_frames	record/ffemu.c	/^   size_t planar_buf_frames;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::ratio	record/ffemu.c	/^   double ratio;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::resample_out	record/ffemu.c	/^   float *resample_out;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::resample_out_frames	record/ffemu.c	/^   size_t resample_out_frames;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::resampler	record/ffemu.c	/^   const rarch_resampler_t *resampler;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::resampler_data	record/ffemu.c	/^   void *resampler_data;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::sample_size	record/ffemu.c	/^   unsigned sample_size;$/;"	m	struct:ff_audio_info	file:	access:public
ff_audio_info::use_float	record/ffemu.c	/^   bool use_float;$/;"	m	struct:ff_audio_info	file:	access:public
ff_config_param	record/ffemu.c	/^struct ff_config_param$/;"	s	file:
ff_config_param::acodec	record/ffemu.c	/^   char acodec[64];$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::audio_bit_rate	record/ffemu.c	/^   int audio_bit_rate;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::audio_global_quality	record/ffemu.c	/^   int audio_global_quality;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::audio_opts	record/ffemu.c	/^   AVDictionary *audio_opts;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::audio_qscale	record/ffemu.c	/^   bool audio_qscale;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::conf	record/ffemu.c	/^   config_file_t *conf;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::format	record/ffemu.c	/^   char format[64];$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::frame_drop_ratio	record/ffemu.c	/^   unsigned frame_drop_ratio;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::out_pix_fmt	record/ffemu.c	/^   enum PixelFormat out_pix_fmt;$/;"	m	struct:ff_config_param	typeref:enum:ff_config_param::PixelFormat	file:	access:public
ff_config_param::sample_rate	record/ffemu.c	/^   unsigned sample_rate;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::scale_factor	record/ffemu.c	/^   unsigned scale_factor;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::threads	record/ffemu.c	/^   unsigned threads;$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::vcodec	record/ffemu.c	/^   char vcodec[64];$/;"	m	struct:ff_config_param	file:	access:public
ff_config_param::video_opts	record/ffemu.c	/^   AVDictionary *video_opts;$/;"	m	struct:ff_config_param	file:	access:public
ff_muxer_info	record/ffemu.c	/^struct ff_muxer_info$/;"	s	file:
ff_muxer_info::astream	record/ffemu.c	/^   AVStream *astream;$/;"	m	struct:ff_muxer_info	file:	access:public
ff_muxer_info::ctx	record/ffemu.c	/^   AVFormatContext *ctx;$/;"	m	struct:ff_muxer_info	file:	access:public
ff_muxer_info::vstream	record/ffemu.c	/^   AVStream *vstream;$/;"	m	struct:ff_muxer_info	file:	access:public
ff_video_info	record/ffemu.c	/^struct ff_video_info$/;"	s	file:
ff_video_info::codec	record/ffemu.c	/^   AVCodecContext *codec;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::conv_frame	record/ffemu.c	/^   AVFrame *conv_frame;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::conv_frame_buf	record/ffemu.c	/^   uint8_t *conv_frame_buf;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::encoder	record/ffemu.c	/^   AVCodec *encoder;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::format	record/ffemu.c	/^   AVFormatContext *format;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::frame_cnt	record/ffemu.c	/^   int64_t frame_cnt;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::frame_drop_count	record/ffemu.c	/^   unsigned frame_drop_count;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::frame_drop_ratio	record/ffemu.c	/^   unsigned frame_drop_ratio;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::in_pix_fmt	record/ffemu.c	/^   enum PixelFormat in_pix_fmt;$/;"	m	struct:ff_video_info	typeref:enum:ff_video_info::PixelFormat	file:	access:public
ff_video_info::outbuf	record/ffemu.c	/^   uint8_t *outbuf;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::outbuf_size	record/ffemu.c	/^   size_t outbuf_size;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::pix_fmt	record/ffemu.c	/^   enum PixelFormat pix_fmt;$/;"	m	struct:ff_video_info	typeref:enum:ff_video_info::PixelFormat	file:	access:public
ff_video_info::pix_size	record/ffemu.c	/^   size_t pix_size;$/;"	m	struct:ff_video_info	file:	access:public
ff_video_info::scaler	record/ffemu.c	/^   struct scaler_ctx scaler;$/;"	m	struct:ff_video_info	typeref:struct:ff_video_info::scaler_ctx	file:	access:public
ff_video_info::sws	record/ffemu.c	/^   struct SwsContext *sws;$/;"	m	struct:ff_video_info	typeref:struct:ff_video_info::SwsContext	file:	access:public
ff_video_info::use_sws	record/ffemu.c	/^   bool use_sws;$/;"	m	struct:ff_video_info	file:	access:public
ffemu	record/ffemu.c	/^struct ffemu$/;"	s	file:
ffemu::alive	record/ffemu.c	/^   volatile bool alive;$/;"	m	struct:ffemu	file:	access:public
ffemu::attr_fifo	record/ffemu.c	/^   fifo_buffer_t *attr_fifo;$/;"	m	struct:ffemu	file:	access:public
ffemu::audio	record/ffemu.c	/^   struct ff_audio_info audio;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_audio_info	file:	access:public
ffemu::audio_fifo	record/ffemu.c	/^   fifo_buffer_t *audio_fifo;$/;"	m	struct:ffemu	file:	access:public
ffemu::can_sleep	record/ffemu.c	/^   volatile bool can_sleep;$/;"	m	struct:ffemu	file:	access:public
ffemu::cond	record/ffemu.c	/^   scond_t *cond;$/;"	m	struct:ffemu	file:	access:public
ffemu::cond_lock	record/ffemu.c	/^   slock_t *cond_lock;$/;"	m	struct:ffemu	file:	access:public
ffemu::config	record/ffemu.c	/^   struct ff_config_param config;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_config_param	file:	access:public
ffemu::lock	record/ffemu.c	/^   slock_t *lock;$/;"	m	struct:ffemu	file:	access:public
ffemu::muxer	record/ffemu.c	/^   struct ff_muxer_info muxer;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_muxer_info	file:	access:public
ffemu::params	record/ffemu.c	/^   struct ffemu_params params;$/;"	m	struct:ffemu	typeref:struct:ffemu::ffemu_params	file:	access:public
ffemu::thread	record/ffemu.c	/^   sthread_t *thread;$/;"	m	struct:ffemu	file:	access:public
ffemu::video	record/ffemu.c	/^   struct ff_video_info video;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_video_info	file:	access:public
ffemu::video_fifo	record/ffemu.c	/^   fifo_buffer_t *video_fifo;$/;"	m	struct:ffemu	file:	access:public
ffemu_audio_data	record/ffemu.h	/^struct ffemu_audio_data$/;"	s
ffemu_audio_data::data	record/ffemu.h	/^   const void *data;$/;"	m	struct:ffemu_audio_data	access:public
ffemu_audio_data::frames	record/ffemu.h	/^   size_t frames;$/;"	m	struct:ffemu_audio_data	access:public
ffemu_audio_resample	record/ffemu.c	/^static void ffemu_audio_resample(ffemu_t *handle, struct ffemu_audio_data *data)$/;"	f	file:	signature:(ffemu_t *handle, struct ffemu_audio_data *data)
ffemu_audio_resolve_format	record/ffemu.c	/^static void ffemu_audio_resolve_format(struct ff_audio_info *audio, const AVCodec *codec)$/;"	f	file:	signature:(struct ff_audio_info *audio, const AVCodec *codec)
ffemu_audio_resolve_sample_rate	record/ffemu.c	/^static void ffemu_audio_resolve_sample_rate(ffemu_t *handle, const AVCodec *codec)$/;"	f	file:	signature:(ffemu_t *handle, const AVCodec *codec)
ffemu_codec_has_sample_format	record/ffemu.c	/^static bool ffemu_codec_has_sample_format(enum AVSampleFormat fmt, const enum AVSampleFormat *fmts)$/;"	f	file:	signature:(enum AVSampleFormat fmt, const enum AVSampleFormat *fmts)
ffemu_finalize	record/ffemu.c	/^bool ffemu_finalize(ffemu_t *handle)$/;"	f	signature:(ffemu_t *handle)
ffemu_finalize	record/ffemu.h	/^bool ffemu_finalize(ffemu_t *handle);$/;"	p	signature:(ffemu_t *handle)
ffemu_flush_audio	record/ffemu.c	/^static void ffemu_flush_audio(ffemu_t *handle, void *audio_buf, size_t audio_buf_size)$/;"	f	file:	signature:(ffemu_t *handle, void *audio_buf, size_t audio_buf_size)
ffemu_flush_buffers	record/ffemu.c	/^static void ffemu_flush_buffers(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_flush_video	record/ffemu.c	/^static void ffemu_flush_video(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_free	record/ffemu.c	/^void ffemu_free(ffemu_t *handle)$/;"	f	signature:(ffemu_t *handle)
ffemu_free	record/ffemu.h	/^void ffemu_free(ffemu_t* handle);$/;"	p	signature:(ffemu_t* handle)
ffemu_init_audio	record/ffemu.c	/^static bool ffemu_init_audio(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_init_config	record/ffemu.c	/^static bool ffemu_init_config(struct ff_config_param *params, const char *config)$/;"	f	file:	signature:(struct ff_config_param *params, const char *config)
ffemu_init_muxer_post	record/ffemu.c	/^static bool ffemu_init_muxer_post(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_init_muxer_pre	record/ffemu.c	/^static bool ffemu_init_muxer_pre(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_init_video	record/ffemu.c	/^static bool ffemu_init_video(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
ffemu_new	record/ffemu.c	/^ffemu_t *ffemu_new(const struct ffemu_params *params)$/;"	f	signature:(const struct ffemu_params *params)
ffemu_new	record/ffemu.h	/^ffemu_t *ffemu_new(const struct ffemu_params *params);$/;"	p	signature:(const struct ffemu_params *params)
ffemu_params	record/ffemu.h	/^struct ffemu_params$/;"	s
ffemu_params::aspect_ratio	record/ffemu.h	/^   float aspect_ratio;$/;"	m	struct:ffemu_params	access:public
ffemu_params::channels	record/ffemu.h	/^   unsigned channels;$/;"	m	struct:ffemu_params	access:public
ffemu_params::config	record/ffemu.h	/^   const char *config;$/;"	m	struct:ffemu_params	access:public
ffemu_params::fb_height	record/ffemu.h	/^   unsigned fb_height;$/;"	m	struct:ffemu_params	access:public
ffemu_params::fb_width	record/ffemu.h	/^   unsigned fb_width;$/;"	m	struct:ffemu_params	access:public
ffemu_params::filename	record/ffemu.h	/^   const char *filename;$/;"	m	struct:ffemu_params	access:public
ffemu_params::fps	record/ffemu.h	/^   double fps;$/;"	m	struct:ffemu_params	access:public
ffemu_params::out_height	record/ffemu.h	/^   unsigned out_height;$/;"	m	struct:ffemu_params	access:public
ffemu_params::out_width	record/ffemu.h	/^   unsigned out_width;$/;"	m	struct:ffemu_params	access:public
ffemu_params::pix_fmt	record/ffemu.h	/^   enum ffemu_pix_format pix_fmt;$/;"	m	struct:ffemu_params	typeref:enum:ffemu_params::ffemu_pix_format	access:public
ffemu_params::samplerate	record/ffemu.h	/^   double samplerate;$/;"	m	struct:ffemu_params	access:public
ffemu_pix_format	record/ffemu.h	/^enum ffemu_pix_format$/;"	g
ffemu_push_audio	record/ffemu.c	/^bool ffemu_push_audio(ffemu_t *handle, const struct ffemu_audio_data *data)$/;"	f	signature:(ffemu_t *handle, const struct ffemu_audio_data *data)
ffemu_push_audio	record/ffemu.h	/^bool ffemu_push_audio(ffemu_t *handle, const struct ffemu_audio_data *data);$/;"	p	signature:(ffemu_t *handle, const struct ffemu_audio_data *data)
ffemu_push_audio_thread	record/ffemu.c	/^static bool ffemu_push_audio_thread(ffemu_t *handle, struct ffemu_audio_data *data, bool require_block)$/;"	f	file:	signature:(ffemu_t *handle, struct ffemu_audio_data *data, bool require_block)
ffemu_push_video	record/ffemu.c	/^bool ffemu_push_video(ffemu_t *handle, const struct ffemu_video_data *data)$/;"	f	signature:(ffemu_t *handle, const struct ffemu_video_data *data)
ffemu_push_video	record/ffemu.h	/^bool ffemu_push_video(ffemu_t *handle, const struct ffemu_video_data *data);$/;"	p	signature:(ffemu_t *handle, const struct ffemu_video_data *data)
ffemu_push_video_thread	record/ffemu.c	/^static bool ffemu_push_video_thread(ffemu_t *handle, const struct ffemu_video_data *data)$/;"	f	file:	signature:(ffemu_t *handle, const struct ffemu_video_data *data)
ffemu_scale_input	record/ffemu.c	/^static void ffemu_scale_input(ffemu_t *handle, const struct ffemu_video_data *data)$/;"	f	file:	signature:(ffemu_t *handle, const struct ffemu_video_data *data)
ffemu_t	record/ffemu.h	/^typedef struct ffemu ffemu_t;$/;"	t	typeref:struct:ffemu
ffemu_thread	record/ffemu.c	/^static void ffemu_thread(void *data)$/;"	f	file:	signature:(void *data)
ffemu_thread	record/ffemu.c	/^static void ffemu_thread(void *data);$/;"	p	file:	signature:(void *data)
ffemu_video_data	record/ffemu.h	/^struct ffemu_video_data$/;"	s
ffemu_video_data::data	record/ffemu.h	/^   const void *data;$/;"	m	struct:ffemu_video_data	access:public
ffemu_video_data::height	record/ffemu.h	/^   unsigned height;$/;"	m	struct:ffemu_video_data	access:public
ffemu_video_data::is_dupe	record/ffemu.h	/^   bool is_dupe;$/;"	m	struct:ffemu_video_data	access:public
ffemu_video_data::pitch	record/ffemu.h	/^   int pitch;$/;"	m	struct:ffemu_video_data	access:public
ffemu_video_data::width	record/ffemu.h	/^   unsigned width;$/;"	m	struct:ffemu_video_data	access:public
fifo	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmFifo               fifo;$/;"	m	struct:rglGcmState	access:public
fifoBlockSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  fifoBlockSize;$/;"	m	struct:rglGcmFifo	access:public
fifoSize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			fifoSize;$/;"	m	struct:PSGLinitOptions	access:public
fifoUpdateGetLastRead	ps3/rgl/src/include/rgl-typedefs.h	218;"	d
fifo_buffer	audio/rsound.h	/^      fifo_buffer_t *fifo_buffer;$/;"	m	struct:rsound	access:public
fifo_buffer	fifo_buffer.c	/^struct fifo_buffer$/;"	s	file:
fifo_buffer::buffer	fifo_buffer.c	/^   uint8_t *buffer;$/;"	m	struct:fifo_buffer	file:	access:public
fifo_buffer::bufsize	fifo_buffer.c	/^   size_t bufsize;$/;"	m	struct:fifo_buffer	file:	access:public
fifo_buffer::end	fifo_buffer.c	/^   size_t end;$/;"	m	struct:fifo_buffer	file:	access:public
fifo_buffer::first	fifo_buffer.c	/^   size_t first;$/;"	m	struct:fifo_buffer	file:	access:public
fifo_buffer_t	fifo_buffer.h	/^typedef struct fifo_buffer fifo_buffer_t;$/;"	t	typeref:struct:fifo_buffer
fifo_free	fifo_buffer.c	/^void fifo_free(fifo_buffer_t *buffer)$/;"	f	signature:(fifo_buffer_t *buffer)
fifo_free	fifo_buffer.h	/^void fifo_free(fifo_buffer_t *buffer);$/;"	p	signature:(fifo_buffer_t *buffer)
fifo_lock	audio/alsathread.c	/^   slock_t *fifo_lock;$/;"	m	struct:alsa_thread	file:	access:public
fifo_new	fifo_buffer.c	/^fifo_buffer_t *fifo_new(size_t size)$/;"	f	signature:(size_t size)
fifo_new	fifo_buffer.h	/^fifo_buffer_t *fifo_new(size_t size);$/;"	p	signature:(size_t size)
fifo_read	fifo_buffer.c	/^void fifo_read(fifo_buffer_t *buffer, void *in_buf, size_t size)$/;"	f	signature:(fifo_buffer_t *buffer, void *in_buf, size_t size)
fifo_read	fifo_buffer.h	/^void fifo_read(fifo_buffer_t *buffer, void *in_buf, size_t size);$/;"	p	signature:(fifo_buffer_t *buffer, void *in_buf, size_t size)
fifo_read_avail	fifo_buffer.c	/^size_t fifo_read_avail(fifo_buffer_t *buffer)$/;"	f	signature:(fifo_buffer_t *buffer)
fifo_read_avail	fifo_buffer.h	/^size_t fifo_read_avail(fifo_buffer_t *buffer);$/;"	p	signature:(fifo_buffer_t *buffer)
fifo_write	fifo_buffer.c	/^void fifo_write(fifo_buffer_t *buffer, const void *in_buf, size_t size)$/;"	f	signature:(fifo_buffer_t *buffer, const void *in_buf, size_t size)
fifo_write	fifo_buffer.h	/^void fifo_write(fifo_buffer_t *buffer, const void *in_buf, size_t size);$/;"	p	signature:(fifo_buffer_t *buffer, const void *in_buf, size_t size)
fifo_write_avail	fifo_buffer.c	/^size_t fifo_write_avail(fifo_buffer_t *buffer)$/;"	f	signature:(fifo_buffer_t *buffer)
fifo_write_avail	fifo_buffer.h	/^size_t fifo_write_avail(fifo_buffer_t *buffer);$/;"	p	signature:(fifo_buffer_t *buffer)
file	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final File file;$/;"	f	class:FileWrapper	file:	access:private
file	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final File file;$/;"	f	class:ModuleWrapper	file:	access:private
file	apple/iOS/platform.h	/^      FILE* file;$/;"	m	struct:__anon154::__anon155	access:public
file	movie.c	/^   FILE *file;$/;"	m	struct:bsv_movie	file:	access:public
file_in_zip_read_info_s	deps/minizip/unzip.c	/^} file_in_zip_read_info_s;$/;"	t	typeref:struct:__anon110	file:
file_list	file_list.h	/^typedef struct file_list$/;"	s
file_list::capacity	file_list.h	/^   size_t capacity;$/;"	m	struct:file_list	access:public
file_list::list	file_list.h	/^   struct item_file *list;$/;"	m	struct:file_list	typeref:struct:file_list::item_file	access:public
file_list::size	file_list.h	/^   size_t size;$/;"	m	struct:file_list	access:public
file_list_alt_cmp	file_list.c	/^static int file_list_alt_cmp(const void *a_, const void *b_)$/;"	f	file:	signature:(const void *a_, const void *b_)
file_list_clear	file_list.c	/^void file_list_clear(file_list_t *list)$/;"	f	signature:(file_list_t *list)
file_list_clear	file_list.h	/^void file_list_clear(file_list_t *list);$/;"	p	signature:(file_list_t *list)
file_list_free	file_list.c	/^void file_list_free(file_list_t *list)$/;"	f	signature:(file_list_t *list)
file_list_free	file_list.h	/^void file_list_free(file_list_t *list);$/;"	p	signature:(file_list_t *list)
file_list_get_alt_at_offset	file_list.c	/^void file_list_get_alt_at_offset(const file_list_t *list, size_t index,$/;"	f	signature:(const file_list_t *list, size_t index, const char **alt)
file_list_get_alt_at_offset	file_list.h	/^void file_list_get_alt_at_offset(const file_list_t *list, size_t index,$/;"	p	signature:(const file_list_t *list, size_t index, const char **alt)
file_list_get_at_offset	file_list.c	/^void file_list_get_at_offset(const file_list_t *list, size_t index,$/;"	f	signature:(const file_list_t *list, size_t index, const char **path, unsigned *file_type)
file_list_get_at_offset	file_list.h	/^void file_list_get_at_offset(const file_list_t *list, size_t index,$/;"	p	signature:(const file_list_t *list, size_t index, const char **path, unsigned *type)
file_list_get_last	file_list.c	/^void file_list_get_last(const file_list_t *list,$/;"	f	signature:(const file_list_t *list, const char **path, unsigned *file_type)
file_list_get_last	file_list.h	/^void file_list_get_last(const file_list_t *list,$/;"	p	signature:(const file_list_t *list, const char **path, unsigned *type)
file_list_pop	file_list.c	/^void file_list_pop(file_list_t *list, size_t *directory_ptr)$/;"	f	signature:(file_list_t *list, size_t *directory_ptr)
file_list_pop	file_list.h	/^void file_list_pop(file_list_t *list, size_t *directory_ptr);$/;"	p	signature:(file_list_t *list, size_t *directory_ptr)
file_list_push	file_list.c	/^void file_list_push(file_list_t *list,$/;"	f	signature:(file_list_t *list, const char *path, unsigned type, size_t directory_ptr)
file_list_push	file_list.h	/^void file_list_push(file_list_t *userdata, const char *path,$/;"	p	signature:(file_list_t *userdata, const char *path, unsigned type, size_t current_directory_ptr)
file_list_search	file_list.c	/^bool file_list_search(const file_list_t *list, const char *needle, size_t *index)$/;"	f	signature:(const file_list_t *list, const char *needle, size_t *index)
file_list_search	file_list.h	/^bool file_list_search(const file_list_t *list, const char *needle, size_t *index);$/;"	p	signature:(const file_list_t *list, const char *needle, size_t *index)
file_list_set_alt_at_offset	file_list.c	/^void file_list_set_alt_at_offset(file_list_t *list, size_t index,$/;"	f	signature:(file_list_t *list, size_t index, const char *alt)
file_list_set_alt_at_offset	file_list.h	/^void file_list_set_alt_at_offset(file_list_t *list, size_t index,$/;"	p	signature:(file_list_t *list, size_t index, const char *alt)
file_list_sort_on_alt	file_list.c	/^void file_list_sort_on_alt(file_list_t *list)$/;"	f	signature:(file_list_t *list)
file_list_sort_on_alt	file_list.h	/^void file_list_sort_on_alt(file_list_t *list);$/;"	p	signature:(file_list_t *list)
file_list_t	file_list.h	/^} file_list_t;$/;"	t	typeref:struct:file_list
file_name	ps3/sdk_defines.h	297;"	d
file_offset	ps3/sdk_defines.h	298;"	d
file_size	ps3/sdk_defines.h	299;"	d
filebrowser_fetch_directory_entries	frontend/menu/rmenu_xui.cpp	/^void filebrowser_fetch_directory_entries(uint64_t action)$/;"	f	signature:(uint64_t action)
filedata	ps3/rgl/include/Cg/CgProgramGroup.h	/^   char *filedata;$/;"	m	struct:_CGprogramGroup	access:public
filename	record/ffemu.h	/^   const char *filename;$/;"	m	struct:ffemu_params	access:public
filestream	deps/minizip/unzip.c	/^    voidpf filestream;        \/* io structore of the zipfile *\/$/;"	m	struct:__anon110	file:	access:public
filestream	deps/minizip/unzip.c	/^    voidpf filestream;        \/* io structore of the zipfile *\/$/;"	m	struct:__anon111	file:	access:public
fillStructureItems	ps3/rgl/src/rgl_ps3_cg.cpp	/^static void fillStructureItems(_CGNVCONTAINERS &containers, CgStructureType *structure, int endianness,$/;"	f	file:	signature:(_CGNVCONTAINERS &containers, CgStructureType *structure, int endianness, std::vector<CgParameterEntry> &parameterEntries,std::vector<char> &parameterResources, std::vector<char> &stringTable, unsigned short *arrayResourceIndex, unsigned short *arrayDefaultValueIndex)
fillStructureItems	ps3/rgl/src/rgl_ps3_cg.cpp	/^static void fillStructureItems(_CGNVCONTAINERS &containers, CgStructureType *structure,$/;"	p	file:	signature:(_CGNVCONTAINERS &containers, CgStructureType *structure, int endianness, std::vector<CgParameterEntry> &parameterEntries, std::vector<char> &parameterResources, std::vector<char> &stringTable, unsigned short *arrayResourceIndex, unsigned short *arrayDefaultValueIndex)
fill_dated_filename	file_path.c	/^void fill_dated_filename(char *out_filename, const char *ext, size_t size)$/;"	f	signature:(char *out_filename, const char *ext, size_t size)
fill_dated_filename	file_path.h	/^void fill_dated_filename(char *out_filename, const char *ext, size_t size);$/;"	p	signature:(char *out_filename, const char *ext, size_t size)
fill_pathname	file_path.c	/^void fill_pathname(char *out_path, const char *in_path, const char *replace, size_t size)$/;"	f	signature:(char *out_path, const char *in_path, const char *replace, size_t size)
fill_pathname	file_path.h	/^void fill_pathname(char *out_path, const char *in_path, const char *replace, size_t size);$/;"	p	signature:(char *out_path, const char *in_path, const char *replace, size_t size)
fill_pathname_application_path	file_path.c	/^void fill_pathname_application_path(char *buf, size_t size)$/;"	f	signature:(char *buf, size_t size)
fill_pathname_application_path	file_path.h	/^void fill_pathname_application_path(char *buf, size_t size);$/;"	p	signature:(char *buf, size_t size)
fill_pathname_base	file_path.c	/^void fill_pathname_base(char *out, const char *in_path, size_t size)$/;"	f	signature:(char *out, const char *in_path, size_t size)
fill_pathname_base	file_path.h	/^void fill_pathname_base(char *out_path, const char *in_path, size_t size);$/;"	p	signature:(char *out_path, const char *in_path, size_t size)
fill_pathname_basedir	file_path.c	/^void fill_pathname_basedir(char *out_dir, const char *in_path, size_t size)$/;"	f	signature:(char *out_dir, const char *in_path, size_t size)
fill_pathname_basedir	file_path.h	/^void fill_pathname_basedir(char *out_path, const char *in_path, size_t size);$/;"	p	signature:(char *out_path, const char *in_path, size_t size)
fill_pathname_dir	file_path.c	/^void fill_pathname_dir(char *in_dir, const char *in_basename, const char *replace, size_t size)$/;"	f	signature:(char *in_dir, const char *in_basename, const char *replace, size_t size)
fill_pathname_dir	file_path.h	/^void fill_pathname_dir(char *in_dir, const char *in_basename, const char *replace, size_t size);$/;"	p	signature:(char *in_dir, const char *in_basename, const char *replace, size_t size)
fill_pathname_join	file_path.c	/^void fill_pathname_join(char *out_path, const char *dir, const char *path, size_t size)$/;"	f	signature:(char *out_path, const char *dir, const char *path, size_t size)
fill_pathname_join	file_path.h	/^void fill_pathname_join(char *out_path, const char *dir, const char *path, size_t size);$/;"	p	signature:(char *out_path, const char *dir, const char *path, size_t size)
fill_pathname_noext	file_path.c	/^void fill_pathname_noext(char *out_path, const char *in_path, const char *replace, size_t size)$/;"	f	signature:(char *out_path, const char *in_path, const char *replace, size_t size)
fill_pathname_noext	file_path.h	/^void fill_pathname_noext(char *out_path, const char *in_path, const char *replace, size_t size);$/;"	p	signature:(char *out_path, const char *in_path, const char *replace, size_t size)
fill_pathname_parent_dir	file_path.c	/^void fill_pathname_parent_dir(char *out_dir, const char *in_dir, size_t size)$/;"	f	signature:(char *out_dir, const char *in_dir, size_t size)
fill_pathname_parent_dir	file_path.h	/^void fill_pathname_parent_dir(char *out_dir, const char *in_dir, size_t size);$/;"	p	signature:(char *out_dir, const char *in_dir, size_t size)
fill_pathname_resolve_relative	file_path.c	/^void fill_pathname_resolve_relative(char *out_path, const char *in_refpath, const char *in_path, size_t size)$/;"	f	signature:(char *out_path, const char *in_refpath, const char *in_path, size_t size)
fill_pathname_resolve_relative	file_path.h	/^void fill_pathname_resolve_relative(char *out_path, const char *in_refpath, const char *in_path, size_t size);$/;"	p	signature:(char *out_path, const char *in_refpath, const char *in_path, size_t size)
fill_pathname_slash	file_path.c	/^static void fill_pathname_slash(char *path, size_t size)$/;"	f	file:	signature:(char *path, size_t size)
fill_pathnames	retroarch.c	/^static void fill_pathnames(void)$/;"	f	file:	signature:(void)
fill_rect	frontend/menu/disp/rgui.c	/^static void fill_rect(uint16_t *buf, unsigned pitch,$/;"	f	file:	signature:(uint16_t *buf, unsigned pitch, unsigned x, unsigned y, unsigned width, unsigned height, uint16_t (*col)(unsigned x, unsigned y))
filter	general.h	/^   } filter;$/;"	m	struct:global	typeref:struct:global::__anon237	access:public
filter	gfx/rpng/rpng.c	/^   uint8_t filter;$/;"	m	struct:png_ihdr	file:	access:public
filter	gfx/scaler/scaler.h	/^   int16_t *filter;$/;"	m	struct:scaler_filter	access:public
filter	gfx/shader_parse.h	/^   enum gfx_filter_type filter;$/;"	m	struct:gfx_shader_lut	typeref:enum:gfx_shader_lut::gfx_filter_type	access:public
filter	gfx/shader_parse.h	/^   enum gfx_filter_type filter;$/;"	m	struct:gfx_shader_pass	typeref:enum:gfx_shader_pass::gfx_filter_type	access:public
filter	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureFilter   filter;$/;"	m	struct:rglGcmTextureMethodParams	access:public
filterPath	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private boolean filterPath(String path)$/;"	m	class:DirectoryFragment	file:	access:private	signature:(String path)
filter_avg	gfx/rpng/rpng.c	/^static unsigned filter_avg(uint8_t *target, const uint8_t *line, const uint8_t *prev,$/;"	f	file:	signature:(uint8_t *target, const uint8_t *line, const uint8_t *prev, unsigned width, unsigned bpp)
filter_len	gfx/scaler/scaler.h	/^   int filter_len;$/;"	m	struct:scaler_filter	access:public
filter_paeth	gfx/rpng/rpng.c	/^static unsigned filter_paeth(uint8_t *target, const uint8_t *line, const uint8_t *prev,$/;"	f	file:	signature:(uint8_t *target, const uint8_t *line, const uint8_t *prev, unsigned width, unsigned bpp)
filter_path	general.h	/^      char filter_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
filter_pos	gfx/scaler/scaler.h	/^   int *filter_pos;$/;"	m	struct:scaler_filter	access:public
filter_sinc	gfx/scaler/filter.c	/^static inline double filter_sinc(double phase)$/;"	f	file:	signature:(double phase)
filter_stride	gfx/scaler/scaler.h	/^   int filter_stride;$/;"	m	struct:scaler_filter	access:public
filter_sub	gfx/rpng/rpng.c	/^static unsigned filter_sub(uint8_t *target, const uint8_t *line,$/;"	f	file:	signature:(uint8_t *target, const uint8_t *line, unsigned width, unsigned bpp)
filter_type	gfx/shader_common.h	/^   bool (*filter_type)(unsigned index, bool *smooth);$/;"	m	struct:gl_shader_backend	access:public
filter_up	gfx/rpng/rpng.c	/^static unsigned filter_up(uint8_t *target, const uint8_t *line, const uint8_t *prev,$/;"	f	file:	signature:(uint8_t *target, const uint8_t *line, const uint8_t *prev, unsigned width, unsigned bpp)
filtering	gfx/thread_wrapper.c	/^      } filtering;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon220	file:	access:public
final_viewport	gfx/d3d9/d3d9.hpp	/^      D3DVIEWPORT9 final_viewport;$/;"	m	class:D3DVideo	access:private
final_viewport	gfx/d3d9/render_chain.hpp	/^      D3DVIEWPORT9 final_viewport;$/;"	m	class:RenderChain	access:private
findDevices	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::findDevices()$/;"	f	class:RetroArch	signature:()
findDevices	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void findDevices();$/;"	p	class:RetroArch	access:public	signature:()
findModeByEnum	ps3/rgl/src/rgl_ps3.cpp	/^static const VideoMode *findModeByEnum( GLenum TVStandard )$/;"	f	file:	signature:( GLenum TVStandard )
findModeByResolution	ps3/rgl/src/rgl_ps3.cpp	/^static inline const VideoMode *findModeByResolution( int width, int height )$/;"	f	file:	signature:( int width, int height )
findModeByResolutionInTable	ps3/rgl/src/rgl_ps3.cpp	/^static const VideoMode *findModeByResolutionInTable( int width, int height, const VideoMode *table, int modeCount )$/;"	f	file:	signature:( int width, int height, const VideoMode *table, int modeCount )
findPreference	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public Preference findPreference(CharSequence key)$/;"	m	class:PreferenceListFragment	access:public	signature:(CharSequence key)
findSection	ps3/rgl/src/libelf/readelf.h	/^   ELF_section_t* findSection(const ELF_t* elf,const char* name);$/;"	p	signature:(const ELF_t* elf,const char* name)
findSectionInPlace	ps3/rgl/src/libelf/readelf.c	/^const char *findSectionInPlace(const char* memory, const char *name, size_t *sectionSize)$/;"	f	signature:(const char* memory, const char *name, size_t *sectionSize)
findSectionInPlace	ps3/rgl/src/libelf/readelf.h	/^   const char *findSectionInPlace(const char* memory, const char *name,size_t *sectionSize);$/;"	p	signature:(const char* memory, const char *name,size_t *sectionSize)
findSymbolSectionInPlace	ps3/rgl/src/libelf/readelf.c	/^const char *findSymbolSectionInPlace(const char *memory, size_t *symbolSize, size_t *symbolCount, const char **symbolstrtab)$/;"	f	signature:(const char *memory, size_t *symbolSize, size_t *symbolCount, const char **symbolstrtab)
findSymbolSectionInPlace	ps3/rgl/src/libelf/readelf.h	/^   const char *findSymbolSectionInPlace(const char *memory, size_t *symbolSize, size_t *symbolCount, const char **symbolstrtab);$/;"	p	signature:(const char *memory, size_t *symbolSize, size_t *symbolCount, const char **symbolstrtab)
findValidPitch	ps3/rgl/src/rgl_ps3.cpp	/^static unsigned int findValidPitch( unsigned int pitch )$/;"	f	file:	signature:( unsigned int pitch )
find_and_set_first_file	frontend/platform/platform_gx.c	/^static void find_and_set_first_file(void)$/;"	f	file:	signature:(void)
find_and_set_first_file	frontend/platform/platform_ps3.c	/^static void find_and_set_first_file(void)$/;"	f	file:	signature:(void)
find_and_set_first_file	frontend/platform/platform_xdk.c	/^static void find_and_set_first_file(void)$/;"	f	file:	signature:(void)
find_audio_driver	driver.c	/^static void find_audio_driver(void)$/;"	f	file:	signature:(void)
find_audio_driver_index	driver.c	/^static int find_audio_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
find_buffersize	audio/jack.c	/^static size_t find_buffersize(jack_t *jd, int latency)$/;"	f	file:	signature:(jack_t *jd, int latency)
find_camera_driver	driver.c	/^static void find_camera_driver(void)$/;"	f	file:	signature:(void)
find_camera_driver_index	driver.c	/^static int find_camera_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
find_core_info	core_info.c	/^static core_info_t *find_core_info(core_info_list_t *list, const char *core)$/;"	f	file:	signature:(core_info_list_t *list, const char *core)
find_empty_slot	apple/common/apple_joypad.c	/^static int32_t find_empty_slot()$/;"	f	file:
find_first_cue	tools/retrolaunch/cd_detect.c	/^int find_first_cue(const char* m3u_path, char* cue_path, size_t max_len) {$/;"	f	signature:(const char* m3u_path, char* cue_path, size_t max_len)
find_first_data_track	tools/retrolaunch/cd_detect.c	/^static int find_first_data_track(const char* cue_path, int32_t* offset,$/;"	f	file:	signature:(const char* cue_path, int32_t* offset, char* track_path, size_t max_len)
find_first_libretro	dynamic.c	/^static bool find_first_libretro(char *path, size_t size,$/;"	f	file:	signature:(char *path, size_t size, const char *dir, const char *rom_path)
find_first_libretro_core	frontend/frontend_salamander.c	/^static void find_first_libretro_core(char *first_file,$/;"	f	file:	signature:(char *first_file, size_t size_of_first_file, const char *dir, const char * ext)
find_first_libretro_core	frontend/frontend_salamander.h	/^static void find_first_libretro_core(char *first_file,$/;"	p	signature:(char *first_file, size_t size_of_first_file, const char *dir, const char * ext)
find_first_space	compat/rxml/rxml.c	/^static char *find_first_space(const char *str)$/;"	f	file:	signature:(const char *str)
find_float_format	audio/alsa.c	/^static bool find_float_format(snd_pcm_t *pcm, void *data)$/;"	f	file:	signature:(snd_pcm_t *pcm, void *data)
find_gl_symbols	gfx/glsym/glgen.py	/^def find_gl_symbols(lines):$/;"	f	access:public
find_hash	tools/retrolaunch/main.c	/^static int find_hash(int fd, const char *hash, char *game_name, size_t max_len)$/;"	f	file:	signature:(int fd, const char *hash, char *game_name, size_t max_len)
find_input_driver	driver.c	/^static void find_input_driver(void)$/;"	f	file:	signature:(void)
find_input_driver_index	driver.c	/^static int find_input_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
find_last_slash	file_path.c	/^static char *find_last_slash(const char *str)$/;"	f	file:	signature:(const char *str)
find_location_driver	driver.c	/^static void find_location_driver(void)$/;"	f	file:	signature:(void)
find_location_driver_index	driver.c	/^static int find_location_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
find_long_index	compat/compat.c	/^static int find_long_index(char * const *argv)$/;"	f	file:	signature:(char * const *argv)
find_next_audio_driver	driver.c	/^void find_next_audio_driver(void)$/;"	f	signature:(void)
find_next_audio_driver	driver.h	/^void find_next_audio_driver(void);$/;"	p	signature:(void)
find_next_camera_driver	driver.c	/^void find_next_camera_driver(void)$/;"	f	signature:(void)
find_next_camera_driver	driver.h	/^void find_next_camera_driver(void);$/;"	p	signature:(void)
find_next_input_driver	driver.c	/^void find_next_input_driver(void)$/;"	f	signature:(void)
find_next_input_driver	driver.h	/^void find_next_input_driver(void);$/;"	p	signature:(void)
find_next_location_driver	driver.c	/^void find_next_location_driver(void)$/;"	f	signature:(void)
find_next_location_driver	driver.h	/^void find_next_location_driver(void);$/;"	p	signature:(void)
find_next_osk_driver	driver.c	/^void find_next_osk_driver(void)$/;"	f	signature:(void)
find_next_video_driver	driver.c	/^void find_next_video_driver(void)$/;"	f	signature:(void)
find_next_video_driver	driver.h	/^void find_next_video_driver(void);$/;"	p	signature:(void)
find_num_frames	audio/sdl_audio.c	/^static inline int find_num_frames(int rate, int latency)$/;"	f	file:	signature:(int rate, int latency)
find_osk_driver	driver.c	/^static void find_osk_driver(void)$/;"	f	file:	signature:(void)
find_osk_driver_index	driver.c	/^static int find_osk_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
find_param_from_semantic	gfx/d3d9/render_chain.cpp	/^static inline CGparameter find_param_from_semantic(CGparameter param, const std::string &sem)$/;"	f	file:	signature:(CGparameter param, const std::string &sem)
find_param_from_semantic	gfx/d3d9/render_chain.cpp	/^static inline CGparameter find_param_from_semantic(CGprogram prog, const std::string &sem)$/;"	f	file:	signature:(CGprogram prog, const std::string &sem)
find_prev_audio_driver	driver.c	/^void find_prev_audio_driver(void)$/;"	f	signature:(void)
find_prev_audio_driver	driver.h	/^void find_prev_audio_driver(void);$/;"	p	signature:(void)
find_prev_camera_driver	driver.c	/^void find_prev_camera_driver(void)$/;"	f	signature:(void)
find_prev_camera_driver	driver.h	/^void find_prev_camera_driver(void);$/;"	p	signature:(void)
find_prev_input_driver	driver.c	/^void find_prev_input_driver(void)$/;"	f	signature:(void)
find_prev_input_driver	driver.h	/^void find_prev_input_driver(void);$/;"	p	signature:(void)
find_prev_location_driver	driver.c	/^void find_prev_location_driver(void)$/;"	f	signature:(void)
find_prev_location_driver	driver.h	/^void find_prev_location_driver(void);$/;"	p	signature:(void)
find_prev_osk_driver	driver.c	/^void find_prev_osk_driver(void)$/;"	f	signature:(void)
find_prev_video_driver	driver.c	/^void find_prev_video_driver(void)$/;"	f	signature:(void)
find_prev_video_driver	driver.h	/^void find_prev_video_driver(void);$/;"	p	signature:(void)
find_ps1_canonical_name	tools/retrolaunch/cd_detect.c	/^static int find_ps1_canonical_name(const char* game_id, char* game_name,$/;"	f	file:	signature:(const char* game_id, char* game_name, size_t max_len)
find_rom_canonical_name	tools/retrolaunch/main.c	/^find_rom_canonical_name(const char *hash, char *game_name, size_t max_len)$/;"	f	file:	signature:(const char *hash, char *game_name, size_t max_len)
find_short_index	compat/compat.c	/^static int find_short_index(char * const *argv)$/;"	f	file:	signature:(char * const *argv)
find_sk_bind	input/input_common.c	/^static enum retro_key find_sk_bind(const char *str)$/;"	f	file:	signature:(const char *str)
find_sk_key	input/input_common.c	/^static enum retro_key find_sk_key(const char *str)$/;"	f	file:	signature:(const char *str)
find_token	tools/retrolaunch/parser.c	/^int find_token(int fd, const char *token)$/;"	f	signature:(int fd, const char *token)
find_token	tools/retrolaunch/parser.h	/^int find_token(int fd, const char* token);$/;"	p	signature:(int fd, const char* token)
find_uniforms	gfx/shader_glsl.c	/^static void find_uniforms(unsigned pass, GLuint prog, struct shader_uniforms *uni)$/;"	f	file:	signature:(unsigned pass, GLuint prog, struct shader_uniforms *uni)
find_uniforms_frame	gfx/shader_glsl.c	/^static void find_uniforms_frame(GLuint prog, struct shader_uniforms_frame *frame, const char *base)$/;"	f	file:	signature:(GLuint prog, struct shader_uniforms_frame *frame, const char *base)
find_vacant_pad	input/udev_joypad.c	/^static int find_vacant_pad(void)$/;"	f	file:	signature:(void)
find_video_driver	driver.c	/^static void find_video_driver(void)$/;"	f	file:	signature:(void)
find_video_driver_index	driver.c	/^static int find_video_driver_index(const char *driver)$/;"	f	file:	signature:(const char *driver)
finishWithPath	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private void finishWithPath(String path)$/;"	m	class:DirectoryFragment	file:	access:private	signature:(String path)
firmware	core_info.h	/^   core_info_firmware_t *firmware;$/;"	m	struct:__anon252	access:public
firmware_count	core_info.h	/^   size_t firmware_count;$/;"	m	struct:__anon252	access:public
first	fifo_buffer.c	/^   size_t first;$/;"	m	struct:fifo_buffer	file:	access:public
firstFree	ps3/rgl/include/RGL/Types.h	/^      void** firstFree;$/;"	m	struct:rglNameSpace	access:public
firstVertex	ps3/rgl/include/RGL/Types.h	/^      GLint	firstVertex;$/;"	m	struct:__anon67	access:public
first_page_flip	gfx/context/drm_egl_ctx.c	/^static unsigned first_page_flip;$/;"	v	file:
first_pop	rewind.c	/^   bool first_pop;$/;"	m	struct:state_manager	file:	access:public
first_rewind	movie.c	/^   bool first_rewind;$/;"	m	struct:bsv_movie	file:	access:public
fixed_conv	record/ffemu.c	/^   int16_t *fixed_conv;$/;"	m	struct:ff_audio_info	file:	access:public
fixed_conv_frames	record/ffemu.c	/^   size_t fixed_conv_frames;$/;"	m	struct:ff_audio_info	file:	access:public
fixed_x	apple/common/apple_input.h	/^   int16_t fixed_x, fixed_y;$/;"	m	struct:__anon159	access:public
fixed_y	apple/common/apple_input.h	/^   int16_t fixed_x, fixed_y;$/;"	m	struct:__anon159	access:public
fixup_filter	gfx/scaler/filter.c	/^static void fixup_filter(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
fixup_filter_sub	gfx/scaler/filter.c	/^static void fixup_filter_sub(struct scaler_filter *filter, int out_len, int in_len)$/;"	f	file:	signature:(struct scaler_filter *filter, int out_len, int in_len)
flag	compat/getopt_rarch.h	/^   int *flag;$/;"	m	struct:option	access:public
flag	deps/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
flag	deps/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
flag_addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 flag_addr; \/* dit maf flag address *\/$/;"	m	struct:__anon189	access:public
flag_stride	gfx/context/sunxi_disp_ioctl.h	/^	__u32 flag_stride; \/* dit maf flag line stride *\/$/;"	m	struct:__anon189	access:public
flags	apple/common/setting_data.h	/^   uint64_t flags;$/;"	m	struct:__anon161	access:public
flags	ps3/ps3_input_osk.c	/^   uint32_t flags;$/;"	m	struct:ps3_osk	file:	access:public
flags	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned char flags; \/\/combination of CGF_OUTPUTFROMH0,CGF_DEPTHREPLACE,CGF_PIXELKILL$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
flags	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short flags;$/;"	m	struct:_CgParameterEntry	access:public
flicker_filter_index	general.h	/^         unsigned char flicker_filter_index;$/;"	m	struct:global::__anon242::__anon243	access:public
flip	netplay.c	/^   bool flip;$/;"	m	struct:netplay	file:	access:public
flip_frame	netplay.c	/^   uint32_t flip_frame;$/;"	m	struct:netplay	file:	access:public
float	ps3/ps3py/pkg.py	/^	float = StructType(('f', 4))$/;"	v	class:Struct
floatIsZero	gfx/math/matrix_3x3.c	22;"	d	file:
float_conv	record/ffemu.c	/^   float *float_conv;$/;"	m	struct:ff_audio_info	file:	access:public
float_conv_frames	record/ffemu.c	/^   size_t float_conv_frames;$/;"	m	struct:ff_audio_info	file:	access:public
floatsEqual	gfx/math/matrix_3x3.c	21;"	d	file:
flushBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint flushBufferCount;	\/\/ # of mapped buffer objects in bounce buffer$/;"	m	struct:rglGcmDriver_	access:public
flush_rewind_audio	retroarch.c	/^static inline void flush_rewind_audio(void)$/;"	f	file:	signature:(void)
focus	driver.h	/^   bool (*focus)(void *data); \/\/ Does the window have focus?$/;"	m	struct:video_driver	access:public
focus	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::focus() const$/;"	f	class:D3DVideo	signature:() const
focus	gfx/d3d9/d3d9.hpp	/^      bool focus() const;$/;"	p	class:D3DVideo	access:public	signature:() const
focus	gfx/thread_wrapper.c	/^   bool focus;$/;"	m	struct:thread_video	file:	access:public
focus	gfx/xvideo.c	/^   bool focus;$/;"	m	struct:xv	file:	access:public
font	frontend/menu/menu_common.h	/^   const uint8_t *font;$/;"	m	struct:__anon25	access:public
font	gfx/d3d9/d3d9.hpp	/^      LPD3DXFONT font;$/;"	m	class:D3DVideo	access:private
font	gfx/gl_common.h	/^   void *font;$/;"	m	struct:gl	access:public
font	gfx/lima_gfx.c	/^   void *font;$/;"	m	struct:lima_video	file:	access:public
font	gfx/omap_gfx.c	/^  void *font;$/;"	m	struct:omap_video	file:	access:public
font	gfx/sdl_gfx.c	/^   void *font;$/;"	m	struct:sdl_video	file:	access:public
font	gfx/xvideo.c	/^   void *font;$/;"	m	struct:xv	file:	access:public
font_b	gfx/lima_gfx.c	/^   uint8_t font_b;$/;"	m	struct:lima_video	file:	access:public
font_b	gfx/sdl_gfx.c	/^   uint8_t font_b;$/;"	m	struct:sdl_video	file:	access:public
font_backends	gfx/fonts/fonts.c	/^static const font_renderer_driver_t *font_backends[] = {$/;"	v	file:
font_color	gfx/d3d9/d3d9.hpp	/^      uint32_t font_color;$/;"	m	class:D3DVideo	access:private
font_color	gfx/gl_common.h	/^   GLfloat font_color[16];$/;"	m	struct:gl	access:public
font_color_dark	gfx/gl_common.h	/^   GLfloat font_color_dark[16];$/;"	m	struct:gl	access:public
font_ctx	gfx/gl_common.h	/^   const gl_font_renderer_t *font_ctx;$/;"	m	struct:gl	access:public
font_ctx	xdk/xdk_d3d.h	/^   const d3d_font_renderer_t *font_ctx;$/;"	m	struct:xdk_d3d_video	access:public
font_driver	gfx/gl_common.h	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:gl	access:public
font_driver	gfx/lima_gfx.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:lima_video	file:	access:public
font_driver	gfx/omap_gfx.c	/^  const font_renderer_driver_t *font_driver;$/;"	m	struct:omap_video	file:	access:public
font_driver	gfx/sdl_gfx.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:sdl_video	file:	access:public
font_driver	gfx/vg.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:__anon225	file:	access:public
font_driver	gfx/xvideo.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:xv	file:	access:public
font_enable	config.def.h	/^static const bool font_enable = true;$/;"	v
font_enable	general.h	/^      bool font_enable;$/;"	m	struct:settings::__anon227	access:public
font_g	gfx/lima_gfx.c	/^   uint8_t font_g;$/;"	m	struct:lima_video	file:	access:public
font_g	gfx/sdl_gfx.c	/^   uint8_t font_g;$/;"	m	struct:sdl_video	file:	access:public
font_last_height	gfx/gl_common.h	/^   int font_last_width, font_last_height;$/;"	m	struct:gl	access:public
font_last_msg	gfx/gl_common.h	/^   char font_last_msg[256];$/;"	m	struct:gl	access:public
font_last_width	gfx/gl_common.h	/^   int font_last_width, font_last_height;$/;"	m	struct:gl	access:public
font_output	gfx/fonts/fonts.h	/^struct font_output$/;"	s
font_output::advance_x	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
font_output::advance_y	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
font_output::char_off_x	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
font_output::char_off_y	gfx/fonts/fonts.h	/^   int advance_x, advance_y, char_off_x, char_off_y; \/\/ for advanced font rendering$/;"	m	struct:font_output	access:public
font_output::color	gfx/fonts/fonts.h	/^   unsigned color;$/;"	m	struct:font_output	access:public
font_output::height	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
font_output::next	gfx/fonts/fonts.h	/^   struct font_output *next; \/\/ linked list.$/;"	m	struct:font_output	typeref:struct:font_output::font_output	access:public
font_output::off_x	gfx/fonts/fonts.h	/^   int off_x, off_y;$/;"	m	struct:font_output	access:public
font_output::off_y	gfx/fonts/fonts.h	/^   int off_x, off_y;$/;"	m	struct:font_output	access:public
font_output::output	gfx/fonts/fonts.h	/^   uint8_t *output; \/\/ 8-bit alpha.$/;"	m	struct:font_output	access:public
font_output::pitch	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
font_output::scaling_factor	gfx/fonts/fonts.h	/^   unsigned scaling_factor;$/;"	m	struct:font_output	access:public
font_output::width	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
font_output_list	gfx/fonts/fonts.h	/^struct font_output_list$/;"	s
font_output_list::head	gfx/fonts/fonts.h	/^   struct font_output *head;$/;"	m	struct:font_output_list	typeref:struct:font_output_list::font_output	access:public
font_params_t	gfx/gfx_common.h	/^} font_params_t;$/;"	t	typeref:struct:__anon204
font_path	general.h	/^      char font_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
font_paths	gfx/fonts/freetype.c	/^static const char *font_paths[] = {$/;"	v	file:
font_r	gfx/lima_gfx.c	/^   uint8_t font_r;$/;"	m	struct:lima_video	file:	access:public
font_r	gfx/sdl_gfx.c	/^   uint8_t font_r;$/;"	m	struct:sdl_video	file:	access:public
font_rect	gfx/d3d9/d3d9.hpp	/^      RECT font_rect;$/;"	m	class:D3DVideo	access:private
font_rect	gfx/fonts/gl_raster_font.c	/^struct font_rect$/;"	s	file:
font_rect::height	gfx/fonts/gl_raster_font.c	/^   int width, height;$/;"	m	struct:font_rect	file:	access:public
font_rect::pot_height	gfx/fonts/gl_raster_font.c	/^   int pot_width, pot_height;$/;"	m	struct:font_rect	file:	access:public
font_rect::pot_width	gfx/fonts/gl_raster_font.c	/^   int pot_width, pot_height;$/;"	m	struct:font_rect	file:	access:public
font_rect::width	gfx/fonts/gl_raster_font.c	/^   int width, height;$/;"	m	struct:font_rect	file:	access:public
font_rect::x	gfx/fonts/gl_raster_font.c	/^   int x, y;$/;"	m	struct:font_rect	file:	access:public
font_rect::y	gfx/fonts/gl_raster_font.c	/^   int x, y;$/;"	m	struct:font_rect	file:	access:public
font_rect_shifted	gfx/d3d9/d3d9.hpp	/^      RECT font_rect_shifted;$/;"	m	class:D3DVideo	access:private
font_renderer	gfx/fonts/bitmapfont.c	/^struct font_renderer$/;"	s	file:
font_renderer	gfx/fonts/freetype.c	/^struct font_renderer$/;"	s	file:
font_renderer::bitmap_alloc	gfx/fonts/bitmapfont.c	/^   uint8_t *bitmap_alloc;$/;"	m	struct:font_renderer	file:	access:public
font_renderer::bitmap_chars	gfx/fonts/bitmapfont.c	/^   uint8_t *bitmap_chars[256];$/;"	m	struct:font_renderer	file:	access:public
font_renderer::face	gfx/fonts/freetype.c	/^   FT_Face face;$/;"	m	struct:font_renderer	file:	access:public
font_renderer::lib	gfx/fonts/freetype.c	/^   FT_Library lib;$/;"	m	struct:font_renderer	file:	access:public
font_renderer::scale_factor	gfx/fonts/bitmapfont.c	/^   unsigned scale_factor;$/;"	m	struct:font_renderer	file:	access:public
font_renderer_create_default	gfx/fonts/fonts.c	/^bool font_renderer_create_default(const font_renderer_driver_t **driver, void **handle)$/;"	f	signature:(const font_renderer_driver_t **driver, void **handle)
font_renderer_create_default	gfx/fonts/fonts.h	/^bool font_renderer_create_default(const font_renderer_driver_t **driver, void **handle);$/;"	p	signature:(const font_renderer_driver_t **driver, void **handle)
font_renderer_driver	gfx/fonts/fonts.h	/^typedef struct font_renderer_driver$/;"	s
font_renderer_driver::free	gfx/fonts/fonts.h	/^   void (*free)(void *data);$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver::free_output	gfx/fonts/fonts.h	/^   void (*free_output)(void *data, struct font_output_list *list);$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver::get_default_font	gfx/fonts/fonts.h	/^   const char *(*get_default_font)(void);$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver::ident	gfx/fonts/fonts.h	/^   const char *ident;$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver::init	gfx/fonts/fonts.h	/^   void *(*init)(const char *font_path, float font_size);$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver::render_msg	gfx/fonts/fonts.h	/^   void (*render_msg)(void *data, const char *msg, struct font_output_list *output);$/;"	m	struct:font_renderer_driver	access:public
font_renderer_driver_t	gfx/fonts/fonts.h	/^} font_renderer_driver_t;$/;"	t	typeref:struct:font_renderer_driver
font_renderer_free	gfx/fonts/bitmapfont.c	/^static void font_renderer_free(void *data)$/;"	f	file:	signature:(void *data)
font_renderer_free_output	gfx/fonts/bitmapfont.c	/^static void font_renderer_free_output(void *data, struct font_output_list *output)$/;"	f	file:	signature:(void *data, struct font_output_list *output)
font_renderer_get_default_font	gfx/fonts/bitmapfont.c	/^static const char *font_renderer_get_default_font(void)$/;"	f	file:	signature:(void)
font_renderer_init	gfx/fonts/bitmapfont.c	/^static void *font_renderer_init(const char *font_path, float font_size)$/;"	f	file:	signature:(const char *font_path, float font_size)
font_renderer_msg	gfx/fonts/bitmapfont.c	/^static void font_renderer_msg(void *data, const char *msg, struct font_output_list *output) $/;"	f	file:	signature:(void *data, const char *msg, struct font_output_list *output)
font_renderer_t	gfx/fonts/fonts.h	/^typedef struct font_renderer font_renderer_t;$/;"	t	typeref:struct:font_renderer
font_rgb	gfx/omap_gfx.c	/^  uint8_t font_rgb[4];$/;"	m	struct:omap_video	file:	access:public
font_scale	config.def.h	/^static const bool font_scale = true;$/;"	v
font_scale	general.h	/^      bool font_scale;$/;"	m	struct:settings::__anon227	access:public
font_size	config.def.h	/^static const float font_size = 1.0f;$/;"	v
font_size	config.def.h	/^static const float font_size = 48;$/;"	v
font_size	general.h	/^      float font_size;$/;"	m	struct:settings::__anon227	access:public
font_tex	gfx/gl_common.h	/^   GLuint font_tex;$/;"	m	struct:gl	access:public
font_tex_buf	gfx/gl_common.h	/^   uint32_t *font_tex_buf;$/;"	m	struct:gl	access:public
font_tex_h	gfx/gl_common.h	/^   int font_tex_w, font_tex_h;$/;"	m	struct:gl	access:public
font_tex_w	gfx/gl_common.h	/^   int font_tex_w, font_tex_h;$/;"	m	struct:gl	access:public
font_u	gfx/xvideo.c	/^   uint8_t font_u;$/;"	m	struct:xv	file:	access:public
font_v	gfx/xvideo.c	/^   uint8_t font_v;$/;"	m	struct:xv	file:	access:public
font_x	xdk/xdk_d3d.cpp	/^unsigned font_x, font_y;$/;"	v
font_y	gfx/xvideo.c	/^   uint8_t font_y;$/;"	m	struct:xv	file:	access:public
font_y	xdk/xdk_d3d.cpp	/^unsigned font_x, font_y;$/;"	v
force_aspect	config.def.h	/^static const bool force_aspect = true; $/;"	v
force_aspect	driver.h	/^   bool force_aspect;$/;"	m	struct:video_info	access:public
force_aspect	general.h	/^      bool force_aspect;$/;"	m	struct:settings::__anon227	access:public
force_fullscreen	general.h	/^   bool force_fullscreen;$/;"	m	struct:global	access:public
force_nonblock	general.h	/^      bool force_nonblock;$/;"	m	struct:global::__anon234	access:public
foreign	ps3/rgl/src/libelf/readelf.h	/^      unsigned char foreign;$/;"	m	struct:__anon35	access:public
format	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    const char *format;$/;"	m	struct:__anon150	access:public
format	audio/openal.c	/^   ALenum format;$/;"	m	struct:al	file:	access:public
format	audio/rsound.h	/^      uint16_t format;$/;"	m	struct:rsound	access:public
format	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_fmt_t format;$/;"	m	struct:__anon186	access:public
format	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_fmt_t format[2];$/;"	m	struct:__anon203	access:public
format	ps3/rgl/include/RGL/Types.h	/^      GLenum format;$/;"	m	struct:__anon62	access:public
format	ps3/rgl/include/RGL/Types.h	/^      GLenum format;$/;"	m	struct:rglImage_	access:public
format	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum format;	\/\/ e.g. RGLGCM_ARGB8$/;"	m	struct:__anon49	access:public
format	record/ffemu.c	/^   AVFormatContext *format;$/;"	m	struct:ff_video_info	file:	access:public
format	record/ffemu.c	/^   char format[64];$/;"	m	struct:ff_config_param	file:	access:public
format_desc	gfx/xvideo.c	/^struct format_desc$/;"	s	file:
format_desc::components	gfx/xvideo.c	/^   char components[4];$/;"	m	struct:format_desc	file:	access:public
format_desc::luma_index	gfx/xvideo.c	/^   unsigned luma_index[2];$/;"	m	struct:format_desc	file:	access:public
format_desc::render_16	gfx/xvideo.c	/^   void (*render_16)(xv_t *xv, const void *input,$/;"	m	struct:format_desc	file:	access:public
format_desc::render_32	gfx/xvideo.c	/^   void (*render_32)(xv_t *xv, const void *input,$/;"	m	struct:format_desc	file:	access:public
format_desc::u_index	gfx/xvideo.c	/^   unsigned u_index;$/;"	m	struct:format_desc	file:	access:public
format_desc::v_index	gfx/xvideo.c	/^   unsigned v_index;$/;"	m	struct:format_desc	file:	access:public
formats	gfx/xvideo.c	/^static const struct format_desc formats[] = {$/;"	v	typeref:struct:format_desc	file:
found_rom	file_extract.c	/^   bool found_rom;$/;"	m	struct:zip_extract_userdata	file:	access:public
fourcc	gfx/xvideo.c	/^   uint32_t fourcc;$/;"	m	struct:xv	file:	access:public
fpLoadProgramId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fpLoadProgramId; \/\/ address of the currently bound fragment program$/;"	m	struct:rglGcmDriver_	access:public
fpLoadProgramOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fpLoadProgramOffset;$/;"	m	struct:rglGcmDriver_	access:public
fp_fbo	gfx/shader_parse.h	/^   bool fp_fbo;$/;"	m	struct:gfx_fbo_scale	access:public
fpic	libretro-test-gl/Makefile	/^   fpic := -fPIC$/;"	m
fpic	libretro-test/Makefile	/^	fpic := -fPIC$/;"	m
fpic	libretro-test/Makefile	/^   fpic := -fPIC$/;"	m
fprg	gfx/shader_cg.c	/^   CGprogram fprg;$/;"	m	struct:cg_program	file:	access:public
fprg	gfx/shader_hlsl.c	/^   IDirect3DPixelShader9 *fprg;$/;"	m	struct:hlsl_program	file:	access:public
fps	libretro.h	/^   double fps;             \/\/ FPS of video content.$/;"	m	struct:retro_system_timing	access:public
fps	record/ffemu.h	/^   double fps;$/;"	m	struct:ffemu_params	access:public
fps_show	general.h	/^   bool fps_show;$/;"	m	struct:settings	access:public
fraction	apple/common/setting_data.h	/^      float fraction;$/;"	m	union:__anon161::__anon162	access:public
fraction	apple/common/setting_data.h	/^      float* fraction;$/;"	m	union:__anon161::__anon163	access:public
frag_hacks	tools/cg2glsl.py	/^   frag_hacks = []$/;"	v
fragment	gfx/shader_parse.h	/^         char *fragment; \/\/ Dynamically allocated. Must be free'd.$/;"	m	struct:gfx_shader_pass::__anon212::__anon213	access:public
fragmentProgram	ps3/rgl/include/Cg/CgInternal.h	/^         fragmentProgram;$/;"	m	union:CgProgramHeader::__anon74	typeref:struct:CgProgramHeader::__anon74::__anon76	access:public
fragmentProgramAttribMask	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fragmentProgramAttribMask;$/;"	m	struct:rglGcmInterpolantState	access:public
fragmentTarget	ps3/rgl/include/RGL/Types.h	/^      GLenum      fragmentTarget;$/;"	m	struct:__anon65	access:public
fragment_program	ps3/rgl/src/cg/nvbi.hpp	/^               fragment_program() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
fragment_program	ps3/rgl/src/cg/nvbiimpl.hpp	/^               fragment_program() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
fragment_program	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::fragment_program() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
fragment_shader	libretro-test-gl/libretro-test.c	/^static const char *fragment_shader[] = {$/;"	v	file:
frame	driver.h	/^   bool (*frame)(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg); \/\/ msg is for showing a message on the screen along with the video frame.$/;"	m	struct:video_driver	access:public
frame	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::frame(const void *frame,$/;"	f	class:D3DVideo	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
frame	gfx/d3d9/d3d9.hpp	/^      bool frame(const void* frame,$/;"	p	class:D3DVideo	access:public	signature:(const void* frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
frame	gfx/scaler/scaler.h	/^      uint32_t *frame;$/;"	m	struct:scaler_ctx::__anon209	access:public
frame	gfx/scaler/scaler.h	/^      uint32_t *frame;$/;"	m	struct:scaler_ctx::__anon211	access:public
frame	gfx/scaler/scaler.h	/^      uint64_t *frame;$/;"	m	struct:scaler_ctx::__anon210	access:public
frame	gfx/thread_wrapper.c	/^      void *frame;$/;"	m	struct:thread_video::__anon214	file:	access:public
frame	gfx/thread_wrapper.c	/^   } frame;$/;"	m	struct:thread_video	typeref:struct:thread_video::__anon221	file:	access:public
frame_buf	dynamic_dummy.c	/^static uint16_t *frame_buf;$/;"	v	file:
frame_buf	frontend/menu/menu_common.h	/^   uint16_t *frame_buf;$/;"	m	struct:__anon25	access:public
frame_buf	libretro-test/libretro-test.c	/^static uint16_t *frame_buf;$/;"	v	file:
frame_buf_pitch	frontend/menu/menu_common.h	/^   size_t frame_buf_pitch;$/;"	m	struct:__anon25	access:public
frame_buf_show	frontend/menu/menu_common.h	/^   bool frame_buf_show;$/;"	m	struct:__anon25	access:public
frame_cache	general.h	/^   } frame_cache;$/;"	m	struct:global	typeref:struct:global::__anon240	access:public
frame_cap	gfx/thread_wrapper.c	/^      size_t frame_cap;$/;"	m	struct:thread_video::__anon214	file:	access:public
frame_cb	netplay.h	/^   retro_video_refresh_t frame_cb;$/;"	m	struct:retro_callbacks	access:public
frame_cnt	record/ffemu.c	/^   int64_t frame_cnt;$/;"	m	struct:ff_audio_info	file:	access:public
frame_cnt	record/ffemu.c	/^   int64_t frame_cnt;$/;"	m	struct:ff_video_info	file:	access:public
frame_cnt_f	gfx/shader_cg.c	/^   CGparameter frame_cnt_f;$/;"	m	struct:cg_program	file:	access:public
frame_cnt_f	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_cnt_f;$/;"	m	struct:hlsl_program	file:	access:public
frame_cnt_v	gfx/shader_cg.c	/^   CGparameter frame_cnt_v;$/;"	m	struct:cg_program	file:	access:public
frame_cnt_v	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_cnt_v;$/;"	m	struct:hlsl_program	file:	access:public
frame_count	general.h	/^   unsigned frame_count;$/;"	m	struct:global	access:public
frame_count	gfx/d3d9/render_chain.hpp	/^      unsigned frame_count;$/;"	m	class:RenderChain	access:private
frame_count	gfx/gl_common.h	/^   unsigned frame_count;$/;"	m	struct:gl	access:public
frame_count	gfx/shader_glsl.c	/^   int frame_count;$/;"	m	struct:shader_uniforms	file:	access:public
frame_count	gfx/state_tracker.c	/^   int frame_count;$/;"	m	struct:state_tracker_internal	file:	access:public
frame_count	netplay.c	/^   uint32_t frame_count;$/;"	m	struct:netplay	file:	access:public
frame_count_mod	gfx/shader_glsl.c	/^   unsigned frame_count_mod;$/;"	m	struct:shader_uniforms	file:	access:public
frame_count_mod	gfx/shader_parse.h	/^   unsigned frame_count_mod;$/;"	m	struct:gfx_shader_pass	access:public
frame_count_prev	gfx/state_tracker.c	/^   int frame_count_prev;$/;"	m	struct:state_tracker_internal	file:	access:public
frame_dir_f	gfx/shader_cg.c	/^   CGparameter frame_dir_f;$/;"	m	struct:cg_program	file:	access:public
frame_dir_f	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_dir_f;$/;"	m	struct:hlsl_program	file:	access:public
frame_dir_v	gfx/shader_cg.c	/^   CGparameter frame_dir_v;$/;"	m	struct:cg_program	file:	access:public
frame_dir_v	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_dir_v;$/;"	m	struct:hlsl_program	file:	access:public
frame_direction	gfx/shader_glsl.c	/^   int frame_direction;$/;"	m	struct:shader_uniforms	file:	access:public
frame_drop_count	record/ffemu.c	/^   unsigned frame_drop_count;$/;"	m	struct:ff_video_info	file:	access:public
frame_drop_ratio	record/ffemu.c	/^   unsigned frame_drop_ratio;$/;"	m	struct:ff_config_param	file:	access:public
frame_drop_ratio	record/ffemu.c	/^   unsigned frame_drop_ratio;$/;"	m	struct:ff_video_info	file:	access:public
frame_is_reverse	general.h	/^   bool frame_is_reverse;$/;"	m	struct:global	access:public
frame_limit	general.h	/^   } frame_limit;$/;"	m	struct:global	typeref:struct:global::__anon233	access:public
frame_mask	movie.c	/^   size_t frame_mask;$/;"	m	struct:bsv_movie	file:	access:public
frame_opengl_texture	libretro.h	/^   retro_camera_frame_opengl_texture_t frame_opengl_texture; \/\/ Set by libretro core if OpenGL texture callbacks will be used.$/;"	m	struct:retro_camera_callback	access:public
frame_pos	movie.c	/^   size_t *frame_pos; \/\/ A ring buffer keeping track of positions in the file for each frame.$/;"	m	struct:bsv_movie	file:	access:public
frame_ptr	movie.c	/^   size_t frame_ptr;$/;"	m	struct:bsv_movie	file:	access:public
frame_rate	gfx/context/sunxi_disp_ioctl.h	/^	__u32 frame_rate; \/*  *FRAME_RATE_BASE(now scheduled for 1000) *\/$/;"	m	struct:__anon189	access:public
frame_raw_framebuffer	libretro.h	/^   retro_camera_frame_raw_framebuffer_t frame_raw_framebuffer; \/\/ Set by libretro core if raw framebuffer callbacks will be used.$/;"	m	struct:retro_camera_callback	access:public
frame_time	general.h	/^      struct retro_frame_time_callback frame_time;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_frame_time_callback	access:public
frame_time_last	general.h	/^      retro_usec_t frame_time_last;$/;"	m	struct:global::__anon234	access:public
frame_time_samples	general.h	/^      retro_time_t frame_time_samples[MEASURE_FRAME_TIME_SAMPLES_COUNT];$/;"	m	struct:global::__anon236	access:public
frame_time_samples_count	general.h	/^      uint64_t frame_time_samples_count;$/;"	m	struct:global::__anon236	access:public
frame_updated	gfx/thread_wrapper.c	/^      bool frame_updated;$/;"	m	struct:thread_video::__anon214	file:	access:public
framebuffer	ps3/rgl/include/RGL/Types.h	/^      GLuint			framebuffer;	\/\/ GL_FRAMEBUFFER_OES binding$/;"	m	struct:RGLcontext	access:public
framebufferNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace	framebufferNameSpace;$/;"	m	struct:RGLcontext	access:public
framebuffers	ps3/rgl/include/RGL/Types.h	/^      RGL::Vector<rglFramebuffer *> framebuffers;$/;"	m	struct:__anon63	access:public
frames	audio/ext/rarch_dsp.h	/^   unsigned frames;$/;"	m	struct:rarch_dsp_input	access:public
frames	audio/ext/rarch_dsp.h	/^   unsigned frames;$/;"	m	struct:rarch_dsp_output	access:public
frames	libretro.h	/^   unsigned    frames;     \/\/ Duration in frames of message.$/;"	m	struct:retro_message	access:public
frames	record/ffemu.h	/^   size_t frames;$/;"	m	struct:ffemu_audio_data	access:public
frames_in_buffer	record/ffemu.c	/^   size_t frames_in_buffer;$/;"	m	struct:ff_audio_info	file:	access:public
free	audio/ext/rarch_dsp.h	/^   void (*free)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
free	audio/resampler.h	/^   void (*free)(void *re);$/;"	m	struct:rarch_resampler	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:audio_driver	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:camera_driver	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:input_driver	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:input_osk_driver	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:location_driver	access:public
free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:video_driver	access:public
free	file_extract.c	/^   void (*free)(void *handle); \/\/ Closes, unmaps and frees.$/;"	m	struct:zlib_file_backend	file:	access:public
free	frontend/menu/menu_context.h	/^   void  (*free)(void*);$/;"	m	struct:menu_ctx_driver	access:public
free	gfx/fonts/fonts.h	/^   void (*free)(void *data);$/;"	m	struct:font_renderer_driver	access:public
freeAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    freeAddress;$/;"	m	struct:GmmAllocator	access:public
freeCallCounts	ps3/image.c	/^   uint32_t freeCallCounts;$/;"	m	struct:CtrlFreeArg	file:	access:public
freeElf	ps3/rgl/src/libelf/readelf.h	/^   void freeElf(ELF_t* elf);$/;"	p	signature:(ELF_t* elf)
free_arg	ps3/sdk_defines.h	295;"	d
free_assets	frontend/menu/menu_context.h	/^   void  (*free_assets)(void*);$/;"	m	struct:menu_ctx_driver	access:public
free_func	ps3/sdk_defines.h	294;"	d
free_output	gfx/fonts/fonts.h	/^   void (*free_output)(void *data, struct font_output_list *list);$/;"	m	struct:font_renderer_driver	access:public
free_overlay	gfx/d3d9/d3d9.cpp	/^void D3DVideo::free_overlay(overlay_t &overlay)$/;"	f	class:D3DVideo	signature:(overlay_t &overlay)
free_overlay	gfx/d3d9/d3d9.hpp	/^      void free_overlay(overlay_t &overlay);$/;"	p	class:D3DVideo	access:private	signature:(overlay_t &overlay)
free_overlays	gfx/d3d9/d3d9.cpp	/^void D3DVideo::free_overlays()$/;"	f	class:D3DVideo	signature:()
free_overlays	gfx/d3d9/d3d9.hpp	/^      void free_overlays();$/;"	p	class:D3DVideo	access:private	signature:()
free_pad	input/udev_joypad.c	/^static void free_pad(unsigned pad, bool hotplug)$/;"	f	file:	signature:(unsigned pad, bool hotplug)
freeaddrinfo	netplay.c	1466;"	d	file:
freeaddrinfo	netplay_compat.h	/^void freeaddrinfo(struct addrinfo *res);$/;"	p	signature:(struct addrinfo *res)
freeaddrinfo	netplay_compat.h	84;"	d
freeaddrinfo_rarch__	netplay.c	/^void freeaddrinfo_rarch__(struct addrinfo *res)$/;"	f	signature:(struct addrinfo *res)
freedSinceSweep	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    freedSinceSweep;$/;"	m	struct:GmmAllocator	access:public
frequency	ps3/rgl/include/RGL/Types.h	/^      GLuint  frequency;    \/\/ instancing divisor$/;"	m	struct:__anon68	access:public
frontend_ctx	frontend/frontend.c	/^frontend_ctx_driver_t *frontend_ctx;$/;"	v
frontend_ctx_android	frontend/platform/platform_android.c	/^const frontend_ctx_driver_t frontend_ctx_android = {$/;"	v
frontend_ctx_apple	frontend/platform/platform_apple.c	/^const frontend_ctx_driver_t frontend_ctx_apple = {$/;"	v
frontend_ctx_driver	frontend/frontend_context.h	/^typedef struct frontend_ctx_driver$/;"	s
frontend_ctx_driver::deinit	frontend/frontend_context.h	/^   void (*deinit)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::environment_get	frontend/frontend_context.h	/^   void (*environment_get)(int argc, char *argv[], void *args);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::exec	frontend/frontend_context.h	/^   void (*exec)(const char *, bool);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::exitspawn	frontend/frontend_context.h	/^   void (*exitspawn)(void);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::ident	frontend/frontend_context.h	/^   const char *ident;$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::init	frontend/frontend_context.h	/^   void (*init)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::process_args	frontend/frontend_context.h	/^   int (*process_args)(int argc, char *argv[], void *args);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::process_events	frontend/frontend_context.h	/^   int (*process_events)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver::shutdown	frontend/frontend_context.h	/^   void (*shutdown)(bool);$/;"	m	struct:frontend_ctx_driver	access:public
frontend_ctx_driver_t	frontend/frontend_context.h	/^} frontend_ctx_driver_t;$/;"	t	typeref:struct:frontend_ctx_driver
frontend_ctx_drivers	frontend/frontend_context.c	/^static const frontend_ctx_driver_t *frontend_ctx_drivers[] = {$/;"	v	file:
frontend_ctx_find_driver	frontend/frontend_context.c	/^const frontend_ctx_driver_t *frontend_ctx_find_driver(const char *ident)$/;"	f	signature:(const char *ident)
frontend_ctx_find_driver	frontend/frontend_context.h	/^const frontend_ctx_driver_t *frontend_ctx_find_driver(const char *ident); \/\/ Finds driver with ident. Does not initialize.$/;"	p	signature:(const char *ident)
frontend_ctx_gx	frontend/platform/platform_gx.c	/^const frontend_ctx_driver_t frontend_ctx_gx = {$/;"	v
frontend_ctx_init_first	frontend/frontend_context.c	/^const frontend_ctx_driver_t *frontend_ctx_init_first(void)$/;"	f	signature:(void)
frontend_ctx_init_first	frontend/frontend_context.h	/^const frontend_ctx_driver_t *frontend_ctx_init_first(void); \/\/ Finds first suitable driver and initializes.$/;"	p	signature:(void)
frontend_ctx_ps3	frontend/platform/platform_ps3.c	/^const frontend_ctx_driver_t frontend_ctx_ps3 = {$/;"	v
frontend_ctx_psp	frontend/platform/platform_psp.c	/^const frontend_ctx_driver_t frontend_ctx_psp = {$/;"	v
frontend_ctx_qnx	frontend/platform/platform_qnx.c	/^const frontend_ctx_driver_t frontend_ctx_qnx = {$/;"	v
frontend_ctx_xdk	frontend/platform/platform_xdk.c	/^const frontend_ctx_driver_t frontend_ctx_xdk = {$/;"	v
frontend_init_enable	frontend/frontend.c	189;"	d	file:
frontend_init_enable	frontend/frontend.c	192;"	d	file:
ft_font_renderer	gfx/fonts/freetype.c	/^const font_renderer_driver_t ft_font_renderer = {$/;"	v
ft_renderer_free	gfx/fonts/freetype.c	/^static void ft_renderer_free(void *data)$/;"	f	file:	signature:(void *data)
ft_renderer_free_output	gfx/fonts/freetype.c	/^static void ft_renderer_free_output(void *data, struct font_output_list *output)$/;"	f	file:	signature:(void *data, struct font_output_list *output)
ft_renderer_get_default_font	gfx/fonts/freetype.c	/^static const char *ft_renderer_get_default_font(void)$/;"	f	file:	signature:(void)
ft_renderer_init	gfx/fonts/freetype.c	/^static void *ft_renderer_init(const char *font_path, float font_size)$/;"	f	file:	signature:(const char *font_path, float font_size)
ft_renderer_msg	gfx/fonts/freetype.c	/^static void ft_renderer_msg(void *data, const char *msg, struct font_output_list *output) $/;"	f	file:	signature:(void *data, const char *msg, struct font_output_list *output)
full_height	general.h	/^   unsigned full_height;$/;"	m	struct:rarch_viewport	access:public
full_screen	driver.h	/^   void (*full_screen)(void *data, bool enable);$/;"	m	struct:video_overlay_interface	access:public
full_screen	gfx/thread_wrapper.c	/^      bool full_screen;$/;"	m	struct:thread_video::__anon214	file:	access:public
full_screen	input/overlay.c	/^   bool full_screen;$/;"	m	struct:overlay	file:	access:public
full_width	general.h	/^   unsigned full_width;$/;"	m	struct:rarch_viewport	access:public
full_x	android/native/jni/input_android.c	/^   int16_t full_x, full_y;$/;"	m	struct:input_pointer	file:	access:public
full_x	apple/common/apple_input.h	/^   int16_t full_x, full_y;$/;"	m	struct:__anon159	access:public
full_x	blackberry-qnx/qnx_input.c	/^   int16_t full_x, full_y;$/;"	m	struct:touches	file:	access:public
full_x	gfx/gl_common.h	/^   unsigned full_x, full_y;$/;"	m	struct:gl	access:public
full_y	android/native/jni/input_android.c	/^   int16_t full_x, full_y;$/;"	m	struct:input_pointer	file:	access:public
full_y	apple/common/apple_input.h	/^   int16_t full_x, full_y;$/;"	m	struct:__anon159	access:public
full_y	blackberry-qnx/qnx_input.c	/^   int16_t full_x, full_y;$/;"	m	struct:touches	file:	access:public
full_y	gfx/gl_common.h	/^   unsigned full_x, full_y;$/;"	m	struct:gl	access:public
fullpath	general.h	/^   char fullpath[PATH_MAX];$/;"	m	struct:global	access:public
fullscreen	config.def.h	/^static const bool fullscreen = false;  \/\/ To start in Fullscreen or not.$/;"	v
fullscreen	driver.h	/^   bool fullscreen;$/;"	m	struct:video_info	access:public
fullscreen	general.h	/^      bool fullscreen;$/;"	m	struct:settings::__anon227	access:public
fullscreen	gfx/d3d9/d3d9.hpp	/^   bool fullscreen;$/;"	m	struct:__anon222	access:public
fullscreen	gfx/gl_common.h	/^   bool fullscreen;$/;"	m	struct:gl	access:public
fullscreen_x	config.def.h	/^static const unsigned fullscreen_x = 0; \/\/ Fullscreen resolution. A value of 0 uses the desktop resolution.$/;"	v
fullscreen_x	general.h	/^      unsigned fullscreen_x;$/;"	m	struct:settings::__anon227	access:public
fullscreen_y	config.def.h	/^static const unsigned fullscreen_y = 0;$/;"	v
fullscreen_y	general.h	/^      unsigned fullscreen_y;$/;"	m	struct:settings::__anon227	access:public
func	gfx/context/sunxi_disp_ioctl.h	/^	LCD_FUNC func;$/;"	m	struct:lcd_function	access:public
func	gfx/context/sunxi_disp_ioctl.h	/^	__lcd_function_t func[5];$/;"	m	struct:lcd_flow	access:public
func	thread.c	/^   void (*func)(void*);$/;"	m	struct:thread_data	file:	access:public
func_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 func_num;$/;"	m	struct:lcd_flow	access:public
function	frontend/platform/platform_apple.c	/^   void (*function)(void*);$/;"	m	struct:__anon14	file:	access:public
function_t	dynamic.h	/^typedef void (*function_t)(void);$/;"	t
g	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
g	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
g_MapLinearToSrgbGpuFormat	xdk/xdk_d3d.cpp	/^const DWORD g_MapLinearToSrgbGpuFormat[] = $/;"	v
g_XInputGetStateEx	input/winxinput_joypad.c	/^static XInputGetStateEx_t g_XInputGetStateEx;$/;"	v	file:
g_XInputSetState	input/winxinput_joypad.c	/^static XInputSetState_t g_XInputSetState;$/;"	v	file:
g_all_hms	gfx/context/wgl_ctx.c	/^static HMONITOR g_all_hms[MAX_MONITORS];$/;"	v	file:
g_android	frontend/platform/platform_android.c	/^struct android_app *g_android;$/;"	v	typeref:struct:android_app
g_api	gfx/context/androidegl_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_api	gfx/context/bbqnx_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_api	gfx/context/drm_egl_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_api	gfx/context/gles_egl_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_api	gfx/context/vc_egl_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_api	gfx/context/xegl_ctx.c	/^static enum gfx_ctx_api g_api;$/;"	v	typeref:enum:gfx_ctx_api	file:
g_auto_path	tools/retroarch-joyconfig.c	/^static char *g_auto_path = NULL;$/;"	v	file:
g_bo	gfx/context/drm_egl_ctx.c	/^static struct gbm_bo *g_bo, *g_next_bo;$/;"	v	typeref:struct:gbm_bo	file:
g_cmap	gfx/context/glx_ctx.c	/^static Colormap g_cmap;$/;"	v	file:
g_cmap	gfx/context/xegl_ctx.c	/^static Colormap g_cmap;$/;"	v	file:
g_config	gfx/context/androidegl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_config	gfx/context/drm_egl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_config	gfx/context/emscriptenegl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_config	gfx/context/gles_egl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_config	gfx/context/vc_egl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_config	gfx/context/xegl_ctx.c	/^static EGLConfig g_config;$/;"	v	file:
g_connections	apple/iOS/bluetooth/btpad.c	/^static struct apple_pad_connection g_connections[MAX_PLAYERS];$/;"	v	typeref:struct:apple_pad_connection	file:
g_connector	gfx/context/drm_egl_ctx.c	/^static drmModeConnector *g_connector;$/;"	v	file:
g_connector_id	gfx/context/drm_egl_ctx.c	/^static uint32_t g_connector_id;$/;"	v	file:
g_core	gfx/context/glx_ctx.c	/^static bool g_core;$/;"	v	file:
g_cpuCount	performance/performance_android.c	/^static  int                g_cpuCount;$/;"	v	file:
g_cpuFamily	performance/performance_android.c	/^static  AndroidCpuFamily   g_cpuFamily;$/;"	v	file:
g_cpuFeatures	performance/performance_android.c	/^static  uint64_t           g_cpuFeatures;$/;"	v	file:
g_crtc_id	gfx/context/drm_egl_ctx.c	/^static uint32_t g_crtc_id;$/;"	v	file:
g_ctx	gfx/context/glx_ctx.c	/^static GLXContext g_ctx;$/;"	v	file:
g_ctx	input/dinput.c	/^static LPDIRECTINPUT8 g_ctx;$/;"	v	file:
g_current_framebuf	gx/gx_video.c	/^unsigned g_current_framebuf;$/;"	v
g_current_input_data	apple/common/apple_input.c	/^apple_input_data_t g_current_input_data;$/;"	v
g_debug	gfx/context/glx_ctx.c	/^static bool g_debug;$/;"	v	file:
g_desktop_mode	gfx/context/glx_ctx.c	/^static XF86VidModeModeInfo g_desktop_mode;$/;"	v	file:
g_desktop_mode	gfx/context/xegl_ctx.c	/^static XF86VidModeModeInfo g_desktop_mode;$/;"	v	file:
g_dpy	gfx/context/glx_ctx.c	/^static Display *g_dpy;$/;"	v	file:
g_dpy	gfx/context/xegl_ctx.c	/^static Display *g_dpy;$/;"	v	file:
g_draw_done	gx/gx_video.c	/^volatile bool g_draw_done;$/;"	v
g_driver	tools/retroarch-joyconfig.c	/^static char *g_driver = NULL;$/;"	v	file:
g_drm_fd	gfx/context/drm_egl_ctx.c	/^static int g_drm_fd;$/;"	v	file:
g_drm_mode	gfx/context/drm_egl_ctx.c	/^static drmModeModeInfo *g_drm_mode;$/;"	v	file:
g_egl_ctx	gfx/context/androidegl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/bbqnx_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/drm_egl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/emscriptenegl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/gles_egl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/vc_egl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_ctx	gfx/context/xegl_ctx.c	/^static EGLContext g_egl_ctx;$/;"	v	file:
g_egl_dpy	gfx/context/androidegl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/bbqnx_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/drm_egl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/emscriptenegl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/gles_egl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/vc_egl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_dpy	gfx/context/xegl_ctx.c	/^static EGLDisplay g_egl_dpy;$/;"	v	file:
g_egl_res	gfx/context/vc_egl_ctx.c	/^static unsigned g_egl_res;$/;"	v	file:
g_egl_surf	gfx/context/androidegl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/bbqnx_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/drm_egl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/emscriptenegl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/gles_egl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/vc_egl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_surf	gfx/context/xegl_ctx.c	/^static EGLSurface g_egl_surf;$/;"	v	file:
g_egl_vgimage	gfx/context/vc_egl_ctx.c	/^static VGImage g_egl_vgimage[MAX_EGLIMAGE_TEXTURES];$/;"	v	file:
g_eglimage_ctx	gfx/context/vc_egl_ctx.c	/^static EGLContext g_eglimage_ctx;$/;"	v	file:
g_encoder	gfx/context/drm_egl_ctx.c	/^static drmModeEncoder *g_encoder;$/;"	v	file:
g_epoll	input/linuxraw_joypad.c	/^static int g_epoll;$/;"	v	file:
g_extern	apple/common/setting_data.c	299;"	d	file:
g_extern	settings.c	/^struct global g_extern;$/;"	v	typeref:struct:global
g_extern	tools/retroarch-joyconfig.c	/^struct global g_extern;$/;"	v	typeref:struct:global
g_fb_height	gfx/context/drm_egl_ctx.c	/^static unsigned g_fb_height;$/;"	v	file:
g_fb_height	gfx/context/emscriptenegl_ctx.c	/^static unsigned g_fb_height;$/;"	v	file:
g_fb_height	gfx/context/vc_egl_ctx.c	/^static unsigned g_fb_height;$/;"	v	file:
g_fb_width	gfx/context/drm_egl_ctx.c	/^static unsigned g_fb_width; \/\/ Just use something for now.$/;"	v	file:
g_fb_width	gfx/context/emscriptenegl_ctx.c	/^static unsigned g_fb_width;$/;"	v	file:
g_fb_width	gfx/context/vc_egl_ctx.c	/^static unsigned g_fb_width;$/;"	v	file:
g_fbc	gfx/context/glx_ctx.c	/^static GLXFBConfig g_fbc;$/;"	v	file:
g_framebuf	gx/gx_video.c	/^void *g_framebuf[2];$/;"	v
g_gbm_dev	gfx/context/drm_egl_ctx.c	/^static struct gbm_device *g_gbm_dev;$/;"	v	typeref:struct:gbm_device	file:
g_gbm_surface	gfx/context/drm_egl_ctx.c	/^static struct gbm_surface *g_gbm_surface;$/;"	v	typeref:struct:gbm_surface	file:
g_glx_win	gfx/context/glx_ctx.c	/^static GLXWindow g_glx_win;$/;"	v	file:
g_has_focus	gfx/context/glx_ctx.c	/^static bool g_has_focus;$/;"	v	file:
g_has_focus	gfx/context/xegl_ctx.c	/^static bool g_has_focus;$/;"	v	file:
g_hdc	gfx/context/wgl_ctx.c	/^static HDC g_hdc;$/;"	v	file:
g_hid_manager	apple/OSX/hid_pad.c	/^static IOHIDManagerRef g_hid_manager;$/;"	v	file:
g_hotplug	input/linuxraw_joypad.c	/^static bool g_hotplug;$/;"	v	file:
g_hrc	gfx/context/wgl_ctx.c	/^static HGLRC g_hrc;$/;"	v	file:
g_hwnd	gfx/context/wgl_ctx.c	/^static HWND g_hwnd;$/;"	v	file:
g_in_path	tools/retroarch-joyconfig.c	/^static char *g_in_path = NULL;$/;"	v	file:
g_inited	gfx/context/drm_egl_ctx.c	/^static bool g_inited;$/;"	v	file:
g_inited	gfx/context/emscriptenegl_ctx.c	/^static bool g_inited;$/;"	v	file:
g_inited	gfx/context/glx_ctx.c	/^static bool g_inited;$/;"	v	file:
g_inited	gfx/context/vc_egl_ctx.c	/^static bool g_inited;$/;"	v	file:
g_inited	gfx/context/wgl_ctx.c	/^static bool g_inited;$/;"	v	file:
g_inited	gfx/context/xegl_ctx.c	/^static bool g_inited;$/;"	v	file:
g_interrupted	audio/coreaudio.c	/^static bool g_interrupted;$/;"	v	file:
g_interval	gfx/context/drm_egl_ctx.c	/^static unsigned g_interval;$/;"	v	file:
g_interval	gfx/context/glx_ctx.c	/^static unsigned g_interval;$/;"	v	file:
g_interval	gfx/context/vc_egl_ctx.c	/^static unsigned g_interval;$/;"	v	file:
g_interval	gfx/context/wgl_ctx.c	/^static unsigned g_interval;$/;"	v	file:
g_interval	gfx/context/xegl_ctx.c	/^static unsigned g_interval;$/;"	v	file:
g_is_double	gfx/context/glx_ctx.c	/^static bool g_is_double;$/;"	v	file:
g_joydriver	apple/common/apple_input.c	/^static const rarch_joypad_driver_t* const g_joydriver = &apple_joypad;$/;"	v	file:
g_joypad	tools/retroarch-joyconfig.c	/^static int g_joypad = 0;$/;"	v	file:
g_joypad_cnt	input/dinput.c	/^static unsigned g_joypad_cnt;$/;"	v	file:
g_keyboard_line	input/keyboard_line.c	/^static input_keyboard_line_t *g_keyboard_line;$/;"	v	file:
g_last_hm	gfx/context/wgl_ctx.c	/^static HMONITOR g_last_hm;$/;"	v	file:
g_last_xinput_pad_index	input/dinput.c	/^static unsigned g_last_xinput_pad_index;$/;"	v	file:
g_major	gfx/context/drm_egl_ctx.c	/^static unsigned g_major;$/;"	v	file:
g_major	gfx/context/glx_ctx.c	/^static unsigned g_major;$/;"	v	file:
g_major	gfx/context/wgl_ctx.c	/^static unsigned g_major;$/;"	v	file:
g_major	gfx/context/xegl_ctx.c	/^static unsigned g_major;$/;"	v	file:
g_menu	gx/gx_input.c	/^static bool g_menu;$/;"	v	file:
g_meta_level	tools/retroarch-joyconfig.c	/^static unsigned g_meta_level = 0;$/;"	v	file:
g_minor	gfx/context/drm_egl_ctx.c	/^static unsigned g_minor;$/;"	v	file:
g_minor	gfx/context/glx_ctx.c	/^static unsigned g_minor;$/;"	v	file:
g_minor	gfx/context/wgl_ctx.c	/^static unsigned g_minor;$/;"	v	file:
g_minor	gfx/context/xegl_ctx.c	/^static unsigned g_minor;$/;"	v	file:
g_next_bo	gfx/context/drm_egl_ctx.c	/^static struct gbm_bo *g_bo, *g_next_bo;$/;"	v	typeref:struct:	file:
g_notify	input/linuxraw_joypad.c	/^static int g_notify;$/;"	v	file:
g_num_mons	gfx/context/wgl_ctx.c	/^static unsigned g_num_mons;$/;"	v	file:
g_once	performance/performance_android.c	/^static  pthread_once_t     g_once;$/;"	v	file:
g_orientation	gx/gx_video.c	/^uint32_t g_orientation;$/;"	v
g_orig_crtc	gfx/context/drm_egl_ctx.c	/^static drmModeCrtcPtr g_orig_crtc;$/;"	v	file:
g_out_path	tools/retroarch-joyconfig.c	/^static char *g_out_path = NULL;$/;"	v	file:
g_pD3D	gfx/d3d9/d3d9.hpp	/^      IDirect3D9 *g_pD3D;$/;"	m	class:D3DVideo	access:private
g_pPixelTexturedShader	xenon/xenon360_video.c	/^   struct XenosShader * g_pPixelTexturedShader;$/;"	m	struct:gl	typeref:struct:gl::XenosShader	file:	access:public
g_pTexture	xenon/xenon360_video.c	/^   struct XenosSurface * g_pTexture;$/;"	m	struct:gl	typeref:struct:gl::XenosSurface	file:	access:public
g_pVertexShader	xenon/xenon360_video.c	/^   struct XenosShader * g_pVertexShader;$/;"	m	struct:gl	typeref:struct:gl::XenosShader	file:	access:public
g_pads	input/dinput.c	/^static struct dinput_joypad g_pads[MAX_PLAYERS];$/;"	v	typeref:struct:dinput_joypad	file:
g_pads	input/linuxraw_joypad.c	/^static struct linuxraw_joypad g_pads[MAX_PLAYERS];$/;"	v	typeref:struct:linuxraw_joypad	file:
g_pads	input/sdl_joypad.c	/^static struct sdl_joypad g_pads[MAX_PLAYERS];$/;"	v	typeref:struct:sdl_joypad	file:
g_pads	input/udev_joypad.c	/^static struct udev_joypad g_pads[MAX_PLAYERS];$/;"	v	typeref:struct:udev_joypad	file:
g_pbuff_surf	gfx/context/vc_egl_ctx.c	/^static EGLSurface g_pbuff_surf;$/;"	v	file:
g_pglSwapInterval	gfx/context/glx_ctx.c	/^static int (*g_pglSwapInterval)(int);$/;"	v	file:
g_pglSwapIntervalEXT	gfx/context/glx_ctx.c	/^static void (*g_pglSwapIntervalEXT)(Display*, GLXDrawable, int);$/;"	v	file:
g_player	tools/retroarch-joyconfig.c	/^static int g_player = 1;$/;"	v	file:
g_polled_input_data	apple/common/apple_input.c	/^apple_input_data_t g_polled_input_data;$/;"	v
g_pos_x	gfx/context/wgl_ctx.c	/^static unsigned g_pos_x = CW_USEDEFAULT;$/;"	v	file:
g_pos_y	gfx/context/wgl_ctx.c	/^static unsigned g_pos_y = CW_USEDEFAULT;$/;"	v	file:
g_quit	gfx/context/drm_egl_ctx.c	/^static volatile sig_atomic_t g_quit;$/;"	v	file:
g_quit	gfx/context/glx_ctx.c	/^static volatile sig_atomic_t g_quit;$/;"	v	file:
g_quit	gfx/context/vc_egl_ctx.c	/^static volatile sig_atomic_t g_quit;$/;"	v	file:
g_quit	gfx/context/wgl_ctx.c	/^static bool g_quit;$/;"	v	file:
g_quit	gfx/context/xegl_ctx.c	/^static volatile sig_atomic_t g_quit;$/;"	v	file:
g_quit	gfx/xvideo.c	/^static volatile sig_atomic_t g_quit = 0;$/;"	v	file:
g_quit	gx/gx_input.c	/^static bool g_quit;$/;"	v	file:
g_quit_atom	gfx/context/glx_ctx.c	/^static Atom g_quit_atom;$/;"	v	file:
g_quit_atom	gfx/context/xegl_ctx.c	/^static Atom g_quit_atom;$/;"	v	file:
g_quitting	xenon/xenon360_video.c	/^static bool g_quitting;$/;"	v	file:
g_resize	gfx/context/androidegl_ctx.c	/^static bool g_resize;$/;"	v	file:
g_resize	gfx/context/bbqnx_ctx.c	/^static bool g_resize;$/;"	v	file:
g_resize	gfx/context/gles_egl_ctx.c	/^static bool g_resize;$/;"	v	file:
g_resize_height	gfx/context/wgl_ctx.c	/^static unsigned g_resize_height;$/;"	v	file:
g_resize_width	gfx/context/wgl_ctx.c	/^static unsigned g_resize_width;$/;"	v	file:
g_resized	gfx/context/wgl_ctx.c	/^static bool g_resized;$/;"	v	file:
g_resources	gfx/context/drm_egl_ctx.c	/^static drmModeRes *g_resources;$/;"	v	file:
g_restore_desktop	gfx/context/wgl_ctx.c	/^static bool g_restore_desktop;$/;"	v	file:
g_screen	gfx/context/glx_ctx.c	/^static unsigned g_screen;$/;"	v	file:
g_screen	gfx/context/xegl_ctx.c	/^static unsigned g_screen;$/;"	v	file:
g_settings	apple/common/setting_data.c	298;"	d	file:
g_settings	settings.c	/^struct settings g_settings;$/;"	v	typeref:struct:settings
g_settings	tools/retroarch-joyconfig.c	/^struct settings g_settings;$/;"	v	typeref:struct:settings
g_should_reset_mode	gfx/context/glx_ctx.c	/^static bool g_should_reset_mode;$/;"	v	file:
g_should_reset_mode	gfx/context/xegl_ctx.c	/^static bool g_should_reset_mode;$/;"	v	file:
g_sid	console/logger/logger.c	/^static int g_sid;$/;"	v	file:
g_smooth	gfx/context/vc_egl_ctx.c	/^static bool g_smooth;$/;"	v	file:
g_strFontShader	gfx/fonts/xdk360_fonts.cpp	/^static const char g_strFontShader[] =$/;"	v	file:
g_strMediaPath	xdk/xdk_resources.cpp	/^char g_strMediaPath[512] = "D:\\\\Media\\\\";$/;"	v
g_tex	gx/gx_video.c	/^} g_tex;$/;"	v	typeref:struct:__anon249	file:
g_timeout	tools/retroarch-joyconfig.c	/^static int g_timeout = 0;$/;"	v	file:
g_true_full	gfx/context/glx_ctx.c	/^static bool g_true_full;$/;"	v	file:
g_true_full	gfx/context/xegl_ctx.c	/^static bool g_true_full;$/;"	v	file:
g_udev	input/udev_joypad.c	/^static struct udev *g_udev;$/;"	v	typeref:struct:udev	file:
g_udev_mon	input/udev_joypad.c	/^static struct udev_monitor *g_udev_mon;$/;"	v	typeref:struct:udev_monitor	file:
g_video_cond	gx/gx_video.c	/^lwpq_t g_video_cond;$/;"	v
g_vsync	gx/gx_video.c	/^bool g_vsync;$/;"	v
g_win	gfx/context/glx_ctx.c	/^static Window   g_win;$/;"	v	file:
g_win	gfx/context/xegl_ctx.c	/^static Window   g_win;$/;"	v	file:
g_winxinput_dll	input/winxinput_joypad.c	/^static HINSTANCE g_winxinput_dll;$/;"	v	file:
g_winxinput_guide_button_supported	input/winxinput_joypad.c	/^static bool g_winxinput_guide_button_supported;$/;"	v	file:
g_winxinput_states	input/winxinput_joypad.c	/^static winxinput_joypad_state g_winxinput_states[4];$/;"	v	file:
g_xic	gfx/context/glx_ctx.c	/^static XIC g_xic;$/;"	v	file:
g_xic	gfx/context/xegl_ctx.c	/^static XIC g_xic;$/;"	v	file:
g_xim	gfx/context/glx_ctx.c	/^static XIM g_xim;$/;"	v	file:
g_xim	gfx/context/xegl_ctx.c	/^static XIM g_xim;$/;"	v	file:
g_xinput_block_pads	input/dinput.c	/^bool g_xinput_block_pads;$/;"	v
g_xinput_pad_indexes	input/dinput.c	/^int g_xinput_pad_indexes[MAX_PLAYERS];$/;"	v
g_xinput_rumble_states	input/winxinput_joypad.c	/^static XINPUT_VIBRATION g_xinput_rumble_states[4];$/;"	v	file:
g_xps_PS	xenon/xenon360_video.c	/^const unsigned int g_xps_PS[] =$/;"	v
g_xvs_VS	xenon/xenon360_video.c	/^const unsigned int g_xvs_VS[] =$/;"	v
gain	audio/test/snr.c	/^   double gain;$/;"	m	struct:snr_result	file:	access:public
gamePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String gamePath;$/;"	f	class:HistoryWrapper	file:	access:private
gamePathShort	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	private String gamePathShort;$/;"	f	class:HistoryWrapper	file:	access:private
game_history_path	general.h	/^   char game_history_path[PATH_MAX];$/;"	m	struct:settings	access:public
game_history_size	config.def.h	/^static const unsigned game_history_size = 100;$/;"	v
game_history_size	general.h	/^   unsigned game_history_size;$/;"	m	struct:settings	access:public
game_type	general.h	/^   enum rarch_game_type game_type;$/;"	m	struct:global	typeref:enum:global::rarch_game_type	access:public
gamepads	xdk/xdk_xinput_input.c	/^   HANDLE gamepads[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
gamma	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gamma;$/;"	m	struct:rglGcmTextureAddress	access:public
gammaRemap	ps3/rgl/include/RGL/Types.h	/^      GLuint gammaRemap;$/;"	m	struct:__anon63	access:public
gamma_correction	general.h	/^         unsigned gamma_correction;$/;"	m	struct:global::__anon242::__anon243	access:public
gb_rom_path	general.h	/^   char gb_rom_path[PATH_MAX];$/;"	m	struct:global	access:public
gc	gfx/xvideo.c	/^   GC gc;$/;"	m	struct:xv	file:	access:public
gcmMethods	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureMethodParams 	gcmMethods;$/;"	m	struct:__anon53	access:public
gcmRenderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmSurface  gcmRenderTarget;$/;"	m	struct:rglGcmRenderTarget	access:public
gcmTexture	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmTexture  		gcmTexture;$/;"	m	struct:__anon53	access:public
genMode	gx/gx_video_inl.h	/^	u32 genMode;$/;"	m	struct:__gx_regdef	access:public
gen_filter_bilinear	gfx/scaler/filter.c	/^static bool gen_filter_bilinear(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
gen_filter_bilinear_sub	gfx/scaler/filter.c	/^static void gen_filter_bilinear_sub(struct scaler_filter *filter, int len, int pos, int step)$/;"	f	file:	signature:(struct scaler_filter *filter, int len, int pos, int step)
gen_filter_point	gfx/scaler/filter.c	/^static bool gen_filter_point(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
gen_filter_point_sub	gfx/scaler/filter.c	/^static void gen_filter_point_sub(struct scaler_filter *filter, int len, int pos, int step)$/;"	f	file:	signature:(struct scaler_filter *filter, int len, int pos, int step)
gen_filter_sinc	gfx/scaler/filter.c	/^static bool gen_filter_sinc(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
gen_filter_sinc_sub	gfx/scaler/filter.c	/^static void gen_filter_sinc_sub(struct scaler_filter *filter, int len, int pos, int step, double phase_mul)$/;"	f	file:	signature:(struct scaler_filter *filter, int len, int pos, int step, double phase_mul)
gen_phase	audio/test/snr.c	/^static complex double gen_phase(double index)$/;"	f	file:	signature:(double index)
gen_signal	audio/test/snr.c	/^static void gen_signal(float *out, double omega, double bias_samples, size_t samples)$/;"	f	file:	signature:(float *out, double omega, double bias_samples, size_t samples)
generate_declarations	gfx/glsym/glgen.py	/^def generate_declarations(gl_syms):$/;"	f	access:public
generate_defines	gfx/glsym/glgen.py	/^def generate_defines(gl_syms):$/;"	f	access:public
generate_delta	rewind.c	/^static void generate_delta(state_manager_t *state, const void *data)$/;"	f	file:	signature:(state_manager_t *state, const void *data)
generate_macros	gfx/glsym/glgen.py	/^def generate_macros(gl_syms):$/;"	f	access:public
geometry	libretro.h	/^   struct retro_game_geometry geometry;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_game_geometry	access:public
get	apple/OSX/platform.h	/^+ (RetroArch_OSX*)get;$/;"	v
getAndroidOSVersion	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public int getAndroidOSVersion()$/;"	m	class:RetroActivityCommon	access:public	signature:()
getArray	ps3/rgl/include/RGL/Base.h	/^      inline T *getArray() const { return array; }$/;"	f	class:RGL::Vector	access:public	signature:() const
getAuthors	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getAuthors()$/;"	m	class:ModuleWrapper	access:public	signature:()
getBoolean	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public boolean getBoolean(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
getButtonMapping	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::getButtonMapping(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
getButtonMapping	blackberry-qnx/bb10/src/ButtonMap.h	/^    int getButtonMapping(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
getCore	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getCore()$/;"	f	class:RetroArch	signature:()
getCore	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString getCore();$/;"	p	class:RetroArch	access:private	signature:()
getCoreLicense	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getCoreLicense()$/;"	m	class:ModuleWrapper	access:public	signature:()
getCoreName	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getCoreName() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getCorePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getCorePath() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getCount	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public int getCount()$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:()
getCount	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public int getCount()$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:()
getCount	ps3/rgl/include/RGL/Base.h	/^      inline unsigned int getCount() { return count; }$/;"	f	class:RGL::Vector	access:public	signature:()
getDefaultConfigPath	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static String getDefaultConfigPath(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
getDisplayName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getDisplayName()$/;"	m	class:ModuleWrapper	access:public	signature:()
getDisplayRefreshRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static double getDisplayRefreshRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
getDouble	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public double getDouble(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
getEmulatedSystemName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getEmulatedSystemName()$/;"	m	class:ModuleWrapper	access:public	signature:()
getFile	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public File getFile() {$/;"	m	class:FileWrapper	access:public	signature:()
getFiles	ps3/ps3py/pkg.py	/^def getFiles(files, folder, original):$/;"	f	access:public
getFlags	ps3/rgl/src/rgl_ps3_cg.cpp	/^static unsigned short getFlags(CGenum var, CGenum dir, int no,	bool is_referenced, bool is_shared, int paramIndex);$/;"	p	file:	signature:(CGenum var, CGenum dir, int no, bool is_referenced, bool is_shared, int paramIndex)
getFlags	ps3/rgl/src/rgl_ps3_cg.cpp	/^unsigned short getFlags(CGenum var, CGenum dir, int no,	bool is_referenced, bool is_shared, int paramIndex)$/;"	f	signature:(CGenum var, CGenum dir, int no, bool is_referenced, bool is_shared, int paramIndex)
getFloat	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public float getFloat(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
getGamePath	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getGamePath() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getIconDrawable	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public Drawable getIconDrawable() {$/;"	m	class:FileWrapper	access:public	signature:()
getIconDrawable	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public Drawable getIconDrawable() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getIconDrawable	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public Drawable getIconDrawable();$/;"	m	interface:IconAdapterItem	access:public	signature:()
getIconDrawable	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public Drawable getIconDrawable()$/;"	m	class:ModuleWrapper	access:public	signature:()
getIconResourceId	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public int getIconResourceId() {$/;"	m	class:FileWrapper	access:public	signature:()
getIconResourceId	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public int getIconResourceId() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getIconResourceId	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public int getIconResourceId();$/;"	m	interface:IconAdapterItem	access:public	signature:()
getIconResourceId	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public int getIconResourceId()$/;"	m	class:ModuleWrapper	access:public	signature:()
getInt	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public int getInt(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
getIntent	frontend/platform/platform_android.h	/^   jmethodID getIntent;$/;"	m	struct:android_app	access:public
getInternalName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getInternalName()$/;"	m	class:ModuleWrapper	access:public	signature:()
getItem	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public Fragment getItem(int position)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(int position)
getItem	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public ModuleWrapper getItem(int i)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(int i)
getItem	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public Fragment getItem(int fragmentId)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(int fragmentId)
getLabel	blackberry-qnx/bb10/src/ButtonMap.cpp	/^QString ButtonMap::getLabel(int button)$/;"	f	class:ButtonMap	signature:(int button)
getLabel	blackberry-qnx/bb10/src/ButtonMap.h	/^    QString getLabel(int button);$/;"	p	class:ButtonMap	access:public	signature:(int button)
getListView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public ListView getListView()$/;"	m	class:PreferenceListFragment	access:public	signature:()
getLowLatencyBufferSize	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getLowLatencyBufferSize(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
getLowLatencyOptimalSamplingRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getLowLatencyOptimalSamplingRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
getManufacturer	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getManufacturer()$/;"	m	class:ModuleWrapper	access:public	signature:()
getMatrixRowCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^static inline unsigned int getMatrixRowCount( CGtype type )$/;"	f	file:	signature:( CGtype type )
getMatrixRowType	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGtype getMatrixRowType( CGtype type )$/;"	f	signature:( CGtype type )
getOptimalSamplingRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static int getOptimalSamplingRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
getPageTitle	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^		public CharSequence getPageTitle(int position)$/;"	m	class:CoreManagerActivity.ViewPagerAdapter	access:public	signature:(int position)
getPageTitle	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^		public CharSequence getPageTitle(int position)$/;"	m	class:PreferenceActivity.PreferencesAdapter	access:public	signature:(int position)
getPendingIntentConfigPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentConfigPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
getPendingIntentConfigPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentConfigPath;$/;"	m	struct:android_app	access:public
getPendingIntentFullPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentFullPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
getPendingIntentFullPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentFullPath;$/;"	m	struct:android_app	access:public
getPendingIntentIME	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentIME()$/;"	m	class:RetroActivityCommon	access:public	signature:()
getPendingIntentIME	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentIME;$/;"	m	struct:android_app	access:public
getPendingIntentLibretroPath	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public String getPendingIntentLibretroPath()$/;"	m	class:RetroActivityCommon	access:public	signature:()
getPendingIntentLibretroPath	frontend/platform/platform_android.h	/^   jmethodID getPendingIntentLibretroPath;$/;"	m	struct:android_app	access:public
getPermissions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getPermissions()$/;"	m	class:ModuleWrapper	access:public	signature:()
getPreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public PreferenceManager getPreferenceManager()$/;"	m	class:PreferenceListFragment	access:public	signature:()
getPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public PreferenceScreen getPreferenceScreen()$/;"	m	class:PreferenceListFragment	access:public	signature:()
getPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen getPreferenceScreen(PreferenceManager manager)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager)
getPreferences	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static SharedPreferences getPreferences(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
getRefreshRate	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static double getRefreshRate(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
getRetroActivity	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public Intent getRetroActivity()$/;"	m	class:HistorySelection	access:public	signature:()
getRetroActivity	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public Intent getRetroActivity()$/;"	m	class:MainMenuFragment	access:public	signature:()
getRom	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getRom()$/;"	f	class:RetroArch	signature:()
getRom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString getRom();$/;"	p	class:RetroArch	access:private	signature:()
getRomExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^QString RetroArch::getRomExtensions()$/;"	f	class:RetroArch	signature:()
getRomExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QString getRomExtensions();$/;"	p	class:RetroArch	access:private	signature:()
getSizeofSubArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int getSizeofSubArray(_CGNVCONTAINERS &containers, int dimensionIndex, int dimensionCount, int endianness)$/;"	f	file:	signature:(_CGNVCONTAINERS &containers, int dimensionIndex, int dimensionCount, int endianness)
getSizeofSubArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int getSizeofSubArray(_CGNVCONTAINERS &containers, int dimensionIndex, int dimensionCount, int endianness);$/;"	p	file:	signature:(_CGNVCONTAINERS &containers, int dimensionIndex, int dimensionCount, int endianness)
getStride	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int getStride(CgBaseType *type)$/;"	f	file:	signature:(CgBaseType *type)
getStride	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int getStride(CgBaseType *type);$/;"	p	file:	signature:(CgBaseType *type)
getString	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public String getString(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
getStringExtra	frontend/platform/platform_android.h	/^   jmethodID getStringExtra;$/;"	m	struct:android_app	access:public
getSubText	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public String getSubText() {$/;"	m	class:FileWrapper	access:public	signature:()
getSubText	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getSubText() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getSubText	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public String getSubText();$/;"	m	interface:IconAdapterItem	access:public	signature:()
getSubText	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getSubText()$/;"	m	class:ModuleWrapper	access:public	signature:()
getSubtitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public String getSubtitle()$/;"	m	class:InstalledCoreInfoItem	access:public	signature:()
getSummary	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public CharSequence getSummary() {$/;"	m	class:KeyBindPreference	access:public	signature:()
getSupportedExtensions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public List<String> getSupportedExtensions()$/;"	m	class:ModuleWrapper	access:public	signature:()
getSymbolByIndex	ps3/rgl/src/libelf/readelf.c	/^const Elf32_Sym *getSymbolByIndex(const ELF_t *elf,int idx)$/;"	f	signature:(const ELF_t *elf,int idx)
getSymbolByIndex	ps3/rgl/src/libelf/readelf.h	/^   const Elf32_Sym* getSymbolByIndex(const ELF_t* elf,int idx);$/;"	p	signature:(const ELF_t* elf,int idx)
getSymbolByIndexInPlace	ps3/rgl/src/libelf/readelf.c	/^const char *getSymbolByIndexInPlace(const char* symbolSection, size_t symbolSize, size_t symbolCount,  const char *symbolstrtab, int index)$/;"	f	signature:(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, int index)
getSymbolByIndexInPlace	ps3/rgl/src/libelf/readelf.h	/^   const char *getSymbolByIndexInPlace(const char* symbolSection, size_t symbolSize, size_t symbolCount,  const char *symbolstrtab, int index);$/;"	p	signature:(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, int index)
getText	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public String getText() {$/;"	m	class:FileWrapper	access:public	signature:()
getText	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public String getText() {$/;"	m	class:HistoryWrapper	access:public	signature:()
getText	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public String getText();$/;"	m	interface:IconAdapterItem	access:public	signature:()
getText	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public String getText()$/;"	m	class:ModuleWrapper	access:public	signature:()
getTitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	public String getTitle()$/;"	m	class:InstalledCoreInfoItem	access:public	signature:()
getUnderlyingFile	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public File getUnderlyingFile()$/;"	m	class:ModuleWrapper	access:public	signature:()
getVersionCode	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	private int getVersionCode()$/;"	m	class:MainMenuFragment	file:	access:private	signature:()
getView	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public View getView(int position, View convertView, ViewGroup parent) {$/;"	m	class:IconAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
getView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent)$/;"	m	class:InstalledCoreInfoFragment.CoreInfoAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
getView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent)$/;"	m	class:InstalledCoresFragment.InstalledCoresAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
getView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		public View getView(int position, View convertView, ViewGroup parent) $/;"	m	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	access:public	signature:(int position, View convertView, ViewGroup parent)
get_alignment	gfx/gl_common.h	/^static inline unsigned get_alignment(unsigned pitch)$/;"	f	signature:(unsigned pitch)
get_attrib	gfx/shader_glsl.c	/^static GLint get_attrib(GLuint prog, const char *base)$/;"	f	file:	signature:(GLuint prog, const char *base)
get_axis_name	apple/common/setting_data.c	/^static const char* get_axis_name(const rarch_setting_t* setting)$/;"	f	file:	signature:(const rarch_setting_t* setting)
get_binds	tools/retroarch-joyconfig.c	/^static void get_binds(config_file_t *conf, config_file_t *auto_conf, int player, int joypad)$/;"	f	file:	signature:(config_file_t *conf, config_file_t *auto_conf, int player, int joypad)
get_bit	input/udev_input.c	/^static inline bool get_bit(const uint8_t *buf, unsigned bit)$/;"	f	file:	signature:(const uint8_t *buf, unsigned bit)
get_button_name	apple/common/setting_data.c	/^static const char* get_button_name(const rarch_setting_t* setting)$/;"	f	file:	signature:(const rarch_setting_t* setting)
get_capabilities	driver.h	/^   uint64_t (*get_capabilities)(void *data);$/;"	m	struct:input_driver	access:public
get_cpu_count	performance/performance_android.c	/^static int get_cpu_count(void)$/;"	f	file:	signature:(void)
get_cpu_features	libretro.h	/^   retro_get_cpu_features_t      get_cpu_features;$/;"	m	struct:retro_perf_callback	access:public
get_current_framebuffer	driver.h	/^   uintptr_t (*get_current_framebuffer)(void *data);$/;"	m	struct:video_poke_interface	access:public
get_current_framebuffer	libretro.h	/^   retro_hw_get_current_framebuffer_t get_current_framebuffer; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback	access:public
get_default_font	gfx/fonts/fonts.h	/^   const char *(*get_default_font)(void);$/;"	m	struct:font_renderer_driver	access:public
get_eject_state	libretro.h	/^   retro_get_eject_state_t get_eject_state;$/;"	m	struct:retro_disk_control_callback	access:public
get_environment_settings	frontend/platform/platform_android.c	/^static void get_environment_settings(int argc, char *argv[], void *data)$/;"	f	file:	signature:(int argc, char *argv[], void *data)
get_environment_settings	frontend/platform/platform_gx.c	/^static void get_environment_settings(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
get_environment_settings	frontend/platform/platform_ps3.c	/^static void get_environment_settings(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
get_environment_settings	frontend/platform/platform_psp.c	/^static void get_environment_settings(int argc, char *argv[])$/;"	f	file:	signature:(int argc, char *argv[])
get_environment_settings	frontend/platform/platform_qnx.c	/^static void get_environment_settings(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
get_environment_settings	frontend/platform/platform_xdk.c	/^static void get_environment_settings(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
get_fb_device	gfx/omap_gfx.c	/^static const char *get_fb_device(void) {$/;"	f	file:	signature:(void)
get_image_index	libretro.h	/^   retro_get_image_index_t get_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
get_info	netplay.c	/^static bool get_info(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
get_info_spectate	netplay.c	/^static bool get_info_spectate(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
get_input_config_key	apple/common/setting_data.c	/^static const char* get_input_config_key(const rarch_setting_t* setting, const char* type)$/;"	f	file:	signature:(const rarch_setting_t* setting, const char* type)
get_input_config_prefix	apple/common/setting_data.c	/^static const char* get_input_config_prefix(const rarch_setting_t* setting)$/;"	f	file:	signature:(const rarch_setting_t* setting)
get_ios_version_major	apple/iOS/platform.h	/^int get_ios_version_major();$/;"	p	signature:()
get_joypad_driver	driver.h	/^   const rarch_joypad_driver_t *(*get_joypad_driver)(void *data);$/;"	m	struct:input_driver	access:public
get_key_name	apple/common/setting_data.c	/^static const char* get_key_name(const rarch_setting_t* setting)$/;"	f	file:	signature:(const rarch_setting_t* setting)
get_nickname	netplay.c	/^static bool get_nickname(netplay_t *handle, int fd)$/;"	f	file:	signature:(netplay_t *handle, int fd)
get_num_images	libretro.h	/^   retro_get_num_images_t  get_num_images;$/;"	m	struct:retro_disk_control_callback	access:public
get_page	gfx/omap_gfx.c	/^static omapfb_page_t *get_page(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
get_param	ps3/rgl/src/cg/nvbi.hpp	/^               get_param( unsigned int index,$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
get_param	ps3/rgl/src/cg/nvbiimpl.hpp	/^               get_param( unsigned int index,$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char ** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char ** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
get_param	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::get_param( unsigned int index,$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( unsigned int index, CGtype& type, CGresource& resource, CGenum& variability, int& resource_index, const char ** name, std::vector<float>& default_value, std::vector<unsigned int>& embedded_constants, const char ** semantic, CGenum& direction, int& paramno, bool& is_referenced, bool& is_shared ) const
get_param_name	ps3/rgl/src/cg/nvbi.hpp	/^            virtual CGBIO_ERROR get_param_name( unsigned int index, const char** name, bool& is_referenced) const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( unsigned int index, const char** name, bool& is_referenced) const
get_param_name	ps3/rgl/src/cg/nvbiimpl.hpp	/^            virtual CGBIO_ERROR get_param_name( unsigned int index, const char ** name ,  bool& is_referenced) const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( unsigned int index, const char ** name , bool& is_referenced) const
get_param_name	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::get_param_name( unsigned int index, const char **name, bool& is_referenced ) const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( unsigned int index, const char **name, bool& is_referenced ) const
get_perf_counter	libretro.h	/^   retro_perf_get_counter_t      get_perf_counter;$/;"	m	struct:retro_perf_callback	access:public
get_position	driver.h	/^   bool (*get_position)(void *data, double *lat, double *lon, double *horiz_accuracy, double *vert_accuracy);$/;"	m	struct:location_driver	access:public
get_position	libretro.h	/^   retro_location_get_position_t  get_position;$/;"	m	struct:retro_location_callback	access:public
get_positions	audio/dsound.c	/^static inline void get_positions(dsound_t *ds, DWORD *read_ptr, DWORD *write_ptr)$/;"	f	file:	signature:(dsound_t *ds, DWORD *read_ptr, DWORD *write_ptr)
get_prev_textures	gfx/shader_common.h	/^   unsigned (*get_prev_textures)(void);$/;"	m	struct:gl_shader_backend	access:public
get_proc_address	driver.h	/^   retro_proc_address_t (*get_proc_address)(void *data, const char *sym);$/;"	m	struct:video_poke_interface	access:public
get_proc_address	gfx/gfx_context.h	/^   gfx_ctx_proc_t (*get_proc_address)(const char*);$/;"	m	struct:gfx_ctx_driver	access:public
get_proc_address	libretro.h	/^   retro_hw_get_proc_address_t get_proc_address; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback	access:public
get_run_info	tools/retrolaunch/main.c	/^static int get_run_info(struct RunInfo *info, const char *game_name) {$/;"	f	file:	signature:(struct RunInfo *info, const char *game_name)
get_script	gfx/shader_parse.c	/^static bool get_script(struct gfx_shader *shader, const char *path,$/;"	f	file:	signature:(struct gfx_shader *shader, const char *path, xmlNodePtr ptr)
get_self_input_state	netplay.c	/^static bool get_self_input_state(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
get_sha1	tools/retrolaunch/main.c	/^static int get_sha1(const char *path, char *result)$/;"	f	file:	signature:(const char *path, char *result)
get_text_buf	driver.h	/^   void *(*get_text_buf)(void *data);$/;"	m	struct:input_osk_driver	access:public
get_time_usec	libretro.h	/^   retro_perf_get_time_usec_t    get_time_usec;$/;"	m	struct:retro_perf_callback	access:public
get_token	tools/retrolaunch/parser.c	/^ssize_t get_token(int fd, char *token, size_t max_len)$/;"	f	signature:(int fd, char *token, size_t max_len)
get_token	tools/retrolaunch/parser.h	/^ssize_t get_token(int fd, char* token, size_t max_len);$/;"	p	signature:(int fd, char* token, size_t max_len)
get_uniform	gfx/shader_glsl.c	/^static GLint get_uniform(GLuint prog, const char *base)$/;"	f	file:	signature:(GLuint prog, const char *base)
get_video_mode	gfx/context/x11_common.c	/^static bool get_video_mode(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *mode, XF86VidModeModeInfo *desktop_mode)$/;"	f	file:	signature:(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *mode, XF86VidModeModeInfo *desktop_mode)
get_video_size	gfx/gfx_context.h	/^   void (*get_video_size)(unsigned*, unsigned*);$/;"	m	struct:gfx_ctx_driver	access:public
get_xml_attrs	gfx/shader_parse.c	/^static bool get_xml_attrs(struct gfx_shader_pass *pass, xmlNodePtr ptr)$/;"	f	file:	signature:(struct gfx_shader_pass *pass, xmlNodePtr ptr)
getaddrinfo	netplay.c	1465;"	d	file:
getaddrinfo	netplay_compat.h	/^int getaddrinfo(const char *node, const char *service,$/;"	p	signature:(const char *node, const char *service, const struct addrinfo *hints, struct addrinfo **res)
getaddrinfo	netplay_compat.h	83;"	d
getaddrinfo_rarch__	netplay.c	/^int getaddrinfo_rarch__(const char *node, const char *service,$/;"	f	signature:(const char *node, const char *service, const struct addrinfo *hints, struct addrinfo **res)
getaline	conf/config_file.c	/^static char *getaline(FILE *file)$/;"	f	file:	signature:(FILE *file)
gethostbyname	audio/librsound.c	116;"	d	file:
gethostbyname	netplay.c	/^static struct hostent *gethostbyname(const char *name)$/;"	f	file:	signature:(const char *name)
getopt_long	compat/compat.c	/^int getopt_long(int argc, char *argv[],$/;"	f	signature:(int argc, char *argv[], const char *optstring, const struct option *longopts, int *longindex)
getopt_long	compat/getopt_rarch.h	/^int getopt_long(int argc, char *argv[],$/;"	p	signature:(int argc, char *argv[], const char *optstring, const struct option *longopts, int *longindex)
getopt_long	compat/getopt_rarch.h	31;"	d
getsockopt	audio/librsound.c	117;"	d	file:
gfx_ctx_android	gfx/context/androidegl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_android = {$/;"	v
gfx_ctx_api	gfx/gfx_context.h	/^enum gfx_ctx_api$/;"	g
gfx_ctx_apple	gfx/context/apple_gl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_apple = {$/;"	v
gfx_ctx_bbqnx	gfx/context/bbqnx_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_bbqnx = {$/;"	v
gfx_ctx_bind_api	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/bbqnx_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/glx_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/null_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api)$/;"	f	file:	signature:(enum gfx_ctx_api api)
gfx_ctx_bind_api	gfx/context/ps3_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/wgl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_bind_api	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_check_window	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/apple_gl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/glx_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/null_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/ps3_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/wgl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_check_window	gfx/context/xegl_ctx.c	/^static void gfx_ctx_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_clearfb	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_clearfb(void){$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_destroy	gfx/context/drm_egl_ctx.c	/^void gfx_ctx_destroy(void)$/;"	f	signature:(void)
gfx_ctx_destroy	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_destroy	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/glx_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/glx_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_destroy	gfx/context/null_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/ps3_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_destroy	gfx/context/wgl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/wgl_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_destroy	gfx/context/xegl_ctx.c	/^static void gfx_ctx_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_destroy	gfx/context/xegl_ctx.c	/^static void gfx_ctx_destroy(void);$/;"	p	file:	signature:(void)
gfx_ctx_driver	gfx/gfx_context.h	/^typedef struct gfx_ctx_driver$/;"	s
gfx_ctx_driver::bind_api	gfx/gfx_context.h	/^   bool (*bind_api)(enum gfx_ctx_api, unsigned major, unsigned minor); \/\/ Which API to bind to.$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::check_window	gfx/gfx_context.h	/^   void (*check_window)(bool*, bool*, unsigned*, unsigned*, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::destroy	gfx/gfx_context.h	/^   void (*destroy)(void);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::get_proc_address	gfx/gfx_context.h	/^   gfx_ctx_proc_t (*get_proc_address)(const char*);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::get_video_size	gfx/gfx_context.h	/^   void (*get_video_size)(unsigned*, unsigned*);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::has_focus	gfx/gfx_context.h	/^   bool (*has_focus)(void);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::ident	gfx/gfx_context.h	/^   const char *ident;$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::init	gfx/gfx_context.h	/^   bool (*init)(void);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::init_egl_image_buffer	gfx/gfx_context.h	/^   bool (*init_egl_image_buffer)(const video_info_t*);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::input_driver	gfx/gfx_context.h	/^   void (*input_driver)(const input_driver_t**, void**);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::set_resize	gfx/gfx_context.h	/^   void (*set_resize)(unsigned, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::set_video_mode	gfx/gfx_context.h	/^   bool (*set_video_mode)(unsigned, unsigned, bool);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::show_mouse	gfx/gfx_context.h	/^   void (*show_mouse)(bool state);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::swap_buffers	gfx/gfx_context.h	/^   void (*swap_buffers)(void);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::swap_interval	gfx/gfx_context.h	/^   void (*swap_interval)(unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::translate_aspect	gfx/gfx_context.h	/^   float (*translate_aspect)(unsigned, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::update_window_title	gfx/gfx_context.h	/^   void (*update_window_title)(void);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver::write_egl_image	gfx/gfx_context.h	/^   bool (*write_egl_image)(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle);$/;"	m	struct:gfx_ctx_driver	access:public
gfx_ctx_driver_t	gfx/gfx_context.h	/^} gfx_ctx_driver_t;$/;"	t	typeref:struct:gfx_ctx_driver
gfx_ctx_drivers	gfx/gfx_context.c	/^static const gfx_ctx_driver_t *gfx_ctx_drivers[] = {$/;"	v	file:
gfx_ctx_drm_egl	gfx/context/drm_egl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_drm_egl = {$/;"	v
gfx_ctx_egl_query_extension	gfx/context/vc_egl_ctx.c	/^static inline bool gfx_ctx_egl_query_extension(const char *ext)$/;"	f	file:	signature:(const char *ext)
gfx_ctx_emscripten	gfx/context/emscriptenegl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_emscripten = {$/;"	v
gfx_ctx_find_driver	gfx/gfx_context.c	/^const gfx_ctx_driver_t *gfx_ctx_find_driver(const char *ident)$/;"	f	signature:(const char *ident)
gfx_ctx_find_driver	gfx/gfx_context.h	/^const gfx_ctx_driver_t *gfx_ctx_find_driver(const char *ident); \/\/ Finds driver with ident. Does not initialize.$/;"	p	signature:(const char *ident)
gfx_ctx_get_aspect_ratio	gfx/context/ps3_ctx.c	/^static float gfx_ctx_get_aspect_ratio(void)$/;"	f	file:	signature:(void)
gfx_ctx_get_available_resolutions	gfx/context/ps3_ctx.c	/^static void gfx_ctx_get_available_resolutions (void)$/;"	f	file:	signature:(void)
gfx_ctx_get_proc_address	gfx/context/androidegl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/bbqnx_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/drm_egl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/emscriptenegl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/gles_egl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/glx_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/vc_egl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/wgl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_proc_address	gfx/context/xegl_ctx.c	/^static gfx_ctx_proc_t gfx_ctx_get_proc_address(const char *symbol)$/;"	f	file:	signature:(const char *symbol)
gfx_ctx_get_resolution_height	gfx/context/ps3_ctx.c	/^static unsigned gfx_ctx_get_resolution_height(unsigned resolution_id)$/;"	f	file:	signature:(unsigned resolution_id)
gfx_ctx_get_resolution_width	gfx/context/androidegl_ctx.c	/^static unsigned gfx_ctx_get_resolution_width(unsigned resolution_id)$/;"	f	file:	signature:(unsigned resolution_id)
gfx_ctx_get_resolution_width	gfx/context/bbqnx_ctx.c	/^static unsigned gfx_ctx_get_resolution_width(unsigned resolution_id)$/;"	f	file:	signature:(unsigned resolution_id)
gfx_ctx_get_resolution_width	gfx/context/ps3_ctx.c	/^static unsigned gfx_ctx_get_resolution_width(unsigned resolution_id)$/;"	f	file:	signature:(unsigned resolution_id)
gfx_ctx_get_video_size	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/glx_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/glx_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height);$/;"	p	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/null_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/ps3_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/wgl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/wgl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height);$/;"	p	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/xegl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_get_video_size	gfx/context/xegl_ctx.c	/^static void gfx_ctx_get_video_size(unsigned *width, unsigned *height);$/;"	p	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_gles_egl	gfx/context/gles_egl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_gles_egl = {$/;"	v
gfx_ctx_glx	gfx/context/glx_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_glx = {$/;"	v
gfx_ctx_has_focus	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/bbqnx_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/glx_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/null_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/ps3_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/wgl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_has_focus	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_has_focus(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/bbqnx_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/glx_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/null_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/ps3_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/wgl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_init_egl_image_buffer	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/glx_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_egl_image_buffer	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_init_egl_image_buffer(const video_info_t *video)$/;"	f	file:	signature:(const video_info_t *video)
gfx_ctx_init_first	gfx/gfx_context.c	/^const gfx_ctx_driver_t *gfx_ctx_init_first(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_init_first	gfx/gfx_context.h	/^const gfx_ctx_driver_t *gfx_ctx_init_first(enum gfx_ctx_api api, unsigned major, unsigned minor); \/\/ Finds first suitable driver and initializes.$/;"	p	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_input_driver	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/apple_gl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/glx_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/null_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/ps3_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/wgl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_input_driver	gfx/context/xegl_ctx.c	/^static void gfx_ctx_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_null	gfx/context/null_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_null = {$/;"	v
gfx_ctx_proc_t	gfx/gfx_context.h	/^typedef void (*gfx_ctx_proc_t)(void);$/;"	t
gfx_ctx_ps3	gfx/context/ps3_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_ps3 = {$/;"	v
gfx_ctx_set_resize	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/apple_gl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/glx_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/null_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/ps3_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height) { }$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/wgl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_resize	gfx/context/xegl_ctx.c	/^static void gfx_ctx_set_resize(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_set_swap_interval	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_set_swap_interval	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_set_swap_interval	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_set_swap_interval	gfx/context/null_ctx.c	/^static void gfx_ctx_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_set_swap_interval	gfx/context/ps3_ctx.c	/^static void gfx_ctx_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_set_video_mode	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/bbqnx_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/glx_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/null_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/ps3_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/wgl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_set_video_mode	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_show_mouse	gfx/context/glx_ctx.c	/^static void gfx_ctx_show_mouse(bool state)$/;"	f	file:	signature:(bool state)
gfx_ctx_show_mouse	gfx/context/wgl_ctx.c	/^static void gfx_ctx_show_mouse(bool state)$/;"	f	file:	signature:(bool state)
gfx_ctx_show_mouse	gfx/context/xegl_ctx.c	/^static void gfx_ctx_show_mouse(bool state)$/;"	f	file:	signature:(bool state)
gfx_ctx_swap_buffers	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/glx_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/null_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/ps3_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/wgl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_buffers	gfx/context/xegl_ctx.c	/^static void gfx_ctx_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_swap_interval	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_swap_interval	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_swap_interval	gfx/context/glx_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_swap_interval	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_swap_interval	gfx/context/wgl_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_swap_interval	gfx/context/xegl_ctx.c	/^static void gfx_ctx_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_translate_aspect	gfx/context/emscriptenegl_ctx.c	/^static float gfx_ctx_translate_aspect(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_translate_aspect	gfx/context/vc_egl_ctx.c	/^static float gfx_ctx_translate_aspect(unsigned width, unsigned height)$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_update_window_title	gfx/context/androidegl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/bbqnx_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/drm_egl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/emscriptenegl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/gles_egl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/glx_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/null_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/ps3_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/vc_egl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/wgl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_update_window_title	gfx/context/xegl_ctx.c	/^static void gfx_ctx_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_videocore	gfx/context/vc_egl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_videocore = {$/;"	v
gfx_ctx_wgl	gfx/context/wgl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_wgl = {$/;"	v
gfx_ctx_write_egl_image	gfx/context/androidegl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/drm_egl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/emscriptenegl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/gles_egl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/glx_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/vc_egl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_write_egl_image	gfx/context/xegl_ctx.c	/^static bool gfx_ctx_write_egl_image(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)$/;"	f	file:	signature:(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle)
gfx_ctx_x_egl	gfx/context/xegl_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_x_egl = {$/;"	v
gfx_ctx_xdk	gfx/context/xdk_ctx.c	/^const gfx_ctx_driver_t gfx_ctx_xdk = {$/;"	v
gfx_ctx_xdk_bind_api	gfx/context/xdk_ctx.c	/^static bool gfx_ctx_xdk_bind_api(enum gfx_ctx_api api, unsigned major, unsigned minor)$/;"	f	file:	signature:(enum gfx_ctx_api api, unsigned major, unsigned minor)
gfx_ctx_xdk_check_window	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_check_window(bool *quit,$/;"	f	file:	signature:(bool *quit, bool *resize, unsigned *width, unsigned *height, unsigned frame_count)
gfx_ctx_xdk_destroy	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_destroy(void)$/;"	f	file:	signature:(void)
gfx_ctx_xdk_get_video_size	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_get_video_size(unsigned *width, unsigned *height)$/;"	f	file:	signature:(unsigned *width, unsigned *height)
gfx_ctx_xdk_init	gfx/context/xdk_ctx.c	/^static bool gfx_ctx_xdk_init(void)$/;"	f	file:	signature:(void)
gfx_ctx_xdk_input_driver	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_input_driver(const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const input_driver_t **input, void **input_data)
gfx_ctx_xdk_set_resize	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_set_resize(unsigned width, unsigned height) { }$/;"	f	file:	signature:(unsigned width, unsigned height)
gfx_ctx_xdk_set_swap_interval	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_set_swap_interval(unsigned interval)$/;"	f	file:	signature:(unsigned interval)
gfx_ctx_xdk_set_video_mode	gfx/context/xdk_ctx.c	/^static bool gfx_ctx_xdk_set_video_mode($/;"	f	file:	signature:( unsigned width, unsigned height, bool fullscreen)
gfx_ctx_xdk_swap_buffers	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_swap_buffers(void)$/;"	f	file:	signature:(void)
gfx_ctx_xdk_update_window_title	gfx/context/xdk_ctx.c	/^static void gfx_ctx_xdk_update_window_title(void)$/;"	f	file:	signature:(void)
gfx_ctx_xdk_window_has_focus	gfx/context/xdk_ctx.c	/^static bool gfx_ctx_xdk_window_has_focus(void)$/;"	f	file:	signature:(void)
gfx_dwm_shutdown	gfx/gfx_common.c	/^static void gfx_dwm_shutdown(void)$/;"	f	file:	signature:(void)
gfx_fbo_scale	gfx/shader_parse.h	/^struct gfx_fbo_scale$/;"	s
gfx_fbo_scale::abs_x	gfx/shader_parse.h	/^   unsigned abs_x;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_fbo_scale::abs_y	gfx/shader_parse.h	/^   unsigned abs_y;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_fbo_scale::fp_fbo	gfx/shader_parse.h	/^   bool fp_fbo;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_fbo_scale::scale_x	gfx/shader_parse.h	/^   float scale_x;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_fbo_scale::scale_y	gfx/shader_parse.h	/^   float scale_y;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_fbo_scale::type_x	gfx/shader_parse.h	/^   enum gfx_scale_type type_x;$/;"	m	struct:gfx_fbo_scale	typeref:enum:gfx_fbo_scale::gfx_scale_type	access:public
gfx_fbo_scale::type_y	gfx/shader_parse.h	/^   enum gfx_scale_type type_y;$/;"	m	struct:gfx_fbo_scale	typeref:enum:gfx_fbo_scale::gfx_scale_type	access:public
gfx_fbo_scale::valid	gfx/shader_parse.h	/^   bool valid;$/;"	m	struct:gfx_fbo_scale	access:public
gfx_filter_type	gfx/shader_parse.h	/^enum gfx_filter_type$/;"	g
gfx_get_fps	gfx/gfx_common.c	/^bool gfx_get_fps(char *buf, size_t size, char *buf_fps, size_t size_fps)$/;"	f	signature:(char *buf, size_t size, char *buf_fps, size_t size_fps)
gfx_get_fps	gfx/gfx_common.h	/^bool gfx_get_fps(char *buf, size_t size, char *buf_fps, size_t size_fps);$/;"	p	signature:(char *buf, size_t size, char *buf_fps, size_t size_fps)
gfx_scale_integer	gfx/gfx_common.c	/^void gfx_scale_integer(struct rarch_viewport *vp, unsigned width, unsigned height, float aspect_ratio, bool keep_aspect)$/;"	f	signature:(struct rarch_viewport *vp, unsigned width, unsigned height, float aspect_ratio, bool keep_aspect)
gfx_scale_integer	gfx/gfx_common.h	/^void gfx_scale_integer(struct rarch_viewport *vp, unsigned win_width, unsigned win_height,$/;"	p	signature:(struct rarch_viewport *vp, unsigned win_width, unsigned win_height, float aspect_ratio, bool keep_aspect)
gfx_scale_type	gfx/shader_parse.h	/^enum gfx_scale_type$/;"	g
gfx_set_config_viewport	gfx/gfx_common.c	/^void gfx_set_config_viewport(void)$/;"	f	signature:(void)
gfx_set_config_viewport	gfx/gfx_common.h	/^void gfx_set_config_viewport(void);$/;"	p	signature:(void)
gfx_set_core_viewport	gfx/gfx_common.c	/^void gfx_set_core_viewport(void)$/;"	f	signature:(void)
gfx_set_core_viewport	gfx/gfx_common.h	/^void gfx_set_core_viewport(void);$/;"	p	signature:(void)
gfx_set_dwm	gfx/gfx_common.c	/^void gfx_set_dwm(void)$/;"	f	signature:(void)
gfx_set_dwm	gfx/gfx_common.h	/^void gfx_set_dwm(void);$/;"	p	signature:(void)
gfx_set_square_pixel_viewport	gfx/gfx_common.c	/^void gfx_set_square_pixel_viewport(unsigned width, unsigned height)$/;"	f	signature:(unsigned width, unsigned height)
gfx_set_square_pixel_viewport	gfx/gfx_common.h	/^void gfx_set_square_pixel_viewport(unsigned width, unsigned height);$/;"	p	signature:(unsigned width, unsigned height)
gfx_shader	gfx/shader_parse.h	/^struct gfx_shader$/;"	s
gfx_shader::lut	gfx/shader_parse.h	/^   struct gfx_shader_lut lut[GFX_MAX_TEXTURES];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::gfx_shader_lut	access:public
gfx_shader::luts	gfx/shader_parse.h	/^   unsigned luts;$/;"	m	struct:gfx_shader	access:public
gfx_shader::modern	gfx/shader_parse.h	/^   bool modern; \/\/ Only used for XML shaders.$/;"	m	struct:gfx_shader	access:public
gfx_shader::pass	gfx/shader_parse.h	/^   struct gfx_shader_pass pass[GFX_MAX_SHADERS];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::gfx_shader_pass	access:public
gfx_shader::passes	gfx/shader_parse.h	/^   unsigned passes;$/;"	m	struct:gfx_shader	access:public
gfx_shader::prefix	gfx/shader_parse.h	/^   char prefix[64];$/;"	m	struct:gfx_shader	access:public
gfx_shader::script	gfx/shader_parse.h	/^   char *script; \/\/ Dynamically allocated. Must be free'd. Only used by XML.$/;"	m	struct:gfx_shader	access:public
gfx_shader::script_class	gfx/shader_parse.h	/^   char script_class[512];$/;"	m	struct:gfx_shader	access:public
gfx_shader::script_path	gfx/shader_parse.h	/^   char script_path[PATH_MAX];$/;"	m	struct:gfx_shader	access:public
gfx_shader::type	gfx/shader_parse.h	/^   enum rarch_shader_type type;$/;"	m	struct:gfx_shader	typeref:enum:gfx_shader::rarch_shader_type	access:public
gfx_shader::variable	gfx/shader_parse.h	/^   struct state_tracker_uniform_info variable[GFX_MAX_VARIABLES];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::state_tracker_uniform_info	access:public
gfx_shader::variables	gfx/shader_parse.h	/^   unsigned variables;$/;"	m	struct:gfx_shader	access:public
gfx_shader_lut	gfx/shader_parse.h	/^struct gfx_shader_lut$/;"	s
gfx_shader_lut::filter	gfx/shader_parse.h	/^   enum gfx_filter_type filter;$/;"	m	struct:gfx_shader_lut	typeref:enum:gfx_shader_lut::gfx_filter_type	access:public
gfx_shader_lut::id	gfx/shader_parse.h	/^   char id[64];$/;"	m	struct:gfx_shader_lut	access:public
gfx_shader_lut::path	gfx/shader_parse.h	/^   char path[PATH_MAX];$/;"	m	struct:gfx_shader_lut	access:public
gfx_shader_lut::wrap	gfx/shader_parse.h	/^   enum gfx_wrap_type wrap;$/;"	m	struct:gfx_shader_lut	typeref:enum:gfx_shader_lut::gfx_wrap_type	access:public
gfx_shader_parse_type	gfx/shader_parse.c	/^enum rarch_shader_type gfx_shader_parse_type(const char *path, enum rarch_shader_type fallback)$/;"	f	signature:(const char *path, enum rarch_shader_type fallback)
gfx_shader_parse_type	gfx/shader_parse.h	/^enum rarch_shader_type gfx_shader_parse_type(const char *path, enum rarch_shader_type fallback);$/;"	p	signature:(const char *path, enum rarch_shader_type fallback)
gfx_shader_pass	gfx/shader_parse.h	/^struct gfx_shader_pass$/;"	s
gfx_shader_pass::__anon212::__anon213::fragment	gfx/shader_parse.h	/^         char *fragment; \/\/ Dynamically allocated. Must be free'd.$/;"	m	struct:gfx_shader_pass::__anon212::__anon213	access:public
gfx_shader_pass::__anon212::__anon213::vertex	gfx/shader_parse.h	/^         char *vertex; \/\/ Dynamically allocated. Must be free'd.$/;"	m	struct:gfx_shader_pass::__anon212::__anon213	access:public
gfx_shader_pass::__anon212::cg	gfx/shader_parse.h	/^      char cg[PATH_MAX];$/;"	m	struct:gfx_shader_pass::__anon212	access:public
gfx_shader_pass::__anon212::xml	gfx/shader_parse.h	/^      } xml;$/;"	m	struct:gfx_shader_pass::__anon212	typeref:struct:gfx_shader_pass::__anon212::__anon213	access:public
gfx_shader_pass::fbo	gfx/shader_parse.h	/^   struct gfx_fbo_scale fbo;$/;"	m	struct:gfx_shader_pass	typeref:struct:gfx_shader_pass::gfx_fbo_scale	access:public
gfx_shader_pass::filter	gfx/shader_parse.h	/^   enum gfx_filter_type filter;$/;"	m	struct:gfx_shader_pass	typeref:enum:gfx_shader_pass::gfx_filter_type	access:public
gfx_shader_pass::frame_count_mod	gfx/shader_parse.h	/^   unsigned frame_count_mod;$/;"	m	struct:gfx_shader_pass	access:public
gfx_shader_pass::source	gfx/shader_parse.h	/^   } source;$/;"	m	struct:gfx_shader_pass	typeref:struct:gfx_shader_pass::__anon212	access:public
gfx_shader_pass::wrap	gfx/shader_parse.h	/^   enum gfx_wrap_type wrap;$/;"	m	struct:gfx_shader_pass	typeref:enum:gfx_shader_pass::gfx_wrap_type	access:public
gfx_shader_read_conf_cgp	gfx/shader_parse.c	/^bool gfx_shader_read_conf_cgp(config_file_t *conf, struct gfx_shader *shader)$/;"	f	signature:(config_file_t *conf, struct gfx_shader *shader)
gfx_shader_read_conf_cgp	gfx/shader_parse.h	/^bool gfx_shader_read_conf_cgp(config_file_t *conf, struct gfx_shader *shader);$/;"	p	signature:(config_file_t *conf, struct gfx_shader *shader)
gfx_shader_read_xml	gfx/shader_parse.c	/^bool gfx_shader_read_xml(const char *path, struct gfx_shader *shader)$/;"	f	signature:(const char *path, struct gfx_shader *shader)
gfx_shader_read_xml	gfx/shader_parse.h	/^bool gfx_shader_read_xml(const char *path, struct gfx_shader *shader);$/;"	p	signature:(const char *path, struct gfx_shader *shader)
gfx_shader_resolve_relative	gfx/shader_parse.c	/^void gfx_shader_resolve_relative(struct gfx_shader *shader, const char *ref_path)$/;"	f	signature:(struct gfx_shader *shader, const char *ref_path)
gfx_shader_resolve_relative	gfx/shader_parse.h	/^void gfx_shader_resolve_relative(struct gfx_shader *shader, const char *ref_path);$/;"	p	signature:(struct gfx_shader *shader, const char *ref_path)
gfx_shader_write_conf_cgp	gfx/shader_parse.c	/^void gfx_shader_write_conf_cgp(config_file_t *conf, const struct gfx_shader *shader)$/;"	f	signature:(config_file_t *conf, const struct gfx_shader *shader)
gfx_shader_write_conf_cgp	gfx/shader_parse.h	/^void gfx_shader_write_conf_cgp(config_file_t *conf, const struct gfx_shader *shader);$/;"	p	signature:(config_file_t *conf, const struct gfx_shader *shader)
gfx_use_rgba	driver.h	/^   bool gfx_use_rgba;$/;"	m	struct:driver	access:public
gfx_wrap_type	gfx/shader_parse.h	/^enum gfx_wrap_type$/;"	g
gi	deps/minizip/unzip.c	/^    unz_global_info gi;       \/* public global information *\/$/;"	m	struct:__anon111	file:	access:public
gl	gfx/gl_common.h	/^typedef struct gl$/;"	s
gl	xenon/xenon360_video.c	/^typedef struct gl$/;"	s	file:
gl::base_size	gfx/gl_common.h	/^   unsigned base_size; \/\/ 2 or 4$/;"	m	struct:gl	access:public
gl::conv_buffer	gfx/gl_common.h	/^   void *conv_buffer;$/;"	m	struct:gl	access:public
gl::coords	gfx/gl_common.h	/^   struct gl_coords coords;$/;"	m	struct:gl	typeref:struct:gl::gl_coords	access:public
gl::core_context	gfx/gl_common.h	/^   bool core_context;$/;"	m	struct:gl	access:public
gl::ctx_driver	gfx/gl_common.h	/^   const gfx_ctx_driver_t *ctx_driver;$/;"	m	struct:gl	access:public
gl::egl_images	gfx/gl_common.h	/^   bool egl_images;$/;"	m	struct:gl	access:public
gl::empty_buf	gfx/gl_common.h	/^   void *empty_buf;$/;"	m	struct:gl	access:public
gl::fbo	gfx/gl_common.h	/^   GLuint fbo[MAX_SHADERS];$/;"	m	struct:gl	access:public
gl::fbo_inited	gfx/gl_common.h	/^   bool fbo_inited;$/;"	m	struct:gl	access:public
gl::fbo_pass	gfx/gl_common.h	/^   int fbo_pass;$/;"	m	struct:gl	access:public
gl::fbo_rect	gfx/gl_common.h	/^   struct gl_fbo_rect fbo_rect[MAX_SHADERS];$/;"	m	struct:gl	typeref:struct:gl::gl_fbo_rect	access:public
gl::fbo_scale	gfx/gl_common.h	/^   struct gfx_fbo_scale fbo_scale[MAX_SHADERS];$/;"	m	struct:gl	typeref:struct:gl::gfx_fbo_scale	access:public
gl::fbo_texture	gfx/gl_common.h	/^   GLuint fbo_texture[MAX_SHADERS];$/;"	m	struct:gl	access:public
gl::fence_count	gfx/gl_common.h	/^   unsigned fence_count;$/;"	m	struct:gl	access:public
gl::fences	gfx/gl_common.h	/^   GLsync fences[MAX_FENCES];$/;"	m	struct:gl	access:public
gl::font	gfx/gl_common.h	/^   void *font;$/;"	m	struct:gl	access:public
gl::font_color	gfx/gl_common.h	/^   GLfloat font_color[16];$/;"	m	struct:gl	access:public
gl::font_color_dark	gfx/gl_common.h	/^   GLfloat font_color_dark[16];$/;"	m	struct:gl	access:public
gl::font_ctx	gfx/gl_common.h	/^   const gl_font_renderer_t *font_ctx;$/;"	m	struct:gl	access:public
gl::font_driver	gfx/gl_common.h	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:gl	access:public
gl::font_last_height	gfx/gl_common.h	/^   int font_last_width, font_last_height;$/;"	m	struct:gl	access:public
gl::font_last_msg	gfx/gl_common.h	/^   char font_last_msg[256];$/;"	m	struct:gl	access:public
gl::font_last_width	gfx/gl_common.h	/^   int font_last_width, font_last_height;$/;"	m	struct:gl	access:public
gl::font_tex	gfx/gl_common.h	/^   GLuint font_tex;$/;"	m	struct:gl	access:public
gl::font_tex_buf	gfx/gl_common.h	/^   uint32_t *font_tex_buf;$/;"	m	struct:gl	access:public
gl::font_tex_h	gfx/gl_common.h	/^   int font_tex_w, font_tex_h;$/;"	m	struct:gl	access:public
gl::font_tex_w	gfx/gl_common.h	/^   int font_tex_w, font_tex_h;$/;"	m	struct:gl	access:public
gl::frame_count	gfx/gl_common.h	/^   unsigned frame_count;$/;"	m	struct:gl	access:public
gl::full_x	gfx/gl_common.h	/^   unsigned full_x, full_y;$/;"	m	struct:gl	access:public
gl::full_y	gfx/gl_common.h	/^   unsigned full_x, full_y;$/;"	m	struct:gl	access:public
gl::fullscreen	gfx/gl_common.h	/^   bool fullscreen;$/;"	m	struct:gl	access:public
gl::g_pPixelTexturedShader	xenon/xenon360_video.c	/^   struct XenosShader * g_pPixelTexturedShader;$/;"	m	struct:gl	typeref:struct:gl::XenosShader	file:	access:public
gl::g_pTexture	xenon/xenon360_video.c	/^   struct XenosSurface * g_pTexture;$/;"	m	struct:gl	typeref:struct:gl::XenosSurface	file:	access:public
gl::g_pVertexShader	xenon/xenon360_video.c	/^   struct XenosShader * g_pVertexShader;$/;"	m	struct:gl	typeref:struct:gl::XenosShader	file:	access:public
gl::gl_device	xenon/xenon360_video.c	/^   struct XenosDevice * gl_device;$/;"	m	struct:gl	typeref:struct:gl::XenosDevice	file:	access:public
gl::has_fp_fbo	gfx/gl_common.h	/^   bool has_fp_fbo;$/;"	m	struct:gl	access:public
gl::have_sync	gfx/gl_common.h	/^   bool have_sync;$/;"	m	struct:gl	access:public
gl::hw_render_depth	gfx/gl_common.h	/^   GLuint hw_render_depth[MAX_TEXTURES];$/;"	m	struct:gl	access:public
gl::hw_render_depth_init	gfx/gl_common.h	/^   bool hw_render_depth_init;$/;"	m	struct:gl	access:public
gl::hw_render_fbo	gfx/gl_common.h	/^   GLuint hw_render_fbo[MAX_TEXTURES];$/;"	m	struct:gl	access:public
gl::hw_render_fbo_init	gfx/gl_common.h	/^   bool hw_render_fbo_init;$/;"	m	struct:gl	access:public
gl::hw_render_use	gfx/gl_common.h	/^   bool hw_render_use;$/;"	m	struct:gl	access:public
gl::internal_fmt	gfx/gl_common.h	/^   GLenum internal_fmt;$/;"	m	struct:gl	access:public
gl::keep_aspect	gfx/gl_common.h	/^   bool keep_aspect;$/;"	m	struct:gl	access:public
gl::last_height	gfx/gl_common.h	/^   unsigned last_height[MAX_TEXTURES];$/;"	m	struct:gl	access:public
gl::last_width	gfx/gl_common.h	/^   unsigned last_width[MAX_TEXTURES];$/;"	m	struct:gl	access:public
gl::max_font_size	gfx/gl_common.h	/^   GLint max_font_size;$/;"	m	struct:gl	access:public
gl::mvp	gfx/gl_common.h	/^   math_matrix mvp, mvp_no_rot;$/;"	m	struct:gl	access:public
gl::mvp_no_rot	gfx/gl_common.h	/^   math_matrix mvp, mvp_no_rot;$/;"	m	struct:gl	access:public
gl::overlay	gfx/gl_common.h	/^   struct gl_overlay_data *overlay;$/;"	m	struct:gl	typeref:struct:gl::gl_overlay_data	access:public
gl::overlay_enable	gfx/gl_common.h	/^   bool overlay_enable;$/;"	m	struct:gl	access:public
gl::overlay_full_screen	gfx/gl_common.h	/^   bool overlay_full_screen;$/;"	m	struct:gl	access:public
gl::overlays	gfx/gl_common.h	/^   unsigned overlays;$/;"	m	struct:gl	access:public
gl::pbo	gfx/gl_common.h	/^   GLuint pbo;$/;"	m	struct:gl	access:public
gl::pbo_readback	gfx/gl_common.h	/^   GLuint pbo_readback[4];$/;"	m	struct:gl	access:public
gl::pbo_readback_enable	gfx/gl_common.h	/^   bool pbo_readback_enable;$/;"	m	struct:gl	access:public
gl::pbo_readback_index	gfx/gl_common.h	/^   unsigned pbo_readback_index;$/;"	m	struct:gl	access:public
gl::pbo_readback_scaler	gfx/gl_common.h	/^   struct scaler_ctx pbo_readback_scaler;$/;"	m	struct:gl	typeref:struct:gl::scaler_ctx	access:public
gl::pbo_readback_valid	gfx/gl_common.h	/^   bool pbo_readback_valid;$/;"	m	struct:gl	access:public
gl::prev_info	gfx/gl_common.h	/^   struct gl_tex_info prev_info[MAX_TEXTURES];$/;"	m	struct:gl	typeref:struct:gl::gl_tex_info	access:public
gl::quitting	gfx/gl_common.h	/^   bool quitting;$/;"	m	struct:gl	access:public
gl::real_device	xenon/xenon360_video.c	/^   struct XenosDevice real_device;$/;"	m	struct:gl	typeref:struct:gl::XenosDevice	file:	access:public
gl::rgui_texture	gfx/gl_common.h	/^   GLuint rgui_texture;$/;"	m	struct:gl	access:public
gl::rgui_texture_alpha	gfx/gl_common.h	/^   GLfloat rgui_texture_alpha;$/;"	m	struct:gl	access:public
gl::rgui_texture_enable	gfx/gl_common.h	/^   bool rgui_texture_enable;$/;"	m	struct:gl	access:public
gl::rgui_texture_full_screen	gfx/gl_common.h	/^   bool rgui_texture_full_screen;$/;"	m	struct:gl	access:public
gl::rotation	gfx/gl_common.h	/^   unsigned rotation;$/;"	m	struct:gl	access:public
gl::scaler	gfx/gl_common.h	/^   struct scaler_ctx scaler;$/;"	m	struct:gl	typeref:struct:gl::scaler_ctx	access:public
gl::screen	xenon/xenon360_video.c	/^   unsigned char *screen;$/;"	m	struct:gl	file:	access:public
gl::shader	gfx/gl_common.h	/^   const gl_shader_backend_t *shader;$/;"	m	struct:gl	access:public
gl::should_resize	gfx/gl_common.h	/^   bool should_resize;$/;"	m	struct:gl	access:public
gl::support_unpack_row_length	gfx/gl_common.h	/^   bool support_unpack_row_length;$/;"	m	struct:gl	access:public
gl::tex_coords	gfx/gl_common.h	/^   GLfloat tex_coords[8];$/;"	m	struct:gl	access:public
gl::tex_filter	gfx/gl_common.h	/^   GLuint tex_filter;$/;"	m	struct:gl	access:public
gl::tex_h	gfx/gl_common.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:gl	access:public
gl::tex_index	gfx/gl_common.h	/^   unsigned tex_index; \/\/ For use with PREV.$/;"	m	struct:gl	access:public
gl::tex_w	gfx/gl_common.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:gl	access:public
gl::texture	gfx/gl_common.h	/^   GLuint texture[MAX_TEXTURES];$/;"	m	struct:gl	access:public
gl::texture_fmt	gfx/gl_common.h	/^   GLenum texture_fmt;$/;"	m	struct:gl	access:public
gl::texture_type	gfx/gl_common.h	/^   GLenum texture_type; \/\/ RGB565 or ARGB$/;"	m	struct:gl	access:public
gl::textures	gfx/gl_common.h	/^   unsigned textures;$/;"	m	struct:gl	access:public
gl::vao	gfx/gl_common.h	/^   GLuint vao;$/;"	m	struct:gl	access:public
gl::vb	xenon/xenon360_video.c	/^   struct XenosVertexBuffer *vb;$/;"	m	struct:gl	typeref:struct:gl::XenosVertexBuffer	file:	access:public
gl::vertex_ptr	gfx/gl_common.h	/^   const GLfloat *vertex_ptr;$/;"	m	struct:gl	access:public
gl::video_info	gfx/gl_common.h	/^   video_info_t video_info;$/;"	m	struct:gl	access:public
gl::vp	gfx/gl_common.h	/^   struct rarch_viewport vp;$/;"	m	struct:gl	typeref:struct:gl::rarch_viewport	access:public
gl::vp_out_height	gfx/gl_common.h	/^   unsigned vp_out_height;$/;"	m	struct:gl	access:public
gl::vp_out_width	gfx/gl_common.h	/^   unsigned vp_out_width;$/;"	m	struct:gl	access:public
gl::vsync	gfx/gl_common.h	/^   bool vsync;$/;"	m	struct:gl	access:public
gl::white_color_ptr	gfx/gl_common.h	/^   const GLfloat *white_color_ptr;$/;"	m	struct:gl	access:public
gl::win_height	gfx/gl_common.h	/^   unsigned win_height;$/;"	m	struct:gl	access:public
gl::win_width	gfx/gl_common.h	/^   unsigned win_width;$/;"	m	struct:gl	access:public
gl::wrap_mode	gfx/gl_common.h	/^   GLenum wrap_mode;$/;"	m	struct:gl	access:public
glAccumxOES	gfx/glsym/glsym_gl.h	1920;"	d
glActiveProgramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	p	signature:(GLuint program)
glActiveShaderProgram	gfx/glsym/glsym_gl.h	1733;"	d
glActiveShaderProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	p	signature:(GLuint pipeline, GLuint program)
glActiveStencilFaceEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum face);$/;"	p	signature:(GLenum face)
glActiveTexture	gfx/glsym/glsym_gl.h	1073;"	d
glActiveTexture	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveTexture	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glActiveTexture( GLenum texture );$/;"	p	signature:( GLenum texture )
glActiveTexture	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glActiveTexture( GLenum texture )$/;"	f	signature:( GLenum texture )
glActiveTextureARB	gfx/glsym/glsym_gl.h	1353;"	d
glActiveTextureARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveVaryingNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glActiveVaryingNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glAlphaFragmentOp1ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glAlphaFragmentOp2ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glAlphaFragmentOp3ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glAlphaFunc	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glAlphaFunc( GLenum func, GLclampf ref );$/;"	p	signature:( GLenum func, GLclampf ref )
glAlphaFuncx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glAlphaFuncx( GLenum func, GLclampx ref );$/;"	p	signature:( GLenum func, GLclampx ref )
glAlphaFuncxOES	gfx/glsym/glsym_gl.h	1921;"	d
glApplyTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glAreProgramsResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *programs, GLboolean *residences)
glAreTexturesResidentEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *textures, GLboolean *residences)
glArrayElementEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint i);$/;"	p	signature:(GLint i)
glArrayObjectATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glAsyncMarkerSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glAttachObjectARB	gfx/glsym/glsym_gl.h	1520;"	d
glAttachObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB obj)
glAttachShader	gfx/glsym/glsym_gl.h	1188;"	d
glAttachShader	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glBeginConditionalRender	gfx/glsym/glsym_gl.h	1295;"	d
glBeginConditionalRender	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginConditionalRenderNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginFragmentShaderATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	p	signature:(void)
glBeginOcclusionQueryNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glBeginPerfMonitorAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glBeginQuery	gfx/glsym/glsym_gl.h	1167;"	d
glBeginQuery	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryARB	gfx/glsym/glsym_gl.h	1508;"	d
glBeginQueryARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryIndexed	gfx/glsym/glsym_gl.h	1721;"	d
glBeginQueryIndexed	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	p	signature:(GLenum target, GLuint index, GLuint id)
glBeginTransformFeedback	gfx/glsym/glsym_gl.h	1288;"	d
glBeginTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackEXT (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackNV (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginVertexShaderEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	p	signature:(void)
glBeginVideoCaptureNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBeginVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glBindAttribLocation	gfx/glsym/glsym_gl.h	1189;"	d
glBindAttribLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, const GLchar *name)
glBindAttribLocationARB	gfx/glsym/glsym_gl.h	1552;"	d
glBindAttribLocationARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, const GLcharARB *name)
glBindBuffer	gfx/glsym/glsym_gl.h	1172;"	d
glBindBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBuffer	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBindBuffer( GLenum target, GLuint name );$/;"	p	signature:( GLenum target, GLuint name )
glBindBuffer	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBindBuffer( GLenum target, GLuint name )$/;"	f	signature:( GLenum target, GLuint name )
glBindBufferARB	gfx/glsym/glsym_gl.h	1494;"	d
glBindBufferARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBufferBase	gfx/glsym/glsym_gl.h	1291;"	d
glBindBufferBase	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferOffsetEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferOffsetNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferRange	gfx/glsym/glsym_gl.h	1290;"	d
glBindBufferRange	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindFragDataLocation	gfx/glsym/glsym_gl.h	1321;"	d
glBindFragDataLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationIndexed	gfx/glsym/glsym_gl.h	1626;"	d
glBindFragDataLocationIndexed	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name)
glBindFragmentShaderATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glBindFramebuffer	gfx/gl.c	170;"	d	file:
glBindFramebuffer	gfx/glsym/glsym_gl.h	1566;"	d
glBindFramebuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindFramebufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindFramebufferOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBindFramebufferOES( GLenum, GLuint );$/;"	p	signature:( GLenum, GLuint )
glBindFramebufferOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBindFramebufferOES( GLenum target, GLuint framebuffer )$/;"	f	signature:( GLenum target, GLuint framebuffer )
glBindImageTexture	gfx/glsym/glsym_gl.h	1844;"	d
glBindImageTexture	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	p	signature:(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format)
glBindImageTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	p	signature:(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format)
glBindLightParameterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum light, GLenum value);$/;"	p	signature:(GLenum light, GLenum value)
glBindMaterialParameterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum face, GLenum value);$/;"	p	signature:(GLenum face, GLenum value)
glBindMultiTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint texture)
glBindParameterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum value);$/;"	p	signature:(GLenum value)
glBindProgramARB	gfx/glsym/glsym_gl.h	1472;"	d
glBindProgramARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum target, GLuint program);$/;"	p	signature:(GLenum target, GLuint program)
glBindProgramNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindProgramPipeline	gfx/glsym/glsym_gl.h	1735;"	d
glBindProgramPipeline	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glBindRenderbuffer	gfx/gl.c	175;"	d	file:
glBindRenderbuffer	gfx/glsym/glsym_gl.h	1560;"	d
glBindRenderbuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindRenderbufferOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBindRenderbufferOES( GLenum, GLuint );$/;"	p	signature:( GLenum, GLuint )
glBindSampler	gfx/glsym/glsym_gl.h	1631;"	d
glBindSampler	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	p	signature:(GLuint unit, GLuint sampler)
glBindTexGenParameterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);$/;"	p	signature:(GLenum unit, GLenum coord, GLenum value)
glBindTexture	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glBindTexture( GLenum target, GLuint texture );$/;"	p	signature:( GLenum target, GLuint texture )
glBindTexture	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBindTexture( GLenum target, GLuint name )$/;"	f	signature:( GLenum target, GLuint name )
glBindTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBindTextureUnitParameterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum unit, GLenum value);$/;"	p	signature:(GLenum unit, GLenum value)
glBindTransformFeedback	gfx/glsym/glsym_gl.h	1713;"	d
glBindTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindTransformFeedbackNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindVertexArray	gfx/glsym/glsym_gl.h	1587;"	d
glBindVertexArray	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexArrayOES	gfx/glsym/glsym_es2.h	66;"	d
glBindVertexBuffer	gfx/glsym/glsym_gl.h	1865;"	d
glBindVertexBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p	signature:(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
glBindVertexShaderEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glBindVideoCaptureStreamBufferNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset)
glBindVideoCaptureStreamTextureNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture)
glBinormal3bEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);$/;"	p	signature:(GLbyte bx, GLbyte by, GLbyte bz)
glBinormal3bvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glBinormal3dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);$/;"	p	signature:(GLdouble bx, GLdouble by, GLdouble bz)
glBinormal3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glBinormal3fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);$/;"	p	signature:(GLfloat bx, GLfloat by, GLfloat bz)
glBinormal3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glBinormal3iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint bx, GLint by, GLint bz);$/;"	p	signature:(GLint bx, GLint by, GLint bz)
glBinormal3ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glBinormal3sEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);$/;"	p	signature:(GLshort bx, GLshort by, GLshort bz)
glBinormal3svEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glBinormalPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glBitmapxOES	gfx/glsym/glsym_gl.h	1922;"	d
glBlendColor	gfx/glsym/glsym_gl.h	1035;"	d
glBlendColor	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glBlendColor	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBlendColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha );$/;"	p	signature:( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )
glBlendColor	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBlendColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )$/;"	f	signature:( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )
glBlendColorEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glBlendColorxOES	gfx/glsym/glsym_gl.h	1923;"	d
glBlendEquation	gfx/glsym/glsym_gl.h	1036;"	d
glBlendEquation	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquation	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBlendEquation( GLenum mode );$/;"	p	signature:( GLenum mode )
glBlendEquationEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquationIndexedAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationIndexedAMD (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationSeparate	gfx/glsym/glsym_gl.h	1183;"	d
glBlendEquationSeparate	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparate	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBlendEquationSeparate( GLenum modeRGB, GLenum modeAlpha );$/;"	p	signature:( GLenum modeRGB, GLenum modeAlpha )
glBlendEquationSeparateEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateIndexedAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparatei	gfx/glsym/glsym_gl.h	1350;"	d
glBlendEquationSeparatei	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateiARB	gfx/glsym/glsym_gl.h	1616;"	d
glBlendEquationSeparateiARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationi	gfx/glsym/glsym_gl.h	1349;"	d
glBlendEquationi	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationiARB	gfx/glsym/glsym_gl.h	1615;"	d
glBlendEquationiARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendFunc	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glBlendFunc( GLenum sfactor, GLenum dfactor );$/;"	p	signature:( GLenum sfactor, GLenum dfactor )
glBlendFunc	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBlendFunc( GLenum sfactor, GLenum dfactor )$/;"	f	signature:( GLenum sfactor, GLenum dfactor )
glBlendFuncIndexedAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFuncSeparate	gfx/glsym/glsym_gl.h	1119;"	d
glBlendFuncSeparate	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparate	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBlendFuncSeparate( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha );$/;"	p	signature:( GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha )
glBlendFuncSeparateEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateINGR	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateIndexedAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparatei	gfx/glsym/glsym_gl.h	1352;"	d
glBlendFuncSeparatei	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparateiARB	gfx/glsym/glsym_gl.h	1618;"	d
glBlendFuncSeparateiARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFunci	gfx/glsym/glsym_gl.h	1351;"	d
glBlendFunci	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFunciARB	gfx/glsym/glsym_gl.h	1617;"	d
glBlendFunciARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlitFramebuffer	gfx/glsym/glsym_gl.h	1576;"	d
glBlitFramebuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBlitFramebufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBufferAddressRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	p	signature:(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length)
glBufferData	gfx/glsym/glsym_gl.h	1176;"	d
glBufferData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
glBufferData	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBufferData( GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage );$/;"	p	signature:( GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage )
glBufferData	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glBufferData( GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage )$/;"	f	signature:( GLenum target, GLsizeiptr size, const GLvoid * data, GLenum usage )
glBufferDataARB	gfx/glsym/glsym_gl.h	1498;"	d
glBufferDataARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage)
glBufferParameteriAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glBufferSubData	gfx/gl_common.h	310;"	d
glBufferSubData	gfx/glsym/glsym_gl.h	1177;"	d
glBufferSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
glBufferSubData	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glBufferSubData( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data );$/;"	p	signature:( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )
glBufferSubData	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glBufferSubData( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )$/;"	f	signature:( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )
glBufferSubDataARB	gfx/glsym/glsym_gl.h	1499;"	d
glBufferSubDataARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data)
glBufferSubDataTextureReferenceRA	gfx/gl_common.h	/^extern void glBufferSubDataTextureReferenceRA( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data );$/;"	p	signature:( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )
glBufferSubDataTextureReferenceRA	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glBufferSubDataTextureReferenceRA( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )$/;"	f	signature:( GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data )
glCheckFramebufferStatus	gfx/gl.c	172;"	d	file:
glCheckFramebufferStatus	gfx/glsym/glsym_gl.h	1569;"	d
glCheckFramebufferStatus	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	signature:(GLenum target)
glCheckFramebufferStatusEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum target);$/;"	p	signature:(GLenum target)
glCheckFramebufferStatusOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLenum APIENTRY glCheckFramebufferStatusOES( GLenum );$/;"	p	signature:( GLenum )
glCheckFramebufferStatusOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusOES( GLenum target )$/;"	f	signature:( GLenum target )
glCheckNamedFramebufferStatusEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	p	signature:(GLuint framebuffer, GLenum target)
glClampColor	gfx/glsym/glsym_gl.h	1294;"	d
glClampColor	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClampColorARB	gfx/glsym/glsym_gl.h	1556;"	d
glClampColorARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClampColorARB (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClear	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClear( GLbitfield mask );$/;"	p	signature:( GLbitfield mask )
glClear	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glClear( GLbitfield mask )$/;"	f	signature:( GLbitfield mask )
glClearAccumxOES	gfx/glsym/glsym_gl.h	1924;"	d
glClearBufferData	gfx/glsym/glsym_gl.h	1859;"	d
glClearBufferData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data)
glClearBufferSubData	gfx/glsym/glsym_gl.h	1860;"	d
glClearBufferSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data)
glClearBufferfi	gfx/glsym/glsym_gl.h	1338;"	d
glClearBufferfi	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
glClearBufferfv	gfx/glsym/glsym_gl.h	1337;"	d
glClearBufferfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLfloat *value)
glClearBufferiv	gfx/glsym/glsym_gl.h	1335;"	d
glClearBufferiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLint *value)
glClearBufferuiv	gfx/glsym/glsym_gl.h	1336;"	d
glClearBufferuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLuint *value)
glClearColor	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClearColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha );$/;"	p	signature:( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )
glClearColor	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glClearColor( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )$/;"	f	signature:( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )
glClearColorIiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);$/;"	p	signature:(GLint red, GLint green, GLint blue, GLint alpha)
glClearColorIuiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)
glClearColorx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClearColorx( GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha );$/;"	p	signature:( GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha )
glClearColorxOES	gfx/glsym/glsym_gl.h	1925;"	d
glClearDepthdNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	p	signature:(GLdouble depth)
glClearDepthf	gfx/glsym/glsym_gl.h	1728;"	d
glClearDepthf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearDepthf (GLfloat d);$/;"	p	signature:(GLfloat d)
glClearDepthf	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClearDepthf( GLclampf depth );$/;"	p	signature:( GLclampf depth )
glClearDepthfOES	gfx/glsym/glsym_gl.h	2028;"	d
glClearDepthx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClearDepthx( GLclampx depth );$/;"	p	signature:( GLclampx depth )
glClearDepthxOES	gfx/glsym/glsym_gl.h	1926;"	d
glClearNamedBufferDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data)
glClearNamedBufferSubDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, const void *data)
glClearStencil	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClearStencil( GLint s );$/;"	p	signature:( GLint s )
glClientActiveTexture	gfx/glsym/glsym_gl.h	1082;"	d
glClientActiveTexture	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveTexture	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glClientActiveTexture( GLenum texture );$/;"	p	signature:( GLenum texture )
glClientActiveTextureARB	gfx/glsym/glsym_gl.h	1354;"	d
glClientActiveTextureARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveVertexStreamATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum stream);$/;"	p	signature:(GLenum stream)
glClientAttribDefaultEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClientWaitSync	gfx/glsym/glsym_gl.h	1607;"	d
glClientWaitSync	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glClipPlanefOES	gfx/glsym/glsym_gl.h	2027;"	d
glClipPlanexOES	gfx/glsym/glsym_gl.h	1927;"	d
glColor3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glColor3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *v)
glColor3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glColor3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor3xOES	gfx/glsym/glsym_gl.h	1928;"	d
glColor3xvOES	gfx/glsym/glsym_gl.h	1930;"	d
glColor4fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glColor4fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *n, const GLfloat *v)
glColor4hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)
glColor4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor4ubVertex2fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)
glColor4ubVertex2fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColor4ubVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glColor4ubVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColor4x	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glColor4x( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha );$/;"	p	signature:( GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha )
glColor4xOES	gfx/glsym/glsym_gl.h	1929;"	d
glColor4xvOES	gfx/glsym/glsym_gl.h	1931;"	d
glColorFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glColorFragmentOp1ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glColorFragmentOp2ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glColorFragmentOp3ATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glColorMask	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glColorMask( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha );$/;"	p	signature:( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha )
glColorMaskIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorMaski	gfx/glsym/glsym_gl.h	1282;"	d
glColorMaski	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorP3ui	gfx/glsym/glsym_gl.h	1669;"	d
glColorP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP3uiv	gfx/glsym/glsym_gl.h	1670;"	d
glColorP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorP4ui	gfx/glsym/glsym_gl.h	1671;"	d
glColorP4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorP4ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP4uiv	gfx/glsym/glsym_gl.h	1672;"	d
glColorP4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorP4uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorPointer	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glColorPointer( GLint size, GLenum type, GLsizei stride, const GLvoid *pointer );$/;"	p	signature:( GLint size, GLenum type, GLsizei stride, const GLvoid *pointer )
glColorPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glColorPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glColorPointervINTEL	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glColorSubTable	gfx/glsym/glsym_gl.h	1048;"	d
glColorSubTable	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
glColorSubTableEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
glColorTable	gfx/glsym/glsym_gl.h	1041;"	d
glColorTable	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glColorTableEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glColorTableParameterfv	gfx/glsym/glsym_gl.h	1042;"	d
glColorTableParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameterfvSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameteriv	gfx/glsym/glsym_gl.h	1043;"	d
glColorTableParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableParameterivSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glCombinerInputNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glCombinerOutputNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)
glCombinerParameterfNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glCombinerParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glCombinerParameteriNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glCombinerParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glCombinerStageParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, const GLfloat *params)
glCompileShader	gfx/glsym/glsym_gl.h	1190;"	d
glCompileShader	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glCompileShaderARB	gfx/glsym/glsym_gl.h	1518;"	d
glCompileShaderARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB shaderObj);$/;"	p	signature:(GLhandleARB shaderObj)
glCompileShaderIncludeARB	gfx/glsym/glsym_gl.h	1622;"	d
glCompileShaderIncludeARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar* *path, const GLint *length)
glCompressedMultiTexImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTexImage1D	gfx/glsym/glsym_gl.h	1077;"	d
glCompressedTexImage1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage1DARB	gfx/glsym/glsym_gl.h	1394;"	d
glCompressedTexImage1DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage2D	gfx/glsym/glsym_gl.h	1076;"	d
glCompressedTexImage2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage2DARB	gfx/glsym/glsym_gl.h	1393;"	d
glCompressedTexImage2DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3D	gfx/glsym/glsym_gl.h	1075;"	d
glCompressedTexImage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3DARB	gfx/glsym/glsym_gl.h	1392;"	d
glCompressedTexImage3DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3DOES	gfx/glsym/glsym_es2.h	63;"	d
glCompressedTexSubImage1D	gfx/glsym/glsym_gl.h	1080;"	d
glCompressedTexSubImage1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage1DARB	gfx/glsym/glsym_gl.h	1397;"	d
glCompressedTexSubImage1DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage2D	gfx/glsym/glsym_gl.h	1079;"	d
glCompressedTexSubImage2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage2DARB	gfx/glsym/glsym_gl.h	1396;"	d
glCompressedTexSubImage2DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3D	gfx/glsym/glsym_gl.h	1078;"	d
glCompressedTexSubImage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3DARB	gfx/glsym/glsym_gl.h	1395;"	d
glCompressedTexSubImage3DARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3DOES	gfx/glsym/glsym_es2.h	64;"	d
glCompressedTextureImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits)
glConvolutionFilter1D	gfx/glsym/glsym_gl.h	1050;"	d
glConvolutionFilter1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter2D	gfx/glsym/glsym_gl.h	1051;"	d
glConvolutionFilter2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
glConvolutionParameterf	gfx/glsym/glsym_gl.h	1052;"	d
glConvolutionParameterf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfv	gfx/glsym/glsym_gl.h	1053;"	d
glConvolutionParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameteri	gfx/glsym/glsym_gl.h	1054;"	d
glConvolutionParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriv	gfx/glsym/glsym_gl.h	1055;"	d
glConvolutionParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glConvolutionParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glConvolutionParameterxOES	gfx/glsym/glsym_gl.h	1932;"	d
glConvolutionParameterxvOES	gfx/glsym/glsym_gl.h	1933;"	d
glCopyBufferSubData	gfx/glsym/glsym_gl.h	1598;"	d
glCopyBufferSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glCopyColorSubTable	gfx/glsym/glsym_gl.h	1049;"	d
glCopyColorSubTable	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorSubTableEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorTable	gfx/glsym/glsym_gl.h	1044;"	d
glCopyColorTable	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyColorTableSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1D	gfx/glsym/glsym_gl.h	1056;"	d
glCopyConvolutionFilter1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter2D	gfx/glsym/glsym_gl.h	1057;"	d
glCopyConvolutionFilter2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyConvolutionFilter2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyImageSubData	gfx/glsym/glsym_gl.h	1863;"	d
glCopyImageSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	p	signature:(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)
glCopyImageSubDataNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
glCopyMultiTexImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyMultiTexImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyMultiTexSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyMultiTexSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyMultiTexSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyPathNV (GLuint resultPath, GLuint srcPath);$/;"	p	signature:(GLuint resultPath, GLuint srcPath)
glCopyTexImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTexImage2D	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glCopyTexImage2D( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border );$/;"	p	signature:( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border )
glCopyTexImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTexSubImage2D	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glCopyTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height );$/;"	p	signature:( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height )
glCopyTexSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3D	gfx/glsym/glsym_gl.h	1040;"	d
glCopyTexSubImage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3DOES	gfx/glsym/glsym_es2.h	62;"	d
glCopyTextureImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTextureImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTextureSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTextureSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCoverFillPathInstancedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glCoverFillPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCoverFillPathNV (GLuint path, GLenum coverMode);$/;"	p	signature:(GLuint path, GLenum coverMode)
glCoverStrokePathInstancedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glCoverStrokePathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCoverStrokePathNV (GLuint path, GLenum coverMode);$/;"	p	signature:(GLuint path, GLenum coverMode)
glCreateProgram	gfx/glsym/glsym_gl.h	1191;"	d
glCreateProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p	signature:(void)
glCreateProgramObjectARB	gfx/glsym/glsym_gl.h	1519;"	d
glCreateProgramObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	p	signature:(void)
glCreateShader	gfx/glsym/glsym_gl.h	1192;"	d
glCreateShader	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	p	signature:(GLenum type)
glCreateShaderObjectARB	gfx/glsym/glsym_gl.h	1516;"	d
glCreateShaderObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum shaderType);$/;"	p	signature:(GLenum shaderType)
glCreateShaderProgramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	p	signature:(GLenum type, const GLchar *string)
glCreateShaderProgramv	gfx/glsym/glsym_gl.h	1734;"	d
glCreateShaderProgramv	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar* const *strings);$/;"	p	signature:(GLenum type, GLsizei count, const GLchar* const *strings)
glCreateSyncFromCLeventARB	gfx/glsym/glsym_gl.h	1812;"	d
glCreateSyncFromCLeventARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	p	signature:(struct _cl_context * context, struct _cl_event * event, GLbitfield flags)
glCullFace	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glCullFace( GLenum mode );$/;"	p	signature:( GLenum mode )
glCullParameterdvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum pname, GLdouble *params)
glCullParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glCurrentPaletteMatrixARB	gfx/glsym/glsym_gl.h	1411;"	d
glCurrentPaletteMatrixARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint index);$/;"	p	signature:(GLint index)
glDebugMessageCallback	gfx/glsym/glsym_es2.h	72;"	d
glDebugMessageCallback	gfx/glsym/glsym_gl.h	1851;"	d
glDebugMessageCallback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	p	signature:(GLDEBUGPROC callback, const void *userParam)
glDebugMessageCallbackAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, GLvoid *userParam);$/;"	p	signature:(GLDEBUGPROCAMD callback, GLvoid *userParam)
glDebugMessageCallbackARB	gfx/glsym/glsym_gl.h	1815;"	d
glDebugMessageCallbackARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	p	signature:(GLDEBUGPROCARB callback, const GLvoid *userParam)
glDebugMessageControl	gfx/glsym/glsym_es2.h	70;"	d
glDebugMessageControl	gfx/glsym/glsym_gl.h	1849;"	d
glDebugMessageControl	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageControlARB	gfx/glsym/glsym_gl.h	1813;"	d
glDebugMessageControlARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageEnableAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageInsert	gfx/glsym/glsym_es2.h	71;"	d
glDebugMessageInsert	gfx/glsym/glsym_gl.h	1850;"	d
glDebugMessageInsert	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDebugMessageInsertAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf)
glDebugMessageInsertARB	gfx/glsym/glsym_gl.h	1814;"	d
glDebugMessageInsertARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDeformSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glDeformationMap3dSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	p	signature:(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points)
glDeformationMap3fSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points)
glDeleteAsyncMarkersSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);$/;"	p	signature:(GLuint marker, GLsizei range)
glDeleteBuffers	gfx/glsym/glsym_gl.h	1173;"	d
glDeleteBuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteBuffers	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glDeleteBuffers( GLsizei n, const GLuint *buffers );$/;"	p	signature:( GLsizei n, const GLuint *buffers )
glDeleteBuffers	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glDeleteBuffers( GLsizei n, const GLuint *buffers )$/;"	f	signature:( GLsizei n, const GLuint *buffers )
glDeleteBuffersARB	gfx/glsym/glsym_gl.h	1495;"	d
glDeleteBuffersARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteFencesAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFencesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFencesNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glDeleteFencesNV( GLsizei n, const GLuint *fences );$/;"	p	signature:( GLsizei n, const GLuint *fences )
glDeleteFragmentShaderATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glDeleteFramebuffers	gfx/gl.c	173;"	d	file:
glDeleteFramebuffers	gfx/glsym/glsym_gl.h	1567;"	d
glDeleteFramebuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteFramebuffersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteFramebuffersOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glDeleteFramebuffersOES( GLsizei, const GLuint * );$/;"	p	signature:( GLsizei, const GLuint * )
glDeleteFramebuffersOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glDeleteFramebuffersOES( GLsizei n, const GLuint *framebuffers )$/;"	f	signature:( GLsizei n, const GLuint *framebuffers )
glDeleteNamedStringARB	gfx/glsym/glsym_gl.h	1621;"	d
glDeleteNamedStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glDeleteNamesAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, const GLuint *names)
glDeleteObjectARB	gfx/glsym/glsym_gl.h	1513;"	d
glDeleteObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB obj);$/;"	p	signature:(GLhandleARB obj)
glDeleteOcclusionQueriesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeletePathsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);$/;"	p	signature:(GLuint path, GLsizei range)
glDeletePerfMonitorsAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glDeleteProgram	gfx/glsym/glsym_gl.h	1193;"	d
glDeleteProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	p	signature:(GLuint program)
glDeleteProgramPipelines	gfx/glsym/glsym_gl.h	1736;"	d
glDeleteProgramPipelines	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	p	signature:(GLsizei n, const GLuint *pipelines)
glDeleteProgramsARB	gfx/glsym/glsym_gl.h	1473;"	d
glDeleteProgramsARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteProgramsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteQueries	gfx/glsym/glsym_gl.h	1165;"	d
glDeleteQueries	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteQueriesARB	gfx/glsym/glsym_gl.h	1506;"	d
glDeleteQueriesARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteRenderbuffers	gfx/gl.c	178;"	d	file:
glDeleteRenderbuffers	gfx/glsym/glsym_gl.h	1561;"	d
glDeleteRenderbuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteRenderbuffersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteRenderbuffersOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glDeleteRenderbuffersOES( GLsizei, const GLuint * );$/;"	p	signature:( GLsizei, const GLuint * )
glDeleteSamplers	gfx/glsym/glsym_gl.h	1629;"	d
glDeleteSamplers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	p	signature:(GLsizei count, const GLuint *samplers)
glDeleteShader	gfx/glsym/glsym_gl.h	1194;"	d
glDeleteShader	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glDeleteSync	gfx/glsym/glsym_gl.h	1606;"	d
glDeleteSync	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glDeleteTextures	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDeleteTextures( GLsizei n, const GLuint *textures );$/;"	p	signature:( GLsizei n, const GLuint *textures )
glDeleteTextures	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glDeleteTextures( GLsizei n, const GLuint *textures )$/;"	f	signature:( GLsizei n, const GLuint *textures )
glDeleteTexturesEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei n, const GLuint *textures);$/;"	p	signature:(GLsizei n, const GLuint *textures)
glDeleteTransformFeedbacks	gfx/glsym/glsym_gl.h	1714;"	d
glDeleteTransformFeedbacks	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteTransformFeedbacksNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacksNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteVertexArrays	gfx/glsym/glsym_gl.h	1588;"	d
glDeleteVertexArrays	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexArraysAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexArraysOES	gfx/glsym/glsym_es2.h	67;"	d
glDeleteVertexShaderEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDepthBoundsEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);$/;"	p	signature:(GLclampd zmin, GLclampd zmax)
glDepthBoundsdNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	p	signature:(GLdouble zmin, GLdouble zmax)
glDepthFunc	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDepthFunc( GLenum func );$/;"	p	signature:( GLenum func )
glDepthMask	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDepthMask( GLboolean flag );$/;"	p	signature:( GLboolean flag )
glDepthRangeArrayv	gfx/glsym/glsym_gl.h	1808;"	d
glDepthRangeArrayv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLdouble *v)
glDepthRangeIndexed	gfx/glsym/glsym_gl.h	1809;"	d
glDepthRangeIndexed	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);$/;"	p	signature:(GLuint index, GLdouble n, GLdouble f)
glDepthRangedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLdouble zNear, GLdouble zFar)
glDepthRangef	gfx/glsym/glsym_gl.h	1727;"	d
glDepthRangef	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);$/;"	p	signature:(GLfloat n, GLfloat f)
glDepthRangef	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDepthRangef( GLclampf zNear, GLclampf zFar );$/;"	p	signature:( GLclampf zNear, GLclampf zFar )
glDepthRangefOES	gfx/glsym/glsym_gl.h	2024;"	d
glDepthRangex	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDepthRangex( GLclampx zNear, GLclampx zFar );$/;"	p	signature:( GLclampx zNear, GLclampx zFar )
glDepthRangexOES	gfx/glsym/glsym_gl.h	1934;"	d
glDetachObjectARB	gfx/glsym/glsym_gl.h	1515;"	d
glDetachObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB attachedObj)
glDetachShader	gfx/glsym/glsym_gl.h	1195;"	d
glDetachShader	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glDetailTexFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glDisable	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDisable( GLenum cap );$/;"	p	signature:( GLenum cap )
glDisable	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glDisable( GLenum cap )$/;"	f	signature:( GLenum cap )
glDisableClientState	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDisableClientState( GLenum array );$/;"	p	signature:( GLenum array )
glDisableClientState	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glDisableClientState( GLenum array )$/;"	f	signature:( GLenum array )
glDisableClientStateIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glDisableIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDisableVariantClientStateEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDisableVertexAttribAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glDisableVertexAttribArray	gfx/glsym/glsym_gl.h	1196;"	d
glDisableVertexAttribArray	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glDisableVertexAttribArrayARB	gfx/glsym/glsym_gl.h	1470;"	d
glDisableVertexAttribArrayARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glDisablei	gfx/glsym/glsym_gl.h	1286;"	d
glDisablei	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDispatchCompute	gfx/glsym/glsym_gl.h	1861;"	d
glDispatchCompute	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	p	signature:(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)
glDispatchComputeIndirect	gfx/glsym/glsym_gl.h	1862;"	d
glDispatchComputeIndirect	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);$/;"	p	signature:(GLintptr indirect)
glDrawArrays	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDrawArrays( GLenum mode, GLint first, GLsizei count );$/;"	p	signature:( GLenum mode, GLint first, GLsizei count )
glDrawArrays	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count)$/;"	f	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArraysEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArraysIndirect	gfx/glsym/glsym_gl.h	1683;"	d
glDrawArraysIndirect	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const GLvoid *indirect);$/;"	p	signature:(GLenum mode, const GLvoid *indirect)
glDrawArraysInstanced	gfx/glsym/glsym_gl.h	1340;"	d
glDrawArraysInstanced	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei instancecount)
glDrawArraysInstancedARB	gfx/glsym/glsym_gl.h	1557;"	d
glDrawArraysInstancedARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei primcount)
glDrawArraysInstancedBaseInstance	gfx/glsym/glsym_gl.h	1837;"	d
glDrawArraysInstancedBaseInstance	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance)
glDrawArraysInstancedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
glDrawBuffers	gfx/glsym/glsym_gl.h	1184;"	d
glDrawBuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersARB	gfx/glsym/glsym_gl.h	1555;"	d
glDrawBuffersARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawElementArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawElementArrayATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum mode, GLsizei count);$/;"	p	signature:(GLenum mode, GLsizei count)
glDrawElements	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glDrawElements( GLenum mode, GLsizei count, GLenum type, const GLvoid *indices );$/;"	p	signature:( GLenum mode, GLsizei count, GLenum type, const GLvoid *indices )
glDrawElementsBaseVertex	gfx/glsym/glsym_gl.h	1599;"	d
glDrawElementsBaseVertex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex)
glDrawElementsIndirect	gfx/glsym/glsym_gl.h	1684;"	d
glDrawElementsIndirect	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	p	signature:(GLenum mode, GLenum type, const GLvoid *indirect)
glDrawElementsInstanced	gfx/glsym/glsym_gl.h	1341;"	d
glDrawElementsInstanced	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount)
glDrawElementsInstancedARB	gfx/glsym/glsym_gl.h	1558;"	d
glDrawElementsInstancedARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
glDrawElementsInstancedBaseInstance	gfx/glsym/glsym_gl.h	1838;"	d
glDrawElementsInstancedBaseInstance	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance)
glDrawElementsInstancedBaseVertex	gfx/glsym/glsym_gl.h	1601;"	d
glDrawElementsInstancedBaseVertex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex)
glDrawElementsInstancedBaseVertexBaseInstance	gfx/glsym/glsym_gl.h	1839;"	d
glDrawElementsInstancedBaseVertexBaseInstance	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)
glDrawElementsInstancedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
glDrawMeshArraysSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei width)
glDrawRangeElementArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)
glDrawRangeElementArrayATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count)
glDrawRangeElements	gfx/glsym/glsym_gl.h	1037;"	d
glDrawRangeElements	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
glDrawRangeElementsBaseVertex	gfx/glsym/glsym_gl.h	1600;"	d
glDrawRangeElementsBaseVertex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex)
glDrawRangeElementsEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
glDrawTransformFeedback	gfx/glsym/glsym_gl.h	1719;"	d
glDrawTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackInstanced	gfx/glsym/glsym_gl.h	1840;"	d
glDrawTransformFeedbackInstanced	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLuint id, GLsizei instancecount)
glDrawTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackNV (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackStream	gfx/glsym/glsym_gl.h	1720;"	d
glDrawTransformFeedbackStream	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	p	signature:(GLenum mode, GLuint id, GLuint stream)
glDrawTransformFeedbackStreamInstanced	gfx/glsym/glsym_gl.h	1841;"	d
glDrawTransformFeedbackStreamInstanced	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount)
glEGLImageTargetRenderbufferStorageOES	gfx/glsym/glsym_es2.h	54;"	d
glEGLImageTargetTexture2DOES	gfx/glsym/glsym_es2.h	53;"	d
glEdgeFlagFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	p	signature:(GLsizei stride)
glEdgeFlagPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	p	signature:(GLsizei stride, GLsizei count, const GLboolean *pointer)
glEdgeFlagPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	p	signature:(GLint stride, const GLboolean* *pointer, GLint ptrstride)
glElementPointerAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum type, const GLvoid *pointer);$/;"	p	signature:(GLenum type, const GLvoid *pointer)
glElementPointerATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum type, const GLvoid *pointer);$/;"	p	signature:(GLenum type, const GLvoid *pointer)
glEnable	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glEnable( GLenum cap );$/;"	p	signature:( GLenum cap )
glEnable	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glEnable( GLenum cap )$/;"	f	signature:( GLenum cap )
glEnableClientState	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glEnableClientState( GLenum array );$/;"	p	signature:( GLenum array )
glEnableClientState	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glEnableClientState( GLenum array )$/;"	f	signature:( GLenum array )
glEnableClientStateIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glEnableIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEnableVariantClientStateEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glEnableVertexAttribAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glEnableVertexAttribArray	gfx/glsym/glsym_gl.h	1197;"	d
glEnableVertexAttribArray	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glEnableVertexAttribArrayARB	gfx/glsym/glsym_gl.h	1469;"	d
glEnableVertexAttribArrayARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glEnablei	gfx/glsym/glsym_gl.h	1285;"	d
glEnablei	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndConditionalRender	gfx/glsym/glsym_gl.h	1296;"	d
glEndConditionalRender	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	p	signature:(void)
glEndConditionalRenderNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	p	signature:(void)
glEndFragmentShaderATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	p	signature:(void)
glEndOcclusionQueryNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	p	signature:(void)
glEndPerfMonitorAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glEndQuery	gfx/glsym/glsym_gl.h	1168;"	d
glEndQuery	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryARB	gfx/glsym/glsym_gl.h	1509;"	d
glEndQueryARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryIndexed	gfx/glsym/glsym_gl.h	1722;"	d
glEndQueryIndexed	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndTransformFeedback	gfx/glsym/glsym_gl.h	1289;"	d
glEndTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	p	signature:(void)
glEndTransformFeedbackEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackEXT (void);$/;"	p	signature:(void)
glEndTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackNV (void);$/;"	p	signature:(void)
glEndVertexShaderEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	p	signature:(void)
glEndVideoCaptureNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEndVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glEvalCoord1xOES	gfx/glsym/glsym_gl.h	1935;"	d
glEvalCoord1xvOES	gfx/glsym/glsym_gl.h	1937;"	d
glEvalCoord2xOES	gfx/glsym/glsym_gl.h	1936;"	d
glEvalCoord2xvOES	gfx/glsym/glsym_gl.h	1938;"	d
glEvalMapsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glExecuteProgramNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint id, const GLfloat *params)
glExtractComponentEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glFeedbackBufferxOES	gfx/glsym/glsym_gl.h	1939;"	d
glFenceSync	gfx/glsym/glsym_gl.h	1604;"	d
glFenceSync	msvc/msvc-2010/GL/glext.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	p	signature:(GLenum condition, GLbitfield flags)
glFinalCombinerInputNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glFinish	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glFinish( void );$/;"	p	signature:( void )
glFinishAsyncSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glFinishFenceAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishFenceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishFenceNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glFinishFenceNV( GLuint fence );$/;"	p	signature:( GLuint fence )
glFinishObjectAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum object, GLint name);$/;"	p	signature:(GLenum object, GLint name)
glFinishTextureSUNX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	p	signature:(void)
glFlush	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glFlush( void );$/;"	p	signature:( void )
glFlushMappedBufferRange	gfx/glsym/glsym_gl.h	1585;"	d
glFlushMappedBufferRange	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length)
glFlushMappedBufferRangeAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size)
glFlushMappedNamedBufferRangeEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glFlushPixelDataRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum target);$/;"	p	signature:(GLenum target)
glFlushRasterSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	p	signature:(void)
glFlushVertexArrayRangeAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer);$/;"	p	signature:(GLsizei length, GLvoid *pointer)
glFlushVertexArrayRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	p	signature:(void)
glFogCoordFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glFogCoordPointer	gfx/glsym/glsym_gl.h	1130;"	d
glFogCoordPointer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glFogCoordPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glFogCoordPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glFogCoordd	gfx/glsym/glsym_gl.h	1128;"	d
glFogCoordd	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddv	gfx/glsym/glsym_gl.h	1129;"	d
glFogCoorddv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoorddvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoordf	gfx/glsym/glsym_gl.h	1126;"	d
glFogCoordf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfv	gfx/glsym/glsym_gl.h	1127;"	d
glFogCoordfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordhNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);$/;"	p	signature:(GLhalfNV fog)
glFogCoordhvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);$/;"	p	signature:(const GLhalfNV *fog)
glFogFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei n, const GLfloat *points);$/;"	p	signature:(GLsizei n, const GLfloat *points)
glFogxOES	gfx/glsym/glsym_gl.h	1940;"	d
glFogxvOES	gfx/glsym/glsym_gl.h	1941;"	d
glFragmentColorMaterialSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glFragmentLightModelfSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glFragmentLightModelfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glFragmentLightModeliSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glFragmentLightModelivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glFragmentLightfSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat param)
glFragmentLightfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)
glFragmentLightiSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);$/;"	p	signature:(GLenum light, GLenum pname, GLint param)
glFragmentLightivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLint *params)
glFragmentMaterialfSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat param)
glFragmentMaterialfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)
glFragmentMaterialiSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);$/;"	p	signature:(GLenum face, GLenum pname, GLint param)
glFragmentMaterialivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLint *params)
glFrameTerminatorGREMEDY	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFrameTerminatorGREMEDY (void);$/;"	p	signature:(void)
glFrameZoomSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint factor);$/;"	p	signature:(GLint factor)
glFramebufferDrawBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferDrawBuffersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLuint framebuffer, GLsizei n, const GLenum *bufs)
glFramebufferParameteri	gfx/glsym/glsym_gl.h	1871;"	d
glFramebufferParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glFramebufferReadBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferRenderbuffer	gfx/gl.c	176;"	d	file:
glFramebufferRenderbuffer	gfx/glsym/glsym_gl.h	1573;"	d
glFramebufferRenderbuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferRenderbufferOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glFramebufferRenderbufferOES( GLenum, GLenum, GLenum, GLuint );$/;"	p	signature:( GLenum, GLenum, GLenum, GLuint )
glFramebufferTexture	gfx/glsym/glsym_gl.h	1346;"	d
glFramebufferTexture	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTexture1D	gfx/glsym/glsym_gl.h	1570;"	d
glFramebufferTexture1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2D	gfx/gl.c	171;"	d	file:
glFramebufferTexture2D	gfx/glsym/glsym_gl.h	1571;"	d
glFramebufferTexture2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2DOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glFramebufferTexture2DOES( GLenum, GLenum, GLenum, GLuint, GLint );$/;"	p	signature:( GLenum, GLenum, GLenum, GLuint, GLint )
glFramebufferTexture2DOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glFramebufferTexture2DOES( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level )$/;"	f	signature:( GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level )
glFramebufferTexture3D	gfx/glsym/glsym_gl.h	1572;"	d
glFramebufferTexture3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTexture3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTexture3DOES	gfx/glsym/glsym_es2.h	65;"	d
glFramebufferTextureARB	gfx/glsym/glsym_gl.h	1580;"	d
glFramebufferTextureARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureFaceARB	gfx/glsym/glsym_gl.h	1582;"	d
glFramebufferTextureFaceARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureFaceEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureLayer	gfx/glsym/glsym_gl.h	1578;"	d
glFramebufferTextureLayer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerARB	gfx/glsym/glsym_gl.h	1581;"	d
glFramebufferTextureLayerARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFreeObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glFrustumfOES	gfx/glsym/glsym_gl.h	2025;"	d
glFrustumxOES	gfx/glsym/glsym_gl.h	1942;"	d
glGenAsyncMarkersSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenBuffers	gfx/glsym/glsym_gl.h	1174;"	d
glGenBuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenBuffers	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGenBuffers( GLsizei n, GLuint *buffers );$/;"	p	signature:( GLsizei n, GLuint *buffers )
glGenBuffers	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glGenBuffers( GLsizei n, GLuint *buffers )$/;"	f	signature:( GLsizei n, GLuint *buffers )
glGenBuffersARB	gfx/glsym/glsym_gl.h	1496;"	d
glGenBuffersARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenFencesAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFencesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFencesNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGenFencesNV( GLsizei n, GLuint *fences );$/;"	p	signature:( GLsizei n, GLuint *fences )
glGenFragmentShadersATI	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint range);$/;"	p	signature:(GLuint range)
glGenFramebuffers	gfx/gl.c	169;"	d	file:
glGenFramebuffers	gfx/glsym/glsym_gl.h	1568;"	d
glGenFramebuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenFramebuffersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenFramebuffersOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGenFramebuffersOES( GLsizei, GLuint * );$/;"	p	signature:( GLsizei, GLuint * )
glGenFramebuffersOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glGenFramebuffersOES( GLsizei n, GLuint *framebuffers )$/;"	f	signature:( GLsizei n, GLuint *framebuffers )
glGenNamesAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenNamesAMD (GLenum identifier, GLuint num, GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, GLuint *names)
glGenOcclusionQueriesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenPathsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenPerfMonitorsAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glGenProgramPipelines	gfx/glsym/glsym_gl.h	1737;"	d
glGenProgramPipelines	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p	signature:(GLsizei n, GLuint *pipelines)
glGenProgramsARB	gfx/glsym/glsym_gl.h	1474;"	d
glGenProgramsARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenProgramsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenQueries	gfx/glsym/glsym_gl.h	1164;"	d
glGenQueries	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenQueriesARB	gfx/glsym/glsym_gl.h	1505;"	d
glGenQueriesARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenRenderbuffers	gfx/gl.c	174;"	d	file:
glGenRenderbuffers	gfx/glsym/glsym_gl.h	1562;"	d
glGenRenderbuffers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenRenderbuffersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenRenderbuffersOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGenRenderbuffersOES( GLsizei, GLuint * );$/;"	p	signature:( GLsizei, GLuint * )
glGenSamplers	gfx/glsym/glsym_gl.h	1628;"	d
glGenSamplers	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	p	signature:(GLsizei count, GLuint *samplers)
glGenSymbolsEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	p	signature:(GLenum datatype, GLenum storagetype, GLenum range, GLuint components)
glGenTextures	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glGenTextures( GLsizei n, GLuint *textures );$/;"	p	signature:( GLsizei n, GLuint *textures )
glGenTextures	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glGenTextures( GLsizei n, GLuint *textures )$/;"	f	signature:( GLsizei n, GLuint *textures )
glGenTexturesEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei n, GLuint *textures);$/;"	p	signature:(GLsizei n, GLuint *textures)
glGenTransformFeedbacks	gfx/glsym/glsym_gl.h	1715;"	d
glGenTransformFeedbacks	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenTransformFeedbacksNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacksNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenVertexArrays	gfx/glsym/glsym_gl.h	1589;"	d
glGenVertexArrays	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexArraysAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexArraysOES	gfx/glsym/glsym_es2.h	68;"	d
glGenVertexShadersEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint range);$/;"	p	signature:(GLuint range)
glGenerateMipmap	gfx/glsym/glsym_gl.h	1575;"	d
glGenerateMipmap	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMipmapEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMipmapOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGenerateMipmapOES( GLenum );$/;"	p	signature:( GLenum )
glGenerateMultiTexMipmapEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	p	signature:(GLenum texunit, GLenum target)
glGenerateTextureMipmapEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	p	signature:(GLuint texture, GLenum target)
glGetActiveAtomicCounterBufferiv	gfx/glsym/glsym_gl.h	1843;"	d
glGetActiveAtomicCounterBufferiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params)
glGetActiveAttrib	gfx/glsym/glsym_gl.h	1198;"	d
glGetActiveAttrib	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveAttribARB	gfx/glsym/glsym_gl.h	1553;"	d
glGetActiveAttribARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveSubroutineName	gfx/glsym/glsym_gl.h	1707;"	d
glGetActiveSubroutineName	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformName	gfx/glsym/glsym_gl.h	1706;"	d
glGetActiveSubroutineUniformName	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformiv	gfx/glsym/glsym_gl.h	1705;"	d
glGetActiveSubroutineUniformiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values)
glGetActiveUniform	gfx/glsym/glsym_gl.h	1199;"	d
glGetActiveUniform	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveUniformARB	gfx/glsym/glsym_gl.h	1548;"	d
glGetActiveUniformARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveUniformBlockName	gfx/glsym/glsym_gl.h	1596;"	d
glGetActiveUniformBlockName	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)
glGetActiveUniformBlockiv	gfx/glsym/glsym_gl.h	1595;"	d
glGetActiveUniformBlockiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
glGetActiveUniformName	gfx/glsym/glsym_gl.h	1593;"	d
glGetActiveUniformName	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	p	signature:(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName)
glGetActiveUniformsiv	gfx/glsym/glsym_gl.h	1592;"	d
glGetActiveUniformsiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)
glGetActiveVaryingNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetArrayObjectfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum array, GLenum pname, GLfloat *params)
glGetArrayObjectivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params);$/;"	p	signature:(GLenum array, GLenum pname, GLint *params)
glGetAttachedObjectsARB	gfx/glsym/glsym_gl.h	1546;"	d
glGetAttachedObjectsARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	p	signature:(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)
glGetAttachedShaders	gfx/glsym/glsym_gl.h	1200;"	d
glGetAttachedShaders	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	p	signature:(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj)
glGetAttribLocation	gfx/glsym/glsym_gl.h	1201;"	d
glGetAttribLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetAttribLocationARB	gfx/glsym/glsym_gl.h	1554;"	d
glGetAttribLocationARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetBooleanIndexedvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBooleani_v	gfx/glsym/glsym_gl.h	1283;"	d
glGetBooleani_v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBooleanv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetBooleanv( GLenum pname, GLboolean* params );$/;"	p	signature:( GLenum pname, GLboolean* params )
glGetBufferParameteri64v	gfx/glsym/glsym_gl.h	1345;"	d
glGetBufferParameteri64v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint64 *params)
glGetBufferParameteriv	gfx/glsym/glsym_gl.h	1181;"	d
glGetBufferParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameteriv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetBufferParameteriv( GLenum target, GLenum pname, GLint *params );$/;"	p	signature:( GLenum target, GLenum pname, GLint *params )
glGetBufferParameterivARB	gfx/glsym/glsym_gl.h	1503;"	d
glGetBufferParameterivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameterui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint64EXT *params)
glGetBufferPointerv	gfx/glsym/glsym_gl.h	1182;"	d
glGetBufferPointerv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetBufferPointervARB	gfx/glsym/glsym_gl.h	1504;"	d
glGetBufferPointervARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetBufferPointervOES	gfx/glsym/glsym_es2.h	59;"	d
glGetBufferSubData	gfx/glsym/glsym_gl.h	1178;"	d
glGetBufferSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
glGetBufferSubDataARB	gfx/glsym/glsym_gl.h	1500;"	d
glGetBufferSubDataARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data)
glGetClipPlanefOES	gfx/glsym/glsym_gl.h	2029;"	d
glGetClipPlanexOES	gfx/glsym/glsym_gl.h	1943;"	d
glGetColorTable	gfx/glsym/glsym_gl.h	1045;"	d
glGetColorTable	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *table)
glGetColorTableEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *data)
glGetColorTableParameterfv	gfx/glsym/glsym_gl.h	1046;"	d
glGetColorTableParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameteriv	gfx/glsym/glsym_gl.h	1047;"	d
glGetColorTableParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableSGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *table)
glGetCombinerInputParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params)
glGetCombinerInputParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params)
glGetCombinerOutputParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLfloat *params)
glGetCombinerOutputParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLint *params)
glGetCombinerStageParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, GLfloat *params)
glGetCompressedMultiTexImageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, GLvoid *img);$/;"	p	signature:(GLenum texunit, GLenum target, GLint lod, GLvoid *img)
glGetCompressedTexImage	gfx/glsym/glsym_gl.h	1081;"	d
glGetCompressedTexImage	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLvoid *img)
glGetCompressedTexImageARB	gfx/glsym/glsym_gl.h	1398;"	d
glGetCompressedTexImageARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum target, GLint level, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLvoid *img)
glGetCompressedTextureImageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, GLvoid *img);$/;"	p	signature:(GLuint texture, GLenum target, GLint lod, GLvoid *img)
glGetConvolutionFilter	gfx/glsym/glsym_gl.h	1058;"	d
glGetConvolutionFilter	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *image)
glGetConvolutionFilterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *image)
glGetConvolutionParameterfv	gfx/glsym/glsym_gl.h	1059;"	d
glGetConvolutionParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameteriv	gfx/glsym/glsym_gl.h	1060;"	d
glGetConvolutionParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetConvolutionParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetConvolutionParameterxvOES	gfx/glsym/glsym_gl.h	1944;"	d
glGetDebugMessageLog	gfx/glsym/glsym_es2.h	73;"	d
glGetDebugMessageLog	gfx/glsym/glsym_gl.h	1852;"	d
glGetDebugMessageLog	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDebugMessageLogAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message)
glGetDebugMessageLogARB	gfx/glsym/glsym_gl.h	1816;"	d
glGetDebugMessageLogARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDetailTexFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetDoubleIndexedvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetDoublei_v	gfx/glsym/glsym_gl.h	1811;"	d
glGetDoublei_v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetError	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI GLenum APIENTRY glGetError( void );$/;"	p	signature:( void )
glGetError	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLenum APIENTRY glGetError(void)$/;"	f	signature:(void)
glGetFenceivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	p	signature:(GLuint fence, GLenum pname, GLint *params)
glGetFenceivNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetFenceivNV( GLuint fence, GLenum pname, GLint *params );$/;"	p	signature:( GLuint fence, GLenum pname, GLint *params )
glGetFinalCombinerInputParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLfloat *params)
glGetFinalCombinerInputParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLint *params)
glGetFixedvOES	gfx/glsym/glsym_gl.h	1945;"	d
glGetFloatIndexedvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloati_v	gfx/glsym/glsym_gl.h	1810;"	d
glGetFloati_v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloatv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetFloatv( GLenum pname, GLfloat* params );$/;"	p	signature:( GLenum pname, GLfloat* params )
glGetFogFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *points);$/;"	p	signature:(GLfloat *points)
glGetFragDataIndex	gfx/glsym/glsym_gl.h	1627;"	d
glGetFragDataIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocation	gfx/glsym/glsym_gl.h	1322;"	d
glGetFragDataLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocationEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocationEXT (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragmentLightfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetFragmentLightivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, GLint *params)
glGetFragmentMaterialfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat *params)
glGetFragmentMaterialivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameteriv	gfx/glsym/glsym_gl.h	1574;"	d
glGetFramebufferAttachmentParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameterivOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetFramebufferAttachmentParameterivOES( GLenum, GLenum, GLenum, GLint * );$/;"	p	signature:( GLenum, GLenum, GLenum, GLint * )
glGetFramebufferParameteriv	gfx/glsym/glsym_gl.h	1872;"	d
glGetFramebufferParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetFramebufferParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *params)
glGetGraphicsResetStatusARB	gfx/glsym/glsym_gl.h	1817;"	d
glGetGraphicsResetStatusARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	p	signature:(void)
glGetHandleARB	gfx/glsym/glsym_gl.h	1514;"	d
glGetHandleARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum pname);$/;"	p	signature:(GLenum pname)
glGetHistogram	gfx/glsym/glsym_gl.h	1063;"	d
glGetHistogram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetHistogramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetHistogramParameterfv	gfx/glsym/glsym_gl.h	1064;"	d
glGetHistogramParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameteriv	gfx/glsym/glsym_gl.h	1065;"	d
glGetHistogramParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetHistogramParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetHistogramParameterxvOES	gfx/glsym/glsym_gl.h	1946;"	d
glGetImageHandleNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	p	signature:(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)
glGetImageTransformParameterfvHP	gfx/glsym/glsym_gl.h	1897;"	d
glGetImageTransformParameterfvHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetImageTransformParameterivHP	gfx/glsym/glsym_gl.h	1896;"	d
glGetImageTransformParameterivHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetInfoLogARB	gfx/glsym/glsym_gl.h	1545;"	d
glGetInfoLogARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)
glGetInstrumentsSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	p	signature:(void)
glGetInteger64i_v	gfx/glsym/glsym_gl.h	1344;"	d
glGetInteger64i_v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	p	signature:(GLenum target, GLuint index, GLint64 *data)
glGetInteger64v	gfx/glsym/glsym_gl.h	1609;"	d
glGetInteger64v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum pname, GLint64 *params)
glGetIntegerIndexedvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegeri_v	gfx/glsym/glsym_gl.h	1284;"	d
glGetIntegeri_v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegerui64i_vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint index, GLuint64EXT *result)
glGetIntegerui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint64EXT *result)
glGetIntegerv	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glGetIntegerv( GLenum pname, GLint *params );$/;"	p	signature:( GLenum pname, GLint *params )
glGetIntegerv	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glGetIntegerv(GLenum pname, GLint* params)$/;"	f	signature:(GLenum pname, GLint* params)
glGetInternalformati64v	gfx/glsym/glsym_gl.h	1873;"	d
glGetInternalformati64v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params)
glGetInternalformativ	gfx/glsym/glsym_gl.h	1842;"	d
glGetInternalformativ	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params)
glGetInvariantBooleanvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetInvariantFloatvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetInvariantIntegervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetLightxOES	gfx/glsym/glsym_gl.h	1947;"	d
glGetListParameterfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat *params)
glGetListParameterivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, GLint *params)
glGetLocalConstantBooleanvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetLocalConstantFloatvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetLocalConstantIntegervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetMapAttribParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetMapAttribParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetMapControlPointsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points)
glGetMapParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMapParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMapxvOES	gfx/glsym/glsym_gl.h	1948;"	d
glGetMaterialxOES	gfx/glsym/glsym_gl.h	1949;"	d
glGetMinmax	gfx/glsym/glsym_gl.h	1066;"	d
glGetMinmax	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetMinmaxEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetMinmaxParameterfv	gfx/glsym/glsym_gl.h	1067;"	d
glGetMinmaxParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameteriv	gfx/glsym/glsym_gl.h	1068;"	d
glGetMinmaxParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMinmaxParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMultiTexEnvfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexEnvivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexGendvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params)
glGetMultiTexGenfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params)
glGetMultiTexGenivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint *params)
glGetMultiTexImageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetMultiTexLevelParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetMultiTexLevelParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params)
glGetMultiTexParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLuint *params)
glGetMultiTexParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultisamplefv	gfx/glsym/glsym_gl.h	1613;"	d
glGetMultisamplefv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetMultisamplefvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetNamedBufferParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetNamedBufferParameterui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLuint64EXT *params)
glGetNamedBufferPointervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLvoid* *params)
glGetNamedBufferSubDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data)
glGetNamedFramebufferAttachmentParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params)
glGetNamedFramebufferParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *params)
glGetNamedProgramLocalParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint *params)
glGetNamedProgramLocalParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint *params)
glGetNamedProgramLocalParameterdvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble *params)
glGetNamedProgramLocalParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat *params)
glGetNamedProgramStringEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, GLvoid *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, GLvoid *string)
glGetNamedProgramivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, GLint *params)
glGetNamedRenderbufferParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint renderbuffer, GLenum pname, GLint *params)
glGetNamedStringARB	gfx/glsym/glsym_gl.h	1624;"	d
glGetNamedStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	p	signature:(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string)
glGetNamedStringivARB	gfx/glsym/glsym_gl.h	1625;"	d
glGetNamedStringivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	p	signature:(GLint namelen, const GLchar *name, GLenum pname, GLint *params)
glGetObjectBufferfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLfloat *params)
glGetObjectBufferivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetObjectLabel	gfx/glsym/glsym_es2.h	77;"	d
glGetObjectLabel	gfx/glsym/glsym_gl.h	1856;"	d
glGetObjectLabel	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetObjectParameterfvARB	gfx/glsym/glsym_gl.h	1543;"	d
glGetObjectParameterfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLfloat *params)
glGetObjectParameterivAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum pname, GLint *params)
glGetObjectParameterivARB	gfx/glsym/glsym_gl.h	1544;"	d
glGetObjectParameterivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLint *params)
glGetObjectPtrLabel	gfx/glsym/glsym_es2.h	79;"	d
glGetObjectPtrLabel	gfx/glsym/glsym_gl.h	1858;"	d
glGetObjectPtrLabel	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetOcclusionQueryivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetOcclusionQueryuivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetPathColorGenfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat *value);$/;"	p	signature:(GLenum color, GLenum pname, GLfloat *value)
glGetPathColorGenivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathColorGenivNV (GLenum color, GLenum pname, GLint *value);$/;"	p	signature:(GLenum color, GLenum pname, GLint *value)
glGetPathCommandsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathCommandsNV (GLuint path, GLubyte *commands);$/;"	p	signature:(GLuint path, GLubyte *commands)
glGetPathCoordsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathCoordsNV (GLuint path, GLfloat *coords);$/;"	p	signature:(GLuint path, GLfloat *coords)
glGetPathDashArrayNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathDashArrayNV (GLuint path, GLfloat *dashArray);$/;"	p	signature:(GLuint path, GLfloat *dashArray)
glGetPathLengthNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLfloat APIENTRY glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	p	signature:(GLuint path, GLsizei startSegment, GLsizei numSegments)
glGetPathMetricRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	p	signature:(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics)
glGetPathMetricsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	p	signature:(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics)
glGetPathParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value);$/;"	p	signature:(GLuint path, GLenum pname, GLfloat *value)
glGetPathParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value);$/;"	p	signature:(GLuint path, GLenum pname, GLint *value)
glGetPathSpacingNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	p	signature:(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing)
glGetPathTexGenfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	p	signature:(GLenum texCoordSet, GLenum pname, GLfloat *value)
glGetPathTexGenivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	p	signature:(GLenum texCoordSet, GLenum pname, GLint *value)
glGetPerfMonitorCounterDataAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	p	signature:(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)
glGetPerfMonitorCounterInfoAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	p	signature:(GLuint group, GLuint counter, GLenum pname, GLvoid *data)
glGetPerfMonitorCounterStringAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	p	signature:(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)
glGetPerfMonitorCountersAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	p	signature:(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)
glGetPerfMonitorGroupStringAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	p	signature:(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)
glGetPerfMonitorGroupsAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	p	signature:(GLint *numGroups, GLsizei groupsSize, GLuint *groups)
glGetPixelMapxv	gfx/glsym/glsym_gl.h	1950;"	d
glGetPixelTexGenParameterfvSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glGetPixelTexGenParameterivSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params);$/;"	p	signature:(GLenum pname, GLint *params)
glGetPixelTransformParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetPixelTransformParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetPointerIndexedvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, GLvoid* *data);$/;"	p	signature:(GLenum target, GLuint index, GLvoid* *data)
glGetPointerv	gfx/glsym/glsym_es2.h	80;"	d
glGetPointervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum pname, GLvoid* *params)
glGetProgramBinary	gfx/glsym/glsym_gl.h	1729;"	d
glGetProgramBinary	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary)
glGetProgramBinaryOES	gfx/glsym/glsym_es2.h	55;"	d
glGetProgramEnvParameterIivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramEnvParameterIuivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramEnvParameterdvARB	gfx/glsym/glsym_gl.h	1483;"	d
glGetProgramEnvParameterdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramEnvParameterfvARB	gfx/glsym/glsym_gl.h	1484;"	d
glGetProgramEnvParameterfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramInfoLog	gfx/glsym/glsym_gl.h	1203;"	d
glGetProgramInfoLog	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramInterfaceiv	gfx/glsym/glsym_gl.h	1882;"	d
glGetProgramInterfaceiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum programInterface, GLenum pname, GLint *params)
glGetProgramLocalParameterIivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramLocalParameterIuivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramLocalParameterdvARB	gfx/glsym/glsym_gl.h	1485;"	d
glGetProgramLocalParameterdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramLocalParameterfvARB	gfx/glsym/glsym_gl.h	1486;"	d
glGetProgramLocalParameterfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramNamedParameterdvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params)
glGetProgramNamedParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params)
glGetProgramParameterdvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLdouble *params)
glGetProgramParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetProgramPipelineInfoLog	gfx/glsym/glsym_gl.h	1791;"	d
glGetProgramPipelineInfoLog	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramPipelineiv	gfx/glsym/glsym_gl.h	1739;"	d
glGetProgramPipelineiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	p	signature:(GLuint pipeline, GLenum pname, GLint *params)
glGetProgramResourceIndex	gfx/glsym/glsym_gl.h	1883;"	d
glGetProgramResourceIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceLocation	gfx/glsym/glsym_gl.h	1886;"	d
glGetProgramResourceLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceLocationIndex	gfx/glsym/glsym_gl.h	1887;"	d
glGetProgramResourceLocationIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceName	gfx/glsym/glsym_gl.h	1884;"	d
glGetProgramResourceName	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)
glGetProgramResourceiv	gfx/glsym/glsym_gl.h	1885;"	d
glGetProgramResourceiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	p	signature:(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params)
glGetProgramStageiv	gfx/glsym/glsym_gl.h	1710;"	d
glGetProgramStageiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLenum pname, GLint *values)
glGetProgramStringARB	gfx/glsym/glsym_gl.h	1488;"	d
glGetProgramStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid *string)
glGetProgramStringNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program);$/;"	p	signature:(GLuint id, GLenum pname, GLubyte *program)
glGetProgramSubroutineParameteruivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint *param);$/;"	p	signature:(GLenum target, GLuint index, GLuint *param)
glGetProgramiv	gfx/glsym/glsym_gl.h	1202;"	d
glGetProgramiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum pname, GLint *params)
glGetProgramivARB	gfx/glsym/glsym_gl.h	1487;"	d
glGetProgramivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetProgramivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryIndexediv	gfx/glsym/glsym_gl.h	1723;"	d
glGetQueryIndexediv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetQueryObjecti64v	gfx/glsym/glsym_gl.h	1643;"	d
glGetQueryObjecti64v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64 *params)
glGetQueryObjecti64vEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64EXT *params)
glGetQueryObjectiv	gfx/glsym/glsym_gl.h	1170;"	d
glGetQueryObjectiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectivARB	gfx/glsym/glsym_gl.h	1511;"	d
glGetQueryObjectivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectui64v	gfx/glsym/glsym_gl.h	1644;"	d
glGetQueryObjectui64v	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64 *params)
glGetQueryObjectui64vEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64EXT *params)
glGetQueryObjectuiv	gfx/glsym/glsym_gl.h	1171;"	d
glGetQueryObjectuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryObjectuivARB	gfx/glsym/glsym_gl.h	1512;"	d
glGetQueryObjectuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryiv	gfx/glsym/glsym_gl.h	1169;"	d
glGetQueryiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetQueryivARB	gfx/glsym/glsym_gl.h	1510;"	d
glGetQueryivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameteriv	gfx/glsym/glsym_gl.h	1564;"	d
glGetRenderbufferParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameterivOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glGetRenderbufferParameterivOES( GLenum, GLenum, GLint * );$/;"	p	signature:( GLenum, GLenum, GLint * )
glGetSamplerParameterIiv	gfx/glsym/glsym_gl.h	1639;"	d
glGetSamplerParameterIiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSamplerParameterIuiv	gfx/glsym/glsym_gl.h	1641;"	d
glGetSamplerParameterIuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLuint *params)
glGetSamplerParameterfv	gfx/glsym/glsym_gl.h	1640;"	d
glGetSamplerParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat *params)
glGetSamplerParameteriv	gfx/glsym/glsym_gl.h	1638;"	d
glGetSamplerParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSeparableFilter	gfx/glsym/glsym_gl.h	1061;"	d
glGetSeparableFilter	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
glGetSeparableFilterEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
glGetShaderInfoLog	gfx/glsym/glsym_gl.h	1205;"	d
glGetShaderInfoLog	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetShaderPrecisionFormat	gfx/glsym/glsym_gl.h	1726;"	d
glGetShaderPrecisionFormat	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	p	signature:(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)
glGetShaderSource	gfx/glsym/glsym_gl.h	1206;"	d
glGetShaderSource	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
glGetShaderSourceARB	gfx/glsym/glsym_gl.h	1551;"	d
glGetShaderSourceARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)
glGetShaderiv	gfx/glsym/glsym_gl.h	1204;"	d
glGetShaderiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	p	signature:(GLuint shader, GLenum pname, GLint *params)
glGetSharpenTexFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetString	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI const GLubyte * APIENTRY glGetString( GLenum name );$/;"	p	signature:( GLenum name )
glGetString	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI const GLubyte* APIENTRY glGetString( GLenum name )$/;"	f	signature:( GLenum name )
glGetStringi	gfx/glsym/glsym_gl.h	1339;"	d
glGetStringi	msvc/msvc-2010/GL/glext.h	/^GLAPI const GLubyte * APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	p	signature:(GLenum name, GLuint index)
glGetSubroutineIndex	gfx/glsym/glsym_gl.h	1704;"	d
glGetSubroutineIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSubroutineUniformLocation	gfx/glsym/glsym_gl.h	1703;"	d
glGetSubroutineUniformLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSynciv	gfx/glsym/glsym_gl.h	1610;"	d
glGetSynciv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glGetTexBumpParameterfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);$/;"	p	signature:(GLenum pname, GLfloat *param)
glGetTexBumpParameterivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum pname, GLint *param);$/;"	p	signature:(GLenum pname, GLint *param)
glGetTexEnvxvOES	gfx/glsym/glsym_gl.h	1951;"	d
glGetTexFilterFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLfloat *weights)
glGetTexGenxvOES	gfx/glsym/glsym_gl.h	1952;"	d
glGetTexLevelParameterxvOES	gfx/glsym/glsym_gl.h	1953;"	d
glGetTexParameterIiv	gfx/glsym/glsym_gl.h	1333;"	d
glGetTexParameterIiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIuiv	gfx/glsym/glsym_gl.h	1334;"	d
glGetTexParameterIuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterPointervAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetTexParameterxvOES	gfx/glsym/glsym_gl.h	1954;"	d
glGetTextureHandleNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleNV (GLuint texture);$/;"	p	signature:(GLuint texture)
glGetTextureImageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetTextureLevelParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetTextureLevelParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params)
glGetTextureParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTextureParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLuint *params)
glGetTextureParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat *params)
glGetTextureParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTextureSamplerHandleNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);$/;"	p	signature:(GLuint texture, GLuint sampler)
glGetTrackMatrixivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint address, GLenum pname, GLint *params)
glGetTransformFeedbackVarying	gfx/glsym/glsym_gl.h	1293;"	d
glGetTransformFeedbackVarying	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location);$/;"	p	signature:(GLuint program, GLuint index, GLint *location)
glGetUniformBlockIndex	gfx/glsym/glsym_gl.h	1594;"	d
glGetUniformBlockIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, const GLchar *uniformBlockName)
glGetUniformBufferSizeEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetUniformBufferSizeEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformIndices	gfx/glsym/glsym_gl.h	1591;"	d
glGetUniformIndices	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices)
glGetUniformLocation	gfx/glsym/glsym_gl.h	1207;"	d
glGetUniformLocation	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetUniformLocationARB	gfx/glsym/glsym_gl.h	1547;"	d
glGetUniformLocationARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetUniformOffsetEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLintptr APIENTRY glGetUniformOffsetEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformSubroutineuiv	gfx/glsym/glsym_gl.h	1709;"	d
glGetUniformSubroutineuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);$/;"	p	signature:(GLenum shadertype, GLint location, GLuint *params)
glGetUniformdv	gfx/glsym/glsym_gl.h	1702;"	d
glGetUniformdv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLdouble *params)
glGetUniformfv	gfx/glsym/glsym_gl.h	1208;"	d
glGetUniformfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLfloat *params)
glGetUniformfvARB	gfx/glsym/glsym_gl.h	1549;"	d
glGetUniformfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLfloat *params)
glGetUniformi64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT *params)
glGetUniformiv	gfx/glsym/glsym_gl.h	1209;"	d
glGetUniformiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLint *params)
glGetUniformivARB	gfx/glsym/glsym_gl.h	1550;"	d
glGetUniformivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLint *params)
glGetUniformui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT *params)
glGetUniformuiv	gfx/glsym/glsym_gl.h	1320;"	d
glGetUniformuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetUniformuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetVariantArrayObjectfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint id, GLenum pname, GLfloat *params)
glGetVariantArrayObjectivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetVariantBooleanvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetVariantFloatvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetVariantIntegervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetVariantPointervEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint id, GLenum value, GLvoid* *data);$/;"	p	signature:(GLuint id, GLenum value, GLvoid* *data)
glGetVaryingLocationNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glGetVaryingLocationNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetVertexAttribArrayObjectfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribArrayObjectivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIiv	gfx/glsym/glsym_gl.h	1298;"	d
glGetVertexAttribIiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIuiv	gfx/glsym/glsym_gl.h	1299;"	d
glGetVertexAttribIuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribLdv	gfx/glsym/glsym_gl.h	1801;"	d
glGetVertexAttribLdv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLdvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLi64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint64EXT *params)
glGetVertexAttribLui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint64EXT *params)
glGetVertexAttribPointerv	gfx/glsym/glsym_gl.h	1213;"	d
glGetVertexAttribPointerv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribPointervARB	gfx/glsym/glsym_gl.h	1492;"	d
glGetVertexAttribPointervARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribPointervNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribdv	gfx/glsym/glsym_gl.h	1210;"	d
glGetVertexAttribdv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvARB	gfx/glsym/glsym_gl.h	1489;"	d
glGetVertexAttribdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribfv	gfx/glsym/glsym_gl.h	1211;"	d
glGetVertexAttribfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfvARB	gfx/glsym/glsym_gl.h	1490;"	d
glGetVertexAttribfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribiv	gfx/glsym/glsym_gl.h	1212;"	d
glGetVertexAttribiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribivARB	gfx/glsym/glsym_gl.h	1491;"	d
glGetVertexAttribivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVideoCaptureStreamdvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params)
glGetVideoCaptureStreamfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params)
glGetVideoCaptureStreamivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params)
glGetVideoCaptureivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLenum pname, GLint *params)
glGetVideoi64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint64EXT *params)
glGetVideoivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoivNV (GLuint video_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint *params)
glGetVideoui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint64EXT *params)
glGetVideouivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint *params)
glGetnColorTableARB	gfx/glsym/glsym_gl.h	1825;"	d
glGetnColorTableARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table)
glGetnCompressedTexImageARB	gfx/glsym/glsym_gl.h	1832;"	d
glGetnCompressedTexImageARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	p	signature:(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img)
glGetnConvolutionFilterARB	gfx/glsym/glsym_gl.h	1826;"	d
glGetnConvolutionFilterARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image)
glGetnHistogramARB	gfx/glsym/glsym_gl.h	1828;"	d
glGetnHistogramARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
glGetnMapdvARB	gfx/glsym/glsym_gl.h	1818;"	d
glGetnMapdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v)
glGetnMapfvARB	gfx/glsym/glsym_gl.h	1819;"	d
glGetnMapfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v)
glGetnMapivARB	gfx/glsym/glsym_gl.h	1820;"	d
glGetnMapivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLint *v)
glGetnMinmaxARB	gfx/glsym/glsym_gl.h	1829;"	d
glGetnMinmaxARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
glGetnPixelMapfvARB	gfx/glsym/glsym_gl.h	1821;"	d
glGetnPixelMapfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLfloat *values)
glGetnPixelMapuivARB	gfx/glsym/glsym_gl.h	1822;"	d
glGetnPixelMapuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLuint *values)
glGetnPixelMapusvARB	gfx/glsym/glsym_gl.h	1823;"	d
glGetnPixelMapusvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLushort *values)
glGetnPolygonStippleARB	gfx/glsym/glsym_gl.h	1824;"	d
glGetnPolygonStippleARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnPolygonStippleARB (GLsizei bufSize, GLubyte *pattern);$/;"	p	signature:(GLsizei bufSize, GLubyte *pattern)
glGetnSeparableFilterARB	gfx/glsym/glsym_gl.h	1827;"	d
glGetnSeparableFilterARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span)
glGetnTexImageARB	gfx/glsym/glsym_gl.h	1830;"	d
glGetnTexImageARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img)
glGetnUniformdvARB	gfx/glsym/glsym_gl.h	1836;"	d
glGetnUniformdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
glGetnUniformfvARB	gfx/glsym/glsym_gl.h	1833;"	d
glGetnUniformfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
glGetnUniformivARB	gfx/glsym/glsym_gl.h	1834;"	d
glGetnUniformivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint *params)
glGetnUniformuivARB	gfx/glsym/glsym_gl.h	1835;"	d
glGetnUniformuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
glGlobalAlphaFactorbSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte factor);$/;"	p	signature:(GLbyte factor)
glGlobalAlphaFactordSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble factor);$/;"	p	signature:(GLdouble factor)
glGlobalAlphaFactorfSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glGlobalAlphaFactoriSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint factor);$/;"	p	signature:(GLint factor)
glGlobalAlphaFactorsSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort factor);$/;"	p	signature:(GLshort factor)
glGlobalAlphaFactorubSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte factor);$/;"	p	signature:(GLubyte factor)
glGlobalAlphaFactoruiSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint factor);$/;"	p	signature:(GLuint factor)
glGlobalAlphaFactorusSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort factor);$/;"	p	signature:(GLushort factor)
glHint	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glHint( GLenum target, GLenum mode );$/;"	p	signature:( GLenum target, GLenum mode )
glHintPGI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glHintPGI (GLenum target, GLint mode);$/;"	p	signature:(GLenum target, GLint mode)
glHistogram	gfx/glsym/glsym_gl.h	1069;"	d
glHistogram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glHistogramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glIglooInterfaceSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum pname, const GLvoid *params);$/;"	p	signature:(GLenum pname, const GLvoid *params)
glImageTransformParameterfHP	gfx/glsym/glsym_gl.h	1893;"	d
glImageTransformParameterfHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glImageTransformParameterfvHP	gfx/glsym/glsym_gl.h	1895;"	d
glImageTransformParameterfvHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glImageTransformParameteriHP	gfx/glsym/glsym_gl.h	1892;"	d
glImageTransformParameteriHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glImageTransformParameterivHP	gfx/glsym/glsym_gl.h	1894;"	d
glImageTransformParameterivHP	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glImportSyncEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLsync APIENTRY glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);$/;"	p	signature:(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags)
glIndexFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glIndexFuncEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glIndexMaterialEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glIndexPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glIndexPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glIndexxOES	gfx/glsym/glsym_gl.h	1955;"	d
glIndexxvOES	gfx/glsym/glsym_gl.h	1956;"	d
glInsertComponentEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glInstrumentsBufferSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei size, GLint *buffer);$/;"	p	signature:(GLsizei size, GLint *buffer)
glInterpolatePathsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	p	signature:(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight)
glInvalidateBufferData	gfx/glsym/glsym_gl.h	1877;"	d
glInvalidateBufferData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glInvalidateBufferSubData	gfx/glsym/glsym_gl.h	1876;"	d
glInvalidateBufferSubData	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glInvalidateFramebuffer	gfx/glsym/glsym_gl.h	1878;"	d
glInvalidateFramebuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	p	signature:(GLenum target, GLsizei numAttachments, const GLenum *attachments)
glInvalidateSubFramebuffer	gfx/glsym/glsym_gl.h	1879;"	d
glInvalidateSubFramebuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height)
glInvalidateTexImage	gfx/glsym/glsym_gl.h	1875;"	d
glInvalidateTexImage	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);$/;"	p	signature:(GLuint texture, GLint level)
glInvalidateTexSubImage	gfx/glsym/glsym_gl.h	1874;"	d
glInvalidateTexSubImage	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth)
glIsAsyncMarkerSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glIsBuffer	gfx/glsym/glsym_gl.h	1175;"	d
glIsBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferARB	gfx/glsym/glsym_gl.h	1497;"	d
glIsBufferARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glIsEnabledIndexedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsEnabledi	gfx/glsym/glsym_gl.h	1287;"	d
glIsEnabledi	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsFenceAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFenceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFenceNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glIsFenceNV( GLuint fence );$/;"	p	signature:( GLuint fence )
glIsFramebuffer	gfx/glsym/glsym_gl.h	1565;"	d
glIsFramebuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsFramebufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsFramebufferOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glIsFramebufferOES( GLuint );$/;"	p	signature:( GLuint )
glIsFramebufferOES	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLboolean APIENTRY glIsFramebufferOES( GLuint framebuffer )$/;"	f	signature:( GLuint framebuffer )
glIsImageHandleResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsNameAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsNameAMD (GLenum identifier, GLuint name);$/;"	p	signature:(GLenum identifier, GLuint name)
glIsNamedBufferResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsNamedStringARB	gfx/glsym/glsym_gl.h	1623;"	d
glIsNamedStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glIsObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsOcclusionQueryNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsPathNV (GLuint path);$/;"	p	signature:(GLuint path)
glIsPointInFillPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint path, GLuint mask, GLfloat x, GLfloat y)
glIsPointInStrokePathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint path, GLfloat x, GLfloat y)
glIsProgram	gfx/glsym/glsym_gl.h	1214;"	d
glIsProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramARB	gfx/glsym/glsym_gl.h	1493;"	d
glIsProgramARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsProgramPipeline	gfx/glsym/glsym_gl.h	1738;"	d
glIsProgramPipeline	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glIsQuery	gfx/glsym/glsym_gl.h	1166;"	d
glIsQuery	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	p	signature:(GLuint id)
glIsQueryARB	gfx/glsym/glsym_gl.h	1507;"	d
glIsQueryARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint id);$/;"	p	signature:(GLuint id)
glIsRenderbuffer	gfx/glsym/glsym_gl.h	1559;"	d
glIsRenderbuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsRenderbufferOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glIsRenderbufferOES( GLuint );$/;"	p	signature:( GLuint )
glIsSampler	gfx/glsym/glsym_gl.h	1630;"	d
glIsSampler	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	p	signature:(GLuint sampler)
glIsShader	gfx/glsym/glsym_gl.h	1215;"	d
glIsShader	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glIsSync	gfx/glsym/glsym_gl.h	1605;"	d
glIsSync	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glIsTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint texture);$/;"	p	signature:(GLuint texture)
glIsTextureHandleResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsTransformFeedback	gfx/glsym/glsym_gl.h	1716;"	d
glIsTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	p	signature:(GLuint id)
glIsTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedbackNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsVariantEnabledEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint id, GLenum cap);$/;"	p	signature:(GLuint id, GLenum cap)
glIsVertexArray	gfx/glsym/glsym_gl.h	1590;"	d
glIsVertexArray	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexArrayOES	gfx/glsym/glsym_es2.h	69;"	d
glIsVertexAttribEnabledAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glLightEnviSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glLightModelxOES	gfx/glsym/glsym_gl.h	1957;"	d
glLightModelxvOES	gfx/glsym/glsym_gl.h	1958;"	d
glLightxOES	gfx/glsym/glsym_gl.h	1959;"	d
glLightxvOES	gfx/glsym/glsym_gl.h	1960;"	d
glLineWidth	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glLineWidth( GLfloat width );$/;"	p	signature:( GLfloat width )
glLineWidthx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glLineWidthx( GLfixed width );$/;"	p	signature:( GLfixed width )
glLineWidthxOES	gfx/glsym/glsym_gl.h	1961;"	d
glLinkProgram	gfx/glsym/glsym_gl.h	1216;"	d
glLinkProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	p	signature:(GLuint program)
glLinkProgramARB	gfx/glsym/glsym_gl.h	1521;"	d
glLinkProgramARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glListParameterfSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat param)
glListParameterfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLfloat *params)
glListParameteriSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint list, GLenum pname, GLint param);$/;"	p	signature:(GLuint list, GLenum pname, GLint param)
glListParameterivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint list, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLint *params)
glLoadIdentity	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glLoadIdentity( void );$/;"	p	signature:( void )
glLoadIdentityDeformationMapSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glLoadMatrixxOES	gfx/glsym/glsym_gl.h	1962;"	d
glLoadProgramNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	p	signature:(GLenum target, GLuint id, GLsizei len, const GLubyte *program)
glLoadTransposeMatrixd	gfx/glsym/glsym_gl.h	1116;"	d
glLoadTransposeMatrixd	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixdARB	gfx/glsym/glsym_gl.h	1388;"	d
glLoadTransposeMatrixdARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixf	gfx/glsym/glsym_gl.h	1115;"	d
glLoadTransposeMatrixf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadTransposeMatrixfARB	gfx/glsym/glsym_gl.h	1387;"	d
glLoadTransposeMatrixfARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadTransposeMatrixxOES	gfx/glsym/glsym_gl.h	1963;"	d
glLockArraysEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint first, GLsizei count);$/;"	p	signature:(GLint first, GLsizei count)
glLogicOp	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glLogicOp( GLenum opcode );$/;"	p	signature:( GLenum opcode )
glMakeBufferNonResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glMakeBufferResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMakeImageHandleNonResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeImageHandleResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);$/;"	p	signature:(GLuint64 handle, GLenum access)
glMakeNamedBufferNonResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMakeNamedBufferResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMakeTextureHandleNonResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeTextureHandleResidentNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMap1xOES	gfx/glsym/glsym_gl.h	1964;"	d
glMap2xOES	gfx/glsym/glsym_gl.h	1965;"	d
glMapBuffer	gfx/gl_common.h	308;"	d
glMapBuffer	gfx/glsym/glsym_gl.h	1179;"	d
glMapBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBuffer	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLvoid* APIENTRY glMapBuffer( GLenum target, GLenum access );$/;"	p	signature:( GLenum target, GLenum access )
glMapBuffer	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLvoid* APIENTRY glMapBuffer( GLenum target, GLenum access )$/;"	f	signature:( GLenum target, GLenum access )
glMapBufferARB	gfx/glsym/glsym_gl.h	1501;"	d
glMapBufferARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapBufferARB (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferOES	gfx/glsym/glsym_es2.h	57;"	d
glMapBufferRange	gfx/glsym/glsym_gl.h	1584;"	d
glMapBufferRange	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapBufferTextureReferenceRA	gfx/gl_common.h	/^extern GLvoid* glMapBufferTextureReferenceRA( GLenum target, GLenum access );$/;"	p	signature:( GLenum target, GLenum access )
glMapBufferTextureReferenceRA	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLvoid* APIENTRY glMapBufferTextureReferenceRA( GLenum target, GLenum access );$/;"	p	signature:( GLenum target, GLenum access )
glMapBufferTextureReferenceRA	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLvoid* APIENTRY glMapBufferTextureReferenceRA( GLenum target, GLenum access )$/;"	f	signature:( GLenum target, GLenum access )
glMapControlPointsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points)
glMapGrid1xOES	gfx/glsym/glsym_gl.h	1966;"	d
glMapGrid2xOES	gfx/glsym/glsym_gl.h	1967;"	d
glMapNamedBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMapNamedBufferRangeEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvoid* APIENTRY glMapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMapParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glMapParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glMapVertexAttrib1dAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
glMapVertexAttrib1fAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
glMapVertexAttrib2dAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
glMapVertexAttrib2fAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
glMaterialf	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMaterialf( GLenum face, GLenum pname, GLfloat param );$/;"	p	signature:( GLenum face, GLenum pname, GLfloat param )
glMaterialfv	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMaterialfv( GLenum face, GLenum pname, const GLfloat *params );$/;"	p	signature:( GLenum face, GLenum pname, const GLfloat *params )
glMaterialx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMaterialx( GLenum face, GLenum pname, GLfixed param );$/;"	p	signature:( GLenum face, GLenum pname, GLfixed param )
glMaterialxOES	gfx/glsym/glsym_gl.h	1968;"	d
glMaterialxv	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMaterialxv( GLenum face, GLenum pname, const GLfixed *params );$/;"	p	signature:( GLenum face, GLenum pname, const GLfixed *params )
glMaterialxvOES	gfx/glsym/glsym_gl.h	1969;"	d
glMatrixFrustumEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixIndexPointerARB	gfx/glsym/glsym_gl.h	1415;"	d
glMatrixIndexPointerARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glMatrixIndexubvARB	gfx/glsym/glsym_gl.h	1412;"	d
glMatrixIndexubvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint size, const GLubyte *indices);$/;"	p	signature:(GLint size, const GLubyte *indices)
glMatrixIndexuivARB	gfx/glsym/glsym_gl.h	1414;"	d
glMatrixIndexuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint size, const GLuint *indices);$/;"	p	signature:(GLint size, const GLuint *indices)
glMatrixIndexusvARB	gfx/glsym/glsym_gl.h	1413;"	d
glMatrixIndexusvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint size, const GLushort *indices);$/;"	p	signature:(GLint size, const GLushort *indices)
glMatrixLoadIdentityEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixLoadTransposedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadTransposefEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixLoaddEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMode	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMatrixMode( GLenum mode );$/;"	p	signature:( GLenum mode )
glMatrixMultTransposedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultTransposefEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMultdEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixOrthoEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixPopEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixPushEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixRotatedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
glMatrixRotatefEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
glMatrixScaledEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixScalefEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMatrixTranslatedEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixTranslatefEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMemoryBarrier	gfx/glsym/glsym_gl.h	1845;"	d
glMemoryBarrier	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMemoryBarrierEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMinSampleShading	gfx/glsym/glsym_gl.h	1348;"	d
glMinSampleShading	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMinSampleShading (GLfloat value);$/;"	p	signature:(GLfloat value)
glMinSampleShadingARB	gfx/glsym/glsym_gl.h	1619;"	d
glMinSampleShadingARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);$/;"	p	signature:(GLfloat value)
glMinmax	gfx/glsym/glsym_gl.h	1070;"	d
glMinmax	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMinmax (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMinmaxEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMultMatrixxOES	gfx/glsym/glsym_gl.h	1970;"	d
glMultTransposeMatrixd	gfx/glsym/glsym_gl.h	1118;"	d
glMultTransposeMatrixd	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixdARB	gfx/glsym/glsym_gl.h	1390;"	d
glMultTransposeMatrixdARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixf	gfx/glsym/glsym_gl.h	1117;"	d
glMultTransposeMatrixf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultTransposeMatrixfARB	gfx/glsym/glsym_gl.h	1389;"	d
glMultTransposeMatrixfARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultTransposeMatrixxOES	gfx/glsym/glsym_gl.h	1971;"	d
glMultiDrawArrays	gfx/glsym/glsym_gl.h	1120;"	d
glMultiDrawArrays	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount)
glMultiDrawArraysEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawArraysIndirect	gfx/glsym/glsym_gl.h	1880;"	d
glMultiDrawArraysIndirect	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride)
glMultiDrawArraysIndirectAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectAMD (GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride)
glMultiDrawElementArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawElements	gfx/glsym/glsym_gl.h	1121;"	d
glMultiDrawElements	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount)
glMultiDrawElementsBaseVertex	gfx/glsym/glsym_gl.h	1602;"	d
glMultiDrawElementsBaseVertex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex)
glMultiDrawElementsEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)
glMultiDrawElementsIndirect	gfx/glsym/glsym_gl.h	1881;"	d
glMultiDrawElementsIndirect	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride)
glMultiDrawElementsIndirectAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride)
glMultiDrawRangeElementArrayAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiModeDrawArraysIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride)
glMultiModeDrawElementsIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride)
glMultiTexBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer)
glMultiTexCoord1bOES	gfx/glsym/glsym_gl.h	1898;"	d
glMultiTexCoord1bvOES	gfx/glsym/glsym_gl.h	1899;"	d
glMultiTexCoord1d	gfx/glsym/glsym_gl.h	1083;"	d
glMultiTexCoord1d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dARB	gfx/glsym/glsym_gl.h	1355;"	d
glMultiTexCoord1dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dv	gfx/glsym/glsym_gl.h	1084;"	d
glMultiTexCoord1dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1dvARB	gfx/glsym/glsym_gl.h	1356;"	d
glMultiTexCoord1dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1f	gfx/glsym/glsym_gl.h	1085;"	d
glMultiTexCoord1f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fARB	gfx/glsym/glsym_gl.h	1357;"	d
glMultiTexCoord1fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fv	gfx/glsym/glsym_gl.h	1086;"	d
glMultiTexCoord1fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1fvARB	gfx/glsym/glsym_gl.h	1358;"	d
glMultiTexCoord1fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum target, GLhalfNV s);$/;"	p	signature:(GLenum target, GLhalfNV s)
glMultiTexCoord1hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord1i	gfx/glsym/glsym_gl.h	1087;"	d
glMultiTexCoord1i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iARB	gfx/glsym/glsym_gl.h	1359;"	d
glMultiTexCoord1iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iv	gfx/glsym/glsym_gl.h	1088;"	d
glMultiTexCoord1iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1ivARB	gfx/glsym/glsym_gl.h	1360;"	d
glMultiTexCoord1ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1s	gfx/glsym/glsym_gl.h	1089;"	d
glMultiTexCoord1s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sARB	gfx/glsym/glsym_gl.h	1361;"	d
glMultiTexCoord1sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sv	gfx/glsym/glsym_gl.h	1090;"	d
glMultiTexCoord1sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord1svARB	gfx/glsym/glsym_gl.h	1362;"	d
glMultiTexCoord1svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord1xOES	gfx/glsym/glsym_gl.h	1972;"	d
glMultiTexCoord1xvOES	gfx/glsym/glsym_gl.h	1976;"	d
glMultiTexCoord2bOES	gfx/glsym/glsym_gl.h	1900;"	d
glMultiTexCoord2bvOES	gfx/glsym/glsym_gl.h	1901;"	d
glMultiTexCoord2d	gfx/glsym/glsym_gl.h	1091;"	d
glMultiTexCoord2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dARB	gfx/glsym/glsym_gl.h	1363;"	d
glMultiTexCoord2dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dv	gfx/glsym/glsym_gl.h	1092;"	d
glMultiTexCoord2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2dvARB	gfx/glsym/glsym_gl.h	1364;"	d
glMultiTexCoord2dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2f	gfx/glsym/glsym_gl.h	1093;"	d
glMultiTexCoord2f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fARB	gfx/glsym/glsym_gl.h	1365;"	d
glMultiTexCoord2fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fv	gfx/glsym/glsym_gl.h	1094;"	d
glMultiTexCoord2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2fvARB	gfx/glsym/glsym_gl.h	1366;"	d
glMultiTexCoord2fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t)
glMultiTexCoord2hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord2i	gfx/glsym/glsym_gl.h	1095;"	d
glMultiTexCoord2i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iARB	gfx/glsym/glsym_gl.h	1367;"	d
glMultiTexCoord2iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iv	gfx/glsym/glsym_gl.h	1096;"	d
glMultiTexCoord2iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2ivARB	gfx/glsym/glsym_gl.h	1368;"	d
glMultiTexCoord2ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2s	gfx/glsym/glsym_gl.h	1097;"	d
glMultiTexCoord2s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sARB	gfx/glsym/glsym_gl.h	1369;"	d
glMultiTexCoord2sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sv	gfx/glsym/glsym_gl.h	1098;"	d
glMultiTexCoord2sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2svARB	gfx/glsym/glsym_gl.h	1370;"	d
glMultiTexCoord2svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2xOES	gfx/glsym/glsym_gl.h	1973;"	d
glMultiTexCoord2xvOES	gfx/glsym/glsym_gl.h	1977;"	d
glMultiTexCoord3bOES	gfx/glsym/glsym_gl.h	1902;"	d
glMultiTexCoord3bvOES	gfx/glsym/glsym_gl.h	1903;"	d
glMultiTexCoord3d	gfx/glsym/glsym_gl.h	1099;"	d
glMultiTexCoord3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dARB	gfx/glsym/glsym_gl.h	1371;"	d
glMultiTexCoord3dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dv	gfx/glsym/glsym_gl.h	1100;"	d
glMultiTexCoord3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3dvARB	gfx/glsym/glsym_gl.h	1372;"	d
glMultiTexCoord3dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3f	gfx/glsym/glsym_gl.h	1101;"	d
glMultiTexCoord3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fARB	gfx/glsym/glsym_gl.h	1373;"	d
glMultiTexCoord3fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fv	gfx/glsym/glsym_gl.h	1102;"	d
glMultiTexCoord3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3fvARB	gfx/glsym/glsym_gl.h	1374;"	d
glMultiTexCoord3fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)
glMultiTexCoord3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord3i	gfx/glsym/glsym_gl.h	1103;"	d
glMultiTexCoord3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iARB	gfx/glsym/glsym_gl.h	1375;"	d
glMultiTexCoord3iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iv	gfx/glsym/glsym_gl.h	1104;"	d
glMultiTexCoord3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3ivARB	gfx/glsym/glsym_gl.h	1376;"	d
glMultiTexCoord3ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3s	gfx/glsym/glsym_gl.h	1105;"	d
glMultiTexCoord3s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sARB	gfx/glsym/glsym_gl.h	1377;"	d
glMultiTexCoord3sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sv	gfx/glsym/glsym_gl.h	1106;"	d
glMultiTexCoord3sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3svARB	gfx/glsym/glsym_gl.h	1378;"	d
glMultiTexCoord3svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3xOES	gfx/glsym/glsym_gl.h	1974;"	d
glMultiTexCoord3xvOES	gfx/glsym/glsym_gl.h	1978;"	d
glMultiTexCoord4bOES	gfx/glsym/glsym_gl.h	1904;"	d
glMultiTexCoord4bvOES	gfx/glsym/glsym_gl.h	1905;"	d
glMultiTexCoord4d	gfx/glsym/glsym_gl.h	1107;"	d
glMultiTexCoord4d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dARB	gfx/glsym/glsym_gl.h	1379;"	d
glMultiTexCoord4dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dv	gfx/glsym/glsym_gl.h	1108;"	d
glMultiTexCoord4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4dvARB	gfx/glsym/glsym_gl.h	1380;"	d
glMultiTexCoord4dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4f	gfx/glsym/glsym_gl.h	1109;"	d
glMultiTexCoord4f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4f	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMultiTexCoord4f( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q );$/;"	p	signature:( GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q )
glMultiTexCoord4fARB	gfx/glsym/glsym_gl.h	1381;"	d
glMultiTexCoord4fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4fv	gfx/glsym/glsym_gl.h	1110;"	d
glMultiTexCoord4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4fvARB	gfx/glsym/glsym_gl.h	1382;"	d
glMultiTexCoord4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glMultiTexCoord4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord4i	gfx/glsym/glsym_gl.h	1111;"	d
glMultiTexCoord4i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iARB	gfx/glsym/glsym_gl.h	1383;"	d
glMultiTexCoord4iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iv	gfx/glsym/glsym_gl.h	1112;"	d
glMultiTexCoord4iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4ivARB	gfx/glsym/glsym_gl.h	1384;"	d
glMultiTexCoord4ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4s	gfx/glsym/glsym_gl.h	1113;"	d
glMultiTexCoord4s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sARB	gfx/glsym/glsym_gl.h	1385;"	d
glMultiTexCoord4sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sv	gfx/glsym/glsym_gl.h	1114;"	d
glMultiTexCoord4sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4svARB	gfx/glsym/glsym_gl.h	1386;"	d
glMultiTexCoord4svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4x	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glMultiTexCoord4x( GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q );$/;"	p	signature:( GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q )
glMultiTexCoord4xOES	gfx/glsym/glsym_gl.h	1975;"	d
glMultiTexCoord4xvOES	gfx/glsym/glsym_gl.h	1979;"	d
glMultiTexCoordP1ui	gfx/glsym/glsym_gl.h	1659;"	d
glMultiTexCoordP1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP1uiv	gfx/glsym/glsym_gl.h	1660;"	d
glMultiTexCoordP1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP2ui	gfx/glsym/glsym_gl.h	1661;"	d
glMultiTexCoordP2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP2uiv	gfx/glsym/glsym_gl.h	1662;"	d
glMultiTexCoordP2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP3ui	gfx/glsym/glsym_gl.h	1663;"	d
glMultiTexCoordP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP3uiv	gfx/glsym/glsym_gl.h	1664;"	d
glMultiTexCoordP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP4ui	gfx/glsym/glsym_gl.h	1665;"	d
glMultiTexCoordP4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP4uiv	gfx/glsym/glsym_gl.h	1666;"	d
glMultiTexCoordP4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glMultiTexEnvfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexEnvfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexEnviEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexEnvivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexGendEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble param)
glMultiTexGendvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params)
glMultiTexGenfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat param)
glMultiTexGenfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params)
glMultiTexGeniEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint param)
glMultiTexGenivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLint *params)
glMultiTexImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLuint *params)
glMultiTexParameterfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint renderbuffer)
glMultiTexSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glNamedBufferDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage)
glNamedBufferSubDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data)
glNamedCopyBufferSubDataEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glNamedFramebufferParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint param);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint param)
glNamedFramebufferRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glNamedFramebufferTexture1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glNamedFramebufferTextureEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level)
glNamedFramebufferTextureFaceEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face)
glNamedFramebufferTextureLayerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer)
glNamedProgramLocalParameter4dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glNamedProgramLocalParameter4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLdouble *params)
glNamedProgramLocalParameter4fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glNamedProgramLocalParameter4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLfloat *params)
glNamedProgramLocalParameterI4iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glNamedProgramLocalParameterI4ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLint *params)
glNamedProgramLocalParameterI4uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glNamedProgramLocalParameterI4uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLuint *params)
glNamedProgramLocalParameters4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glNamedProgramLocalParametersI4ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params)
glNamedProgramLocalParametersI4uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params)
glNamedProgramStringEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string)
glNamedRenderbufferStorageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleCoverageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedStringARB	gfx/glsym/glsym_gl.h	1620;"	d
glNamedStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	p	signature:(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string)
glNewObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	p	signature:(GLsizei size, const GLvoid *pointer, GLenum usage)
glNormal3f	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glNormal3f( GLfloat nx, GLfloat ny, GLfloat nz );$/;"	p	signature:( GLfloat nx, GLfloat ny, GLfloat nz )
glNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *n, const GLfloat *v)
glNormal3fv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glNormal3fv( const GLfloat* v );$/;"	p	signature:( const GLfloat* v )
glNormal3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	p	signature:(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)
glNormal3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glNormal3x	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glNormal3x( GLfixed nx, GLfixed ny, GLfixed nz );$/;"	p	signature:( GLfixed nx, GLfixed ny, GLfixed nz )
glNormal3xOES	gfx/glsym/glsym_gl.h	1980;"	d
glNormal3xvOES	gfx/glsym/glsym_gl.h	1981;"	d
glNormalFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glNormalP3ui	gfx/glsym/glsym_gl.h	1667;"	d
glNormalP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glNormalP3uiv	gfx/glsym/glsym_gl.h	1668;"	d
glNormalP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glNormalPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glNormalPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glNormalPointervINTEL	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLenum type, const GLvoid* *pointer)
glNormalStream3bATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	p	signature:(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz)
glNormalStream3bvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum stream, const GLbyte *coords);$/;"	p	signature:(GLenum stream, const GLbyte *coords)
glNormalStream3dATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	p	signature:(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz)
glNormalStream3dvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glNormalStream3fATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	signature:(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz)
glNormalStream3fvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glNormalStream3iATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	p	signature:(GLenum stream, GLint nx, GLint ny, GLint nz)
glNormalStream3ivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glNormalStream3sATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	p	signature:(GLenum stream, GLshort nx, GLshort ny, GLshort nz)
glNormalStream3svATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glObjectLabel	gfx/glsym/glsym_es2.h	76;"	d
glObjectLabel	gfx/glsym/glsym_gl.h	1855;"	d
glObjectLabel	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)
glObjectPtrLabel	gfx/glsym/glsym_es2.h	78;"	d
glObjectPtrLabel	gfx/glsym/glsym_gl.h	1857;"	d
glObjectPtrLabel	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei length, const GLchar *label)
glObjectPurgeableAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glObjectUnpurgeableAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glOrthof	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glOrthof( GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar );$/;"	p	signature:( GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar )
glOrthofOES	gfx/glsym/glsym_gl.h	2026;"	d
glOrthox	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glOrthox( GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar );$/;"	p	signature:( GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar )
glOrthoxOES	gfx/glsym/glsym_gl.h	1982;"	d
glPNTrianglesfATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPNTrianglesiATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPassTexCoordATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint coord, GLenum swizzle)
glPassThroughxOES	gfx/glsym/glsym_gl.h	1983;"	d
glPatchParameterfv	gfx/glsym/glsym_gl.h	1712;"	d
glPatchParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	p	signature:(GLenum pname, const GLfloat *values)
glPatchParameteri	gfx/glsym/glsym_gl.h	1711;"	d
glPatchParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	p	signature:(GLenum pname, GLint value)
glPathColorGenNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);$/;"	p	signature:(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs)
glPathCommandsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	p	signature:(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
glPathCoordsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	p	signature:(GLuint path, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
glPathCoverDepthFuncNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathCoverDepthFuncNV (GLenum func);$/;"	p	signature:(GLenum func)
glPathDashArrayNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	p	signature:(GLuint path, GLsizei dashCount, const GLfloat *dashArray)
glPathFogGenNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathFogGenNV (GLenum genMode);$/;"	p	signature:(GLenum genMode)
glPathGlyphRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathGlyphsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathParameterfNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);$/;"	p	signature:(GLuint path, GLenum pname, GLfloat value)
glPathParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value);$/;"	p	signature:(GLuint path, GLenum pname, const GLfloat *value)
glPathParameteriNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathParameteriNV (GLuint path, GLenum pname, GLint value);$/;"	p	signature:(GLuint path, GLenum pname, GLint value)
glPathParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathParameterivNV (GLuint path, GLenum pname, const GLint *value);$/;"	p	signature:(GLuint path, GLenum pname, const GLint *value)
glPathStencilDepthOffsetNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);$/;"	p	signature:(GLfloat factor, GLfloat units)
glPathStencilFuncNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum func, GLint ref, GLuint mask)
glPathStringNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathStringNV (GLuint path, GLenum format, GLsizei length, const GLvoid *pathString);$/;"	p	signature:(GLuint path, GLenum format, GLsizei length, const GLvoid *pathString)
glPathSubCommandsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	p	signature:(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
glPathSubCoordsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const GLvoid *coords);$/;"	p	signature:(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
glPathTexGenNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	p	signature:(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs)
glPauseTransformFeedback	gfx/glsym/glsym_gl.h	1717;"	d
glPauseTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	p	signature:(void)
glPauseTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPauseTransformFeedbackNV (void);$/;"	p	signature:(void)
glPixelDataRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	p	signature:(GLenum target, GLsizei length, const GLvoid *pointer)
glPixelMapx	gfx/glsym/glsym_gl.h	1984;"	d
glPixelStorei	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glPixelStorei( GLenum pname, GLint param );$/;"	p	signature:( GLenum pname, GLint param )
glPixelStorei	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glPixelStorei( GLenum pname, GLint param )$/;"	f	signature:( GLenum pname, GLint param )
glPixelStorex	gfx/glsym/glsym_gl.h	1985;"	d
glPixelTexGenParameterfSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPixelTexGenParameterfvSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPixelTexGenParameteriSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelTexGenParameterivSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPixelTexGenSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum mode);$/;"	p	signature:(GLenum mode)
glPixelTransferxOES	gfx/glsym/glsym_gl.h	1986;"	d
glPixelTransformParameterfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glPixelTransformParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glPixelTransformParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glPixelTransformParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glPixelZoomxOES	gfx/glsym/glsym_gl.h	1987;"	d
glPointAlongPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	p	signature:(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY)
glPointParameterf	gfx/glsym/glsym_gl.h	1122;"	d
glPointParameterf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfARB	gfx/glsym/glsym_gl.h	1399;"	d
glPointParameterfARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfv	gfx/glsym/glsym_gl.h	1123;"	d
glPointParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvARB	gfx/glsym/glsym_gl.h	1400;"	d
glPointParameterfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameteri	gfx/glsym/glsym_gl.h	1124;"	d
glPointParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriv	gfx/glsym/glsym_gl.h	1125;"	d
glPointParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPointParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPointParameterxvOES	gfx/glsym/glsym_gl.h	1988;"	d
glPointSize	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glPointSize( GLfloat size );$/;"	p	signature:( GLfloat size )
glPointSizex	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glPointSizex( GLfixed size );$/;"	p	signature:( GLfixed size )
glPointSizexOES	gfx/glsym/glsym_gl.h	1989;"	d
glPollAsyncSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glPollInstrumentsSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *marker_p);$/;"	p	signature:(GLint *marker_p)
glPolygonOffset	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glPolygonOffset( GLfloat factor, GLfloat units );$/;"	p	signature:( GLfloat factor, GLfloat units )
glPolygonOffsetEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat factor, GLfloat bias);$/;"	p	signature:(GLfloat factor, GLfloat bias)
glPolygonOffsetx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glPolygonOffsetx( GLfixed factor, GLfixed units );$/;"	p	signature:( GLfixed factor, GLfixed units )
glPolygonOffsetxOES	gfx/glsym/glsym_gl.h	1990;"	d
glPopDebugGroup	gfx/glsym/glsym_es2.h	75;"	d
glPopDebugGroup	gfx/glsym/glsym_gl.h	1854;"	d
glPopDebugGroup	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPopDebugGroup (void);$/;"	p	signature:(void)
glPresentFrameDualFillNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)
glPresentFrameKeyedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)
glPrimitiveRestartIndex	gfx/glsym/glsym_gl.h	1343;"	d
glPrimitiveRestartIndex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartIndexNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	p	signature:(void)
glPrioritizeTexturesEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	p	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)
glPrioritizeTexturesxOES	gfx/glsym/glsym_gl.h	1991;"	d
glProgramBinary	gfx/glsym/glsym_gl.h	1730;"	d
glProgramBinary	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	p	signature:(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length)
glProgramBinaryOES	gfx/glsym/glsym_es2.h	56;"	d
glProgramBufferParametersIivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params)
glProgramBufferParametersIuivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIuivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params)
glProgramBufferParametersfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramBufferParametersfvNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params)
glProgramEnvParameter4dARB	gfx/glsym/glsym_gl.h	1475;"	d
glProgramEnvParameter4dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramEnvParameter4dvARB	gfx/glsym/glsym_gl.h	1476;"	d
glProgramEnvParameter4dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramEnvParameter4fARB	gfx/glsym/glsym_gl.h	1477;"	d
glProgramEnvParameter4fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramEnvParameter4fvARB	gfx/glsym/glsym_gl.h	1478;"	d
glProgramEnvParameter4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramEnvParameterI4iNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramEnvParameterI4ivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramEnvParameterI4uiNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramEnvParameterI4uivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramEnvParameters4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramEnvParametersI4ivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramEnvParametersI4uivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramLocalParameter4dARB	gfx/glsym/glsym_gl.h	1479;"	d
glProgramLocalParameter4dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramLocalParameter4dvARB	gfx/glsym/glsym_gl.h	1480;"	d
glProgramLocalParameter4dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramLocalParameter4fARB	gfx/glsym/glsym_gl.h	1481;"	d
glProgramLocalParameter4fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramLocalParameter4fvARB	gfx/glsym/glsym_gl.h	1482;"	d
glProgramLocalParameter4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramLocalParameterI4iNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramLocalParameterI4ivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramLocalParameterI4uiNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramLocalParameterI4uivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramLocalParameters4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramLocalParametersI4ivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramLocalParametersI4uivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramNamedParameter4dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramNamedParameter4dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v)
glProgramNamedParameter4fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramNamedParameter4fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v)
glProgramParameter4dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramParameter4dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *v)
glProgramParameter4fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramParameter4fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *v)
glProgramParameteri	gfx/glsym/glsym_gl.h	1731;"	d
glProgramParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriARB	gfx/glsym/glsym_gl.h	1579;"	d
glProgramParameteriARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameters4dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLdouble *v)
glProgramParameters4fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *v)
glProgramStringARB	gfx/glsym/glsym_gl.h	1471;"	d
glProgramStringARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	p	signature:(GLenum target, GLenum format, GLsizei len, const GLvoid *string)
glProgramSubroutineParametersuivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLsizei count, const GLuint *params)
glProgramUniform1d	gfx/glsym/glsym_gl.h	1744;"	d
glProgramUniform1d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0)
glProgramUniform1dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	p	signature:(GLuint program, GLint location, GLdouble x)
glProgramUniform1dv	gfx/glsym/glsym_gl.h	1745;"	d
glProgramUniform1dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1f	gfx/glsym/glsym_gl.h	1742;"	d
glProgramUniform1f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fv	gfx/glsym/glsym_gl.h	1743;"	d
glProgramUniform1fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1i	gfx/glsym/glsym_gl.h	1740;"	d
glProgramUniform1i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x)
glProgramUniform1i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform1iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1iv	gfx/glsym/glsym_gl.h	1741;"	d
glProgramUniform1iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ui	gfx/glsym/glsym_gl.h	1746;"	d
glProgramUniform1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x)
glProgramUniform1ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform1uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1uiv	gfx/glsym/glsym_gl.h	1747;"	d
glProgramUniform1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform1uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2d	gfx/glsym/glsym_gl.h	1752;"	d
glProgramUniform2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1)
glProgramUniform2dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y)
glProgramUniform2dv	gfx/glsym/glsym_gl.h	1753;"	d
glProgramUniform2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2f	gfx/glsym/glsym_gl.h	1750;"	d
glProgramUniform2f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fv	gfx/glsym/glsym_gl.h	1751;"	d
glProgramUniform2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2i	gfx/glsym/glsym_gl.h	1748;"	d
glProgramUniform2i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y)
glProgramUniform2i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform2iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2iv	gfx/glsym/glsym_gl.h	1749;"	d
glProgramUniform2iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ui	gfx/glsym/glsym_gl.h	1754;"	d
glProgramUniform2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y)
glProgramUniform2ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform2uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2uiv	gfx/glsym/glsym_gl.h	1755;"	d
glProgramUniform2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3d	gfx/glsym/glsym_gl.h	1760;"	d
glProgramUniform3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2)
glProgramUniform3dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
glProgramUniform3dv	gfx/glsym/glsym_gl.h	1761;"	d
glProgramUniform3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3f	gfx/glsym/glsym_gl.h	1758;"	d
glProgramUniform3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fv	gfx/glsym/glsym_gl.h	1759;"	d
glProgramUniform3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3i	gfx/glsym/glsym_gl.h	1756;"	d
glProgramUniform3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glProgramUniform3i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform3iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3iv	gfx/glsym/glsym_gl.h	1757;"	d
glProgramUniform3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ui	gfx/glsym/glsym_gl.h	1762;"	d
glProgramUniform3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glProgramUniform3ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform3uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3uiv	gfx/glsym/glsym_gl.h	1763;"	d
glProgramUniform3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4d	gfx/glsym/glsym_gl.h	1768;"	d
glProgramUniform4d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3)
glProgramUniform4dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramUniform4dv	gfx/glsym/glsym_gl.h	1769;"	d
glProgramUniform4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4f	gfx/glsym/glsym_gl.h	1766;"	d
glProgramUniform4f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fv	gfx/glsym/glsym_gl.h	1767;"	d
glProgramUniform4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4i	gfx/glsym/glsym_gl.h	1764;"	d
glProgramUniform4i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glProgramUniform4i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform4iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4iv	gfx/glsym/glsym_gl.h	1765;"	d
glProgramUniform4iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ui	gfx/glsym/glsym_gl.h	1770;"	d
glProgramUniform4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glProgramUniform4ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform4uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4uiv	gfx/glsym/glsym_gl.h	1771;"	d
glProgramUniform4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniformHandleui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value);$/;"	p	signature:(GLuint program, GLint location, GLuint64 value)
glProgramUniformHandleui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *values)
glProgramUniformMatrix2dv	gfx/glsym/glsym_gl.h	1775;"	d
glProgramUniformMatrix2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2fv	gfx/glsym/glsym_gl.h	1772;"	d
glProgramUniformMatrix2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3dv	gfx/glsym/glsym_gl.h	1784;"	d
glProgramUniformMatrix2x3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3fv	gfx/glsym/glsym_gl.h	1778;"	d
glProgramUniformMatrix2x3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4dv	gfx/glsym/glsym_gl.h	1786;"	d
glProgramUniformMatrix2x4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4fv	gfx/glsym/glsym_gl.h	1780;"	d
glProgramUniformMatrix2x4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3dv	gfx/glsym/glsym_gl.h	1776;"	d
glProgramUniformMatrix3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3fv	gfx/glsym/glsym_gl.h	1773;"	d
glProgramUniformMatrix3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2dv	gfx/glsym/glsym_gl.h	1785;"	d
glProgramUniformMatrix3x2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2fv	gfx/glsym/glsym_gl.h	1779;"	d
glProgramUniformMatrix3x2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4dv	gfx/glsym/glsym_gl.h	1788;"	d
glProgramUniformMatrix3x4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4fv	gfx/glsym/glsym_gl.h	1782;"	d
glProgramUniformMatrix3x4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4dv	gfx/glsym/glsym_gl.h	1777;"	d
glProgramUniformMatrix4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4fv	gfx/glsym/glsym_gl.h	1774;"	d
glProgramUniformMatrix4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2dv	gfx/glsym/glsym_gl.h	1787;"	d
glProgramUniformMatrix4x2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2fv	gfx/glsym/glsym_gl.h	1781;"	d
glProgramUniformMatrix4x2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3dv	gfx/glsym/glsym_gl.h	1789;"	d
glProgramUniformMatrix4x3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3fv	gfx/glsym/glsym_gl.h	1783;"	d
glProgramUniformMatrix4x3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT value)
glProgramUniformui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramVertexLimitNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProgramVertexLimitNV (GLenum target, GLint limit);$/;"	p	signature:(GLenum target, GLint limit)
glProvokingVertex	gfx/glsym/glsym_gl.h	1603;"	d
glProvokingVertex	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	p	signature:(GLenum mode)
glProvokingVertexEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glProvokingVertexEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glPushClientAttribDefaultEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glPushDebugGroup	gfx/glsym/glsym_es2.h	74;"	d
glPushDebugGroup	gfx/glsym/glsym_gl.h	1853;"	d
glPushDebugGroup	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	p	signature:(GLenum source, GLuint id, GLsizei length, const GLchar *message)
glQueryCounter	gfx/glsym/glsym_gl.h	1642;"	d
glQueryCounter	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	p	signature:(GLuint id, GLenum target)
glQueryMatrixxOES	gfx/glsym/glsym_gl.h	2030;"	d
glRasterPos2xOES	gfx/glsym/glsym_gl.h	1992;"	d
glRasterPos2xvOES	gfx/glsym/glsym_gl.h	1995;"	d
glRasterPos3xOES	gfx/glsym/glsym_gl.h	1993;"	d
glRasterPos3xvOES	gfx/glsym/glsym_gl.h	1996;"	d
glRasterPos4xOES	gfx/glsym/glsym_gl.h	1994;"	d
glRasterPos4xvOES	gfx/glsym/glsym_gl.h	1997;"	d
glReadInstrumentsSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glReadPixels	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glReadPixels( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels );$/;"	p	signature:( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels )
glReadnPixelsARB	gfx/glsym/glsym_gl.h	1831;"	d
glReadnPixelsARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data)
glRectxOES	gfx/glsym/glsym_gl.h	1998;"	d
glRectxvOES	gfx/glsym/glsym_gl.h	1999;"	d
glReferencePlaneSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *equation);$/;"	p	signature:(const GLdouble *equation)
glReleaseShaderCompiler	gfx/glsym/glsym_gl.h	1724;"	d
glReleaseShaderCompiler	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	p	signature:(void)
glRenderbufferStorage	gfx/gl.c	177;"	d	file:
glRenderbufferStorage	gfx/glsym/glsym_gl.h	1563;"	d
glRenderbufferStorage	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisample	gfx/glsym/glsym_gl.h	1577;"	d
glRenderbufferStorageMultisample	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleCoverageNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageOES	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glRenderbufferStorageOES( GLenum, GLenum, GLsizei, GLsizei );$/;"	p	signature:( GLenum, GLenum, GLsizei, GLsizei )
glReplacementCodePointerSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid* *pointer)
glReplacementCodeubSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte code);$/;"	p	signature:(GLubyte code)
glReplacementCodeubvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *code);$/;"	p	signature:(const GLubyte *code)
glReplacementCodeuiColor3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *v)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiColor4ubVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4ubVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLubyte *c, const GLfloat *v)
glReplacementCodeuiNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint code);$/;"	p	signature:(GLuint code)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *v)
glReplacementCodeuiVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *v)
glReplacementCodeuivSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *code);$/;"	p	signature:(const GLuint *code)
glReplacementCodeusSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort code);$/;"	p	signature:(GLushort code)
glReplacementCodeusvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *code);$/;"	p	signature:(const GLushort *code)
glRequestResidentProgramsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glResetHistogram	gfx/glsym/glsym_gl.h	1071;"	d
glResetHistogram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResetHistogram (GLenum target);$/;"	p	signature:(GLenum target)
glResetHistogramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResetMinmax	gfx/glsym/glsym_gl.h	1072;"	d
glResetMinmax	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResetMinmax (GLenum target);$/;"	p	signature:(GLenum target)
glResetMinmaxEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResizeBuffersMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	p	signature:(void)
glResumeTransformFeedback	gfx/glsym/glsym_gl.h	1718;"	d
glResumeTransformFeedback	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	p	signature:(void)
glResumeTransformFeedbackNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glResumeTransformFeedbackNV (void);$/;"	p	signature:(void)
glRotatef	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glRotatef( GLfloat angle, GLfloat x, GLfloat y, GLfloat z );$/;"	p	signature:( GLfloat angle, GLfloat x, GLfloat y, GLfloat z )
glRotatex	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glRotatex( GLfixed angle, GLfixed x, GLfixed y, GLfixed z );$/;"	p	signature:( GLfixed angle, GLfixed x, GLfixed y, GLfixed z )
glRotatexOES	gfx/glsym/glsym_gl.h	2000;"	d
glSampleCoverage	gfx/glsym/glsym_gl.h	1074;"	d
glSampleCoverage	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);$/;"	p	signature:(GLfloat value, GLboolean invert)
glSampleCoverage	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glSampleCoverage( GLclampf value, GLboolean invert );$/;"	p	signature:( GLclampf value, GLboolean invert )
glSampleCoverageARB	gfx/glsym/glsym_gl.h	1391;"	d
glSampleCoverageARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLfloat value, GLboolean invert);$/;"	p	signature:(GLfloat value, GLboolean invert)
glSampleCoverageOES	gfx/glsym/glsym_gl.h	2001;"	d
glSampleCoveragex	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glSampleCoveragex( GLclampx value, GLboolean invert );$/;"	p	signature:( GLclampx value, GLboolean invert )
glSampleMapATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint interp, GLenum swizzle)
glSampleMaskEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaskIndexedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleMaskIndexedNV (GLuint index, GLbitfield mask);$/;"	p	signature:(GLuint index, GLbitfield mask)
glSampleMaskSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaski	gfx/glsym/glsym_gl.h	1614;"	d
glSampleMaski	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSampleMaski (GLuint index, GLbitfield mask);$/;"	p	signature:(GLuint index, GLbitfield mask)
glSamplePatternEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplePatternSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplerParameterIiv	gfx/glsym/glsym_gl.h	1636;"	d
glSamplerParameterIiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glSamplerParameterIuiv	gfx/glsym/glsym_gl.h	1637;"	d
glSamplerParameterIuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLuint *param)
glSamplerParameterf	gfx/glsym/glsym_gl.h	1634;"	d
glSamplerParameterf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat param)
glSamplerParameterfv	gfx/glsym/glsym_gl.h	1635;"	d
glSamplerParameterfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLfloat *param)
glSamplerParameteri	gfx/glsym/glsym_gl.h	1632;"	d
glSamplerParameteri	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint param)
glSamplerParameteriv	gfx/glsym/glsym_gl.h	1633;"	d
glSamplerParameteriv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glScalef	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glScalef( GLfloat x, GLfloat y, GLfloat z );$/;"	p	signature:( GLfloat x, GLfloat y, GLfloat z )
glScalex	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glScalex( GLfixed x, GLfixed y, GLfixed z );$/;"	p	signature:( GLfixed x, GLfixed y, GLfixed z )
glScalexOES	gfx/glsym/glsym_gl.h	2002;"	d
glScissor	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glScissor( GLint x, GLint y, GLsizei width, GLsizei height );$/;"	p	signature:( GLint x, GLint y, GLsizei width, GLsizei height )
glScissorArrayv	gfx/glsym/glsym_gl.h	1805;"	d
glScissorArrayv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLint *v)
glScissorIndexed	gfx/glsym/glsym_gl.h	1806;"	d
glScissorIndexed	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)
glScissorIndexedv	gfx/glsym/glsym_gl.h	1807;"	d
glScissorIndexedv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glSecondaryColor3b	gfx/glsym/glsym_gl.h	1131;"	d
glSecondaryColor3b	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bv	gfx/glsym/glsym_gl.h	1132;"	d
glSecondaryColor3bv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3bvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3d	gfx/glsym/glsym_gl.h	1133;"	d
glSecondaryColor3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dv	gfx/glsym/glsym_gl.h	1134;"	d
glSecondaryColor3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3f	gfx/glsym/glsym_gl.h	1135;"	d
glSecondaryColor3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fv	gfx/glsym/glsym_gl.h	1136;"	d
glSecondaryColor3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glSecondaryColor3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glSecondaryColor3i	gfx/glsym/glsym_gl.h	1137;"	d
glSecondaryColor3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iv	gfx/glsym/glsym_gl.h	1138;"	d
glSecondaryColor3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3s	gfx/glsym/glsym_gl.h	1139;"	d
glSecondaryColor3s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sv	gfx/glsym/glsym_gl.h	1140;"	d
glSecondaryColor3sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3svEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3ub	gfx/glsym/glsym_gl.h	1141;"	d
glSecondaryColor3ub	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubv	gfx/glsym/glsym_gl.h	1142;"	d
glSecondaryColor3ubv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ubvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ui	gfx/glsym/glsym_gl.h	1143;"	d
glSecondaryColor3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiv	gfx/glsym/glsym_gl.h	1144;"	d
glSecondaryColor3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3us	gfx/glsym/glsym_gl.h	1145;"	d
glSecondaryColor3us	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usv	gfx/glsym/glsym_gl.h	1146;"	d
glSecondaryColor3usv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColor3usvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColorFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glSecondaryColorP3ui	gfx/glsym/glsym_gl.h	1673;"	d
glSecondaryColorP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glSecondaryColorP3uiv	gfx/glsym/glsym_gl.h	1674;"	d
glSecondaryColorP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glSecondaryColorPointer	gfx/glsym/glsym_gl.h	1147;"	d
glSecondaryColorPointer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glSecondaryColorPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glSecondaryColorPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glSelectPerfMonitorCountersAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	p	signature:(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)
glSeparableFilter2D	gfx/glsym/glsym_gl.h	1062;"	d
glSeparableFilter2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
glSeparableFilter2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
glSetFenceAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glSetFenceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	p	signature:(GLuint fence, GLenum condition)
glSetFenceNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glSetFenceNV( GLuint fence, GLenum condition );$/;"	p	signature:( GLuint fence, GLenum condition )
glSetFragmentShaderConstantATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value);$/;"	p	signature:(GLuint dst, const GLfloat *value)
glSetInvariantEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint id, GLenum type, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, const GLvoid *addr)
glSetLocalConstantEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint id, GLenum type, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, const GLvoid *addr)
glSetMultisamplefvAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, const GLfloat *val)
glShaderBinary	gfx/glsym/glsym_gl.h	1725;"	d
glShaderBinary	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	p	signature:(GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length)
glShaderOp1EXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1)
glShaderOp2EXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2)
glShaderOp3EXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)
glShaderSource	gfx/glsym/glsym_gl.h	1217;"	d
glShaderSource	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length)
glShaderSourceARB	gfx/glsym/glsym_gl.h	1517;"	d
glShaderSourceARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	p	signature:(GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length)
glShaderStorageBlockBinding	gfx/glsym/glsym_gl.h	1888;"	d
glShaderStorageBlockBinding	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	p	signature:(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding)
glSharpenTexFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glSpriteParameterfSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glSpriteParameterfvSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glSpriteParameteriSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glSpriteParameterivSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glStartInstrumentsSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	p	signature:(void)
glStencilClearTagEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	p	signature:(GLsizei stencilTagBits, GLuint stencilClearTag)
glStencilFillPathInstancedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues)
glStencilFillPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);$/;"	p	signature:(GLuint path, GLenum fillMode, GLuint mask)
glStencilFuncSeparate	gfx/glsym/glsym_gl.h	1186;"	d
glStencilFuncSeparate	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum face, GLenum func, GLint ref, GLuint mask)
glStencilFuncSeparateATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	p	signature:(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
glStencilMaskSeparate	gfx/glsym/glsym_gl.h	1187;"	d
glStencilMaskSeparate	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	signature:(GLenum face, GLuint mask)
glStencilOpSeparate	gfx/glsym/glsym_gl.h	1185;"	d
glStencilOpSeparate	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStencilOpSeparateATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStencilOpValueAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilOpValueAMD (GLenum face, GLuint value);$/;"	p	signature:(GLenum face, GLuint value)
glStencilStrokePathInstancedNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues)
glStencilStrokePathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);$/;"	p	signature:(GLuint path, GLint reference, GLuint mask)
glStopInstrumentsSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glStringMarkerGREMEDY	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei len, const GLvoid *string);$/;"	p	signature:(GLsizei len, const GLvoid *string)
glSwizzleEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
glTagSampleBufferSGIX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	p	signature:(void)
glTangent3bEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	p	signature:(GLbyte tx, GLbyte ty, GLbyte tz)
glTangent3bvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glTangent3dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	p	signature:(GLdouble tx, GLdouble ty, GLdouble tz)
glTangent3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTangent3fEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	p	signature:(GLfloat tx, GLfloat ty, GLfloat tz)
glTangent3fvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTangent3iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint tx, GLint ty, GLint tz);$/;"	p	signature:(GLint tx, GLint ty, GLint tz)
glTangent3ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glTangent3sEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);$/;"	p	signature:(GLshort tx, GLshort ty, GLshort tz)
glTangent3svEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTangentPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glTbufferMask3DFX	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint mask);$/;"	p	signature:(GLuint mask)
glTessellationFactorAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTessellationFactorAMD (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glTessellationModeAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTessellationModeAMD (GLenum mode);$/;"	p	signature:(GLenum mode)
glTestFenceAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestFenceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestFenceNV	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glTestFenceNV( GLuint fence );$/;"	p	signature:( GLuint fence )
glTestObjectAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum object, GLuint name);$/;"	p	signature:(GLenum object, GLuint name)
glTexBuffer	gfx/glsym/glsym_gl.h	1342;"	d
glTexBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferARB	gfx/glsym/glsym_gl.h	1586;"	d
glTexBufferARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferRange	gfx/glsym/glsym_gl.h	1889;"	d
glTexBufferRange	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTexBumpParameterfvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum pname, const GLfloat *param);$/;"	p	signature:(GLenum pname, const GLfloat *param)
glTexBumpParameterivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum pname, const GLint *param);$/;"	p	signature:(GLenum pname, const GLint *param)
glTexCoord1bOES	gfx/glsym/glsym_gl.h	1906;"	d
glTexCoord1bvOES	gfx/glsym/glsym_gl.h	1907;"	d
glTexCoord1hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV s);$/;"	p	signature:(GLhalfNV s)
glTexCoord1hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord1xOES	gfx/glsym/glsym_gl.h	2003;"	d
glTexCoord1xvOES	gfx/glsym/glsym_gl.h	2007;"	d
glTexCoord2bOES	gfx/glsym/glsym_gl.h	1908;"	d
glTexCoord2bvOES	gfx/glsym/glsym_gl.h	1909;"	d
glTexCoord2fColor3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *v)
glTexCoord2fColor4fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord2fColor4ubVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4ubVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLubyte *c, const GLfloat *v)
glTexCoord2fNormal3fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fNormal3fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glTexCoord2fVertex3fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fVertex3fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord2hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLhalfNV s, GLhalfNV t)
glTexCoord2hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord2xOES	gfx/glsym/glsym_gl.h	2004;"	d
glTexCoord2xvOES	gfx/glsym/glsym_gl.h	2008;"	d
glTexCoord3bOES	gfx/glsym/glsym_gl.h	1910;"	d
glTexCoord3bvOES	gfx/glsym/glsym_gl.h	1911;"	d
glTexCoord3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r)
glTexCoord3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord3xOES	gfx/glsym/glsym_gl.h	2005;"	d
glTexCoord3xvOES	gfx/glsym/glsym_gl.h	2009;"	d
glTexCoord4bOES	gfx/glsym/glsym_gl.h	1912;"	d
glTexCoord4bvOES	gfx/glsym/glsym_gl.h	1913;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fColor4fNormal3fVertex4fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord4fVertex4fSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fVertex4fvSUN	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord4hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glTexCoord4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord4xOES	gfx/glsym/glsym_gl.h	2006;"	d
glTexCoord4xvOES	gfx/glsym/glsym_gl.h	2010;"	d
glTexCoordFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glTexCoordP1ui	gfx/glsym/glsym_gl.h	1651;"	d
glTexCoordP1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP1ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP1uiv	gfx/glsym/glsym_gl.h	1652;"	d
glTexCoordP1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP1uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP2ui	gfx/glsym/glsym_gl.h	1653;"	d
glTexCoordP2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP2ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP2uiv	gfx/glsym/glsym_gl.h	1654;"	d
glTexCoordP2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP2uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP3ui	gfx/glsym/glsym_gl.h	1655;"	d
glTexCoordP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP3uiv	gfx/glsym/glsym_gl.h	1656;"	d
glTexCoordP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP4ui	gfx/glsym/glsym_gl.h	1657;"	d
glTexCoordP4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP4ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP4uiv	gfx/glsym/glsym_gl.h	1658;"	d
glTexCoordP4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordP4uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordPointer	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexCoordPointer( GLint size, GLenum type, GLsizei stride, const GLvoid *pointer );$/;"	p	signature:( GLint size, GLenum type, GLsizei stride, const GLvoid *pointer )
glTexCoordPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glTexCoordPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glTexCoordPointervINTEL	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glTexEnvf	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexEnvf( GLenum target, GLenum pname, GLfloat param );$/;"	p	signature:( GLenum target, GLenum pname, GLfloat param )
glTexEnvfv	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexEnvfv( GLenum target, GLenum pname, const GLfloat *params );$/;"	p	signature:( GLenum target, GLenum pname, const GLfloat *params )
glTexEnvx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexEnvx( GLenum target, GLenum pname, GLfixed param );$/;"	p	signature:( GLenum target, GLenum pname, GLfixed param )
glTexEnvxOES	gfx/glsym/glsym_gl.h	2011;"	d
glTexEnvxv	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexEnvxv( GLenum target, GLenum pname, const GLfixed *params );$/;"	p	signature:( GLenum target, GLenum pname, const GLfixed *params )
glTexEnvxvOES	gfx/glsym/glsym_gl.h	2012;"	d
glTexFilterFuncSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights)
glTexGenxOES	gfx/glsym/glsym_gl.h	2013;"	d
glTexGenxvOES	gfx/glsym/glsym_gl.h	2014;"	d
glTexImage2D	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexImage2D( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels );$/;"	p	signature:( GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels )
glTexImage2D	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glTexImage2D( GLenum target, GLint level, GLint internalFormat,$/;"	f	signature:( GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels )
glTexImage2DMultisample	gfx/glsym/glsym_gl.h	1611;"	d
glTexImage2DMultisample	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTexImage2DMultisampleCoverageNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTexImage3D	gfx/glsym/glsym_gl.h	1038;"	d
glTexImage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage3DMultisample	gfx/glsym/glsym_gl.h	1612;"	d
glTexImage3DMultisample	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTexImage3DMultisampleCoverageNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTexImage3DOES	gfx/glsym/glsym_es2.h	60;"	d
glTexImage4DSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexParameterIiv	gfx/glsym/glsym_gl.h	1331;"	d
glTexParameterIiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIuiv	gfx/glsym/glsym_gl.h	1332;"	d
glTexParameterIuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterf	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexParameterf( GLenum target, GLenum pname, GLfloat param );$/;"	p	signature:( GLenum target, GLenum pname, GLfloat param )
glTexParameterfv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glTexParameterfv( GLenum target, GLenum pname, const GLfloat* params );$/;"	p	signature:( GLenum target, GLenum pname, const GLfloat* params )
glTexParameteri	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glTexParameteri( GLenum target, GLenum pname, GLint param );$/;"	p	signature:( GLenum target, GLenum pname, GLint param )
glTexParameteri	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glTexParameteri( GLenum target, GLenum pname, GLint param )$/;"	f	signature:( GLenum target, GLenum pname, GLint param )
glTexParameteriv	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glTexParameteriv( GLenum target, GLenum pname, const GLint* params );$/;"	p	signature:( GLenum target, GLenum pname, const GLint* params )
glTexParameterx	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexParameterx( GLenum target, GLenum pname, GLfixed param );$/;"	p	signature:( GLenum target, GLenum pname, GLfixed param )
glTexParameterxOES	gfx/glsym/glsym_gl.h	2015;"	d
glTexParameterxvOES	gfx/glsym/glsym_gl.h	2016;"	d
glTexRenderbufferNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexRenderbufferNV (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glTexStorage1D	gfx/glsym/glsym_gl.h	1846;"	d
glTexStorage1D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTexStorage2D	gfx/glsym/glsym_gl.h	1847;"	d
glTexStorage2D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTexStorage2DMultisample	gfx/glsym/glsym_gl.h	1890;"	d
glTexStorage2DMultisample	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTexStorage3D	gfx/glsym/glsym_gl.h	1848;"	d
glTexStorage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTexStorage3DMultisample	gfx/glsym/glsym_gl.h	1891;"	d
glTexStorage3DMultisample	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTexStorageSparseAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	p	signature:(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags)
glTexSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage2D	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glTexSubImage2D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels );$/;"	p	signature:( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels )
glTexSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3D	gfx/glsym/glsym_gl.h	1039;"	d
glTexSubImage3D	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3D	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glTexSubImage3D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels );$/;"	p	signature:( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels )
glTexSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3DOES	gfx/glsym/glsym_es2.h	61;"	d
glTexSubImage4DSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels)
glTextureBarrierNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	p	signature:(void)
glTextureBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer)
glTextureBufferRangeEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTextureColorMaskSGIS	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glTextureImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureImage2DMultisampleCoverageNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTextureImage2DMultisampleNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTextureImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureImage3DMultisampleCoverageNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTextureImage3DMultisampleNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTextureLightEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum pname);$/;"	p	signature:(GLenum pname)
glTextureMaterialEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glTextureNormalEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glTextureParameterIivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureParameterIuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLuint *params)
glTextureParameterfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat param)
glTextureParameterfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLfloat *params)
glTextureParameteriEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint param)
glTextureParameterivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureRangeAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureRangeAPPLE (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	p	signature:(GLenum target, GLsizei length, const GLvoid *pointer)
glTextureReferenceSCE	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI void APIENTRY glTextureReferenceSCE( GLenum target, GLuint levels, GLuint baseWidth, GLuint baseHeight, GLuint baseDepth, GLenum internalFormat, GLuint pitch, GLintptr offset );$/;"	p	signature:( GLenum target, GLuint levels, GLuint baseWidth, GLuint baseHeight, GLuint baseDepth, GLenum internalFormat, GLuint pitch, GLintptr offset )
glTextureReferenceSCE	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLAPI void APIENTRY glTextureReferenceSCE( GLenum target, GLuint levels,$/;"	f	signature:( GLenum target, GLuint levels, GLuint baseWidth, GLuint baseHeight, GLuint baseDepth, GLenum internalFormat, GLuint pitch, GLintptr offset )
glTextureRenderbufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLuint texture, GLenum target, GLuint renderbuffer)
glTextureStorage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTextureStorage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTextureStorage2DMultisampleEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTextureStorage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTextureStorage3DMultisampleEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTextureStorageSparseAMD	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags)
glTextureSubImage1DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glTextureSubImage2DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTextureSubImage3DEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTextureView	gfx/glsym/glsym_gl.h	1864;"	d
glTextureView	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	p	signature:(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)
glTrackMatrixNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	p	signature:(GLenum target, GLuint address, GLenum matrix, GLenum transform)
glTransformFeedbackAttribsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum bufferMode);$/;"	p	signature:(GLuint count, const GLint *attribs, GLenum bufferMode)
glTransformFeedbackStreamAttribsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	p	signature:(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode)
glTransformFeedbackVaryings	gfx/glsym/glsym_gl.h	1292;"	d
glTransformFeedbackVaryings	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode)
glTransformFeedbackVaryingsEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode)
glTransformFeedbackVaryingsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode)
glTransformPathNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues)
glTranslatexOES	gfx/glsym/glsym_gl.h	2017;"	d
glType	ps3/rgl/include/Cg/CgCommon.h	/^   int glType;$/;"	m	struct:CgRuntimeParameter	access:public
glUniform1d	gfx/glsym/glsym_gl.h	1685;"	d
glUniform1d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	p	signature:(GLint location, GLdouble x)
glUniform1dv	gfx/glsym/glsym_gl.h	1689;"	d
glUniform1dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform1f	gfx/glsym/glsym_gl.h	1219;"	d
glUniform1f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1fARB	gfx/glsym/glsym_gl.h	1524;"	d
glUniform1fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1fARB (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1fv	gfx/glsym/glsym_gl.h	1227;"	d
glUniform1fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1fvARB	gfx/glsym/glsym_gl.h	1532;"	d
glUniform1fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1i	gfx/glsym/glsym_gl.h	1223;"	d
glUniform1i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	p	signature:(GLint location, GLint64EXT x)
glUniform1i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform1iARB	gfx/glsym/glsym_gl.h	1528;"	d
glUniform1iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1iARB (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1iv	gfx/glsym/glsym_gl.h	1231;"	d
glUniform1iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1ivARB	gfx/glsym/glsym_gl.h	1536;"	d
glUniform1ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1ui	gfx/glsym/glsym_gl.h	1323;"	d
glUniform1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	p	signature:(GLint location, GLuint64EXT x)
glUniform1ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform1uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1uiEXT (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1uiv	gfx/glsym/glsym_gl.h	1327;"	d
glUniform1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform1uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2d	gfx/glsym/glsym_gl.h	1686;"	d
glUniform2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y)
glUniform2dv	gfx/glsym/glsym_gl.h	1690;"	d
glUniform2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform2f	gfx/glsym/glsym_gl.h	1220;"	d
glUniform2f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2fARB	gfx/glsym/glsym_gl.h	1525;"	d
glUniform2fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2fv	gfx/glsym/glsym_gl.h	1228;"	d
glUniform2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2fvARB	gfx/glsym/glsym_gl.h	1533;"	d
glUniform2fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2i	gfx/glsym/glsym_gl.h	1224;"	d
glUniform2i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y)
glUniform2i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform2iARB	gfx/glsym/glsym_gl.h	1529;"	d
glUniform2iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2iARB (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2iv	gfx/glsym/glsym_gl.h	1232;"	d
glUniform2iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2ivARB	gfx/glsym/glsym_gl.h	1537;"	d
glUniform2ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2ui	gfx/glsym/glsym_gl.h	1324;"	d
glUniform2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y)
glUniform2ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform2uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2uiv	gfx/glsym/glsym_gl.h	1328;"	d
glUniform2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3d	gfx/glsym/glsym_gl.h	1687;"	d
glUniform3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z)
glUniform3dv	gfx/glsym/glsym_gl.h	1691;"	d
glUniform3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform3f	gfx/glsym/glsym_gl.h	1221;"	d
glUniform3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3fARB	gfx/glsym/glsym_gl.h	1526;"	d
glUniform3fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3fv	gfx/glsym/glsym_gl.h	1229;"	d
glUniform3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3fvARB	gfx/glsym/glsym_gl.h	1534;"	d
glUniform3fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3i	gfx/glsym/glsym_gl.h	1225;"	d
glUniform3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glUniform3i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform3iARB	gfx/glsym/glsym_gl.h	1530;"	d
glUniform3iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3iv	gfx/glsym/glsym_gl.h	1233;"	d
glUniform3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3ivARB	gfx/glsym/glsym_gl.h	1538;"	d
glUniform3ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3ui	gfx/glsym/glsym_gl.h	1325;"	d
glUniform3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glUniform3ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform3uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3uiv	gfx/glsym/glsym_gl.h	1329;"	d
glUniform3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4d	gfx/glsym/glsym_gl.h	1688;"	d
glUniform4d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glUniform4dv	gfx/glsym/glsym_gl.h	1692;"	d
glUniform4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform4f	gfx/glsym/glsym_gl.h	1222;"	d
glUniform4f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4fARB	gfx/glsym/glsym_gl.h	1527;"	d
glUniform4fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4fv	gfx/glsym/glsym_gl.h	1230;"	d
glUniform4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4fvARB	gfx/glsym/glsym_gl.h	1535;"	d
glUniform4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4i	gfx/glsym/glsym_gl.h	1226;"	d
glUniform4i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glUniform4i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform4iARB	gfx/glsym/glsym_gl.h	1531;"	d
glUniform4iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4iv	gfx/glsym/glsym_gl.h	1234;"	d
glUniform4iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4ivARB	gfx/glsym/glsym_gl.h	1539;"	d
glUniform4ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4ui	gfx/glsym/glsym_gl.h	1326;"	d
glUniform4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glUniform4ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform4uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4uiv	gfx/glsym/glsym_gl.h	1330;"	d
glUniform4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniformBlockBinding	gfx/glsym/glsym_gl.h	1597;"	d
glUniformBlockBinding	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
glUniformBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);$/;"	p	signature:(GLuint program, GLint location, GLuint buffer)
glUniformHandleui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformHandleui64NV (GLint location, GLuint64 value);$/;"	p	signature:(GLint location, GLuint64 value)
glUniformHandleui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniformMatrix2dv	gfx/glsym/glsym_gl.h	1693;"	d
glUniformMatrix2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2fv	gfx/glsym/glsym_gl.h	1235;"	d
glUniformMatrix2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2fvARB	gfx/glsym/glsym_gl.h	1540;"	d
glUniformMatrix2fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x3dv	gfx/glsym/glsym_gl.h	1696;"	d
glUniformMatrix2x3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x3fv	gfx/glsym/glsym_gl.h	1276;"	d
glUniformMatrix2x3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x4dv	gfx/glsym/glsym_gl.h	1697;"	d
glUniformMatrix2x4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x4fv	gfx/glsym/glsym_gl.h	1278;"	d
glUniformMatrix2x4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3dv	gfx/glsym/glsym_gl.h	1694;"	d
glUniformMatrix3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3fv	gfx/glsym/glsym_gl.h	1236;"	d
glUniformMatrix3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3fvARB	gfx/glsym/glsym_gl.h	1541;"	d
glUniformMatrix3fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x2dv	gfx/glsym/glsym_gl.h	1698;"	d
glUniformMatrix3x2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x2fv	gfx/glsym/glsym_gl.h	1277;"	d
glUniformMatrix3x2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x4dv	gfx/glsym/glsym_gl.h	1699;"	d
glUniformMatrix3x4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x4fv	gfx/glsym/glsym_gl.h	1280;"	d
glUniformMatrix3x4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4dv	gfx/glsym/glsym_gl.h	1695;"	d
glUniformMatrix4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4fv	gfx/glsym/glsym_gl.h	1237;"	d
glUniformMatrix4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4fvARB	gfx/glsym/glsym_gl.h	1542;"	d
glUniformMatrix4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x2dv	gfx/glsym/glsym_gl.h	1700;"	d
glUniformMatrix4x2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x2fv	gfx/glsym/glsym_gl.h	1279;"	d
glUniformMatrix4x2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x3dv	gfx/glsym/glsym_gl.h	1701;"	d
glUniformMatrix4x3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x3fv	gfx/glsym/glsym_gl.h	1281;"	d
glUniformMatrix4x3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformSubroutinesuiv	gfx/glsym/glsym_gl.h	1708;"	d
glUniformSubroutinesuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	p	signature:(GLenum shadertype, GLsizei count, const GLuint *indices)
glUniformui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	p	signature:(GLint location, GLuint64EXT value)
glUniformui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUnlockArraysEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	p	signature:(void)
glUnmapBuffer	gfx/gl_common.h	309;"	d
glUnmapBuffer	gfx/glsym/glsym_gl.h	1180;"	d
glUnmapBuffer	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapBuffer	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glUnmapBuffer( GLenum target );$/;"	p	signature:( GLenum target )
glUnmapBuffer	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLboolean APIENTRY glUnmapBuffer( GLenum target )$/;"	f	signature:( GLenum target )
glUnmapBufferARB	gfx/glsym/glsym_gl.h	1502;"	d
glUnmapBufferARB	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapBufferOES	gfx/glsym/glsym_es2.h	58;"	d
glUnmapBufferTextureReferenceRA	gfx/gl_common.h	/^extern GLboolean glUnmapBufferTextureReferenceRA( GLenum target );$/;"	p	signature:( GLenum target )
glUnmapBufferTextureReferenceRA	ps3/rgl/include/export/GLES/glext.h	/^   GLAPI GLboolean APIENTRY glUnmapBufferTextureReferenceRA( GLenum target );$/;"	p	signature:( GLenum target )
glUnmapBufferTextureReferenceRA	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI GLboolean APIENTRY glUnmapBufferTextureReferenceRA( GLenum target )$/;"	f	signature:( GLenum target )
glUnmapNamedBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUnmapObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUpdateObjectBufferATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	p	signature:(GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve)
glUseProgram	gfx/glsym/glsym_gl.h	1218;"	d
glUseProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	p	signature:(GLuint program)
glUseProgramObjectARB	gfx/glsym/glsym_gl.h	1522;"	d
glUseProgramObjectARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glUseProgramStages	gfx/glsym/glsym_gl.h	1732;"	d
glUseProgramStages	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p	signature:(GLuint pipeline, GLbitfield stages, GLuint program)
glUseShaderProgramEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	p	signature:(GLenum type, GLuint program)
glVDPAUFiniNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUFiniNV (void);$/;"	p	signature:(void)
glVDPAUGetSurfaceivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glVDPAUInitNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUInitNV (const GLvoid *vdpDevice, const GLvoid *getProcAddress);$/;"	p	signature:(const GLvoid *vdpDevice, const GLvoid *getProcAddress)
glVDPAUIsSurfaceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glVDPAUMapSurfacesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)
glVDPAURegisterOutputSurfaceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAURegisterVideoSurfaceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAUSurfaceAccessNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum access)
glVDPAUUnmapSurfacesNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces)
glVDPAUUnregisterSurfaceNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glValidateProgram	gfx/glsym/glsym_gl.h	1238;"	d
glValidateProgram	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	p	signature:(GLuint program)
glValidateProgramARB	gfx/glsym/glsym_gl.h	1523;"	d
glValidateProgramARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glValidateProgramPipeline	gfx/glsym/glsym_gl.h	1790;"	d
glValidateProgramPipeline	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glVariantArrayObjectATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glVariantPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, GLuint stride, const GLvoid *addr)
glVariantbvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint id, const GLbyte *addr);$/;"	p	signature:(GLuint id, const GLbyte *addr)
glVariantdvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint id, const GLdouble *addr);$/;"	p	signature:(GLuint id, const GLdouble *addr)
glVariantfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint id, const GLfloat *addr);$/;"	p	signature:(GLuint id, const GLfloat *addr)
glVariantivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint id, const GLint *addr);$/;"	p	signature:(GLuint id, const GLint *addr)
glVariantsvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint id, const GLshort *addr);$/;"	p	signature:(GLuint id, const GLshort *addr)
glVariantubvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint id, const GLubyte *addr);$/;"	p	signature:(GLuint id, const GLubyte *addr)
glVariantuivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint id, const GLuint *addr);$/;"	p	signature:(GLuint id, const GLuint *addr)
glVariantusvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint id, const GLushort *addr);$/;"	p	signature:(GLuint id, const GLushort *addr)
glVertex2bOES	gfx/glsym/glsym_gl.h	1914;"	d
glVertex2bvOES	gfx/glsym/glsym_gl.h	1915;"	d
glVertex2hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLhalfNV x, GLhalfNV y)
glVertex2hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex2xOES	gfx/glsym/glsym_gl.h	2018;"	d
glVertex2xvOES	gfx/glsym/glsym_gl.h	2021;"	d
glVertex3bOES	gfx/glsym/glsym_gl.h	1916;"	d
glVertex3bvOES	gfx/glsym/glsym_gl.h	1917;"	d
glVertex3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertex3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex3xOES	gfx/glsym/glsym_gl.h	2019;"	d
glVertex3xvOES	gfx/glsym/glsym_gl.h	2022;"	d
glVertex4bOES	gfx/glsym/glsym_gl.h	1918;"	d
glVertex4bvOES	gfx/glsym/glsym_gl.h	1919;"	d
glVertex4hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertex4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex4xOES	gfx/glsym/glsym_gl.h	2020;"	d
glVertex4xvOES	gfx/glsym/glsym_gl.h	2023;"	d
glVertexArrayBindVertexBufferEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
glVertexArrayParameteriAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexArrayRangeAPPLE	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer);$/;"	p	signature:(GLsizei length, GLvoid *pointer)
glVertexArrayRangeNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei length, const GLvoid *pointer);$/;"	p	signature:(GLsizei length, const GLvoid *pointer)
glVertexArrayVertexAttribBindingEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
glVertexArrayVertexAttribFormatEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)
glVertexArrayVertexAttribIFormatEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayVertexAttribLFormatEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayVertexAttribLOffsetEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayVertexBindingDivisorEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint divisor)
glVertexAttrib1d	gfx/glsym/glsym_gl.h	1239;"	d
glVertexAttrib1d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dARB	gfx/glsym/glsym_gl.h	1432;"	d
glVertexAttrib1dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dv	gfx/glsym/glsym_gl.h	1240;"	d
glVertexAttrib1dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvARB	gfx/glsym/glsym_gl.h	1433;"	d
glVertexAttrib1dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1f	gfx/glsym/glsym_gl.h	1241;"	d
glVertexAttrib1f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fARB	gfx/glsym/glsym_gl.h	1434;"	d
glVertexAttrib1fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fv	gfx/glsym/glsym_gl.h	1242;"	d
glVertexAttrib1fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fvARB	gfx/glsym/glsym_gl.h	1435;"	d
glVertexAttrib1fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);$/;"	p	signature:(GLuint index, GLhalfNV x)
glVertexAttrib1hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib1s	gfx/glsym/glsym_gl.h	1243;"	d
glVertexAttrib1s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sARB	gfx/glsym/glsym_gl.h	1436;"	d
glVertexAttrib1sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sv	gfx/glsym/glsym_gl.h	1244;"	d
glVertexAttrib1sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svARB	gfx/glsym/glsym_gl.h	1437;"	d
glVertexAttrib1svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2d	gfx/glsym/glsym_gl.h	1245;"	d
glVertexAttrib2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dARB	gfx/glsym/glsym_gl.h	1438;"	d
glVertexAttrib2dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dv	gfx/glsym/glsym_gl.h	1246;"	d
glVertexAttrib2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvARB	gfx/glsym/glsym_gl.h	1439;"	d
glVertexAttrib2dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2f	gfx/glsym/glsym_gl.h	1247;"	d
glVertexAttrib2f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fARB	gfx/glsym/glsym_gl.h	1440;"	d
glVertexAttrib2fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fv	gfx/glsym/glsym_gl.h	1248;"	d
glVertexAttrib2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fvARB	gfx/glsym/glsym_gl.h	1441;"	d
glVertexAttrib2fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y)
glVertexAttrib2hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib2s	gfx/glsym/glsym_gl.h	1249;"	d
glVertexAttrib2s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sARB	gfx/glsym/glsym_gl.h	1442;"	d
glVertexAttrib2sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sv	gfx/glsym/glsym_gl.h	1250;"	d
glVertexAttrib2sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svARB	gfx/glsym/glsym_gl.h	1443;"	d
glVertexAttrib2svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3d	gfx/glsym/glsym_gl.h	1251;"	d
glVertexAttrib3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dARB	gfx/glsym/glsym_gl.h	1444;"	d
glVertexAttrib3dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dv	gfx/glsym/glsym_gl.h	1252;"	d
glVertexAttrib3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvARB	gfx/glsym/glsym_gl.h	1445;"	d
glVertexAttrib3dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3f	gfx/glsym/glsym_gl.h	1253;"	d
glVertexAttrib3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fARB	gfx/glsym/glsym_gl.h	1446;"	d
glVertexAttrib3fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fv	gfx/glsym/glsym_gl.h	1254;"	d
glVertexAttrib3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fvARB	gfx/glsym/glsym_gl.h	1447;"	d
glVertexAttrib3fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertexAttrib3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib3s	gfx/glsym/glsym_gl.h	1255;"	d
glVertexAttrib3s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sARB	gfx/glsym/glsym_gl.h	1448;"	d
glVertexAttrib3sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sv	gfx/glsym/glsym_gl.h	1256;"	d
glVertexAttrib3sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svARB	gfx/glsym/glsym_gl.h	1449;"	d
glVertexAttrib3svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nbv	gfx/glsym/glsym_gl.h	1257;"	d
glVertexAttrib4Nbv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4NbvARB	gfx/glsym/glsym_gl.h	1450;"	d
glVertexAttrib4NbvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4Niv	gfx/glsym/glsym_gl.h	1258;"	d
glVertexAttrib4Niv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4NivARB	gfx/glsym/glsym_gl.h	1451;"	d
glVertexAttrib4NivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4Nsv	gfx/glsym/glsym_gl.h	1259;"	d
glVertexAttrib4Nsv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4NsvARB	gfx/glsym/glsym_gl.h	1452;"	d
glVertexAttrib4NsvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nub	gfx/glsym/glsym_gl.h	1260;"	d
glVertexAttrib4Nub	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4NubARB	gfx/glsym/glsym_gl.h	1453;"	d
glVertexAttrib4NubARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4Nubv	gfx/glsym/glsym_gl.h	1261;"	d
glVertexAttrib4Nubv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4NubvARB	gfx/glsym/glsym_gl.h	1454;"	d
glVertexAttrib4NubvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4Nuiv	gfx/glsym/glsym_gl.h	1262;"	d
glVertexAttrib4Nuiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4NuivARB	gfx/glsym/glsym_gl.h	1455;"	d
glVertexAttrib4NuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4Nusv	gfx/glsym/glsym_gl.h	1263;"	d
glVertexAttrib4Nusv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4NusvARB	gfx/glsym/glsym_gl.h	1456;"	d
glVertexAttrib4NusvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4bv	gfx/glsym/glsym_gl.h	1264;"	d
glVertexAttrib4bv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4bvARB	gfx/glsym/glsym_gl.h	1457;"	d
glVertexAttrib4bvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4d	gfx/glsym/glsym_gl.h	1265;"	d
glVertexAttrib4d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dARB	gfx/glsym/glsym_gl.h	1458;"	d
glVertexAttrib4dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dv	gfx/glsym/glsym_gl.h	1266;"	d
glVertexAttrib4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvARB	gfx/glsym/glsym_gl.h	1459;"	d
glVertexAttrib4dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4f	gfx/glsym/glsym_gl.h	1267;"	d
glVertexAttrib4f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fARB	gfx/glsym/glsym_gl.h	1460;"	d
glVertexAttrib4fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fv	gfx/glsym/glsym_gl.h	1268;"	d
glVertexAttrib4fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fvARB	gfx/glsym/glsym_gl.h	1461;"	d
glVertexAttrib4fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4hNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertexAttrib4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib4iv	gfx/glsym/glsym_gl.h	1269;"	d
glVertexAttrib4iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4ivARB	gfx/glsym/glsym_gl.h	1462;"	d
glVertexAttrib4ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4s	gfx/glsym/glsym_gl.h	1270;"	d
glVertexAttrib4s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sARB	gfx/glsym/glsym_gl.h	1463;"	d
glVertexAttrib4sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sv	gfx/glsym/glsym_gl.h	1271;"	d
glVertexAttrib4sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svARB	gfx/glsym/glsym_gl.h	1464;"	d
glVertexAttrib4svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4ubNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4ubv	gfx/glsym/glsym_gl.h	1272;"	d
glVertexAttrib4ubv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvARB	gfx/glsym/glsym_gl.h	1465;"	d
glVertexAttrib4ubvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4uiv	gfx/glsym/glsym_gl.h	1273;"	d
glVertexAttrib4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4uivARB	gfx/glsym/glsym_gl.h	1466;"	d
glVertexAttrib4uivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4usv	gfx/glsym/glsym_gl.h	1274;"	d
glVertexAttrib4usv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4usvARB	gfx/glsym/glsym_gl.h	1467;"	d
glVertexAttrib4usvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribArrayObjectATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)
glVertexAttribBinding	gfx/glsym/glsym_gl.h	1869;"	d
glVertexAttribBinding	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);$/;"	p	signature:(GLuint attribindex, GLuint bindingindex)
glVertexAttribDivisor	gfx/glsym/glsym_gl.h	1347;"	d
glVertexAttribDivisor	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribDivisorARB	gfx/glsym/glsym_gl.h	1583;"	d
glVertexAttribDivisorARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribFormat	gfx/glsym/glsym_gl.h	1866;"	d
glVertexAttribFormat	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)
glVertexAttribFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride)
glVertexAttribI1i	gfx/glsym/glsym_gl.h	1300;"	d
glVertexAttribI1i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iv	gfx/glsym/glsym_gl.h	1308;"	d
glVertexAttribI1iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ui	gfx/glsym/glsym_gl.h	1304;"	d
glVertexAttribI1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiv	gfx/glsym/glsym_gl.h	1312;"	d
glVertexAttribI1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI1uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2i	gfx/glsym/glsym_gl.h	1301;"	d
glVertexAttribI2i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iv	gfx/glsym/glsym_gl.h	1309;"	d
glVertexAttribI2iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ui	gfx/glsym/glsym_gl.h	1305;"	d
glVertexAttribI2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiv	gfx/glsym/glsym_gl.h	1313;"	d
glVertexAttribI2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3i	gfx/glsym/glsym_gl.h	1302;"	d
glVertexAttribI3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iv	gfx/glsym/glsym_gl.h	1310;"	d
glVertexAttribI3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ui	gfx/glsym/glsym_gl.h	1306;"	d
glVertexAttribI3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiv	gfx/glsym/glsym_gl.h	1314;"	d
glVertexAttribI3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4bv	gfx/glsym/glsym_gl.h	1316;"	d
glVertexAttribI4bv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4bvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4i	gfx/glsym/glsym_gl.h	1303;"	d
glVertexAttribI4i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iv	gfx/glsym/glsym_gl.h	1311;"	d
glVertexAttribI4iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4ivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4sv	gfx/glsym/glsym_gl.h	1317;"	d
glVertexAttribI4sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4svEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4ubv	gfx/glsym/glsym_gl.h	1318;"	d
glVertexAttribI4ubv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ubvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ui	gfx/glsym/glsym_gl.h	1307;"	d
glVertexAttribI4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiv	gfx/glsym/glsym_gl.h	1315;"	d
glVertexAttribI4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4uivEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4usv	gfx/glsym/glsym_gl.h	1319;"	d
glVertexAttribI4usv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribI4usvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribIFormat	gfx/glsym/glsym_gl.h	1867;"	d
glVertexAttribIFormat	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexAttribIFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribIPointer	gfx/glsym/glsym_gl.h	1297;"	d
glVertexAttribIPointer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribIPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribL1d	gfx/glsym/glsym_gl.h	1792;"	d
glVertexAttribL1d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1dEXT (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dv	gfx/glsym/glsym_gl.h	1796;"	d
glVertexAttribL1dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	p	signature:(GLuint index, GLint64EXT x)
glVertexAttribL1i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL1ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	p	signature:(GLuint index, GLuint64EXT x)
glVertexAttribL1ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL2d	gfx/glsym/glsym_gl.h	1793;"	d
glVertexAttribL2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dv	gfx/glsym/glsym_gl.h	1797;"	d
glVertexAttribL2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y)
glVertexAttribL2i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL2ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y)
glVertexAttribL2ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL3d	gfx/glsym/glsym_gl.h	1794;"	d
glVertexAttribL3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dv	gfx/glsym/glsym_gl.h	1798;"	d
glVertexAttribL3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glVertexAttribL3i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL3ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glVertexAttribL3ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL4d	gfx/glsym/glsym_gl.h	1795;"	d
glVertexAttribL4d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dv	gfx/glsym/glsym_gl.h	1799;"	d
glVertexAttribL4dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4dvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4i64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glVertexAttribL4i64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL4ui64NV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glVertexAttribL4ui64vNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribLFormat	gfx/glsym/glsym_gl.h	1868;"	d
glVertexAttribLFormat	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexAttribLFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribLPointer	gfx/glsym/glsym_gl.h	1800;"	d
glVertexAttribLPointer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribLPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribP1ui	gfx/glsym/glsym_gl.h	1675;"	d
glVertexAttribP1ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP1uiv	gfx/glsym/glsym_gl.h	1676;"	d
glVertexAttribP1uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP2ui	gfx/glsym/glsym_gl.h	1677;"	d
glVertexAttribP2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP2uiv	gfx/glsym/glsym_gl.h	1678;"	d
glVertexAttribP2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP3ui	gfx/glsym/glsym_gl.h	1679;"	d
glVertexAttribP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP3uiv	gfx/glsym/glsym_gl.h	1680;"	d
glVertexAttribP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP4ui	gfx/glsym/glsym_gl.h	1681;"	d
glVertexAttribP4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP4uiv	gfx/glsym/glsym_gl.h	1682;"	d
glVertexAttribP4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribPointer	gfx/glsym/glsym_gl.h	1275;"	d
glVertexAttribPointer	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
glVertexAttribPointerARB	gfx/glsym/glsym_gl.h	1468;"	d
glVertexAttribPointerARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
glVertexAttribPointerNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribs1dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs1fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs1hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs1svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs2dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs2fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs2hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs2svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs3dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs3fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs3hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs3svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4dvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs4fvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs4hvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs4svNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4ubvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLubyte *v)
glVertexBindingDivisor	gfx/glsym/glsym_gl.h	1870;"	d
glVertexBindingDivisor	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);$/;"	p	signature:(GLuint bindingindex, GLuint divisor)
glVertexBlendARB	gfx/glsym/glsym_gl.h	1410;"	d
glVertexBlendARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint count);$/;"	p	signature:(GLint count)
glVertexBlendEnvfATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glVertexBlendEnviATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexFormatNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glVertexP2ui	gfx/glsym/glsym_gl.h	1645;"	d
glVertexP2ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP2ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP2uiv	gfx/glsym/glsym_gl.h	1646;"	d
glVertexP2uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP2uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP3ui	gfx/glsym/glsym_gl.h	1647;"	d
glVertexP3ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP3ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP3uiv	gfx/glsym/glsym_gl.h	1648;"	d
glVertexP3uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP3uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP4ui	gfx/glsym/glsym_gl.h	1649;"	d
glVertexP4ui	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP4ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP4uiv	gfx/glsym/glsym_gl.h	1650;"	d
glVertexP4uiv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexP4uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexPointer	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glVertexPointer( GLint size, GLenum type, Glsizei stride, const GLvoid *pointer );$/;"	p	signature:( GLint size, GLenum type, Glsizei stride, const GLvoid *pointer )
glVertexPointer	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glVertexPointer( GLint size, GLenum type, GLsizei stride, const GLvoid* pointer )$/;"	f	signature:( GLint size, GLenum type, GLsizei stride, const GLvoid* pointer )
glVertexPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glVertexPointerListIBM	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glVertexPointervINTEL	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glVertexStream1dATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum stream, GLdouble x);$/;"	p	signature:(GLenum stream, GLdouble x)
glVertexStream1dvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream1fATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum stream, GLfloat x);$/;"	p	signature:(GLenum stream, GLfloat x)
glVertexStream1fvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream1iATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum stream, GLint x);$/;"	p	signature:(GLenum stream, GLint x)
glVertexStream1ivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream1sATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum stream, GLshort x);$/;"	p	signature:(GLenum stream, GLshort x)
glVertexStream1svATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream2dATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y)
glVertexStream2dvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream2fATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y)
glVertexStream2fvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream2iATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum stream, GLint x, GLint y);$/;"	p	signature:(GLenum stream, GLint x, GLint y)
glVertexStream2ivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream2sATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y)
glVertexStream2svATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream3dATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z)
glVertexStream3dvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream3fATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z)
glVertexStream3fvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream3iATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z)
glVertexStream3ivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream3sATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z)
glVertexStream3svATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream4dATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexStream4dvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream4fATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexStream4fvATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream4iATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z, GLint w)
glVertexStream4ivATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream4sATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexStream4svATI	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexWeightPointerEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexWeightfEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat weight);$/;"	p	signature:(GLfloat weight)
glVertexWeightfvEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *weight);$/;"	p	signature:(const GLfloat *weight)
glVertexWeighthNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);$/;"	p	signature:(GLhalfNV weight)
glVertexWeighthvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);$/;"	p	signature:(const GLhalfNV *weight)
glVideoCaptureNV	msvc/msvc-2010/GL/glext.h	/^GLAPI GLenum APIENTRY glVideoCaptureNV (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	p	signature:(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time)
glVideoCaptureStreamParameterdvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params)
glVideoCaptureStreamParameterfvNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params)
glVideoCaptureStreamParameterivNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params)
glViewport	ps3/rgl/include/export/GLES/gl.h	/^   GLAPI void APIENTRY glViewport( GLint x, GLint y, GLsizei width, GLsizei height );$/;"	p	signature:( GLint x, GLint y, GLsizei width, GLsizei height )
glViewport	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void APIENTRY glViewport( GLint x, GLint y, GLsizei width, GLsizei height )$/;"	f	signature:( GLint x, GLint y, GLsizei width, GLsizei height )
glViewportArrayv	gfx/glsym/glsym_gl.h	1802;"	d
glViewportArrayv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLfloat *v)
glViewportIndexedf	gfx/glsym/glsym_gl.h	1803;"	d
glViewportIndexedf	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
glViewportIndexedfv	gfx/glsym/glsym_gl.h	1804;"	d
glViewportIndexedfv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glWaitSync	gfx/glsym/glsym_gl.h	1608;"	d
glWaitSync	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glWeightPathsNV	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	p	signature:(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights)
glWeightPointerARB	gfx/glsym/glsym_gl.h	1409;"	d
glWeightPointerARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glWeightbvARB	gfx/glsym/glsym_gl.h	1401;"	d
glWeightbvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightbvARB (GLint size, const GLbyte *weights);$/;"	p	signature:(GLint size, const GLbyte *weights)
glWeightdvARB	gfx/glsym/glsym_gl.h	1405;"	d
glWeightdvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightdvARB (GLint size, const GLdouble *weights);$/;"	p	signature:(GLint size, const GLdouble *weights)
glWeightfvARB	gfx/glsym/glsym_gl.h	1404;"	d
glWeightfvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightfvARB (GLint size, const GLfloat *weights);$/;"	p	signature:(GLint size, const GLfloat *weights)
glWeightivARB	gfx/glsym/glsym_gl.h	1403;"	d
glWeightivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightivARB (GLint size, const GLint *weights);$/;"	p	signature:(GLint size, const GLint *weights)
glWeightsvARB	gfx/glsym/glsym_gl.h	1402;"	d
glWeightsvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightsvARB (GLint size, const GLshort *weights);$/;"	p	signature:(GLint size, const GLshort *weights)
glWeightubvARB	gfx/glsym/glsym_gl.h	1406;"	d
glWeightubvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightubvARB (GLint size, const GLubyte *weights);$/;"	p	signature:(GLint size, const GLubyte *weights)
glWeightuivARB	gfx/glsym/glsym_gl.h	1408;"	d
glWeightuivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightuivARB (GLint size, const GLuint *weights);$/;"	p	signature:(GLint size, const GLuint *weights)
glWeightusvARB	gfx/glsym/glsym_gl.h	1407;"	d
glWeightusvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWeightusvARB (GLint size, const GLushort *weights);$/;"	p	signature:(GLint size, const GLushort *weights)
glWindowPos2d	gfx/glsym/glsym_gl.h	1148;"	d
glWindowPos2d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dARB	gfx/glsym/glsym_gl.h	1416;"	d
glWindowPos2dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dv	gfx/glsym/glsym_gl.h	1149;"	d
glWindowPos2dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvARB	gfx/glsym/glsym_gl.h	1417;"	d
glWindowPos2dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2f	gfx/glsym/glsym_gl.h	1150;"	d
glWindowPos2f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fARB	gfx/glsym/glsym_gl.h	1418;"	d
glWindowPos2fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fv	gfx/glsym/glsym_gl.h	1151;"	d
glWindowPos2fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvARB	gfx/glsym/glsym_gl.h	1419;"	d
glWindowPos2fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2i	gfx/glsym/glsym_gl.h	1152;"	d
glWindowPos2i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2i (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iARB	gfx/glsym/glsym_gl.h	1420;"	d
glWindowPos2iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iv	gfx/glsym/glsym_gl.h	1153;"	d
glWindowPos2iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivARB	gfx/glsym/glsym_gl.h	1421;"	d
glWindowPos2ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2s	gfx/glsym/glsym_gl.h	1154;"	d
glWindowPos2s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sARB	gfx/glsym/glsym_gl.h	1422;"	d
glWindowPos2sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sv	gfx/glsym/glsym_gl.h	1155;"	d
glWindowPos2sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svARB	gfx/glsym/glsym_gl.h	1423;"	d
glWindowPos2svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3d	gfx/glsym/glsym_gl.h	1156;"	d
glWindowPos3d	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dARB	gfx/glsym/glsym_gl.h	1424;"	d
glWindowPos3dARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dv	gfx/glsym/glsym_gl.h	1157;"	d
glWindowPos3dv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvARB	gfx/glsym/glsym_gl.h	1425;"	d
glWindowPos3dvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3f	gfx/glsym/glsym_gl.h	1158;"	d
glWindowPos3f	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fARB	gfx/glsym/glsym_gl.h	1426;"	d
glWindowPos3fARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fv	gfx/glsym/glsym_gl.h	1159;"	d
glWindowPos3fv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvARB	gfx/glsym/glsym_gl.h	1427;"	d
glWindowPos3fvARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3i	gfx/glsym/glsym_gl.h	1160;"	d
glWindowPos3i	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3i (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iARB	gfx/glsym/glsym_gl.h	1428;"	d
glWindowPos3iARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iv	gfx/glsym/glsym_gl.h	1161;"	d
glWindowPos3iv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivARB	gfx/glsym/glsym_gl.h	1429;"	d
glWindowPos3ivARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3s	gfx/glsym/glsym_gl.h	1162;"	d
glWindowPos3s	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sARB	gfx/glsym/glsym_gl.h	1430;"	d
glWindowPos3sARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sv	gfx/glsym/glsym_gl.h	1163;"	d
glWindowPos3sv	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svARB	gfx/glsym/glsym_gl.h	1431;"	d
glWindowPos3svARB	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos4dMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glWindowPos4dvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos4fMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glWindowPos4fvMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos4iMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint w)
glWindowPos4ivMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos4sMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort w)
glWindowPos4svMESA	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWriteMaskEXT	msvc/msvc-2010/GL/glext.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
glXCreateContextAttribsARBProc	gfx/context/glx_ctx.c	/^typedef GLXContext (*glXCreateContextAttribsARBProc)(Display*,$/;"	t	file:
gl_alive	gfx/gl.c	/^static bool gl_alive(void *data)$/;"	f	file:	signature:(void *data)
gl_apply_state_changes	gfx/gl.c	/^static void gl_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
gl_attrib_index	gfx/shader_glsl.c	/^static unsigned gl_attrib_index;$/;"	v	file:
gl_attribs	gfx/shader_glsl.c	/^static GLint gl_attribs[PREV_TEXTURES + 1 + 4 + GFX_MAX_SHADERS];$/;"	v	file:
gl_begin_debug	gfx/gl.c	/^static void gl_begin_debug(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
gl_bind_backbuffer	gfx/gl.c	354;"	d	file:
gl_bind_backbuffer	gfx/gl.c	356;"	d	file:
gl_cg_backend	gfx/shader_cg.c	/^const gl_shader_backend_t gl_cg_backend = {$/;"	v
gl_cg_deinit	gfx/shader_cg.c	/^static void gl_cg_deinit(void)$/;"	f	file:	signature:(void)
gl_cg_deinit_context_state	gfx/shader_cg.c	/^static void gl_cg_deinit_context_state(void)$/;"	f	file:	signature:(void)
gl_cg_deinit_progs	gfx/shader_cg.c	/^static void gl_cg_deinit_progs(void)$/;"	f	file:	signature:(void)
gl_cg_deinit_state	gfx/shader_cg.c	/^static void gl_cg_deinit_state(void)$/;"	f	file:	signature:(void)
gl_cg_filter_type	gfx/shader_cg.c	/^static bool gl_cg_filter_type(unsigned index, bool *smooth)$/;"	f	file:	signature:(unsigned index, bool *smooth)
gl_cg_get_prev_textures	gfx/shader_cg.c	/^static unsigned gl_cg_get_prev_textures(void)$/;"	f	file:	signature:(void)
gl_cg_init	gfx/shader_cg.c	/^static bool gl_cg_init(const char *path)$/;"	f	file:	signature:(const char *path)
gl_cg_init	gfx/shader_cg.c	/^static bool gl_cg_init(const char *path);$/;"	p	file:	signature:(const char *path)
gl_cg_invalidate_context	gfx/shader_cg.c	/^void gl_cg_invalidate_context(void)$/;"	f	signature:(void)
gl_cg_invalidate_context	gfx/shader_cg.h	/^void gl_cg_invalidate_context(void); \/\/ Call when resetting GL context on PS3.$/;"	p	signature:(void)
gl_cg_num	gfx/shader_cg.c	/^static unsigned gl_cg_num(void)$/;"	f	file:	signature:(void)
gl_cg_reset_attrib	gfx/shader_cg.c	/^static void gl_cg_reset_attrib(void)$/;"	f	file:	signature:(void)
gl_cg_set_compiler_args	gfx/shader_cg.c	/^void gl_cg_set_compiler_args(const char **argv)$/;"	f	signature:(const char **argv)
gl_cg_set_compiler_args	gfx/shader_cg.h	/^void gl_cg_set_compiler_args(const char **argv);$/;"	p	signature:(const char **argv)
gl_cg_set_coords	gfx/shader_cg.c	/^static bool gl_cg_set_coords(const struct gl_coords *coords)$/;"	f	file:	signature:(const struct gl_coords *coords)
gl_cg_set_mvp	gfx/shader_cg.c	/^static bool gl_cg_set_mvp(const math_matrix *mat)$/;"	f	file:	signature:(const math_matrix *mat)
gl_cg_set_params	gfx/shader_cg.c	/^static void gl_cg_set_params(unsigned width, unsigned height, $/;"	f	file:	signature:(unsigned width, unsigned height, unsigned tex_width, unsigned tex_height, unsigned out_width, unsigned out_height, unsigned frame_count, const struct gl_tex_info *info, const struct gl_tex_info *prev_info, const struct gl_tex_info *fbo_info, unsigned fbo_info_cnt)
gl_cg_shader_scale	gfx/shader_cg.c	/^static void gl_cg_shader_scale(unsigned index, struct gfx_fbo_scale *scale)$/;"	f	file:	signature:(unsigned index, struct gfx_fbo_scale *scale)
gl_cg_use	gfx/shader_cg.c	/^static void gl_cg_use(unsigned index)$/;"	f	file:	signature:(unsigned index)
gl_cg_wrap_type	gfx/shader_cg.c	/^static enum gfx_wrap_type gl_cg_wrap_type(unsigned index)$/;"	f	file:	signature:(unsigned index)
gl_check_error	gfx/gl_common.h	/^static inline bool gl_check_error(void)$/;"	f	signature:(void)
gl_check_fbo_dimensions	gfx/gl.c	/^static void gl_check_fbo_dimensions(void *data)$/;"	f	file:	signature:(void *data)
gl_compute_fbo_geometry	gfx/gl.c	/^static void gl_compute_fbo_geometry(void *data, unsigned width, unsigned height,$/;"	f	file:	signature:(void *data, unsigned width, unsigned height, unsigned vp_width, unsigned vp_height)
gl_context	general.h	/^      char gl_context[32];$/;"	m	struct:settings::__anon227	access:public
gl_context	gfx/context/ps3_ctx.c	/^static PSGLcontext* gl_context;$/;"	v	file:
gl_convert_frame_argb8888_abgr8888	gfx/gl.c	/^static inline void gl_convert_frame_argb8888_abgr8888(void *data, void *output, const void *input,$/;"	f	file:	signature:(void *data, void *output, const void *input, int width, int height, int in_pitch)
gl_convert_frame_rgb16_32	gfx/gl.c	/^static inline void gl_convert_frame_rgb16_32(void *data, void *output, const void *input, int width, int height, int in_pitch)$/;"	f	file:	signature:(void *data, void *output, const void *input, int width, int height, int in_pitch)
gl_coords	gfx/gl_common.h	/^struct gl_coords$/;"	s
gl_coords::color	gfx/gl_common.h	/^   const GLfloat *color;$/;"	m	struct:gl_coords	access:public
gl_coords::lut_tex_coord	gfx/gl_common.h	/^   const GLfloat *lut_tex_coord;$/;"	m	struct:gl_coords	access:public
gl_coords::tex_coord	gfx/gl_common.h	/^   const GLfloat *tex_coord;$/;"	m	struct:gl_coords	access:public
gl_coords::vertex	gfx/gl_common.h	/^   const GLfloat *vertex;$/;"	m	struct:gl_coords	access:public
gl_copy_frame	gfx/gl.c	/^static inline void gl_copy_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch)
gl_create_fbo_targets	gfx/gl.c	/^static bool gl_create_fbo_targets(void *data)$/;"	f	file:	signature:(void *data)
gl_create_fbo_textures	gfx/gl.c	/^static void gl_create_fbo_textures(void *data)$/;"	f	file:	signature:(void *data)
gl_debug_cb	gfx/gl.c	/^static void DEBUG_CALLBACK_TYPE gl_debug_cb(GLenum source, GLenum type,$/;"	f	file:	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *message, void *userParam)
gl_deinit_fbo	gfx/gl.c	/^void gl_deinit_fbo(void *data)$/;"	f	signature:(void *data)
gl_deinit_fbo	gfx/gl_common.h	/^void gl_deinit_fbo(void *data);$/;"	p	signature:(void *data)
gl_deinit_font	gfx/fonts/gl_raster_font.c	/^void gl_deinit_font(void *data)$/;"	f	signature:(void *data)
gl_deinit_font	gfx/fonts/ps_libdbgfont.c	/^static void gl_deinit_font(void *data)$/;"	f	file:	signature:(void *data)
gl_deinit_hw_render	gfx/gl.c	/^static void gl_deinit_hw_render(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
gl_device	gfx/context/ps3_ctx.c	/^static PSGLdevice* gl_device;$/;"	v	file:
gl_device	xenon/xenon360_video.c	/^   struct XenosDevice * gl_device;$/;"	m	struct:gl	typeref:struct:gl::XenosDevice	file:	access:public
gl_disable_client_arrays	gfx/gl.c	/^static void gl_disable_client_arrays(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
gl_draw_texture	gfx/gl.c	/^static inline void gl_draw_texture(void *data)$/;"	f	file:	signature:(void *data)
gl_fbo_rect	gfx/gl_common.h	/^struct gl_fbo_rect$/;"	s
gl_fbo_rect::height	gfx/gl_common.h	/^   unsigned height;$/;"	m	struct:gl_fbo_rect	access:public
gl_fbo_rect::img_height	gfx/gl_common.h	/^   unsigned img_height;$/;"	m	struct:gl_fbo_rect	access:public
gl_fbo_rect::img_width	gfx/gl_common.h	/^   unsigned img_width;$/;"	m	struct:gl_fbo_rect	access:public
gl_fbo_rect::max_img_height	gfx/gl_common.h	/^   unsigned max_img_height;$/;"	m	struct:gl_fbo_rect	access:public
gl_fbo_rect::max_img_width	gfx/gl_common.h	/^   unsigned max_img_width;$/;"	m	struct:gl_fbo_rect	access:public
gl_fbo_rect::width	gfx/gl_common.h	/^   unsigned width;$/;"	m	struct:gl_fbo_rect	access:public
gl_focus	gfx/gl.c	/^static bool gl_focus(void *data)$/;"	f	file:	signature:(void *data)
gl_font_backends	gfx/fonts/gl_font.c	/^static const gl_font_renderer_t *gl_font_backends[] = {$/;"	v	file:
gl_font_init_first	gfx/fonts/gl_font.c	/^const gl_font_renderer_t *gl_font_init_first(void *data, const char *font_path, float font_size,$/;"	f	signature:(void *data, const char *font_path, float font_size, unsigned win_width, unsigned win_height)
gl_font_init_first	gfx/fonts/gl_font.h	/^const gl_font_renderer_t *gl_font_init_first(void *data,$/;"	p	signature:(void *data, const char *font_path, float font_size, unsigned win_width, unsigned win_height)
gl_font_renderer	gfx/fonts/gl_font.h	/^typedef struct gl_font_renderer$/;"	s
gl_font_renderer::deinit	gfx/fonts/gl_font.h	/^   void (*deinit)(void *data);$/;"	m	struct:gl_font_renderer	access:public
gl_font_renderer::ident	gfx/fonts/gl_font.h	/^   const char *ident;$/;"	m	struct:gl_font_renderer	access:public
gl_font_renderer::init	gfx/fonts/gl_font.h	/^   bool (*init)(void *data, const char *font_path, float font_size,$/;"	m	struct:gl_font_renderer	access:public
gl_font_renderer::render_msg	gfx/fonts/gl_font.h	/^   void (*render_msg)(void *data, const char *msg, void *parms);$/;"	m	struct:gl_font_renderer	access:public
gl_font_renderer_t	gfx/fonts/gl_font.h	/^} gl_font_renderer_t;$/;"	t	typeref:struct:gl_font_renderer
gl_frame	gfx/gl.c	/^static bool gl_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
gl_frame_fbo	gfx/gl.c	/^static void gl_frame_fbo(void *data, const struct gl_tex_info *tex_info)$/;"	f	file:	signature:(void *data, const struct gl_tex_info *tex_info)
gl_free	gfx/gl.c	/^static void gl_free(void *data)$/;"	f	file:	signature:(void *data)
gl_free_overlay	gfx/gl.c	/^static void gl_free_overlay(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
gl_free_overlay	gfx/gl.c	/^static void gl_free_overlay(gl_t *gl);$/;"	p	file:	signature:(gl_t *gl)
gl_get_context	gfx/gl.c	/^static const gfx_ctx_driver_t *gl_get_context(void)$/;"	f	file:	signature:(void)
gl_get_current_framebuffer	gfx/gl.c	/^static uintptr_t gl_get_current_framebuffer(void *data)$/;"	f	file:	signature:(void *data)
gl_get_overlay_interface	gfx/gl.c	/^static void gl_get_overlay_interface(void *data, const video_overlay_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_overlay_interface_t **iface)
gl_get_poke_interface	gfx/gl.c	/^static void gl_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
gl_get_proc_address	gfx/gl.c	/^static retro_proc_address_t gl_get_proc_address(void *data, const char *sym)$/;"	f	file:	signature:(void *data, const char *sym)
gl_glsl_backend	gfx/shader_glsl.c	/^const gl_shader_backend_t gl_glsl_backend = {$/;"	v
gl_glsl_deinit	gfx/shader_glsl.c	/^static void gl_glsl_deinit(void)$/;"	f	file:	signature:(void)
gl_glsl_delete_shader	gfx/shader_glsl.c	/^static void gl_glsl_delete_shader(GLuint prog)$/;"	f	file:	signature:(GLuint prog)
gl_glsl_filter_type	gfx/shader_glsl.c	/^static bool gl_glsl_filter_type(unsigned index, bool *smooth)$/;"	f	file:	signature:(unsigned index, bool *smooth)
gl_glsl_free_shader	gfx/shader_glsl.c	/^static void gl_glsl_free_shader(void)$/;"	f	file:	signature:(void)
gl_glsl_get_prev_textures	gfx/shader_glsl.c	/^static unsigned gl_glsl_get_prev_textures(void)$/;"	f	file:	signature:(void)
gl_glsl_init	gfx/shader_glsl.c	/^static bool gl_glsl_init(const char *path)$/;"	f	file:	signature:(const char *path)
gl_glsl_num	gfx/shader_glsl.c	/^static unsigned gl_glsl_num(void)$/;"	f	file:	signature:(void)
gl_glsl_reset_attrib	gfx/shader_glsl.c	/^static void gl_glsl_reset_attrib(void)$/;"	f	file:	signature:(void)
gl_glsl_set_attribs	gfx/shader_glsl.c	/^static void gl_glsl_set_attribs(GLuint vbo, GLfloat *buffer, size_t *buffer_elems,$/;"	f	file:	signature:(GLuint vbo, GLfloat *buffer, size_t *buffer_elems, const GLfloat *data, size_t elems, const struct glsl_attrib *attrs, size_t num_attrs)
gl_glsl_set_context_type	gfx/shader_glsl.c	/^void gl_glsl_set_context_type(bool core_profile, unsigned major, unsigned minor)$/;"	f	signature:(bool core_profile, unsigned major, unsigned minor)
gl_glsl_set_context_type	gfx/shader_glsl.h	/^void gl_glsl_set_context_type(bool core_profile, unsigned major, unsigned minor);$/;"	p	signature:(bool core_profile, unsigned major, unsigned minor)
gl_glsl_set_coords	gfx/shader_glsl.c	/^static bool gl_glsl_set_coords(const struct gl_coords *coords)$/;"	f	file:	signature:(const struct gl_coords *coords)
gl_glsl_set_get_proc_address	gfx/shader_glsl.c	/^void gl_glsl_set_get_proc_address(gfx_ctx_proc_t (*proc)(const char*))$/;"	f	signature:(gfx_ctx_proc_t (proc)const char*))
gl_glsl_set_get_proc_address	gfx/shader_glsl.h	/^void gl_glsl_set_get_proc_address(gfx_ctx_proc_t (*proc)(const char*));$/;"	p	signature:(gfx_ctx_proc_t (proc)const char*))
gl_glsl_set_mvp	gfx/shader_glsl.c	/^static bool gl_glsl_set_mvp(const math_matrix *mat)$/;"	f	file:	signature:(const math_matrix *mat)
gl_glsl_set_params	gfx/shader_glsl.c	/^static void gl_glsl_set_params(unsigned width, unsigned height, $/;"	f	file:	signature:(unsigned width, unsigned height, unsigned tex_width, unsigned tex_height, unsigned out_width, unsigned out_height, unsigned frame_count, const struct gl_tex_info *info, const struct gl_tex_info *prev_info, const struct gl_tex_info *fbo_info, unsigned fbo_info_cnt)
gl_glsl_set_vbo	gfx/shader_glsl.c	/^static void gl_glsl_set_vbo(GLfloat *buffer, size_t *buffer_elems, const GLfloat *data, size_t elems)$/;"	f	file:	signature:(GLfloat *buffer, size_t *buffer_elems, const GLfloat *data, size_t elems)
gl_glsl_shader_scale	gfx/shader_glsl.c	/^static void gl_glsl_shader_scale(unsigned index, struct gfx_fbo_scale *scale)$/;"	f	file:	signature:(unsigned index, struct gfx_fbo_scale *scale)
gl_glsl_use	gfx/shader_glsl.c	/^static void gl_glsl_use(unsigned index)$/;"	f	file:	signature:(unsigned index)
gl_glsl_wrap_type	gfx/shader_glsl.c	/^static enum gfx_wrap_type gl_glsl_wrap_type(unsigned index)$/;"	f	file:	signature:(unsigned index)
gl_init	gfx/gl.c	/^static void *gl_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
gl_init_fbo	gfx/gl.c	/^void gl_init_fbo(void *data, unsigned width, unsigned height)$/;"	f	signature:(void *data, unsigned width, unsigned height)
gl_init_fbo	gfx/gl_common.h	/^void gl_init_fbo(void *data, unsigned width, unsigned height);$/;"	p	signature:(void *data, unsigned width, unsigned height)
gl_init_font	gfx/fonts/gl_raster_font.c	/^static bool gl_init_font(void *data, const char *font_path, float font_size, unsigned win_width, unsigned win_height)$/;"	f	file:	signature:(void *data, const char *font_path, float font_size, unsigned win_width, unsigned win_height)
gl_init_font	gfx/fonts/ps_libdbgfont.c	/^static bool gl_init_font(void *data, const char *font_path, float font_size,$/;"	f	file:	signature:(void *data, const char *font_path, float font_size, unsigned win_width, unsigned win_height)
gl_init_hw_render	gfx/gl.c	/^static bool gl_init_hw_render(gl_t *gl, unsigned width, unsigned height)$/;"	f	file:	signature:(gl_t *gl, unsigned width, unsigned height)
gl_init_pbo_readback	gfx/gl.c	/^static void gl_init_pbo_readback(void *data)$/;"	f	file:	signature:(void *data)
gl_init_textures	gfx/gl.c	/^static void gl_init_textures(void *data, const video_info_t *video)$/;"	f	file:	signature:(void *data, const video_info_t *video)
gl_init_textures_data	gfx/gl.c	/^static void gl_init_textures_data(void *data)$/;"	f	file:	signature:(void *data)
gl_ortho	gfx/gl_common.h	/^struct gl_ortho$/;"	s
gl_ortho::bottom	gfx/gl_common.h	/^   GLfloat bottom;$/;"	m	struct:gl_ortho	access:public
gl_ortho::left	gfx/gl_common.h	/^   GLfloat left;$/;"	m	struct:gl_ortho	access:public
gl_ortho::right	gfx/gl_common.h	/^   GLfloat right;$/;"	m	struct:gl_ortho	access:public
gl_ortho::top	gfx/gl_common.h	/^   GLfloat top;$/;"	m	struct:gl_ortho	access:public
gl_ortho::zfar	gfx/gl_common.h	/^   GLfloat zfar;$/;"	m	struct:gl_ortho	access:public
gl_ortho::znear	gfx/gl_common.h	/^   GLfloat znear;$/;"	m	struct:gl_ortho	access:public
gl_overlay_data	gfx/gl_common.h	/^struct gl_overlay_data$/;"	s
gl_overlay_data::alpha_mod	gfx/gl_common.h	/^   GLfloat alpha_mod;$/;"	m	struct:gl_overlay_data	access:public
gl_overlay_data::tex	gfx/gl_common.h	/^   GLuint tex;$/;"	m	struct:gl_overlay_data	access:public
gl_overlay_data::tex_coord	gfx/gl_common.h	/^   GLfloat tex_coord[8];$/;"	m	struct:gl_overlay_data	access:public
gl_overlay_data::vertex_coord	gfx/gl_common.h	/^   GLfloat vertex_coord[8];$/;"	m	struct:gl_overlay_data	access:public
gl_overlay_enable	gfx/gl.c	/^static void gl_overlay_enable(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
gl_overlay_full_screen	gfx/gl.c	/^static void gl_overlay_full_screen(void *data, bool enable)$/;"	f	file:	signature:(void *data, bool enable)
gl_overlay_interface	gfx/gl.c	/^static const video_overlay_interface_t gl_overlay_interface = {$/;"	v	file:
gl_overlay_load	gfx/gl.c	/^static bool gl_overlay_load(void *data, const struct video_overlay_image *images, unsigned num_images)$/;"	f	file:	signature:(void *data, const struct video_overlay_image *images, unsigned num_images)
gl_overlay_set_alpha	gfx/gl.c	/^static void gl_overlay_set_alpha(void *data, unsigned image, float mod)$/;"	f	file:	signature:(void *data, unsigned image, float mod)
gl_overlay_tex_geom	gfx/gl.c	/^static void gl_overlay_tex_geom(void *data,$/;"	f	file:	signature:(void *data, unsigned image, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
gl_overlay_tex_geom	gfx/gl.c	/^static void gl_overlay_tex_geom(void *data,$/;"	p	file:	signature:(void *data, unsigned image, float x, float y, float w, float h)
gl_overlay_vertex_geom	gfx/gl.c	/^static void gl_overlay_vertex_geom(void *data,$/;"	f	file:	signature:(void *data, unsigned image, float x, float y, float w, float h)
gl_overlay_vertex_geom	gfx/gl.c	/^static void gl_overlay_vertex_geom(void *data,$/;"	p	file:	signature:(void *data, unsigned image, float x, float y, float w, float h)
gl_pbo_async_readback	gfx/gl.c	/^static void gl_pbo_async_readback(void *data)$/;"	f	file:	signature:(void *data)
gl_poke_interface	gfx/gl.c	/^static const video_poke_interface_t gl_poke_interface = {$/;"	v	file:
gl_program	gfx/shader_glsl.c	/^static GLuint gl_program[GFX_MAX_SHADERS];$/;"	v	file:
gl_query_extension	gfx/gl.c	/^static inline bool gl_query_extension(gl_t *gl, const char *ext)$/;"	f	file:	signature:(gl_t *gl, const char *ext)
gl_raster_font	gfx/fonts/gl_raster_font.c	/^const gl_font_renderer_t gl_raster_font = {$/;"	v
gl_read_viewport	gfx/gl.c	/^static bool gl_read_viewport(void *data, uint8_t *buffer)$/;"	f	file:	signature:(void *data, uint8_t *buffer)
gl_reinit_textures	gfx/gl.c	/^static inline void gl_reinit_textures(void *data, const video_info_t *video)$/;"	f	file:	signature:(void *data, const video_info_t *video)
gl_render_msg	gfx/fonts/gl_raster_font.c	/^static void gl_render_msg(void *data, const char *msg, void *parms)$/;"	f	file:	signature:(void *data, const char *msg, void *parms)
gl_render_msg	gfx/fonts/ps_libdbgfont.c	/^static void gl_render_msg(void *data, const char *msg, void *parms)$/;"	f	file:	signature:(void *data, const char *msg, void *parms)
gl_render_overlay	gfx/gl.c	/^static void gl_render_overlay(void *data)$/;"	f	file:	signature:(void *data)
gl_render_overlay	gfx/gl.c	/^static void gl_render_overlay(void *data);$/;"	p	file:	signature:(void *data)
gl_restart	gfx/gl.c	/^static void gl_restart(void)$/;"	f	file:	signature:(void)
gl_set_aspect_ratio	gfx/gl.c	/^static void gl_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
gl_set_coords	gfx/gl.c	/^static void gl_set_coords(const struct gl_coords *coords)$/;"	f	file:	signature:(const struct gl_coords *coords)
gl_set_mvp	gfx/gl.c	/^static void gl_set_mvp(const void *data)$/;"	f	file:	signature:(const void *data)
gl_set_nonblock_state	gfx/gl.c	/^static void gl_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
gl_set_osd_msg	gfx/gl.c	/^static void gl_set_osd_msg(void *data, const char *msg, void *userdata)$/;"	f	file:	signature:(void *data, const char *msg, void *userdata)
gl_set_prev_texture	gfx/gl.c	/^static inline void gl_set_prev_texture(void *data, const struct gl_tex_info *tex_info)$/;"	f	file:	signature:(void *data, const struct gl_tex_info *tex_info)
gl_set_projection	gfx/gl.c	/^void gl_set_projection(void *data, struct gl_ortho *ortho, bool allow_rotate)$/;"	f	signature:(void *data, struct gl_ortho *ortho, bool allow_rotate)
gl_set_projection	gfx/gl_common.h	/^void gl_set_projection(void *data, struct gl_ortho *ortho, bool allow_rotate);$/;"	p	signature:(void *data, struct gl_ortho *ortho, bool allow_rotate)
gl_set_rotation	gfx/gl.c	/^static void gl_set_rotation(void *data, unsigned rotation)$/;"	f	file:	signature:(void *data, unsigned rotation)
gl_set_shader	gfx/gl.c	/^static bool gl_set_shader(void *data, enum rarch_shader_type type, const char *path)$/;"	f	file:	signature:(void *data, enum rarch_shader_type type, const char *path)
gl_set_shader_viewport	gfx/gl.c	/^static inline void gl_set_shader_viewport(void *data, unsigned shader)$/;"	f	file:	signature:(void *data, unsigned shader)
gl_set_texture_enable	gfx/gl.c	/^static void gl_set_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
gl_set_texture_fmts	gfx/gl.c	/^static inline void gl_set_texture_fmts(void *data, bool rgb32)$/;"	f	file:	signature:(void *data, bool rgb32)
gl_set_texture_frame	gfx/gl.c	/^static void gl_set_texture_frame(void *data,$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
gl_set_viewport	gfx/gl.c	/^void gl_set_viewport(void *data, unsigned width, unsigned height, bool force_full, bool allow_rotate)$/;"	f	signature:(void *data, unsigned width, unsigned height, bool force_full, bool allow_rotate)
gl_set_viewport	gfx/gl_common.h	/^void gl_set_viewport(void *data, unsigned width, unsigned height, bool force_full, bool allow_rotate);$/;"	p	signature:(void *data, unsigned width, unsigned height, bool force_full, bool allow_rotate)
gl_shader_backend	gfx/shader_common.h	/^struct gl_shader_backend$/;"	s
gl_shader_backend::deinit	gfx/shader_common.h	/^   void (*deinit)(void);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::filter_type	gfx/shader_common.h	/^   bool (*filter_type)(unsigned index, bool *smooth);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::get_prev_textures	gfx/shader_common.h	/^   unsigned (*get_prev_textures)(void);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::init	gfx/shader_common.h	/^   bool (*init)(const char *path);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::num_shaders	gfx/shader_common.h	/^   unsigned (*num_shaders)(void);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::set_coords	gfx/shader_common.h	/^   bool (*set_coords)(const struct gl_coords *coords);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::set_mvp	gfx/shader_common.h	/^   bool (*set_mvp)(const math_matrix *mat);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::set_params	gfx/shader_common.h	/^   void (*set_params)(unsigned width, unsigned height, $/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::shader_scale	gfx/shader_common.h	/^   void (*shader_scale)(unsigned index, struct gfx_fbo_scale *scale);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::type	gfx/shader_common.h	/^   enum rarch_shader_type type;$/;"	m	struct:gl_shader_backend	typeref:enum:gl_shader_backend::rarch_shader_type	access:public
gl_shader_backend::use	gfx/shader_common.h	/^   void (*use)(unsigned index);$/;"	m	struct:gl_shader_backend	access:public
gl_shader_backend::wrap_type	gfx/shader_common.h	/^   enum gfx_wrap_type (*wrap_type)(unsigned index);$/;"	m	struct:gl_shader_backend	typeref:enum:gl_shader_backend::wrap_type	access:public
gl_shader_backend_t	gfx/gl_common.h	/^typedef struct gl_shader_backend gl_shader_backend_t;$/;"	t	typeref:struct:gl_shader_backend
gl_shader_backend_t	xdk/xdk_d3d.h	/^typedef struct gl_shader_backend gl_shader_backend_t;$/;"	t	typeref:struct:gl_shader_backend
gl_shader_deinit	gfx/gl.c	/^static inline void gl_shader_deinit(void *data)$/;"	f	file:	signature:(void *data)
gl_shader_filter_type	gfx/gl.c	348;"	d	file:
gl_shader_init	gfx/gl.c	/^static bool gl_shader_init(void *data)$/;"	f	file:	signature:(void *data)
gl_shader_num	gfx/gl.c	347;"	d	file:
gl_shader_scale	gfx/gl.c	/^static void gl_shader_scale(void *data, unsigned index, struct gfx_fbo_scale *scale)$/;"	f	file:	signature:(void *data, unsigned index, struct gfx_fbo_scale *scale)
gl_shader_set_coords	gfx/gl.c	/^void gl_shader_set_coords(void *data, const struct gl_coords *coords, const math_matrix *mat)$/;"	f	signature:(void *data, const struct gl_coords *coords, const math_matrix *mat)
gl_shader_set_coords	gfx/gl_common.h	/^void gl_shader_set_coords(void *data, const struct gl_coords *coords, const math_matrix *mat);$/;"	p	signature:(void *data, const struct gl_coords *coords, const math_matrix *mat)
gl_shader_wrap_type	gfx/gl.c	349;"	d	file:
gl_show_mouse	gfx/gl.c	/^static void gl_show_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
gl_start_frame_fbo	gfx/gl.c	/^static inline void gl_start_frame_fbo(void *data)$/;"	f	file:	signature:(void *data)
gl_state_tracker	gfx/shader_glsl.c	/^static state_tracker_t *gl_state_tracker;$/;"	v	file:
gl_t	gfx/gl_common.h	/^} gl_t;$/;"	t	typeref:struct:gl
gl_t	xenon/xenon360_video.c	/^} gl_t;$/;"	t	typeref:struct:gl	file:
gl_tex_info	gfx/gl_common.h	/^struct gl_tex_info$/;"	s
gl_tex_info::coord	gfx/gl_common.h	/^   GLfloat coord[8];$/;"	m	struct:gl_tex_info	access:public
gl_tex_info::input_size	gfx/gl_common.h	/^   GLfloat input_size[2];$/;"	m	struct:gl_tex_info	access:public
gl_tex_info::tex	gfx/gl_common.h	/^   GLuint tex;$/;"	m	struct:gl_tex_info	access:public
gl_tex_info::tex_size	gfx/gl_common.h	/^   GLfloat tex_size[2];$/;"	m	struct:gl_tex_info	access:public
gl_teximage	gfx/shader_glsl.c	/^static GLuint gl_teximage[GFX_MAX_TEXTURES];$/;"	v	file:
gl_uniforms	gfx/shader_glsl.c	/^static struct shader_uniforms gl_uniforms[GFX_MAX_SHADERS];$/;"	v	typeref:struct:shader_uniforms	file:
gl_update_input_size	gfx/gl.c	/^static void gl_update_input_size(void *data, unsigned width, unsigned height, unsigned pitch, bool clear)$/;"	f	file:	signature:(void *data, unsigned width, unsigned height, unsigned pitch, bool clear)
gl_update_resize	gfx/gl.c	/^static void gl_update_resize(void *data)$/;"	f	file:	signature:(void *data)
gl_update_tex_filter_frame	gfx/gl.c	/^static void gl_update_tex_filter_frame(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
gl_viewport_info	gfx/gl.c	/^static void gl_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
gl_wrap_type_to_enum	gfx/gl_common.h	/^static inline GLenum gl_wrap_type_to_enum(enum gfx_wrap_type type)$/;"	f	signature:(enum gfx_wrap_type type)
global	general.h	/^struct global$/;"	s
global::__anon233::last_frame_time	general.h	/^      retro_time_t last_frame_time;$/;"	m	struct:global::__anon233	access:public
global::__anon233::minimum_frame_time	general.h	/^      retro_time_t minimum_frame_time;$/;"	m	struct:global::__anon233	access:public
global::__anon234::aspect_ratio	general.h	/^      float aspect_ratio;$/;"	m	struct:global::__anon234	access:public
global::__anon234::audio_callback	general.h	/^      struct retro_audio_callback audio_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_audio_callback	access:public
global::__anon234::av_info	general.h	/^      struct retro_system_av_info av_info;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_system_av_info	access:public
global::__anon234::block_extract	general.h	/^      bool block_extract;$/;"	m	struct:global::__anon234	access:public
global::__anon234::camera_callback	general.h	/^      struct retro_camera_callback camera_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_camera_callback	access:public
global::__anon234::core_options	general.h	/^      core_option_manager_t *core_options;$/;"	m	struct:global::__anon234	access:public
global::__anon234::disk_control	general.h	/^      struct retro_disk_control_callback disk_control; $/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_disk_control_callback	access:public
global::__anon234::force_nonblock	general.h	/^      bool force_nonblock;$/;"	m	struct:global::__anon234	access:public
global::__anon234::frame_time	general.h	/^      struct retro_frame_time_callback frame_time;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_frame_time_callback	access:public
global::__anon234::frame_time_last	general.h	/^      retro_usec_t frame_time_last;$/;"	m	struct:global::__anon234	access:public
global::__anon234::hw_render_callback	general.h	/^      struct retro_hw_render_callback hw_render_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_hw_render_callback	access:public
global::__anon234::info	general.h	/^      struct retro_system_info info;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_system_info	access:public
global::__anon234::input_desc_btn	general.h	/^      const char *input_desc_btn[MAX_PLAYERS][RARCH_FIRST_CUSTOM_BIND];$/;"	m	struct:global::__anon234	access:public
global::__anon234::key_event	general.h	/^      retro_keyboard_event_t key_event;$/;"	m	struct:global::__anon234	access:public
global::__anon234::location_callback	general.h	/^      struct retro_location_callback location_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_location_callback	access:public
global::__anon234::no_game	general.h	/^      bool no_game;$/;"	m	struct:global::__anon234	access:public
global::__anon234::performance_level	general.h	/^      unsigned performance_level;$/;"	m	struct:global::__anon234	access:public
global::__anon234::pix_fmt	general.h	/^      enum retro_pixel_format pix_fmt;$/;"	m	struct:global::__anon234	typeref:enum:global::__anon234::retro_pixel_format	access:public
global::__anon234::rotation	general.h	/^      unsigned rotation;$/;"	m	struct:global::__anon234	access:public
global::__anon234::shutdown	general.h	/^      bool shutdown;$/;"	m	struct:global::__anon234	access:public
global::__anon234::valid_extensions	general.h	/^      char valid_extensions[PATH_MAX];$/;"	m	struct:global::__anon234	access:public
global::__anon235::block_chunk_size	general.h	/^      size_t block_chunk_size;$/;"	m	struct:global::__anon235	access:public
global::__anon235::chunk_size	general.h	/^      size_t chunk_size;$/;"	m	struct:global::__anon235	access:public
global::__anon235::conv_outsamples	general.h	/^      int16_t *conv_outsamples;$/;"	m	struct:global::__anon235	access:public
global::__anon235::data	general.h	/^      float *data;$/;"	m	struct:global::__anon235	access:public
global::__anon235::data_ptr	general.h	/^      size_t data_ptr;$/;"	m	struct:global::__anon235	access:public
global::__anon235::driver_buffer_size	general.h	/^      size_t driver_buffer_size;$/;"	m	struct:global::__anon235	access:public
global::__anon235::dsp_handle	general.h	/^      void *dsp_handle;$/;"	m	struct:global::__anon235	access:public
global::__anon235::dsp_lib	general.h	/^      dylib_t dsp_lib;$/;"	m	struct:global::__anon235	access:public
global::__anon235::dsp_plugin	general.h	/^      const rarch_dsp_plugin_t *dsp_plugin;$/;"	m	struct:global::__anon235	access:public
global::__anon235::mute	general.h	/^      bool mute;$/;"	m	struct:global::__anon235	access:public
global::__anon235::nonblock_chunk_size	general.h	/^      size_t nonblock_chunk_size;$/;"	m	struct:global::__anon235	access:public
global::__anon235::orig_src_ratio	general.h	/^      double orig_src_ratio;$/;"	m	struct:global::__anon235	access:public
global::__anon235::outsamples	general.h	/^      float *outsamples;$/;"	m	struct:global::__anon235	access:public
global::__anon235::rate_control	general.h	/^      bool rate_control; $/;"	m	struct:global::__anon235	access:public
global::__anon235::resampler	general.h	/^      const rarch_resampler_t *resampler;$/;"	m	struct:global::__anon235	access:public
global::__anon235::resampler_data	general.h	/^      void *resampler_data;$/;"	m	struct:global::__anon235	access:public
global::__anon235::rewind_buf	general.h	/^      int16_t *rewind_buf;$/;"	m	struct:global::__anon235	access:public
global::__anon235::rewind_ptr	general.h	/^      size_t rewind_ptr;$/;"	m	struct:global::__anon235	access:public
global::__anon235::rewind_size	general.h	/^      size_t rewind_size;$/;"	m	struct:global::__anon235	access:public
global::__anon235::src_ratio	general.h	/^      double src_ratio;$/;"	m	struct:global::__anon235	access:public
global::__anon235::use_float	general.h	/^      bool use_float;$/;"	m	struct:global::__anon235	access:public
global::__anon235::volume_db	general.h	/^      float volume_db;$/;"	m	struct:global::__anon235	access:public
global::__anon235::volume_gain	general.h	/^      float volume_gain;$/;"	m	struct:global::__anon235	access:public
global::__anon236::buffer_free_samples	general.h	/^      unsigned buffer_free_samples[AUDIO_BUFFER_FREE_SAMPLES_COUNT];$/;"	m	struct:global::__anon236	access:public
global::__anon236::buffer_free_samples_count	general.h	/^      uint64_t buffer_free_samples_count;$/;"	m	struct:global::__anon236	access:public
global::__anon236::frame_time_samples	general.h	/^      retro_time_t frame_time_samples[MEASURE_FRAME_TIME_SAMPLES_COUNT];$/;"	m	struct:global::__anon236	access:public
global::__anon236::frame_time_samples_count	general.h	/^      uint64_t frame_time_samples_count;$/;"	m	struct:global::__anon236	access:public
global::__anon237::active	general.h	/^      bool active;$/;"	m	struct:global::__anon237	access:public
global::__anon237::buffer	general.h	/^      uint32_t *buffer;$/;"	m	struct:global::__anon237	access:public
global::__anon237::colormap	general.h	/^      uint32_t *colormap;$/;"	m	struct:global::__anon237	access:public
global::__anon237::lib	general.h	/^      dylib_t lib;$/;"	m	struct:global::__anon237	access:public
global::__anon237::pitch	general.h	/^      unsigned pitch;$/;"	m	struct:global::__anon237	access:public
global::__anon237::prender	general.h	/^      void (*prender)(uint32_t *colormap, uint32_t *output, unsigned outpitch,$/;"	m	struct:global::__anon237	access:public
global::__anon237::psize	general.h	/^      void (*psize)(unsigned *width, unsigned *height);$/;"	m	struct:global::__anon237	access:public
global::__anon237::scale	general.h	/^      unsigned scale;$/;"	m	struct:global::__anon237	access:public
global::__anon237::scaler	general.h	/^      struct scaler_ctx scaler;$/;"	m	struct:global::__anon237	typeref:struct:global::__anon237::scaler_ctx	access:public
global::__anon237::scaler_out	general.h	/^      uint16_t *scaler_out;$/;"	m	struct:global::__anon237	access:public
global::__anon238::movie	general.h	/^      bsv_movie_t *movie;$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_end	general.h	/^      bool movie_end;$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_path	general.h	/^      char movie_path[PATH_MAX];$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_playback	general.h	/^      bool movie_playback;$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_start_path	general.h	/^      char movie_start_path[PATH_MAX];$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_start_playback	general.h	/^      bool movie_start_playback;$/;"	m	struct:global::__anon238	access:public
global::__anon238::movie_start_recording	general.h	/^      bool movie_start_recording;$/;"	m	struct:global::__anon238	access:public
global::__anon239::cb_callback	general.h	/^      bool (*cb_callback)(void *data);$/;"	m	struct:global::__anon239	access:public
global::__anon239::cb_init	general.h	/^      bool (*cb_init)(void *data);$/;"	m	struct:global::__anon239	access:public
global::__anon240::data	general.h	/^      const void *data;$/;"	m	struct:global::__anon240	access:public
global::__anon240::height	general.h	/^      unsigned height;$/;"	m	struct:global::__anon240	access:public
global::__anon240::pitch	general.h	/^      size_t pitch;$/;"	m	struct:global::__anon240	access:public
global::__anon240::width	general.h	/^      unsigned width;$/;"	m	struct:global::__anon240	access:public
global::__anon241::list	general.h	/^      struct string_list *list;$/;"	m	struct:global::__anon241	typeref:struct:global::__anon241::string_list	access:public
global::__anon241::ptr	general.h	/^      size_t ptr;$/;"	m	struct:global::__anon241	access:public
global::__anon242::__anon243::__anon244::check	general.h	/^            bool check;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::__anon244::count	general.h	/^            unsigned count;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::__anon244::current	general.h	/^            rarch_resolution_t current;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::__anon244::initial	general.h	/^            rarch_resolution_t initial;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::__anon244::list	general.h	/^            uint32_t *list;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::__anon245::custom_vp	general.h	/^            rarch_viewport_t custom_vp;$/;"	m	struct:global::__anon242::__anon243::__anon245	access:public
global::__anon242::__anon243::flicker_filter_index	general.h	/^         unsigned char flicker_filter_index;$/;"	m	struct:global::__anon242::__anon243	access:public
global::__anon242::__anon243::gamma_correction	general.h	/^         unsigned gamma_correction;$/;"	m	struct:global::__anon242::__anon243	access:public
global::__anon242::__anon243::pal_enable	general.h	/^         bool pal_enable;$/;"	m	struct:global::__anon242::__anon243	access:public
global::__anon242::__anon243::resolutions	general.h	/^         } resolutions;$/;"	m	struct:global::__anon242::__anon243	typeref:struct:global::__anon242::__anon243::__anon244	access:public
global::__anon242::__anon243::soft_filter_index	general.h	/^         unsigned char soft_filter_index;$/;"	m	struct:global::__anon242::__anon243	access:public
global::__anon242::__anon243::viewports	general.h	/^         } viewports;$/;"	m	struct:global::__anon242::__anon243	typeref:struct:global::__anon242::__anon243::__anon245	access:public
global::__anon242::__anon246::mode	general.h	/^         unsigned mode;$/;"	m	struct:global::__anon242::__anon246	access:public
global::__anon242::__anon246::volume_level	general.h	/^         unsigned volume_level;$/;"	m	struct:global::__anon242::__anon246	access:public
global::__anon242::screen	general.h	/^      } screen;$/;"	m	struct:global::__anon242	typeref:struct:global::__anon242::__anon243	access:public
global::__anon242::sound	general.h	/^      } sound;$/;"	m	struct:global::__anon242	typeref:struct:global::__anon242::__anon246	access:public
global::append_config_path	general.h	/^   char append_config_path[PATH_MAX];$/;"	m	struct:global	access:public
global::audio_active	general.h	/^   bool audio_active;$/;"	m	struct:global	access:public
global::audio_data	general.h	/^   } audio_data;$/;"	m	struct:global	typeref:struct:global::__anon235	access:public
global::autosave	general.h	/^   autosave_t *autosave[2];$/;"	m	struct:global	access:public
global::basename	general.h	/^   char basename[PATH_MAX];$/;"	m	struct:global	access:public
global::block_config_read	general.h	/^   bool block_config_read;$/;"	m	struct:global	access:public
global::block_patch	general.h	/^   bool block_patch;$/;"	m	struct:global	access:public
global::bps_name	general.h	/^   char bps_name[PATH_MAX];$/;"	m	struct:global	access:public
global::bps_pref	general.h	/^   bool bps_pref;$/;"	m	struct:global	access:public
global::bsv	general.h	/^   } bsv;$/;"	m	struct:global	typeref:struct:global::__anon238	access:public
global::bsx_rom_path	general.h	/^   char bsx_rom_path[PATH_MAX];$/;"	m	struct:global	access:public
global::camera_active	general.h	/^   bool camera_active;$/;"	m	struct:global	access:public
global::cart_crc	general.h	/^   uint32_t cart_crc;$/;"	m	struct:global	access:public
global::cheat	general.h	/^   cheat_manager_t *cheat;$/;"	m	struct:global	access:public
global::config_path	general.h	/^   char config_path[PATH_MAX];$/;"	m	struct:global	access:public
global::config_save_on_exit	general.h	/^   bool config_save_on_exit;$/;"	m	struct:global	access:public
global::console	general.h	/^   } console;$/;"	m	struct:global	typeref:struct:global::__anon242	access:public
global::default_log_file	general.h	/^   char default_log_file[PATH_MAX];$/;"	m	struct:global	access:public
global::error_in_init	general.h	/^   bool error_in_init;$/;"	m	struct:global	access:public
global::error_sjlj_context	general.h	/^   jmp_buf error_sjlj_context;$/;"	m	struct:global	access:public
global::error_string	general.h	/^   char error_string[1024];$/;"	m	struct:global	access:public
global::exec	general.h	/^   bool exec;$/;"	m	struct:global	access:public
global::filter	general.h	/^   } filter;$/;"	m	struct:global	typeref:struct:global::__anon237	access:public
global::force_fullscreen	general.h	/^   bool force_fullscreen;$/;"	m	struct:global	access:public
global::frame_cache	general.h	/^   } frame_cache;$/;"	m	struct:global	typeref:struct:global::__anon240	access:public
global::frame_count	general.h	/^   unsigned frame_count;$/;"	m	struct:global	access:public
global::frame_is_reverse	general.h	/^   bool frame_is_reverse;$/;"	m	struct:global	access:public
global::frame_limit	general.h	/^   } frame_limit;$/;"	m	struct:global	typeref:struct:global::__anon233	access:public
global::fullpath	general.h	/^   char fullpath[PATH_MAX];$/;"	m	struct:global	access:public
global::game_type	general.h	/^   enum rarch_game_type game_type;$/;"	m	struct:global	typeref:enum:global::rarch_game_type	access:public
global::gb_rom_path	general.h	/^   char gb_rom_path[PATH_MAX];$/;"	m	struct:global	access:public
global::has_set_libretro_device	general.h	/^   bool has_set_libretro_device[MAX_PLAYERS];$/;"	m	struct:global	access:public
global::has_set_save_path	general.h	/^   bool has_set_save_path;$/;"	m	struct:global	access:public
global::has_set_state_path	general.h	/^   bool has_set_state_path;$/;"	m	struct:global	access:public
global::input_config_path	general.h	/^   char input_config_path[PATH_MAX];$/;"	m	struct:global	access:public
global::ips_name	general.h	/^   char ips_name[PATH_MAX];$/;"	m	struct:global	access:public
global::ips_pref	general.h	/^   bool ips_pref;$/;"	m	struct:global	access:public
global::is_oneshot	general.h	/^   bool is_oneshot;$/;"	m	struct:global	access:public
global::is_paused	general.h	/^   bool is_paused;$/;"	m	struct:global	access:public
global::is_slowmotion	general.h	/^   bool is_slowmotion;$/;"	m	struct:global	access:public
global::last_rom	general.h	/^   char last_rom[PATH_MAX];$/;"	m	struct:global	access:public
global::libretro_dummy	general.h	/^   bool libretro_dummy;$/;"	m	struct:global	access:public
global::libretro_no_rom	general.h	/^   bool libretro_no_rom;$/;"	m	struct:global	access:public
global::lifecycle_state	general.h	/^   uint64_t lifecycle_state;$/;"	m	struct:global	access:public
global::location_active	general.h	/^   bool location_active;$/;"	m	struct:global	access:public
global::log_file	general.h	/^   FILE *log_file;$/;"	m	struct:global	access:public
global::main_is_init	general.h	/^   bool main_is_init;$/;"	m	struct:global	access:public
global::measure_data	general.h	/^   } measure_data;$/;"	m	struct:global	typeref:struct:global::__anon236	access:public
global::menu_texture_path	general.h	/^   char menu_texture_path[PATH_MAX];$/;"	m	struct:global	access:public
global::menu_toggle_behavior	general.h	/^   unsigned menu_toggle_behavior;$/;"	m	struct:global	access:public
global::msg_queue	general.h	/^   msg_queue_t *msg_queue;$/;"	m	struct:global	access:public
global::netplay	general.h	/^   netplay_t *netplay;$/;"	m	struct:global	access:public
global::netplay_enable	general.h	/^   bool netplay_enable;$/;"	m	struct:global	access:public
global::netplay_is_client	general.h	/^   bool netplay_is_client;$/;"	m	struct:global	access:public
global::netplay_is_spectate	general.h	/^   bool netplay_is_spectate;$/;"	m	struct:global	access:public
global::netplay_nick	general.h	/^   char netplay_nick[32];$/;"	m	struct:global	access:public
global::netplay_port	general.h	/^   uint16_t netplay_port;$/;"	m	struct:global	access:public
global::netplay_server	general.h	/^   char netplay_server[PATH_MAX];$/;"	m	struct:global	access:public
global::netplay_sync_frames	general.h	/^   unsigned netplay_sync_frames;$/;"	m	struct:global	access:public
global::osk	general.h	/^   } osk;$/;"	m	struct:global	typeref:struct:global::__anon239	access:public
global::osk_active	general.h	/^   bool osk_active;$/;"	m	struct:global	access:public
global::overlay_dir	general.h	/^   char overlay_dir[PATH_MAX];$/;"	m	struct:global	access:public
global::rec	general.h	/^   ffemu_t *rec;$/;"	m	struct:global	access:public
global::record_config	general.h	/^   char record_config[PATH_MAX];$/;"	m	struct:global	access:public
global::record_gpu_buffer	general.h	/^   uint8_t *record_gpu_buffer;$/;"	m	struct:global	access:public
global::record_gpu_height	general.h	/^   size_t record_gpu_height;$/;"	m	struct:global	access:public
global::record_gpu_width	general.h	/^   size_t record_gpu_width;$/;"	m	struct:global	access:public
global::record_height	general.h	/^   unsigned record_height;$/;"	m	struct:global	access:public
global::record_path	general.h	/^   char record_path[PATH_MAX];$/;"	m	struct:global	access:public
global::record_width	general.h	/^   unsigned record_width;$/;"	m	struct:global	access:public
global::recording	general.h	/^   bool recording;$/;"	m	struct:global	access:public
global::rom_file_temporary	general.h	/^   bool rom_file_temporary;$/;"	m	struct:global	access:public
global::savefile_dir	general.h	/^   char savefile_dir[PATH_MAX];$/;"	m	struct:global	access:public
global::savefile_name_asrm	general.h	/^   char savefile_name_asrm[PATH_MAX];$/;"	m	struct:global	access:public
global::savefile_name_bsrm	general.h	/^   char savefile_name_bsrm[PATH_MAX];$/;"	m	struct:global	access:public
global::savefile_name_psrm	general.h	/^   char savefile_name_psrm[PATH_MAX];$/;"	m	struct:global	access:public
global::savefile_name_rtc	general.h	/^   char savefile_name_rtc[PATH_MAX]; \/\/ Make sure that fill_pathname has space.$/;"	m	struct:global	access:public
global::savefile_name_srm	general.h	/^   char savefile_name_srm[PATH_MAX];$/;"	m	struct:global	access:public
global::savestate_dir	general.h	/^   char savestate_dir[PATH_MAX];$/;"	m	struct:global	access:public
global::savestate_name	general.h	/^   char savestate_name[PATH_MAX];$/;"	m	struct:global	access:public
global::sha256	general.h	/^   char sha256[64 + 1];$/;"	m	struct:global	access:public
global::shader_dir	general.h	/^   } shader_dir;$/;"	m	struct:global	typeref:struct:global::__anon241	access:public
global::sram_load_disable	general.h	/^   bool sram_load_disable;$/;"	m	struct:global	access:public
global::sram_save_disable	general.h	/^   bool sram_save_disable;$/;"	m	struct:global	access:public
global::state_buf	general.h	/^   void *state_buf;$/;"	m	struct:global	access:public
global::state_manager	general.h	/^   state_manager_t *state_manager;$/;"	m	struct:global	access:public
global::state_size	general.h	/^   size_t state_size;$/;"	m	struct:global	access:public
global::state_slot	general.h	/^   unsigned state_slot;$/;"	m	struct:global	access:public
global::sufami_rom_path	general.h	/^   char sufami_rom_path[2][PATH_MAX];$/;"	m	struct:global	access:public
global::system	general.h	/^   } system;$/;"	m	struct:global	typeref:struct:global::__anon234	access:public
global::title_buf	general.h	/^   char title_buf[64];$/;"	m	struct:global	access:public
global::turbo_count	general.h	/^   unsigned turbo_count;$/;"	m	struct:global	access:public
global::turbo_enable	general.h	/^   uint16_t turbo_enable[MAX_PLAYERS];$/;"	m	struct:global	access:public
global::turbo_frame_enable	general.h	/^   bool turbo_frame_enable[MAX_PLAYERS];$/;"	m	struct:global	access:public
global::ups_name	general.h	/^   char ups_name[PATH_MAX];$/;"	m	struct:global	access:public
global::ups_pref	general.h	/^   bool ups_pref;$/;"	m	struct:global	access:public
global::use_sram	general.h	/^   bool use_sram;$/;"	m	struct:global	access:public
global::verbose	general.h	/^   bool verbose;$/;"	m	struct:global	access:public
global::video_active	general.h	/^   bool video_active;$/;"	m	struct:global	access:public
global::xml_name	general.h	/^   char xml_name[PATH_MAX];$/;"	m	struct:global	access:public
globalConfigFile	apple/OSX/platform.h	/^@property (nonatomic, copy) NSString* globalConfigFile;   \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch\/retroarch.cfg$/;"	v
globalConfigFile	apple/iOS/platform.h	/^@property (nonatomic) NSString* globalConfigFile;   \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch\/retroarch.cfg$/;"	v
global_core_list	apple/common/core_info_ext.c	/^static core_info_list_t* global_core_list = 0;$/;"	v	file:
global_init_drivers	driver.c	/^void global_init_drivers(void)$/;"	f	signature:(void)
global_init_drivers	driver.h	/^void global_init_drivers(void);$/;"	p	signature:(void)
global_uninit_drivers	driver.c	/^void global_uninit_drivers(void)$/;"	f	signature:(void)
global_uninit_drivers	driver.h	/^void global_uninit_drivers(void);$/;"	p	signature:(void)
glsl_attrib	gfx/shader_glsl.c	/^struct glsl_attrib$/;"	s	file:
glsl_attrib::loc	gfx/shader_glsl.c	/^   GLint loc;$/;"	m	struct:glsl_attrib	file:	access:public
glsl_attrib::offset	gfx/shader_glsl.c	/^   GLsizei offset;$/;"	m	struct:glsl_attrib	file:	access:public
glsl_attrib::size	gfx/shader_glsl.c	/^   GLsizei size;$/;"	m	struct:glsl_attrib	file:	access:public
glsl_core	gfx/shader_glsl.c	/^static bool glsl_core;$/;"	v	file:
glsl_enable	gfx/shader_glsl.c	/^static bool glsl_enable;$/;"	v	file:
glsl_get_proc_address	gfx/shader_glsl.c	/^static gfx_ctx_proc_t (*glsl_get_proc_address)(const char*);$/;"	v	file:
glsl_major	gfx/shader_glsl.c	/^static unsigned glsl_major;$/;"	v	file:
glsl_minor	gfx/shader_glsl.c	/^static unsigned glsl_minor;$/;"	v	file:
glsl_prefixes	gfx/shader_glsl.c	/^static const char *glsl_prefixes[] = {$/;"	v	file:
glsl_shader	gfx/shader_glsl.c	/^static struct gfx_shader *glsl_shader;$/;"	v	typeref:struct:gfx_shader	file:
glsl_vbo	gfx/shader_glsl.c	/^static struct cache_vbo glsl_vbo[GFX_MAX_SHADERS];$/;"	v	typeref:struct:cache_vbo	file:
glx_create_context_attribs	gfx/context/glx_ctx.c	/^static glXCreateContextAttribsARBProc glx_create_context_attribs;$/;"	v	file:
glx_wait_notify	gfx/context/glx_ctx.c	/^static Bool glx_wait_notify(Display *d, XEvent *e, char *arg)$/;"	f	file:	signature:(Display *d, XEvent *e, char *arg)
gmmAddFree	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmAddFree($/;"	f	file:	signature:( GmmAllocator *pAllocator, GmmBlock *pBlock )
gmmAddPendingFree	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmAddPendingFree (void *data)$/;"	f	file:	signature:(void *data)
gmmAlloc	ps3/rgl/src/include/GmmAlloc.h	/^uint32_t gmmAlloc(const uint32_t size);$/;"	p	signature:(const uint32_t size)
gmmAlloc	ps3/rgl/src/rgl_ps3.cpp	/^uint32_t gmmAlloc(const uint32_t size)$/;"	f	signature:(const uint32_t size)
gmmAllocBlock	ps3/rgl/src/rgl_ps3.cpp	/^static GmmBlock *gmmAllocBlock($/;"	f	file:	signature:( GmmAllocator *pAllocator, uint32_t size )
gmmAllocExtendedTileBlock	ps3/rgl/src/rgl_ps3.cpp	/^static uint32_t gmmAllocExtendedTileBlock(const uint32_t size, const uint32_t tag)$/;"	f	file:	signature:(const uint32_t size, const uint32_t tag)
gmmAllocFixed	ps3/rgl/src/rgl_ps3.cpp	/^static void *gmmAllocFixed(uint8_t isTile)$/;"	f	file:	signature:(uint8_t isTile)
gmmAllocFixedTileBlock	ps3/rgl/src/include/GmmAlloc.h	124;"	d
gmmAllocSweep	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmAllocSweep(void *data)$/;"	f	file:	signature:(void *data)
gmmAllocTileBlock	ps3/rgl/src/include/GmmAlloc.h	127;"	d
gmmAllocTiled	ps3/rgl/src/include/GmmAlloc.h	/^uint32_t gmmAllocTiled(const uint32_t size);$/;"	p	signature:(const uint32_t size)
gmmAllocTiled	ps3/rgl/src/rgl_ps3.cpp	/^uint32_t gmmAllocTiled(const uint32_t size)$/;"	f	signature:(const uint32_t size)
gmmCreateTileBlock	ps3/rgl/src/rgl_ps3.cpp	/^static GmmTileBlock *gmmCreateTileBlock($/;"	f	file:	signature:( GmmAllocator *pAllocator, const uint32_t size )
gmmDestroy	ps3/rgl/src/include/GmmAlloc.h	/^uint32_t gmmDestroy(void);$/;"	p	signature:(void)
gmmDestroy	ps3/rgl/src/rgl_ps3.cpp	/^uint32_t gmmDestroy (void)$/;"	f	signature:(void)
gmmDestroyFixedAllocator	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmDestroyFixedAllocator (void)$/;"	f	file:	signature:(void)
gmmFindFreeBlock	ps3/rgl/src/rgl_ps3.cpp	/^static uint32_t gmmFindFreeBlock($/;"	f	file:	signature:( GmmAllocator *pAllocator, uint32_t size )
gmmFindFreeTileBlock	ps3/rgl/src/rgl_ps3.cpp	/^static GmmTileBlock *gmmFindFreeTileBlock($/;"	f	file:	signature:( GmmAllocator *pAllocator, const uint32_t size )
gmmFree	ps3/rgl/src/include/GmmAlloc.h	/^uint32_t gmmFree (const uint32_t freeId);$/;"	p	signature:(const uint32_t freeId)
gmmFree	ps3/rgl/src/rgl_ps3.cpp	/^uint32_t gmmFree(const uint32_t freeId)$/;"	f	signature:(const uint32_t freeId)
gmmFreeAll	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmFreeAll(void)$/;"	f	file:	signature:(void)
gmmFreeBlock	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmFreeBlock (void *data)$/;"	f	file:	signature:(void *data)
gmmFreeFixed	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmFreeFixed(uint8_t isTile, void *pBlock)$/;"	f	file:	signature:(uint8_t isTile, void *pBlock)
gmmFreeFixedBlock	ps3/rgl/src/include/GmmAlloc.h	126;"	d
gmmFreeFixedTileBlock	ps3/rgl/src/include/GmmAlloc.h	125;"	d
gmmFreeTileBlock	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmFreeTileBlock (void *data)$/;"	f	file:	signature:(void *data)
gmmGetBlockSize	ps3/rgl/src/include/GmmAlloc.h	121;"	d
gmmGetTileData	ps3/rgl/src/include/GmmAlloc.h	122;"	d
gmmIdToAddress	ps3/rgl/src/include/GmmAlloc.h	/^char *gmmIdToAddress(const uint32_t id);$/;"	p	signature:(const uint32_t id)
gmmIdToAddress	ps3/rgl/src/rgl_ps3.cpp	/^char *gmmIdToAddress (const uint32_t id)$/;"	f	signature:(const uint32_t id)
gmmIdToOffset	ps3/rgl/src/include/GmmAlloc.h	123;"	d
gmmInit	ps3/rgl/src/rgl_ps3.cpp	/^static uint32_t gmmInit(const void *localMemoryBase, const void *localStartAddress,$/;"	f	file:	signature:(const void *localMemoryBase, const void *localStartAddress, const uint32_t localSize)
gmmInitFixedAllocator	ps3/rgl/src/rgl_ps3.cpp	/^static uint32_t gmmInitFixedAllocator(void)$/;"	f	file:	signature:(void)
gmmInternalSweep	ps3/rgl/src/rgl_ps3.cpp	/^static uint8_t gmmInternalSweep(void *data)$/;"	f	file:	signature:(void *data)
gmmLocalMemcpy	ps3/rgl/src/rgl_ps3.cpp	/^static inline void gmmLocalMemcpy(void *data, const uint32_t dstOffset,$/;"	f	file:	signature:(void *data, const uint32_t dstOffset, const uint32_t srcOffset, const uint32_t moveSize)
gmmMemcpy	ps3/rgl/src/rgl_ps3.cpp	/^static inline void gmmMemcpy(void *data, const uint8_t mode,$/;"	f	file:	signature:(void *data, const uint8_t mode, const uint32_t dstOffset, const uint32_t srcOffset, const uint32_t moveSize)
gmmPinId	ps3/rgl/src/include/GmmAlloc.h	133;"	d
gmmPrintState	ps3/rgl/src/include/GmmAlloc.h	/^void gmmPrintState(); \/\/ print out all blocks and their current states$/;"	p	signature:()
gmmRemoveFree	ps3/rgl/src/rgl_ps3.cpp	/^static void gmmRemoveFree($/;"	f	file:	signature:( GmmAllocator *pAllocator, GmmBlock *pBlock, uint8_t freeIndex )
gmmSetTileAttrib	ps3/rgl/src/include/GmmAlloc.h	129;"	d
gmmSizeToFreeIndex	ps3/rgl/src/rgl_ps3.cpp	/^static uint8_t gmmSizeToFreeIndex(uint32_t size)$/;"	f	file:	signature:(uint32_t size)
gmmUnpinId	ps3/rgl/src/include/GmmAlloc.h	137;"	d
gpuAddressId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuAddressId;$/;"	m	struct:__anon53	access:public
gpuAddressIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuAddressIdOffset;$/;"	m	struct:__anon53	access:public
gpuLayout	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureLayout gpuLayout;$/;"	m	struct:__anon53	access:public
gpuSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gpuSize;$/;"	m	struct:__anon53	access:public
gpu_record	config.def.h	/^static const bool gpu_record = false;$/;"	v
gpu_record	general.h	/^      bool gpu_record;$/;"	m	struct:settings::__anon227	access:public
gpu_screenshot	config.def.h	/^static const bool gpu_screenshot = true;$/;"	v
gpu_screenshot	general.h	/^      bool gpu_screenshot;$/;"	m	struct:settings::__anon227	access:public
grabKeyCode	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private boolean grabKeyCode = false;$/;"	f	class:KeyBindPreference	file:	access:private
grab_mouse	driver.h	/^   void (*grab_mouse)(void *data, bool state);$/;"	m	struct:input_driver	access:public
grab_mouse	input/x11_input.c	/^   bool grab_mouse;$/;"	m	struct:x11_input	file:	access:public
grab_mouse_toggle	driver.h	/^   void (*grab_mouse_toggle)(void *data);$/;"	m	struct:video_poke_interface	access:public
grab_region	audio/dsound.c	/^static inline bool grab_region(dsound_t *ds, DWORD write_ptr, struct audio_lock *region)$/;"	f	file:	signature:(dsound_t *ds, DWORD write_ptr, struct audio_lock *region)
grabbers	apple/iOS/bluetooth/btdynamic.c	/^}  grabbers[] =$/;"	v	typeref:struct:__anon141	file:
gray_filler	frontend/menu/disp/rgui.c	/^static uint16_t gray_filler(unsigned x, unsigned y)$/;"	f	file:	signature:(unsigned x, unsigned y)
green	gfx/context/sunxi_disp_ioctl.h	/^	__u8 green;$/;"	m	struct:__anon164	access:public
green_filler	frontend/menu/disp/rgui.c	/^static uint16_t green_filler(unsigned x, unsigned y)$/;"	f	file:	signature:(unsigned x, unsigned y)
green_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 green_match_rule;$/;"	m	struct:__anon188	access:public
groupId	blackberry-qnx/bb10/src/ButtonMap.h	/^    QString groupId;$/;"	m	class:ButtonMap	access:private
groupList	ps3/rgl/include/Cg/CgCommon.h	/^   CGprogramGroup groupList;$/;"	m	struct:_CGcontext	access:public
guid	audio/dsound.c	/^   LPGUID guid;$/;"	m	struct:dsound_dev	file:	access:public
gxFifoInited	gx/gx_video_inl.h	/^	u32 gxFifoInited;$/;"	m	struct:__gx_regdef	access:public
gxFifoUnlinked	gx/gx_video_inl.h	/^	u8 gxFifoUnlinked;$/;"	m	struct:__gx_regdef	access:public
gx_alive	gx/gx_video.c	/^static bool gx_alive(void *data)$/;"	f	file:	signature:(void *data)
gx_apply_state_changes	gx/gx_video.c	/^static void gx_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
gx_audio_buffer_size	gx/gx_audio.c	/^static size_t gx_audio_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
gx_audio_data	gx/gx_audio.c	/^static volatile gx_audio_t *gx_audio_data;$/;"	v	file:
gx_audio_free	gx/gx_audio.c	/^static void gx_audio_free(void *data)$/;"	f	file:	signature:(void *data)
gx_audio_init	gx/gx_audio.c	/^static void *gx_audio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
gx_audio_set_nonblock_state	gx/gx_audio.c	/^static void gx_audio_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
gx_audio_start	gx/gx_audio.c	/^static bool gx_audio_start(void *data)$/;"	f	file:	signature:(void *data)
gx_audio_stop	gx/gx_audio.c	/^static bool gx_audio_stop(void *data)$/;"	f	file:	signature:(void *data)
gx_audio_t	gx/gx_audio.c	/^} gx_audio_t;$/;"	t	typeref:struct:__anon247	file:
gx_audio_write	gx/gx_audio.c	/^static ssize_t gx_audio_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
gx_audio_write_avail	gx/gx_audio.c	/^static size_t gx_audio_write_avail(void *data)$/;"	f	file:	signature:(void *data)
gx_blit_line	gx/gx_video.c	/^static void gx_blit_line(unsigned x, unsigned y, const char *message)$/;"	f	file:	signature:(unsigned x, unsigned y, const char *message)
gx_device_id	gx/gx_input.h	/^enum gx_device_id$/;"	g
gx_device_mutex	frontend/platform/platform_gx.c	/^static mutex_t gx_device_mutex;$/;"	v	file:
gx_devices	frontend/platform/platform_gx.c	/^} gx_devices[GX_DEVICE_END];$/;"	v	typeref:struct:__anon13	file:
gx_devthread	frontend/platform/platform_gx.c	/^static void *gx_devthread(void *a)$/;"	f	file:	signature:(void *a)
gx_efb_screenshot	gx/gx_video.c	/^static void gx_efb_screenshot(void)$/;"	f	file:	signature:(void)
gx_focus	gx/gx_video.c	/^static bool gx_focus(void *data)$/;"	f	file:	signature:(void *data)
gx_frame	gx/gx_video.c	/^static bool gx_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
gx_free	gx/gx_video.c	/^static void gx_free(void *data)$/;"	f	file:	signature:(void *data)
gx_get_device_from_path	frontend/platform/platform_gx.c	/^static int gx_get_device_from_path(const char *path)$/;"	f	file:	signature:(const char *path)
gx_get_poke_interface	gx/gx_video.c	/^static void gx_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
gx_get_video_mode	gx/gx_video.c	/^const char *gx_get_video_mode(void)$/;"	f	signature:(void)
gx_get_video_mode	gx/gx_video.h	/^const char *gx_get_video_mode(void);$/;"	p	signature:(void)
gx_height	gx/gx_video.c	/^uint16_t gx_width, gx_height;$/;"	v
gx_init	gx/gx_video.c	/^static void *gx_init(const video_info_t *video,$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
gx_init_mem2	wii/mem2_manager.c	/^bool gx_init_mem2()  $/;"	f
gx_init_mem2	wii/mem2_manager.h	/^bool gx_init_mem2();$/;"	p	signature:()
gx_input	gx/gx_input.c	/^typedef struct gx_input$/;"	s	file:
gx_input::analog_state	gx/gx_input.c	/^   int16_t analog_state[MAX_PADS][2][2];$/;"	m	struct:gx_input	file:	access:public
gx_input::pad_state	gx/gx_input.c	/^   uint64_t pad_state[MAX_PADS];$/;"	m	struct:gx_input	file:	access:public
gx_input_free_input	gx/gx_input.c	/^static void gx_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
gx_input_get_capabilities	gx/gx_input.c	/^static uint64_t gx_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
gx_input_init	gx/gx_input.c	/^static void *gx_input_init(void)$/;"	f	file:	signature:(void)
gx_input_key_pressed	gx/gx_input.c	/^static bool gx_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
gx_input_poll	gx/gx_input.c	/^static void gx_input_poll(void *data)$/;"	f	file:	signature:(void *data)
gx_input_set_keybinds	gx/gx_input.c	/^static void gx_input_set_keybinds(void *data, unsigned device, unsigned port,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
gx_input_state	gx/gx_input.c	/^static int16_t gx_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
gx_input_t	gx/gx_input.c	/^} gx_input_t;$/;"	t	typeref:struct:gx_input	file:
gx_logger_file	frontend/platform/platform_gx.c	/^int gx_logger_file(struct _reent *r, int fd, const char *ptr, size_t len)$/;"	f	signature:(struct _reent *r, int fd, const char *ptr, size_t len)
gx_logger_net	frontend/platform/platform_gx.c	/^int gx_logger_net(struct _reent *r, int fd, const char *ptr, size_t len)$/;"	f	signature:(struct _reent *r, int fd, const char *ptr, size_t len)
gx_mem2_heap	wii/mem2_manager.c	/^static heap_cntrl gx_mem2_heap;$/;"	v	file:
gx_mem2_total	wii/mem2_manager.c	/^u32 gx_mem2_total()$/;"	f
gx_mem2_total	wii/mem2_manager.h	/^u32 gx_mem2_total();$/;"	p	signature:()
gx_mem2_used	wii/mem2_manager.c	/^u32 gx_mem2_used()$/;"	f
gx_mem2_used	wii/mem2_manager.h	/^u32 gx_mem2_used();$/;"	p	signature:()
gx_mode	gx/gx_video.c	/^GXRModeObj gx_mode;$/;"	v
gx_old_height	gx/gx_video.c	/^unsigned gx_old_width, gx_old_height;$/;"	v
gx_old_width	gx/gx_video.c	/^unsigned gx_old_width, gx_old_height;$/;"	v
gx_poke_interface	gx/gx_video.c	/^static const video_poke_interface_t gx_poke_interface = {$/;"	v	file:
gx_resize	gx/gx_video.c	/^static void gx_resize(void *data)$/;"	f	file:	signature:(void *data)
gx_restart	gx/gx_video.c	/^static void gx_restart(void) { }$/;"	f	file:	signature:(void)
gx_rom_path	frontend/platform/platform_wii.c	/^char gx_rom_path[PATH_MAX];$/;"	v
gx_set_aspect_ratio	gx/gx_video.c	/^static void gx_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
gx_set_nonblock_state	gx/gx_video.c	/^static void gx_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
gx_set_rotation	gx/gx_video.c	/^static void gx_set_rotation(void *data, unsigned orientation)$/;"	f	file:	signature:(void *data, unsigned orientation)
gx_set_texture_enable	gx/gx_video.c	/^static void gx_set_texture_enable(void *data, bool enable, bool full_screen)$/;"	f	file:	signature:(void *data, bool enable, bool full_screen)
gx_set_texture_frame	gx/gx_video.c	/^static void gx_set_texture_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
gx_set_video_mode	gx/gx_video.c	/^void gx_set_video_mode(void *data, unsigned fbWidth, unsigned lines)$/;"	f	signature:(void *data, unsigned fbWidth, unsigned lines)
gx_set_video_mode	gx/gx_video.h	/^void gx_set_video_mode(void *data, unsigned fbWidth, unsigned lines);$/;"	p	signature:(void *data, unsigned fbWidth, unsigned lines)
gx_video	gx/gx_video.h	/^typedef struct gx_video$/;"	s
gx_video::double_strike	gx/gx_video.h	/^   bool double_strike;$/;"	m	struct:gx_video	access:public
gx_video::keep_aspect	gx/gx_video.h	/^   bool keep_aspect;$/;"	m	struct:gx_video	access:public
gx_video::menu_data	gx/gx_video.h	/^   uint32_t *menu_data; \/\/ FIXME: Should be const uint16_t*.$/;"	m	struct:gx_video	access:public
gx_video::rgb32	gx/gx_video.h	/^   bool rgb32;$/;"	m	struct:gx_video	access:public
gx_video::rgui_texture_enable	gx/gx_video.h	/^   bool rgui_texture_enable;$/;"	m	struct:gx_video	access:public
gx_video::scale	gx/gx_video.h	/^   unsigned scale;$/;"	m	struct:gx_video	access:public
gx_video::should_resize	gx/gx_video.h	/^   bool should_resize;$/;"	m	struct:gx_video	access:public
gx_video::vp	gx/gx_video.h	/^   rarch_viewport_t vp;$/;"	m	struct:gx_video	access:public
gx_video_t	gx/gx_video.h	/^} gx_video_t;$/;"	t	typeref:struct:gx_video
gx_viewport_info	gx/gx_video.c	/^static void gx_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
gx_width	gx/gx_video.c	/^uint16_t gx_width, gx_height;$/;"	v
h	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
h	gfx/lima_gfx.c	/^	int w, h;$/;"	m	struct:LIMA_Surface	file:	access:public
h	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
h	hash.c	/^   uint32_t h[8];$/;"	m	struct:sha256_ctx	file:	access:public
h	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
h	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
hEvent	audio/xaudio-c/xaudio-c.cpp	/^   HANDLE hEvent;$/;"	m	struct:xaudio2	file:	access:public
hWnd	gfx/d3d9/d3d9.hpp	/^      HWND hWnd;$/;"	m	class:D3DVideo	access:private
h_addr_list	netplay.c	/^   char **h_addr_list; \/\/ Just do the minimal needed ...$/;"	m	struct:hostent	file:	access:public
hack_source_fragment	tools/cg2glsl.py	/^def hack_source_fragment(source):$/;"	f	access:public
hack_source_vertex	tools/cg2glsl.py	/^def hack_source_vertex(source):$/;"	f	access:public
handle	apple/iOS/bluetooth/btpad.c	/^   uint16_t handle;$/;"	m	struct:apple_pad_connection	file:	access:public
handle	apple/iOS/bluetooth/btpad_queue.c	/^         uint16_t handle;$/;"	m	struct:btpad_queue_command::__anon142::__anon144	file:	access:public
handle	audio/openal.c	/^   ALCdevice *handle;$/;"	m	struct:al	file:	access:public
handle	blackberry-qnx/frontend_qnx.h	/^    screen_device_t handle;$/;"	m	struct:__anon94	access:public
handle_cb	input/udev_input.c	/^   device_handle_cb handle_cb;$/;"	m	struct:input_device	file:	access:public
handle_hotplug	input/udev_input.c	/^static void handle_hotplug(udev_input_t *udev)$/;"	f	file:	signature:(udev_input_t *udev)
handle_hotplug	input/udev_joypad.c	/^static void handle_hotplug(void)$/;"	f	file:	signature:(void)
handle_icade_event	apple/common/apple_input.c	/^static void handle_icade_event(unsigned keycode)$/;"	f	file:	signature:(unsigned keycode)
handle_navigator_event	blackberry-qnx/qnx_input.c	/^static void handle_navigator_event(bps_event_t *event)$/;"	f	file:	signature:(bps_event_t *event)
handle_plugged_pad	input/linuxraw_joypad.c	/^static void handle_plugged_pad(void)$/;"	f	file:	signature:(void)
handle_screen_event	blackberry-qnx/qnx_input.c	/^static void handle_screen_event(bps_event_t *event)$/;"	f	file:	signature:(bps_event_t *event)
handle_xkb	input/udev_input.c	/^static void handle_xkb(udev_input_t *udev, int code, int value)$/;"	f	file:	signature:(udev_input_t *udev, int code, int value)
handshake_state	apple/common/hidpad/wiimote.h	/^		byte handshake_state;			\/**< the state of the connection handshake	*\/$/;"	m	struct:wiimote_t	access:public
hard_sync	config.def.h	/^static const bool hard_sync = false;$/;"	v
hard_sync	general.h	/^      bool hard_sync;$/;"	m	struct:settings::__anon227	access:public
hard_sync_frames	config.def.h	/^static const unsigned hard_sync_frames = 0;$/;"	v
hard_sync_frames	general.h	/^      unsigned hard_sync_frames;$/;"	m	struct:settings::__anon227	access:public
hasLowLatencyAudio	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static boolean hasLowLatencyAudio(Context ctx)$/;"	m	class:UserPreferences	file:	access:private	signature:(Context ctx)
hasPendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public boolean hasPendingIntent()$/;"	m	class:RetroActivityCommon	access:public	signature:()
hasPendingIntent	frontend/platform/platform_android.h	/^   jmethodID hasPendingIntent;$/;"	m	struct:android_app	access:public
has_address	apple/iOS/bluetooth/btpad.c	/^   bool has_address;$/;"	m	struct:apple_pad_connection	file:	access:public
has_arg	compat/getopt_rarch.h	/^   int has_arg;$/;"	m	struct:option	access:public
has_client_addr	netplay.c	/^   bool has_client_addr;$/;"	m	struct:netplay	file:	access:public
has_connection	netplay.c	/^   bool has_connection;$/;"	m	struct:netplay	file:	access:public
has_error	audio/rsound.c	/^   volatile bool has_error;$/;"	m	struct:rsd	file:	access:public
has_float	audio/alsa.c	/^   bool has_float;$/;"	m	struct:alsa	file:	access:public
has_float	audio/alsathread.c	/^   bool has_float;$/;"	m	struct:alsa_thread	file:	access:public
has_float	blackberry-qnx/alsa_qsa.c	/^   bool has_float;$/;"	m	struct:alsa	file:	access:public
has_focus	gfx/gfx_context.h	/^   bool (*has_focus)(void);$/;"	m	struct:gfx_ctx_driver	access:public
has_fp_fbo	gfx/gl_common.h	/^   bool has_fp_fbo;$/;"	m	struct:gl	access:public
has_list_item	performance/performance_android.c	/^has_list_item(const char* list, const char* item)$/;"	f	file:	signature:(const char* list, const char* item)
has_set_ff	input/udev_joypad.c	/^   bool has_set_ff[2];$/;"	m	struct:udev_joypad	file:	access:public
has_set_libretro_device	general.h	/^   bool has_set_libretro_device[MAX_PLAYERS];$/;"	m	struct:global	access:public
has_set_save_path	general.h	/^   bool has_set_save_path;$/;"	m	struct:global	access:public
has_set_state_path	general.h	/^   bool has_set_state_path;$/;"	m	struct:global	access:public
has_written	audio/rsound.h	/^      volatile int has_written;$/;"	m	struct:rsound	access:public
hats	frontend/menu/menu_common.h	/^   uint16_t hats[RGUI_MAX_HATS];$/;"	m	struct:rgui_bind_state_port	access:public
hats	input/udev_joypad.c	/^   int8_t hats[NUM_HATS][2];$/;"	m	struct:udev_joypad	file:	access:public
hats	tools/retroarch-joyconfig.c	/^   uint16_t hats[MAX_HATS];$/;"	m	struct:poll_data	file:	access:public
have_led	apple/common/hidpad/apple_ps3_pad.c	/^   bool have_led;$/;"	m	struct:hidpad_ps3_data	file:	access:public
have_sync	gfx/gl_common.h	/^   bool have_sync;$/;"	m	struct:gl	access:public
hci_cmd_t	apple/iOS/bluetooth/btstack/hci_cmds.h	/^} hci_cmd_t;$/;"	t	typeref:struct:__anon150
hci_con_handle_t	apple/iOS/bluetooth/btstack/utils.h	/^typedef uint16_t hci_con_handle_t;$/;"	t
hci_delete_stored_link_key_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_delete_stored_link_key_ptr;$/;"	v
hci_disconnect	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_disconnect;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon144	file:	access:public
hci_disconnect_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_disconnect_ptr;$/;"	v
hci_inquiry	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_inquiry;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon145	file:	access:public
hci_inquiry_cancel_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_inquiry_cancel_ptr;$/;"	v
hci_inquiry_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_inquiry_ptr;$/;"	v
hci_pin_code_request_negative_reply_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_pin_code_request_negative_reply_ptr;$/;"	v
hci_pin_code_request_reply	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_pin_code_request_reply;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon147	file:	access:public
hci_pin_code_request_reply_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_pin_code_request_reply_ptr;$/;"	v
hci_read_bd_addr_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_read_bd_addr_ptr;$/;"	v
hci_remote_name_request	apple/iOS/bluetooth/btpad_queue.c	/^      }  hci_remote_name_request;$/;"	m	union:btpad_queue_command::__anon142	typeref:struct:btpad_queue_command::__anon142::__anon146	file:	access:public
hci_remote_name_request_cancel_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_remote_name_request_cancel_ptr;$/;"	v
hci_remote_name_request_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_remote_name_request_ptr;$/;"	v
hci_write_authentication_enable_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_write_authentication_enable_ptr;$/;"	v
hci_write_inquiry_mode_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* hci_write_inquiry_mode_ptr;$/;"	v
hdmi_get_HPD_status	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_get_HPD_status) (void);$/;"	m	struct:__anon195	access:public
hdmi_get_video_timing	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_get_video_timing) (__disp_tv_mode_t mode,$/;"	m	struct:__anon195	access:public
hdmi_mode_support	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_mode_support) (__disp_tv_mode_t mode);$/;"	m	struct:__anon195	access:public
hdmi_set_mode	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_mode) (__disp_tv_mode_t mode);$/;"	m	struct:__anon195	access:public
hdmi_set_pll	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_pll) (__u32 pll, __u32 clk);$/;"	m	struct:__anon195	access:public
hdmi_set_videomode	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_set_videomode) (const struct __disp_video_timing *mode);$/;"	m	struct:__anon195	access:public
hdmi_wait_edid	gfx/context/sunxi_disp_ioctl.h	/^	__s32(*hdmi_wait_edid) (void);$/;"	m	struct:__anon195	access:public
head	gfx/fonts/fonts.h	/^   struct font_output *head;$/;"	m	struct:font_output_list	typeref:struct:font_output_list::font_output	access:public
header	ps3/rgl/include/Cg/CgCommon.h	/^   CgProgramHeader header;$/;"	m	struct:_CGprogram	access:public
header	ps3/rgl/src/libelf/readelf.h	/^      Elf32_Phdr header;$/;"	m	struct:_ELF_segment_t	access:public
header	ps3/rgl/src/libelf/readelf.h	/^      Elf32_Shdr header;$/;"	m	struct:_ELF_section_t	access:public
header_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            CgBinaryProgram		header_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
height	camera/video4linux2.c	/^   unsigned height;$/;"	m	struct:video4linux	file:	access:public
height	driver.h	/^   unsigned height;$/;"	m	struct:video_info	access:public
height	driver.h	/^   unsigned height;$/;"	m	struct:video_overlay_image	access:public
height	frontend/menu/menu_common.h	/^   unsigned height;$/;"	m	struct:__anon25	access:public
height	general.h	/^      unsigned height;$/;"	m	struct:global::__anon240	access:public
height	general.h	/^      unsigned height;$/;"	m	struct:settings::__anon228	access:public
height	general.h	/^   unsigned height;$/;"	m	struct:rarch_viewport	access:public
height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon165	access:public
height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon166	access:public
height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 height;$/;"	m	struct:__anon201	access:public
height	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
height	gfx/fonts/gl_raster_font.c	/^   int width, height;$/;"	m	struct:font_rect	file:	access:public
height	gfx/gl_common.h	/^   unsigned height;$/;"	m	struct:gl_fbo_rect	access:public
height	gfx/image.h	/^   unsigned height;$/;"	m	struct:texture_image	access:public
height	gfx/omap_gfx.c	/^  unsigned height;$/;"	m	struct:omap_video	file:	access:public
height	gfx/rpng/rpng.c	/^   uint32_t height;$/;"	m	struct:png_ihdr	file:	access:public
height	gfx/scaler/scaler.h	/^      int height;$/;"	m	struct:scaler_ctx::__anon210	access:public
height	gfx/thread_wrapper.c	/^      unsigned height;$/;"	m	struct:thread_video::__anon214	file:	access:public
height	gfx/thread_wrapper.c	/^      unsigned height;$/;"	m	struct:thread_video::__anon221	file:	access:public
height	gfx/xvideo.c	/^   unsigned height;$/;"	m	struct:xv	file:	access:public
height	libretro-test-gl/libretro-test.c	/^static unsigned height = BASE_HEIGHT;$/;"	v	file:
height	libretro.h	/^   unsigned height;$/;"	m	struct:retro_camera_callback	access:public
height	ps3/rgl/include/RGL/Types.h	/^      GLsizei height;$/;"	m	struct:__anon62	access:public
height	ps3/rgl/include/RGL/Types.h	/^      GLsizei height;$/;"	m	struct:rglImage_	access:public
height	ps3/rgl/include/RGL/Types.h	/^      GLuint height;$/;"	m	struct:rglBufferObject	access:public
height	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint height;$/;"	m	struct:__anon72	access:public
height	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      height;$/;"	m	struct:rglGcmRenderTargetEx	access:public
height	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint width, height;$/;"	m	struct:__anon49	access:public
height	ps3/rgl/src/rgl_ps3.cpp	/^   int height;$/;"	m	struct:__anon30	file:	access:public
height	record/ffemu.h	/^   unsigned height;$/;"	m	struct:ffemu_video_data	access:public
hexdump	apple/iOS/bluetooth/btstack/utils.h	/^void hexdump(void *data, int size);$/;"	p	signature:(void *data, int size)
hid_device_input_callback	apple/OSX/hid_pad.c	/^static void hid_device_input_callback(void* context, IOReturn result, void* sender, IOHIDValueRef value)$/;"	f	file:	signature:(void* context, IOReturn result, void* sender, IOHIDValueRef value)
hid_device_removed	apple/OSX/hid_pad.c	/^static void hid_device_removed(void* context, IOReturn result, void* sender)$/;"	f	file:	signature:(void* context, IOReturn result, void* sender)
hid_device_report	apple/OSX/hid_pad.c	/^static void hid_device_report(void* context, IOReturn result, void *sender, IOHIDReportType type, uint32_t reportID, uint8_t *report, CFIndex reportLength)$/;"	f	file:	signature:(void* context, IOReturn result, void *sender, IOHIDReportType type, uint32_t reportID, uint8_t *report, CFIndex reportLength)
hid_id	apple/common/keycode.h	/^   const uint32_t hid_id;$/;"	m	struct:apple_key_name_map_entry	access:public
hid_manager_device_attached	apple/OSX/hid_pad.c	/^static void hid_manager_device_attached(void* context, IOReturn result, void* sender, IOHIDDeviceRef device)$/;"	f	file:	signature:(void* context, IOReturn result, void* sender, IOHIDDeviceRef device)
hidesHeaders	apple/iOS/menu.h	/^@property (nonatomic) BOOL hidesHeaders;$/;"	v
hidpad_ps3_connect	apple/common/hidpad/apple_ps3_pad.c	/^static void* hidpad_ps3_connect(struct apple_pad_connection* connection, uint32_t slot)$/;"	f	file:	signature:(struct apple_pad_connection* connection, uint32_t slot)
hidpad_ps3_data	apple/common/hidpad/apple_ps3_pad.c	/^struct hidpad_ps3_data$/;"	s	file:
hidpad_ps3_data::connection	apple/common/hidpad/apple_ps3_pad.c	/^   struct apple_pad_connection* connection;$/;"	m	struct:hidpad_ps3_data	typeref:struct:hidpad_ps3_data::apple_pad_connection	file:	access:public
hidpad_ps3_data::data	apple/common/hidpad/apple_ps3_pad.c	/^   uint8_t data[512];$/;"	m	struct:hidpad_ps3_data	file:	access:public
hidpad_ps3_data::have_led	apple/common/hidpad/apple_ps3_pad.c	/^   bool have_led;$/;"	m	struct:hidpad_ps3_data	file:	access:public
hidpad_ps3_data::motors	apple/common/hidpad/apple_ps3_pad.c	/^   uint16_t motors[2];$/;"	m	struct:hidpad_ps3_data	file:	access:public
hidpad_ps3_data::slot	apple/common/hidpad/apple_ps3_pad.c	/^   uint32_t slot;$/;"	m	struct:hidpad_ps3_data	file:	access:public
hidpad_ps3_disconnect	apple/common/hidpad/apple_ps3_pad.c	/^static void hidpad_ps3_disconnect(struct hidpad_ps3_data* device)$/;"	f	file:	signature:(struct hidpad_ps3_data* device)
hidpad_ps3_get_axis	apple/common/hidpad/apple_ps3_pad.c	/^static int16_t hidpad_ps3_get_axis(struct hidpad_ps3_data* device, unsigned axis)$/;"	f	file:	signature:(struct hidpad_ps3_data* device, unsigned axis)
hidpad_ps3_get_buttons	apple/common/hidpad/apple_ps3_pad.c	/^static uint32_t hidpad_ps3_get_buttons(struct hidpad_ps3_data* device)$/;"	f	file:	signature:(struct hidpad_ps3_data* device)
hidpad_ps3_packet_handler	apple/common/hidpad/apple_ps3_pad.c	/^static void hidpad_ps3_packet_handler(struct hidpad_ps3_data* device, uint8_t *packet, uint16_t size)$/;"	f	file:	signature:(struct hidpad_ps3_data* device, uint8_t *packet, uint16_t size)
hidpad_ps3_send_control	apple/common/hidpad/apple_ps3_pad.c	/^static void hidpad_ps3_send_control(struct hidpad_ps3_data* device)$/;"	f	file:	signature:(struct hidpad_ps3_data* device)
hidpad_ps3_set_rumble	apple/common/hidpad/apple_ps3_pad.c	/^static void hidpad_ps3_set_rumble(struct hidpad_ps3_data* device, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(struct hidpad_ps3_data* device, enum retro_rumble_effect effect, uint16_t strength)
hidpad_wii_connect	apple/common/hidpad/apple_wii_pad.c	/^static void* hidpad_wii_connect(struct apple_pad_connection* connection, uint32_t slot)$/;"	f	file:	signature:(struct apple_pad_connection* connection, uint32_t slot)
hidpad_wii_disconnect	apple/common/hidpad/apple_wii_pad.c	/^static void hidpad_wii_disconnect(struct wiimote_t* device)$/;"	f	file:	signature:(struct wiimote_t* device)
hidpad_wii_get_axis	apple/common/hidpad/apple_wii_pad.c	/^static int16_t hidpad_wii_get_axis(struct wiimote_t* device, unsigned axis)$/;"	f	file:	signature:(struct wiimote_t* device, unsigned axis)
hidpad_wii_packet_handler	apple/common/hidpad/apple_wii_pad.c	/^static void hidpad_wii_packet_handler(struct wiimote_t* device, uint8_t *packet, uint16_t size)$/;"	f	file:	signature:(struct wiimote_t* device, uint8_t *packet, uint16_t size)
hidpad_wii_set_rumble	apple/common/hidpad/apple_wii_pad.c	/^static void hidpad_wii_set_rumble(struct wiimote_t* device, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(struct wiimote_t* device, enum retro_rumble_effect effect, uint16_t strength)
himagic	ps3/altivec_mem.h	47;"	d
history	apple/iOS/menu.h	/^@property (nonatomic) rom_history_t* history;$/;"	v
history	frontend/menu/menu_common.h	/^   rom_history_t *history;$/;"	m	struct:__anon25	access:public
hit_count	gfx/thread_wrapper.c	/^   unsigned hit_count;$/;"	m	struct:thread_video	file:	access:public
hitbox	input/overlay.c	/^   enum overlay_hitbox hitbox;$/;"	m	struct:overlay_desc	typeref:enum:overlay_desc::overlay_hitbox	file:	access:public
hlsl_active	gfx/shader_hlsl.c	/^static bool hlsl_active = false;$/;"	v	file:
hlsl_backend	gfx/shader_hlsl.c	/^const gl_shader_backend_t hlsl_backend = {$/;"	v
hlsl_deinit	gfx/shader_hlsl.c	/^static void hlsl_deinit(void)$/;"	f	file:	signature:(void)
hlsl_deinit_progs	gfx/shader_hlsl.c	/^static void hlsl_deinit_progs(void)$/;"	f	file:	signature:(void)
hlsl_deinit_state	gfx/shader_hlsl.c	/^static void hlsl_deinit_state(void)$/;"	f	file:	signature:(void)
hlsl_filter_type	gfx/shader_hlsl.c	/^static bool hlsl_filter_type(unsigned index, bool *smooth)$/;"	f	file:	signature:(unsigned index, bool *smooth)
hlsl_init	gfx/shader_hlsl.c	/^static bool hlsl_init(const char *path)$/;"	f	file:	signature:(const char *path)
hlsl_num	gfx/shader_hlsl.c	/^static unsigned hlsl_num(void)$/;"	f	file:	signature:(void)
hlsl_program	gfx/shader_hlsl.c	/^struct hlsl_program$/;"	s	file:
hlsl_program::f_ctable	gfx/shader_hlsl.c	/^   LPD3DXCONSTANTTABLE f_ctable;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::fprg	gfx/shader_hlsl.c	/^   IDirect3DPixelShader9 *fprg;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::frame_cnt_f	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_cnt_f;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::frame_cnt_v	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_cnt_v;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::frame_dir_f	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_dir_f;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::frame_dir_v	gfx/shader_hlsl.c	/^   D3DXHANDLE   frame_dir_v;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::mvp	gfx/shader_hlsl.c	/^   D3DXHANDLE   mvp;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::mvp_val	gfx/shader_hlsl.c	/^   XMMATRIX mvp_val;   \/* TODO: Move to D3DXMATRIX here *\/$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::out_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	out_size_f;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::out_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	out_size_v;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::tex_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	tex_size_f;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::tex_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	tex_size_v;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::v_ctable	gfx/shader_hlsl.c	/^   LPD3DXCONSTANTTABLE v_ctable;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::vid_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	vid_size_f;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::vid_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	vid_size_v;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_program::vprg	gfx/shader_hlsl.c	/^   IDirect3DVertexShader9 *vprg;$/;"	m	struct:hlsl_program	file:	access:public
hlsl_set_mvp	gfx/shader_hlsl.c	/^static bool hlsl_set_mvp(const math_matrix *mat)$/;"	f	file:	signature:(const math_matrix *mat)
hlsl_set_params	gfx/shader_hlsl.c	/^static void hlsl_set_params(unsigned width, unsigned height,$/;"	f	file:	signature:(unsigned width, unsigned height, unsigned tex_width, unsigned tex_height, unsigned out_width, unsigned out_height, unsigned frame_counter, const struct gl_tex_info *info, const struct gl_tex_info *prev_info, const struct gl_tex_info *fbo_info, unsigned fbo_info_cnt)
hlsl_set_proj_matrix	gfx/shader_hlsl.c	/^void hlsl_set_proj_matrix(XMMATRIX rotation_value)$/;"	f	signature:(XMMATRIX rotation_value)
hlsl_set_proj_matrix	gfx/shader_hlsl.h	/^void hlsl_set_proj_matrix(XMMATRIX rotation_value);$/;"	p	signature:(XMMATRIX rotation_value)
hlsl_shader_init	xdk/xdk_d3d.cpp	/^static bool hlsl_shader_init(void)$/;"	f	file:	signature:(void)
hlsl_shader_scale	gfx/shader_hlsl.c	/^static void hlsl_shader_scale(unsigned index, struct gfx_fbo_scale *scale)$/;"	f	file:	signature:(unsigned index, struct gfx_fbo_scale *scale)
hlsl_use	gfx/shader_hlsl.c	/^static void hlsl_use(unsigned index)$/;"	f	file:	signature:(unsigned index)
horiz	gfx/scaler/scaler.h	/^   struct scaler_filter horiz, vert;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::scaler_filter	access:public
horizontalScale	ps3/rgl/include/export/RGL/rgl.h	/^   GLfloat horizontalScale;$/;"	m	struct:__anon72	access:public
host	audio/rsound.h	/^      char *host;$/;"	m	struct:rsound	access:public
hostMemoryBase	ps3/rgl/src/include/rgl-typedefs.h	/^   char *  hostMemoryBase;$/;"	m	struct:rglGcmResource	access:public
hostMemoryBase	ps3/rgl/src/include/rgl-typedefs.h	/^   void 						*hostMemoryBase;$/;"	m	struct:rglGcmState	access:public
hostMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			hostMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
hostMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 						hostMemorySize;$/;"	m	struct:rglGcmState	access:public
hostMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  hostMemorySize;$/;"	m	struct:rglGcmResource	access:public
host_endianness	ps3/rgl/src/cg/cgbutils.hpp	/^      inline HOST_ENDIANNESS host_endianness(void)$/;"	f	namespace:cgc::bio	signature:(void)
hostent	netplay.c	/^struct hostent$/;"	s	file:
hostent::h_addr_list	netplay.c	/^   char **h_addr_list; \/\/ Just do the minimal needed ...$/;"	m	struct:hostent	file:	access:public
hotplug_available	input/udev_input.c	/^static bool hotplug_available(udev_input_t *udev)$/;"	f	file:	signature:(udev_input_t *udev)
hotplug_available	input/udev_joypad.c	/^static bool hotplug_available(void)$/;"	f	file:	signature:(void)
hwMode	ps3/rgl/src/rgl_ps3.cpp	/^   unsigned char hwMode;$/;"	m	struct:__anon30	file:	access:public
hw_render	libretro-test-gl/libretro-test.c	/^static struct retro_hw_render_callback hw_render;$/;"	v	typeref:struct:retro_hw_render_callback	file:
hw_render_callback	general.h	/^      struct retro_hw_render_callback hw_render_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_hw_render_callback	access:public
hw_render_depth	gfx/gl_common.h	/^   GLuint hw_render_depth[MAX_TEXTURES];$/;"	m	struct:gl	access:public
hw_render_depth_init	gfx/gl_common.h	/^   bool hw_render_depth_init;$/;"	m	struct:gl	access:public
hw_render_fbo	gfx/gl_common.h	/^   GLuint hw_render_fbo[MAX_TEXTURES];$/;"	m	struct:gl	access:public
hw_render_fbo_init	gfx/gl_common.h	/^   bool hw_render_fbo_init;$/;"	m	struct:gl	access:public
hw_render_use	gfx/gl_common.h	/^   bool hw_render_use;$/;"	m	struct:gl	access:public
i	file_path.h	/^   int   i;$/;"	m	union:string_list_elem_attr	access:public
i	gfx/thread_wrapper.c	/^      int i;$/;"	m	union:thread_video::__anon215	file:	access:public
i	ps3/rgl/include/RGL/TypeUtils.h	/^   unsigned int i;$/;"	m	union:__anon71	access:public
i2cIdentFirst	wii/vi_encoder.c	/^static u32 i2cIdentFirst = 0;$/;"	v	file:
i2cIdentFlag	wii/vi_encoder.c	/^static u32 i2cIdentFlag = 1;$/;"	v	file:
icade_buttons	apple/common/apple_input.c	/^static uint32_t icade_buttons;$/;"	v	file:
icade_count	general.h	/^      unsigned icade_count;$/;"	m	struct:settings::__anon232	access:public
icade_enabled	apple/common/apple_input.c	/^static bool icade_enabled;$/;"	v	file:
icade_profile	general.h	/^      unsigned icade_profile[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
icade_profile_enums	android/native/jni/input_autodetect.h	/^} icade_profile_enums;$/;"	v	typeref:enum:__anon82
id	blackberry-qnx/frontend_qnx.h	/^    char id[64];$/;"	m	struct:__anon94	access:public
id	command.c	/^   unsigned id;$/;"	m	struct:cmd_map	file:	access:public
id	driver.h	/^   unsigned id;$/;"	m	struct:retro_keybind	access:public
id	general.h	/^   unsigned id;$/;"	m	struct:rarch_resolution	access:public
id	gfx/context/sunxi_disp_ioctl.h	/^	__s32 id;$/;"	m	struct:__anon189	access:public
id	gfx/d3d9/render_chain.hpp	/^         std::string id;$/;"	m	struct:RenderChain::lut_info	access:public
id	gfx/rpng/rpng.c	/^   const char *id;$/;"	m	struct:__anon226	file:	access:public
id	gfx/shader_parse.h	/^   char id[64];$/;"	m	struct:gfx_shader_lut	access:public
id	gfx/state_tracker.c	/^   char id[64];$/;"	m	struct:state_tracker_internal	file:	access:public
id	gfx/state_tracker.h	/^   char id[64];$/;"	m	struct:state_tracker_uniform_info	access:public
id	gfx/state_tracker.h	/^   const char *id;$/;"	m	struct:state_tracker_uniform	access:public
id	libretro.h	/^   unsigned id;$/;"	m	struct:retro_input_descriptor	access:public
id	ps3/rgl/include/Cg/CgCommon.h	/^   CGcontext          id;              \/\/ numerical handle for this object$/;"	m	struct:_CGcontext	access:public
id	ps3/rgl/include/Cg/CgCommon.h	/^   CGparameter id;$/;"	m	struct:CgRuntimeParameter	access:public
id	ps3/rgl/include/Cg/CgCommon.h	/^   CGprogram            id;            \/\/ numerical id for this program object$/;"	m	struct:_CGprogram	access:public
id	ps3/rgl/src/rgl_ps3.cpp	/^   int id;$/;"	m	struct:__anon28	file:	access:public
id	thread.c	/^   pthread_t id;$/;"	m	struct:sthread	file:	access:public
idat_buffer	gfx/rpng/rpng.c	/^struct idat_buffer$/;"	s	file:
idat_buffer::data	gfx/rpng/rpng.c	/^   uint8_t *data;$/;"	m	struct:idat_buffer	file:	access:public
idat_buffer::size	gfx/rpng/rpng.c	/^   size_t size;$/;"	m	struct:idat_buffer	file:	access:public
ident	audio/ext/rarch_dsp.h	/^   const char *ident;$/;"	m	struct:rarch_dsp_plugin	access:public
ident	audio/resampler.h	/^   const char *ident;$/;"	m	struct:rarch_resampler	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:audio_driver	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:camera_driver	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:input_driver	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:input_osk_driver	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:location_driver	access:public
ident	driver.h	/^   const char *ident;$/;"	m	struct:video_driver	access:public
ident	frontend/frontend_context.h	/^   const char *ident;$/;"	m	struct:frontend_ctx_driver	access:public
ident	frontend/menu/menu_context.h	/^   const char *ident;$/;"	m	struct:menu_ctx_driver	access:public
ident	gfx/fonts/d3d_font.h	/^   const char *ident;$/;"	m	struct:d3d_font_renderer	access:public
ident	gfx/fonts/fonts.h	/^   const char *ident;$/;"	m	struct:font_renderer_driver	access:public
ident	gfx/fonts/gl_font.h	/^   const char *ident;$/;"	m	struct:gl_font_renderer	access:public
ident	gfx/gfx_context.h	/^   const char *ident;$/;"	m	struct:gfx_ctx_driver	access:public
ident	input/input_common.h	/^   const char *ident;$/;"	m	struct:rarch_joypad_driver	access:public
ident	input/linuxraw_joypad.c	/^   char *ident;$/;"	m	struct:linuxraw_joypad	file:	access:public
ident	input/udev_joypad.c	/^   char *ident;$/;"	m	struct:udev_joypad	file:	access:public
ident	libretro.h	/^   const char *ident;$/;"	m	struct:retro_perf_counter	access:public
identity	audio/rsound.h	/^      char identity[256];$/;"	m	struct:rsound	access:public
idx	general.h	/^   unsigned idx;$/;"	m	struct:rarch_resolution	access:public
if_down	console/logger/logger.c	/^static int if_down(int sid)$/;"	f	file:	signature:(int sid)
if_up_with	console/logger/logger.c	/^static int if_up_with(int index)$/;"	f	file:	signature:(int index)
iface	apple/common/apple_joypad.c	/^   struct apple_pad_interface* iface;$/;"	m	struct:__anon156	typeref:struct:__anon156::apple_pad_interface	file:	access:public
iface	input/overlay.c	/^   const video_overlay_interface_t *iface;$/;"	m	struct:input_overlay	file:	access:public
iface_data	input/overlay.c	/^   void *iface_data;$/;"	m	struct:input_overlay	file:	access:public
image	driver.h	/^   const uint32_t *image;$/;"	m	struct:video_overlay_image	access:public
image	gfx/thread_wrapper.c	/^      } image;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon219	file:	access:public
image	gfx/xvideo.c	/^   XvImage *image;$/;"	m	struct:xv	file:	access:public
image	input/overlay.c	/^   struct video_overlay_image image;$/;"	m	struct:overlay	typeref:struct:overlay::video_overlay_image	file:	access:public
image	input/overlay.c	/^   struct video_overlay_image image;$/;"	m	struct:overlay_desc	typeref:struct:overlay_desc::video_overlay_image	file:	access:public
image	ps3/rgl/include/RGL/Types.h	/^      rglImage*	image;$/;"	m	struct:__anon63	access:public
imageCount	ps3/rgl/include/RGL/Types.h	/^      GLuint		imageCount;$/;"	m	struct:__anon63	access:public
image_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            char*			image_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
image_index	input/overlay.c	/^   unsigned image_index;$/;"	m	struct:overlay_desc	file:	access:public
img_free	ps3/image.c	/^static int img_free(void *ptr, void *a)$/;"	f	file:	signature:(void *ptr, void *a)
img_height	gfx/gl_common.h	/^   unsigned img_height;$/;"	m	struct:gl_fbo_rect	access:public
img_malloc	ps3/image.c	/^void *img_malloc(uint32_t size, void *a)$/;"	f	signature:(uint32_t size, void *a)
img_width	gfx/gl_common.h	/^   unsigned img_width;$/;"	m	struct:gl_fbo_rect	access:public
implementation_magic_value	netplay.c	/^static uint32_t implementation_magic_value(void)$/;"	f	file:	signature:(void)
import_semantic_to_string	gfx/shader_parse.c	/^static const char *import_semantic_to_string(enum state_tracker_type type)$/;"	f	file:	signature:(enum state_tracker_type type)
in	hash.c	/^   } in;$/;"	m	struct:sha256_ctx	typeref:union:sha256_ctx::__anon93	file:	access:public
inFileBrowser	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private boolean inFileBrowser = true;$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
inLocalMemory	ps3/rgl/include/Cg/CgCommon.h	/^   bool				 inLocalMemory; \/\/ only pertains to fragment programs which can be in location local, the default, or location main via cgb interfaces $/;"	m	struct:_CGprogram	access:public
in_fmt	gfx/scaler/scaler.h	/^   enum scaler_pix_fmt in_fmt;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_pix_fmt	access:public
in_height	gfx/scaler/scaler.h	/^   int in_height;$/;"	m	struct:scaler_ctx	access:public
in_pix_fmt	record/ffemu.c	/^   enum PixelFormat in_pix_fmt;$/;"	m	struct:ff_video_info	typeref:enum:ff_video_info::PixelFormat	file:	access:public
in_pixconv	gfx/scaler/scaler.h	/^   void (*in_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
in_rate	general.h	/^      float in_rate;$/;"	m	struct:settings::__anon231	access:public
in_stride	gfx/scaler/scaler.h	/^   int in_stride;$/;"	m	struct:scaler_ctx	access:public
in_width	gfx/scaler/scaler.h	/^   int in_width;$/;"	m	struct:scaler_ctx	access:public
include_depth	conf/config_file.c	/^   unsigned include_depth;$/;"	m	struct:config_file	file:	access:public
include_list	conf/config_file.c	/^struct include_list$/;"	s	file:
include_list::next	conf/config_file.c	/^   struct include_list *next;$/;"	m	struct:include_list	typeref:struct:include_list::include_list	file:	access:public
include_list::path	conf/config_file.c	/^   char *path;$/;"	m	struct:include_list	file:	access:public
includes	conf/config_file.c	/^   struct include_list *includes;$/;"	m	struct:config_file	typeref:struct:config_file::include_list	file:	access:public
increment	ps3/rgl/include/RGL/Base.h	/^      unsigned int increment;$/;"	m	class:RGL::Vector	access:private
index	apple/common/setting_data.h	/^   uint32_t index;$/;"	m	struct:__anon161	access:public
index	blackberry-qnx/frontend_qnx.h	/^    int index;$/;"	m	struct:__anon94	access:public
index	core_options.c	/^   size_t index;$/;"	m	struct:core_option	file:	access:public
index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon218	file:	access:public
index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon220	file:	access:public
index	input/overlay.c	/^   size_t index;$/;"	m	struct:input_overlay	file:	access:public
index	input/udev_input.c	/^      xkb_mod_index_t index;$/;"	m	struct:udev_input::__anon92	file:	access:public
index	libretro.h	/^   unsigned index;$/;"	m	struct:retro_input_descriptor	access:public
index	ps3/rgl/src/rgl_cg.h	/^   int index;$/;"	m	struct:__anon32	access:public
indexCount	ps3/rgl/include/RGL/Types.h	/^      GLsizei	indexCount;$/;"	m	struct:__anon67	access:public
indexMax	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexMax;		\/\/ 0==glDrawElements; 0!=glDrawRangeElements$/;"	m	struct:__anon67	access:public
indexMin	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexMin;$/;"	m	struct:__anon67	access:public
indexXferOffset	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexXferOffset;$/;"	m	struct:__anon67	access:public
indexXferSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	indexXferSize;$/;"	m	struct:__anon67	access:public
inet_pton	console/logger/logger.c	/^static int inet_pton(int af, const char *src, void *dst)$/;"	f	file:	signature:(int af, const char *src, void *dst)
inflate	deps/miniz/miniz.c	/^int inflate(z_streamp pStream, int flush)$/;"	f	signature:(z_streamp pStream, int flush)
inflate	deps/miniz/zlib.h	/^int inflate(z_streamp pStream, int flush);$/;"	p	signature:(z_streamp pStream, int flush)
inflateEnd	deps/miniz/miniz.c	/^int inflateEnd(z_streamp pStream)$/;"	f	signature:(z_streamp pStream)
inflateEnd	deps/miniz/zlib.h	/^int inflateEnd(z_streamp pStream);$/;"	p	signature:(z_streamp pStream)
inflateFromIntent	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen inflateFromIntent(PreferenceManager manager, Intent intent, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, Intent intent, PreferenceScreen screen)
inflateFromResource	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceScreen inflateFromResource(PreferenceManager manager, Activity activity, int resId, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, Activity activity, int resId, PreferenceScreen screen)
inflateInit	deps/miniz/zlib.h	391;"	d
inflateInit2	deps/miniz/zlib.h	392;"	d
inflateInit2_	deps/miniz/miniz.c	/^int inflateInit2_(z_streamp pStream, int window_bits, char *version, int stream_size)$/;"	f	signature:(z_streamp pStream, int window_bits, char *version, int stream_size)
inflateInit2_	deps/miniz/zlib.h	/^int inflateInit2_(z_streamp pStream, int window_bits, char *version, int stream_size);$/;"	p	signature:(z_streamp pStream, int window_bits, char *version, int stream_size)
inflateReset	deps/miniz/miniz.c	/^int inflateReset(z_streamp pStream)$/;"	f	signature:(z_streamp pStream)
inflateReset	deps/miniz/zlib.h	/^int inflateReset(z_streamp pStream);$/;"	p	signature:(z_streamp pStream)
inflate_state	deps/miniz/miniz.c	/^} inflate_state;$/;"	t	typeref:struct:__anon133	file:
info	frontend/menu/menu_common.h	/^   struct retro_system_info info;$/;"	m	struct:__anon25	typeref:struct:__anon25::retro_system_info	access:public
info	general.h	/^      struct retro_system_info info;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_system_info	access:public
info	gfx/d3d9/d3d9.hpp	/^      inline video_info_t& info() { return video_info; }$/;"	f	class:D3DVideo	access:public	signature:()
info	gfx/d3d9/render_chain.hpp	/^         LinkInfo info;$/;"	m	struct:RenderChain::Pass	access:public
info	gfx/state_tracker.c	/^   struct state_tracker_internal *info;$/;"	m	struct:state_tracker	typeref:struct:state_tracker::state_tracker_internal	file:	access:public
info	gfx/state_tracker.h	/^   const struct state_tracker_uniform_info *info;$/;"	m	struct:state_tracker_info	typeref:struct:state_tracker_info::state_tracker_uniform_info	access:public
info	gfx/thread_wrapper.c	/^   video_info_t info;$/;"	m	struct:thread_video	file:	access:public
info_elem	gfx/state_tracker.c	/^   unsigned info_elem;$/;"	m	struct:state_tracker	file:	access:public
info_elem	gfx/state_tracker.h	/^   unsigned info_elem;$/;"	m	struct:state_tracker_info	access:public
info_x	input/udev_input.c	/^         struct input_absinfo info_x;$/;"	m	struct:input_device::__anon90::__anon91	typeref:struct:input_device::__anon90::__anon91::input_absinfo	file:	access:public
info_y	input/udev_input.c	/^         struct input_absinfo info_y;$/;"	m	struct:input_device::__anon90::__anon91	typeref:struct:input_device::__anon90::__anon91::input_absinfo	file:	access:public
ingame_menu_resize	frontend/menu/rmenu_xui.cpp	/^static void ingame_menu_resize (void)$/;"	f	file:	signature:(void)
init	audio/ext/rarch_dsp.h	/^   void *(*init)(const rarch_dsp_info_t *info);$/;"	m	struct:rarch_dsp_plugin	access:public
init	audio/resampler.h	/^   void *(*init)(double bandwidth_mod); \/\/ Bandwidth factor. Will be < 1.0 for downsampling, > 1.0 for upsamling. Corresponds to expected resampling ratio.$/;"	m	struct:rarch_resampler	access:public
init	driver.h	/^   void *(*init)(const char *device, uint64_t buffer_types, unsigned width, unsigned height);$/;"	m	struct:camera_driver	access:public
init	driver.h	/^   void *(*init)(const char *device, unsigned rate, unsigned latency);$/;"	m	struct:audio_driver	access:public
init	driver.h	/^   void *(*init)(const video_info_t *video, const input_driver_t **input, void **input_data); $/;"	m	struct:video_driver	access:public
init	driver.h	/^   void *(*init)(size_t size);$/;"	m	struct:input_osk_driver	access:public
init	driver.h	/^   void *(*init)(void);$/;"	m	struct:input_driver	access:public
init	driver.h	/^   void *(*init)(void);$/;"	m	struct:location_driver	access:public
init	frontend/frontend_context.h	/^   void (*init)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
init	frontend/menu/menu_context.h	/^   void* (*init)(void);$/;"	m	struct:menu_ctx_driver	access:public
init	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init(const video_info_t &info)$/;"	f	class:D3DVideo	signature:(const video_info_t &info)
init	gfx/d3d9/d3d9.hpp	/^      void init(const video_info_t &info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info)
init	gfx/fonts/d3d_font.h	/^   bool (*init)(void *data, const char *font_path, unsigned font_size);$/;"	m	struct:d3d_font_renderer	access:public
init	gfx/fonts/fonts.h	/^   void *(*init)(const char *font_path, float font_size);$/;"	m	struct:font_renderer_driver	access:public
init	gfx/fonts/gl_font.h	/^   bool (*init)(void *data, const char *font_path, float font_size,$/;"	m	struct:gl_font_renderer	access:public
init	gfx/gfx_context.h	/^   bool (*init)(void);$/;"	m	struct:gfx_ctx_driver	access:public
init	gfx/shader_common.h	/^   bool (*init)(const char *path);$/;"	m	struct:gl_shader_backend	access:public
init	input/input_common.h	/^   bool (*init)(void);$/;"	m	struct:rarch_joypad_driver	access:public
initController	blackberry-qnx/qnx_input.c	/^static void initController(input_device_t* controller)$/;"	f	file:	signature:(input_device_t* controller)
initController	blackberry-qnx/qnx_input.c	/^static void initController(input_device_t* controller);$/;"	p	file:	signature:(input_device_t* controller)
initFromData	emscripten/template.html	/^      function initFromData(data, name){$/;"	f
initRASettings	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::initRASettings()$/;"	f	class:RetroArch	signature:()
initRASettings	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void initRASettings();$/;"	p	class:RetroArch	access:private	signature:()
init_assets	frontend/menu/menu_context.h	/^   void  (*init_assets)(void*);$/;"	m	struct:menu_ctx_driver	access:public
init_audio	driver.c	/^void init_audio(void)$/;"	f	signature:(void)
init_audio	driver.h	/^void init_audio(void);$/;"	p	signature:(void)
init_base	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_base(const video_info_t &info)$/;"	f	class:D3DVideo	signature:(const video_info_t &info)
init_base	gfx/d3d9/d3d9.hpp	/^      void init_base(const video_info_t &info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info)
init_buffers	netplay.c	/^static void init_buffers(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
init_camera	driver.c	/^void init_camera(void)$/;"	f	signature:(void)
init_camera	driver.h	/^void init_camera(void);$/;"	p	signature:(void)
init_cg	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_cg()$/;"	f	class:D3DVideo	signature:()
init_cg	gfx/d3d9/d3d9.hpp	/^      bool init_cg();$/;"	p	class:D3DVideo	access:private	signature:()
init_chain	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_chain(const video_info_t &video_info)$/;"	f	class:D3DVideo	signature:(const video_info_t &video_info)
init_chain	gfx/d3d9/d3d9.hpp	/^      bool init_chain(const video_info_t &video_info);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &video_info)
init_cheats	retroarch.c	/^static void init_cheats(void)$/;"	f	file:	signature:(void)
init_command	retroarch.c	/^static void init_command(void)$/;"	f	file:	signature:(void)
init_controllers	retroarch.c	/^static void init_controllers(void)$/;"	f	file:	signature:(void)
init_count	audio/librsound.c	/^static int init_count = 0;$/;"	v	file:
init_device	camera/video4linux2.c	/^static bool init_device(void *data)$/;"	f	file:	signature:(void *data)
init_drivers	driver.c	/^void init_drivers(void)$/;"	f	signature:(void)
init_drivers	driver.h	/^void init_drivers(void);$/;"	p	signature:(void)
init_drivers_pre	driver.c	/^void init_drivers_pre(void)$/;"	f	signature:(void)
init_drivers_pre	driver.h	/^void init_drivers_pre(void);$/;"	p	signature:(void)
init_dsp_plugin	driver.c	/^static void init_dsp_plugin(void)$/;"	f	file:	signature:(void)
init_egl_image_buffer	gfx/gfx_context.h	/^   bool (*init_egl_image_buffer)(const video_info_t*);$/;"	m	struct:gfx_ctx_driver	access:public
init_filter	driver.c	/^static void init_filter(bool rgb32)$/;"	f	file:	signature:(bool rgb32)
init_font	frontend/menu/disp/rgui.c	/^static void init_font(rgui_handle_t *rgui, const uint8_t *font_bmp_buf)$/;"	f	file:	signature:(rgui_handle_t *rgui, const uint8_t *font_bmp_buf)
init_font	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::init_font()$/;"	f	class:D3DVideo	signature:()
init_font	gfx/d3d9/d3d9.hpp	/^      bool init_font();$/;"	p	class:D3DVideo	access:private	signature:()
init_fvf	gfx/d3d9/render_chain.cpp	/^void RenderChain::init_fvf(Pass &pass)$/;"	f	class:RenderChain	signature:(Pass &pass)
init_fvf	gfx/d3d9/render_chain.hpp	/^      void init_fvf(Pass &pass);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass)
init_imports	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_imports()$/;"	f	class:D3DVideo	signature:()
init_imports	gfx/d3d9/d3d9.hpp	/^      void init_imports();$/;"	p	class:D3DVideo	access:private	signature:()
init_libretro_cbs	retroarch.c	/^static void init_libretro_cbs(void)$/;"	f	file:	signature:(void)
init_libretro_cbs_plain	retroarch.c	/^static void init_libretro_cbs_plain(void)$/;"	f	file:	signature:(void)
init_libretro_sym	dynamic.c	/^void init_libretro_sym(bool dummy)$/;"	f	signature:(bool dummy)
init_libretro_sym	dynamic.h	/^void init_libretro_sym(bool dummy);$/;"	p	signature:(bool dummy)
init_location	driver.c	/^void init_location(void)$/;"	f	signature:(void)
init_location	driver.h	/^void init_location(void);$/;"	p	signature:(void)
init_luts	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_luts()$/;"	f	class:D3DVideo	signature:()
init_luts	gfx/d3d9/d3d9.hpp	/^      void init_luts();$/;"	p	class:D3DVideo	access:private	signature:()
init_message	ps3/ps3_input_osk.c	/^   wchar_t init_message[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
init_mmap	camera/video4linux2.c	/^static bool init_mmap(void *data)$/;"	f	file:	signature:(void *data)
init_movie	retroarch.c	/^static void init_movie(void)$/;"	f	file:	signature:(void)
init_multipass	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_multipass()$/;"	f	class:D3DVideo	signature:()
init_multipass	gfx/d3d9/d3d9.hpp	/^      void init_multipass();$/;"	p	class:D3DVideo	access:private	signature:()
init_multisample	libretro-test-gl/libretro-test.c	/^static void init_multisample(unsigned samples)$/;"	f	file:	signature:(unsigned samples)
init_netplay	retroarch.c	/^static void init_netplay(void)$/;"	f	file:	signature:(void)
init_osk	driver.c	/^void init_osk(void)$/;"	f	signature:(void)
init_playback	movie.c	/^static bool init_playback(bsv_movie_t *handle, const char *path)$/;"	f	file:	signature:(bsv_movie_t *handle, const char *path)
init_playbook_keyboard	blackberry-qnx/qnx_input.c	/^void init_playbook_keyboard()$/;"	f
init_record	movie.c	/^static bool init_record(bsv_movie_t *handle, const char *path)$/;"	f	file:	signature:(bsv_movie_t *handle, const char *path)
init_recording	retroarch.c	/^static void init_recording(void)$/;"	f	file:	signature:(void)
init_rom_file	file.c	/^bool init_rom_file(enum rarch_game_type type)$/;"	f	signature:(enum rarch_game_type type)
init_rom_file	file.h	/^bool init_rom_file(enum rarch_game_type type);$/;"	p	signature:(enum rarch_game_type type)
init_shader_dir	driver.c	/^static void init_shader_dir(void)$/;"	f	file:	signature:(void)
init_sinc_table	audio/sinc.c	/^static void init_sinc_table(rarch_sinc_resampler_t *resamp, double cutoff,$/;"	f	file:	signature:(rarch_sinc_resampler_t *resamp, double cutoff, float *phase_table, int phases, int taps, bool calculate_delta)
init_singlepass	gfx/d3d9/d3d9.cpp	/^void D3DVideo::init_singlepass()$/;"	f	class:D3DVideo	signature:()
init_singlepass	gfx/d3d9/d3d9.hpp	/^      void init_singlepass();$/;"	p	class:D3DVideo	access:private	signature:()
init_socket	netplay.c	/^static bool init_socket(netplay_t *handle, const char *server, uint16_t port)$/;"	f	file:	signature:(netplay_t *handle, const char *server, uint16_t port)
init_state	retroarch.c	/^static void init_state(void)$/;"	f	file:	signature:(void)
init_state_first	retroarch.c	/^static void init_state_first(void)$/;"	f	file:	signature:(void)
init_system_av_info	retroarch.c	/^static void init_system_av_info(void)$/;"	f	file:	signature:(void)
init_tcp_connection	netplay.c	/^static int init_tcp_connection(const struct addrinfo *res, bool server, bool spectate,$/;"	f	file:	signature:(const struct addrinfo *res, bool server, bool spectate, struct sockaddr *other_addr, socklen_t addr_size)
init_tcp_socket	netplay.c	/^static bool init_tcp_socket(netplay_t *handle, const char *server, uint16_t port, bool spectate)$/;"	f	file:	signature:(netplay_t *handle, const char *server, uint16_t port, bool spectate)
init_texture	gx/gx_video.c	/^static void init_texture(void *data, unsigned width, unsigned height)$/;"	f	file:	signature:(void *data, unsigned width, unsigned height)
init_texture	psp1/psp1_video.c	/^static void init_texture(void *data, const video_info_t *video)$/;"	f	file:	signature:(void *data, const video_info_t *video)
init_thread	record/ffemu.c	/^static bool init_thread(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
init_udp_socket	netplay.c	/^static bool init_udp_socket(netplay_t *handle, const char *server, uint16_t port)$/;"	f	file:	signature:(netplay_t *handle, const char *server, uint16_t port)
init_vao	gfx/gl.c	/^static bool init_vao(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
init_video_input	driver.c	/^void init_video_input(void)$/;"	f	signature:(void)
init_video_input	driver.h	/^void init_video_input(void);$/;"	p	signature:(void)
init_video_pixel_converter	driver.c	/^static bool init_video_pixel_converter(unsigned size)$/;"	f	file:	signature:(unsigned size)
init_vtx	gx/gx_video.c	/^static void init_vtx(void *data)$/;"	f	file:	signature:(void *data)
init_yuv_tables	gfx/xvideo.c	/^static void init_yuv_tables(xv_t *xv)$/;"	f	file:	signature:(xv_t *xv)
initial	general.h	/^            rarch_resolution_t initial;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
initial_lifecycle_state_preinit	frontend/frontend.c	197;"	d	file:
initial_lifecycle_state_preinit	frontend/frontend.c	199;"	d	file:
initial_menu_lifecycle_state	frontend/frontend.c	167;"	d	file:
initial_menu_lifecycle_state	frontend/frontend.c	169;"	d	file:
initializeSPUs	ps3/rgl/include/export/RGL/rgl.h	/^   GLboolean		initializeSPUs;$/;"	m	struct:PSGLinitOptions	access:public
initialized	libretro.h	/^   retro_camera_lifetime_status_t initialized;$/;"	m	struct:retro_camera_callback	access:public
initialized	libretro.h	/^   retro_location_lifetime_status_t initialized;$/;"	m	struct:retro_location_callback	access:public
initpkgcrypt	ps3/ps3py/crypt.c	/^PyMODINIT_FUNC initpkgcrypt(void) {$/;"	f	signature:(void)
inlen	hash.c	/^   unsigned inlen;$/;"	m	struct:sha256_ctx	file:	access:public
input	driver.h	/^   const input_driver_t *input;$/;"	m	struct:driver	access:public
input	general.h	/^   } input;$/;"	m	struct:settings	typeref:struct:settings::__anon232	access:public
input	gfx/scaler/scaler.h	/^   } input;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon209	access:public
input	gfx/thread_wrapper.c	/^   const input_driver_t **input;$/;"	m	struct:thread_video	file:	access:public
inputFieldInfo	ps3/ps3_input_osk.c	/^   CellOskDialogInputFieldInfo inputFieldInfo;$/;"	m	struct:ps3_osk	file:	access:public
inputQueue	frontend/platform/platform_android.h	/^   AInputQueue* inputQueue;$/;"	m	struct:android_app	access:public
input_android	android/native/jni/input_android.c	/^const input_driver_t input_android = {$/;"	v
input_apple	apple/common/apple_input.c	/^const input_driver_t input_apple = {$/;"	v
input_apply_turbo	retroarch.c	/^static bool input_apply_turbo(unsigned port, unsigned id, bool res)$/;"	f	file:	signature:(unsigned port, unsigned id, bool res)
input_autoconfigure_joypad_conf	input/input_common.c	/^static void input_autoconfigure_joypad_conf(config_file_t *conf, struct retro_keybind *binds)$/;"	f	file:	signature:(config_file_t *conf, struct retro_keybind *binds)
input_autodetect_enable	config.def.h	/^static const bool input_autodetect_enable = true;$/;"	v
input_autodetect_get_device_name	android/native/jni/input_autodetect.c	/^static void input_autodetect_get_device_name(void *data, char *buf, size_t size, int id)$/;"	f	file:	signature:(void *data, char *buf, size_t size, int id)
input_autodetect_setup	android/native/jni/input_autodetect.c	/^void input_autodetect_setup(void *data, char *msg, size_t sizeof_msg, unsigned port, unsigned id, int source, bool *primary)$/;"	f	signature:(void *data, char *msg, size_t sizeof_msg, unsigned port, unsigned id, int source, bool *primary)
input_autodetect_setup	android/native/jni/input_autodetect.h	/^void input_autodetect_setup(void *data, char *msg, size_t sizeof_msg, unsigned port, unsigned id, int source, bool *primary);$/;"	p	signature:(void *data, char *msg, size_t sizeof_msg, unsigned port, unsigned id, int source, bool *primary)
input_bind_map	input/input_common.h	/^struct input_bind_map$/;"	s
input_bind_map::base	input/input_common.h	/^   const char *base;$/;"	m	struct:input_bind_map	access:public
input_bind_map::desc	input/input_common.h	/^   const char *desc;$/;"	m	struct:input_bind_map	access:public
input_bind_map::meta	input/input_common.h	/^   unsigned meta;$/;"	m	struct:input_bind_map	access:public
input_bind_map::retro_key	input/input_common.h	/^   unsigned retro_key;$/;"	m	struct:input_bind_map	access:public
input_bind_map::valid	input/input_common.h	/^   bool valid;$/;"	m	struct:input_bind_map	access:public
input_builtin_autoconfs	input/autoconf/builtin_win.c	/^const char* const input_builtin_autoconfs[] =$/;"	v
input_config_autoconfigure_joypad	input/input_common.c	/^void input_config_autoconfigure_joypad(unsigned index, const char *name, const char *driver)$/;"	f	signature:(unsigned index, const char *name, const char *driver)
input_config_autoconfigure_joypad	input/input_common.h	/^void input_config_autoconfigure_joypad(unsigned index, const char *name, const char *driver);$/;"	p	signature:(unsigned index, const char *name, const char *driver)
input_config_bind_map	input/input_common.c	/^const struct input_bind_map input_config_bind_map[RARCH_BIND_LIST_END_NULL] = {$/;"	v	typeref:struct:input_bind_map
input_config_get_prefix	input/input_common.c	/^const char *input_config_get_prefix(unsigned player, bool meta)$/;"	f	signature:(unsigned player, bool meta)
input_config_get_prefix	input/input_common.h	/^const char *input_config_get_prefix(unsigned player, bool meta);$/;"	p	signature:(unsigned player, bool meta)
input_config_key_map	input/input_common.c	/^const struct input_key_map input_config_key_map[] = {$/;"	v	typeref:struct:input_key_map
input_config_parse_joy_axis	input/input_common.c	/^void input_config_parse_joy_axis(config_file_t *conf, const char *prefix,$/;"	f	signature:(config_file_t *conf, const char *prefix, const char *axis, struct retro_keybind *bind)
input_config_parse_joy_axis	input/input_common.h	/^void input_config_parse_joy_axis(config_file_t *conf, const char *prefix,$/;"	p	signature:(config_file_t *conf, const char *prefix, const char *axis, struct retro_keybind *bind)
input_config_parse_joy_button	input/input_common.c	/^void input_config_parse_joy_button(config_file_t *conf, const char *prefix,$/;"	f	signature:(config_file_t *conf, const char *prefix, const char *btn, struct retro_keybind *bind)
input_config_parse_joy_button	input/input_common.h	/^void input_config_parse_joy_button(config_file_t *conf, const char *prefix,$/;"	p	signature:(config_file_t *conf, const char *prefix, const char *btn, struct retro_keybind *bind)
input_config_parse_key	input/input_common.c	/^void input_config_parse_key(config_file_t *conf, const char *prefix, const char *btn,$/;"	f	signature:(config_file_t *conf, const char *prefix, const char *btn, struct retro_keybind *bind)
input_config_parse_key	input/input_common.h	/^void input_config_parse_key(config_file_t *conf, const char *prefix, const char *btn,$/;"	p	signature:(config_file_t *conf, const char *prefix, const char *btn, struct retro_keybind *bind)
input_config_path	general.h	/^   char input_config_path[PATH_MAX];$/;"	m	struct:global	access:public
input_conv_analog_id_to_bind_id	input/input_common.h	/^static inline void input_conv_analog_id_to_bind_id(unsigned index, unsigned id,$/;"	f	signature:(unsigned index, unsigned id, unsigned *id_minus, unsigned *id_plus)
input_data	driver.h	/^   void *input_data;$/;"	m	struct:driver	access:public
input_data	gfx/thread_wrapper.c	/^   void **input_data;$/;"	m	struct:thread_video	file:	access:public
input_data_own	driver.h	/^   bool input_data_own;$/;"	m	struct:driver	access:public
input_debug_enable	config.def.h	/^static const bool input_debug_enable = false;$/;"	v
input_desc_btn	general.h	/^      const char *input_desc_btn[MAX_PLAYERS][RARCH_FIRST_CUSTOM_BIND];$/;"	m	struct:global::__anon234	access:public
input_device	input/udev_input.c	/^struct input_device$/;"	s	file:
input_device::__anon90::__anon91::info_x	input/udev_input.c	/^         struct input_absinfo info_x;$/;"	m	struct:input_device::__anon90::__anon91	typeref:struct:input_device::__anon90::__anon91::input_absinfo	file:	access:public
input_device::__anon90::__anon91::info_y	input/udev_input.c	/^         struct input_absinfo info_y;$/;"	m	struct:input_device::__anon90::__anon91	typeref:struct:input_device::__anon90::__anon91::input_absinfo	file:	access:public
input_device::__anon90::__anon91::mod_x	input/udev_input.c	/^         float mod_x, mod_y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
input_device::__anon90::__anon91::mod_y	input/udev_input.c	/^         float mod_x, mod_y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
input_device::__anon90::__anon91::touch	input/udev_input.c	/^         bool touch;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
input_device::__anon90::__anon91::x	input/udev_input.c	/^         float x, y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
input_device::__anon90::__anon91::y	input/udev_input.c	/^         float x, y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
input_device::__anon90::touchpad	input/udev_input.c	/^      } touchpad;$/;"	m	union:input_device::__anon90	typeref:struct:input_device::__anon90::__anon91	file:	access:public
input_device::dev	input/udev_input.c	/^   dev_t dev;$/;"	m	struct:input_device	file:	access:public
input_device::devnode	input/udev_input.c	/^   char devnode[PATH_MAX];$/;"	m	struct:input_device	file:	access:public
input_device::fd	input/udev_input.c	/^   int fd;$/;"	m	struct:input_device	file:	access:public
input_device::handle_cb	input/udev_input.c	/^   device_handle_cb handle_cb;$/;"	m	struct:input_device	file:	access:public
input_device::state	input/udev_input.c	/^   } state;$/;"	m	struct:input_device	typeref:union:input_device::__anon90	file:	access:public
input_device_t	blackberry-qnx/frontend_qnx.h	/^} input_device_t;$/;"	t	typeref:struct:__anon94
input_devices	driver.h	/^enum input_devices$/;"	g
input_dinput	input/dinput.c	/^const input_driver_t input_dinput = {$/;"	v
input_driver	driver.h	/^typedef struct input_driver$/;"	s
input_driver	gfx/gfx_context.h	/^   void (*input_driver)(const input_driver_t**, void**);$/;"	m	struct:gfx_ctx_driver	access:public
input_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:input_driver	access:public
input_driver::get_capabilities	driver.h	/^   uint64_t (*get_capabilities)(void *data);$/;"	m	struct:input_driver	access:public
input_driver::get_joypad_driver	driver.h	/^   const rarch_joypad_driver_t *(*get_joypad_driver)(void *data);$/;"	m	struct:input_driver	access:public
input_driver::grab_mouse	driver.h	/^   void (*grab_mouse)(void *data, bool state);$/;"	m	struct:input_driver	access:public
input_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:input_driver	access:public
input_driver::init	driver.h	/^   void *(*init)(void);$/;"	m	struct:input_driver	access:public
input_driver::input_state	driver.h	/^   int16_t (*input_state)(void *data, const struct retro_keybind **retro_keybinds,$/;"	m	struct:input_driver	access:public
input_driver::key_pressed	driver.h	/^   bool (*key_pressed)(void *data, int key);$/;"	m	struct:input_driver	access:public
input_driver::poll	driver.h	/^   void (*poll)(void *data);$/;"	m	struct:input_driver	access:public
input_driver::set_keybinds	driver.h	/^   void (*set_keybinds)(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action);$/;"	m	struct:input_driver	access:public
input_driver::set_rumble	driver.h	/^   bool (*set_rumble)(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t state);$/;"	m	struct:input_driver	access:public
input_driver::set_sensor_state	driver.h	/^   bool (*set_sensor_state)(void *data, unsigned port, enum retro_sensor_action action, unsigned rate);$/;"	m	struct:input_driver	access:public
input_driver_t	driver.h	/^} input_driver_t;$/;"	t	typeref:struct:input_driver
input_drivers	driver.c	/^static const input_driver_t *input_drivers[] = {$/;"	v	file:
input_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t input_fb;$/;"	m	struct:__anon192	access:public
input_frames	audio/resampler.h	/^   size_t input_frames;$/;"	m	struct:resampler_data	access:public
input_free_func	driver_funcs.h	55;"	d
input_get_bind_string	input/input_common.c	/^void input_get_bind_string(char *buf, const struct retro_keybind *bind, size_t size)$/;"	f	signature:(char *buf, const struct retro_keybind *bind, size_t size)
input_get_bind_string	input/input_common.h	/^void input_get_bind_string(char *buf, const struct retro_keybind *bind, size_t size);$/;"	p	signature:(char *buf, const struct retro_keybind *bind, size_t size)
input_gx	gx/gx_input.c	/^const input_driver_t input_gx = {$/;"	v
input_init_func	driver_funcs.h	51;"	d
input_init_keyboard_lut	input/input_common.c	/^void input_init_keyboard_lut(const struct rarch_key_map *map)$/;"	f	signature:(const struct rarch_key_map *map)
input_init_keyboard_lut	input/input_common.h	/^void input_init_keyboard_lut(const struct rarch_key_map *map);$/;"	p	signature:(const struct rarch_key_map *map)
input_input_state_func	driver_funcs.h	53;"	d
input_joypad_analog	input/input_common.c	/^int16_t input_joypad_analog(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned port, unsigned index, unsigned id, const struct retro_keybind *binds)
input_joypad_analog	input/input_common.h	/^int16_t input_joypad_analog(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned port, unsigned index, unsigned id, const struct retro_keybind *binds)
input_joypad_axis_raw	input/input_common.c	/^int16_t input_joypad_axis_raw(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned axis)
input_joypad_axis_raw	input/input_common.h	/^int16_t input_joypad_axis_raw(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned axis)
input_joypad_button_raw	input/input_common.c	/^bool input_joypad_button_raw(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned button)
input_joypad_button_raw	input/input_common.h	/^bool input_joypad_button_raw(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned button)
input_joypad_hat_raw	input/input_common.c	/^bool input_joypad_hat_raw(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned hat_dir, unsigned hat)
input_joypad_hat_raw	input/input_common.h	/^bool input_joypad_hat_raw(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned joypad, unsigned hat_dir, unsigned hat)
input_joypad_init_driver	input/input_common.c	/^const rarch_joypad_driver_t *input_joypad_init_driver(const char *ident)$/;"	f	signature:(const char *ident)
input_joypad_init_driver	input/input_common.h	/^const rarch_joypad_driver_t *input_joypad_init_driver(const char *ident);$/;"	p	signature:(const char *ident)
input_joypad_init_first	input/input_common.c	/^const rarch_joypad_driver_t *input_joypad_init_first(void)$/;"	f	signature:(void)
input_joypad_init_first	input/input_common.h	/^const rarch_joypad_driver_t *input_joypad_init_first(void);$/;"	p	signature:(void)
input_joypad_name	input/input_common.c	/^const char *input_joypad_name(const rarch_joypad_driver_t *driver, unsigned joypad)$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned joypad)
input_joypad_name	input/input_common.h	/^const char *input_joypad_name(const rarch_joypad_driver_t *driver, unsigned joypad);$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned joypad)
input_joypad_poll	input/input_common.c	/^void input_joypad_poll(const rarch_joypad_driver_t *driver)$/;"	f	signature:(const rarch_joypad_driver_t *driver)
input_joypad_poll	input/input_common.h	/^void input_joypad_poll(const rarch_joypad_driver_t *driver);$/;"	p	signature:(const rarch_joypad_driver_t *driver)
input_joypad_pressed	input/input_common.c	/^bool input_joypad_pressed(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned port, const struct retro_keybind *binds, unsigned key)
input_joypad_pressed	input/input_common.h	/^bool input_joypad_pressed(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned port, const struct retro_keybind *binds, unsigned key)
input_joypad_set_rumble	input/input_common.c	/^bool input_joypad_set_rumble(const rarch_joypad_driver_t *driver,$/;"	f	signature:(const rarch_joypad_driver_t *driver, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
input_joypad_set_rumble	input/input_common.h	/^bool input_joypad_set_rumble(const rarch_joypad_driver_t *driver,$/;"	p	signature:(const rarch_joypad_driver_t *driver, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
input_key_map	input/input_common.h	/^struct input_key_map$/;"	s
input_key_map::key	input/input_common.h	/^   enum retro_key key;$/;"	m	struct:input_key_map	typeref:enum:input_key_map::retro_key	access:public
input_key_map::str	input/input_common.h	/^   const char *str;$/;"	m	struct:input_key_map	access:public
input_key_pressed_func	driver_funcs.h	/^static inline bool input_key_pressed_func(int key)$/;"	f	signature:(int key)
input_keyboard_event	input/keyboard_line.c	/^void input_keyboard_event(bool down, unsigned code, uint32_t character, uint16_t mod)$/;"	f	signature:(bool down, unsigned code, uint32_t character, uint16_t mod)
input_keyboard_event	input/keyboard_line.h	/^void input_keyboard_event(bool down, unsigned code, uint32_t character, uint16_t mod);$/;"	p	signature:(bool down, unsigned code, uint32_t character, uint16_t mod)
input_keyboard_line	input/keyboard_line.c	/^struct input_keyboard_line$/;"	s	file:
input_keyboard_line::buffer	input/keyboard_line.c	/^   char *buffer;$/;"	m	struct:input_keyboard_line	file:	access:public
input_keyboard_line::cb	input/keyboard_line.c	/^   input_keyboard_line_complete_t cb;$/;"	m	struct:input_keyboard_line	file:	access:public
input_keyboard_line::ptr	input/keyboard_line.c	/^   size_t ptr;$/;"	m	struct:input_keyboard_line	file:	access:public
input_keyboard_line::size	input/keyboard_line.c	/^   size_t size;$/;"	m	struct:input_keyboard_line	file:	access:public
input_keyboard_line::userdata	input/keyboard_line.c	/^   void *userdata;$/;"	m	struct:input_keyboard_line	file:	access:public
input_keyboard_line_complete_t	input/keyboard_line.h	/^typedef void (*input_keyboard_line_complete_t)(void *userdata, const char *line);$/;"	t
input_keyboard_line_event	input/keyboard_line.c	/^bool input_keyboard_line_event(input_keyboard_line_t *state, uint32_t character)$/;"	f	signature:(input_keyboard_line_t *state, uint32_t character)
input_keyboard_line_event	input/keyboard_line.h	/^bool input_keyboard_line_event(input_keyboard_line_t *state, uint32_t character);$/;"	p	signature:(input_keyboard_line_t *state, uint32_t character)
input_keyboard_line_free	input/keyboard_line.c	/^void input_keyboard_line_free(input_keyboard_line_t *state)$/;"	f	signature:(input_keyboard_line_t *state)
input_keyboard_line_free	input/keyboard_line.h	/^void input_keyboard_line_free(input_keyboard_line_t *state);$/;"	p	signature:(input_keyboard_line_t *state)
input_keyboard_line_get_buffer	input/keyboard_line.c	/^const char **input_keyboard_line_get_buffer(const input_keyboard_line_t *state)$/;"	f	signature:(const input_keyboard_line_t *state)
input_keyboard_line_get_buffer	input/keyboard_line.h	/^const char **input_keyboard_line_get_buffer(const input_keyboard_line_t *state);$/;"	p	signature:(const input_keyboard_line_t *state)
input_keyboard_line_new	input/keyboard_line.c	/^input_keyboard_line_t *input_keyboard_line_new(void *userdata,$/;"	f	signature:(void *userdata, input_keyboard_line_complete_t cb)
input_keyboard_line_new	input/keyboard_line.h	/^input_keyboard_line_t *input_keyboard_line_new(void *userdata,$/;"	p	signature:(void *userdata, input_keyboard_line_complete_t cb)
input_keyboard_line_t	input/keyboard_line.h	/^typedef struct input_keyboard_line input_keyboard_line_t;$/;"	t	typeref:struct:input_keyboard_line
input_keyboard_start_line	input/keyboard_line.c	/^const char **input_keyboard_start_line(void *userdata, input_keyboard_line_complete_t cb)$/;"	f	signature:(void *userdata, input_keyboard_line_complete_t cb)
input_keyboard_start_line	input/keyboard_line.h	/^const char **input_keyboard_start_line(void *userdata, input_keyboard_line_complete_t cb);$/;"	p	signature:(void *userdata, input_keyboard_line_complete_t cb)
input_linuxraw	input/linuxraw_input.c	/^const input_driver_t input_linuxraw = {$/;"	v
input_null	input/null.c	/^const input_driver_t input_null = {$/;"	v
input_osk_driver	driver.h	/^typedef struct input_osk_driver$/;"	s
input_osk_driver::enable_key_layout	driver.h	/^   bool (*enable_key_layout)(void *data);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::get_text_buf	driver.h	/^   void *(*get_text_buf)(void *data);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::init	driver.h	/^   void *(*init)(size_t size);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::lifecycle	driver.h	/^   void (*lifecycle)(void *data, uint64_t status);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::oskutil_create_activation_parameters	driver.h	/^   void (*oskutil_create_activation_parameters)(void *data);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::write_initial_msg	driver.h	/^   void (*write_initial_msg)(void *data, const void *msg);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver::write_msg	driver.h	/^   void (*write_msg)(void *data, const void *msg);$/;"	m	struct:input_osk_driver	access:public
input_osk_driver_t	driver.h	/^} input_osk_driver_t;$/;"	t	typeref:struct:input_osk_driver
input_overlay	input/overlay.c	/^struct input_overlay$/;"	s	file:
input_overlay::active	input/overlay.c	/^   const struct overlay *active;$/;"	m	struct:input_overlay	typeref:struct:input_overlay::overlay	file:	access:public
input_overlay::blocked	input/overlay.c	/^   bool blocked;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::enable	input/overlay.c	/^   bool enable;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::iface	input/overlay.c	/^   const video_overlay_interface_t *iface;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::iface_data	input/overlay.c	/^   void *iface_data;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::index	input/overlay.c	/^   size_t index;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::next_index	input/overlay.c	/^   unsigned next_index;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::overlay_path	input/overlay.c	/^   char *overlay_path;$/;"	m	struct:input_overlay	file:	access:public
input_overlay::overlays	input/overlay.c	/^   struct overlay *overlays;$/;"	m	struct:input_overlay	typeref:struct:input_overlay::overlay	file:	access:public
input_overlay::size	input/overlay.c	/^   size_t size;$/;"	m	struct:input_overlay	file:	access:public
input_overlay_enable	input/overlay.c	/^void input_overlay_enable(input_overlay_t *ol, bool enable)$/;"	f	signature:(input_overlay_t *ol, bool enable)
input_overlay_enable	input/overlay.h	/^void input_overlay_enable(input_overlay_t *ol, bool enable);$/;"	p	signature:(input_overlay_t *ol, bool enable)
input_overlay_find_index	input/overlay.c	/^static ssize_t input_overlay_find_index(const struct overlay *ol, const char *name, size_t size)$/;"	f	file:	signature:(const struct overlay *ol, const char *name, size_t size)
input_overlay_free	input/overlay.c	/^void input_overlay_free(input_overlay_t *ol)$/;"	f	signature:(input_overlay_t *ol)
input_overlay_free	input/overlay.h	/^void input_overlay_free(input_overlay_t *ol);$/;"	p	signature:(input_overlay_t *ol)
input_overlay_free_overlay	input/overlay.c	/^static void input_overlay_free_overlay(struct overlay *overlay)$/;"	f	file:	signature:(struct overlay *overlay)
input_overlay_free_overlays	input/overlay.c	/^static void input_overlay_free_overlays(input_overlay_t *ol)$/;"	f	file:	signature:(input_overlay_t *ol)
input_overlay_full_screen	input/overlay.c	/^bool input_overlay_full_screen(input_overlay_t *ol)$/;"	f	signature:(input_overlay_t *ol)
input_overlay_full_screen	input/overlay.h	/^bool input_overlay_full_screen(input_overlay_t *ol);$/;"	p	signature:(input_overlay_t *ol)
input_overlay_load_active	input/overlay.c	/^static void input_overlay_load_active(input_overlay_t *ol)$/;"	f	file:	signature:(input_overlay_t *ol)
input_overlay_load_desc	input/overlay.c	/^static bool input_overlay_load_desc(input_overlay_t *ol, config_file_t *conf, struct overlay_desc *desc,$/;"	f	file:	signature:(input_overlay_t *ol, config_file_t *conf, struct overlay_desc *desc, unsigned ol_index, unsigned desc_index, unsigned width, unsigned height, bool normalized, float alpha_mod, float range_mod)
input_overlay_load_overlay	input/overlay.c	/^static bool input_overlay_load_overlay(input_overlay_t *ol, config_file_t *conf, const char *config_path,$/;"	f	file:	signature:(input_overlay_t *ol, config_file_t *conf, const char *config_path, struct overlay *overlay, unsigned index)
input_overlay_load_overlays	input/overlay.c	/^static bool input_overlay_load_overlays(input_overlay_t *ol, const char *path)$/;"	f	file:	signature:(input_overlay_t *ol, const char *path)
input_overlay_new	input/overlay.c	/^input_overlay_t *input_overlay_new(const char *overlay)$/;"	f	signature:(const char *overlay)
input_overlay_new	input/overlay.h	/^input_overlay_t *input_overlay_new(const char *overlay);$/;"	p	signature:(const char *overlay)
input_overlay_next	input/overlay.c	/^void input_overlay_next(input_overlay_t *ol)$/;"	f	signature:(input_overlay_t *ol)
input_overlay_next	input/overlay.h	/^void input_overlay_next(input_overlay_t *ol);$/;"	p	signature:(input_overlay_t *ol)
input_overlay_poll	input/overlay.c	/^void input_overlay_poll(input_overlay_t *ol, input_overlay_state_t *out, int16_t norm_x, int16_t norm_y)$/;"	f	signature:(input_overlay_t *ol, input_overlay_state_t *out, int16_t norm_x, int16_t norm_y)
input_overlay_poll	input/overlay.h	/^void input_overlay_poll(input_overlay_t *ol, input_overlay_state_t *out, int16_t norm_x, int16_t norm_y);$/;"	p	signature:(input_overlay_t *ol, input_overlay_state_t *out, int16_t norm_x, int16_t norm_y)
input_overlay_poll_clear	input/overlay.c	/^void input_overlay_poll_clear(input_overlay_t *ol)$/;"	f	signature:(input_overlay_t *ol)
input_overlay_poll_clear	input/overlay.h	/^void input_overlay_poll_clear(input_overlay_t *ol);$/;"	p	signature:(input_overlay_t *ol)
input_overlay_resolve_targets	input/overlay.c	/^static bool input_overlay_resolve_targets(struct overlay *ol, size_t index, size_t size)$/;"	f	file:	signature:(struct overlay *ol, size_t index, size_t size)
input_overlay_scale	input/overlay.c	/^static void input_overlay_scale(struct overlay *overlay, float scale)$/;"	f	file:	signature:(struct overlay *overlay, float scale)
input_overlay_set_alpha_mod	input/overlay.c	/^void input_overlay_set_alpha_mod(input_overlay_t *ol, float mod)$/;"	f	signature:(input_overlay_t *ol, float mod)
input_overlay_set_alpha_mod	input/overlay.h	/^void input_overlay_set_alpha_mod(input_overlay_t *ol, float mod);$/;"	p	signature:(input_overlay_t *ol, float mod)
input_overlay_set_scale_factor	input/overlay.c	/^void input_overlay_set_scale_factor(input_overlay_t *ol, float scale)$/;"	f	signature:(input_overlay_t *ol, float scale)
input_overlay_set_scale_factor	input/overlay.h	/^void input_overlay_set_scale_factor(input_overlay_t *ol, float scale);$/;"	p	signature:(input_overlay_t *ol, float scale)
input_overlay_set_vertex_geom	input/overlay.c	/^static void input_overlay_set_vertex_geom(input_overlay_t *ol)$/;"	f	file:	signature:(input_overlay_t *ol)
input_overlay_state	input/overlay.h	/^typedef struct input_overlay_state$/;"	s
input_overlay_state::analog	input/overlay.h	/^   int16_t analog[4];  \/\/ Left X, Left Y, Right X, Right Y$/;"	m	struct:input_overlay_state	access:public
input_overlay_state::buttons	input/overlay.h	/^   uint64_t buttons;   \/\/ This is a bitmask of (1 << key_bind_id).$/;"	m	struct:input_overlay_state	access:public
input_overlay_state_t	input/overlay.h	/^} input_overlay_state_t;$/;"	t	typeref:struct:input_overlay_state
input_overlay_t	input/overlay.h	/^typedef struct input_overlay input_overlay_t;$/;"	t	typeref:struct:input_overlay
input_pointer	android/native/jni/input_android.c	/^struct input_pointer$/;"	s	file:
input_pointer::full_x	android/native/jni/input_android.c	/^   int16_t full_x, full_y;$/;"	m	struct:input_pointer	file:	access:public
input_pointer::full_y	android/native/jni/input_android.c	/^   int16_t full_x, full_y;$/;"	m	struct:input_pointer	file:	access:public
input_pointer::x	android/native/jni/input_android.c	/^   int16_t x, y;$/;"	m	struct:input_pointer	file:	access:public
input_pointer::y	android/native/jni/input_android.c	/^   int16_t x, y;$/;"	m	struct:input_pointer	file:	access:public
input_poll_cb	libretro-test-gl/libretro-test.c	/^static retro_input_poll_t input_poll_cb;$/;"	v	file:
input_poll_cb	libretro-test/libretro-test.c	/^static retro_input_poll_t input_poll_cb;$/;"	v	file:
input_poll_func	driver_funcs.h	52;"	d
input_poll_net	netplay.c	/^void input_poll_net(void)$/;"	f	signature:(void)
input_poll_net	netplay.h	/^void input_poll_net(void);$/;"	p	signature:(void)
input_poll_overlay	retroarch.c	/^static inline void input_poll_overlay(void)$/;"	f	file:	signature:(void)
input_ps3	ps3/ps3_input.c	/^const input_driver_t input_ps3 = {$/;"	v
input_ps3_osk	ps3/ps3_input_osk.c	/^const input_osk_driver_t input_ps3_osk = {$/;"	v
input_psp	psp/psp_input.c	/^const input_driver_t input_psp = {$/;"	v
input_ptr	gfx/state_tracker.c	/^   const uint16_t *input_ptr;$/;"	m	struct:state_tracker_internal	file:	access:public
input_qnx	blackberry-qnx/qnx_input.c	/^const input_driver_t input_qnx = {$/;"	v
input_rate	audio/ext/rarch_dsp.h	/^   float input_rate;$/;"	m	struct:rarch_dsp_info	access:public
input_rwebinput	input/rwebinput_input.c	/^const input_driver_t input_rwebinput = {$/;"	v
input_scale	driver.h	/^   unsigned input_scale; \/\/ Maximum input size: RARCH_SCALE_BASE * input_scale$/;"	m	struct:video_info	access:public
input_sdl	input/sdl_input.c	/^const input_driver_t input_sdl = {$/;"	v
input_size	gfx/gl_common.h	/^   GLfloat input_size[2];$/;"	m	struct:gl_tex_info	access:public
input_size	gfx/shader_glsl.c	/^   int input_size;$/;"	m	struct:shader_uniforms	file:	access:public
input_size	gfx/shader_glsl.c	/^   int input_size;$/;"	m	struct:shader_uniforms_frame	file:	access:public
input_state	driver.h	/^   int16_t (*input_state)(void *data, const struct retro_keybind **retro_keybinds,$/;"	m	struct:input_driver	access:public
input_state	gfx/state_tracker.c	/^   uint16_t input_state[2];$/;"	m	struct:state_tracker	file:	access:public
input_state	retroarch.c	/^static int16_t input_state(unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_cb	libretro-test-gl/libretro-test.c	/^static retro_input_state_t input_state_cb;$/;"	v	file:
input_state_cb	libretro-test/libretro-test.c	/^static retro_input_state_t input_state_cb;$/;"	v	file:
input_state_net	netplay.c	/^int16_t input_state_net(unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_net	netplay.h	/^int16_t input_state_net(unsigned port, unsigned device, unsigned index, unsigned id);$/;"	p	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_spectate	netplay.c	/^int16_t input_state_spectate(unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_spectate	netplay.h	/^int16_t input_state_spectate(unsigned port, unsigned device, unsigned index, unsigned id);$/;"	p	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_spectate_client	netplay.c	/^int16_t input_state_spectate_client(unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_state_spectate_client	netplay.h	/^int16_t input_state_spectate_client(unsigned port, unsigned device, unsigned index, unsigned id);$/;"	p	signature:(unsigned port, unsigned device, unsigned index, unsigned id)
input_str_to_bind	input/overlay.c	/^static unsigned input_str_to_bind(const char *str)$/;"	f	file:	signature:(const char *str)
input_translate_coord_viewport	input/input_common.c	/^bool input_translate_coord_viewport(int mouse_x, int mouse_y,$/;"	f	signature:(int mouse_x, int mouse_y, int16_t *res_x, int16_t *res_y, int16_t *res_screen_x, int16_t *res_screen_y)
input_translate_coord_viewport	input/input_common.h	/^bool input_translate_coord_viewport(int mouse_x, int mouse_y,$/;"	p	signature:(int mouse_x, int mouse_y, int16_t *res_x, int16_t *res_y, int16_t *res_screen_x, int16_t *res_screen_y)
input_translate_keysym_to_rk	input/input_common.c	/^enum retro_key input_translate_keysym_to_rk(unsigned sym)$/;"	f	signature:(unsigned sym)
input_translate_keysym_to_rk	input/input_common.h	/^enum retro_key input_translate_keysym_to_rk(unsigned sym);$/;"	p	signature:(unsigned sym)
input_translate_rk_to_keysym	input/input_common.c	/^unsigned input_translate_rk_to_keysym(enum retro_key key)$/;"	f	signature:(enum retro_key key)
input_translate_rk_to_keysym	input/input_common.h	/^unsigned input_translate_rk_to_keysym(enum retro_key key);$/;"	p	signature:(enum retro_key key)
input_translate_rk_to_str	input/input_common.c	/^void input_translate_rk_to_str(enum retro_key key, char *buf, size_t size)$/;"	f	signature:(enum retro_key key, char *buf, size_t size)
input_translate_rk_to_str	input/input_common.h	/^void input_translate_rk_to_str(enum retro_key key, char *buf, size_t size);$/;"	p	signature:(enum retro_key key, char *buf, size_t size)
input_try_autoconfigure_joypad_from_conf	input/input_common.c	/^static bool input_try_autoconfigure_joypad_from_conf(config_file_t *conf, unsigned index, const char *name, const char *driver, bool block_osd_spam)$/;"	f	file:	signature:(config_file_t *conf, unsigned index, const char *name, const char *driver, bool block_osd_spam)
input_udev	input/udev_input.c	/^const input_driver_t input_udev = {$/;"	v
input_x	input/x11_input.c	/^const input_driver_t input_x = {$/;"	v
input_xenon360	xenon/xenon360_input.c	/^const input_driver_t input_xenon360 = {$/;"	v
input_xinput	xdk/xdk_xinput_input.c	/^const input_driver_t input_xinput = $/;"	v
inquiry_off	apple/iOS/bluetooth/btpad.c	/^static bool inquiry_off;$/;"	v	file:
inquiry_running	apple/iOS/bluetooth/btpad.c	/^static bool inquiry_running;$/;"	v	file:
insert_position	apple/iOS/bluetooth/btpad_queue.c	/^static uint32_t insert_position;$/;"	v	file:
inside_hitbox	input/overlay.c	/^static bool inside_hitbox(const struct overlay_desc *desc, float x, float y)$/;"	f	file:	signature:(const struct overlay_desc *desc, float x, float y)
inst	gfx/py_state/py_state.c	/^   PyObject *inst;$/;"	m	struct:py_state	file:	access:public
instance	ps3/rgl/src/cg/cgbio.hpp	/^            static const bin_io* instance();$/;"	p	class:cgc::bio::bin_io	access:public	signature:()
instance	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::instance()$/;"	f	class:cgc::bio::bin_io	signature:()
instance_	ps3/rgl/src/cg/cgbio.hpp	/^            static bin_io* instance_;$/;"	m	class:cgc::bio::bin_io	access:private
instance_	ps3/rgl/src/rgl_ps3_cg.cpp	/^      bin_io* bin_io::instance_ = 0;$/;"	m	class:cgc::bio::bin_io	file:
instructionCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int instructionCount;$/;"	m	struct:CgProgramHeader	access:public
instructionCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionCount;         \/\/ #instructions$/;"	m	struct:CgBinaryFragmentProgram	access:public
instructionCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionCount;         \/\/ #instructions$/;"	m	struct:CgBinaryVertexProgram	access:public
instructionSlot	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int instructionSlot;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
instructionSlot	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  instructionSlot;          \/\/ load address (indexed reads!)$/;"	m	struct:CgBinaryVertexProgram	access:public
int16	ps3/ps3py/pkg.py	/^	int16 = StructType(('h', 2))$/;"	v	class:Struct
int16_t	msvc/msvc-stdint/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	msvc/msvc-stdint/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32	ps3/ps3py/pkg.py	/^	int32 = StructType(('l', 4))$/;"	v	class:Struct
int32_t	msvc/msvc-2010/GL/glext.h	/^typedef __int32 int32_t;$/;"	t
int32_t	msvc/msvc-2010/GL/glext.h	/^typedef long int int32_t;$/;"	t
int32_t	msvc/msvc-stdint/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	msvc/msvc-stdint/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64	ps3/ps3py/pkg.py	/^	int64 = StructType(('q', 8))$/;"	v	class:Struct
int64_t	msvc/msvc-2010/GL/glext.h	/^typedef __int64 int64_t;$/;"	t
int64_t	msvc/msvc-2010/GL/glext.h	/^typedef long int int64_t;$/;"	t
int64_t	msvc/msvc-2010/GL/glext.h	/^typedef long long int int64_t;$/;"	t
int64_t	msvc/msvc-stdint/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8	ps3/ps3py/pkg.py	/^	int8 = StructType(('b', 1))$/;"	v	class:Struct
int8_t	msvc/msvc-stdint/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	msvc/msvc-stdint/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	msvc/msvc-stdint/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	msvc/msvc-stdint/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	msvc/msvc-stdint/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	msvc/msvc-stdint/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	msvc/msvc-stdint/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	msvc/msvc-stdint/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	msvc/msvc-stdint/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	msvc/msvc-stdint/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
integer	apple/common/setting_data.h	/^      int integer;$/;"	m	union:__anon161::__anon162	access:public
integer	apple/common/setting_data.h	/^      int* integer;$/;"	m	union:__anon161::__anon163	access:public
interface	frontend/platform/platform_gx.c	/^   const DISC_INTERFACE *interface;$/;"	m	struct:__anon13	file:	access:public
interlace	gfx/context/sunxi_disp_ioctl.h	/^	__bool interlace;$/;"	m	struct:__anon189	access:public
interlace	gfx/rpng/rpng.c	/^   uint8_t interlace;$/;"	m	struct:png_ihdr	file:	access:public
interleave	audio/test/snr.c	/^static void interleave(complex double *butterfly_buf, size_t samples)$/;"	f	file:	signature:(complex double *butterfly_buf, size_t samples)
internalFormat	ps3/rgl/include/RGL/Types.h	/^      GLenum internalFormat;$/;"	m	struct:rglBufferObject	access:public
internalFormat	ps3/rgl/include/RGL/Types.h	/^      GLenum internalFormat;$/;"	m	struct:rglImage_	access:public
internalFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum 	internalFormat;$/;"	m	struct:__anon52	access:public
internal_fa	deps/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
internal_fa	deps/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
internal_fmt	gfx/gl_common.h	/^   GLenum internal_fmt;$/;"	m	struct:gl	access:public
internal_fmt	xdk/xdk_d3d.h	/^   D3DFORMAT internal_fmt;$/;"	m	struct:xdk_d3d_video	access:public
internal_state	deps/miniz/zlib.h	383;"	d
interpolant	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmInterpolantState interpolant;$/;"	m	struct:rglGcmCachedState	access:public
interval	autosave.c	/^   unsigned interval;$/;"	m	struct:autosave	file:	access:public
intf	deps/miniz/zlib.h	/^  typedef int intf;$/;"	t
intmax_t	msvc/msvc-stdint/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	msvc/msvc-stdint/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	msvc/msvc-stdint/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
invalidateVertexCache	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean invalidateVertexCache;$/;"	m	struct:rglGcmDriver_	access:public
ios_add_log_message	apple/common/rarch_wrapper.h	41;"	d
ios_set_bluetooth_mode	apple/iOS/platform.h	/^void ios_set_bluetooth_mode(NSString* mode);$/;"	p	signature:(NSString* mode)
ips_apply_patch	patch.c	/^patch_error_t ips_apply_patch($/;"	f	signature:( const uint8_t *patchdata, size_t patchlen, const uint8_t *sourcedata, size_t sourcelength, uint8_t *targetdata, size_t *targetlength)
ips_apply_patch	patch.h	/^patch_error_t ips_apply_patch($/;"	p	signature:( const uint8_t *patch_data, size_t patch_length, const uint8_t *source_data, size_t source_length, uint8_t *target_data, size_t *target_length)
ips_name	general.h	/^   char ips_name[PATH_MAX];$/;"	m	struct:global	access:public
ips_pref	general.h	/^   bool ips_pref;$/;"	m	struct:global	access:public
isComplete	ps3/rgl/include/RGL/Types.h	/^      GLboolean   isComplete;$/;"	m	struct:__anon63	access:public
isDirSelectItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isDirSelectItem() {$/;"	m	class:FileWrapper	access:public	signature:()
isDirectory	apple/iOS/views.h	/^@property (nonatomic) bool isDirectory;$/;"	v
isDirectoryTarget	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected boolean isDirectoryTarget;$/;"	f	class:DirectoryFragment	access:protected
isEnabled	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isEnabled() {$/;"	m	class:FileWrapper	access:public	signature:()
isEnabled	android/phoenix/src/com/retroarch/browser/HistoryWrapper.java	/^	public boolean isEnabled() {$/;"	m	class:HistoryWrapper	access:public	signature:()
isEnabled	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public boolean isEnabled();$/;"	m	interface:IconAdapterItem	access:public	signature:()
isEnabled	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	public boolean isEnabled(int aPosition) {$/;"	m	class:IconAdapter	access:public	signature:(int aPosition)
isEnabled	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	public boolean isEnabled()$/;"	m	class:ModuleWrapper	access:public	signature:()
isMatrix	ps3/rgl/include/Cg/CgCommon.h	/^static inline bool isMatrix (CGtype type)$/;"	f	signature:(CGtype type)
isParentItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	public boolean isParentItem() {$/;"	m	class:FileWrapper	access:public	signature:()
isPinned	ps3/rgl/src/include/GmmAlloc.h	/^   uint8_t     isPinned;$/;"	m	struct:GmmBlock	access:public
isReferenced	ps3/rgl/include/Cg/cgBinary.h	/^      CGbool                          isReferenced;  \/\/ cgIsParameterReferenced()$/;"	m	struct:CgBinaryParameter	access:public
isRenderTarget	ps3/rgl/include/RGL/Types.h	/^      GLboolean isRenderTarget;$/;"	m	struct:__anon63	access:public
isSampler	ps3/rgl/include/Cg/CgCommon.h	/^static inline bool isSampler (CGtype type)$/;"	f	signature:(CGtype type)
isSet	ps3/rgl/include/RGL/Types.h	/^      GLboolean isSet;$/;"	m	struct:__anon64	access:public
isSet	ps3/rgl/include/RGL/Types.h	/^      GLboolean isSet;$/;"	m	struct:rglImage_	access:public
isShared	ps3/rgl/include/Cg/cgBinary.h	/^      CGbool                          isShared;	   \/\/ cgIsParameterShared()$/;"	m	struct:CgBinaryParameter	access:public
isTile	ps3/rgl/src/include/GmmAlloc.h	/^   uint8_t     isTile;$/;"	m	struct:GmmBaseBlock	access:public
is_dupe	record/ffemu.h	/^   bool is_dupe;$/;"	m	struct:ffemu_video_data	access:public
is_input	gfx/state_tracker.c	/^   bool is_input;$/;"	m	struct:state_tracker_internal	file:	access:public
is_little_endian	miscellaneous.h	/^static inline uint8_t is_little_endian(void)$/;"	f	signature:(void)
is_loaded	ps3/rgl/src/cg/nvbi.hpp	/^               is_loaded() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
is_loaded	ps3/rgl/src/cg/nvbiimpl.hpp	/^               is_loaded() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
is_loaded	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::is_loaded() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
is_long_option	compat/compat.c	/^static bool is_long_option(const char *str)$/;"	f	file:	signature:(const char *str)
is_oneshot	general.h	/^   bool is_oneshot;$/;"	m	struct:global	access:public
is_paused	audio/alsa.c	/^   bool is_paused;$/;"	m	struct:alsa	file:	access:public
is_paused	blackberry-qnx/alsa_qsa.c	/^   bool is_paused;$/;"	m	struct:alsa	file:	access:public
is_paused	general.h	/^   bool is_paused;$/;"	m	struct:global	access:public
is_planar	record/ffemu.c	/^   bool is_planar;$/;"	m	struct:ff_audio_info	file:	access:public
is_replay	netplay.c	/^   bool is_replay; \/\/ Are we replaying old frames?$/;"	m	struct:netplay	file:	access:public
is_short_option	compat/compat.c	/^static bool is_short_option(const char *str)$/;"	f	file:	signature:(const char *str)
is_simulated	netplay.c	/^   bool is_simulated;$/;"	m	struct:delta_frame	file:	access:public
is_slowmotion	general.h	/^   bool is_slowmotion;$/;"	m	struct:global	access:public
isblank	compat/compat.c	279;"	d	file:
isblank	compat/posix_string.h	/^int isblank(int c);$/;"	p	signature:(int c)
isblank	compat/posix_string.h	29;"	d
isblank	compat/posix_string.h	33;"	d
item	apple/iOS/bluetooth/btstack/run_loop.h	/^    linked_item_t item; $/;"	m	struct:timer	access:public
item	apple/iOS/bluetooth/btstack/run_loop.h	/^    linked_item_t item;$/;"	m	struct:data_source	access:public
itemLongClickListener	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	private final OnItemLongClickListener itemLongClickListener = new OnItemLongClickListener()$/;"	f	class:InstalledCoresFragment	file:	access:private
item_file	file_list.c	/^struct item_file$/;"	s	file:
item_file::alt	file_list.c	/^   char *alt;$/;"	m	struct:item_file	file:	access:public
item_file::directory_ptr	file_list.c	/^   size_t directory_ptr;$/;"	m	struct:item_file	file:	access:public
item_file::path	file_list.c	/^   char *path;$/;"	m	struct:item_file	file:	access:public
item_file::type	file_list.c	/^   unsigned type;$/;"	m	struct:item_file	file:	access:public
items	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final List<ModuleWrapper> items;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
iterate	frontend/menu/menu_context.h	/^   void  (*iterate)(void*, unsigned);$/;"	m	struct:menu_ctx_driver	access:public
ja_buffer_size	audio/jack.c	/^static size_t ja_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
ja_free	audio/jack.c	/^static void ja_free(void *data)$/;"	f	file:	signature:(void *data)
ja_init	audio/jack.c	/^static void *ja_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
ja_set_nonblock_state	audio/jack.c	/^static void ja_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
ja_start	audio/jack.c	/^static bool ja_start(void *data)$/;"	f	file:	signature:(void *data)
ja_stop	audio/jack.c	/^static bool ja_stop(void *data)$/;"	f	file:	signature:(void *data)
ja_use_float	audio/jack.c	/^static bool ja_use_float(void *data)$/;"	f	file:	signature:(void *data)
ja_write	audio/jack.c	/^static ssize_t ja_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
ja_write_avail	audio/jack.c	/^static size_t ja_write_avail(void *data)$/;"	f	file:	signature:(void *data)
jack	audio/jack.c	/^typedef struct jack$/;"	s	file:
jack::buffer	audio/jack.c	/^   jack_ringbuffer_t *buffer[2];$/;"	m	struct:jack	file:	access:public
jack::buffer_size	audio/jack.c	/^   size_t buffer_size;$/;"	m	struct:jack	file:	access:public
jack::client	audio/jack.c	/^   jack_client_t *client;$/;"	m	struct:jack	file:	access:public
jack::cond	audio/jack.c	/^   pthread_cond_t cond;$/;"	m	struct:jack	file:	access:public
jack::cond_lock	audio/jack.c	/^   pthread_mutex_t cond_lock;$/;"	m	struct:jack	file:	access:public
jack::nonblock	audio/jack.c	/^   bool nonblock;$/;"	m	struct:jack	file:	access:public
jack::ports	audio/jack.c	/^   jack_port_t *ports[2];$/;"	m	struct:jack	file:	access:public
jack::shutdown	audio/jack.c	/^   volatile bool shutdown;$/;"	m	struct:jack	file:	access:public
jack_t	audio/jack.c	/^} jack_t;$/;"	t	typeref:struct:jack	file:
jni_thread_destruct	frontend/platform/platform_android.c	/^static void jni_thread_destruct(void *value)$/;"	f	file:	signature:(void *value)
jni_thread_getenv	frontend/platform/platform_android.c	/^JNIEnv *jni_thread_getenv(void)$/;"	f	signature:(void)
jni_thread_getenv	frontend/platform/platform_android.h	/^extern JNIEnv *jni_thread_getenv(void);$/;"	p	signature:(void)
joy_name	input/dinput.c	/^   char* joy_name;$/;"	m	struct:dinput_joypad	file:	access:public
joy_state	input/dinput.c	/^   DIJOYSTATE2 joy_state;$/;"	m	struct:dinput_joypad	file:	access:public
joyaxis	driver.h	/^   uint32_t joyaxis;$/;"	m	struct:retro_keybind	access:public
joykey	driver.h	/^   uint64_t joykey;$/;"	m	struct:platform_bind	access:public
joykey	driver.h	/^   uint64_t joykey;$/;"	m	struct:retro_keybind	access:public
joypad	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 joypad;$/;"	m	struct:dinput_joypad	file:	access:public
joypad	input/dinput.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:dinput_input	file:	access:public
joypad	input/linuxraw_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:linuxraw_input	file:	access:public
joypad	input/sdl_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:sdl_input	file:	access:public
joypad	input/sdl_joypad.c	/^   SDL_Joystick *joypad;$/;"	m	struct:sdl_joypad	file:	access:public
joypad	input/udev_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:udev_input	file:	access:public
joypad	input/x11_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:x11_input	file:	access:public
joypad_driver	general.h	/^      char joypad_driver[32];$/;"	m	struct:settings::__anon232	access:public
joypad_drivers	input/input_common.c	/^static const rarch_joypad_driver_t *joypad_drivers[] = {$/;"	v	file:
joypad_map	general.h	/^      int joypad_map[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
joypad_slot_t	apple/common/apple_joypad.c	/^} joypad_slot_t;$/;"	t	typeref:struct:__anon156	file:
joystick_t	apple/common/hidpad/wiimote.h	/^	typedef struct joystick_t {$/;"	s
joystick_t	apple/common/hidpad/wiimote.h	/^	} joystick_t;$/;"	t	typeref:struct:joystick_t
joystick_t::center	apple/common/hidpad/wiimote.h	/^		struct vec2b_t center;		    \/**< center joystick values		*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
joystick_t::max	apple/common/hidpad/wiimote.h	/^		struct vec2b_t max;				\/**< maximum joystick values	*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
joystick_t::min	apple/common/hidpad/wiimote.h	/^		struct vec2b_t min;				\/**< minimum joystick values	*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
joystick_t::rx	apple/common/hidpad/wiimote.h	/^		float rx, ry;$/;"	m	struct:joystick_t	access:public
joystick_t::ry	apple/common/hidpad/wiimote.h	/^		float rx, ry;$/;"	m	struct:joystick_t	access:public
kaiser_window	audio/test/kaiser_window.m	/^function win = kaiser_window(N, beta)$/;"	f
keep_aspect	gfx/gl_common.h	/^   bool keep_aspect;$/;"	m	struct:gl	access:public
keep_aspect	gfx/xvideo.c	/^   bool keep_aspect;$/;"	m	struct:xv	file:	access:public
keep_aspect	gx/gx_video.h	/^   bool keep_aspect;$/;"	m	struct:gx_video	access:public
keep_line_if	tools/cg2glsl.py	/^def keep_line_if(func, lines):$/;"	f	access:public
key	conf/config_file.c	/^   char *key;$/;"	m	struct:config_entry_list	file:	access:public
key	conf/config_file.h	/^   const char *key;$/;"	m	struct:config_file_entry	access:public
key	core_options.c	/^   char *key;$/;"	m	struct:core_option	file:	access:public
key	driver.h	/^   enum retro_key key;$/;"	m	struct:retro_keybind	typeref:enum:retro_keybind::retro_key	access:public
key	input/input_common.h	/^   enum retro_key key;$/;"	m	struct:input_key_map	typeref:enum:input_key_map::retro_key	access:public
key	libretro.h	/^   const char *key;        \/\/ Variable to query in RETRO_ENVIRONMENT_GET_VARIABLE.$/;"	m	struct:retro_variable	access:public
keyExists	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public boolean keyExists(String key)$/;"	m	class:ConfigFile	access:public	signature:(String key)
keyText	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private KeyBindEditText keyText;$/;"	f	class:KeyBindPreference	file:	access:private
keyToContext	ps3/ps3py/pkg.py	/^def keyToContext(key):$/;"	f	access:public
key_bind_code	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private int key_bind_code;$/;"	f	class:KeyBindPreference	file:	access:private
key_event	general.h	/^      retro_keyboard_event_t key_event;$/;"	m	struct:global::__anon234	access:public
key_labels	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private String[] key_labels;$/;"	f	class:KeyBindPreference	file:	access:private
key_mask	input/overlay.c	/^   uint64_t key_mask;$/;"	m	struct:overlay_desc	file:	access:public
key_pressed	driver.h	/^   bool (*key_pressed)(void *data, int key);$/;"	m	struct:input_driver	access:public
key_state	input/udev_input.c	/^   uint8_t key_state[(KEY_MAX + 7) \/ 8];$/;"	m	struct:udev_input	file:	access:public
keybind	apple/common/setting_data.h	/^      const struct retro_keybind* keybind;$/;"	m	union:__anon161::__anon162	typeref:struct:__anon161::__anon162::retro_keybind	access:public
keybind	apple/common/setting_data.h	/^      struct retro_keybind* keybind;$/;"	m	union:__anon161::__anon163	typeref:struct:__anon161::__anon163::retro_keybind	access:public
keybind_set_id	driver.h	/^enum keybind_set_id$/;"	g
keyboard	frontend/menu/menu_common.h	/^   } keyboard;$/;"	m	struct:__anon25	typeref:struct:__anon25::__anon26	access:public
keyboard	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 keyboard;$/;"	m	struct:dinput_input	file:	access:public
keyboard_cb	libretro-test/libretro-test.c	/^static void keyboard_cb(bool down, unsigned keycode,$/;"	f	file:	signature:(bool down, unsigned keycode, uint32_t character, uint16_t mod)
keyboard_layout	general.h	/^      char keyboard_layout[64];$/;"	m	struct:settings::__anon232	access:public
keycode_lut	android/native/jni/input_android.c	/^   uint64_t keycode_lut[LAST_KEYCODE];$/;"	m	struct:android_input	file:	access:public
keyname	apple/common/keycode.h	/^   const char* const keyname;$/;"	m	struct:apple_key_name_map_entry	access:public
keys	apple/common/apple_input.h	/^   uint32_t keys[MAX_KEYS];$/;"	m	struct:__anon160	access:public
keys	emscripten/RWebInput.h	/^   char keys[32];$/;"	m	struct:rwebinput_state	access:public
l2cap_accept_connection_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* l2cap_accept_connection_ptr;$/;"	v
l2cap_create_channel_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* l2cap_create_channel_ptr;$/;"	v
l2cap_decline_connection_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* l2cap_decline_connection_ptr;$/;"	v
l2cap_register_service_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT const hci_cmd_t* l2cap_register_service_ptr;$/;"	v
l_shoulder	apple/common/hidpad/wiimote.h	/^		float l_shoulder;				\/**< left shoulder button (range 0-1)		*\/$/;"	m	struct:classic_ctrl_t	access:public
label	frontend/menu/menu_common.h	/^      const char *label;$/;"	m	struct:__anon25::__anon26	access:public
labelAddress	ps3/rgl/src/rgl_ps3.cpp	/^static volatile uint32_t *labelAddress = NULL;$/;"	v	file:
labelValue	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint			labelValue; $/;"	m	struct:rglGcmState	access:public
lap	apple/iOS/bluetooth/btpad_queue.c	/^         uint32_t lap;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
last	frontend/menu/menu_common.h	/^   unsigned last;$/;"	m	struct:rgui_bind_state	access:public
lastConstantUpdate	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         lastConstantUpdate;$/;"	m	struct:_CGprogram	access:public
lastGetRead	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *lastGetRead;$/;"	m	struct:rglGcmFifo	access:public
lastHWReferenceRead	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastHWReferenceRead;$/;"	m	struct:rglGcmFifo	access:public
lastPutWritten	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *lastPutWritten;$/;"	m	struct:rglGcmFifo	access:public
lastSWReferenceFlushed	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastSWReferenceFlushed;$/;"	m	struct:rglGcmFifo	access:public
lastSWReferenceWritten	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastSWReferenceWritten;$/;"	m	struct:rglGcmFifo	access:public
lastTimestamp	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private long lastTimestamp = 0;$/;"	f	class:RetroActivityCamera	file:	access:private
last_egl_image	gfx/vg.c	/^   EGLImageKHR last_egl_image;$/;"	m	struct:__anon225	file:	access:public
last_frame_time	general.h	/^      retro_time_t last_frame_time;$/;"	m	struct:global::__anon233	access:public
last_height	gfx/d3d9/render_chain.hpp	/^         unsigned last_height[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
last_height	gfx/d3d9/render_chain.hpp	/^         unsigned last_width, last_height;$/;"	m	struct:RenderChain::Pass	access:public
last_height	gfx/gl_common.h	/^   unsigned last_height[MAX_TEXTURES];$/;"	m	struct:gl	access:public
last_height	gfx/lima_gfx.c	/^   unsigned last_height;$/;"	m	struct:lima_video	file:	access:public
last_height	gfx/sdl_gfx.c	/^   unsigned last_height;$/;"	m	struct:sdl_video	file:	access:public
last_height	xdk/xdk_d3d.h	/^   unsigned last_height;$/;"	m	struct:xdk_d3d_video	access:public
last_hm	gfx/d3d9/d3d9.cpp	/^   static HMONITOR last_hm;$/;"	m	namespace:Monitor	file:
last_page_flip	gfx/context/drm_egl_ctx.c	/^static unsigned last_page_flip;$/;"	v	file:
last_rom	general.h	/^   char last_rom[PATH_MAX];$/;"	m	struct:global	access:public
last_time	frontend/menu/menu_common.h	/^   retro_time_t last_time; \/\/ Used to throttle RGUI in case VSync is broken.$/;"	m	struct:__anon25	access:public
last_time	gfx/thread_wrapper.c	/^   retro_time_t last_time;$/;"	m	struct:thread_video	file:	access:public
last_width	gfx/d3d9/render_chain.hpp	/^         unsigned last_width, last_height;$/;"	m	struct:RenderChain::Pass	access:public
last_width	gfx/d3d9/render_chain.hpp	/^         unsigned last_width[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
last_width	gfx/gl_common.h	/^   unsigned last_width[MAX_TEXTURES];$/;"	m	struct:gl	access:public
last_width	gfx/lima_gfx.c	/^   unsigned last_width;$/;"	m	struct:lima_video	file:	access:public
last_width	gfx/sdl_gfx.c	/^   unsigned last_width;$/;"	m	struct:sdl_video	file:	access:public
last_width	xdk/xdk_d3d.h	/^   unsigned last_width;$/;"	m	struct:xdk_d3d_video	access:public
latency	audio/rsound.h	/^         uint32_t latency;$/;"	m	struct:rsound::__anon105	access:public
latency	general.h	/^      unsigned latency;$/;"	m	struct:settings::__anon231	access:public
launchCore	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private void launchCore(String contentPath, String corePath)$/;"	m	class:DetectCoreDirectoryFragment	file:	access:private	signature:(String contentPath, String corePath)
lcd_cpu_da	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_cpu_da;$/;"	m	struct:__anon196	access:public
lcd_cpu_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_cpu_if;$/;"	m	struct:__anon196	access:public
lcd_dclk_freq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_dclk_freq;$/;"	m	struct:__anon196	access:public
lcd_flow	gfx/context/sunxi_disp_ioctl.h	/^typedef struct lcd_flow {$/;"	s
lcd_flow::func	gfx/context/sunxi_disp_ioctl.h	/^	__lcd_function_t func[5];$/;"	m	struct:lcd_flow	access:public
lcd_flow::func_num	gfx/context/sunxi_disp_ioctl.h	/^	__u32 func_num;$/;"	m	struct:lcd_flow	access:public
lcd_frm	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_frm;$/;"	m	struct:__anon196	access:public
lcd_function	gfx/context/sunxi_disp_ioctl.h	/^typedef struct lcd_function {$/;"	s
lcd_function::delay	gfx/context/sunxi_disp_ioctl.h	/^	__u32 delay; \/* ms *\/$/;"	m	struct:lcd_function	access:public
lcd_function::func	gfx/context/sunxi_disp_ioctl.h	/^	LCD_FUNC func;$/;"	m	struct:lcd_function	access:public
lcd_gamma_correction_en	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_gamma_correction_en;$/;"	m	struct:__anon196	access:public
lcd_gamma_tbl	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_gamma_tbl[256];$/;"	m	struct:__anon196	access:public
lcd_hbp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hbp;$/;"	m	struct:__anon196	access:public
lcd_ht	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ht;$/;"	m	struct:__anon196	access:public
lcd_hv_hspw	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_hspw;$/;"	m	struct:__anon196	access:public
lcd_hv_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_if;$/;"	m	struct:__anon196	access:public
lcd_hv_lde_iovalue	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_lde_iovalue;$/;"	m	struct:__anon196	access:public
lcd_hv_lde_used	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_lde_used;$/;"	m	struct:__anon196	access:public
lcd_hv_s888_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_s888_if;$/;"	m	struct:__anon196	access:public
lcd_hv_smode	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_smode;$/;"	m	struct:__anon196	access:public
lcd_hv_srgb_seq0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_srgb_seq0;$/;"	m	struct:__anon196	access:public
lcd_hv_srgb_seq1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_srgb_seq1;$/;"	m	struct:__anon196	access:public
lcd_hv_syuv_fdly	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_fdly;$/;"	m	struct:__anon196	access:public
lcd_hv_syuv_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_if;$/;"	m	struct:__anon196	access:public
lcd_hv_syuv_seq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_syuv_seq;$/;"	m	struct:__anon196	access:public
lcd_hv_vspw	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_hv_vspw;$/;"	m	struct:__anon196	access:public
lcd_if	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_if; \/* 0:hv(sync+de); 1:8080; 2:ttl; 3:lvds *\/$/;"	m	struct:__anon196	access:public
lcd_io_cfg0	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_cfg0;$/;"	m	struct:__anon196	access:public
lcd_io_cfg1	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_cfg1;$/;"	m	struct:__anon196	access:public
lcd_io_strength	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_io_strength;$/;"	m	struct:__anon196	access:public
lcd_lvds_bitwidth	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_bitwidth; \/*  0:24bit; 1:18bit *\/$/;"	m	struct:__anon196	access:public
lcd_lvds_ch	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_ch; \/*  0: single channel; 1:dual channel *\/$/;"	m	struct:__anon196	access:public
lcd_lvds_io_cross	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_io_cross; \/*  0:normal; 1:pn cross *\/$/;"	m	struct:__anon196	access:public
lcd_lvds_mode	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_lvds_mode; \/*  0:NS mode; 1:JEIDA mode *\/$/;"	m	struct:__anon196	access:public
lcd_pwm_ch	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_ch;$/;"	m	struct:__anon196	access:public
lcd_pwm_freq	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_freq;$/;"	m	struct:__anon196	access:public
lcd_pwm_not_used	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_not_used;$/;"	m	struct:__anon196	access:public
lcd_pwm_pol	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_pwm_pol;$/;"	m	struct:__anon196	access:public
lcd_srgb	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_srgb;$/;"	m	struct:__anon196	access:public
lcd_swap	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_swap;$/;"	m	struct:__anon196	access:public
lcd_ttl_ckvd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvd;$/;"	m	struct:__anon196	access:public
lcd_ttl_ckvh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvh;$/;"	m	struct:__anon196	access:public
lcd_ttl_ckvt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_ckvt;$/;"	m	struct:__anon196	access:public
lcd_ttl_datainv_en	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datainv_en;$/;"	m	struct:__anon196	access:public
lcd_ttl_datainv_sel	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datainv_sel;$/;"	m	struct:__anon196	access:public
lcd_ttl_datarate	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_datarate;$/;"	m	struct:__anon196	access:public
lcd_ttl_oehd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oehd;$/;"	m	struct:__anon196	access:public
lcd_ttl_oehh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oehh;$/;"	m	struct:__anon196	access:public
lcd_ttl_oevd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevd;$/;"	m	struct:__anon196	access:public
lcd_ttl_oevh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevh;$/;"	m	struct:__anon196	access:public
lcd_ttl_oevt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_oevt;$/;"	m	struct:__anon196	access:public
lcd_ttl_revd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_revd;$/;"	m	struct:__anon196	access:public
lcd_ttl_revsel	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_revsel;$/;"	m	struct:__anon196	access:public
lcd_ttl_sthd	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_sthd;$/;"	m	struct:__anon196	access:public
lcd_ttl_sthh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_sthh;$/;"	m	struct:__anon196	access:public
lcd_ttl_stvdl	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvdl;$/;"	m	struct:__anon196	access:public
lcd_ttl_stvdp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvdp;$/;"	m	struct:__anon196	access:public
lcd_ttl_stvh	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_ttl_stvh;$/;"	m	struct:__anon196	access:public
lcd_uf	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_uf;$/;"	m	struct:__anon196	access:public
lcd_user_defined_func	gfx/context/sunxi_disp_ioctl.h	/^	 __s32(*lcd_user_defined_func) (__u32 sel, __u32 para1, __u32 para2,$/;"	m	struct:__anon198	access:public
lcd_vbp	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_vbp;$/;"	m	struct:__anon196	access:public
lcd_vt	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_vt;$/;"	m	struct:__anon196	access:public
lcd_x	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_x;$/;"	m	struct:__anon196	access:public
lcd_y	gfx/context/sunxi_disp_ioctl.h	/^	__u32 lcd_y;$/;"	m	struct:__anon196	access:public
leading_ones	gfx/context/x11_common.c	/^static inline unsigned leading_ones(uint8_t c)$/;"	f	file:	signature:(uint8_t c)
leds	apple/common/hidpad/wiimote.h	/^		byte leds;						\/**< currently lit leds						*\/$/;"	m	struct:wiimote_t	access:public
left	gfx/gl_common.h	/^   GLfloat left;$/;"	m	struct:gl_ortho	access:public
leftBuffer	emscripten/library_rwebaudio.js	/^         var leftBuffer = RA.buffers[RA.bufIndex].getChannelData(0);$/;"	v
len	hash.c	/^   uint64_t len;$/;"	m	struct:sha256_ctx	file:	access:public
length	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t length;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
length	camera/video4linux2.c	/^   size_t length;$/;"	m	struct:buffer	file:	access:public
levels	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		levels;$/;"	m	struct:__anon52	access:public
lib	general.h	/^      dylib_t lib;$/;"	m	struct:global::__anon237	access:public
lib	gfx/fonts/freetype.c	/^   FT_Library lib;$/;"	m	struct:font_renderer	file:	access:public
lib_handle	dynamic.c	/^static dylib_t lib_handle;$/;"	v	file:
libdbg_font	gfx/fonts/ps_libdbgfont.c	/^const gl_font_renderer_t libdbg_font = {$/;"	v
library_name	libretro.h	/^   const char *library_name;      \/\/ Descriptive name of library. Should not contain any version numbers, etc.$/;"	m	struct:retro_system_info	access:public
library_version	libretro.h	/^   const char *library_version;   \/\/ Descriptive version of core.$/;"	m	struct:retro_system_info	access:public
libretro	general.h	/^   char libretro[PATH_MAX];$/;"	m	struct:settings	access:public
libretro_device	general.h	/^      unsigned libretro_device[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
libretro_dir	frontend/menu/menu_common.h	/^   char libretro_dir[PATH_MAX];$/;"	m	struct:__anon25	access:public
libretro_dummy	general.h	/^   bool libretro_dummy;$/;"	m	struct:global	access:public
libretro_dummy_retro_api_version	dynamic_dummy.c	/^unsigned libretro_dummy_retro_api_version(void)$/;"	f	signature:(void)
libretro_dummy_retro_api_version	dynamic_dummy.h	/^unsigned libretro_dummy_retro_api_version(void);$/;"	p	signature:(void)
libretro_dummy_retro_cheat_reset	dynamic_dummy.c	/^void libretro_dummy_retro_cheat_reset(void)$/;"	f	signature:(void)
libretro_dummy_retro_cheat_reset	dynamic_dummy.h	/^void libretro_dummy_retro_cheat_reset(void);$/;"	p	signature:(void)
libretro_dummy_retro_cheat_set	dynamic_dummy.c	/^void libretro_dummy_retro_cheat_set(unsigned index, bool enabled, const char *code)$/;"	f	signature:(unsigned index, bool enabled, const char *code)
libretro_dummy_retro_cheat_set	dynamic_dummy.h	/^void libretro_dummy_retro_cheat_set(unsigned index, bool enabled, const char *code);$/;"	p	signature:(unsigned index, bool enabled, const char *code)
libretro_dummy_retro_deinit	dynamic_dummy.c	/^void libretro_dummy_retro_deinit(void)$/;"	f	signature:(void)
libretro_dummy_retro_deinit	dynamic_dummy.h	/^void libretro_dummy_retro_deinit(void);$/;"	p	signature:(void)
libretro_dummy_retro_get_memory_data	dynamic_dummy.c	/^void *libretro_dummy_retro_get_memory_data(unsigned id)$/;"	f	signature:(unsigned id)
libretro_dummy_retro_get_memory_data	dynamic_dummy.h	/^void *libretro_dummy_retro_get_memory_data(unsigned id);$/;"	p	signature:(unsigned id)
libretro_dummy_retro_get_memory_size	dynamic_dummy.c	/^size_t libretro_dummy_retro_get_memory_size(unsigned id)$/;"	f	signature:(unsigned id)
libretro_dummy_retro_get_memory_size	dynamic_dummy.h	/^size_t libretro_dummy_retro_get_memory_size(unsigned id);$/;"	p	signature:(unsigned id)
libretro_dummy_retro_get_region	dynamic_dummy.c	/^unsigned libretro_dummy_retro_get_region(void)$/;"	f	signature:(void)
libretro_dummy_retro_get_region	dynamic_dummy.h	/^unsigned libretro_dummy_retro_get_region(void);$/;"	p	signature:(void)
libretro_dummy_retro_get_system_av_info	dynamic_dummy.c	/^void libretro_dummy_retro_get_system_av_info(struct retro_system_av_info *info)$/;"	f	signature:(struct retro_system_av_info *info)
libretro_dummy_retro_get_system_av_info	dynamic_dummy.h	/^void libretro_dummy_retro_get_system_av_info(struct retro_system_av_info *info);$/;"	p	signature:(struct retro_system_av_info *info)
libretro_dummy_retro_get_system_info	dynamic_dummy.c	/^void libretro_dummy_retro_get_system_info(struct retro_system_info *info)$/;"	f	signature:(struct retro_system_info *info)
libretro_dummy_retro_get_system_info	dynamic_dummy.h	/^void libretro_dummy_retro_get_system_info(struct retro_system_info *info);$/;"	p	signature:(struct retro_system_info *info)
libretro_dummy_retro_init	dynamic_dummy.c	/^void libretro_dummy_retro_init(void)$/;"	f	signature:(void)
libretro_dummy_retro_init	dynamic_dummy.h	/^void libretro_dummy_retro_init(void);$/;"	p	signature:(void)
libretro_dummy_retro_load_game	dynamic_dummy.c	/^bool libretro_dummy_retro_load_game(const struct retro_game_info *info)$/;"	f	signature:(const struct retro_game_info *info)
libretro_dummy_retro_load_game	dynamic_dummy.h	/^bool libretro_dummy_retro_load_game(const struct retro_game_info *game);$/;"	p	signature:(const struct retro_game_info *game)
libretro_dummy_retro_load_game_special	dynamic_dummy.c	/^bool libretro_dummy_retro_load_game_special(unsigned type, const struct retro_game_info *info, size_t num)$/;"	f	signature:(unsigned type, const struct retro_game_info *info, size_t num)
libretro_dummy_retro_load_game_special	dynamic_dummy.h	/^bool libretro_dummy_retro_load_game_special(unsigned game_type,$/;"	p	signature:(unsigned game_type, const struct retro_game_info *info, size_t num_info)
libretro_dummy_retro_reset	dynamic_dummy.c	/^void libretro_dummy_retro_reset(void)$/;"	f	signature:(void)
libretro_dummy_retro_reset	dynamic_dummy.h	/^void libretro_dummy_retro_reset(void);$/;"	p	signature:(void)
libretro_dummy_retro_run	dynamic_dummy.c	/^void libretro_dummy_retro_run(void)$/;"	f	signature:(void)
libretro_dummy_retro_run	dynamic_dummy.h	/^void libretro_dummy_retro_run(void);$/;"	p	signature:(void)
libretro_dummy_retro_serialize	dynamic_dummy.c	/^bool libretro_dummy_retro_serialize(void *data, size_t size)$/;"	f	signature:(void *data, size_t size)
libretro_dummy_retro_serialize	dynamic_dummy.h	/^bool libretro_dummy_retro_serialize(void *data, size_t size);$/;"	p	signature:(void *data, size_t size)
libretro_dummy_retro_serialize_size	dynamic_dummy.c	/^size_t libretro_dummy_retro_serialize_size(void)$/;"	f	signature:(void)
libretro_dummy_retro_serialize_size	dynamic_dummy.h	/^size_t libretro_dummy_retro_serialize_size(void);$/;"	p	signature:(void)
libretro_dummy_retro_set_audio_sample	dynamic_dummy.c	/^void libretro_dummy_retro_set_audio_sample(retro_audio_sample_t cb)$/;"	f	signature:(retro_audio_sample_t cb)
libretro_dummy_retro_set_audio_sample	dynamic_dummy.h	/^void libretro_dummy_retro_set_audio_sample(retro_audio_sample_t cb);$/;"	p	signature:(retro_audio_sample_t cb)
libretro_dummy_retro_set_audio_sample_batch	dynamic_dummy.c	/^void libretro_dummy_retro_set_audio_sample_batch(retro_audio_sample_batch_t cb)$/;"	f	signature:(retro_audio_sample_batch_t cb)
libretro_dummy_retro_set_audio_sample_batch	dynamic_dummy.h	/^void libretro_dummy_retro_set_audio_sample_batch(retro_audio_sample_batch_t cb);$/;"	p	signature:(retro_audio_sample_batch_t cb)
libretro_dummy_retro_set_controller_port_device	dynamic_dummy.c	/^void libretro_dummy_retro_set_controller_port_device(unsigned port, unsigned device)$/;"	f	signature:(unsigned port, unsigned device)
libretro_dummy_retro_set_controller_port_device	dynamic_dummy.h	/^void libretro_dummy_retro_set_controller_port_device(unsigned port, unsigned device);$/;"	p	signature:(unsigned port, unsigned device)
libretro_dummy_retro_set_environment	dynamic_dummy.c	/^void libretro_dummy_retro_set_environment(retro_environment_t cb)$/;"	f	signature:(retro_environment_t cb)
libretro_dummy_retro_set_environment	dynamic_dummy.h	/^void libretro_dummy_retro_set_environment(retro_environment_t cb);$/;"	p	signature:(retro_environment_t cb)
libretro_dummy_retro_set_input_poll	dynamic_dummy.c	/^void libretro_dummy_retro_set_input_poll(retro_input_poll_t cb)$/;"	f	signature:(retro_input_poll_t cb)
libretro_dummy_retro_set_input_poll	dynamic_dummy.h	/^void libretro_dummy_retro_set_input_poll(retro_input_poll_t cb);$/;"	p	signature:(retro_input_poll_t cb)
libretro_dummy_retro_set_input_state	dynamic_dummy.c	/^void libretro_dummy_retro_set_input_state(retro_input_state_t cb)$/;"	f	signature:(retro_input_state_t cb)
libretro_dummy_retro_set_input_state	dynamic_dummy.h	/^void libretro_dummy_retro_set_input_state(retro_input_state_t cb);$/;"	p	signature:(retro_input_state_t cb)
libretro_dummy_retro_set_video_refresh	dynamic_dummy.c	/^void libretro_dummy_retro_set_video_refresh(retro_video_refresh_t cb)$/;"	f	signature:(retro_video_refresh_t cb)
libretro_dummy_retro_set_video_refresh	dynamic_dummy.h	/^void libretro_dummy_retro_set_video_refresh(retro_video_refresh_t cb);$/;"	p	signature:(retro_video_refresh_t cb)
libretro_dummy_retro_unload_game	dynamic_dummy.c	/^void libretro_dummy_retro_unload_game(void)$/;"	f	signature:(void)
libretro_dummy_retro_unload_game	dynamic_dummy.h	/^void libretro_dummy_retro_unload_game(void);$/;"	p	signature:(void)
libretro_dummy_retro_unserialize	dynamic_dummy.c	/^bool libretro_dummy_retro_unserialize(const void *data, size_t size)$/;"	f	signature:(const void *data, size_t size)
libretro_dummy_retro_unserialize	dynamic_dummy.h	/^bool libretro_dummy_retro_unserialize(const void *data, size_t size);$/;"	p	signature:(const void *data, size_t size)
libretro_free_system_info	dynamic.c	/^void libretro_free_system_info(struct retro_system_info *info)$/;"	f	signature:(struct retro_system_info *info)
libretro_free_system_info	dynamic.h	/^void libretro_free_system_info(struct retro_system_info *info);$/;"	p	signature:(struct retro_system_info *info)
libretro_get_current_core_pathname	dynamic.c	/^void libretro_get_current_core_pathname(char *name, size_t size)$/;"	f	signature:(char *name, size_t size)
libretro_get_current_core_pathname	dynamic.h	/^void libretro_get_current_core_pathname(char *name, size_t size);$/;"	p	signature:(char *name, size_t size)
libretro_get_environment_info	dynamic.c	/^void libretro_get_environment_info(void (*func)(retro_environment_t), bool *load_no_rom)$/;"	f	signature:(void (*func)(retro_environment_t), bool *load_no_rom)
libretro_get_environment_info	dynamic.h	/^void libretro_get_environment_info(void (*)(retro_environment_t), bool *load_no_rom);$/;"	p	signature:(void (*)(retro_environment_t), bool *load_no_rom)
libretro_get_system_info	dynamic.c	/^bool libretro_get_system_info(const char *path, struct retro_system_info *info,$/;"	f	signature:(const char *path, struct retro_system_info *info, bool *load_no_rom)
libretro_get_system_info	dynamic.h	/^bool libretro_get_system_info(const char *path, struct retro_system_info *info, bool *load_no_rom);$/;"	p	signature:(const char *path, struct retro_system_info *info, bool *load_no_rom)
libretro_get_system_info_lib	dynamic.c	/^static dylib_t libretro_get_system_info_lib(const char *path, struct retro_system_info *info, bool *load_no_rom)$/;"	f	file:	signature:(const char *path, struct retro_system_info *info, bool *load_no_rom)
libretro_info_path	general.h	/^   char libretro_info_path[PATH_MAX];$/;"	m	struct:settings	access:public
libretro_no_rom	general.h	/^   bool libretro_no_rom;$/;"	m	struct:global	access:public
libretro_path	frontend/platform/platform_gx.c	/^char libretro_path[512];$/;"	v
libretro_path	frontend/platform/platform_ps3.c	/^char libretro_path[512];$/;"	v
libretro_path	frontend/platform/platform_xdk.c	/^char libretro_path[512];$/;"	v
libretro_path	general.h	/^   const char *libretro_path;$/;"	m	struct:rarch_main_wrap	access:public
license	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String license;$/;"	f	class:ModuleWrapper	file:	access:private
lifecycle	driver.h	/^   void (*lifecycle)(void *data, uint64_t status);$/;"	m	struct:input_osk_driver	access:public
lifecycle_state	general.h	/^   uint64_t lifecycle_state;$/;"	m	struct:global	access:public
lima_apply_state_changes	gfx/lima_gfx.c	/^static void lima_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
lima_gfx_alive	gfx/lima_gfx.c	/^static bool lima_gfx_alive(void *data)$/;"	f	file:	signature:(void *data)
lima_gfx_focus	gfx/lima_gfx.c	/^static bool lima_gfx_focus(void *data)$/;"	f	file:	signature:(void *data)
lima_gfx_frame	gfx/lima_gfx.c	/^static bool lima_gfx_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
lima_gfx_free	gfx/lima_gfx.c	/^static void lima_gfx_free(void *data)$/;"	f	file:	signature:(void *data)
lima_gfx_get_poke_interface	gfx/lima_gfx.c	/^static void lima_gfx_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
lima_gfx_get_poke_interface	gfx/lima_gfx.c	/^static void lima_gfx_get_poke_interface(void *data, const video_poke_interface_t **iface);$/;"	p	file:	signature:(void *data, const video_poke_interface_t **iface)
lima_gfx_init	gfx/lima_gfx.c	/^static void *lima_gfx_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
lima_gfx_set_nonblock_state	gfx/lima_gfx.c	/^static void lima_gfx_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
lima_gfx_set_rotation	gfx/lima_gfx.c	/^static void lima_gfx_set_rotation(void *data, unsigned rotation)$/;"	f	file:	signature:(void *data, unsigned rotation)
lima_gfx_set_rotation	gfx/lima_gfx.c	/^static void lima_gfx_set_rotation(void *data, unsigned rotation);$/;"	p	file:	signature:(void *data, unsigned rotation)
lima_gfx_viewport_info	gfx/lima_gfx.c	/^static void lima_gfx_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
lima_init_font	gfx/lima_gfx.c	/^static void lima_init_font(lima_video_t *vid, const char *font_path, unsigned font_size)$/;"	f	file:	signature:(lima_video_t *vid, const char *font_path, unsigned font_size)
lima_poke_interface	gfx/lima_gfx.c	/^static const video_poke_interface_t lima_poke_interface = {$/;"	v	file:
lima_render_msg	gfx/lima_gfx.c	/^static void lima_render_msg(lima_video_t *vid, SDL_Surface *buffer,$/;"	f	file:	signature:(lima_video_t *vid, SDL_Surface *buffer, const char *msg, unsigned width, unsigned height, const SDL_PixelFormat *fmt)
lima_set_aspect_ratio	gfx/lima_gfx.c	/^static void lima_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
lima_set_osd_msg	gfx/lima_gfx.c	/^static void lima_set_osd_msg(void *data, const char *msg, void *userdata)$/;"	f	file:	signature:(void *data, const char *msg, void *userdata)
lima_set_texture_enable	gfx/lima_gfx.c	/^static void lima_set_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
lima_set_texture_frame	gfx/lima_gfx.c	/^static void lima_set_texture_frame(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
lima_set_texture_frame	gfx/lima_gfx.c	/^static void lima_set_texture_frame(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha);$/;"	p	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
lima_show_mouse	gfx/lima_gfx.c	/^static void lima_show_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
lima_video	gfx/lima_gfx.c	/^typedef struct lima_video$/;"	s	file:
lima_video::font	gfx/lima_gfx.c	/^   void *font;$/;"	m	struct:lima_video	file:	access:public
lima_video::font_b	gfx/lima_gfx.c	/^   uint8_t font_b;$/;"	m	struct:lima_video	file:	access:public
lima_video::font_driver	gfx/lima_gfx.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:lima_video	file:	access:public
lima_video::font_g	gfx/lima_gfx.c	/^   uint8_t font_g;$/;"	m	struct:lima_video	file:	access:public
lima_video::font_r	gfx/lima_gfx.c	/^   uint8_t font_r;$/;"	m	struct:lima_video	file:	access:public
lima_video::last_height	gfx/lima_gfx.c	/^   unsigned last_height;$/;"	m	struct:lima_video	file:	access:public
lima_video::last_width	gfx/lima_gfx.c	/^   unsigned last_width;$/;"	m	struct:lima_video	file:	access:public
lima_video::quitting	gfx/lima_gfx.c	/^   bool quitting;$/;"	m	struct:lima_video	file:	access:public
lima_video::scaler	gfx/lima_gfx.c	/^   struct scaler_ctx scaler;$/;"	m	struct:lima_video	typeref:struct:lima_video::scaler_ctx	file:	access:public
lima_video::screen	gfx/lima_gfx.c	/^   SDL_Surface *screen;$/;"	m	struct:lima_video	file:	access:public
lima_video_t	gfx/lima_gfx.c	/^} lima_video_t;$/;"	t	typeref:struct:lima_video	file:
limit_frame_time	retroarch.c	/^static inline void limit_frame_time(void)$/;"	f	file:	signature:(void)
line_length	gfx/context/sunxi_disp_ioctl.h	/^	__u32 line_length; \/* in byte unit *\/$/;"	m	struct:__anon201	access:public
linearMemory	ps3/rgl/src/include/rgl-typedefs.h	/^   char  * linearMemory;$/;"	m	struct:rglGcmResource	access:public
link_key_t	apple/iOS/bluetooth/btstack/utils.h	/^typedef uint8_t link_key_t[LINK_KEY_LEN]; $/;"	t
link_program	gfx/shader_glsl.c	/^static bool link_program(GLuint prog)$/;"	f	file:	signature:(GLuint prog)
linked_item	apple/iOS/bluetooth/btstack/linked_list.h	/^typedef struct linked_item {$/;"	s
linked_item::next	apple/iOS/bluetooth/btstack/linked_list.h	/^    struct linked_item *next; \/\/ <-- next element in list, or NULL$/;"	m	struct:linked_item	typeref:struct:linked_item::linked_item	access:public
linked_item::user_data	apple/iOS/bluetooth/btstack/linked_list.h	/^    void *user_data;          \/\/ <-- pointer to struct base$/;"	m	struct:linked_item	access:public
linked_item_get_user	apple/iOS/bluetooth/btstack/linked_list.h	/^void * linked_item_get_user(linked_item_t *item);                       \/\/ <-- get user data$/;"	p	signature:(linked_item_t *item)
linked_item_set_user	apple/iOS/bluetooth/btstack/linked_list.h	/^void linked_item_set_user(linked_item_t *item, void *user_data);        \/\/ <-- set user data$/;"	p	signature:(linked_item_t *item, void *user_data)
linked_item_t	apple/iOS/bluetooth/btstack/linked_list.h	/^} linked_item_t;$/;"	t	typeref:struct:linked_item
linked_list_add	apple/iOS/bluetooth/btstack/linked_list.h	/^void linked_list_add(linked_list_t * list, linked_item_t *item);        \/\/ <-- add item to list as first element$/;"	p	signature:(linked_list_t * list, linked_item_t *item)
linked_list_add_tail	apple/iOS/bluetooth/btstack/linked_list.h	/^void linked_list_add_tail(linked_list_t * list, linked_item_t *item);   \/\/ <-- add item to list as last element$/;"	p	signature:(linked_list_t * list, linked_item_t *item)
linked_list_empty	apple/iOS/bluetooth/btstack/linked_list.h	/^int  linked_list_empty(linked_list_t * list);$/;"	p	signature:(linked_list_t * list)
linked_list_get_last_item	apple/iOS/bluetooth/btstack/linked_list.h	/^linked_item_t * linked_list_get_last_item(linked_list_t * list);        \/\/ <-- find the last item in the list$/;"	p	signature:(linked_list_t * list)
linked_list_remove	apple/iOS/bluetooth/btstack/linked_list.h	/^int  linked_list_remove(linked_list_t * list, linked_item_t *item);     \/\/ <-- remove item from list$/;"	p	signature:(linked_list_t * list, linked_item_t *item)
linked_list_t	apple/iOS/bluetooth/btstack/linked_list.h	/^typedef linked_item_t * linked_list_t;$/;"	t
linuxraw_analog_pressed	input/linuxraw_input.c	/^static int16_t linuxraw_analog_pressed(linuxraw_input_t *linuxraw,$/;"	f	file:	signature:(linuxraw_input_t *linuxraw, const struct retro_keybind *binds, unsigned index, unsigned id)
linuxraw_bind_button_pressed	input/linuxraw_input.c	/^static bool linuxraw_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
linuxraw_exitGracefully	input/linuxraw_input.c	/^static void linuxraw_exitGracefully(int sig)$/;"	f	file:	signature:(int sig)
linuxraw_get_capabilities	input/linuxraw_input.c	/^static uint64_t linuxraw_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
linuxraw_get_joypad_driver	input/linuxraw_input.c	/^static const rarch_joypad_driver_t *linuxraw_get_joypad_driver(void *data)$/;"	f	file:	signature:(void *data)
linuxraw_input	input/linuxraw_input.c	/^typedef struct linuxraw_input$/;"	s	file:
linuxraw_input::joypad	input/linuxraw_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:linuxraw_input	file:	access:public
linuxraw_input::state	input/linuxraw_input.c	/^   bool state[0x80];$/;"	m	struct:linuxraw_input	file:	access:public
linuxraw_input_free	input/linuxraw_input.c	/^static void linuxraw_input_free(void *data)$/;"	f	file:	signature:(void *data)
linuxraw_input_init	input/linuxraw_input.c	/^static void *linuxraw_input_init(void)$/;"	f	file:	signature:(void)
linuxraw_input_poll	input/linuxraw_input.c	/^static void linuxraw_input_poll(void *data)$/;"	f	file:	signature:(void *data)
linuxraw_input_state	input/linuxraw_input.c	/^static int16_t linuxraw_input_state(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
linuxraw_input_t	input/linuxraw_input.c	/^} linuxraw_input_t;$/;"	t	typeref:struct:linuxraw_input	file:
linuxraw_is_pressed	input/linuxraw_input.c	/^static bool linuxraw_is_pressed(linuxraw_input_t *linuxraw, const struct retro_keybind *binds, unsigned id)$/;"	f	file:	signature:(linuxraw_input_t *linuxraw, const struct retro_keybind *binds, unsigned id)
linuxraw_joypad	input/linuxraw_joypad.c	/^const rarch_joypad_driver_t linuxraw_joypad = {$/;"	v
linuxraw_joypad	input/linuxraw_joypad.c	/^struct linuxraw_joypad$/;"	s	file:
linuxraw_joypad::axes	input/linuxraw_joypad.c	/^   int16_t axes[NUM_AXES];$/;"	m	struct:linuxraw_joypad	file:	access:public
linuxraw_joypad::buttons	input/linuxraw_joypad.c	/^   bool buttons[NUM_BUTTONS];$/;"	m	struct:linuxraw_joypad	file:	access:public
linuxraw_joypad::fd	input/linuxraw_joypad.c	/^   int fd;$/;"	m	struct:linuxraw_joypad	file:	access:public
linuxraw_joypad::ident	input/linuxraw_joypad.c	/^   char *ident;$/;"	m	struct:linuxraw_joypad	file:	access:public
linuxraw_joypad_axis	input/linuxraw_joypad.c	/^static int16_t linuxraw_joypad_axis(unsigned port, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port, uint32_t joyaxis)
linuxraw_joypad_button	input/linuxraw_joypad.c	/^static bool linuxraw_joypad_button(unsigned port, uint16_t joykey)$/;"	f	file:	signature:(unsigned port, uint16_t joykey)
linuxraw_joypad_destroy	input/linuxraw_joypad.c	/^static void linuxraw_joypad_destroy(void)$/;"	f	file:	signature:(void)
linuxraw_joypad_init	input/linuxraw_joypad.c	/^static bool linuxraw_joypad_init(void)$/;"	f	file:	signature:(void)
linuxraw_joypad_init_pad	input/linuxraw_joypad.c	/^static bool linuxraw_joypad_init_pad(const char *path, struct linuxraw_joypad *pad)$/;"	f	file:	signature:(const char *path, struct linuxraw_joypad *pad)
linuxraw_joypad_name	input/linuxraw_joypad.c	/^static const char *linuxraw_joypad_name(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
linuxraw_joypad_poll	input/linuxraw_joypad.c	/^static void linuxraw_joypad_poll(void)$/;"	f	file:	signature:(void)
linuxraw_joypad_query_pad	input/linuxraw_joypad.c	/^static bool linuxraw_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
linuxraw_joypad_setup_notify	input/linuxraw_joypad.c	/^static void linuxraw_joypad_setup_notify(void)$/;"	f	file:	signature:(void)
linuxraw_key_pressed	input/linuxraw_input.c	/^static bool linuxraw_key_pressed(linuxraw_input_t *linuxraw, int key)$/;"	f	file:	signature:(linuxraw_input_t *linuxraw, int key)
linuxraw_resetKbmd	input/linuxraw_input.c	/^static void linuxraw_resetKbmd(void)$/;"	f	file:	signature:(void)
linuxraw_set_rumble	input/linuxraw_input.c	/^static bool linuxraw_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
list	core_info.h	/^   core_info_t *list;$/;"	m	struct:__anon253	access:public
list	file_list.h	/^   struct item_file *list;$/;"	m	struct:file_list	typeref:struct:file_list::item_file	access:public
list	general.h	/^            uint32_t *list;$/;"	m	struct:global::__anon242::__anon243::__anon244	access:public
list	general.h	/^      struct string_list *list;$/;"	m	struct:global::__anon241	typeref:struct:global::__anon241::string_list	access:public
list	psp1/psp1_video.c	/^static unsigned int __attribute__((aligned(16))) list[262144];$/;"	v	file:
listToString	ps3/ps3py/pkg.py	/^def listToString(inlist):$/;"	f	access:public
listedDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected File listedDirectory;$/;"	f	class:DirectoryFragment	access:protected
ljs	apple/common/hidpad/wiimote.h	/^		struct joystick_t ljs;			\/**< left joystick calibration				*\/$/;"	m	struct:classic_ctrl_t	typeref:struct:classic_ctrl_t::joystick_t	access:public
load	driver.h	/^   bool (*load)(void *data, const struct video_overlay_image *images, unsigned num_images);$/;"	m	struct:video_overlay_interface	access:public
load32be	hash.c	/^static inline uint32_t load32be(const uint32_t *addr)$/;"	f	file:	signature:(const uint32_t *addr)
load32le	hash.c	/^static inline uint32_t load32le(const uint32_t *addr)$/;"	f	file:	signature:(const uint32_t *addr)
loadAddressId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint loadAddressId;$/;"	m	struct:rglGcmShader_	access:public
loadController	blackberry-qnx/qnx_input.c	/^static void loadController(input_device_t* controller)$/;"	f	file:	signature:(input_device_t* controller)
loadElfToMemory	ps3/rgl/src/libelf/readelf.h	/^   int loadElfToMemory(unsigned char* memory, unsigned int size, unsigned int load_address, ELF_t* elf);$/;"	p	signature:(unsigned char* memory, unsigned int size, unsigned int load_address, ELF_t* elf)
loadFromString	ps3/rgl/src/cg/nvbi.hpp	/^               loadFromString( const char* source, size_t length ) = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:( const char* source, size_t length )
loadFromString	ps3/rgl/src/cg/nvbiimpl.hpp	/^               loadFromString( const char* source, size_t length);$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:( const char* source, size_t length)
loadFromString	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::loadFromString( const char* source, size_t length)$/;"	f	class:cgc::bio::nvb_reader_impl	signature:( const char* source, size_t length)
loadProgramId	ps3/rgl/include/Cg/CgCommon.h	/^   GLuint loadProgramId;$/;"	m	struct:_CGprogram	access:public
loadProgramOffset	ps3/rgl/include/Cg/CgCommon.h	/^   GLuint loadProgramOffset; $/;"	m	struct:_CGprogram	access:public
loadSectionsToMemory	ps3/rgl/src/libelf/readelf.h	/^   int loadSectionsToMemory(ELF_t* elf,char* memory,int memorySize,unsigned int origin);$/;"	p	signature:(ELF_t* elf,char* memory,int memorySize,unsigned int origin)
load_auto_state	retroarch.c	/^static void load_auto_state(void)$/;"	f	file:	signature:(void)
load_bsx_rom	file.c	/^static bool load_bsx_rom(bool slotted)$/;"	f	file:	signature:(bool slotted)
load_dir	frontend/frontend_xenon.c	/^static void load_dir(const char *path)$/;"	f	file:	signature:(const char *path)
load_dol_image	wii/app_booter/dolloader.c	/^u32 load_dol_image(const void *dolstart)$/;"	f	signature:(const void *dolstart)
load_dol_image	wii/app_booter/dolloader.h	/^u32 load_dol_image(const void *dolstart);$/;"	p	signature:(const void *dolstart)
load_elf_image	wii/app_booter/elfloader.c	/^u32 load_elf_image (void *elfstart) {$/;"	f	signature:(void *elfstart)
load_elf_image	wii/app_booter/elfloader.h	/^u32 load_elf_image (void *addr);$/;"	p	signature:(void *addr)
load_images	input/overlay.c	/^   struct video_overlay_image *load_images;$/;"	m	struct:overlay	typeref:struct:overlay::video_overlay_image	file:	access:public
load_images_size	input/overlay.c	/^   unsigned load_images_size;$/;"	m	struct:overlay	file:	access:public
load_imports	gfx/shader_cg.c	/^static bool load_imports(void)$/;"	f	file:	signature:(void)
load_luts	gfx/shader_glsl.c	/^static bool load_luts(void)$/;"	f	file:	signature:(void)
load_menu_game	frontend/menu/menu_common.c	/^bool load_menu_game(void)$/;"	f	signature:(void)
load_menu_game	frontend/menu/menu_common.h	/^bool load_menu_game(void);$/;"	p	signature:(void)
load_menu_game_history	frontend/menu/menu_common.c	/^void load_menu_game_history(unsigned game_index)$/;"	f	signature:(unsigned game_index)
load_menu_game_history	frontend/menu/menu_common.h	/^void load_menu_game_history(unsigned game_index);$/;"	p	signature:(unsigned game_index)
load_menu_game_new_core	frontend/menu/menu_common.c	/^void load_menu_game_new_core(void)$/;"	f	signature:(void)
load_menu_game_new_core	frontend/menu/menu_common.h	/^extern void load_menu_game_new_core(void);$/;"	p	signature:(void)
load_menu_game_prepare	frontend/menu/menu_common.c	/^void load_menu_game_prepare(void)$/;"	f	signature:(void)
load_menu_game_prepare	frontend/menu/menu_common.h	/^void load_menu_game_prepare(void);$/;"	p	signature:(void)
load_no_rom	frontend/menu/menu_common.h	/^   bool load_no_rom;$/;"	m	struct:__anon25	access:public
load_no_rom_hook	dynamic.c	/^static bool *load_no_rom_hook;$/;"	v	file:
load_normal_rom	file.c	/^static bool load_normal_rom(void)$/;"	f	file:	signature:(void)
load_plain	gfx/shader_cg.c	/^static bool load_plain(const char *path)$/;"	f	file:	signature:(const char *path)
load_plain	gfx/shader_hlsl.c	/^static bool load_plain(const char *path)$/;"	f	file:	signature:(const char *path)
load_preset	gfx/shader_cg.c	/^static bool load_preset(const char *path)$/;"	f	file:	signature:(const char *path)
load_preset	gfx/shader_hlsl.c	/^static bool load_preset(const char *path)$/;"	f	file:	signature:(const char *path)
load_program	gfx/shader_cg.c	/^static bool load_program(unsigned index, const char *prog, bool path_is_file)$/;"	f	file:	signature:(unsigned index, const char *prog, bool path_is_file)
load_program	gfx/shader_hlsl.c	/^static bool load_program(unsigned index, const char *prog, bool path_is_file)$/;"	f	file:	signature:(unsigned index, const char *prog, bool path_is_file)
load_ram_file	file.c	/^void load_ram_file(const char *path, int type)$/;"	f	signature:(const char *path, int type)
load_ram_file	file.h	/^void load_ram_file(const char *path, int type);$/;"	p	signature:(const char *path, int type)
load_roms	file.c	/^static bool load_roms(unsigned rom_type, const char **rom_paths, size_t roms)$/;"	f	file:	signature:(unsigned rom_type, const char **rom_paths, size_t roms)
load_save_files	retroarch.c	/^static inline void load_save_files(void)$/;"	f	file:	signature:(void)
load_sgb_rom	file.c	/^static bool load_sgb_rom(void)$/;"	f	file:	signature:(void)
load_shader	gfx/shader_cg.c	/^static bool load_shader(unsigned i)$/;"	f	file:	signature:(unsigned i)
load_shader	gfx/shader_hlsl.c	/^static bool load_shader(const char *cgp_path, unsigned i)$/;"	f	file:	signature:(const char *cgp_path, unsigned i)
load_source_path	gfx/shader_glsl.c	/^static bool load_source_path(struct gfx_shader_pass *pass, const char *path)$/;"	f	file:	signature:(struct gfx_shader_pass *pass, const char *path)
load_state	file.c	/^bool load_state(const char *path)$/;"	f	signature:(const char *path)
load_state	file.h	/^bool load_state(const char *path);$/;"	p	signature:(const char *path)
load_stock	gfx/shader_cg.c	/^static bool load_stock(void)$/;"	f	file:	signature:(void)
load_stock	gfx/shader_hlsl.c	/^static bool load_stock(void)$/;"	f	file:	signature:(void)
load_sufami_rom	file.c	/^static bool load_sufami_rom(void)$/;"	f	file:	signature:(void)
load_symbols	dynamic.c	/^static void load_symbols(bool is_dummy)$/;"	f	file:	signature:(bool is_dummy)
load_texture_data	gfx/shader_cg.c	/^static void load_texture_data(GLuint obj, const struct texture_image *img, bool smooth, GLenum wrap)$/;"	f	file:	signature:(GLuint obj, const struct texture_image *img, bool smooth, GLenum wrap)
load_textures	gfx/shader_cg.c	/^static bool load_textures(void)$/;"	f	file:	signature:(void)
load_xml_map	file.c	/^static char *load_xml_map(const char *path)$/;"	f	file:	signature:(const char *path)
loaded_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			loaded_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
loc	gfx/shader_glsl.c	/^   GLint loc;$/;"	m	struct:glsl_attrib	file:	access:public
local	deps/minizip/unzip.c	57;"	d	file:
localAddress	ps3/rgl/src/include/rgl-typedefs.h	/^   char *localAddress;$/;"	m	struct:rglGcmResource	access:public
localAddress	ps3/rgl/src/include/rgl-typedefs.h	/^   char *localAddress;$/;"	m	struct:rglGcmState	access:public
localSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint localSize;$/;"	m	struct:rglGcmResource	access:public
location	driver.h	/^   const location_driver_t *location;$/;"	m	struct:driver	access:public
location	general.h	/^   } location;$/;"	m	struct:settings	typeref:struct:settings::__anon229	access:public
locationChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean locationChanged = false;$/;"	f	class:RetroActivityLocation	access:default
location_active	general.h	/^   bool location_active;$/;"	m	struct:global	access:public
location_android	location/android.c	/^const location_driver_t location_android = {$/;"	v
location_callback	general.h	/^      struct retro_location_callback location_callback;$/;"	m	struct:global::__anon234	typeref:struct:global::__anon234::retro_location_callback	access:public
location_data	driver.h	/^   void *location_data;$/;"	m	struct:driver	access:public
location_data_own	driver.h	/^   bool location_data_own;$/;"	m	struct:driver	access:public
location_driver	driver.h	/^typedef struct location_driver$/;"	s
location_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:location_driver	access:public
location_driver::get_position	driver.h	/^   bool (*get_position)(void *data, double *lat, double *lon, double *horiz_accuracy, double *vert_accuracy);$/;"	m	struct:location_driver	access:public
location_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:location_driver	access:public
location_driver::init	driver.h	/^   void *(*init)(void);$/;"	m	struct:location_driver	access:public
location_driver::set_interval	driver.h	/^   void (*set_interval)(void *data, unsigned interval_msecs, unsigned interval_distance);$/;"	m	struct:location_driver	access:public
location_driver::start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:location_driver	access:public
location_driver::stop	driver.h	/^   void (*stop)(void *data);$/;"	m	struct:location_driver	access:public
location_driver_t	driver.h	/^} location_driver_t;$/;"	t	typeref:struct:location_driver
location_drivers	driver.c	/^static const location_driver_t *location_drivers[] = {$/;"	v	file:
location_init_func	driver_funcs.h	23;"	d
location_service_running	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean location_service_running = false;$/;"	f	class:RetroActivityLocation	access:default
lock	audio/coreaudio.c	/^   pthread_mutex_t lock;$/;"	m	struct:coreaudio	file:	access:public
lock	audio/opensl.c	/^   slock_t *lock;$/;"	m	struct:sl	file:	access:public
lock	audio/sdl_audio.c	/^   slock_t *lock;$/;"	m	struct:sdl_audio	file:	access:public
lock	audio/thread_wrapper.c	/^   slock_t *lock;$/;"	m	struct:audio_thread	file:	access:public
lock	autosave.c	/^   slock_t *lock;$/;"	m	struct:autosave	file:	access:public
lock	gfx/thread_wrapper.c	/^      slock_t *lock;$/;"	m	struct:thread_video::__anon221	file:	access:public
lock	gfx/thread_wrapper.c	/^   slock_t *lock;$/;"	m	struct:thread_video	file:	access:public
lock	ps3/ps3_audio.c	/^   sys_lwmutex_t lock;$/;"	m	struct:__anon78	file:	access:public
lock	record/ffemu.c	/^   slock_t *lock;$/;"	m	struct:ffemu	file:	access:public
lock	thread.c	/^   CRITICAL_SECTION lock;$/;"	m	struct:slock	file:	access:public
lock	thread.c	/^   pthread_mutex_t lock;$/;"	m	struct:slock	file:	access:public
lock_autosave	autosave.c	/^void lock_autosave(void)$/;"	f	signature:(void)
lock_autosave	autosave.h	/^void lock_autosave(void);$/;"	p	signature:(void)
locked_axes	frontend/menu/menu_common.h	/^   int16_t locked_axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_axis_state	access:public
lodBias	ps3/rgl/include/RGL/Types.h	/^      GLfloat		lodBias;$/;"	m	struct:__anon65	access:public
lodBias	ps3/rgl/include/RGL/Types.h	/^      GLfloat lodBias;$/;"	m	struct:__anon63	access:public
log	libretro.h	/^   retro_log_printf_t log;$/;"	m	struct:retro_log_callback	access:public
log	tools/cg2glsl.py	/^def log(*arg):$/;"	f	access:public
logPath	apple/iOS/platform.h	/^@property (nonatomic) NSString* logPath;$/;"	v
log_connection	netplay.c	/^static void log_connection(const struct sockaddr_storage *their_addr,$/;"	f	file:	signature:(const struct sockaddr_storage *their_addr, unsigned slot, const char *nick)
log_counters	performance.c	/^static void log_counters(const struct retro_perf_counter **counters, unsigned num)$/;"	f	file:	signature:(const struct retro_perf_counter **counters, unsigned num)
log_file	general.h	/^   FILE *log_file;$/;"	m	struct:global	access:public
log_info	gfx/d3d9/render_chain.cpp	/^void RenderChain::log_info(const LinkInfo &info)$/;"	f	class:RenderChain	signature:(const LinkInfo &info)
log_info	gfx/d3d9/render_chain.hpp	/^      void log_info(const LinkInfo &info);$/;"	p	class:RenderChain	access:private	signature:(const LinkInfo &info)
logger_init	console/logger/logger.c	/^void logger_init (void)$/;"	f	signature:(void)
logger_init	console/logger/logger.h	/^void logger_init (void);$/;"	p	signature:(void)
logger_init	console/logger/psl1ght_logger.c	/^void logger_init (void)$/;"	f	signature:(void)
logger_send	console/logger/logger.c	/^void logger_send(const char *__format,...)$/;"	f	signature:(const char *__format,...)
logger_send	console/logger/logger.h	/^void logger_send (const char *__format,...);$/;"	p	signature:(const char *__format,...)
logger_send	console/logger/psl1ght_logger.c	/^void logger_send(const char *format,...)$/;"	f	signature:(const char *format,...)
logger_shutdown	console/logger/logger.c	/^void logger_shutdown (void)$/;"	f	signature:(void)
logger_shutdown	console/logger/logger.h	/^void logger_shutdown (void);$/;"	p	signature:(void)
logger_shutdown	console/logger/psl1ght_logger.c	/^void logger_shutdown (void)$/;"	f	signature:(void)
logging	apple/iOS/platform.h	/^   }  logging;$/;"	m	struct:__anon154	typeref:struct:__anon154::__anon155	access:public
logging	libretro-test/libretro-test.c	/^static struct retro_log_callback logging;$/;"	v	typeref:struct:retro_log_callback	file:
logging_enabled	apple/iOS/platform.h	/^   bool logging_enabled;$/;"	m	struct:__anon154	access:public
lomagic	ps3/altivec_mem.h	48;"	d
lookupResolvedSymbol	ps3/rgl/src/libelf/readelf.h	/^   int lookupResolvedSymbol(const ELF_t* elf,const char* name);$/;"	p	signature:(const ELF_t* elf,const char* name)
lookupSymbol	ps3/rgl/src/libelf/readelf.c	/^int lookupSymbol(const ELF_t *elf,const char *name)$/;"	f	signature:(const ELF_t *elf,const char *name)
lookupSymbol	ps3/rgl/src/libelf/readelf.h	/^   int lookupSymbol(const ELF_t* elf,const char* name);$/;"	p	signature:(const ELF_t* elf,const char* name)
lookupSymbolValueInPlace	ps3/rgl/src/libelf/readelf.c	/^int lookupSymbolValueInPlace(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, const char *name)$/;"	f	signature:(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, const char *name)
lookupSymbolValueInPlace	ps3/rgl/src/libelf/readelf.h	/^   int lookupSymbolValueInPlace(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, const char *name);$/;"	p	signature:(const char* symbolSection, size_t symbolSize, size_t symbolCount, const char *symbolstrtab, const char *name)
looper	frontend/platform/platform_android.h	/^   ALooper* looper;$/;"	m	struct:android_app	access:public
lpSurface	xdk/xdk_d3d.h	/^   LPDIRECT3DSURFACE lpSurface;$/;"	m	struct:xdk_d3d_video	access:public
lpTexture	xdk/xdk_d3d.h	/^   LPDIRECT3DTEXTURE lpTexture;$/;"	m	struct:xdk_d3d_video	access:public
lpTexture_ot	xdk/xdk_d3d.h	/^   LPDIRECT3DTEXTURE lpTexture_ot;$/;"	m	struct:xdk_d3d_video	access:public
lpTexture_ot_as16srgb	xdk/xdk_d3d.h	/^   D3DTexture lpTexture_ot_as16srgb;$/;"	m	struct:xdk_d3d_video	access:public
lpWidth	gx/gx_video_inl.h	/^	u32 lpWidth;$/;"	m	struct:__gx_regdef	access:public
luma_index	gfx/xvideo.c	/^   unsigned luma_index[2];$/;"	m	struct:format_desc	file:	access:public
luma_index	gfx/xvideo.c	/^   unsigned luma_index[2];$/;"	m	struct:xv	file:	access:public
lut	gfx/shader_parse.h	/^   struct gfx_shader_lut lut[GFX_MAX_TEXTURES];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::gfx_shader_lut	access:public
lut_info	gfx/d3d9/render_chain.hpp	/^      struct lut_info$/;"	s	class:RenderChain	access:private
lut_tex	gfx/shader_cg.c	/^   CGparameter lut_tex;$/;"	m	struct:cg_program	file:	access:public
lut_tex_coord	gfx/gl_common.h	/^   const GLfloat *lut_tex_coord;$/;"	m	struct:gl_coords	access:public
lut_tex_coord	gfx/shader_glsl.c	/^   int lut_tex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
lut_texture	gfx/shader_glsl.c	/^   int lut_texture[GFX_MAX_TEXTURES];$/;"	m	struct:shader_uniforms	file:	access:public
lut_textures	gfx/shader_cg.c	/^static GLuint lut_textures[MAX_LUT_TEXTURES];$/;"	v	file:
lut_u	gfx/d3d9/render_chain.hpp	/^   float lut_u, lut_v;$/;"	m	struct:Vertex	access:public
lut_v	gfx/d3d9/render_chain.hpp	/^   float lut_u, lut_v;$/;"	m	struct:Vertex	access:public
luts	gfx/d3d9/render_chain.hpp	/^      std::vector<lut_info> luts;$/;"	m	class:RenderChain	access:private
luts	gfx/shader_parse.h	/^   unsigned luts;$/;"	m	struct:gfx_shader	access:public
lx	android/native/jni/input_android.c	/^   int16_t lx, ly;$/;"	m	struct:__anon79	file:	access:public
ly	android/native/jni/input_android.c	/^   int16_t lx, ly;$/;"	m	struct:__anon79	file:	access:public
mCamera	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private Camera mCamera = null;$/;"	f	class:RetroActivityCamera	file:	access:private
mCurrentLocation	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private Location mCurrentLocation;$/;"	f	class:RetroActivityLocation	file:	access:private
mEglImageBuf	gfx/vg.c	/^   bool mEglImageBuf;$/;"	m	struct:__anon225	file:	access:public
mFont	gfx/vg.c	/^   VGFont mFont;$/;"	m	struct:__anon225	file:	access:public
mFontHeight	gfx/vg.c	/^   uint32_t mFontHeight;$/;"	m	struct:__anon225	file:	access:public
mFontRenderer	gfx/vg.c	/^   void *mFontRenderer;$/;"	m	struct:__anon225	file:	access:public
mFontsOn	gfx/vg.c	/^   bool mFontsOn;$/;"	m	struct:__anon225	file:	access:public
mGlyphIndices	gfx/vg.c	/^   VGuint mGlyphIndices[1024];$/;"	m	struct:__anon225	file:	access:public
mHandler	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private Handler mHandler = new Handler()$/;"	f	class:PreferenceListFragment	file:	access:private
mHavePrefs	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private boolean mHavePrefs;$/;"	f	class:PreferenceListFragment	file:	access:private
mImage	gfx/vg.c	/^   VGImage mImage;$/;"	m	struct:__anon225	file:	access:public
mInitDone	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private boolean mInitDone;$/;"	f	class:PreferenceListFragment	file:	access:private
mKeepAspect	gfx/vg.c	/^   bool mKeepAspect;$/;"	m	struct:__anon225	file:	access:public
mLastMsg	gfx/vg.c	/^   char *mLastMsg;$/;"	m	struct:__anon225	file:	access:public
mList	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private ListView mList;$/;"	f	class:PreferenceListFragment	file:	access:private
mListOnKeyListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private OnKeyListener mListOnKeyListener = new OnKeyListener()$/;"	f	class:PreferenceListFragment	file:	access:private
mLocationClient	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	private LocationClient mLocationClient = null;$/;"	f	class:RetroActivityLocation	file:	access:private
mLocationRequest	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	LocationRequest mLocationRequest = null;$/;"	f	class:RetroActivityLocation	access:default
mMsgLength	gfx/vg.c	/^   VGuint mMsgLength;$/;"	m	struct:__anon225	file:	access:public
mNumFrames	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private int mNumFrames = 0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
mPaintBg	gfx/vg.c	/^   VGPaint mPaintBg;$/;"	m	struct:__anon225	file:	access:public
mPaintFg	gfx/vg.c	/^   VGPaint mPaintFg;$/;"	m	struct:__anon225	file:	access:public
mPreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private PreferenceManager mPreferenceManager;$/;"	f	class:PreferenceListFragment	file:	access:private
mRenderHeight	gfx/vg.c	/^   unsigned mRenderHeight;$/;"	m	struct:__anon225	file:	access:public
mRenderWidth	gfx/vg.c	/^   unsigned mRenderWidth;$/;"	m	struct:__anon225	file:	access:public
mRequestFocus	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    final private Runnable mRequestFocus = new Runnable()$/;"	f	class:PreferenceListFragment	file:	access:private
mScreenAspect	gfx/vg.c	/^   float mScreenAspect;$/;"	m	struct:__anon225	file:	access:public
mScreenHeight	gfx/vg.c	/^   uint32_t mScreenHeight;$/;"	m	struct:__anon225	file:	access:public
mScreenWidth	gfx/vg.c	/^   uint32_t mScreenWidth;$/;"	m	struct:__anon225	file:	access:public
mStartTime	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private double mStartTime = 0.0;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
mState	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private int mState = STATE_START;$/;"	f	class:DisplayRefreshRateTest.Renderer	file:	access:private
mTexType	gfx/vg.c	/^   VGImageFormat mTexType;$/;"	m	struct:__anon225	file:	access:public
mTextureHeight	gfx/vg.c	/^   unsigned mTextureHeight;$/;"	m	struct:__anon225	file:	access:public
mTextureWidth	gfx/vg.c	/^   unsigned mTextureWidth;$/;"	m	struct:__anon225	file:	access:public
mTransformMatrix	gfx/vg.c	/^   math_matrix_3x3 mTransformMatrix;$/;"	m	struct:__anon225	file:	access:public
mUpdatesRequested	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	boolean mUpdatesRequested = false;$/;"	f	class:RetroActivityLocation	access:default
m_Font	gfx/fonts/xdk360_fonts.cpp	/^static xdk360_video_font_t m_Font;$/;"	v	file:
m_Glyphs	gfx/fonts/xdk360_fonts.cpp	/^   GLYPH_ATTR m_Glyphs[1];         \/\/ Array of font strike uv's etc... NOTE: It's m_dwNumGlyphs in size$/;"	m	struct:__anon207	file:	access:public
m_Glyphs	gfx/fonts/xdk360_fonts.cpp	/^   const GLYPH_ATTR* m_Glyphs;          \/\/ Array of glyphs$/;"	m	struct:__anon205	file:	access:public
m_TranslatorTable	gfx/fonts/xdk360_fonts.cpp	/^   wchar_t * m_TranslatorTable;         \/\/ ASCII to glyph lookup table$/;"	m	struct:__anon205	file:	access:public
m_TranslatorTable	gfx/fonts/xdk360_fonts.cpp	/^   wchar_t m_TranslatorTable[1];   \/\/ ASCII to Glyph lookup table, NOTE: It's m_cMaxGlyph+1 in size.$/;"	m	struct:__anon206	file:	access:public
m_adler32	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
m_archive_size	deps/miniz/zlib.h	/^  mz_uint64 m_archive_size;$/;"	m	struct:__anon119	access:public
m_bInitialized	xdk/xdk_resources.h	/^      BOOL m_bInitialized;       \/\/ Resource is fully initialized$/;"	m	class:PackedResource	access:protected
m_back	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ m_back;$/;"	v
m_bit_buf	deps/miniz/zlib.h	/^  tinfl_bit_buf_t m_bit_buf;$/;"	m	struct:tinfl_decompressor_tag	access:public
m_bit_buffer	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
m_bit_flag	deps/miniz/zlib.h	/^  mz_uint16 m_bit_flag;$/;"	m	struct:__anon117	access:public
m_bits_in	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
m_block_index	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_cMaxGlyph	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_cMaxGlyph;           \/\/ Number of entries in the translator table$/;"	m	struct:__anon205	file:	access:public
m_cMaxGlyph	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short m_cMaxGlyph;     \/\/ Number of font characters (Should be an odd number to maintain DWORD Alignment)$/;"	m	struct:__anon206	file:	access:public
m_capacity	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon136	file:	access:public
m_capacity	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon138	file:	access:public
m_central_dir	deps/miniz/miniz.c	/^  mz_zip_array m_central_dir;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_central_dir_offsets	deps/miniz/miniz.c	/^  mz_zip_array m_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_central_dir_ofs	deps/miniz/zlib.h	/^  mz_uint32 m_central_dir_ofs;$/;"	m	struct:__anon117	access:public
m_central_directory_file_ofs	deps/miniz/zlib.h	/^  mz_uint64 m_central_directory_file_ofs;$/;"	m	struct:__anon119	access:public
m_check_adler32	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_code_size	deps/miniz/zlib.h	/^  mz_uint8 m_code_size[TINFL_MAX_HUFF_SYMBOLS_0];$/;"	m	struct:__anon124	access:public
m_comment	deps/miniz/zlib.h	/^  char m_comment[MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE];$/;"	m	struct:__anon117	access:public
m_comment_size	deps/miniz/zlib.h	/^  mz_uint32 m_comment_size;$/;"	m	struct:__anon117	access:public
m_comp_size	deps/miniz/zlib.h	/^  mz_uint64 m_comp_size;$/;"	m	struct:__anon117	access:public
m_counter	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_crc32	deps/miniz/zlib.h	/^  mz_uint32 m_crc32;$/;"	m	struct:__anon117	access:public
m_decomp	deps/miniz/miniz.c	/^  tinfl_decompressor m_decomp;$/;"	m	struct:__anon133	file:	access:public
m_dict	deps/miniz/miniz.c	/^  mz_uint8 m_dict[TINFL_LZ_DICT_SIZE];$/;"	m	struct:__anon133	file:	access:public
m_dict	deps/miniz/zlib.h	/^  mz_uint8 m_dict[TDEFL_LZ_DICT_SIZE + TDEFL_MAX_MATCH_LEN - 1];$/;"	m	struct:__anon132	access:public
m_dict_avail	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
m_dict_ofs	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
m_dict_size	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
m_dist	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_dist_from_out_buf_start	deps/miniz/zlib.h	/^  size_t m_dist_from_out_buf_start;$/;"	m	struct:tinfl_decompressor_tag	access:public
m_dwFileVersion	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwFileVersion;   \/\/ Version of the font file (Must match FONTFILEVERSION)$/;"	m	struct:__anon206	file:	access:public
m_dwNumGlyphs	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwNumGlyphs;         \/\/ Number of valid glyphs$/;"	m	struct:__anon205	file:	access:public
m_dwNumGlyphs	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwNumGlyphs;    \/\/ Size of font strike array (First entry is the unknown glyph)$/;"	m	struct:__anon207	file:	access:public
m_dwNumResourceTags	xdk/xdk_resources.h	/^      DWORD       m_dwNumResourceTags; \/\/ Number of resource tags$/;"	m	class:PackedResource	access:protected
m_dwSavedState	gfx/fonts/xdk360_fonts.cpp	/^   unsigned long m_dwSavedState;$/;"	m	struct:__anon205	file:	access:public
m_dwSysMemDataSize	xdk/xdk_resources.h	/^      DWORD       m_dwSysMemDataSize;$/;"	m	class:PackedResource	access:protected
m_dwVidMemDataSize	xdk/xdk_resources.h	/^      DWORD       m_dwVidMemDataSize;$/;"	m	class:PackedResource	access:protected
m_element_size	deps/miniz/miniz.c	/^  mz_uint m_element_size;$/;"	m	struct:__anon138	file:	access:public
m_expandable	deps/miniz/miniz.c	/^  mz_bool m_expandable;$/;"	m	struct:__anon136	file:	access:public
m_external_attr	deps/miniz/zlib.h	/^  mz_uint32 m_external_attr;$/;"	m	struct:__anon117	access:public
m_fFontBottomPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontBottomPadding;          \/\/ Padding below the strike zone$/;"	m	struct:__anon205	file:	access:public
m_fFontBottomPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontBottomPadding;     \/\/ Padding below the strike zone$/;"	m	struct:__anon206	file:	access:public
m_fFontHeight	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontHeight;                 \/\/ Height of the font strike in pixels$/;"	m	struct:__anon205	file:	access:public
m_fFontHeight	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontHeight;            \/\/ Height of the font strike in pixels$/;"	m	struct:__anon206	file:	access:public
m_fFontTopPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontTopPadding;             \/\/ Padding above the strike zone$/;"	m	struct:__anon205	file:	access:public
m_fFontTopPadding	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontTopPadding;        \/\/ Padding above the strike zone$/;"	m	struct:__anon206	file:	access:public
m_fFontYAdvance	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontYAdvance;               \/\/ Number of pixels to move the cursor for a line feed$/;"	m	struct:__anon205	file:	access:public
m_fFontYAdvance	gfx/fonts/xdk360_fonts.cpp	/^   float m_fFontYAdvance;          \/\/ Number of pixels to move the cursor for a line feed$/;"	m	struct:__anon206	file:	access:public
m_file_index	deps/miniz/zlib.h	/^  mz_uint32 m_file_index;$/;"	m	struct:__anon117	access:public
m_file_offset_alignment	deps/miniz/zlib.h	/^  mz_uint m_file_offset_alignment;$/;"	m	struct:__anon119	access:public
m_filename	deps/miniz/zlib.h	/^  char m_filename[MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE];$/;"	m	struct:__anon117	access:public
m_final	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_finished	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_first_call	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
m_flags	deps/miniz/zlib.h	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon132	access:public
m_flush	deps/miniz/zlib.h	/^  tdefl_flush m_flush;$/;"	m	struct:__anon132	access:public
m_greedy_parsing	deps/miniz/zlib.h	/^  int m_greedy_parsing;$/;"	m	struct:__anon132	access:public
m_has_flushed	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
m_hash	deps/miniz/zlib.h	/^  mz_uint16 m_hash[TDEFL_LZ_HASH_SIZE];$/;"	m	struct:__anon132	access:public
m_huff_code_sizes	deps/miniz/zlib.h	/^  mz_uint8 m_huff_code_sizes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
m_huff_codes	deps/miniz/zlib.h	/^  mz_uint16 m_huff_codes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
m_huff_count	deps/miniz/zlib.h	/^  mz_uint16 m_huff_count[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon132	access:public
m_internal_attr	deps/miniz/zlib.h	/^  mz_uint16 m_internal_attr;$/;"	m	struct:__anon117	access:public
m_key	deps/miniz/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon134	file:	access:public
m_last_status	deps/miniz/miniz.c	/^  tinfl_status m_last_status;$/;"	m	struct:__anon133	file:	access:public
m_len_codes	deps/miniz/zlib.h	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_local_header_ofs	deps/miniz/zlib.h	/^  mz_uint64 m_local_header_ofs;$/;"	m	struct:__anon117	access:public
m_look_up	deps/miniz/zlib.h	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon124	access:public
m_lookahead_pos	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
m_lookahead_size	deps/miniz/zlib.h	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon132	access:public
m_lz_code_buf	deps/miniz/zlib.h	/^  mz_uint8 m_lz_code_buf[TDEFL_LZ_CODE_BUF_SIZE];$/;"	m	struct:__anon132	access:public
m_lz_code_buf_dict_pos	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
m_max_probes	deps/miniz/zlib.h	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon132	access:public
m_mem_capacity	deps/miniz/miniz.c	/^  size_t m_mem_capacity;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_mem_size	deps/miniz/miniz.c	/^  size_t m_mem_size;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_menulist	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ m_menulist;$/;"	v
m_menutitle	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ m_menutitle;$/;"	v
m_menutitlebottom	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ m_menutitlebottom;$/;"	v
m_method	deps/miniz/zlib.h	/^  mz_uint16 m_method;$/;"	m	struct:__anon117	access:public
m_next	deps/miniz/zlib.h	/^  mz_uint16 m_next[TDEFL_LZ_DICT_SIZE];$/;"	m	struct:__anon132	access:public
m_num_bits	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_num_extra	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_num_flags_left	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
m_out_buf_ofs	deps/miniz/zlib.h	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon132	access:public
m_output_buf	deps/miniz/zlib.h	/^  mz_uint8 m_output_buf[TDEFL_OUT_BUF_SIZE];$/;"	m	struct:__anon132	access:public
m_output_flush_ofs	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_output_flush_remaining	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_p	deps/miniz/miniz.c	/^  void *m_p;$/;"	m	struct:__anon138	file:	access:public
m_pAlloc	deps/miniz/zlib.h	/^  mz_alloc_func m_pAlloc;$/;"	m	struct:__anon119	access:public
m_pAlloc_opaque	deps/miniz/zlib.h	/^  void *m_pAlloc_opaque;$/;"	m	struct:__anon119	access:public
m_pBuf	deps/miniz/miniz.c	/^  mz_uint8 *m_pBuf;$/;"	m	struct:__anon136	file:	access:public
m_pFile	deps/miniz/miniz.c	/^  MZ_FILE *m_pFile;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_pFontPixelShader	gfx/fonts/xdk360_fonts.cpp	/^   D3DPixelShader* m_pFontPixelShader;$/;"	m	struct:__anon208	file:	access:public
m_pFontTexture	gfx/fonts/xdk360_fonts.cpp	/^   D3DTexture* m_pFontTexture;$/;"	m	struct:__anon205	file:	access:public
m_pFontVertexDecl	gfx/fonts/xdk360_fonts.cpp	/^   D3DVertexDeclaration* m_pFontVertexDecl;$/;"	m	struct:__anon208	file:	access:public
m_pFontVertexShader	gfx/fonts/xdk360_fonts.cpp	/^   D3DVertexShader* m_pFontVertexShader;$/;"	m	struct:__anon208	file:	access:public
m_pFree	deps/miniz/zlib.h	/^  mz_free_func m_pFree;$/;"	m	struct:__anon119	access:public
m_pIO_opaque	deps/miniz/zlib.h	/^  void *m_pIO_opaque;$/;"	m	struct:__anon119	access:public
m_pIn_buf	deps/miniz/zlib.h	/^  const void *m_pIn_buf;$/;"	m	struct:__anon132	access:public
m_pIn_buf_size	deps/miniz/zlib.h	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon132	access:public
m_pLZ_code_buf	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
m_pLZ_flags	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
m_pMem	deps/miniz/miniz.c	/^  void *m_pMem;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_pOut_buf	deps/miniz/zlib.h	/^  void *m_pOut_buf;$/;"	m	struct:__anon132	access:public
m_pOut_buf_size	deps/miniz/zlib.h	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon132	access:public
m_pOutput_buf	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
m_pOutput_buf_end	deps/miniz/zlib.h	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon132	access:public
m_pPut_buf_func	deps/miniz/zlib.h	/^  tdefl_put_buf_func_ptr m_pPut_buf_func;$/;"	m	struct:__anon132	access:public
m_pPut_buf_user	deps/miniz/zlib.h	/^  void *m_pPut_buf_user;$/;"	m	struct:__anon132	access:public
m_pRead	deps/miniz/zlib.h	/^  mz_file_read_func m_pRead;$/;"	m	struct:__anon119	access:public
m_pResourceTags	xdk/xdk_resources.h	/^      XBRESOURCE* m_pResourceTags;     \/\/ Tags to associate names with the resources$/;"	m	class:PackedResource	access:protected
m_pSrc	deps/miniz/zlib.h	/^  const mz_uint8 *m_pSrc;$/;"	m	struct:__anon132	access:public
m_pState	deps/miniz/zlib.h	/^  mz_zip_internal_state *m_pState;$/;"	m	struct:__anon119	access:public
m_pSysMemData	xdk/xdk_resources.h	/^      BYTE*       m_pSysMemData;        \/\/ Alloc'ed memory for resource headers etc.$/;"	m	class:PackedResource	access:protected
m_pVidMemData	xdk/xdk_resources.h	/^      BYTE*       m_pVidMemData;        \/\/ Alloc'ed memory for resource data, etc.$/;"	m	class:PackedResource	access:protected
m_prev_return_status	deps/miniz/zlib.h	/^  tdefl_status m_prev_return_status;$/;"	m	struct:__anon132	access:public
m_raw_header	deps/miniz/zlib.h	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_saved_lit	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_saved_match_dist	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_saved_match_len	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_size	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon136	file:	access:public
m_size	deps/miniz/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon138	file:	access:public
m_sorted_central_dir_offsets	deps/miniz/miniz.c	/^  mz_zip_array m_sorted_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
m_src_buf_left	deps/miniz/zlib.h	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon132	access:public
m_state	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_sym_index	deps/miniz/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon134	file:	access:public
m_table_sizes	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_tables	deps/miniz/zlib.h	/^  tinfl_huff_table m_tables[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_time	deps/miniz/zlib.h	/^  time_t m_time;$/;"	m	struct:__anon117	access:public
m_total_files	deps/miniz/zlib.h	/^  mz_uint m_total_files;$/;"	m	struct:__anon119	access:public
m_total_lz_bytes	deps/miniz/zlib.h	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon132	access:public
m_tree	deps/miniz/zlib.h	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon124	access:public
m_type	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_uncomp_size	deps/miniz/zlib.h	/^  mz_uint64 m_uncomp_size;$/;"	m	struct:__anon117	access:public
m_version_made_by	deps/miniz/zlib.h	/^  mz_uint16 m_version_made_by;$/;"	m	struct:__anon117	access:public
m_version_needed	deps/miniz/zlib.h	/^  mz_uint16 m_version_needed;$/;"	m	struct:__anon117	access:public
m_wants_to_finish	deps/miniz/zlib.h	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon132	access:public
m_window_bits	deps/miniz/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon133	file:	access:public
m_xprResource	gfx/fonts/xdk360_fonts.cpp	/^static PackedResource m_xprResource;$/;"	v	file:
m_z_adler32	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_zhdr0	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_zhdr1	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
m_zip_mode	deps/miniz/zlib.h	/^  mz_zip_mode m_zip_mode;$/;"	m	struct:__anon119	access:public
maf_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool maf_enable;$/;"	m	struct:__anon190	access:public
maf_valid	gfx/context/sunxi_disp_ioctl.h	/^	__bool maf_valid;$/;"	m	struct:__anon189	access:public
mag	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	mag;$/;"	m	struct:rglGcmTextureFilter	access:public
magFilter	ps3/rgl/include/RGL/Types.h	/^      GLuint magFilter;$/;"	m	struct:__anon63	access:public
magic	tools/retrolaunch/cd_detect.c	/^    const char* magic;$/;"	m	struct:MagicEntry	file:	access:public
magic_bits32	ps3/altivec_mem.h	49;"	d
magic_bits64	ps3/altivec_mem.h	50;"	d
main	audio/test/main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	audio/test/snr.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	blackberry-qnx/bb10/src/main.cpp	/^Q_DECL_EXPORT int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	compat/rxml/rxml_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	console/test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	console/test.c	26;"	d	file:
main	frontend/frontend_emscripten.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	frontend/frontend_salamander.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	frontend/frontend_xenon.c	/^int main(void)$/;"	f	signature:(void)
main	frontend/frontend_xenon.c	36;"	d	file:
main	gfx/py_state/py_state.c	/^   PyObject *main;$/;"	m	struct:py_state	file:	access:public
main	gfx/rpng/rpng_test.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	ps3/ps3py/pkg.py	/^def main():$/;"	f	access:public
main	tools/cg2glsl.py	/^def main():$/;"	f	access:public
main	tools/retroarch-joyconfig.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	tools/retroarch-joyconfig.c	415;"	d	file:
main	tools/retrolaunch/main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	tools/retrolaunch/rl_fnmatch.c	/^int main() {$/;"	f
main_buffer	audio/sinc.c	/^   float *main_buffer;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
main_entry	frontend/frontend.c	108;"	d	file:
main_entry	frontend/frontend.c	123;"	d	file:
main_entry	frontend/frontend.c	138;"	d	file:
main_entry	frontend/frontend.c	93;"	d	file:
main_is_init	general.h	/^   bool main_is_init;$/;"	m	struct:global	access:public
mainloop	audio/pulse.c	/^   pa_threaded_mainloop *mainloop;$/;"	m	struct:__anon102	file:	access:public
mainloop	frontend/frontend_emscripten.c	/^static void mainloop(void)$/;"	f	file:	signature:(void)
make_d3dpp	gfx/d3d9/d3d9.cpp	/^void D3DVideo::make_d3dpp(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)$/;"	f	class:D3DVideo	signature:(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)
make_d3dpp	gfx/d3d9/d3d9.hpp	/^      void make_d3dpp(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp);$/;"	p	class:D3DVideo	access:private	signature:(const video_info_t &info, D3DPRESENT_PARAMETERS &d3dpp)
mallocCallCounts	ps3/image.c	/^   uint32_t mallocCallCounts;$/;"	m	struct:CtrlMallocArg	file:	access:public
mallocData	ps3/rgl/include/RGL/Types.h	/^      char *mallocData;$/;"	m	struct:rglImage_	access:public
mallocStorageSize	ps3/rgl/include/RGL/Types.h	/^      GLsizei mallocStorageSize;$/;"	m	struct:rglImage_	access:public
malloc_arg	ps3/sdk_defines.h	293;"	d
malloc_func	ps3/sdk_defines.h	292;"	d
manipulate	ps3/ps3py/crypt.c	/^static void manipulate(uint8_t *key) {$/;"	f	file:	signature:(uint8_t *key)
manipulate	ps3/ps3py/pkg.py	/^def manipulate(key):$/;"	f	access:public
manufacturer	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String manufacturer;$/;"	f	class:ModuleWrapper	file:	access:private
map	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	private final HashMap<String, String> map = new HashMap<String, String>();$/;"	f	class:ConfigFile	file:	access:private
map	blackberry-qnx/qnx_input.c	/^   int map;$/;"	m	struct:touches	file:	access:public
map	command.c	/^static const struct cmd_map map[] = {$/;"	v	typeref:struct:cmd_map	file:
mapAccess	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum mapAccess;	\/\/ READ_ONLY, WRITE_ONLY, or READ_WRITE$/;"	m	struct:__anon55	access:public
mapButton	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::mapButton(int player, int button)$/;"	f	class:ButtonMap	signature:(int player, int button)
mapButton	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE int mapButton(int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(int player, int button)
mapCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint mapCount;	\/\/ map reference count$/;"	m	struct:__anon55	access:public
mapDevice	blackberry-qnx/bb10/src/ButtonMap.cpp	/^void ButtonMap::mapDevice(int index, int player)$/;"	f	class:ButtonMap	signature:(int index, int player)
mapDevice	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE void mapDevice(int index, int player);$/;"	p	class:ButtonMap	access:public	signature:(int index, int player)
mapNextButtonPressed	blackberry-qnx/bb10/src/ButtonMap.cpp	/^int ButtonMap::mapNextButtonPressed()$/;"	f	class:ButtonMap	signature:()
mapNextButtonPressed	blackberry-qnx/bb10/src/ButtonMap.h	/^    int mapNextButtonPressed();$/;"	p	class:ButtonMap	access:public	signature:()
mapped	ps3/rgl/include/RGL/Types.h	/^      GLboolean mapped;$/;"	m	struct:rglBufferObject	access:public
mask	gfx/state_tracker.c	/^   uint16_t mask;$/;"	m	struct:state_tracker_internal	file:	access:public
mask	gfx/state_tracker.h	/^   uint16_t mask;$/;"	m	struct:state_tracker_uniform_info	access:public
mask	performance/performance_android.c	/^    uint32_t mask;$/;"	m	struct:__anon97	file:	access:public
mask	ps3/rgl/src/libelf/readelf.h	/^      unsigned int mask;$/;"	m	struct:__anon36	access:public
math_matrix	gfx/math/matrix.h	/^typedef struct math_matrix$/;"	s
math_matrix	gfx/math/matrix.h	/^} math_matrix;$/;"	t	typeref:struct:math_matrix
math_matrix::data	gfx/math/matrix.h	/^   float data[16];$/;"	m	struct:math_matrix	access:public
math_matrix_3x3	gfx/math/matrix_3x3.h	/^typedef struct math_matrix_3x3$/;"	s
math_matrix_3x3	gfx/math/matrix_3x3.h	/^} math_matrix_3x3;$/;"	t	typeref:struct:math_matrix_3x3
math_matrix_3x3::data	gfx/math/matrix_3x3.h	/^   float data[9];$/;"	m	struct:math_matrix_3x3	access:public
matrix_3x3_adjoint	gfx/math/matrix_3x3.c	/^void matrix_3x3_adjoint(math_matrix_3x3 *mat)$/;"	f	signature:(math_matrix_3x3 *mat)
matrix_3x3_adjoint	gfx/math/matrix_3x3.h	/^void matrix_3x3_adjoint(math_matrix_3x3 *mat);$/;"	p	signature:(math_matrix_3x3 *mat)
matrix_3x3_determinant	gfx/math/matrix_3x3.c	/^float matrix_3x3_determinant(const math_matrix_3x3 *mat)$/;"	f	signature:(const math_matrix_3x3 *mat)
matrix_3x3_determinant	gfx/math/matrix_3x3.h	/^float matrix_3x3_determinant(const math_matrix_3x3 *mat);$/;"	p	signature:(const math_matrix_3x3 *mat)
matrix_3x3_divide_scalar	gfx/math/matrix_3x3.c	/^void matrix_3x3_divide_scalar(math_matrix_3x3 *mat, const float s)$/;"	f	signature:(math_matrix_3x3 *mat, const float s)
matrix_3x3_divide_scalar	gfx/math/matrix_3x3.h	/^void matrix_3x3_divide_scalar(math_matrix_3x3 *mat, float s);$/;"	p	signature:(math_matrix_3x3 *mat, float s)
matrix_3x3_identity	gfx/math/matrix_3x3.c	/^void matrix_3x3_identity(math_matrix_3x3 *mat)$/;"	f	signature:(math_matrix_3x3 *mat)
matrix_3x3_identity	gfx/math/matrix_3x3.h	/^void matrix_3x3_identity(math_matrix_3x3 *mat);$/;"	p	signature:(math_matrix_3x3 *mat)
matrix_3x3_inits	gfx/math/matrix_3x3.c	/^void matrix_3x3_inits(math_matrix_3x3 *mat,$/;"	f	signature:(math_matrix_3x3 *mat, const float n11, const float n12, const float n13, const float n21, const float n22, const float n23, const float n31, const float n32, const float n33)
matrix_3x3_inits	gfx/math/matrix_3x3.h	/^void matrix_3x3_inits(math_matrix_3x3 *mat,$/;"	p	signature:(math_matrix_3x3 *mat, const float n11, const float n12, const float n13, const float n21, const float n22, const float n23, const float n31, const float n32, const float n33)
matrix_3x3_invert	gfx/math/matrix_3x3.c	/^bool matrix_3x3_invert(math_matrix_3x3 *mat)$/;"	f	signature:(math_matrix_3x3 *mat)
matrix_3x3_invert	gfx/math/matrix_3x3.h	/^bool matrix_3x3_invert(math_matrix_3x3 *mat);$/;"	p	signature:(math_matrix_3x3 *mat)
matrix_3x3_multiply	gfx/math/matrix_3x3.c	/^void matrix_3x3_multiply(math_matrix_3x3 *out,$/;"	f	signature:(math_matrix_3x3 *out, const math_matrix_3x3 *a, const math_matrix_3x3 *b)
matrix_3x3_multiply	gfx/math/matrix_3x3.h	/^void matrix_3x3_multiply(math_matrix_3x3 *out,$/;"	p	signature:(math_matrix_3x3 *out, const math_matrix_3x3 *a, const math_matrix_3x3 *b)
matrix_3x3_quad_to_quad	gfx/math/matrix_3x3.c	/^bool matrix_3x3_quad_to_quad(const float dx0, const float dy0,$/;"	f	signature:(const float dx0, const float dy0, const float dx1, const float dy1, const float dx2, const float dy2, const float dx3, const float dy3, const float sx0, const float sy0, const float sx1, const float sy1, const float sx2, const float sy2, const float sx3, const float sy3, math_matrix_3x3 *mat)
matrix_3x3_quad_to_quad	gfx/math/matrix_3x3.h	/^bool matrix_3x3_quad_to_quad(const float dx0, const float dy0,$/;"	p	signature:(const float dx0, const float dy0, const float dx1, const float dy1, const float dx2, const float dy2, const float dx3, const float dy3, const float sx0, const float sy0, const float sx1, const float sy1, const float sx2, const float sy2, const float sx3, const float sy3, math_matrix_3x3 *mat)
matrix_3x3_quad_to_square	gfx/math/matrix_3x3.c	/^bool matrix_3x3_quad_to_square(const float sx0, const float sy0,$/;"	f	signature:(const float sx0, const float sy0, const float sx1, const float sy1, const float sx2, const float sy2, const float sx3, const float sy3, math_matrix_3x3 *mat)
matrix_3x3_quad_to_square	gfx/math/matrix_3x3.h	/^bool matrix_3x3_quad_to_square(const float sx0, const float sy0,$/;"	p	signature:(const float sx0, const float sy0, const float sx1, const float sy1, const float sx2, const float sy2, const float sx3, const float sy3, math_matrix_3x3 *mat)
matrix_3x3_square_to_quad	gfx/math/matrix_3x3.c	/^bool matrix_3x3_square_to_quad(const float dx0, const float dy0,$/;"	f	signature:(const float dx0, const float dy0, const float dx1, const float dy1, const float dx3, const float dy3, const float dx2, const float dy2, math_matrix_3x3 *mat)
matrix_3x3_square_to_quad	gfx/math/matrix_3x3.h	/^bool matrix_3x3_square_to_quad(const float dx0, const float dy0,$/;"	p	signature:(const float dx0, const float dy0, const float dx1, const float dy1, const float dx3, const float dy3, const float dx2, const float dy2, math_matrix_3x3 *mat)
matrix_3x3_transpose	gfx/math/matrix_3x3.c	/^void matrix_3x3_transpose(math_matrix_3x3 *out, const math_matrix_3x3 *in)$/;"	f	signature:(math_matrix_3x3 *out, const math_matrix_3x3 *in)
matrix_3x3_transpose	gfx/math/matrix_3x3.h	/^void matrix_3x3_transpose(math_matrix_3x3 *out, const math_matrix_3x3 *in);$/;"	p	signature:(math_matrix_3x3 *out, const math_matrix_3x3 *in)
matrix_identity	gfx/math/matrix.c	/^void matrix_identity(math_matrix *mat)$/;"	f	signature:(math_matrix *mat)
matrix_load_identity	gfx/math/matrix.h	/^void matrix_load_identity(math_matrix *mat);$/;"	p	signature:(math_matrix *mat)
matrix_multiply	gfx/math/matrix.c	/^void matrix_multiply(math_matrix *out,$/;"	f	signature:(math_matrix *out, const math_matrix *a, const math_matrix *b)
matrix_multiply	gfx/math/matrix.h	/^void matrix_multiply(math_matrix *out, const math_matrix *a, const math_matrix *b);$/;"	p	signature:(math_matrix *out, const math_matrix *a, const math_matrix *b)
matrix_ortho	gfx/math/matrix.c	/^void matrix_ortho(math_matrix *mat,$/;"	f	signature:(math_matrix *mat, float left, float right, float bottom, float top, float znear, float zfar)
matrix_ortho	gfx/math/matrix.h	/^void matrix_ortho(math_matrix *mat,$/;"	p	signature:(math_matrix *mat, float left, float right, float bottom, float top, float znear, float zfar)
matrix_projection	gfx/math/matrix.c	/^void matrix_projection(math_matrix *out, float znear,$/;"	f	signature:(math_matrix *out, float znear, float zfar)
matrix_projection	gfx/math/matrix.h	/^void matrix_projection(math_matrix *out, float znear, float zfar);$/;"	p	signature:(math_matrix *out, float znear, float zfar)
matrix_rotate_x	gfx/math/matrix.c	/^void matrix_rotate_x(math_matrix *mat, float rad)$/;"	f	signature:(math_matrix *mat, float rad)
matrix_rotate_x	gfx/math/matrix.h	/^void matrix_rotate_x(math_matrix *mat, float rad);$/;"	p	signature:(math_matrix *mat, float rad)
matrix_rotate_y	gfx/math/matrix.c	/^void matrix_rotate_y(math_matrix *mat, float rad)$/;"	f	signature:(math_matrix *mat, float rad)
matrix_rotate_y	gfx/math/matrix.h	/^void matrix_rotate_y(math_matrix *mat, float rad);$/;"	p	signature:(math_matrix *mat, float rad)
matrix_rotate_z	gfx/math/matrix.c	/^void matrix_rotate_z(math_matrix *mat, float rad)$/;"	f	signature:(math_matrix *mat, float rad)
matrix_rotate_z	gfx/math/matrix.h	/^void matrix_rotate_z(math_matrix *mat, float rad);$/;"	p	signature:(math_matrix *mat, float rad)
matrix_scale	gfx/math/matrix.c	/^void matrix_scale(math_matrix *out, float x, float y,$/;"	f	signature:(math_matrix *out, float x, float y, float z)
matrix_scale	gfx/math/matrix.h	/^void matrix_scale(math_matrix *out, float x, float y, float z);$/;"	p	signature:(math_matrix *out, float x, float y, float z)
matrix_translate	gfx/math/matrix.c	/^void matrix_translate(math_matrix *out, float x,$/;"	f	signature:(math_matrix *out, float x, float y, float z)
matrix_translate	gfx/math/matrix.h	/^void matrix_translate(math_matrix *out, float x, float y, float z);$/;"	p	signature:(math_matrix *out, float x, float y, float z)
matrix_transpose	gfx/math/matrix.c	/^void matrix_transpose(math_matrix *out, const math_matrix *in)$/;"	f	signature:(math_matrix *out, const math_matrix *in)
matrix_transpose	gfx/math/matrix.h	/^void matrix_transpose(math_matrix *out, const math_matrix *in);$/;"	p	signature:(math_matrix *out, const math_matrix *in)
max	apple/common/hidpad/wiimote.h	/^		struct vec2b_t max;				\/**< maximum joystick values	*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
max	apple/common/setting_data.h	/^   double max;$/;"	m	struct:__anon161	access:public
max	audio/xaudio-c/xaudio-c.cpp	30;"	d	file:
max	audio/xaudio-c/xaudio-c.cpp	32;"	d	file:
max	gfx/d3d9/d3d9.cpp	48;"	d	file:
max	miscellaneous.h	46;"	d
maxAniso	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint maxAniso;$/;"	m	struct:rglGcmTextureControl0	access:public
maxAnisotropy	ps3/rgl/include/RGL/Types.h	/^      GLfloat maxAnisotropy;$/;"	m	struct:__anon63	access:public
maxLOD	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint maxLOD;$/;"	m	struct:rglGcmTextureControl0	access:public
maxLevel	ps3/rgl/include/RGL/Types.h	/^      GLuint maxLevel;$/;"	m	struct:__anon63	access:public
maxLod	ps3/rgl/include/RGL/Types.h	/^      GLfloat maxLod;$/;"	m	struct:__anon63	access:public
maxSPUs	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint 			maxSPUs;$/;"	m	struct:PSGLinitOptions	access:public
max_font_size	gfx/gl_common.h	/^   GLint max_font_size;$/;"	m	struct:gl	access:public
max_height	libretro.h	/^   unsigned max_height;    \/\/ Maximum possible height of game.$/;"	m	struct:retro_game_geometry	access:public
max_img_height	gfx/gl_common.h	/^   unsigned max_img_height;$/;"	m	struct:gl_fbo_rect	access:public
max_img_width	gfx/gl_common.h	/^   unsigned max_img_width;$/;"	m	struct:gl_fbo_rect	access:public
max_latency	audio/rsound.h	/^      int max_latency;$/;"	m	struct:rsound	access:public
max_width	libretro.h	/^   unsigned max_width;     \/\/ Maximum possible width of game.$/;"	m	struct:retro_game_geometry	access:public
measure_data	general.h	/^   } measure_data;$/;"	m	struct:global	typeref:struct:global::__anon236	access:public
mem	gfx/omap_gfx.c	/^  void* mem;$/;"	m	struct:omapfb_state	file:	access:public
memberCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short memberCount;$/;"	m	struct:_CgParameterStructure	access:public
memcpy	ps3/altivec_mem.h	443;"	d
memcpy	wii/app_booter/string.c	/^void *memcpy(void *dst, const void *src, size_t len)$/;"	f	signature:(void *dst, const void *src, size_t len)
memcpy	wii/app_booter/string.h	/^void *memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memoryBase	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    memoryBase;$/;"	m	struct:GmmAllocator	access:public
memoryBlock	ps3/rgl/include/Cg/CgCommon.h	/^   void *memoryBlock;$/;"	m	struct:_CGprogram	access:public
memoryFrequency	ps3/sdk_defines.h	479;"	d
memset	ps3/altivec_mem.h	444;"	d
memset	wii/app_booter/string.c	/^void *memset(void *b, int c, size_t len)$/;"	f	signature:(void *b, int c, size_t len)
memset	wii/app_booter/string.h	/^void *memset(void *b, int c, size_t len);$/;"	p	signature:(void *b, int c, size_t len)
memset_fwd_until_dst_word_aligned	ps3/altivec_mem.h	/^static inline void memset_fwd_until_dst_word_aligned(uint8_t *ptr, uint8_t c, size_t al)$/;"	f	signature:(uint8_t *ptr, uint8_t c, size_t al)
memset_fwd_until_simd_aligned	ps3/altivec_mem.h	/^static inline void memset_fwd_until_simd_aligned(word_t *ptr_w, word_t w, size_t al)$/;"	f	signature:(word_t *ptr_w, word_t w, size_t al)
memset_rest_words	ps3/altivec_mem.h	/^static inline void memset_rest_words(word_t *ptr_w, word_t w, size_t l)$/;"	f	signature:(word_t *ptr_w, word_t w, size_t l)
memset_set_blocks	ps3/altivec_mem.h	/^static inline void memset_set_blocks(word_t *ptr_w, word_t pw, uint8_t c, size_t blocks)$/;"	f	signature:(word_t *ptr_w, word_t pw, uint8_t c, size_t blocks)
menu_ascend_alphabet	frontend/menu/menu_common.c	/^static inline void menu_ascend_alphabet(void *data, size_t *ptr_out)$/;"	f	file:	signature:(void *data, size_t *ptr_out)
menu_binds	general.h	/^      struct retro_keybind menu_binds[RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
menu_build_scroll_indices	frontend/menu/menu_common.c	/^static void menu_build_scroll_indices(void *data, file_list_t *buf)$/;"	f	file:	signature:(void *data, file_list_t *buf)
menu_core_setting_toggle	frontend/menu/menu_settings.c	/^static int menu_core_setting_toggle(unsigned setting, unsigned action)$/;"	f	file:	signature:(unsigned setting, unsigned action)
menu_ctx	frontend/menu/menu_common.c	/^const menu_ctx_driver_t *menu_ctx;$/;"	v
menu_ctx_driver	frontend/menu/menu_context.h	/^typedef struct menu_ctx_driver$/;"	s
menu_ctx_driver::free	frontend/menu/menu_context.h	/^   void  (*free)(void*);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::free_assets	frontend/menu/menu_context.h	/^   void  (*free_assets)(void*);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::ident	frontend/menu/menu_context.h	/^   const char *ident;$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::init	frontend/menu/menu_context.h	/^   void* (*init)(void);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::init_assets	frontend/menu/menu_context.h	/^   void  (*init_assets)(void*);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::iterate	frontend/menu/menu_context.h	/^   void  (*iterate)(void*, unsigned);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::populate_entries	frontend/menu/menu_context.h	/^   void  (*populate_entries)(void*, unsigned);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::render	frontend/menu/menu_context.h	/^   void  (*render)(void*);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::render_messagebox	frontend/menu/menu_context.h	/^   void  (*render_messagebox)(void*, const char*);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver::set_texture	frontend/menu/menu_context.h	/^   void  (*set_texture)(void*, bool);$/;"	m	struct:menu_ctx_driver	access:public
menu_ctx_driver_t	frontend/menu/menu_context.h	/^} menu_ctx_driver_t;$/;"	t	typeref:struct:menu_ctx_driver
menu_ctx_drivers	frontend/menu/menu_context.c	/^static const menu_ctx_driver_t *menu_ctx_drivers[] = {$/;"	v	file:
menu_ctx_find_driver	frontend/menu/menu_context.c	/^const menu_ctx_driver_t *menu_ctx_find_driver(const char *ident)$/;"	f	signature:(const char *ident)
menu_ctx_find_driver	frontend/menu/menu_context.h	/^const menu_ctx_driver_t *menu_ctx_find_driver(const char *ident); \/\/ Finds driver with ident. Does not initialize.$/;"	p	signature:(const char *ident)
menu_ctx_init_first	frontend/menu/menu_context.c	/^bool menu_ctx_init_first(const menu_ctx_driver_t **driver, void **data)$/;"	f	signature:(const menu_ctx_driver_t **driver, void **data)
menu_ctx_init_first	frontend/menu/menu_context.h	/^bool menu_ctx_init_first(const menu_ctx_driver_t **driver, void **handle); \/\/ Finds first suitable driver and initializes.$/;"	p	signature:(const menu_ctx_driver_t **driver, void **handle)
menu_ctx_rgui	frontend/menu/disp/rgui.c	/^const menu_ctx_driver_t menu_ctx_rgui = {$/;"	v
menu_ctx_rmenu	frontend/menu/disp/rmenu.c	/^const menu_ctx_driver_t menu_ctx_rmenu = {$/;"	v
menu_ctx_rmenu_xui	frontend/menu/rmenu_xui.cpp	/^const menu_ctx_driver_t menu_ctx_rmenu_xui = {$/;"	v
menu_custom_bind_iterate	frontend/menu/menu_common.c	/^static int menu_custom_bind_iterate(void *data, unsigned action)$/;"	f	file:	signature:(void *data, unsigned action)
menu_data	gx/gx_video.h	/^   uint32_t *menu_data; \/\/ FIXME: Should be const uint16_t*.$/;"	m	struct:gx_video	access:public
menu_descend_alphabet	frontend/menu/menu_common.c	/^static inline void menu_descend_alphabet(void *data, size_t *ptr_out)$/;"	f	file:	signature:(void *data, size_t *ptr_out)
menu_enums	general.h	/^enum menu_enums$/;"	g
menu_flush_stack_type	frontend/menu/menu_common.c	/^static void menu_flush_stack_type(void *data, unsigned final_type)$/;"	f	file:	signature:(void *data, unsigned final_type)
menu_framebuf	frontend/menu/disp/rgui.c	/^static uint16_t menu_framebuf[400 * 240];$/;"	v	file:
menu_free	frontend/menu/menu_common.c	/^void menu_free(void)$/;"	f	signature:(void)
menu_free	frontend/menu/menu_common.h	/^void menu_free(void);$/;"	p	signature:(void)
menu_init	frontend/menu/menu_common.c	/^void menu_init(void)$/;"	f	signature:(void)
menu_init	frontend/menu/menu_common.h	/^void menu_init(void);$/;"	p	signature:(void)
menu_init_core_info	frontend/menu/menu_common.c	/^void menu_init_core_info(void *data)$/;"	f	signature:(void *data)
menu_init_core_info	frontend/menu/menu_common.h	/^void menu_init_core_info(void *data);$/;"	p	signature:(void *data)
menu_init_enable	frontend/frontend.c	190;"	d	file:
menu_init_enable	frontend/frontend.c	193;"	d	file:
menu_init_history	frontend/menu/menu_common.c	/^static void menu_init_history(void)$/;"	f	file:	signature:(void)
menu_input	frontend/menu/menu_common.c	/^static uint64_t menu_input(void)$/;"	f	file:	signature:(void)
menu_iterate	frontend/menu/menu_common.c	/^bool menu_iterate(void)$/;"	f	signature:(void)
menu_iterate	frontend/menu/menu_common.h	/^bool menu_iterate(void);$/;"	p	signature:(void)
menu_iterate_func	frontend/menu/menu_common.c	/^static int menu_iterate_func(void *data, unsigned action)$/;"	f	file:	signature:(void *data, unsigned action)
menu_iterate_func	frontend/menu/menu_common.c	/^static int menu_iterate_func(void *data, unsigned action);$/;"	p	file:	signature:(void *data, unsigned action)
menu_iterate_xui	frontend/menu/rmenu_xui.cpp	/^bool menu_iterate_xui(void)$/;"	f	signature:(void)
menu_iterate_xui	xdk/xdk_d3d.cpp	/^extern bool menu_iterate_xui(void);$/;"	p	file:	signature:(void)
menu_key_event	frontend/menu/menu_common.c	/^void menu_key_event(bool down, unsigned keycode, uint32_t character, uint16_t mod)$/;"	f	signature:(bool down, unsigned keycode, uint32_t character, uint16_t mod)
menu_key_event	frontend/menu/menu_common.h	/^void menu_key_event(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers);$/;"	p	signature:(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers)
menu_list_elem_is_dir	frontend/menu/menu_common.c	/^static inline bool menu_list_elem_is_dir(file_list_t *buf, unsigned offset)$/;"	f	file:	signature:(file_list_t *buf, unsigned offset)
menu_list_get_first_char	frontend/menu/menu_common.c	/^static inline int menu_list_get_first_char(file_list_t *buf, unsigned offset)$/;"	f	file:	signature:(file_list_t *buf, unsigned offset)
menu_parse_and_resolve	frontend/menu/menu_common.c	/^void menu_parse_and_resolve(void *data, unsigned menu_type)$/;"	f	signature:(void *data, unsigned menu_type)
menu_parse_and_resolve	frontend/menu/menu_common.h	/^void menu_parse_and_resolve(void *data, unsigned menu_type);$/;"	p	signature:(void *data, unsigned menu_type)
menu_poll_bind_get_rested_axes	frontend/menu/menu_common.c	/^void menu_poll_bind_get_rested_axes(struct rgui_bind_state *state)$/;"	f	signature:(struct rgui_bind_state *state)
menu_poll_bind_get_rested_axes	frontend/menu/menu_common.h	/^void menu_poll_bind_get_rested_axes(struct rgui_bind_state *state);$/;"	p	signature:(struct rgui_bind_state *state)
menu_poll_bind_state	frontend/menu/menu_common.c	/^void menu_poll_bind_state(struct rgui_bind_state *state)$/;"	f	signature:(struct rgui_bind_state *state)
menu_poll_bind_state	frontend/menu/menu_common.h	/^void menu_poll_bind_state(struct rgui_bind_state *state);$/;"	p	signature:(struct rgui_bind_state *state)
menu_poll_find_trigger	frontend/menu/menu_common.c	/^bool menu_poll_find_trigger(struct rgui_bind_state *state, struct rgui_bind_state *new_state)$/;"	f	signature:(struct rgui_bind_state *state, struct rgui_bind_state *new_state)
menu_poll_find_trigger	frontend/menu/menu_common.h	/^bool menu_poll_find_trigger(struct rgui_bind_state *state, struct rgui_bind_state *new_state);$/;"	p	signature:(struct rgui_bind_state *state, struct rgui_bind_state *new_state)
menu_poll_find_trigger_pad	frontend/menu/menu_common.c	/^static bool menu_poll_find_trigger_pad(struct rgui_bind_state *state, struct rgui_bind_state *new_state, unsigned p)$/;"	f	file:	signature:(struct rgui_bind_state *state, struct rgui_bind_state *new_state, unsigned p)
menu_populate_entries	frontend/menu/menu_common.c	/^void menu_populate_entries(void *data, unsigned menu_type)$/;"	f	signature:(void *data, unsigned menu_type)
menu_populate_entries	frontend/menu/menu_common.h	/^void menu_populate_entries(void *data, unsigned menu_type);$/;"	p	signature:(void *data, unsigned menu_type)
menu_replace_config	frontend/menu/menu_common.c	/^bool menu_replace_config(const char *path)$/;"	f	signature:(const char *path)
menu_replace_config	frontend/menu/menu_common.h	/^bool menu_replace_config(const char *path);$/;"	p	signature:(const char *path)
menu_rom_history_push	frontend/menu/menu_common.c	/^void menu_rom_history_push(const char *path,$/;"	f	signature:(const char *path, const char *core_path, const char *core_name)
menu_rom_history_push	frontend/menu/menu_common.h	/^void menu_rom_history_push(const char *path, const char *core_path,$/;"	p	signature:(const char *path, const char *core_path, const char *core_name)
menu_rom_history_push_current	frontend/menu/menu_common.c	/^void menu_rom_history_push_current(void)$/;"	f	signature:(void)
menu_rom_history_push_current	frontend/menu/menu_common.h	/^void menu_rom_history_push_current(void);$/;"	p	signature:(void)
menu_save_new_config	frontend/menu/menu_common.c	/^bool menu_save_new_config(void)$/;"	f	signature:(void)
menu_save_new_config	frontend/menu/menu_common.h	/^bool menu_save_new_config(void);$/;"	p	signature:(void)
menu_search_callback	frontend/menu/menu_common.c	/^static void menu_search_callback(void *userdata, const char *str)$/;"	f	file:	signature:(void *userdata, const char *str)
menu_set_settings	frontend/menu/menu_common.h	/^int menu_set_settings(void *data, unsigned setting, unsigned action);$/;"	p	signature:(void *data, unsigned setting, unsigned action)
menu_set_settings	frontend/menu/menu_settings.c	/^int menu_set_settings(void *data, unsigned setting, unsigned action)$/;"	f	signature:(void *data, unsigned setting, unsigned action)
menu_set_settings_label	frontend/menu/menu_common.h	/^void menu_set_settings_label(char *type_str, size_t type_str_size, unsigned *w, unsigned type);$/;"	p	signature:(char *type_str, size_t type_str_size, unsigned *w, unsigned type)
menu_set_settings_label	frontend/menu/menu_settings.c	/^void menu_set_settings_label(char *type_str, size_t type_str_size, unsigned *w, unsigned type)$/;"	f	signature:(char *type_str, size_t type_str_size, unsigned *w, unsigned type)
menu_settings_create_menu_item_label_w	frontend/menu/rmenu_xui.cpp	/^static void menu_settings_create_menu_item_label_w(wchar_t *strwbuf, unsigned setting, size_t size)$/;"	f	file:	signature:(wchar_t *strwbuf, unsigned setting, size_t size)
menu_settings_iterate	frontend/menu/menu_common.c	/^static int menu_settings_iterate(void *data, unsigned action)$/;"	f	file:	signature:(void *data, unsigned action)
menu_settings_toggle_setting	frontend/menu/menu_common.h	/^int menu_settings_toggle_setting(void *data, unsigned setting, unsigned action, unsigned menu_type);$/;"	p	signature:(void *data, unsigned setting, unsigned action, unsigned menu_type)
menu_settings_toggle_setting	frontend/menu/menu_settings.c	/^int menu_settings_toggle_setting(void *data, unsigned setting, unsigned action, unsigned menu_type)$/;"	f	signature:(void *data, unsigned setting, unsigned action, unsigned menu_type)
menu_stack	frontend/menu/menu_common.h	/^   file_list_t *menu_stack;$/;"	m	struct:__anon25	access:public
menu_start_screen_iterate	frontend/menu/menu_common.c	/^static int menu_start_screen_iterate(void *data, unsigned action)$/;"	f	file:	signature:(void *data, unsigned action)
menu_texture	frontend/menu/disp/rmenu.c	/^struct texture_image *menu_texture;$/;"	v	typeref:struct:texture_image
menu_texture_inited	frontend/menu/disp/rmenu.c	/^static bool menu_texture_inited =false;$/;"	v	file:
menu_texture_path	general.h	/^   char menu_texture_path[PATH_MAX];$/;"	m	struct:global	access:public
menu_ticker_line	frontend/menu/menu_common.c	/^void menu_ticker_line(char *buf, size_t len, unsigned index, const char *str, bool selected)$/;"	f	signature:(char *buf, size_t len, unsigned index, const char *str, bool selected)
menu_ticker_line	frontend/menu/menu_common.h	/^void menu_ticker_line(char *buf, size_t len, unsigned tick, const char *str, bool selected);$/;"	p	signature:(char *buf, size_t len, unsigned tick, const char *str, bool selected)
menu_toggle_behavior	general.h	/^   unsigned menu_toggle_behavior;$/;"	m	struct:global	access:public
menu_type_is	frontend/menu/menu_common.h	/^unsigned menu_type_is(unsigned type);$/;"	p	signature:(unsigned type)
menu_type_is	frontend/menu/menu_settings.c	/^unsigned menu_type_is(unsigned type)$/;"	f	signature:(unsigned type)
menu_update_libretro_info	frontend/menu/menu_common.c	/^static void menu_update_libretro_info(void)$/;"	f	file:	signature:(void)
menu_viewport_iterate	frontend/menu/menu_common.c	/^static int menu_viewport_iterate(void *data, unsigned action)$/;"	f	file:	signature:(void *data, unsigned action)
menuloop	frontend/frontend_emscripten.c	/^static bool menuloop;$/;"	v	file:
message	ps3/ps3_input_osk.c	/^   wchar_t message[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
message	retroarch-mingw-build.sh	/^message()$/;"	f
message_color	config.def.h	/^static const uint32_t message_color = 0xffff00; \/\/ RGB hex value.$/;"	v
message_pos_offset_x	config.def.h	/^static const float message_pos_offset_x = 0.05;$/;"	v
message_pos_offset_y	config.def.h	/^static const float message_pos_offset_y = 0.05;$/;"	v
meta	input/input_common.h	/^   unsigned meta;$/;"	m	struct:input_bind_map	access:public
meta	libretro.h	/^   const char *meta;       \/\/ String of implementation specific meta-data.$/;"	m	struct:retro_game_info	access:public
methods	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureMethods 		methods; \/\/ [RSTENSON] soon to be legacy$/;"	m	struct:__anon53	access:public
mi	gfx/omap_gfx.c	/^  struct omapfb_mem_info mi;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::omapfb_mem_info	file:	access:public
mice_connected	ps3/ps3_input.c	/^   unsigned mice_connected;$/;"	m	struct:ps3_input	file:	access:public
min	apple/common/hidpad/wiimote.h	/^		struct vec2b_t min;				\/**< minimum joystick values	*\/$/;"	m	struct:joystick_t	typeref:struct:joystick_t::vec2b_t	access:public
min	apple/common/setting_data.h	/^   double min;$/;"	m	struct:__anon161	access:public
min	audio/test/snr.c	26;"	d	file:
min	audio/test/snr.c	27;"	d	file:
min	audio/xaudio-c/xaudio-c.cpp	29;"	d	file:
min	audio/xaudio-c/xaudio-c.cpp	31;"	d	file:
min	gfx/d3d9/d3d9.cpp	47;"	d	file:
min	miscellaneous.h	50;"	d
min	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	min;$/;"	m	struct:rglGcmTextureFilter	access:public
minFilter	ps3/rgl/include/RGL/Types.h	/^      GLuint minFilter;$/;"	m	struct:__anon63	access:public
minLOD	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint minLOD;$/;"	m	struct:rglGcmTextureControl0	access:public
minLod	ps3/rgl/include/RGL/Types.h	/^      GLfloat minLod;$/;"	m	struct:__anon63	access:public
min_file_pos	movie.c	/^   size_t min_file_pos;$/;"	m	struct:bsv_movie	file:	access:public
minimum_frame_time	general.h	/^      retro_time_t minimum_frame_time;$/;"	m	struct:global::__anon233	access:public
miniz_fopen	deps/minizip/unzip.c	/^static void *miniz_fopen(const char *filename, int mode)$/;"	f	file:	signature:(const char *filename, int mode)
miniz_fread	deps/minizip/unzip.c	/^static inline uLong miniz_fread (voidpf stream, void *buf, uLong size)$/;"	f	file:	signature:(voidpf stream, void *buf, uLong size)
miniz_fseek	deps/minizip/unzip.c	/^static long miniz_fseek(voidpf stream, uLong offset, int origin)$/;"	f	file:	signature:(voidpf stream, uLong offset, int origin)
miss_count	gfx/thread_wrapper.c	/^   unsigned miss_count;$/;"	m	struct:thread_video	file:	access:public
missing	core_info.h	/^   bool missing; \/\/ Set once to avoid opening the same file several times.$/;"	m	struct:__anon251	access:public
mkdir	msvc/msvc_compat.h	35;"	d
mod	gfx/thread_wrapper.c	/^         float mod;$/;"	m	struct:thread_video::__anon215::__anon218	file:	access:public
mod_h	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
mod_h	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
mod_map	input/udev_input.c	/^   } mod_map[5];$/;"	m	struct:udev_input	typeref:struct:udev_input::__anon92	file:	access:public
mod_w	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
mod_w	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
mod_x	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
mod_x	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
mod_x	input/udev_input.c	/^         float mod_x, mod_y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
mod_y	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
mod_y	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
mod_y	input/udev_input.c	/^         float mod_x, mod_y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
mode	general.h	/^         unsigned mode;$/;"	m	struct:global::__anon242::__anon246	access:public
mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_layer_work_mode_t mode; \/* layer work mode *\/$/;"	m	struct:__anon187	access:public
mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_layer_work_mode_t mode;$/;"	m	struct:__anon201	access:public
mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_mod_t mode;$/;"	m	struct:__anon186	access:public
mode	ps3/rgl/include/RGL/Types.h	/^      GLenum	mode;$/;"	m	struct:__anon67	access:public
modern	gfx/shader_parse.h	/^   bool modern; \/\/ Only used for XML shaders.$/;"	m	struct:gfx_shader	access:public
modified_bessel	audio/test/modified_bessel.m	/^function val = modified_bessel(x)$/;"	f
modify_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
modify_data	patch.c	/^   const uint8_t *modify_data, *source_data; $/;"	m	struct:bps_data	file:	access:public
modify_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
modify_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
module1	ps3/ps3py/setup.py	/^module1 = Extension('pkgcrypt', sources = ['crypt.c'])$/;"	v
monitor	input/udev_input.c	/^   struct udev_monitor *monitor;$/;"	m	struct:udev_input	typeref:struct:udev_input::udev_monitor	file:	access:public
monitor_enum_proc	gfx/context/wgl_ctx.c	/^static BOOL CALLBACK monitor_enum_proc(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, LPARAM dwData)$/;"	f	file:	signature:(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, LPARAM dwData)
monitor_enum_proc	gfx/d3d9/d3d9.cpp	/^static BOOL CALLBACK monitor_enum_proc(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, LPARAM dwData)$/;"	f	file:	signature:(HMONITOR hMonitor, HDC hdcMonitor, LPRECT lprcMonitor, LPARAM dwData)
monitor_index	config.def.h	/^static const unsigned monitor_index = 0; \/\/ Which monitor to prefer. 0 is any monitor, 1 and up selects specific monitors, 1 being the first monitor.$/;"	v
monitor_index	general.h	/^      unsigned monitor_index;$/;"	m	struct:settings::__anon227	access:public
monitor_info	gfx/context/wgl_ctx.c	/^static void monitor_info(MONITORINFOEX *mon, HMONITOR *hm_to_use)$/;"	f	file:	signature:(MONITORINFOEX *mon, HMONITOR *hm_to_use)
monitor_info	gfx/context/wgl_ctx.c	/^static void monitor_info(MONITORINFOEX *mon, HMONITOR *hm_to_use);$/;"	p	file:	signature:(MONITORINFOEX *mon, HMONITOR *hm_to_use)
monitor_rect	gfx/d3d9/d3d9.cpp	/^RECT D3DVideo::monitor_rect()$/;"	f	class:D3DVideo	signature:()
monitor_rect	gfx/d3d9/d3d9.hpp	/^      RECT monitor_rect();$/;"	p	class:D3DVideo	access:private	signature:()
motors	apple/common/hidpad/apple_ps3_pad.c	/^   uint16_t motors[2];$/;"	m	struct:hidpad_ps3_data	file:	access:public
mounted	frontend/platform/platform_gx.c	/^   bool mounted;$/;"	m	struct:__anon13	file:	access:public
mouse	input/dinput.c	/^   LPDIRECTINPUTDEVICE8 mouse;$/;"	m	struct:dinput_input	file:	access:public
mouse_abs_x	input/sdl_input.c	/^   int mouse_abs_x, mouse_abs_y;$/;"	m	struct:sdl_input	file:	access:public
mouse_abs_y	input/sdl_input.c	/^   int mouse_abs_x, mouse_abs_y;$/;"	m	struct:sdl_input	file:	access:public
mouse_buttons	apple/common/apple_input.h	/^   uint32_t mouse_buttons;$/;"	m	struct:__anon160	access:public
mouse_delta	apple/common/apple_input.h	/^   int16_t mouse_delta[2];$/;"	m	struct:__anon160	access:public
mouse_l	emscripten/RWebInput.h	/^   char mouse_l;$/;"	m	struct:rwebinput_state	access:public
mouse_l	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
mouse_l	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
mouse_l	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
mouse_l	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
mouse_last_x	input/x11_input.c	/^   int mouse_last_x, mouse_last_y;$/;"	m	struct:x11_input	file:	access:public
mouse_last_y	input/x11_input.c	/^   int mouse_last_x, mouse_last_y;$/;"	m	struct:x11_input	file:	access:public
mouse_m	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
mouse_m	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
mouse_m	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
mouse_m	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
mouse_r	emscripten/RWebInput.h	/^   char mouse_r;$/;"	m	struct:rwebinput_state	access:public
mouse_r	input/dinput.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:dinput_input	file:	access:public
mouse_r	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
mouse_r	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
mouse_r	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
mouse_rel_x	input/dinput.c	/^   int mouse_rel_x;$/;"	m	struct:dinput_input	file:	access:public
mouse_rel_x	libretro-test/libretro-test.c	/^static int mouse_rel_x;$/;"	v	file:
mouse_rel_y	input/dinput.c	/^   int mouse_rel_y;$/;"	m	struct:dinput_input	file:	access:public
mouse_rel_y	libretro-test/libretro-test.c	/^static int mouse_rel_y;$/;"	v	file:
mouse_x	emscripten/RWebInput.h	/^   int mouse_x;$/;"	m	struct:rwebinput_state	access:public
mouse_x	input/dinput.c	/^   int mouse_x;$/;"	m	struct:dinput_input	file:	access:public
mouse_x	input/sdl_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:sdl_input	file:	access:public
mouse_x	input/udev_input.c	/^   int16_t mouse_x;$/;"	m	struct:udev_input	file:	access:public
mouse_x	input/x11_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:x11_input	file:	access:public
mouse_y	emscripten/RWebInput.h	/^   int mouse_y;$/;"	m	struct:rwebinput_state	access:public
mouse_y	input/dinput.c	/^   int mouse_y;$/;"	m	struct:dinput_input	file:	access:public
mouse_y	input/sdl_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:sdl_input	file:	access:public
mouse_y	input/udev_input.c	/^   int16_t mouse_y;$/;"	m	struct:udev_input	file:	access:public
mouse_y	input/x11_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:x11_input	file:	access:public
movie	general.h	/^      bsv_movie_t *movie;$/;"	m	struct:global::__anon238	access:public
movie_end	general.h	/^      bool movie_end;$/;"	m	struct:global::__anon238	access:public
movie_path	general.h	/^      char movie_path[PATH_MAX];$/;"	m	struct:global::__anon238	access:public
movie_playback	general.h	/^      bool movie_playback;$/;"	m	struct:global::__anon238	access:public
movie_record_toggle	retroarch.c	/^static void movie_record_toggle(void)$/;"	f	file:	signature:(void)
movie_start_path	general.h	/^      char movie_start_path[PATH_MAX];$/;"	m	struct:global::__anon238	access:public
movie_start_playback	general.h	/^      bool movie_start_playback;$/;"	m	struct:global::__anon238	access:public
movie_start_recording	general.h	/^      bool movie_start_recording;$/;"	m	struct:global::__anon238	access:public
ms	ps3/rgl/src/include/rgl-typedefs.h	/^   const MODESTRUC *ms;$/;"	m	struct:__anon50	access:public
msg	deps/miniz/zlib.h	/^  char *msg;                        \/\/ error msg (unused)$/;"	m	struct:mz_stream_s	access:public
msg	gfx/thread_wrapper.c	/^      char msg[1024];$/;"	m	struct:thread_video::__anon221	file:	access:public
msg	libretro.h	/^   const char *msg;        \/\/ Message to be displayed.$/;"	m	struct:retro_message	access:public
msg	message_queue.c	/^   char *msg;$/;"	m	struct:queue_elem	file:	access:public
msg_color_b	general.h	/^      float msg_color_b;$/;"	m	struct:settings::__anon227	access:public
msg_color_g	general.h	/^      float msg_color_g;$/;"	m	struct:settings::__anon227	access:public
msg_color_r	general.h	/^      float msg_color_r;$/;"	m	struct:settings::__anon227	access:public
msg_force	frontend/menu/menu_common.h	/^   bool msg_force;$/;"	m	struct:__anon25	access:public
msg_pos_x	general.h	/^      float msg_pos_x;$/;"	m	struct:settings::__anon227	access:public
msg_pos_y	general.h	/^      float msg_pos_y;$/;"	m	struct:settings::__anon227	access:public
msg_queue	general.h	/^   msg_queue_t *msg_queue;$/;"	m	struct:global	access:public
msg_queue	message_queue.c	/^struct msg_queue$/;"	s	file:
msg_queue::elems	message_queue.c	/^   struct queue_elem **elems;$/;"	m	struct:msg_queue	typeref:struct:msg_queue::queue_elem	file:	access:public
msg_queue::ptr	message_queue.c	/^   size_t ptr;$/;"	m	struct:msg_queue	file:	access:public
msg_queue::size	message_queue.c	/^   size_t size;$/;"	m	struct:msg_queue	file:	access:public
msg_queue::tmp_msg	message_queue.c	/^   char *tmp_msg;$/;"	m	struct:msg_queue	file:	access:public
msg_queue_clear	message_queue.c	/^void msg_queue_clear(msg_queue_t *queue)$/;"	f	signature:(msg_queue_t *queue)
msg_queue_clear	message_queue.h	/^void msg_queue_clear(msg_queue_t *queue);$/;"	p	signature:(msg_queue_t *queue)
msg_queue_free	message_queue.c	/^void msg_queue_free(msg_queue_t *queue)$/;"	f	signature:(msg_queue_t *queue)
msg_queue_free	message_queue.h	/^void msg_queue_free(msg_queue_t *queue);$/;"	p	signature:(msg_queue_t *queue)
msg_queue_new	message_queue.c	/^msg_queue_t *msg_queue_new(size_t size)$/;"	f	signature:(size_t size)
msg_queue_new	message_queue.h	/^msg_queue_t *msg_queue_new(size_t size);$/;"	p	signature:(size_t size)
msg_queue_pull	message_queue.c	/^const char *msg_queue_pull(msg_queue_t *queue)$/;"	f	signature:(msg_queue_t *queue)
msg_queue_pull	message_queue.h	/^const char *msg_queue_pull(msg_queue_t *queue);$/;"	p	signature:(msg_queue_t *queue)
msg_queue_push	message_queue.c	/^void msg_queue_push(msg_queue_t *queue, const char *msg, unsigned prio, unsigned duration)$/;"	f	signature:(msg_queue_t *queue, const char *msg, unsigned prio, unsigned duration)
msg_queue_push	message_queue.h	/^void msg_queue_push(msg_queue_t *queue, const char *msg, unsigned prio, unsigned duration);$/;"	p	signature:(msg_queue_t *queue, const char *msg, unsigned prio, unsigned duration)
msg_queue_t	message_queue.h	/^typedef struct msg_queue msg_queue_t;$/;"	t	typeref:struct:msg_queue
msgread	frontend/platform/platform_android.h	/^   int msgread;$/;"	m	struct:android_app	access:public
msgwrite	frontend/platform/platform_android.h	/^   int msgwrite;$/;"	m	struct:android_app	access:public
mtxIdxHi	gx/gx_video_inl.h	/^	u32 mtxIdxHi;$/;"	m	struct:__gx_regdef	access:public
mtxIdxLo	gx/gx_video_inl.h	/^	u32 mtxIdxLo;$/;"	m	struct:__gx_regdef	access:public
multisample	libretro-test-gl/libretro-test.c	/^static unsigned multisample;$/;"	v	file:
multisample_fbo	libretro-test-gl/libretro-test.c	/^static bool multisample_fbo;$/;"	v	file:
multisamplingMode	ps3/rgl/include/export/RGL/rgl.h	/^   GLenum multisamplingMode;$/;"	m	struct:__anon72	access:public
multitap	tools/retrolaunch/main.c	/^	int multitap;$/;"	m	struct:RunInfo	file:	access:public
mute	general.h	/^      bool mute;$/;"	m	struct:global::__anon235	access:public
mutex	audio/rsound.h	/^         slock_t *mutex;$/;"	m	struct:rsound::__anon106	access:public
mutex	frontend/platform/platform_android.h	/^   slock_t *mutex;$/;"	m	struct:android_app	access:public
muxer	record/ffemu.c	/^   struct ff_muxer_info muxer;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_muxer_info	file:	access:public
mvp	gfx/gl_common.h	/^   math_matrix mvp, mvp_no_rot;$/;"	m	struct:gl	access:public
mvp	gfx/shader_cg.c	/^   CGparameter mvp;$/;"	m	struct:cg_program	file:	access:public
mvp	gfx/shader_glsl.c	/^   int mvp;$/;"	m	struct:shader_uniforms	file:	access:public
mvp	gfx/shader_hlsl.c	/^   D3DXHANDLE   mvp;$/;"	m	struct:hlsl_program	file:	access:public
mvp_no_rot	gfx/gl_common.h	/^   math_matrix mvp, mvp_no_rot;$/;"	m	struct:gl	access:public
mvp_val	gfx/shader_hlsl.c	/^   XMMATRIX mvp_val;   \/* TODO: Move to D3DXMATRIX here *\/$/;"	m	struct:hlsl_program	file:	access:public
mz_adler32	deps/miniz/miniz.c	/^mz_ulong mz_adler32(mz_ulong adler, const unsigned char *ptr, size_t buf_len)$/;"	f	signature:(mz_ulong adler, const unsigned char *ptr, size_t buf_len)
mz_adler32	deps/miniz/zlib.h	/^mz_ulong mz_adler32(mz_ulong adler, const unsigned char *ptr, size_t buf_len);$/;"	p	signature:(mz_ulong adler, const unsigned char *ptr, size_t buf_len)
mz_alloc_func	deps/miniz/zlib.h	/^typedef void *(*mz_alloc_func)(void *opaque, size_t items, size_t size);$/;"	t
mz_bitmasks	deps/miniz/miniz.c	/^static const mz_uint mz_bitmasks[17] = { 0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F, 0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF, 0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF };$/;"	v	file:
mz_bool	deps/miniz/zlib.h	/^typedef int mz_bool;$/;"	t
mz_compress	deps/miniz/miniz.c	/^int mz_compress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)$/;"	f	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)
mz_compress	deps/miniz/zlib.h	/^int mz_compress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len);$/;"	p	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)
mz_compress2	deps/miniz/miniz.c	/^int mz_compress2(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len, int level)$/;"	f	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len, int level)
mz_compress2	deps/miniz/zlib.h	/^int mz_compress2(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len, int level);$/;"	p	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len, int level)
mz_compressBound	deps/miniz/miniz.c	/^mz_ulong mz_compressBound(mz_ulong source_len)$/;"	f	signature:(mz_ulong source_len)
mz_compressBound	deps/miniz/zlib.h	/^mz_ulong mz_compressBound(mz_ulong source_len);$/;"	p	signature:(mz_ulong source_len)
mz_crc32	deps/miniz/miniz.c	/^mz_ulong mz_crc32(mz_ulong crc, const mz_uint8 *ptr, size_t buf_len)$/;"	f	signature:(mz_ulong crc, const mz_uint8 *ptr, size_t buf_len)
mz_crc32	deps/miniz/zlib.h	/^mz_ulong mz_crc32(mz_ulong crc, const unsigned char *ptr, size_t buf_len);$/;"	p	signature:(mz_ulong crc, const unsigned char *ptr, size_t buf_len)
mz_deflate	deps/miniz/miniz.c	/^int mz_deflate(mz_streamp pStream, int flush)$/;"	f	signature:(mz_streamp pStream, int flush)
mz_deflate	deps/miniz/zlib.h	/^int mz_deflate(mz_streamp pStream, int flush);$/;"	p	signature:(mz_streamp pStream, int flush)
mz_deflateBound	deps/miniz/miniz.c	/^mz_ulong mz_deflateBound(mz_streamp pStream, mz_ulong source_len)$/;"	f	signature:(mz_streamp pStream, mz_ulong source_len)
mz_deflateBound	deps/miniz/zlib.h	/^mz_ulong mz_deflateBound(mz_streamp pStream, mz_ulong source_len);$/;"	p	signature:(mz_streamp pStream, mz_ulong source_len)
mz_deflateEnd	deps/miniz/miniz.c	/^int mz_deflateEnd(mz_streamp pStream)$/;"	f	signature:(mz_streamp pStream)
mz_deflateEnd	deps/miniz/zlib.h	/^int mz_deflateEnd(mz_streamp pStream);$/;"	p	signature:(mz_streamp pStream)
mz_deflateInit	deps/miniz/miniz.c	/^int mz_deflateInit(mz_streamp pStream, int level)$/;"	f	signature:(mz_streamp pStream, int level)
mz_deflateInit	deps/miniz/zlib.h	/^int mz_deflateInit(mz_streamp pStream, int level);$/;"	p	signature:(mz_streamp pStream, int level)
mz_deflateInit2	deps/miniz/miniz.c	/^int mz_deflateInit2(mz_streamp pStream, int level, int method, int window_bits, int mem_level, int strategy)$/;"	f	signature:(mz_streamp pStream, int level, int method, int window_bits, int mem_level, int strategy)
mz_deflateInit2	deps/miniz/zlib.h	/^int mz_deflateInit2(mz_streamp pStream, int level, int method, int window_bits, int mem_level, int strategy);$/;"	p	signature:(mz_streamp pStream, int level, int method, int window_bits, int mem_level, int strategy)
mz_deflateReset	deps/miniz/miniz.c	/^int mz_deflateReset(mz_streamp pStream)$/;"	f	signature:(mz_streamp pStream)
mz_deflateReset	deps/miniz/zlib.h	/^int mz_deflateReset(mz_streamp pStream);$/;"	p	signature:(mz_streamp pStream)
mz_error	deps/miniz/miniz.c	/^const char *mz_error(int err)$/;"	f	signature:(int err)
mz_error	deps/miniz/zlib.h	/^const char *mz_error(int err);$/;"	p	signature:(int err)
mz_file_read_func	deps/miniz/zlib.h	/^typedef size_t (*mz_file_read_func)(void *pOpaque, mz_uint64 file_ofs, void *pBuf, size_t n);$/;"	t
mz_file_write_func	deps/miniz/zlib.h	/^typedef size_t (*mz_file_write_func)(void *pOpaque, mz_uint64 file_ofs, const void *pBuf, size_t n);$/;"	t
mz_free	deps/miniz/miniz.c	/^void mz_free(void *p)$/;"	f	signature:(void *p)
mz_free	deps/miniz/zlib.h	/^void mz_free(void *p);$/;"	p	signature:(void *p)
mz_free_func	deps/miniz/zlib.h	/^typedef void (*mz_free_func)(void *opaque, void *address);$/;"	t
mz_inflate	deps/miniz/miniz.c	/^int mz_inflate(mz_streamp pStream, int flush)$/;"	f	signature:(mz_streamp pStream, int flush)
mz_inflate	deps/miniz/zlib.h	/^int mz_inflate(mz_streamp pStream, int flush);$/;"	p	signature:(mz_streamp pStream, int flush)
mz_inflateEnd	deps/miniz/miniz.c	/^int mz_inflateEnd(mz_streamp pStream)$/;"	f	signature:(mz_streamp pStream)
mz_inflateEnd	deps/miniz/zlib.h	/^int mz_inflateEnd(mz_streamp pStream);$/;"	p	signature:(mz_streamp pStream)
mz_inflateInit	deps/miniz/miniz.c	/^int mz_inflateInit(mz_streamp pStream)$/;"	f	signature:(mz_streamp pStream)
mz_inflateInit	deps/miniz/zlib.h	/^int mz_inflateInit(mz_streamp pStream);$/;"	p	signature:(mz_streamp pStream)
mz_inflateInit2	deps/miniz/miniz.c	/^int mz_inflateInit2(mz_streamp pStream, int window_bits)$/;"	f	signature:(mz_streamp pStream, int window_bits)
mz_inflateInit2	deps/miniz/zlib.h	/^int mz_inflateInit2(mz_streamp pStream, int window_bits);$/;"	p	signature:(mz_streamp pStream, int window_bits)
mz_inflateReset	deps/miniz/miniz.c	/^int mz_inflateReset(mz_streamp pStream)$/;"	f	signature:(mz_streamp pStream)
mz_inflateReset	deps/miniz/zlib.h	/^int mz_inflateReset(mz_streamp pStream);$/;"	p	signature:(mz_streamp pStream)
mz_int16	deps/miniz/zlib.h	/^typedef signed short mz_int16;$/;"	t
mz_int64	deps/miniz/zlib.h	/^typedef long long mz_int64;$/;"	t
mz_realloc_func	deps/miniz/zlib.h	/^typedef void *(*mz_realloc_func)(void *opaque, void *address, size_t items, size_t size);$/;"	t
mz_stream	deps/miniz/zlib.h	/^} mz_stream;$/;"	t	typeref:struct:mz_stream_s
mz_stream_s	deps/miniz/zlib.h	/^typedef struct mz_stream_s$/;"	s
mz_stream_s::adler	deps/miniz/zlib.h	/^  mz_ulong adler;                   \/\/ adler32 of the source or uncompressed data$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::avail_in	deps/miniz/zlib.h	/^  unsigned int avail_in;            \/\/ number of bytes available at next_in$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::avail_out	deps/miniz/zlib.h	/^  unsigned int avail_out;           \/\/ number of bytes that can be written to next_out$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::data_type	deps/miniz/zlib.h	/^  int data_type;                    \/\/ data_type (unused)$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::msg	deps/miniz/zlib.h	/^  char *msg;                        \/\/ error msg (unused)$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::next_in	deps/miniz/zlib.h	/^  const unsigned char *next_in;     \/\/ pointer to next byte to read$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::next_out	deps/miniz/zlib.h	/^  unsigned char *next_out;          \/\/ pointer to next byte to write$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::opaque	deps/miniz/zlib.h	/^  void *opaque;                     \/\/ heap alloc function user pointer$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::reserved	deps/miniz/zlib.h	/^  mz_ulong reserved;                \/\/ not used$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::state	deps/miniz/zlib.h	/^  struct mz_internal_state *state;  \/\/ internal state, allocated by zalloc\/zfree$/;"	m	struct:mz_stream_s	typeref:struct:mz_stream_s::mz_internal_state	access:public
mz_stream_s::total_in	deps/miniz/zlib.h	/^  mz_ulong total_in;                \/\/ total number of bytes consumed so far$/;"	m	struct:mz_stream_s	access:public
mz_stream_s::total_out	deps/miniz/zlib.h	/^  mz_ulong total_out;               \/\/ total number of bytes produced so far$/;"	m	struct:mz_stream_s	access:public
mz_streamp	deps/miniz/zlib.h	/^typedef mz_stream *mz_streamp;$/;"	t
mz_uint	deps/miniz/zlib.h	/^typedef unsigned int mz_uint;$/;"	t
mz_uint16	deps/miniz/zlib.h	/^typedef unsigned short mz_uint16;$/;"	t
mz_uint32	deps/miniz/zlib.h	/^typedef unsigned int mz_uint32;$/;"	t
mz_uint64	deps/miniz/zlib.h	/^typedef unsigned long long mz_uint64;$/;"	t
mz_uint8	deps/miniz/zlib.h	/^typedef unsigned char mz_uint8;$/;"	t
mz_ulong	deps/miniz/zlib.h	/^typedef unsigned long mz_ulong;$/;"	t
mz_uncompress	deps/miniz/miniz.c	/^int mz_uncompress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)$/;"	f	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)
mz_uncompress	deps/miniz/zlib.h	/^int mz_uncompress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len);$/;"	p	signature:(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)
mz_validate_uint16	deps/miniz/miniz.c	/^typedef unsigned char mz_validate_uint16[sizeof(mz_uint16)==2 ? 1 : -1];$/;"	t	file:
mz_validate_uint32	deps/miniz/miniz.c	/^typedef unsigned char mz_validate_uint32[sizeof(mz_uint32)==4 ? 1 : -1];$/;"	t	file:
mz_validate_uint64	deps/miniz/miniz.c	/^typedef unsigned char mz_validate_uint64[sizeof(mz_uint64)==8 ? 1 : -1];$/;"	t	file:
mz_version	deps/miniz/miniz.c	/^const char *mz_version(void)$/;"	f	signature:(void)
mz_version	deps/miniz/zlib.h	/^const char *mz_version(void);$/;"	p	signature:(void)
mz_zip_archive	deps/miniz/zlib.h	/^} mz_zip_archive;$/;"	t	typeref:struct:__anon119
mz_zip_archive_file_stat	deps/miniz/zlib.h	/^} mz_zip_archive_file_stat;$/;"	t	typeref:struct:__anon117
mz_zip_array	deps/miniz/miniz.c	/^} mz_zip_array;$/;"	t	typeref:struct:__anon138	file:
mz_zip_array_clear	deps/miniz/miniz.c	/^static void mz_zip_array_clear(mz_zip_archive *pZip, mz_zip_array *pArray)$/;"	f	file:	signature:(mz_zip_archive *pZip, mz_zip_array *pArray)
mz_zip_array_ensure_capacity	deps/miniz/miniz.c	/^static mz_bool mz_zip_array_ensure_capacity(mz_zip_archive *pZip, mz_zip_array *pArray, size_t min_new_capacity, mz_uint growing)$/;"	f	file:	signature:(mz_zip_archive *pZip, mz_zip_array *pArray, size_t min_new_capacity, mz_uint growing)
mz_zip_array_resize	deps/miniz/miniz.c	/^static mz_bool mz_zip_array_resize(mz_zip_archive *pZip, mz_zip_array *pArray, size_t new_size, mz_uint growing)$/;"	f	file:	signature:(mz_zip_archive *pZip, mz_zip_array *pArray, size_t new_size, mz_uint growing)
mz_zip_flags	deps/miniz/zlib.h	/^} mz_zip_flags;$/;"	t	typeref:enum:__anon120
mz_zip_internal_state	deps/miniz/zlib.h	/^typedef struct mz_zip_internal_state_tag mz_zip_internal_state;$/;"	t	typeref:struct:mz_zip_internal_state_tag
mz_zip_internal_state_tag	deps/miniz/miniz.c	/^struct mz_zip_internal_state_tag$/;"	s	file:
mz_zip_internal_state_tag::m_central_dir	deps/miniz/miniz.c	/^  mz_zip_array m_central_dir;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_central_dir_offsets	deps/miniz/miniz.c	/^  mz_zip_array m_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_mem_capacity	deps/miniz/miniz.c	/^  size_t m_mem_capacity;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_mem_size	deps/miniz/miniz.c	/^  size_t m_mem_size;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_pFile	deps/miniz/miniz.c	/^  MZ_FILE *m_pFile;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_pMem	deps/miniz/miniz.c	/^  void *m_pMem;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_internal_state_tag::m_sorted_central_dir_offsets	deps/miniz/miniz.c	/^  mz_zip_array m_sorted_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:	access:public
mz_zip_mode	deps/miniz/zlib.h	/^} mz_zip_mode;$/;"	t	typeref:enum:__anon118
mz_zip_reader_end	deps/miniz/miniz.c	/^mz_bool mz_zip_reader_end(mz_zip_archive *pZip)$/;"	f	signature:(mz_zip_archive *pZip)
mz_zip_reader_end	deps/miniz/zlib.h	/^mz_bool mz_zip_reader_end(mz_zip_archive *pZip);$/;"	p	signature:(mz_zip_archive *pZip)
mz_zip_reader_filename_less	deps/miniz/miniz.c	/^static mz_bool mz_zip_reader_filename_less(const mz_zip_array *pCentral_dir_array, const mz_zip_array *pCentral_dir_offsets, mz_uint l_index, mz_uint r_index)$/;"	f	file:	signature:(const mz_zip_array *pCentral_dir_array, const mz_zip_array *pCentral_dir_offsets, mz_uint l_index, mz_uint r_index)
mz_zip_reader_init	deps/miniz/miniz.c	/^mz_bool mz_zip_reader_init(mz_zip_archive *pZip, mz_uint64 size, mz_uint32 flags)$/;"	f	signature:(mz_zip_archive *pZip, mz_uint64 size, mz_uint32 flags)
mz_zip_reader_init	deps/miniz/zlib.h	/^mz_bool mz_zip_reader_init(mz_zip_archive *pZip, mz_uint64 size, mz_uint32 flags);$/;"	p	signature:(mz_zip_archive *pZip, mz_uint64 size, mz_uint32 flags)
mz_zip_reader_init_internal	deps/miniz/miniz.c	/^static mz_bool mz_zip_reader_init_internal(mz_zip_archive *pZip, mz_uint32 flags)$/;"	f	file:	signature:(mz_zip_archive *pZip, mz_uint32 flags)
mz_zip_reader_read_central_dir	deps/miniz/miniz.c	/^static mz_bool mz_zip_reader_read_central_dir(mz_zip_archive *pZip, mz_uint32 flags)$/;"	f	file:	signature:(mz_zip_archive *pZip, mz_uint32 flags)
mz_zip_reader_sort_central_dir_offsets_by_filename	deps/miniz/miniz.c	/^static void mz_zip_reader_sort_central_dir_offsets_by_filename(mz_zip_archive *pZip)$/;"	f	file:	signature:(mz_zip_archive *pZip)
n_buffers	camera/video4linux2.c	/^   unsigned n_buffers;$/;"	m	struct:video4linux	file:	access:public
n_descsz	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_descsz;	\/* Content size *\/$/;"	m	struct:Elf32_Note	access:public
n_namesz	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_namesz;	\/* Name size *\/$/;"	m	struct:Elf32_Note	access:public
n_type	ps3/rgl/src/cg/cgbdefs.hpp	/^	unsigned int	n_type;		\/* Content type *\/$/;"	m	struct:Elf32_Note	access:public
name	apple/common/setting_data.h	/^   const char* name;$/;"	m	struct:__anon161	access:public
name	apple/iOS/bluetooth/btdynamic.c	/^   const char* name;$/;"	m	struct:__anon141	file:	access:public
name	compat/getopt_rarch.h	/^   const char *name;$/;"	m	struct:option	access:public
name	compat/rxml/rxml.h	/^   char *name;$/;"	m	struct:rxml_node	access:public
name	frontend/platform/platform_gx.c	/^   const char *name;$/;"	m	struct:__anon13	file:	access:public
name	gfx/gfx_common.h	/^   char name[64];$/;"	m	struct:aspect_ratio_elem	access:public
name	input/input_common.h	/^   const char *(*name)(unsigned);$/;"	m	struct:rarch_joypad_driver	access:public
name	input/overlay.c	/^   char name[64];$/;"	m	struct:overlay	file:	access:public
name	ps3/rgl/include/Cg/CgCommon.h	/^   const char *name;$/;"	m	struct:_CGprogram	access:public
name	ps3/rgl/include/Cg/CgProgramGroup.h	/^   char *name;$/;"	m	struct:_CGprogramGroup	access:public
name	ps3/rgl/include/Cg/CgProgramGroup.h	/^   const char *name;$/;"	m	struct:_CGnamedProgram	access:public
name	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryStringOffset            name;          \/\/ cgGetParameterName()$/;"	m	struct:CgBinaryParameter	access:public
name	ps3/rgl/include/RGL/Types.h	/^   GLuint name;$/;"	m	struct:rglFramebufferAttachment	access:public
name	ps3/rgl/src/libelf/readelf.h	/^      const char* name;$/;"	m	struct:_ELF_section_t	access:public
name	ps3/rgl/src/libelf/readelf.h	/^      const char* name;$/;"	m	struct:__anon35	access:public
name	ps3/rgl/src/rgl_ps3_cg.cpp	/^   const char *name;$/;"	m	struct:__anon47	file:	access:public
nameOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int nameOffset;$/;"	m	struct:_CgParameterEntry	access:public
name_is_xinput_pad	input/dinput.c	/^static bool name_is_xinput_pad(const char* name)$/;"	f	file:	signature:(const char* name)
nat_h	gfx/omap_gfx.c	/^  unsigned nat_w, nat_h;$/;"	m	struct:omapfb_data	file:	access:public
nat_w	gfx/omap_gfx.c	/^  unsigned nat_w, nat_h;$/;"	m	struct:omapfb_data	file:	access:public
native_window	gfx/context/gles_egl_ctx.c	/^struct fbdev_window native_window;$/;"	v	typeref:struct:fbdev_window
nearest_pow2_size	rewind.c	/^static inline size_t nearest_pow2_size(size_t v)$/;"	f	file:	signature:(size_t v)
needValidate	ps3/rgl/include/RGL/Types.h	/^      GLuint			needValidate;$/;"	m	struct:RGLcontext	access:public
needValidate	ps3/rgl/include/RGL/Types.h	/^   GLboolean needValidate;$/;"	m	struct:rglFramebuffer	access:public
need_fullpath	libretro.h	/^   bool        need_fullpath;     \/\/ If true, retro_load_game() is guaranteed to provide a valid pathname in retro_game_info::path.$/;"	m	struct:retro_system_info	access:public
need_refresh	frontend/menu/menu_common.h	/^   bool need_refresh;$/;"	m	struct:__anon25	access:public
needs_restore	gfx/d3d9/d3d9.hpp	/^      bool needs_restore;$/;"	m	class:D3DVideo	access:private
net_connect	audio/librsound.c	106;"	d	file:
net_connect	audio/librsound.c	121;"	d	file:
net_connect	audio/librsound.c	130;"	d	file:
net_fd	command.c	/^   int net_fd;$/;"	m	struct:rarch_cmd	file:	access:public
net_recv	audio/librsound.c	109;"	d	file:
net_recv	audio/librsound.c	124;"	d	file:
net_recv	audio/librsound.c	133;"	d	file:
net_send	audio/librsound.c	104;"	d	file:
net_send	audio/librsound.c	119;"	d	file:
net_send	audio/librsound.c	129;"	d	file:
net_shutdown	audio/librsound.c	107;"	d	file:
net_shutdown	audio/librsound.c	122;"	d	file:
net_shutdown	audio/librsound.c	131;"	d	file:
net_socket	audio/librsound.c	105;"	d	file:
net_socket	audio/librsound.c	120;"	d	file:
net_socket	audio/librsound.c	127;"	d	file:
net_socketclose	audio/librsound.c	108;"	d	file:
net_socketclose	audio/librsound.c	123;"	d	file:
net_socketclose	audio/librsound.c	132;"	d	file:
net_store_16	apple/iOS/bluetooth/btstack/utils.h	/^void net_store_16(uint8_t *buffer, uint16_t pos, uint16_t value);$/;"	p	signature:(uint8_t *buffer, uint16_t pos, uint16_t value)
net_store_32	apple/iOS/bluetooth/btstack/utils.h	/^void net_store_32(uint8_t *buffer, uint16_t pos, uint32_t value);$/;"	p	signature:(uint8_t *buffer, uint16_t pos, uint32_t value)
netplay	general.h	/^   netplay_t *netplay;$/;"	m	struct:global	access:public
netplay	netplay.c	/^struct netplay$/;"	s	file:
netplay::addr	netplay.c	/^   struct addrinfo *addr;$/;"	m	struct:netplay	typeref:struct:netplay::addrinfo	file:	access:public
netplay::buffer	netplay.c	/^   struct delta_frame *buffer;$/;"	m	struct:netplay	typeref:struct:netplay::delta_frame	file:	access:public
netplay::buffer_size	netplay.c	/^   size_t buffer_size;$/;"	m	struct:netplay	file:	access:public
netplay::can_poll	netplay.c	/^   bool can_poll; \/\/ We don't want to poll several times on a frame.$/;"	m	struct:netplay	file:	access:public
netplay::cbs	netplay.c	/^   struct retro_callbacks cbs;$/;"	m	struct:netplay	typeref:struct:netplay::retro_callbacks	file:	access:public
netplay::fd	netplay.c	/^   int fd; \/\/ TCP connection for state sending, etc. Also used for commands.$/;"	m	struct:netplay	file:	access:public
netplay::flip	netplay.c	/^   bool flip;$/;"	m	struct:netplay	file:	access:public
netplay::flip_frame	netplay.c	/^   uint32_t flip_frame;$/;"	m	struct:netplay	file:	access:public
netplay::frame_count	netplay.c	/^   uint32_t frame_count;$/;"	m	struct:netplay	file:	access:public
netplay::has_client_addr	netplay.c	/^   bool has_client_addr;$/;"	m	struct:netplay	file:	access:public
netplay::has_connection	netplay.c	/^   bool has_connection;$/;"	m	struct:netplay	file:	access:public
netplay::is_replay	netplay.c	/^   bool is_replay; \/\/ Are we replaying old frames?$/;"	m	struct:netplay	file:	access:public
netplay::nick	netplay.c	/^   char nick[32];$/;"	m	struct:netplay	file:	access:public
netplay::other_addr	netplay.c	/^   struct sockaddr_storage other_addr;$/;"	m	struct:netplay	typeref:struct:netplay::sockaddr_storage	file:	access:public
netplay::other_frame_count	netplay.c	/^   uint32_t other_frame_count;$/;"	m	struct:netplay	file:	access:public
netplay::other_nick	netplay.c	/^   char other_nick[32];$/;"	m	struct:netplay	file:	access:public
netplay::other_ptr	netplay.c	/^   size_t other_ptr; \/\/ Points to the last reliable state that self ever had.$/;"	m	struct:netplay	file:	access:public
netplay::packet_buffer	netplay.c	/^   uint32_t packet_buffer[UDP_FRAME_PACKETS * 2]; \/\/ To compat UDP packet loss we also send old data along with the packets.$/;"	m	struct:netplay	file:	access:public
netplay::port	netplay.c	/^   unsigned port; \/\/ Which port is governed by netplay (other player)?$/;"	m	struct:netplay	file:	access:public
netplay::read_frame_count	netplay.c	/^   uint32_t read_frame_count;$/;"	m	struct:netplay	file:	access:public
netplay::read_ptr	netplay.c	/^   size_t read_ptr; \/\/ Ptr to where we are reading. Generally, other_ptr <= read_ptr <= self_ptr.$/;"	m	struct:netplay	file:	access:public
netplay::self_ptr	netplay.c	/^   size_t self_ptr; \/\/ Ptr where we are now.$/;"	m	struct:netplay	file:	access:public
netplay::spectate	netplay.c	/^   bool spectate;$/;"	m	struct:netplay	file:	access:public
netplay::spectate_client	netplay.c	/^   bool spectate_client;$/;"	m	struct:netplay	file:	access:public
netplay::spectate_fds	netplay.c	/^   int spectate_fds[MAX_SPECTATORS];$/;"	m	struct:netplay	file:	access:public
netplay::spectate_input	netplay.c	/^   uint16_t *spectate_input;$/;"	m	struct:netplay	file:	access:public
netplay::spectate_input_ptr	netplay.c	/^   size_t spectate_input_ptr;$/;"	m	struct:netplay	file:	access:public
netplay::spectate_input_size	netplay.c	/^   size_t spectate_input_size;$/;"	m	struct:netplay	file:	access:public
netplay::state_size	netplay.c	/^   size_t state_size;$/;"	m	struct:netplay	file:	access:public
netplay::their_addr	netplay.c	/^   struct sockaddr_storage their_addr;$/;"	m	struct:netplay	typeref:struct:netplay::sockaddr_storage	file:	access:public
netplay::timeout_cnt	netplay.c	/^   unsigned timeout_cnt;$/;"	m	struct:netplay	file:	access:public
netplay::tmp_frame_count	netplay.c	/^   uint32_t tmp_frame_count;$/;"	m	struct:netplay	file:	access:public
netplay::tmp_ptr	netplay.c	/^   size_t tmp_ptr; \/\/ A temporary pointer used on replay.$/;"	m	struct:netplay	file:	access:public
netplay::udp_fd	netplay.c	/^   int udp_fd; \/\/ UDP connection for game state updates.$/;"	m	struct:netplay	file:	access:public
netplay_can_poll	netplay.c	/^bool netplay_can_poll(netplay_t *handle)$/;"	f	signature:(netplay_t *handle)
netplay_can_poll	netplay.c	/^static bool netplay_can_poll(netplay_t *handle);$/;"	p	file:	signature:(netplay_t *handle)
netplay_client_swap_input	config.def.h	/^static const bool netplay_client_swap_input = true;$/;"	v
netplay_client_swap_input	general.h	/^      bool netplay_client_swap_input;$/;"	m	struct:settings::__anon232	access:public
netplay_cmd_ack	netplay.c	/^static bool netplay_cmd_ack(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_cmd_nak	netplay.c	/^static bool netplay_cmd_nak(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_enable	general.h	/^   bool netplay_enable;$/;"	m	struct:global	access:public
netplay_flip_players	netplay.c	/^void netplay_flip_players(netplay_t *handle)$/;"	f	signature:(netplay_t *handle)
netplay_flip_players	netplay.h	/^void netplay_flip_players(netplay_t *handle);$/;"	p	signature:(netplay_t *handle)
netplay_flip_port	netplay.c	/^static bool netplay_flip_port(netplay_t *handle, bool port)$/;"	f	file:	signature:(netplay_t *handle, bool port)
netplay_free	netplay.c	/^void netplay_free(netplay_t *handle)$/;"	f	signature:(netplay_t *handle)
netplay_free	netplay.h	/^void netplay_free(netplay_t *handle);$/;"	p	signature:(netplay_t *handle)
netplay_get_cmd	netplay.c	/^static bool netplay_get_cmd(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_get_cmd	netplay.c	/^static bool netplay_get_cmd(netplay_t *handle);$/;"	p	file:	signature:(netplay_t *handle)
netplay_get_response	netplay.c	/^static bool netplay_get_response(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_get_spectate_input	netplay.c	/^static int16_t netplay_get_spectate_input(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id)
netplay_init_network	netplay.c	/^bool netplay_init_network(void)$/;"	f	signature:(void)
netplay_init_network	netplay.h	/^bool netplay_init_network(void);$/;"	p	signature:(void)
netplay_input_state	netplay.c	/^int16_t netplay_input_state(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id)$/;"	f	signature:(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id)
netplay_input_state	netplay.c	/^static int16_t netplay_input_state(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id);$/;"	p	file:	signature:(netplay_t *handle, bool port, unsigned device, unsigned index, unsigned id)
netplay_is_alive	netplay.c	/^static bool netplay_is_alive(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_is_alive	netplay.c	/^static bool netplay_is_alive(netplay_t *handle);$/;"	p	file:	signature:(netplay_t *handle)
netplay_is_client	general.h	/^   bool netplay_is_client;$/;"	m	struct:global	access:public
netplay_is_spectate	general.h	/^   bool netplay_is_spectate;$/;"	m	struct:global	access:public
netplay_new	netplay.c	/^netplay_t *netplay_new(const char *server, uint16_t port,$/;"	f	signature:(const char *server, uint16_t port, unsigned frames, const struct retro_callbacks *cb, bool spectate, const char *nick)
netplay_new	netplay.h	/^netplay_t *netplay_new(const char *server,$/;"	p	signature:(const char *server, uint16_t port, unsigned frames, const struct retro_callbacks *cb, bool spectate, const char *nick)
netplay_nick	general.h	/^   char netplay_nick[32];$/;"	m	struct:global	access:public
netplay_poll	netplay.c	/^static bool netplay_poll(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_poll	netplay.c	/^static bool netplay_poll(netplay_t *handle);$/;"	p	file:	signature:(netplay_t *handle)
netplay_port	general.h	/^   uint16_t netplay_port;$/;"	m	struct:global	access:public
netplay_post_frame	netplay.c	/^void netplay_post_frame(netplay_t *handle)$/;"	f	signature:(netplay_t *handle)
netplay_post_frame	netplay.h	/^void netplay_post_frame(netplay_t *handle);$/;"	p	signature:(netplay_t *handle)
netplay_post_frame_net	netplay.c	/^static void netplay_post_frame_net(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_post_frame_spectate	netplay.c	/^static void netplay_post_frame_spectate(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_pre_frame	netplay.c	/^void netplay_pre_frame(netplay_t *handle)$/;"	f	signature:(netplay_t *handle)
netplay_pre_frame	netplay.h	/^void netplay_pre_frame(netplay_t *handle);$/;"	p	signature:(netplay_t *handle)
netplay_pre_frame_net	netplay.c	/^static void netplay_pre_frame_net(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_pre_frame_spectate	netplay.c	/^static void netplay_pre_frame_spectate(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_send_cmd	netplay.c	/^static bool netplay_send_cmd(netplay_t *handle, uint32_t cmd, const void *data, size_t size)$/;"	f	file:	signature:(netplay_t *handle, uint32_t cmd, const void *data, size_t size)
netplay_send_cmd	netplay.c	/^static bool netplay_send_cmd(netplay_t *handle, uint32_t cmd, const void *data, size_t size);$/;"	p	file:	signature:(netplay_t *handle, uint32_t cmd, const void *data, size_t size)
netplay_server	general.h	/^   char netplay_server[PATH_MAX];$/;"	m	struct:global	access:public
netplay_set_spectate_input	netplay.c	/^static void netplay_set_spectate_input(netplay_t *handle, int16_t input)$/;"	f	file:	signature:(netplay_t *handle, int16_t input)
netplay_set_spectate_input	netplay.c	/^static void netplay_set_spectate_input(netplay_t *handle, int16_t input);$/;"	p	file:	signature:(netplay_t *handle, int16_t input)
netplay_should_skip	netplay.c	/^static bool netplay_should_skip(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
netplay_should_skip	netplay.c	/^static bool netplay_should_skip(netplay_t *handle);$/;"	p	file:	signature:(netplay_t *handle)
netplay_sync_frames	general.h	/^   unsigned netplay_sync_frames;$/;"	m	struct:global	access:public
netplay_t	netplay.h	/^typedef struct netplay netplay_t;$/;"	t	typeref:struct:netplay
network_cmd_enable	config.def.h	/^static const bool network_cmd_enable = false;$/;"	v
network_cmd_enable	general.h	/^   bool network_cmd_enable;$/;"	m	struct:settings	access:public
network_cmd_port	config.def.h	/^static const uint16_t network_cmd_port = 55355;$/;"	v
network_cmd_port	general.h	/^   uint16_t network_cmd_port;$/;"	m	struct:settings	access:public
network_cmd_pre_frame	command.c	/^static void network_cmd_pre_frame(rarch_cmd_t *handle)$/;"	f	file:	signature:(rarch_cmd_t *handle)
network_cmd_send	command.c	/^bool network_cmd_send(const char *cmd_)$/;"	f	signature:(const char *cmd_)
network_cmd_send	command.h	/^bool network_cmd_send(const char *cmd);$/;"	p	signature:(const char *cmd)
newInstance	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	public static CoreSelection newInstance()$/;"	m	class:CoreSelection	access:public	signature:()
newInstance	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public static HistorySelection newInstance()$/;"	m	class:HistorySelection	access:public	signature:()
newInstance	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	public static InstalledCoreInfoFragment newInstance(ModuleWrapper core)$/;"	m	class:InstalledCoreInfoFragment	access:public	signature:(ModuleWrapper core)
newInstance	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public static DetectCoreDirectoryFragment newInstance(int titleResId)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(int titleResId)
newInstance	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public static DirectoryFragment newInstance(int titleResId)$/;"	m	class:DirectoryFragment	access:public	signature:(int titleResId)
newInstance	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^	public static GPLWaiverDialogFragment newInstance()$/;"	m	class:GPLWaiverDialogFragment	access:public	signature:()
newInstance	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static PreferenceManager newInstance(Activity activity, int firstRequestCode)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(Activity activity, int firstRequestCode)
newTerm	input/linuxraw_input.c	/^static struct termios oldTerm, newTerm;$/;"	v	typeref:struct:	file:
new_nvb_reader	ps3/rgl/src/cg/cgbio.hpp	/^            CGBIO_ERROR new_nvb_reader( nvb_reader** obj ) const;$/;"	p	class:cgc::bio::bin_io	access:public	signature:( nvb_reader** obj ) const
new_nvb_reader	ps3/rgl/src/rgl_ps3_cg.cpp	/^         bin_io::new_nvb_reader( nvb_reader** obj ) const$/;"	f	class:cgc::bio::bin_io	signature:( nvb_reader** obj ) const
newterm	input/udev_input.c	/^static struct termios oldterm, newterm;$/;"	v	typeref:struct:	file:
next	apple/iOS/bluetooth/btstack/linked_list.h	/^    struct linked_item *next; \/\/ <-- next element in list, or NULL$/;"	m	struct:linked_item	typeref:struct:linked_item::linked_item	access:public
next	compat/rxml/rxml.h	/^   struct rxml_attrib_node *next;$/;"	m	struct:rxml_attrib_node	typeref:struct:rxml_attrib_node::rxml_attrib_node	access:public
next	compat/rxml/rxml.h	/^   struct rxml_node *next;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_node	access:public
next	conf/config_file.c	/^   struct config_entry_list *next;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list::config_entry_list	file:	access:public
next	conf/config_file.c	/^   struct include_list *next;$/;"	m	struct:include_list	typeref:struct:include_list::include_list	file:	access:public
next	conf/config_file.h	/^   const struct config_entry_list *next; \/\/ Used internally. Opaque here.$/;"	m	struct:config_file_entry	typeref:struct:config_file_entry::config_entry_list	access:public
next	gfx/fonts/fonts.h	/^   struct font_output *next; \/\/ linked list.$/;"	m	struct:font_output	typeref:struct:font_output::font_output	access:public
next	input/dinput.c	/^   struct pointer_status *next;$/;"	m	struct:pointer_status	typeref:struct:pointer_status::pointer_status	file:	access:public
next	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGcontext* next;            \/\/ for global linked list of CGcontexts$/;"	m	struct:_CGcontext	typeref:struct:_CGcontext::_CGcontext	access:public
next	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGprogram*   next;          \/\/ link to next in NULL-terminated singly linked list of programs$/;"	m	struct:_CGprogram	typeref:struct:_CGprogram::_CGprogram	access:public
next	ps3/rgl/include/Cg/CgProgramGroup.h	/^   struct _CGprogramGroup *next;$/;"	m	struct:_CGprogramGroup	typeref:struct:_CGprogramGroup::_CGprogramGroup	access:public
next_in	deps/miniz/zlib.h	/^  const unsigned char *next_in;     \/\/ pointer to next byte to read$/;"	m	struct:mz_stream_s	access:public
next_index	input/overlay.c	/^   unsigned next_index;$/;"	m	struct:input_overlay	file:	access:public
next_index	input/overlay.c	/^   unsigned next_index;$/;"	m	struct:overlay_desc	file:	access:public
next_index_name	input/overlay.c	/^   char next_index_name[64];$/;"	m	struct:overlay_desc	file:	access:public
next_out	deps/miniz/zlib.h	/^  unsigned char *next_out;          \/\/ pointer to next byte to write$/;"	m	struct:mz_stream_s	access:public
next_pow2	miscellaneous.h	/^static inline uint32_t next_pow2(uint32_t v)$/;"	f	signature:(uint32_t v)
nick	netplay.c	/^   char nick[32];$/;"	m	struct:netplay	file:	access:public
no_game	general.h	/^      bool no_game;$/;"	m	struct:global::__anon234	access:public
no_rom	general.h	/^   bool no_rom;$/;"	m	struct:rarch_main_wrap	access:public
no_uniform	tools/cg2glsl.py	/^def no_uniform(elem):$/;"	f	access:public
noext	gfx/glsym/glgen.py	/^def noext(sym):$/;"	f	access:public
nonblock	audio/alsa.c	/^   bool nonblock;$/;"	m	struct:alsa	file:	access:public
nonblock	audio/alsathread.c	/^   bool nonblock;$/;"	m	struct:alsa_thread	file:	access:public
nonblock	audio/coreaudio.c	/^   bool nonblock;$/;"	m	struct:coreaudio	file:	access:public
nonblock	audio/dsound.c	/^   bool nonblock;$/;"	m	struct:dsound	file:	access:public
nonblock	audio/jack.c	/^   bool nonblock;$/;"	m	struct:jack	file:	access:public
nonblock	audio/openal.c	/^   bool nonblock;$/;"	m	struct:al	file:	access:public
nonblock	audio/opensl.c	/^   bool nonblock;$/;"	m	struct:sl	file:	access:public
nonblock	audio/pulse.c	/^   bool nonblock;$/;"	m	struct:__anon102	file:	access:public
nonblock	audio/rsound.c	/^   bool nonblock;$/;"	m	struct:rsd	file:	access:public
nonblock	audio/sdl_audio.c	/^   bool nonblock;$/;"	m	struct:sdl_audio	file:	access:public
nonblock	audio/xaudio.c	/^   bool nonblock;$/;"	m	struct:__anon101	file:	access:public
nonblock	blackberry-qnx/alsa_qsa.c	/^   bool nonblock;$/;"	m	struct:alsa	file:	access:public
nonblock	gfx/thread_wrapper.c	/^   bool nonblock;$/;"	m	struct:thread_video	file:	access:public
nonblock	gx/gx_audio.c	/^   bool nonblock;$/;"	m	struct:__anon247	file:	access:public
nonblock	xenon/xenon360_audio.c	/^   bool nonblock;$/;"	m	struct:__anon2	file:	access:public
nonblock_chunk_size	general.h	/^      size_t nonblock_chunk_size;$/;"	m	struct:global::__anon235	access:public
nonblock_state	driver.h	/^   bool nonblock_state;$/;"	m	struct:driver	access:public
nonblocking	audio/roar.c	/^   bool nonblocking;$/;"	m	struct:__anon103	file:	access:public
nonblocking	ps3/ps3_audio.c	/^   bool nonblocking;$/;"	m	struct:__anon78	file:	access:public
normalized	ps3/rgl/include/RGL/Types.h	/^      GLboolean normalized;$/;"	m	struct:__anon68	access:public
now_connect	ps3/sdk_defines.h	102;"	d
np_pool	frontend/platform/platform_ps3.c	/^static uint8_t np_pool[NP_POOL_SIZE];$/;"	v	file:
nul_handler	gfx/context/glx_ctx.c	/^static int nul_handler(Display *dpy, XErrorEvent *event)$/;"	f	file:	signature:(Display *dpy, XErrorEvent *event)
nul_handler	gfx/context/xegl_ctx.c	/^static int nul_handler(Display *dpy, XErrorEvent *event)$/;"	f	file:	signature:(Display *dpy, XErrorEvent *event)
null_audio_free	audio/null.c	/^static void null_audio_free(void *data)$/;"	f	file:	signature:(void *data)
null_audio_init	audio/null.c	/^static void *null_audio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
null_audio_set_nonblock_state	audio/null.c	/^static void null_audio_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
null_audio_start	audio/null.c	/^static bool null_audio_start(void *data)$/;"	f	file:	signature:(void *data)
null_audio_stop	audio/null.c	/^static bool null_audio_stop(void *data)$/;"	f	file:	signature:(void *data)
null_audio_use_float	audio/null.c	/^static bool null_audio_use_float(void *data)$/;"	f	file:	signature:(void *data)
null_audio_write	audio/null.c	/^static ssize_t null_audio_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
null_gfx_alive	gfx/null.c	/^static bool null_gfx_alive(void *data)$/;"	f	file:	signature:(void *data)
null_gfx_focus	gfx/null.c	/^static bool null_gfx_focus(void *data)$/;"	f	file:	signature:(void *data)
null_gfx_frame	gfx/null.c	/^static bool null_gfx_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
null_gfx_free	gfx/null.c	/^static void null_gfx_free(void *data)$/;"	f	file:	signature:(void *data)
null_gfx_init	gfx/null.c	/^static void *null_gfx_init(const video_info_t *video,$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
null_gfx_restart	gfx/null.c	/^static void null_gfx_restart(void) {}$/;"	f	file:	signature:(void)
null_gfx_set_nonblock_state	gfx/null.c	/^static void null_gfx_set_nonblock_state(void *data, bool toggle)$/;"	f	file:	signature:(void *data, bool toggle)
null_gfx_start	gfx/null.c	/^static void null_gfx_start(void) {}$/;"	f	file:	signature:(void)
nullinput_get_capabilities	input/null.c	/^static uint64_t nullinput_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
nullinput_input_free_input	input/null.c	/^static void nullinput_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
nullinput_input_init	input/null.c	/^static void *nullinput_input_init(void)$/;"	f	file:	signature:(void)
nullinput_input_key_pressed	input/null.c	/^static bool nullinput_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
nullinput_input_poll	input/null.c	/^static void nullinput_input_poll(void *data)$/;"	f	file:	signature:(void *data)
nullinput_input_state	input/null.c	/^static int16_t nullinput_input_state(void *data, const struct retro_keybind **retro_keybinds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **retro_keybinds, unsigned port, unsigned device, unsigned index, unsigned id)
nullinput_set_keybinds	input/null.c	/^static void nullinput_set_keybinds(void *data, unsigned device,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
nullterm	ps3/ps3py/pkg.py	/^def nullterm(str_plus, printhex=False):$/;"	f	access:public
num	gfx/thread_wrapper.c	/^         unsigned num;$/;"	m	struct:thread_video::__anon215::__anon219	file:	access:public
numBlocks	ps3/sdk_defines.h	81;"	d
numChannels	ps3/sdk_defines.h	80;"	d
num_axes	input/sdl_joypad.c	/^   unsigned num_axes;$/;"	m	struct:sdl_joypad	file:	access:public
num_buffers	audio/openal.c	/^   size_t num_buffers;$/;"	m	struct:al	file:	access:public
num_buttons	input/sdl_joypad.c	/^   unsigned num_buttons;$/;"	m	struct:sdl_joypad	file:	access:public
num_devices	input/udev_input.c	/^   unsigned num_devices;$/;"	m	struct:udev_input	file:	access:public
num_effects	input/udev_joypad.c	/^   int num_effects;$/;"	m	struct:udev_joypad	file:	access:public
num_file	deps/minizip/unzip.c	/^    uLong num_file;             \/* number of the current file in the zipfile*\/$/;"	m	struct:__anon111	file:	access:public
num_hats	input/sdl_joypad.c	/^   unsigned num_hats;$/;"	m	struct:sdl_joypad	file:	access:public
num_mons	gfx/d3d9/d3d9.cpp	/^   static unsigned num_mons;$/;"	m	namespace:Monitor	file:
num_of_file	deps/minizip/unzip.c	/^    uLong num_of_file;            \/\/ # of file$/;"	m	struct:unz_file_pos_s	file:	access:public
num_pages	gfx/omap_gfx.c	/^  int num_pages;$/;"	m	struct:omapfb_data	file:	access:public
num_responses	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t num_responses;$/;"	m	struct:btpad_queue_command::__anon142::__anon145	file:	access:public
num_shaders	gfx/shader_common.h	/^   unsigned (*num_shaders)(void);$/;"	m	struct:gl_shader_backend	access:public
number_entry	deps/minizip/unzip.h	/^    uLong number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info64_s	access:public
number_entry	deps/minizip/unzip.h	/^    uLong number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info_s	access:public
number_of_params	ps3/rgl/src/cg/nvbi.hpp	/^               number_of_params() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
number_of_params	ps3/rgl/src/cg/nvbiimpl.hpp	/^               number_of_params() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
number_of_params	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::number_of_params() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
nvFenceCounter	ps3/rgl/src/rgl_ps3.cpp	/^static GLuint nvFenceCounter = 0;$/;"	v	file:
nvb_reader	ps3/rgl/src/cg/nvbi.hpp	/^      class nvb_reader$/;"	c	namespace:cgc::bio
nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^            nvb_reader_impl();$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:()
nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^      class nvb_reader_impl : public nvb_reader$/;"	c	namespace:cgc::bio	inherits:nvb_reader
nvb_reader_impl	ps3/rgl/src/rgl_ps3_cg.cpp	/^      nvb_reader_impl::nvb_reader_impl()$/;"	f	class:cgc::bio::nvb_reader_impl	signature:()
obj	gx/gx_video.c	/^   GXTexObj obj;$/;"	m	struct:__anon249	file:	access:public
obj	gx/gx_video.c	/^   GXTexObj obj;$/;"	m	struct:__anon250	file:	access:public
objc_clear_config_hack	apple/common/apple_export.h	/^extern void objc_clear_config_hack(void);$/;"	p	signature:(void)
objc_clear_config_hack	frontend/platform/platform_apple.c	/^void objc_clear_config_hack(void)$/;"	f	signature:(void)
objc_get_value_from_config	apple/common/RetroArch_Apple.h	/^extern NSString *objc_get_value_from_config(config_file_t* config, NSString* name, NSString* defaultValue);$/;"	p	signature:(config_file_t* config, NSString* name, NSString* defaultValue)
off_x	gfx/fonts/fonts.h	/^   int off_x, off_y;$/;"	m	struct:font_output	access:public
off_y	gfx/fonts/fonts.h	/^   int off_x, off_y;$/;"	m	struct:font_output	access:public
offset	emscripten/library_rwebinput.js	/^               var offset = key >> 3;$/;"	v
offset	emscripten/library_rwebinput.js	/^               var offset;$/;"	v
offset	gfx/shader_glsl.c	/^   GLsizei offset;$/;"	m	struct:glsl_attrib	file:	access:public
offset	ps3/rgl/include/RGL/Types.h	/^      intptr_t offset;$/;"	m	struct:__anon63	access:public
offset	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint offset;$/;"	m	struct:__anon28	file:	access:public
offset_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            int			offset_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
offset_central_dir	deps/minizip/unzip.c	/^    uLong offset_central_dir;   \/* offset of start of central directory with$/;"	m	struct:__anon111	file:	access:public
offset_curfile	deps/minizip/unzip.c	/^    uLong offset_curfile;\/* relative offset of local header 4 bytes *\/$/;"	m	struct:unz_file_info_internal_s	file:	access:public
offset_local_extrafield	deps/minizip/unzip.c	/^    uLong offset_local_extrafield;\/* offset of the local extra field *\/$/;"	m	struct:__anon110	file:	access:public
oldKbmd	input/linuxraw_input.c	/^static long oldKbmd = 0xffff;$/;"	v	file:
oldTerm	input/linuxraw_input.c	/^static struct termios oldTerm, newTerm;$/;"	v	typeref:struct:termios	file:
old_input_state	frontend/menu/menu_common.h	/^   uint64_t old_input_state;$/;"	m	struct:__anon25	access:public
old_page	gfx/omap_gfx.c	/^  omapfb_page_t *old_page;$/;"	m	struct:omapfb_data	file:	access:public
old_value	gfx/state_tracker.c	/^   uint32_t old_value; $/;"	m	struct:state_tracker_internal	file:	access:public
oldkbmd	input/udev_input.c	/^static long oldkbmd = 0xffff;$/;"	v	file:
oldterm	input/udev_input.c	/^static struct termios oldterm, newterm;$/;"	v	typeref:struct:termios	file:
omap	gfx/omap_gfx.c	/^  omapfb_data_t *omap;$/;"	m	struct:omap_video	file:	access:public
omap_gfx_alive	gfx/omap_gfx.c	/^static bool omap_gfx_alive(void *data) {$/;"	f	file:	signature:(void *data)
omap_gfx_focus	gfx/omap_gfx.c	/^static bool omap_gfx_focus(void *data) {$/;"	f	file:	signature:(void *data)
omap_gfx_frame	gfx/omap_gfx.c	/^static bool omap_gfx_frame(void *data, const void *frame, unsigned width,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
omap_gfx_free	gfx/omap_gfx.c	/^static void omap_gfx_free(void *data) {$/;"	f	file:	signature:(void *data)
omap_gfx_init	gfx/omap_gfx.c	/^static void *omap_gfx_init(const video_info_t *video, const input_driver_t **input, void **input_data) {$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
omap_gfx_set_nonblock_state	gfx/omap_gfx.c	/^static void omap_gfx_set_nonblock_state(void *data, bool state) {$/;"	f	file:	signature:(void *data, bool state)
omap_gfx_viewport_info	gfx/omap_gfx.c	/^static void omap_gfx_viewport_info(void *data, struct rarch_viewport *vp) {$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
omap_init_font	gfx/omap_gfx.c	/^static void omap_init_font(omap_video_t *vid, const char *font_path, unsigned font_size) {$/;"	f	file:	signature:(omap_video_t *vid, const char *font_path, unsigned font_size)
omap_render_msg	gfx/omap_gfx.c	/^static void omap_render_msg(omap_video_t *vid, const char *msg) {$/;"	f	file:	signature:(omap_video_t *vid, const char *msg)
omap_video	gfx/omap_gfx.c	/^typedef struct omap_video {$/;"	s	file:
omap_video::bytes_per_pixel	gfx/omap_gfx.c	/^  unsigned bytes_per_pixel;$/;"	m	struct:omap_video	file:	access:public
omap_video::font	gfx/omap_gfx.c	/^  void *font;$/;"	m	struct:omap_video	file:	access:public
omap_video::font_driver	gfx/omap_gfx.c	/^  const font_renderer_driver_t *font_driver;$/;"	m	struct:omap_video	file:	access:public
omap_video::font_rgb	gfx/omap_gfx.c	/^  uint8_t font_rgb[4];$/;"	m	struct:omap_video	file:	access:public
omap_video::height	gfx/omap_gfx.c	/^  unsigned height;$/;"	m	struct:omap_video	file:	access:public
omap_video::omap	gfx/omap_gfx.c	/^  omapfb_data_t *omap;$/;"	m	struct:omap_video	file:	access:public
omap_video::width	gfx/omap_gfx.c	/^  unsigned width;$/;"	m	struct:omap_video	file:	access:public
omap_video_t	gfx/omap_gfx.c	/^} omap_video_t;$/;"	t	typeref:struct:omap_video	file:
omapfb_alloc_mem	gfx/omap_gfx.c	/^static int omapfb_alloc_mem(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_backup_state	gfx/omap_gfx.c	/^static int omapfb_backup_state(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_blend_glyph_argb8888	gfx/omap_gfx.c	/^static void omapfb_blend_glyph_argb8888(omapfb_data_t *pdata, const uint8_t *src, uint8_t *f_rgb,$/;"	f	file:	signature:(omapfb_data_t *pdata, const uint8_t *src, uint8_t *f_rgb, unsigned g_width, unsigned g_height, unsigned g_pitch, unsigned dst_x, unsigned dst_y)
omapfb_blend_glyph_rgb565	gfx/omap_gfx.c	/^static void omapfb_blend_glyph_rgb565(omapfb_data_t *pdata, const uint8_t *src, uint8_t *f_rgb,$/;"	f	file:	signature:(omapfb_data_t *pdata, const uint8_t *src, uint8_t *f_rgb, unsigned g_width, unsigned g_height, unsigned g_pitch, unsigned dst_x, unsigned dst_y)
omapfb_blit_frame	gfx/omap_gfx.c	/^static void omapfb_blit_frame(omapfb_data_t *pdata, const void *src,$/;"	f	file:	signature:(omapfb_data_t *pdata, const void *src, unsigned height, unsigned src_pitch)
omapfb_data	gfx/omap_gfx.c	/^typedef struct omapfb_data {$/;"	s	file:
omapfb_data::bpp	gfx/omap_gfx.c	/^  unsigned bpp;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::cur_page	gfx/omap_gfx.c	/^  omapfb_page_t *cur_page;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::current_state	gfx/omap_gfx.c	/^  omapfb_state_t* current_state;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::fb_framesize	gfx/omap_gfx.c	/^  unsigned fb_framesize;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::fb_mem	gfx/omap_gfx.c	/^  void *fb_mem;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::fbname	gfx/omap_gfx.c	/^  const char* fbname;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::fd	gfx/omap_gfx.c	/^  int fd;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::nat_h	gfx/omap_gfx.c	/^  unsigned nat_w, nat_h;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::nat_w	gfx/omap_gfx.c	/^  unsigned nat_w, nat_h;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::num_pages	gfx/omap_gfx.c	/^  int num_pages;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::old_page	gfx/omap_gfx.c	/^  omapfb_page_t *old_page;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::pages	gfx/omap_gfx.c	/^  omapfb_page_t *pages;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::saved_state	gfx/omap_gfx.c	/^  omapfb_state_t* saved_state;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data::sync	gfx/omap_gfx.c	/^  bool sync;$/;"	m	struct:omapfb_data	file:	access:public
omapfb_data_t	gfx/omap_gfx.c	/^} omapfb_data_t;$/;"	t	typeref:struct:omapfb_data	file:
omapfb_detect_screen	gfx/omap_gfx.c	/^static int omapfb_detect_screen(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_enable_plane	gfx/omap_gfx.c	/^static int omapfb_enable_plane(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_free	gfx/omap_gfx.c	/^void omapfb_free(omapfb_data_t *pdata) {$/;"	f	signature:(omapfb_data_t *pdata)
omapfb_init	gfx/omap_gfx.c	/^static int omapfb_init(omapfb_data_t *pdata, unsigned bpp) {$/;"	f	file:	signature:(omapfb_data_t *pdata, unsigned bpp)
omapfb_mmap	gfx/omap_gfx.c	/^static int omapfb_mmap(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_page	gfx/omap_gfx.c	/^typedef struct omapfb_page {$/;"	s	file:
omapfb_page::buf	gfx/omap_gfx.c	/^  void *buf;$/;"	m	struct:omapfb_page	file:	access:public
omapfb_page::used	gfx/omap_gfx.c	/^  bool used;$/;"	m	struct:omapfb_page	file:	access:public
omapfb_page::yoffset	gfx/omap_gfx.c	/^  unsigned yoffset;$/;"	m	struct:omapfb_page	file:	access:public
omapfb_page_t	gfx/omap_gfx.c	/^} omapfb_page_t;$/;"	t	typeref:struct:omapfb_page	file:
omapfb_prepare	gfx/omap_gfx.c	/^static void omapfb_prepare(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_scaling	gfx/omap_gfx.c	/^static float omapfb_scaling(omapfb_data_t *pdata, int width, int height) {$/;"	f	file:	signature:(omapfb_data_t *pdata, int width, int height)
omapfb_set_mode	gfx/omap_gfx.c	/^static int omapfb_set_mode(omapfb_data_t *pdata, int width, int height) {$/;"	f	file:	signature:(omapfb_data_t *pdata, int width, int height)
omapfb_setup_pages	gfx/omap_gfx.c	/^static int omapfb_setup_pages(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
omapfb_setup_plane	gfx/omap_gfx.c	/^static int omapfb_setup_plane(omapfb_data_t *pdata, int width, int height) {$/;"	f	file:	signature:(omapfb_data_t *pdata, int width, int height)
omapfb_setup_screeninfo	gfx/omap_gfx.c	/^static int omapfb_setup_screeninfo(omapfb_data_t *pdata, int width, int height) {$/;"	f	file:	signature:(omapfb_data_t *pdata, int width, int height)
omapfb_state	gfx/omap_gfx.c	/^typedef struct omapfb_state {$/;"	s	file:
omapfb_state::mem	gfx/omap_gfx.c	/^  void* mem;$/;"	m	struct:omapfb_state	file:	access:public
omapfb_state::mi	gfx/omap_gfx.c	/^  struct omapfb_mem_info mi;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::omapfb_mem_info	file:	access:public
omapfb_state::pi	gfx/omap_gfx.c	/^  struct omapfb_plane_info pi;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::omapfb_plane_info	file:	access:public
omapfb_state::si	gfx/omap_gfx.c	/^  struct fb_var_screeninfo si;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::fb_var_screeninfo	file:	access:public
omapfb_state_t	gfx/omap_gfx.c	/^} omapfb_state_t;$/;"	t	typeref:struct:omapfb_state	file:
on	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t on;$/;"	m	struct:btpad_queue_command::__anon142::__anon143	file:	access:public
onActivityCreated	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onActivityCreated(Bundle savedInstanceState)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle savedInstanceState)
onActivityResult	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onActivityResult(int requestCode, int resultCode, Intent data)$/;"	m	class:PreferenceListFragment	access:public	signature:(int requestCode, int resultCode, Intent data)
onBackPressed	android/native/jni/input_android.c	/^   jmethodID onBackPressed;$/;"	m	struct:android_input	file:	access:public
onBackPressed	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onBackPressed()$/;"	m	class:CoreManagerActivity	access:public	signature:()
onBackPressed	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onBackPressed()$/;"	m	class:RetroActivityCommon	access:public	signature:()
onCameraFrameAvailableListener	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private final OnFrameAvailableListener onCameraFrameAvailableListener = new OnFrameAvailableListener()$/;"	f	class:RetroActivityCamera	file:	access:private
onCameraFree	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraFree()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onCameraFree	camera/android.c	/^   jmethodID onCameraFree;$/;"	m	struct:android_camera	file:	access:public
onCameraInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraInit()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onCameraInit	camera/android.c	/^   jmethodID onCameraInit;$/;"	m	struct:android_camera	file:	access:public
onCameraPoll	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public boolean onCameraPoll()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onCameraPoll	camera/android.c	/^   jmethodID onCameraPoll;$/;"	m	struct:android_camera	file:	access:public
onCameraSetTexture	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraSetTexture(int gl_texid) throws IOException$/;"	m	class:RetroActivityCamera	access:public	signature:(int gl_texid)
onCameraSetTexture	camera/android.c	/^   jmethodID onCameraSetTexture;$/;"	m	struct:android_camera	file:	access:public
onCameraStart	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraStart()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onCameraStart	camera/android.c	/^   jmethodID onCameraStart;$/;"	m	struct:android_camera	file:	access:public
onCameraStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraStop()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onCameraStop	camera/android.c	/^   jmethodID onCameraStop;$/;"	m	struct:android_camera	file:	access:public
onCameraTextureInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCameraTextureInit(int gl_texid)$/;"	m	class:RetroActivityCamera	access:public	signature:(int gl_texid)
onClickListener	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	private final OnItemClickListener onClickListener = new OnItemClickListener()$/;"	f	class:CoreSelection	file:	access:private
onClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected OnDirectoryFragmentClosedListener onClosedListener;$/;"	f	class:DirectoryFragment	access:protected
onConfigurationChanged	frontend/platform/platform_android.c	/^static void onConfigurationChanged (ANativeActivity *activity)$/;"	f	file:	signature:(ANativeActivity *activity)
onConnected	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onConnected(Bundle dataBundle)$/;"	m	class:RetroActivityLocation	access:public	signature:(Bundle dataBundle)
onConnectionFailed	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onConnectionFailed(ConnectionResult connectionResult)$/;"	m	class:RetroActivityLocation	access:public	signature:(ConnectionResult connectionResult)
onCoreItemClicked	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		void onCoreItemClicked(int position, ModuleWrapper core);$/;"	m	interface:InstalledCoresFragment.OnCoreItemClickedListener	access:public	signature:(int position, ModuleWrapper core)
onCoreItemClicked	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^	public void onCoreItemClicked(int position, ModuleWrapper core)$/;"	m	class:InstalledCoresManagerFragment	access:public	signature:(int position, ModuleWrapper core)
onCoreSelected	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::onCoreSelected(QVariant value)$/;"	f	class:RetroArch	signature:(QVariant value)
onCoreSelected	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void onCoreSelected(QVariant);$/;"	p	class:RetroArch	access:public	signature:(QVariant)
onCreate	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	protected void onCreate(Bundle savedInstanceState) {$/;"	m	class:DisplayRefreshRateTest	access:protected	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:HistorySelection	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:CoreManagerActivity	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:MainMenuActivity	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:MainMenuFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:PreferenceActivity	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/AudioPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:AudioPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/GeneralPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:GeneralPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:InputPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:PathPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:VideoPreferenceFragment	access:public	signature:(Bundle savedInstanceState)
onCreate	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onCreate(Bundle paramBundle)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle paramBundle)
onCreate	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onCreate(Bundle savedInstanceState)$/;"	m	class:RetroActivityCamera	access:public	signature:(Bundle savedInstanceState)
onCreateDialog	android/phoenix/src/com/retroarch/browser/mainmenu/gplwaiver/GPLWaiverDialogFragment.java	/^	public Dialog onCreateDialog(Bundle savedInstanceState)$/;"	m	class:GPLWaiverDialogFragment	access:public	signature:(Bundle savedInstanceState)
onCreateDialogView	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	protected View onCreateDialogView()$/;"	m	class:KeyBindPreference	access:protected	signature:()
onCreateDialogView	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	protected View onCreateDialogView()$/;"	m	class:SeekbarPreference	access:protected	signature:()
onCreateView	android/phoenix/src/com/retroarch/browser/CoreSelection.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:CoreSelection	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:HistorySelection	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoreInfoFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoresFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresManagerFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:InstalledCoresManagerFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)$/;"	m	class:DirectoryFragment	access:public	signature:(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
onCreateView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public View onCreateView(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)$/;"	m	class:PreferenceListFragment	access:public	signature:(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, Bundle paramBundle)
onCreateView	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public View onCreateView(String name, Context context, AttributeSet attrs) {$/;"	m	class:KeyBindPreference	access:public	signature:(String name, Context context, AttributeSet attrs)
onDestroy	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^	protected void onDestroy() {$/;"	m	class:DisplayRefreshRateTest	access:protected	signature:()
onDestroy	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onDestroy()$/;"	m	class:PreferenceListFragment	access:public	signature:()
onDestroy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onDestroy()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onDestroy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onDestroy()$/;"	m	class:RetroActivityCommon	access:public	signature:()
onDestroy	frontend/platform/platform_android.c	/^static void onDestroy(ANativeActivity* activity)$/;"	f	file:	signature:(ANativeActivity* activity)
onDestroyView	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onDestroyView()$/;"	m	class:PreferenceListFragment	access:public	signature:()
onDialogClosed	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	protected void onDialogClosed(boolean positiveResult) {$/;"	m	class:KeyBindPreference	access:protected	signature:(boolean positiveResult)
onDialogClosed	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	protected void onDialogClosed(boolean positiveResult) {$/;"	m	class:SeekbarPreference	access:protected	signature:(boolean positiveResult)
onDirectoryFragmentClosed	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		void onDirectoryFragmentClosed(String path);$/;"	m	interface:DirectoryFragment.OnDirectoryFragmentClosedListener	access:public	signature:(String path)
onDirectoryFragmentClosed	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public void onDirectoryFragmentClosed(String path)$/;"	m	class:MainMenuFragment	access:public	signature:(String path)
onDisconnected	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onDisconnected()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onDrawFrame	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onDrawFrame(GL10 gl) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl)
onInputQueueCreated	frontend/platform/platform_android.c	/^static void onInputQueueCreated(ANativeActivity* activity, AInputQueue* queue)$/;"	f	file:	signature:(ANativeActivity* activity, AInputQueue* queue)
onInputQueueDestroyed	frontend/platform/platform_android.c	/^static void onInputQueueDestroyed(ANativeActivity* activity, AInputQueue* queue)$/;"	f	file:	signature:(ANativeActivity* activity, AInputQueue* queue)
onItemClick	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public void onItemClick(AdapterView<?> parent, View view, int position, long id) {$/;"	m	class:KeyBindPreference	access:public	signature:(AdapterView<?> parent, View view, int position, long id)
onItemClickListener	android/phoenix/src/com/retroarch/browser/HistorySelection.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:HistorySelection	file:	access:private
onItemClickListener	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
onItemClickListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	private final OnItemClickListener onItemClickListener = new OnItemClickListener()$/;"	f	class:DirectoryFragment	file:	access:private
onKey	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKey(View v, int keyCode, KeyEvent event) {$/;"	m	class:KeyBindPreference	access:public	signature:(View v, int keyCode, KeyEvent event)
onKeyDown	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public boolean onKeyDown(int keyCode, KeyEvent event)$/;"	m	class:DirectoryFragment	access:public	signature:(int keyCode, KeyEvent event)
onKeyDown	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKeyDown(int keyCode, KeyEvent event)$/;"	m	class:KeyBindEditText	access:public	signature:(int keyCode, KeyEvent event)
onKeyPreIme	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public boolean onKeyPreIme(int keyCode, KeyEvent event)$/;"	m	class:KeyBindEditText	access:public	signature:(int keyCode, KeyEvent event)
onListItemClick	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^	public void onListItemClick(ListView l, View v, int position, long id)$/;"	m	class:InstalledCoresFragment	access:public	signature:(ListView l, View v, int position, long id)
onLocationChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationChanged(Location location)$/;"	m	class:RetroActivityLocation	access:public	signature:(Location location)
onLocationFree	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationFree()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationFree	location/android.c	/^   jmethodID onLocationFree;$/;"	m	struct:android_location	file:	access:public
onLocationGetHorizontalAccuracy	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public float onLocationGetHorizontalAccuracy()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationGetHorizontalAccuracy	location/android.c	/^   jmethodID onLocationGetHorizontalAccuracy;$/;"	m	struct:android_location	file:	access:public
onLocationGetLatitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public double onLocationGetLatitude()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationGetLatitude	location/android.c	/^   jmethodID onLocationGetLatitude;$/;"	m	struct:android_location	file:	access:public
onLocationGetLongitude	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public double onLocationGetLongitude()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationGetLongitude	location/android.c	/^   jmethodID onLocationGetLongitude;$/;"	m	struct:android_location	file:	access:public
onLocationHasChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public boolean onLocationHasChanged()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationHasChanged	location/android.c	/^   jmethodID onLocationHasChanged;$/;"	m	struct:android_location	file:	access:public
onLocationInit	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationInit()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationInit	location/android.c	/^   jmethodID onLocationInit;$/;"	m	struct:android_location	file:	access:public
onLocationSetInterval	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^   public void onLocationSetInterval(int update_interval_in_ms, int distance_interval)$/;"	m	class:RetroActivityLocation	access:public	signature:(int update_interval_in_ms, int distance_interval)
onLocationSetInterval	location/android.c	/^   jmethodID onLocationSetInterval;$/;"	m	struct:android_location	file:	access:public
onLocationStart	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationStart()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationStart	location/android.c	/^   jmethodID onLocationStart;$/;"	m	struct:android_location	file:	access:public
onLocationStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onLocationStop()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onLocationStop	location/android.c	/^   jmethodID onLocationStop;$/;"	m	struct:android_location	file:	access:public
onLowMemory	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onLowMemory()$/;"	m	class:RetroActivityCommon	access:public	signature:()
onNativeWindowCreated	frontend/platform/platform_android.c	/^static void onNativeWindowCreated(ANativeActivity* activity, ANativeWindow* window)$/;"	f	file:	signature:(ANativeActivity* activity, ANativeWindow* window)
onNativeWindowDestroyed	frontend/platform/platform_android.c	/^static void onNativeWindowDestroyed(ANativeActivity* activity, ANativeWindow* window)$/;"	f	file:	signature:(ANativeActivity* activity, ANativeWindow* window)
onNewIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onNewIntent(Intent intent)$/;"	m	class:RetroActivityCommon	access:public	signature:(Intent intent)
onPause	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onPause()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onPause	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onPause()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onPause	frontend/platform/platform_android.c	/^static void onPause(ANativeActivity* activity)$/;"	f	file:	signature:(ANativeActivity* activity)
onPreferenceClick	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:MainMenuFragment	access:public	signature:(Preference preference)
onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/InputPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:InputPreferenceFragment	access:public	signature:(Preference preference)
onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/PathPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:PathPreferenceFragment	access:public	signature:(Preference preference)
onPreferenceClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/VideoPreferenceFragment.java	/^	public boolean onPreferenceClick(Preference preference)$/;"	m	class:VideoPreferenceFragment	access:public	signature:(Preference preference)
onPreferenceStartFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^        boolean onPreferenceStartFragment(PreferenceListFragment caller, Preference pref);$/;"	m	interface:PreferenceListFragment.OnPreferenceStartFragmentCallback	access:public	signature:(PreferenceListFragment caller, Preference pref)
onPreferenceTreeClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference)$/;"	m	class:PreferenceListFragment	access:public	signature:(PreferenceScreen preferenceScreen, Preference preference)
onPreferenceTreeClick	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^        boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference);$/;"	m	interface:PreferenceManagerCompat.OnPreferenceTreeClickListener	access:public	signature:(PreferenceScreen preferenceScreen, Preference preference)
onProgressChanged	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar, int progress, boolean fromUser)
onProviderDisabled	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onProviderDisabled(String provider)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider)
onProviderEnabled	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onProviderEnabled(String provider)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider)
onRestoreInstanceState	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	protected void onRestoreInstanceState(Bundle savedInstanceState)$/;"	m	class:MainMenuActivity	access:protected	signature:(Bundle savedInstanceState)
onResume	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onResume()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onResume	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onResume()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onResume	frontend/platform/platform_android.c	/^static void onResume(ANativeActivity* activity)$/;"	f	file:	signature:(ANativeActivity* activity)
onRotationCompleted	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::onRotationCompleted()$/;"	f	class:RetroArch	signature:()
onRotationCompleted	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void onRotationCompleted();$/;"	p	class:RetroArch	access:public	signature:()
onSaveInstanceState	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	public void onSaveInstanceState(Bundle outState)$/;"	m	class:DetectCoreDirectoryFragment	access:public	signature:(Bundle outState)
onSaveInstanceState	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void onSaveInstanceState(Bundle outState)$/;"	m	class:DirectoryFragment	access:public	signature:(Bundle outState)
onSaveInstanceState	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	protected void onSaveInstanceState(Bundle data)$/;"	m	class:MainMenuActivity	access:protected	signature:(Bundle data)
onSaveInstanceState	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onSaveInstanceState(Bundle outState)$/;"	m	class:PreferenceListFragment	access:public	signature:(Bundle outState)
onSharedPreferenceChanged	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key)$/;"	m	class:PreferenceActivity	access:public	signature:(SharedPreferences sharedPreferences, String key)
onStart	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onStart()$/;"	m	class:PreferenceListFragment	access:public	signature:()
onStart	frontend/platform/platform_android.c	/^static void onStart(ANativeActivity* activity)$/;"	f	file:	signature:(ANativeActivity* activity)
onStartTrackingTouch	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onStartTrackingTouch(SeekBar seekBar) {$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar)
onStatusChanged	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onStatusChanged(String provider, int status, Bundle extras)$/;"	m	class:RetroActivityLocation	access:public	signature:(String provider, int status, Bundle extras)
onStop	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void onStop()$/;"	m	class:PreferenceListFragment	access:public	signature:()
onStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	public void onStop()$/;"	m	class:RetroActivityCamera	access:public	signature:()
onStop	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityLocation.java	/^	public void onStop()$/;"	m	class:RetroActivityLocation	access:public	signature:()
onStop	frontend/platform/platform_android.c	/^static void onStop(ANativeActivity* activity)$/;"	f	file:	signature:(ANativeActivity* activity)
onStopTrackingTouch	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	public void onStopTrackingTouch(SeekBar seekBar) {	$/;"	m	class:SeekbarPreference	access:public	signature:(SeekBar seekBar)
onSurfaceChanged	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onSurfaceChanged(GL10 gl, int width, int height) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl, int width, int height)
onSurfaceCreated	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		public void onSurfaceCreated(GL10 gl, EGLConfig config) {$/;"	m	class:DisplayRefreshRateTest.Renderer	access:public	signature:(GL10 gl, EGLConfig config)
onTabReselected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabReselected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTabReselected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabReselected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTabSelected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabSelected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTabSelected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabSelected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTabUnselected	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	public void onTabUnselected(Tab tab, FragmentTransaction ft)$/;"	m	class:CoreManagerActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTabUnselected	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	public void onTabUnselected(Tab tab, FragmentTransaction ft)$/;"	m	class:PreferenceActivity	access:public	signature:(Tab tab, FragmentTransaction ft)
onTrimMemory	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	public void onTrimMemory(int level)$/;"	m	class:RetroActivityCommon	access:public	signature:(int level)
onWindowFocusChanged	frontend/platform/platform_android.c	/^static void onWindowFocusChanged(ANativeActivity* activity, int focused)$/;"	f	file:	signature:(ANativeActivity* activity, int focused)
opaque	deps/miniz/zlib.h	/^  void *opaque;                     \/\/ heap alloc function user pointer$/;"	m	struct:mz_stream_s	access:public
opaque	deps/minizip/unzip.c	/^    voidpf opaque;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
opcode	apple/iOS/bluetooth/btstack/hci_cmds.h	/^    uint16_t    opcode;$/;"	m	struct:__anon150	access:public
open	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void open(String configPath) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(String configPath)
open	file_extract.c	/^   void *(*open)(const char *path);$/;"	m	struct:zlib_file_backend	file:	access:public
open_default_config_file	settings.c	/^static config_file_t *open_default_config_file(void)$/;"	f	file:	signature:(void)
open_devices	input/udev_input.c	/^static bool open_devices(udev_input_t *udev, const char *type, device_handle_cb cb)$/;"	f	file:	signature:(udev_input_t *udev, const char *type, device_handle_cb cb)
open_file_func	deps/minizip/unzip.c	/^typedef voidpf (*open_file_func) (voidpf opaque, const char* filename, int mode);$/;"	t	file:
open_joystick	input/udev_joypad.c	/^static int open_joystick(const char *path)$/;"	f	file:	signature:(const char *path)
opensl_callback	audio/opensl.c	/^static void opensl_callback(SLAndroidSimpleBufferQueueItf bq, void *ctx)$/;"	f	file:	signature:(SLAndroidSimpleBufferQueueItf bq, void *ctx)
operator []	ps3/rgl/include/RGL/Base.h	/^      inline T& operator []( int i ) const { return array[i]; }$/;"	f	class:RGL::Vector	access:public	signature:( int i ) const
operator delete	ps3/rgl/include/RGL/Base.h	/^      void operator delete( void * \/*ptr*\/, void * \/*p*\/ ) { }$/;"	f	class:RGL::Vector	access:public	signature:( void * , void * )
operator new	ps3/rgl/include/RGL/Base.h	/^      void * operator new( size_t \/*size*\/, void *p ) { return p; }$/;"	f	class:RGL::Vector	access:public	signature:( size_t , void *p )
operator new	ps3/rgl/include/RGL/Base.h	/^      void * operator new( size_t size ) { return malloc( size ); }$/;"	f	class:RGL::Vector	access:public	signature:( size_t size )
opt_exists	qb/qb.params.sh	/^opt_exists() # $opt is returned if exists in OPTS$/;"	f
optarg	compat/compat.c	/^char *optarg;$/;"	v
opterr	compat/compat.c	/^int optind, opterr, optopt;$/;"	v
optind	compat/compat.c	/^int optind, opterr, optopt;$/;"	v
option	compat/getopt_rarch.h	/^struct option$/;"	s
option::flag	compat/getopt_rarch.h	/^   int *flag;$/;"	m	struct:option	access:public
option::has_arg	compat/getopt_rarch.h	/^   int has_arg;$/;"	m	struct:option	access:public
option::name	compat/getopt_rarch.h	/^   const char *name;$/;"	m	struct:option	access:public
option::val	compat/getopt_rarch.h	/^   int val;$/;"	m	struct:option	access:public
optopt	compat/compat.c	/^int optind, opterr, optopt;$/;"	v
opts	core_options.c	/^   struct core_option *opts;$/;"	m	struct:core_option_manager	typeref:struct:core_option_manager::core_option	file:	access:public
orientation_flags	apple/iOS/platform.h	/^   unsigned orientation_flags;$/;"	m	struct:__anon154	access:public
orientations	apple/iOS/platform.h	/^   char orientations[32];$/;"	m	struct:__anon154	access:public
orig	gfx/shader_cg.c	/^   struct cg_fbo_params orig;$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
orig	gfx/shader_glsl.c	/^   struct shader_uniforms_frame orig;$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
orig_src_ratio	general.h	/^      double orig_src_ratio;$/;"	m	struct:global::__anon235	access:public
osk	driver.h	/^   const input_osk_driver_t *osk;$/;"	m	struct:driver	access:public
osk	general.h	/^   } osk;$/;"	m	struct:global	typeref:struct:global::__anon239	access:public
osk	general.h	/^   } osk;$/;"	m	struct:settings	typeref:struct:settings::__anon230	access:public
osk_active	general.h	/^   bool osk_active;$/;"	m	struct:global	access:public
osk_allowed_panels	ps3/sdk_defines.h	166;"	d
osk_allowed_panels	ps3/sdk_defines.h	202;"	d
osk_callback_enter_filename	frontend/menu/menu_settings.c	/^static bool osk_callback_enter_filename(void *data)$/;"	f	file:	signature:(void *data)
osk_callback_enter_filename_init	frontend/menu/menu_settings.c	/^static bool osk_callback_enter_filename_init(void *data)$/;"	f	file:	signature:(void *data)
osk_callback_enter_rsound	frontend/menu/menu_settings.c	/^static bool osk_callback_enter_rsound(void *data)$/;"	f	file:	signature:(void *data)
osk_callback_enter_rsound_init	frontend/menu/menu_settings.c	/^static bool osk_callback_enter_rsound_init(void *data)$/;"	f	file:	signature:(void *data)
osk_callback_num_chars	ps3/sdk_defines.h	173;"	d
osk_callback_num_chars	ps3/sdk_defines.h	208;"	d
osk_callback_return_param	ps3/sdk_defines.h	172;"	d
osk_callback_return_param	ps3/sdk_defines.h	207;"	d
osk_callback_return_string	ps3/sdk_defines.h	174;"	d
osk_callback_return_string	ps3/sdk_defines.h	209;"	d
osk_data	driver.h	/^   void *osk_data;$/;"	m	struct:driver	access:public
osk_data_own	driver.h	/^   bool osk_data_own;$/;"	m	struct:driver	access:public
osk_drivers	driver.c	/^static const input_osk_driver_t *osk_drivers[] = {$/;"	v	file:
osk_init_func	driver_funcs.h	25;"	d
osk_inputfield_max_length	ps3/sdk_defines.h	171;"	d
osk_inputfield_max_length	ps3/sdk_defines.h	206;"	d
osk_inputfield_message	ps3/sdk_defines.h	169;"	d
osk_inputfield_message	ps3/sdk_defines.h	204;"	d
osk_inputfield_starttext	ps3/sdk_defines.h	170;"	d
osk_inputfield_starttext	ps3/sdk_defines.h	205;"	d
osk_memorycontainer	ps3/ps3_input_osk.c	/^   unsigned int osk_memorycontainer;$/;"	m	struct:ps3_osk	file:	access:public
osk_prohibit_flags	ps3/sdk_defines.h	167;"	d
osk_prohibit_flags	ps3/sdk_defines.h	203;"	d
oskutil_create_activation_parameters	driver.h	/^   void (*oskutil_create_activation_parameters)(void *data);$/;"	m	struct:input_osk_driver	access:public
oskutil_create_activation_parameters	ps3/ps3_input_osk.c	/^static void oskutil_create_activation_parameters(void *data)$/;"	f	file:	signature:(void *data)
oskutil_enable_key_layout	ps3/ps3_input_osk.c	/^static bool oskutil_enable_key_layout(void *data)$/;"	f	file:	signature:(void *data)
oskutil_free	ps3/ps3_input_osk.c	/^static void oskutil_free(void *data)$/;"	f	file:	signature:(void *data)
oskutil_get_text_buf	ps3/ps3_input_osk.c	/^static void *oskutil_get_text_buf(void *data)$/;"	f	file:	signature:(void *data)
oskutil_init	ps3/ps3_input_osk.c	/^static void *oskutil_init(size_t size)$/;"	f	file:	signature:(size_t size)
oskutil_lifecycle	ps3/ps3_input_osk.c	/^static void oskutil_lifecycle(void *data, uint64_t status)$/;"	f	file:	signature:(void *data, uint64_t status)
oskutil_start	ps3/ps3_input_osk.c	/^static bool oskutil_start(void *data) $/;"	f	file:	signature:(void *data)
oskutil_write_initial_message	ps3/ps3_input_osk.c	/^static void oskutil_write_initial_message(void *data, const void *data_msg)$/;"	f	file:	signature:(void *data, const void *data_msg)
oskutil_write_message	ps3/ps3_input_osk.c	/^static void oskutil_write_message(void *data, const void *data_msg)$/;"	f	file:	signature:(void *data, const void *data_msg)
oss_buffer_size	audio/oss.c	/^static size_t oss_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
oss_free	audio/oss.c	/^static void oss_free(void *data)$/;"	f	file:	signature:(void *data)
oss_init	audio/oss.c	/^static void *oss_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
oss_set_nonblock_state	audio/oss.c	/^static void oss_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
oss_start	audio/oss.c	/^static bool oss_start(void *data)$/;"	f	file:	signature:(void *data)
oss_stop	audio/oss.c	/^static bool oss_stop(void *data)$/;"	f	file:	signature:(void *data)
oss_write	audio/oss.c	/^static ssize_t oss_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
oss_write_avail	audio/oss.c	/^static size_t oss_write_avail(void *data)$/;"	f	file:	signature:(void *data)
osx_pad_init	apple/OSX/hid_pad.c	/^void osx_pad_init()$/;"	f
osx_pad_quit	apple/OSX/hid_pad.c	/^void osx_pad_quit()$/;"	f
other_addr	netplay.c	/^   struct sockaddr_storage other_addr;$/;"	m	struct:netplay	typeref:struct:netplay::sockaddr_storage	file:	access:public
other_frame_count	netplay.c	/^   uint32_t other_frame_count;$/;"	m	struct:netplay	file:	access:public
other_nick	netplay.c	/^   char other_nick[32];$/;"	m	struct:netplay	file:	access:public
other_ptr	netplay.c	/^   size_t other_ptr; \/\/ Points to the last reliable state that self ever had.$/;"	m	struct:netplay	file:	access:public
out_fmt	gfx/scaler/scaler.h	/^   enum scaler_pix_fmt out_fmt;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_pix_fmt	access:public
out_fragment	tools/cg2glsl.py	/^   out_fragment = '\\n'.join(frag_hacks + fragment_source)$/;"	v
out_height	gfx/scaler/scaler.h	/^   int out_height;$/;"	m	struct:scaler_ctx	access:public
out_height	record/ffemu.h	/^   unsigned out_height;$/;"	m	struct:ffemu_params	access:public
out_latency	config.def.h	/^static const int out_latency = 64;$/;"	v
out_pix_fmt	record/ffemu.c	/^   enum PixelFormat out_pix_fmt;$/;"	m	struct:ff_config_param	typeref:enum:ff_config_param::PixelFormat	file:	access:public
out_pixconv	gfx/scaler/scaler.h	/^   void (*out_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
out_rate	config.def.h	/^static const unsigned out_rate = 48000;$/;"	v
out_rate	general.h	/^      unsigned out_rate;$/;"	m	struct:settings::__anon231	access:public
out_size_f	gfx/shader_cg.c	/^   CGparameter out_size_f;$/;"	m	struct:cg_program	file:	access:public
out_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	out_size_f;$/;"	m	struct:hlsl_program	file:	access:public
out_size_v	gfx/shader_cg.c	/^   CGparameter out_size_v;$/;"	m	struct:cg_program	file:	access:public
out_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	out_size_v;$/;"	m	struct:hlsl_program	file:	access:public
out_stride	gfx/scaler/scaler.h	/^   int out_stride;$/;"	m	struct:scaler_ctx	access:public
out_trd_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_3d_out_mode_t out_trd_mode;$/;"	m	struct:__anon187	access:public
out_vertex	tools/cg2glsl.py	/^   out_vertex = '\\n'.join(vert_hacks + vertex_source)$/;"	v
out_width	gfx/scaler/scaler.h	/^   int out_width;$/;"	m	struct:scaler_ctx	access:public
out_width	record/ffemu.h	/^   unsigned out_width;$/;"	m	struct:ffemu_params	access:public
outbuf	record/ffemu.c	/^   uint8_t *outbuf;$/;"	m	struct:ff_audio_info	file:	access:public
outbuf	record/ffemu.c	/^   uint8_t *outbuf;$/;"	m	struct:ff_video_info	file:	access:public
outbuf_size	record/ffemu.c	/^   size_t outbuf_size;$/;"	m	struct:ff_audio_info	file:	access:public
outbuf_size	record/ffemu.c	/^   size_t outbuf_size;$/;"	m	struct:ff_video_info	file:	access:public
output	gfx/fonts/fonts.h	/^   uint8_t *output; \/\/ 8-bit alpha.$/;"	m	struct:font_output	access:public
output	gfx/scaler/scaler.h	/^   } output;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon211	access:public
outputFromH0	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char outputFromH0;             \/\/ final color from R0 or H0$/;"	m	struct:CgBinaryFragmentProgram	access:public
outputInfo	ps3/ps3_input_osk.c	/^   CellOskDialogCallbackReturnParam outputInfo;$/;"	m	struct:ps3_osk	file:	access:public
output_bytes_per_line	ps3/sdk_defines.h	248;"	d
output_bytes_per_line	ps3/sdk_defines.h	308;"	d
output_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t output_fb;$/;"	m	struct:__anon192	access:public
output_fb	gfx/context/sunxi_disp_ioctl.h	/^	__disp_fb_t output_fb;$/;"	m	struct:__anon194	access:public
output_frames	audio/resampler.h	/^   size_t output_frames;$/;"	m	struct:resampler_data	access:public
output_height	gfx/context/sunxi_disp_ioctl.h	/^	__u32 output_height; \/* used when scaler mode *\/$/;"	m	struct:__anon201	access:public
output_height	ps3/sdk_defines.h	250;"	d
output_height	ps3/sdk_defines.h	310;"	d
output_mix	audio/opensl.c	/^   SLObjectItf output_mix;$/;"	m	struct:sl	file:	access:public
output_mode	ps3/sdk_defines.h	247;"	d
output_mode	ps3/sdk_defines.h	307;"	d
output_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
output_size	gfx/shader_glsl.c	/^   int output_size;$/;"	m	struct:shader_uniforms	file:	access:public
output_type	gfx/context/sunxi_disp_ioctl.h	/^	__disp_output_type_t output_type[2];$/;"	m	struct:__anon203	access:public
output_width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 output_width; \/* used when scaler mode *\/$/;"	m	struct:__anon201	access:public
output_width	ps3/sdk_defines.h	249;"	d
output_width	ps3/sdk_defines.h	309;"	d
outsamples	general.h	/^      float *outsamples;$/;"	m	struct:global::__anon235	access:public
overlay	driver.h	/^   input_overlay_t *overlay;$/;"	m	struct:driver	access:public
overlay	general.h	/^      char overlay[PATH_MAX];$/;"	m	struct:settings::__anon232	access:public
overlay	gfx/gl_common.h	/^   struct gl_overlay_data *overlay;$/;"	m	struct:gl	typeref:struct:gl::gl_overlay_data	access:public
overlay	gfx/thread_wrapper.c	/^   const video_overlay_interface_t *overlay;$/;"	m	struct:thread_video	file:	access:public
overlay	input/overlay.c	/^struct overlay$/;"	s	file:
overlay::block_scale	input/overlay.c	/^   bool block_scale;$/;"	m	struct:overlay	file:	access:public
overlay::center_x	input/overlay.c	/^   float center_x, center_y;$/;"	m	struct:overlay	file:	access:public
overlay::center_y	input/overlay.c	/^   float center_x, center_y;$/;"	m	struct:overlay	file:	access:public
overlay::descs	input/overlay.c	/^   struct overlay_desc *descs;$/;"	m	struct:overlay	typeref:struct:overlay::overlay_desc	file:	access:public
overlay::full_screen	input/overlay.c	/^   bool full_screen;$/;"	m	struct:overlay	file:	access:public
overlay::h	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
overlay::image	input/overlay.c	/^   struct video_overlay_image image;$/;"	m	struct:overlay	typeref:struct:overlay::video_overlay_image	file:	access:public
overlay::load_images	input/overlay.c	/^   struct video_overlay_image *load_images;$/;"	m	struct:overlay	typeref:struct:overlay::video_overlay_image	file:	access:public
overlay::load_images_size	input/overlay.c	/^   unsigned load_images_size;$/;"	m	struct:overlay	file:	access:public
overlay::mod_h	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
overlay::mod_w	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
overlay::mod_x	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
overlay::mod_y	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay	file:	access:public
overlay::name	input/overlay.c	/^   char name[64];$/;"	m	struct:overlay	file:	access:public
overlay::scale	input/overlay.c	/^   float scale;$/;"	m	struct:overlay	file:	access:public
overlay::size	input/overlay.c	/^   size_t size;$/;"	m	struct:overlay	file:	access:public
overlay::w	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
overlay::x	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
overlay::y	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
overlay_desc	input/overlay.c	/^struct overlay_desc$/;"	s	file:
overlay_desc::alpha_mod	input/overlay.c	/^   float alpha_mod;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::analog_saturate_pct	input/overlay.c	/^   float analog_saturate_pct;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::hitbox	input/overlay.c	/^   enum overlay_hitbox hitbox;$/;"	m	struct:overlay_desc	typeref:enum:overlay_desc::overlay_hitbox	file:	access:public
overlay_desc::image	input/overlay.c	/^   struct video_overlay_image image;$/;"	m	struct:overlay_desc	typeref:struct:overlay_desc::video_overlay_image	file:	access:public
overlay_desc::image_index	input/overlay.c	/^   unsigned image_index;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::key_mask	input/overlay.c	/^   uint64_t key_mask;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::mod_h	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::mod_w	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::mod_x	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::mod_y	input/overlay.c	/^   float mod_x, mod_y, mod_w, mod_h;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::next_index	input/overlay.c	/^   unsigned next_index;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::next_index_name	input/overlay.c	/^   char next_index_name[64];$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::range_mod	input/overlay.c	/^   float range_mod;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::range_x	input/overlay.c	/^   float range_x, range_y;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::range_x_mod	input/overlay.c	/^   float range_x_mod, range_y_mod;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::range_y	input/overlay.c	/^   float range_x, range_y;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::range_y_mod	input/overlay.c	/^   float range_x_mod, range_y_mod;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::type	input/overlay.c	/^   enum overlay_type type;$/;"	m	struct:overlay_desc	typeref:enum:overlay_desc::overlay_type	file:	access:public
overlay_desc::x	input/overlay.c	/^   float x;$/;"	m	struct:overlay_desc	file:	access:public
overlay_desc::y	input/overlay.c	/^   float y;$/;"	m	struct:overlay_desc	file:	access:public
overlay_dir	general.h	/^   char overlay_dir[PATH_MAX];$/;"	m	struct:global	access:public
overlay_enable	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_enable(bool state)$/;"	f	class:D3DVideo	signature:(bool state)
overlay_enable	gfx/d3d9/d3d9.hpp	/^      void overlay_enable(bool state);$/;"	p	class:D3DVideo	access:public	signature:(bool state)
overlay_enable	gfx/gl_common.h	/^   bool overlay_enable;$/;"	m	struct:gl	access:public
overlay_full_screen	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_full_screen(bool enable)$/;"	f	class:D3DVideo	signature:(bool enable)
overlay_full_screen	gfx/d3d9/d3d9.hpp	/^      void overlay_full_screen(bool enable);$/;"	p	class:D3DVideo	access:public	signature:(bool enable)
overlay_full_screen	gfx/gl_common.h	/^   bool overlay_full_screen;$/;"	m	struct:gl	access:public
overlay_hitbox	input/overlay.c	/^enum overlay_hitbox$/;"	g	file:
overlay_interface	driver.h	/^   void (*overlay_interface)(void *data, const video_overlay_interface_t **iface);$/;"	m	struct:video_driver	access:public
overlay_load	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::overlay_load(const video_overlay_image *images, unsigned num_images)$/;"	f	class:D3DVideo	signature:(const video_overlay_image *images, unsigned num_images)
overlay_load	gfx/d3d9/d3d9.hpp	/^      bool overlay_load(const video_overlay_image *images, unsigned num_images);$/;"	p	class:D3DVideo	access:public	signature:(const video_overlay_image *images, unsigned num_images)
overlay_opacity	general.h	/^      float overlay_opacity;$/;"	m	struct:settings::__anon232	access:public
overlay_path	input/overlay.c	/^   char *overlay_path;$/;"	m	struct:input_overlay	file:	access:public
overlay_render	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_render(overlay_t &overlay)$/;"	f	class:D3DVideo	signature:(overlay_t &overlay)
overlay_render	gfx/d3d9/d3d9.hpp	/^      void overlay_render(overlay_t &overlay);$/;"	p	class:D3DVideo	access:public	signature:(overlay_t &overlay)
overlay_scale	general.h	/^      float overlay_scale;$/;"	m	struct:settings::__anon232	access:public
overlay_set_alpha	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_set_alpha(unsigned index, float mod)$/;"	f	class:D3DVideo	signature:(unsigned index, float mod)
overlay_set_alpha	gfx/d3d9/d3d9.hpp	/^      void overlay_set_alpha(unsigned index, float mod);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float mod)
overlay_state	driver.h	/^   input_overlay_state_t overlay_state;$/;"	m	struct:driver	access:public
overlay_t	gfx/d3d9/d3d9.hpp	/^} overlay_t;$/;"	t	typeref:struct:__anon222
overlay_tex_geom	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_tex_geom(unsigned index, float x, float y, float w, float h)$/;"	f	class:D3DVideo	signature:(unsigned index, float x, float y, float w, float h)
overlay_tex_geom	gfx/d3d9/d3d9.hpp	/^      void overlay_tex_geom(unsigned index, float x, float y, float w, float h);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float x, float y, float w, float h)
overlay_type	input/overlay.c	/^enum overlay_type$/;"	g	file:
overlay_vertex_geom	gfx/d3d9/d3d9.cpp	/^void D3DVideo::overlay_vertex_geom(unsigned index, float x, float y, float w, float h)$/;"	f	class:D3DVideo	signature:(unsigned index, float x, float y, float w, float h)
overlay_vertex_geom	gfx/d3d9/d3d9.hpp	/^      void overlay_vertex_geom(unsigned index, float x, float y, float w, float h);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, float x, float y, float w, float h)
overlays	gfx/d3d9/d3d9.hpp	/^      std::vector<overlay_t> overlays;$/;"	m	class:D3DVideo	access:private
overlays	gfx/gl_common.h	/^   unsigned overlays;$/;"	m	struct:gl	access:public
overlays	input/overlay.c	/^   struct overlay *overlays;$/;"	m	struct:input_overlay	typeref:struct:input_overlay::overlay	file:	access:public
overlays_enabled	gfx/d3d9/d3d9.hpp	/^      bool overlays_enabled;$/;"	m	class:D3DVideo	access:private
owner_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			owner_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
p	file_path.h	/^   void *p;$/;"	m	union:string_list_elem_attr	access:public
pAudioData	audio/xaudio-c/xaudio.h	/^   const BYTE* pAudioData;$/;"	m	struct:XAUDIO2_BUFFER	access:public
pBlocksUsed	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    *pBlocksUsed[2];$/;"	m	struct:GmmFixedAllocData	access:public
pContext	audio/xaudio-c/xaudio.h	/^   void *pContext;$/;"	m	struct:XAUDIO2_BUFFER	access:public
pData	ps3/rgl/src/include/GmmAlloc.h	/^   void        *pData;$/;"	m	struct:GmmTileBlock	access:public
pFreeHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pFreeHead[GMM_NUM_FREE_BINS];$/;"	m	struct:GmmAllocator	access:public
pFreeTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pFreeTail[GMM_NUM_FREE_BINS];$/;"	m	struct:GmmAllocator	access:public
pFrontBuffer	gfx/fonts/xdk1_xfonts.c	/^static D3DSurface *pFrontBuffer;$/;"	v	file:
pGmmFixedAllocData	ps3/rgl/src/rgl_ps3.cpp	/^static GmmFixedAllocData    *pGmmFixedAllocData = NULL;$/;"	v	file:
pGmmLocalAllocator	ps3/rgl/src/rgl_ps3.cpp	/^GmmAllocator         *pGmmLocalAllocator = NULL;$/;"	v
pHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pHead;$/;"	m	struct:GmmAllocator	access:public
pLock	ps3/rgl/src/rgl_ps3.cpp	/^static volatile uint32_t    *pLock = NULL;$/;"	v	file:
pMasterVoice	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2MasteringVoice *pMasterVoice;$/;"	m	struct:xaudio2	file:	access:public
pNext	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pNext;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
pNext	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmTileBlock *pNext;$/;"	m	struct:GmmTileBlock	typeref:struct:GmmTileBlock::GmmTileBlock	access:public
pNextFree	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pNextFree;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
pOskAbort	ps3/sdk_defines.h	156;"	d
pOskAbort	ps3/sdk_defines.h	198;"	d
pOskDisableDimmer	ps3/sdk_defines.h	155;"	d
pOskDisableDimmer	ps3/sdk_defines.h	197;"	d
pOskGetSize	ps3/sdk_defines.h	154;"	d
pOskGetSize	ps3/sdk_defines.h	196;"	d
pOskLoadAsync	ps3/sdk_defines.h	151;"	d
pOskLoadAsync	ps3/sdk_defines.h	193;"	d
pOskSetKeyLayoutOption	ps3/sdk_defines.h	153;"	d
pOskSetKeyLayoutOption	ps3/sdk_defines.h	195;"	d
pOskSetLayoutMode	ps3/sdk_defines.h	152;"	d
pOskSetLayoutMode	ps3/sdk_defines.h	194;"	d
pOskUnloadAsync	ps3/sdk_defines.h	157;"	d
pOskUnloadAsync	ps3/sdk_defines.h	199;"	d
pPendingFreeHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pPendingFreeHead;$/;"	m	struct:GmmAllocator	access:public
pPendingFreeTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pPendingFreeTail;$/;"	m	struct:GmmAllocator	access:public
pPrev	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pPrev;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
pPrev	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmTileBlock *pPrev;$/;"	m	struct:GmmTileBlock	typeref:struct:GmmTileBlock::GmmTileBlock	access:public
pPrevFree	ps3/rgl/src/include/GmmAlloc.h	/^   struct GmmBlock *pPrevFree;$/;"	m	struct:GmmBlock	typeref:struct:GmmBlock::GmmBlock	access:public
pSourceVoice	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2SourceVoice *pSourceVoice;$/;"	m	struct:xaudio2	file:	access:public
pSweepHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pSweepHead;$/;"	m	struct:GmmAllocator	access:public
pTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmBlock    *pTail;$/;"	m	struct:GmmAllocator	access:public
pTileHead	ps3/rgl/src/include/GmmAlloc.h	/^   GmmTileBlock    *pTileHead;$/;"	m	struct:GmmAllocator	access:public
pTileTail	ps3/rgl/src/include/GmmAlloc.h	/^   GmmTileBlock    *pTileTail;$/;"	m	struct:GmmAllocator	access:public
pXAudio2	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2 *pXAudio2;$/;"	m	struct:xaudio2	file:	access:public
p_align	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_align;$/;"	m	struct:__anon39	access:public
p_align	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_align;$/;"	m	struct:__anon40	access:public
p_align	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_align;	\/* memory alignment *\/$/;"	m	struct:__anon6	access:public
p_filesz	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_filesz;$/;"	m	struct:__anon39	access:public
p_filesz	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_filesz;$/;"	m	struct:__anon40	access:public
p_filesz	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_filesz;	\/* number of bytes in file for seg. *\/$/;"	m	struct:__anon6	access:public
p_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_flags;$/;"	m	struct:__anon39	access:public
p_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_flags;$/;"	m	struct:__anon40	access:public
p_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_flags;	\/* flags *\/$/;"	m	struct:__anon6	access:public
p_memsz	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_memsz;$/;"	m	struct:__anon39	access:public
p_memsz	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_memsz;$/;"	m	struct:__anon40	access:public
p_memsz	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_memsz;	\/* number of bytes in mem. for seg. *\/$/;"	m	struct:__anon6	access:public
p_offset	ps3/rgl/src/libelf/elf.h	/^   int32_t	p_offset;$/;"	m	struct:__anon39	access:public
p_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_offset;$/;"	m	struct:__anon40	access:public
p_offset	wii/app_booter/elf_abi.h	/^	Elf32_Off	p_offset;	\/* segment offset *\/$/;"	m	struct:__anon6	access:public
p_paddr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_paddr;$/;"	m	struct:__anon39	access:public
p_paddr	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_paddr;$/;"	m	struct:__anon40	access:public
p_paddr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	p_paddr;	\/* physical address - ignored? *\/$/;"	m	struct:__anon6	access:public
p_swap_interval	gfx/context/wgl_ctx.c	/^static BOOL (APIENTRY *p_swap_interval)(int);$/;"	v	file:
p_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_type;$/;"	m	struct:__anon39	access:public
p_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_type;$/;"	m	struct:__anon40	access:public
p_type	wii/app_booter/elf_abi.h	/^	Elf32_Word	p_type;		\/* segment type *\/$/;"	m	struct:__anon6	access:public
p_vaddr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	p_vaddr;$/;"	m	struct:__anon39	access:public
p_vaddr	ps3/rgl/src/libelf/elf.h	/^   uint64_t	p_vaddr;$/;"	m	struct:__anon40	access:public
p_vaddr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	p_vaddr;	\/* virtual address of segment *\/$/;"	m	struct:__anon6	access:public
pa_t	audio/pulse.c	/^} pa_t;$/;"	t	typeref:struct:__anon102	file:
pack	ps3/ps3py/pkg.py	/^	def pack(self):$/;"	m	class:Struct	access:public
pack	ps3/ps3py/pkg.py	/^def pack(folder, contentid, outname=None):$/;"	f	access:public
packAlignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei		packAlignment;$/;"	m	struct:RGLcontext	access:public
pack_flag	ps3/sdk_defines.h	312;"	d
packet_buffer	netplay.c	/^   uint32_t packet_buffer[UDP_FRAME_PACKETS * 2]; \/\/ To compat UDP packet loss we also send old data along with the packets.$/;"	m	struct:netplay	file:	access:public
packet_handler	apple/common/apple_input.h	/^   void (*packet_handler)(void* device, uint8_t *packet, uint16_t size);$/;"	m	struct:apple_pad_interface	access:public
pad0	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad0;$/;"	m	struct:rglGcmSemaphore	access:public
pad1	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad1;$/;"	m	struct:rglGcmSemaphore	access:public
pad2	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad2;$/;"	m	struct:rglGcmSemaphore	access:public
pad_axis	apple/common/apple_input.h	/^   int16_t pad_axis[MAX_PLAYERS][4];$/;"	m	struct:__anon160	access:public
pad_buttons	apple/common/apple_input.h	/^   uint32_t pad_buttons[MAX_PLAYERS];$/;"	m	struct:__anon160	access:public
pad_index_to_xplayer_index	input/winxinput_joypad.c	/^static inline int pad_index_to_xplayer_index(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
pad_state	gx/gx_input.c	/^   uint64_t pad_state[MAX_PADS];$/;"	m	struct:gx_input	file:	access:public
pads_connected	android/native/jni/input_android.c	/^   unsigned pads_connected;$/;"	m	struct:android_input	file:	access:public
pads_connected	blackberry-qnx/qnx_input.c	/^unsigned pads_connected;$/;"	v
pads_connected	ps3/ps3_input.c	/^   unsigned pads_connected;$/;"	m	struct:ps3_input	file:	access:public
paeth	gfx/rpng/rpng.c	/^static inline int paeth(int a, int b, int c)$/;"	f	file:	signature:(int a, int b, int c)
page_flip	gfx/omap_gfx.c	/^static void page_flip(omapfb_data_t *pdata) {$/;"	f	file:	signature:(omapfb_data_t *pdata)
page_flip_handler	gfx/context/drm_egl_ctx.c	/^static void page_flip_handler(int fd, unsigned frame, unsigned sec, unsigned usec, void *data)$/;"	f	file:	signature:(int fd, unsigned frame, unsigned sec, unsigned usec, void *data)
page_scan_repetition_mode	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t page_scan_repetition_mode;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
pages	gfx/omap_gfx.c	/^  omapfb_page_t *pages;$/;"	m	struct:omapfb_data	file:	access:public
pal_enable	general.h	/^         bool pal_enable;$/;"	m	struct:global::__anon242::__anon243	access:public
paramSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int paramSection;$/;"	m	struct:_ELF_t	access:public
param_attrib	ps3/sdk_defines.h	70;"	d
param_attrib	ps3/sdk_defines.h	82;"	d
parameterArray	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryParameterOffset parameterArray;$/;"	m	struct:CgBinaryProgram	access:public
parameterCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int parameterCount;$/;"	m	struct:CgBinaryProgram	access:public
parameterEntry	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterEntry *parameterEntry;$/;"	m	struct:CgRuntimeParameter	access:public
parameterResources	ps3/rgl/include/Cg/CgCommon.h	/^   char *parameterResources;$/;"	m	struct:_CGprogram	access:public
parametersEntries	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterEntry *parametersEntries;$/;"	m	struct:_CGprogram	access:public
paramno	ps3/rgl/include/Cg/cgBinary.h	/^      int                             paramno;       \/\/ 0..n: cgGetParameterIndex() -1: globals$/;"	m	struct:CgBinaryParameter	access:public
params	record/ffemu.c	/^   struct ffemu_params params;$/;"	m	struct:ffemu	typeref:struct:ffemu::ffemu_params	file:	access:public
paramtab	ps3/rgl/src/rgl_cg.h	/^   const char *paramtab;$/;"	m	struct:__anon32	access:public
paramtabSize	ps3/rgl/src/rgl_cg.h	/^   size_t paramtabSize;$/;"	m	struct:__anon32	access:public
parent	apple/iOS/menu.h	/^@property (nonatomic, weak) RAMenuCoreList* parent;$/;"	v
parentContext	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGcontext*   parentContext; \/\/ parent context for this program$/;"	m	struct:_CGprogram	typeref:struct:_CGprogram::_CGcontext	access:public
parentEffect	ps3/rgl/include/Cg/CgCommon.h	/^   void*                parentEffect;  \/\/ parent effect for this program (only used for default program of an effect, containing effect parameters)$/;"	m	struct:_CGprogram	access:public
parentIsBack	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		protected boolean parentIsBack;$/;"	f	class:DirectoryFragment.BackStackItem	access:protected
parentItem	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final boolean parentItem;$/;"	f	class:FileWrapper	file:	access:private
parentTable	apple/iOS/menu.h	/^@property (nonatomic, weak) UITableView* parentTable;$/;"	v
parseLine	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	private void parseLine(String line)$/;"	m	class:ConfigFile	file:	access:private	signature:(String line)
parse_config_file	settings.c	/^static void parse_config_file(void)$/;"	f	file:	signature:(void)
parse_config_file	settings.c	/^static void parse_config_file(void);$/;"	p	file:	signature:(void)
parse_decimal	performance/performance_android.c	/^parse_decimal(const char* input, const char* limit, int* result)$/;"	f	file:	signature:(const char* input, const char* limit, int* result)
parse_hat	input/input_common.c	/^static void parse_hat(struct retro_keybind *bind, const char *str)$/;"	f	file:	signature:(struct retro_keybind *bind, const char *str)
parse_input	qb/qb.params.sh	/^parse_input() # Parse stuff :V$/;"	f
parse_input	retroarch.c	/^static void parse_input(int argc, char *argv[])$/;"	f	file:	signature:(int argc, char *argv[])
parse_input	tools/retroarch-joyconfig.c	/^static void parse_input(int argc, char *argv[])$/;"	f	file:	signature:(int argc, char *argv[])
parse_line	conf/config_file.c	/^static bool parse_line(config_file_t *conf, struct config_entry_list *list, char *line)$/;"	f	file:	signature:(config_file_t *conf, struct config_entry_list *list, char *line)
parse_long	compat/compat.c	/^static int parse_long(const struct option *longopts, char * const *argv)$/;"	f	file:	signature:(const struct option *longopts, char * const *argv)
parse_msg	command.c	/^static void parse_msg(rarch_cmd_t *handle, char *buf)$/;"	f	file:	signature:(rarch_cmd_t *handle, char *buf)
parse_packet	netplay.c	/^static void parse_packet(netplay_t *handle, uint32_t *buffer, unsigned size)$/;"	f	file:	signature:(netplay_t *handle, uint32_t *buffer, unsigned size)
parse_ports	audio/jack.c	/^static int parse_ports(char **dest_ports, const char **jports)$/;"	f	file:	signature:(char **dest_ports, const char **jports)
parse_short	compat/compat.c	/^static int parse_short(const char *optstring, char * const *argv)$/;"	f	file:	signature:(const char *optstring, char * const *argv)
parse_sub_msg	command.c	/^static void parse_sub_msg(rarch_cmd_t *handle, const char *tok)$/;"	f	file:	signature:(rarch_cmd_t *handle, const char *tok)
parse_variable	core_options.c	/^static bool parse_variable(core_option_manager_t *opt, size_t index, const struct retro_variable *var)$/;"	f	file:	signature:(core_option_manager_t *opt, size_t index, const struct retro_variable *var)
partialTexType	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int partialTexType;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
partialTexType	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  partialTexType;           \/\/ texid 0..15 use two bits each marking whether the texture format requires partial load: see CgBinaryPartialTexType$/;"	m	struct:CgBinaryFragmentProgram	access:public
pass	gfx/d3d9/render_chain.hpp	/^   struct gfx_shader_pass *pass;$/;"	m	struct:LinkInfo	typeref:struct:LinkInfo::gfx_shader_pass	access:public
pass	gfx/shader_glsl.c	/^   struct shader_uniforms_frame pass[GFX_MAX_SHADERS];$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
pass	gfx/shader_parse.h	/^   struct gfx_shader_pass pass[GFX_MAX_SHADERS];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::gfx_shader_pass	access:public
passes	gfx/d3d9/render_chain.hpp	/^      std::vector<Pass> passes;$/;"	m	class:RenderChain	access:private
passes	gfx/shader_parse.h	/^   unsigned passes;$/;"	m	struct:gfx_shader	access:public
pat_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_hwc_mode_t pat_mode;$/;"	m	struct:__anon191	access:public
patch_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
patch_data	patch.c	/^   const uint8_t *patch_data, *source_data; $/;"	m	struct:ups_data	file:	access:public
patch_error_t	patch.h	/^} patch_error_t;$/;"	t	typeref:enum:__anon140
patch_func_t	patch.h	/^typedef patch_error_t (*patch_func_t)(const uint8_t*, size_t, const uint8_t*, size_t, uint8_t*, size_t*);$/;"	t
patch_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
patch_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
patch_rom	file.c	/^static void patch_rom(uint8_t **buf, ssize_t *size)$/;"	f	file:	signature:(uint8_t **buf, ssize_t *size)
path	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		protected final String path;$/;"	f	class:DirectoryFragment.BackStackItem	access:protected
path	apple/iOS/menu.h	/^@property (nonatomic) NSString* path;$/;"	v
path	apple/iOS/views.h	/^@property (nonatomic) NSString* path;$/;"	v
path	autosave.c	/^   const char *path;$/;"	m	struct:autosave	file:	access:public
path	conf/config_file.c	/^   char *path;$/;"	m	struct:config_file	file:	access:public
path	conf/config_file.c	/^   char *path;$/;"	m	struct:include_list	file:	access:public
path	core_info.h	/^   char *path;$/;"	m	struct:__anon251	access:public
path	core_info.h	/^   char *path;$/;"	m	struct:__anon252	access:public
path	file_list.c	/^   char *path;$/;"	m	struct:item_file	file:	access:public
path	frontend/menu/history.c	/^   char *path;$/;"	m	struct:rom_history_entry	file:	access:public
path	gfx/shader_parse.h	/^   char path[PATH_MAX];$/;"	m	struct:gfx_shader_lut	access:public
path	gfx/thread_wrapper.c	/^         const char *path;$/;"	m	struct:thread_video::__anon215::__anon216	file:	access:public
path	input/udev_joypad.c	/^   char *path;$/;"	m	struct:udev_joypad	file:	access:public
path	libretro.h	/^   const char *path;       \/\/ Path to game, UTF-8 encoded. Usually used as a reference.$/;"	m	struct:retro_game_info	access:public
pathSettingKey	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected String pathSettingKey;$/;"	f	class:DirectoryFragment	access:protected
path_basedir	file_path.c	/^void path_basedir(char *path)$/;"	f	signature:(char *path)
path_basedir	file_path.h	/^void path_basedir(char *path);$/;"	p	signature:(char *path)
path_basename	file_path.c	/^const char *path_basename(const char *path)$/;"	f	signature:(const char *path)
path_basename	file_path.h	/^const char *path_basename(const char *path);$/;"	p	signature:(const char *path)
path_char_is_slash	file_path.c	/^static bool path_char_is_slash(char c)$/;"	f	file:	signature:(char c)
path_default_slash	file_path.c	/^static const char *path_default_slash(void)$/;"	f	file:	signature:(void)
path_ext	tools/cg2glsl.py	/^def path_ext(path):$/;"	f	access:public
path_file_exists	file_path.c	/^bool path_file_exists(const char *path)$/;"	f	signature:(const char *path)
path_file_exists	file_path.h	/^bool path_file_exists(const char *path);$/;"	p	signature:(const char *path)
path_get_extension	file_path.c	/^const char *path_get_extension(const char *path)$/;"	f	signature:(const char *path)
path_get_extension	file_path.h	/^const char *path_get_extension(const char *path);$/;"	p	signature:(const char *path)
path_is_absolute	file_path.c	/^bool path_is_absolute(const char *path)$/;"	f	signature:(const char *path)
path_is_absolute	file_path.h	/^bool path_is_absolute(const char *path);$/;"	p	signature:(const char *path)
path_is_directory	file_path.c	/^bool path_is_directory(const char *path)$/;"	f	signature:(const char *path)
path_is_directory	file_path.h	/^bool path_is_directory(const char *path);$/;"	p	signature:(const char *path)
path_mkdir	file_path.c	/^bool path_mkdir(const char *dir)$/;"	f	signature:(const char *dir)
path_mkdir	file_path.h	/^bool path_mkdir(const char *dir);$/;"	p	signature:(const char *dir)
path_mkdir_norecurse	file_path.c	/^static bool path_mkdir_norecurse(const char *dir)$/;"	f	file:	signature:(const char *dir)
path_parent_dir	file_path.c	/^void path_parent_dir(char *path)$/;"	f	signature:(char *path)
path_parent_dir	file_path.h	/^void path_parent_dir(char *path);$/;"	p	signature:(char *path)
path_remove_extension	file_path.c	/^char *path_remove_extension(char *path)$/;"	f	signature:(char *path)
path_remove_extension	file_path.h	/^char *path_remove_extension(char *path);$/;"	p	signature:(char *path)
path_resolve_realpath	file_path.c	/^void path_resolve_realpath(char *buf, size_t size)$/;"	f	signature:(char *buf, size_t size)
path_resolve_realpath	file_path.h	/^void path_resolve_realpath(char *buf, size_t size);$/;"	p	signature:(char *buf, size_t size)
pause_nonactive	config.def.h	/^static const bool pause_nonactive = false;$/;"	v
pause_nonactive	general.h	/^   bool pause_nonactive;$/;"	m	struct:settings	access:public
pbo	gfx/gl_common.h	/^   GLuint pbo;$/;"	m	struct:gl	access:public
pbo_readback	gfx/gl_common.h	/^   GLuint pbo_readback[4];$/;"	m	struct:gl	access:public
pbo_readback_enable	gfx/gl_common.h	/^   bool pbo_readback_enable;$/;"	m	struct:gl	access:public
pbo_readback_index	gfx/gl_common.h	/^   unsigned pbo_readback_index;$/;"	m	struct:gl	access:public
pbo_readback_scaler	gfx/gl_common.h	/^   struct scaler_ctx pbo_readback_scaler;$/;"	m	struct:gl	typeref:struct:gl::scaler_ctx	access:public
pbo_readback_valid	gfx/gl_common.h	/^   bool pbo_readback_valid;$/;"	m	struct:gl	access:public
pcm	audio/alsa.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa	file:	access:public
pcm	audio/alsathread.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa_thread	file:	access:public
pcm	blackberry-qnx/alsa_qsa.c	/^   snd_pcm_t *pcm;$/;"	m	struct:alsa	file:	access:public
pcreate_context	gfx/context/wgl_ctx.c	/^static wglCreateContextAttribsProc pcreate_context;$/;"	v	file:
peCMode0	gx/gx_video_inl.h	/^	u32 peCMode0;$/;"	m	struct:__gx_regdef	access:public
peCMode1	gx/gx_video_inl.h	/^	u32 peCMode1;$/;"	m	struct:__gx_regdef	access:public
peCntrl	gx/gx_video_inl.h	/^	u32 peCntrl;$/;"	m	struct:__gx_regdef	access:public
peZMode	gx/gx_video_inl.h	/^	u32 peZMode;$/;"	m	struct:__gx_regdef	access:public
peglCreateImageKHR	gfx/context/vc_egl_ctx.c	/^static PFNEGLCREATEIMAGEKHRPROC peglCreateImageKHR;$/;"	v	file:
peglDestroyImageKHR	gfx/context/vc_egl_ctx.c	/^static PFNEGLDESTROYIMAGEKHRPROC peglDestroyImageKHR;$/;"	v	file:
pendingInputQueue	frontend/platform/platform_android.h	/^   AInputQueue* pendingInputQueue;$/;"	m	struct:android_app	access:public
pendingIntent	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCommon.java	/^	private Intent pendingIntent = null;$/;"	f	class:RetroActivityCommon	file:	access:private
pendingWindow	frontend/platform/platform_android.h	/^   ANativeWindow* pendingWindow;$/;"	m	struct:android_app	access:public
perf0Mode	gx/gx_video_inl.h	/^	u32 perf0Mode;$/;"	m	struct:__gx_regdef	access:public
perf1Mode	gx/gx_video_inl.h	/^	u32 perf1Mode;$/;"	m	struct:__gx_regdef	access:public
perf_counters_libretro	performance.c	/^static const struct retro_perf_counter *perf_counters_libretro[MAX_COUNTERS];$/;"	v	typeref:struct:retro_perf_counter	file:
perf_counters_rarch	performance.c	/^static const struct retro_perf_counter *perf_counters_rarch[MAX_COUNTERS];$/;"	v	typeref:struct:retro_perf_counter	file:
perf_log	libretro.h	/^   retro_perf_log_t              perf_log;$/;"	m	struct:retro_perf_callback	access:public
perf_ptr_libretro	performance.c	/^static unsigned perf_ptr_libretro;$/;"	v	file:
perf_ptr_rarch	performance.c	/^static unsigned perf_ptr_rarch;$/;"	v	file:
perf_register	libretro.h	/^   retro_perf_register_t         perf_register;$/;"	m	struct:retro_perf_callback	access:public
perf_start	libretro.h	/^   retro_perf_start_t            perf_start;$/;"	m	struct:retro_perf_callback	access:public
perf_stop	libretro.h	/^   retro_perf_stop_t             perf_stop;$/;"	m	struct:retro_perf_callback	access:public
performance_level	general.h	/^      unsigned performance_level;$/;"	m	struct:global::__anon234	access:public
period_frames	audio/alsathread.c	/^   snd_pcm_uframes_t period_frames;$/;"	m	struct:alsa_thread	file:	access:public
period_ns	gfx/context/sunxi_disp_ioctl.h	/^	__u32 period_ns;$/;"	m	struct:__anon199	access:public
period_size	audio/alsathread.c	/^   size_t period_size;$/;"	m	struct:alsa_thread	file:	access:public
permissions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> permissions;$/;"	f	class:ModuleWrapper	file:	access:private
permissions	core_info.h	/^   char *permissions;$/;"	m	struct:__anon252	access:public
permissions_list	core_info.h	/^   struct string_list *permissions_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
persistentMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			persistentMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
persistentMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int persistentMemorySize;$/;"	m	struct:rglGcmResource	access:public
pfile_in_zip_read	deps/minizip/unzip.c	/^    file_in_zip_read_info_s* pfile_in_zip_read; \/* structure about the current$/;"	m	struct:__anon111	file:	access:public
phase	libretro-test/libretro-test.c	/^static unsigned phase;$/;"	v	file:
phase_table	audio/sinc.c	/^   float *phase_table;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
pi	gfx/omap_gfx.c	/^  struct omapfb_plane_info pi;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::omapfb_plane_info	file:	access:public
pin	apple/iOS/bluetooth/btpad_queue.c	/^         bd_addr_t pin;$/;"	m	struct:btpad_queue_command::__anon142::__anon147	file:	access:public
pipe	gfx/context/sunxi_disp_ioctl.h	/^	__u8 pipe;$/;"	m	struct:__anon187	access:public
pitch	camera/video4linux2.c	/^   size_t pitch;$/;"	m	struct:video4linux	file:	access:public
pitch	general.h	/^      size_t pitch;$/;"	m	struct:global::__anon240	access:public
pitch	general.h	/^      unsigned pitch;$/;"	m	struct:global::__anon237	access:public
pitch	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
pitch	gfx/lima_gfx.c	/^	int pitch;$/;"	m	struct:LIMA_Surface	file:	access:public
pitch	gfx/thread_wrapper.c	/^      unsigned pitch;$/;"	m	struct:thread_video::__anon221	file:	access:public
pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		pitch;$/;"	m	struct:__anon52	access:public
pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pitch;	\/\/ 0 if swizzled$/;"	m	struct:__anon49	access:public
pitch	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int pitch;$/;"	m	struct:__anon55	access:public
pitch	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint pitch;       \/\/ in bytes$/;"	m	struct:__anon28	file:	access:public
pitch	record/ffemu.h	/^   int pitch;$/;"	m	struct:ffemu_video_data	access:public
pix_fmt	general.h	/^      enum retro_pixel_format pix_fmt;$/;"	m	struct:global::__anon234	typeref:enum:global::__anon234::retro_pixel_format	access:public
pix_fmt	record/ffemu.c	/^   enum PixelFormat pix_fmt;$/;"	m	struct:ff_video_info	typeref:enum:ff_video_info::PixelFormat	file:	access:public
pix_fmt	record/ffemu.h	/^   enum ffemu_pix_format pix_fmt;$/;"	m	struct:ffemu_params	typeref:enum:ffemu_params::ffemu_pix_format	access:public
pix_size	record/ffemu.c	/^   size_t pix_size;$/;"	m	struct:ff_video_info	file:	access:public
pixelBits	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 		pixelBits;$/;"	m	struct:__anon52	access:public
pixelKill	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char pixelKill;                \/\/ fp uses kill operations$/;"	m	struct:CgBinaryFragmentProgram	access:public
pixel_size	gfx/d3d9/render_chain.hpp	/^      unsigned pixel_size;$/;"	m	class:RenderChain	access:private
pixels	gfx/image.h	/^   LPDIRECT3DTEXTURE pixels;$/;"	m	struct:texture_image	access:public
pixels	gfx/image.h	/^   uint32_t *pixels;$/;"	m	struct:texture_image	access:public
pixels	gfx/lima_gfx.c	/^	void *pixels;$/;"	m	struct:LIMA_Surface	file:	access:public
pkg_crypt	ps3/ps3py/crypt.c	/^static PyObject* pkg_crypt(PyObject *self, PyObject *args) {$/;"	f	file:	signature:(PyObject *self, PyObject *args)
planar_buf	record/ffemu.c	/^   void *planar_buf;$/;"	m	struct:ff_audio_info	file:	access:public
planar_buf_frames	record/ffemu.c	/^   size_t planar_buf_frames;$/;"	m	struct:ff_audio_info	file:	access:public
planarize_audio	record/ffemu.c	/^static void planarize_audio(ffemu_t *handle)$/;"	f	file:	signature:(ffemu_t *handle)
planarize_float	record/ffemu.c	/^static void planarize_float(float *out, const float *in, size_t frames)$/;"	f	file:	signature:(float *out, const float *in, size_t frames)
planarize_s16	record/ffemu.c	/^static void planarize_s16(int16_t *out, const int16_t *in, size_t frames)$/;"	f	file:	signature:(int16_t *out, const int16_t *in, size_t frames)
platform	libretro-test-gl/Makefile	/^   platform = osx$/;"	m
platform	libretro-test-gl/Makefile	/^   platform = win$/;"	m
platform	libretro-test-gl/Makefile	/^platform = unix$/;"	m
platform	libretro-test/Makefile	/^   platform = emscripten$/;"	m
platform	libretro-test/Makefile	/^   platform = osx$/;"	m
platform	libretro-test/Makefile	/^   platform = win$/;"	m
platform	libretro-test/Makefile	/^platform = unix$/;"	m
platformBufferObject	ps3/rgl/include/RGL/Types.h	/^      void *platformBufferObject[];$/;"	m	struct:rglBufferObject	access:public
platformDevice	ps3/rgl/include/RGL/Types.h	/^      char			platformDevice[]; \/\/ C99 flexible array member$/;"	m	struct:RGLdevice	access:public
platformFenceObject	ps3/rgl/include/RGL/Types.h	/^      void* platformFenceObject[];$/;"	m	struct:__anon64	access:public
platformProgram	ps3/rgl/include/Cg/CgCommon.h	/^   void*     platformProgram;$/;"	m	struct:_CGprogram	access:public
platformProgramBinary	ps3/rgl/include/Cg/CgCommon.h	/^   void*     platformProgramBinary;$/;"	m	struct:_CGprogram	access:public
platformTexture	ps3/rgl/include/RGL/Types.h	/^      void * platformTexture[]; \/\/ C99 flexible array member$/;"	m	struct:__anon63	access:public
platform_bind	driver.h	/^struct platform_bind$/;"	s
platform_bind::desc	driver.h	/^   char desc[64];$/;"	m	struct:platform_bind	access:public
platform_bind::joykey	driver.h	/^   uint64_t joykey;$/;"	m	struct:platform_bind	access:public
platform_keys	blackberry-qnx/frontend_qnx.h	/^const struct platform_bind platform_keys[] = {$/;"	v	typeref:struct:platform_bind
platform_keys	gx/gx_input.c	/^const struct platform_bind platform_keys[] = {$/;"	v	typeref:struct:platform_bind
platform_keys	ps3/ps3_input.c	/^const struct platform_bind platform_keys[] = {$/;"	v	typeref:struct:platform_bind
platform_keys	psp/psp_input.c	/^const struct platform_bind platform_keys[] = {$/;"	v	typeref:struct:platform_bind
platform_keys	xdk/xdk_xinput_input.c	/^const struct platform_bind platform_keys[] = {$/;"	v	typeref:struct:platform_bind
playback	movie.c	/^   bool playback;$/;"	m	struct:bsv_movie	file:	access:public
player	audio/opensl.c	/^   SLPlayItf player;$/;"	m	struct:sl	file:	access:public
player	blackberry-qnx/bb10/src/ButtonMap.h	/^    int player;$/;"	m	class:ButtonMap	access:private
player	frontend/menu/menu_common.h	/^   unsigned player;$/;"	m	struct:rgui_bind_state	access:public
png_append_idat	gfx/rpng/rpng.c	/^static bool png_append_idat(FILE *file, const struct png_chunk *chunk, struct idat_buffer *buf)$/;"	f	file:	signature:(FILE *file, const struct png_chunk *chunk, struct idat_buffer *buf)
png_chunk	gfx/rpng/rpng.c	/^struct png_chunk$/;"	s	file:
png_chunk::data	gfx/rpng/rpng.c	/^   uint8_t *data;$/;"	m	struct:png_chunk	file:	access:public
png_chunk::size	gfx/rpng/rpng.c	/^   uint32_t size;$/;"	m	struct:png_chunk	file:	access:public
png_chunk::type	gfx/rpng/rpng.c	/^   char type[4];$/;"	m	struct:png_chunk	file:	access:public
png_chunk_type	gfx/rpng/rpng.c	/^enum png_chunk_type$/;"	g	file:
png_chunk_type	gfx/rpng/rpng.c	/^static enum png_chunk_type png_chunk_type(const struct png_chunk *chunk)$/;"	f	file:	signature:(const struct png_chunk *chunk)
png_free_chunk	gfx/rpng/rpng.c	/^static void png_free_chunk(struct png_chunk *chunk)$/;"	f	file:	signature:(struct png_chunk *chunk)
png_ihdr	gfx/rpng/rpng.c	/^struct png_ihdr$/;"	s	file:
png_ihdr::color_type	gfx/rpng/rpng.c	/^   uint8_t color_type;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::compression	gfx/rpng/rpng.c	/^   uint8_t compression;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::depth	gfx/rpng/rpng.c	/^   uint8_t depth;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::filter	gfx/rpng/rpng.c	/^   uint8_t filter;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::height	gfx/rpng/rpng.c	/^   uint32_t height;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::interlace	gfx/rpng/rpng.c	/^   uint8_t interlace;$/;"	m	struct:png_ihdr	file:	access:public
png_ihdr::width	gfx/rpng/rpng.c	/^   uint32_t width;$/;"	m	struct:png_ihdr	file:	access:public
png_magic	gfx/rpng/rpng.c	/^static const uint8_t png_magic[8] = {$/;"	v	file:
png_parse_ihdr	gfx/rpng/rpng.c	/^static bool png_parse_ihdr(FILE *file, struct png_chunk *chunk, struct png_ihdr *ihdr)$/;"	f	file:	signature:(FILE *file, struct png_chunk *chunk, struct png_ihdr *ihdr)
png_pass_geom	gfx/rpng/rpng.c	/^static void png_pass_geom(const struct png_ihdr *ihdr,$/;"	f	file:	signature:(const struct png_ihdr *ihdr, unsigned width, unsigned height, unsigned *bpp_out, unsigned *pitch_out, size_t *pass_size)
png_read_chunk	gfx/rpng/rpng.c	/^static bool png_read_chunk(FILE *file, struct png_chunk *chunk)$/;"	f	file:	signature:(FILE *file, struct png_chunk *chunk)
png_read_plte	gfx/rpng/rpng.c	/^static bool png_read_plte(FILE *file, uint32_t *buffer, unsigned entries)$/;"	f	file:	signature:(FILE *file, uint32_t *buffer, unsigned entries)
png_reverse_filter	gfx/rpng/rpng.c	/^static bool png_reverse_filter(uint32_t *data, const struct png_ihdr *ihdr,$/;"	f	file:	signature:(uint32_t *data, const struct png_ihdr *ihdr, const uint8_t *inflate_buf, size_t inflate_buf_size, const uint32_t *palette)
png_reverse_filter_adam7	gfx/rpng/rpng.c	/^static bool png_reverse_filter_adam7(uint32_t *data, const struct png_ihdr *ihdr,$/;"	f	file:	signature:(uint32_t *data, const struct png_ihdr *ihdr, const uint8_t *inflate_buf, size_t inflate_buf_size, const uint32_t *palette)
png_write_crc	gfx/rpng/rpng.c	/^static bool png_write_crc(FILE *file, const uint8_t *data, size_t size)$/;"	f	file:	signature:(FILE *file, const uint8_t *data, size_t size)
png_write_idat	gfx/rpng/rpng.c	/^static bool png_write_idat(FILE *file, const uint8_t *data, size_t size)$/;"	f	file:	signature:(FILE *file, const uint8_t *data, size_t size)
png_write_iend	gfx/rpng/rpng.c	/^static bool png_write_iend(FILE *file)$/;"	f	file:	signature:(FILE *file)
png_write_ihdr	gfx/rpng/rpng.c	/^static bool png_write_ihdr(FILE *file, const struct png_ihdr *ihdr)$/;"	f	file:	signature:(FILE *file, const struct png_ihdr *ihdr)
pointer	android/native/jni/input_android.c	/^   struct input_pointer pointer[MAX_TOUCH];$/;"	m	struct:android_input	typeref:struct:android_input::input_pointer	file:	access:public
pointer	ps3/rgl/src/libelf/readelf.h	/^      unsigned char* pointer;$/;"	m	struct:_ELF_segment_t	access:public
pointer_count	android/native/jni/input_android.c	/^   unsigned pointer_count;$/;"	m	struct:android_input	file:	access:public
pointer_head	input/dinput.c	/^   struct pointer_status pointer_head;  \/\/ dummy head for easier iteration$/;"	m	struct:dinput_input	typeref:struct:dinput_input::pointer_status	file:	access:public
pointer_id	input/dinput.c	/^   int pointer_id;$/;"	m	struct:pointer_status	file:	access:public
pointer_status	input/dinput.c	/^struct pointer_status$/;"	s	file:
pointer_status::next	input/dinput.c	/^   struct pointer_status *next;$/;"	m	struct:pointer_status	typeref:struct:pointer_status::pointer_status	file:	access:public
pointer_status::pointer_id	input/dinput.c	/^   int pointer_id;$/;"	m	struct:pointer_status	file:	access:public
pointer_status::pointer_x	input/dinput.c	/^   int pointer_x;$/;"	m	struct:pointer_status	file:	access:public
pointer_status::pointer_y	input/dinput.c	/^   int pointer_y;$/;"	m	struct:pointer_status	file:	access:public
pointer_x	input/dinput.c	/^   int pointer_x;$/;"	m	struct:pointer_status	file:	access:public
pointer_y	input/dinput.c	/^   int pointer_y;$/;"	m	struct:pointer_status	file:	access:public
poke	gfx/thread_wrapper.c	/^   const video_poke_interface_t *poke;$/;"	m	struct:thread_video	file:	access:public
poke_interface	driver.h	/^   void (*poke_interface)(void *data, const video_poke_interface_t **iface);$/;"	m	struct:video_driver	access:public
poll	driver.h	/^   bool (*poll)(void *data,$/;"	m	struct:camera_driver	access:public
poll	driver.h	/^   void (*poll)(void *data);$/;"	m	struct:input_driver	access:public
poll	input/input_common.h	/^   void (*poll)(void);$/;"	m	struct:rarch_joypad_driver	access:public
poll_data	tools/retroarch-joyconfig.c	/^struct poll_data$/;"	s	file:
poll_data::axes	tools/retroarch-joyconfig.c	/^   int16_t axes[MAX_AXES];$/;"	m	struct:poll_data	file:	access:public
poll_data::buttons	tools/retroarch-joyconfig.c	/^   bool buttons[MAX_BUTTONS];$/;"	m	struct:poll_data	file:	access:public
poll_data::hats	tools/retroarch-joyconfig.c	/^   uint16_t hats[MAX_HATS];$/;"	m	struct:poll_data	file:	access:public
poll_input	netplay.c	/^static int poll_input(netplay_t *handle, bool block)$/;"	f	file:	signature:(netplay_t *handle, bool block)
poll_joypad	tools/retroarch-joyconfig.c	/^static void poll_joypad(const rarch_joypad_driver_t *driver,$/;"	f	file:	signature:(const rarch_joypad_driver_t *driver, unsigned pad, struct poll_data *data)
poll_pad	input/linuxraw_joypad.c	/^static void poll_pad(struct linuxraw_joypad *pad)$/;"	f	file:	signature:(struct linuxraw_joypad *pad)
poll_pad	input/udev_joypad.c	/^static void poll_pad(unsigned p)$/;"	f	file:	signature:(unsigned p)
pollfd	audio/librsound.c	114;"	d	file:
pollfd_fd	audio/librsound.c	103;"	d	file:
pollfd_fd	audio/librsound.c	115;"	d	file:
pollfd_fd	audio/librsound.c	126;"	d	file:
pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;		\/\/ LINEAR, or NONE$/;"	m	struct:__anon55	access:public
pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;	\/\/ type of memory$/;"	m	struct:__anon49	access:public
pool	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum pool;$/;"	m	struct:__anon53	access:public
populateCores	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::populateCores(core_info_list_t * info)$/;"	f	class:RetroArch	signature:(core_info_list_t * info)
populateCores	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void populateCores(core_info_list_t * info);$/;"	p	class:RetroArch	access:public	signature:(core_info_list_t * info)
populate_entries	frontend/menu/menu_context.h	/^   void  (*populate_entries)(void*, unsigned);$/;"	m	struct:menu_ctx_driver	access:public
port	audio/rsound.h	/^      char *port;$/;"	m	struct:rsound	access:public
port	blackberry-qnx/frontend_qnx.h	/^    int port;$/;"	m	struct:__anon94	access:public
port	gfx/xvideo.c	/^   XvPortID port;$/;"	m	struct:xv	file:	access:public
port	libretro.h	/^   unsigned port;$/;"	m	struct:retro_input_descriptor	access:public
port	netplay.c	/^   unsigned port; \/\/ Which port is governed by netplay (other player)?$/;"	m	struct:netplay	file:	access:public
port_device	blackberry-qnx/qnx_input.c	/^input_device_t *port_device[MAX_PADS];$/;"	v
port_dir	console/rarch_console.h	/^   char port_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
port_index	gfx/context/sunxi_disp_ioctl.h	/^	__u32 port_index;$/;"	m	struct:__anon196	access:public
ports	audio/jack.c	/^   jack_port_t *ports[2];$/;"	m	struct:jack	file:	access:public
pos	ps3/ps3_input_osk.c	/^   CellOskDialogPoint pos;$/;"	m	struct:ps3_osk	file:	access:public
pos_in_central_dir	deps/minizip/unzip.c	/^    uLong pos_in_central_dir;   \/* pos of the current file in the central dir*\/$/;"	m	struct:__anon111	file:	access:public
pos_in_zip_directory	deps/minizip/unzip.c	/^    uLong pos_in_zip_directory;   \/\/ offset in file$/;"	m	struct:unz_file_pos_s	file:	access:public
pos_in_zipfile	deps/minizip/unzip.c	/^    uLong pos_in_zipfile;       \/* position in byte on the zipfile, for fseek*\/$/;"	m	struct:__anon110	file:	access:public
pos_local_extrafield	deps/minizip/unzip.c	/^    uLong pos_local_extrafield;   \/* position in the local extra field in read*\/$/;"	m	struct:__anon110	file:	access:public
position	ps3/rgl/src/libelf/readelf.h	/^      unsigned int position;$/;"	m	struct:__anon36	access:public
postBindPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void postBindPreferences()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
post_filter_record	config.def.h	/^static const bool post_filter_record = false;$/;"	v
post_filter_record	general.h	/^      bool post_filter_record;$/;"	m	struct:settings::__anon227	access:public
pot_height	gfx/fonts/gl_raster_font.c	/^   int pot_width, pot_height;$/;"	m	struct:font_rect	file:	access:public
pot_width	gfx/fonts/gl_raster_font.c	/^   int pot_width, pot_height;$/;"	m	struct:font_rect	file:	access:public
power_callback	gx/gx_input.c	/^static void power_callback(void)$/;"	f	file:	signature:(void)
ppBlockList	ps3/rgl/src/include/GmmAlloc.h	/^   char        **ppBlockList[2];		\/\/ pre-allocated list of block descriptors$/;"	m	struct:GmmFixedAllocData	access:public
ppFreeBlockList	ps3/rgl/src/include/GmmAlloc.h	/^   uint16_t    **ppFreeBlockList[2];$/;"	m	struct:GmmFixedAllocData	access:public
ppu_prio	ps3/sdk_defines.h	290;"	d
pre_frame_enable	gfx/context/sunxi_disp_ioctl.h	/^	__bool pre_frame_enable;$/;"	m	struct:__anon190	access:public
pre_frame_valid	gfx/context/sunxi_disp_ioctl.h	/^	__bool pre_frame_valid;$/;"	m	struct:__anon189	access:public
pref	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private KeyBindPreference pref;$/;"	f	class:KeyBindEditText	file:	access:private
prefix	gfx/shader_parse.h	/^   char prefix[64];$/;"	m	struct:gfx_shader	access:public
prender	general.h	/^      void (*prender)(uint32_t *colormap, uint32_t *output, unsigned outpitch,$/;"	m	struct:global::__anon237	access:public
preprocess_image	camera/video4linux2.c	/^static bool preprocess_image(void *data)$/;"	f	file:	signature:(void *data)
preprocess_vertex	tools/cg2glsl.py	/^def preprocess_vertex(source_data):$/;"	f	access:public
pretro_api_version	dynamic.c	/^unsigned (*pretro_api_version)(void);$/;"	v
pretro_cheat_reset	dynamic.c	/^void (*pretro_cheat_reset)(void);$/;"	v
pretro_cheat_set	dynamic.c	/^void (*pretro_cheat_set)(unsigned, bool, const char*);$/;"	v
pretro_deinit	dynamic.c	/^void (*pretro_deinit)(void);$/;"	v
pretro_get_memory_data	dynamic.c	/^void *(*pretro_get_memory_data)(unsigned);$/;"	v
pretro_get_memory_size	dynamic.c	/^size_t (*pretro_get_memory_size)(unsigned);$/;"	v
pretro_get_region	dynamic.c	/^unsigned (*pretro_get_region)(void);$/;"	v
pretro_get_system_av_info	dynamic.c	/^void (*pretro_get_system_av_info)(struct retro_system_av_info*);$/;"	v
pretro_get_system_info	dynamic.c	/^void (*pretro_get_system_info)(struct retro_system_info*);$/;"	v
pretro_init	dynamic.c	/^void (*pretro_init)(void);$/;"	v
pretro_load_game	dynamic.c	/^bool (*pretro_load_game)(const struct retro_game_info*);$/;"	v
pretro_load_game_special	dynamic.c	/^bool (*pretro_load_game_special)(unsigned, const struct retro_game_info*, size_t);$/;"	v
pretro_reset	dynamic.c	/^void (*pretro_reset)(void);$/;"	v
pretro_run	dynamic.c	/^void (*pretro_run)(void);$/;"	v
pretro_serialize	dynamic.c	/^bool (*pretro_serialize)(void*, size_t);$/;"	v
pretro_serialize_size	dynamic.c	/^size_t (*pretro_serialize_size)(void);$/;"	v
pretro_set_audio_sample	dynamic.c	/^void (*pretro_set_audio_sample)(retro_audio_sample_t);$/;"	v
pretro_set_audio_sample_batch	dynamic.c	/^void (*pretro_set_audio_sample_batch)(retro_audio_sample_batch_t);$/;"	v
pretro_set_controller_port_device	dynamic.c	/^void (*pretro_set_controller_port_device)(unsigned, unsigned);$/;"	v
pretro_set_environment	dynamic.c	/^void (*pretro_set_environment)(retro_environment_t);$/;"	v
pretro_set_input_poll	dynamic.c	/^void (*pretro_set_input_poll)(retro_input_poll_t);$/;"	v
pretro_set_input_state	dynamic.c	/^void (*pretro_set_input_state)(retro_input_state_t);$/;"	v
pretro_set_video_refresh	dynamic.c	/^void (*pretro_set_video_refresh)(retro_video_refresh_t);$/;"	v
pretro_unload_game	dynamic.c	/^void (*pretro_unload_game)(void);$/;"	v
pretro_unserialize	dynamic.c	/^bool (*pretro_unserialize)(const void*, size_t);$/;"	v
prev	gfx/d3d9/render_chain.hpp	/^      } prev;$/;"	m	class:RenderChain	typeref:struct:RenderChain::__anon224	access:private
prev	gfx/shader_cg.c	/^   struct cg_fbo_params prev[PREV_TEXTURES];$/;"	m	struct:cg_program	typeref:struct:cg_program::cg_fbo_params	file:	access:public
prev	gfx/shader_glsl.c	/^   struct shader_uniforms_frame prev[PREV_TEXTURES];$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
prev	gfx/state_tracker.c	/^   uint32_t prev[2];$/;"	m	struct:state_tracker_internal	file:	access:public
prev_info	gfx/gl_common.h	/^   struct gl_tex_info prev_info[MAX_TEXTURES];$/;"	m	struct:gl	typeref:struct:gl::gl_tex_info	access:public
prev_pow2	miscellaneous.h	/^static inline uint32_t prev_pow2(uint32_t v)$/;"	f	signature:(uint32_t v)
prg	gfx/shader_cg.c	/^static struct cg_program prg[GFX_MAX_SHADERS];$/;"	v	typeref:struct:cg_program	file:
prg	gfx/shader_hlsl.c	/^static struct hlsl_program prg[RARCH_HLSL_MAX_SHADERS] = {0};$/;"	v	typeref:struct:hlsl_program	file:
primary_screen_id	gfx/context/sunxi_disp_ioctl.h	/^	__u32 primary_screen_id;$/;"	m	struct:__anon201	access:public
printUUID	apple/iOS/bluetooth/btstack/utils.h	/^void printUUID(uint8_t *uuid);$/;"	p	signature:(uint8_t *uuid)
print_bd_addr	apple/iOS/bluetooth/btstack/utils.h	/^void print_bd_addr( bd_addr_t addr);$/;"	p	signature:( bd_addr_t addr)
print_buf	gfx/shader_cg.c	497;"	d	file:
print_buf	gfx/shader_parse.c	31;"	d	file:
print_compiler	retroarch.c	/^static void print_compiler(FILE *file)$/;"	f	file:	signature:(FILE *file)
print_features	retroarch.c	/^static void print_features(void)$/;"	f	file:	signature:(void)
print_help	qb/qb.params.sh	/^print_help()$/;"	f
print_help	retroarch.c	/^static void print_help(void)$/;"	f	file:	signature:(void)
print_help	tools/retroarch-joyconfig.c	/^static void print_help(void)$/;"	f	file:	signature:(void)
print_linker_log	gfx/shader_glsl.c	/^static void print_linker_log(GLuint obj)$/;"	f	file:	signature:(GLuint obj)
print_shader_log	gfx/shader_glsl.c	/^static void print_shader_log(GLuint obj)$/;"	f	file:	signature:(GLuint obj)
print_siblings	compat/rxml/rxml_test.c	/^static void print_siblings(struct rxml_node *node, unsigned level)$/;"	f	file:	signature:(struct rxml_node *node, unsigned level)
prio	gfx/context/sunxi_disp_ioctl.h	/^	__u8 prio;$/;"	m	struct:__anon187	access:public
prio	message_queue.c	/^   unsigned prio;$/;"	m	struct:queue_elem	file:	access:public
process	apple/iOS/bluetooth/btstack/run_loop.h	/^    int  (*process)(struct data_source *ds); \/\/ <-- do processing$/;"	m	struct:data_source	access:public
process	apple/iOS/bluetooth/btstack/run_loop.h	/^    void  (*process)(struct timer *ts);      \/\/ <-- do processing$/;"	m	struct:timer	access:public
process	audio/ext/rarch_dsp.h	/^   void (*process)(void *data, rarch_dsp_output_t *output, $/;"	m	struct:rarch_dsp_plugin	access:public
process	audio/resampler.h	/^   void (*process)(void *re, struct resampler_data *data);$/;"	m	struct:rarch_resampler	access:public
process	gfx/d3d9/d3d9.cpp	/^void D3DVideo::process()$/;"	f	class:D3DVideo	signature:()
process	gfx/d3d9/d3d9.hpp	/^      void process();$/;"	p	class:D3DVideo	access:private	signature:()
process_args	frontend/frontend_context.h	/^   int (*process_args)(int argc, char *argv[], void *args);$/;"	m	struct:frontend_ctx_driver	access:public
process_cb	audio/jack.c	/^static int process_cb(jack_nframes_t nframes, void *data)$/;"	f	file:	signature:(jack_nframes_t nframes, void *data)
process_events	frontend/frontend_context.h	/^   int (*process_events)(void *data);$/;"	m	struct:frontend_ctx_driver	access:public
process_events	frontend/platform/platform_android.c	/^static int process_events(void *data)$/;"	f	file:	signature:(void *data)
process_events	frontend/platform/platform_apple.c	/^static int process_events(void *data)$/;"	f	file:	signature:(void *data)
process_gamepad_event	blackberry-qnx/qnx_input.c	/^static void process_gamepad_event(screen_event_t screen_event, int type)$/;"	f	file:	signature:(screen_event_t screen_event, int type)
process_image	camera/video4linux2.c	/^static void process_image(video4linux_t *v4l, const uint8_t *buffer_yuv)$/;"	f	file:	signature:(video4linux_t *v4l, const uint8_t *buffer_yuv)
process_input_ret	frontend/menu/rmenu_xui.cpp	/^static int process_input_ret = 0;$/;"	v	file:
process_keyboard_event	blackberry-qnx/qnx_input.c	/^static void process_keyboard_event(screen_event_t event, int type)$/;"	f	file:	signature:(screen_event_t event, int type)
process_pending_intent	frontend/platform/platform_android.c	/^static void process_pending_intent(void *data)$/;"	f	file:	signature:(void *data)
process_shader	gfx/d3d9/d3d9.cpp	/^void D3DVideo::process_shader()$/;"	f	class:D3DVideo	signature:()
process_shader	gfx/d3d9/d3d9.hpp	/^      void process_shader();$/;"	p	class:D3DVideo	access:public	signature:()
process_sinc	audio/sinc.c	/^static void process_sinc(rarch_sinc_resampler_t *resamp, float *out_buffer)$/;"	f	file:	signature:(rarch_sinc_resampler_t *resamp, float *out_buffer)
process_sinc_C	audio/sinc.c	/^static inline void process_sinc_C(rarch_sinc_resampler_t *resamp, float *out_buffer)$/;"	f	file:	signature:(rarch_sinc_resampler_t *resamp, float *out_buffer)
process_sinc_func	audio/sinc.c	/^static void (*process_sinc_func)(rarch_sinc_resampler_t *resamp, float *out_buffer);$/;"	v	file:
process_sinc_func	audio/sinc.c	275;"	d	file:
process_sinc_func	audio/sinc.c	324;"	d	file:
process_sinc_func	audio/sinc.c	405;"	d	file:
process_sinc_neon	audio/sinc.c	/^static void process_sinc_neon(rarch_sinc_resampler_t *resamp, float *out_buffer)$/;"	f	file:	signature:(rarch_sinc_resampler_t *resamp, float *out_buffer)
process_sinc_neon_asm	audio/sinc.c	/^void process_sinc_neon_asm(float *out, const float *left, const float *right, const float *coeff, unsigned taps);$/;"	p	file:	signature:(float *out, const float *left, const float *right, const float *coeff, unsigned taps)
process_sinc_neon_asm	audio/sinc_neon.S	/^process_sinc_neon_asm:$/;"	l
process_touch_event	blackberry-qnx/qnx_input.c	/^static void process_touch_event(screen_event_t event, int type)$/;"	f	file:	signature:(screen_event_t event, int type)
product	blackberry-qnx/frontend_qnx.h	/^    char product[64];$/;"	m	struct:__anon94	access:public
profile	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short profile; \/\/ Vertex \/ Fragment$/;"	m	struct:CgProgramHeader	access:public
profile	ps3/rgl/include/Cg/cgBinary.h	/^      CGprofile profile;$/;"	m	struct:CgBinaryProgram	access:public
profile	ps3/rgl/src/cg/nvbi.hpp	/^               profile() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
profile	ps3/rgl/src/cg/nvbiimpl.hpp	/^               profile() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
profile	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::profile() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
prog	libretro-test-gl/libretro-test.c	/^static GLuint prog;$/;"	v	file:
program	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogram *program;$/;"	m	struct:CgRuntimeParameter	access:public
program	ps3/rgl/include/Cg/CgProgramGroup.h	/^   CGprogram program;$/;"	m	struct:_CGnamedProgram	access:public
program	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryOffset program;$/;"	m	struct:CgBinaryProgram	access:public
program	ps3/rgl/src/include/rgl-typedefs.h	/^   CgBinaryProgram __attribute__(( aligned( 16 ) ) ) program;$/;"	m	struct:rglGcmShader_	access:public
programCount	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int       programCount;    \/\/ number of programs in the list$/;"	m	struct:_CGcontext	access:public
programCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int programCount;$/;"	m	struct:_CGprogramGroup	access:public
programGroup	ps3/rgl/include/Cg/CgCommon.h	/^   _CGprogramGroup *programGroup;$/;"	m	struct:_CGprogram	access:public
programIndexInGroup	ps3/rgl/include/Cg/CgCommon.h	/^   int programIndexInGroup;$/;"	m	struct:_CGprogram	access:public
programList	ps3/rgl/include/Cg/CgCommon.h	/^   struct _CGprogram* programList;     \/\/ head of singly linked list of programs$/;"	m	struct:_CGcontext	typeref:struct:_CGcontext::_CGprogram	access:public
programs	ps3/rgl/include/Cg/CgProgramGroup.h	/^   _CGnamedProgram *programs;$/;"	m	struct:_CGprogramGroup	access:public
ps3_audio_free	ps3/ps3_audio.c	/^static void ps3_audio_free(void *data)$/;"	f	file:	signature:(void *data)
ps3_audio_init	ps3/ps3_audio.c	/^static void *ps3_audio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
ps3_audio_set_nonblock_state	ps3/ps3_audio.c	/^static void ps3_audio_set_nonblock_state(void *data, bool toggle)$/;"	f	file:	signature:(void *data, bool toggle)
ps3_audio_start	ps3/ps3_audio.c	/^static bool ps3_audio_start(void *data)$/;"	f	file:	signature:(void *data)
ps3_audio_stop	ps3/ps3_audio.c	/^static bool ps3_audio_stop(void *data)$/;"	f	file:	signature:(void *data)
ps3_audio_t	ps3/ps3_audio.c	/^} ps3_audio_t;$/;"	t	typeref:struct:__anon78	file:
ps3_audio_use_float	ps3/ps3_audio.c	/^static bool ps3_audio_use_float(void *data)$/;"	f	file:	signature:(void *data)
ps3_audio_write	ps3/ps3_audio.c	/^static ssize_t ps3_audio_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
ps3_input	ps3/ps3_input.c	/^typedef struct ps3_input$/;"	s	file:
ps3_input::accelerometer_state	ps3/ps3_input.c	/^   sensor_t accelerometer_state[MAX_PADS];$/;"	m	struct:ps3_input	file:	access:public
ps3_input::mice_connected	ps3/ps3_input.c	/^   unsigned mice_connected;$/;"	m	struct:ps3_input	file:	access:public
ps3_input::pads_connected	ps3/ps3_input.c	/^   unsigned pads_connected;$/;"	m	struct:ps3_input	file:	access:public
ps3_input::state	ps3/ps3_input.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:ps3_input	file:	access:public
ps3_input_free_input	ps3/ps3_input.c	/^static void ps3_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
ps3_input_get_capabilities	ps3/ps3_input.c	/^static uint64_t ps3_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
ps3_input_init	ps3/ps3_input.c	/^static void* ps3_input_init(void)$/;"	f	file:	signature:(void)
ps3_input_key_pressed	ps3/ps3_input.c	/^static bool ps3_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
ps3_input_poll	ps3/ps3_input.c	/^static void ps3_input_poll(void *data)$/;"	f	file:	signature:(void *data)
ps3_input_set_keybinds	ps3/ps3_input.c	/^static void ps3_input_set_keybinds(void *data, unsigned device,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
ps3_input_set_rumble	ps3/ps3_input.c	/^static bool ps3_input_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
ps3_input_set_sensor_state	ps3/ps3_input.c	/^static bool ps3_input_set_sensor_state(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_sensor_action action, unsigned event_rate)
ps3_input_state	ps3/ps3_input.c	/^static int16_t ps3_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
ps3_input_t	ps3/ps3_input.c	/^} ps3_input_t;$/;"	t	typeref:struct:ps3_input	file:
ps3_mouse_device_state	ps3/ps3_input.c	/^static int16_t ps3_mouse_device_state(void *data, unsigned player, unsigned id)$/;"	f	file:	signature:(void *data, unsigned player, unsigned id)
ps3_osk	ps3/ps3_input_osk.c	/^typedef struct ps3_osk$/;"	s	file:
ps3_osk::containerid	ps3/ps3_input_osk.c	/^   sys_memory_container_t containerid;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::dialogParam	ps3/ps3_input_osk.c	/^   CellOskDialogParam dialogParam;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::flags	ps3/ps3_input_osk.c	/^   uint32_t flags;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::init_message	ps3/ps3_input_osk.c	/^   wchar_t init_message[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::inputFieldInfo	ps3/ps3_input_osk.c	/^   CellOskDialogInputFieldInfo inputFieldInfo;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::message	ps3/ps3_input_osk.c	/^   wchar_t message[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::osk_memorycontainer	ps3/ps3_input_osk.c	/^   unsigned int osk_memorycontainer;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::outputInfo	ps3/ps3_input_osk.c	/^   CellOskDialogCallbackReturnParam outputInfo;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::pos	ps3/ps3_input_osk.c	/^   CellOskDialogPoint pos;$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk::text_buf	ps3/ps3_input_osk.c	/^   wchar_t text_buf[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
ps3_osk_t	ps3/ps3_input_osk.c	/^} ps3_osk_t;$/;"	t	typeref:struct:ps3_osk	file:
ps3graphics_load_jpeg	ps3/image.c	/^static bool ps3graphics_load_jpeg(const char *path, struct texture_image *out_img)$/;"	f	file:	signature:(const char *path, struct texture_image *out_img)
ps3graphics_load_png	ps3/image.c	/^static bool ps3graphics_load_png(const char *path, struct texture_image *out_img)$/;"	f	file:	signature:(const char *path, struct texture_image *out_img)
psglCreateContext	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT PSGLcontext* psglCreateContext (void);$/;"	p	signature:(void)
psglCreateContext	ps3/rgl/src/rgl_ps3.cpp	/^RGLcontext* psglCreateContext(void)$/;"	f	signature:(void)
psglCreateDeviceAuto	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT PSGLdevice*	psglCreateDeviceAuto( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode );$/;"	p	signature:( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )
psglCreateDeviceAuto	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLdevice*	psglCreateDeviceAuto( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )$/;"	f	signature:( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )
psglCreateDeviceExtended	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT PSGLdevice*	psglCreateDeviceExtended( const void *data);$/;"	p	signature:( const void *data)
psglCreateDeviceExtended	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLdevice*	psglCreateDeviceExtended (const void *data)$/;"	f	signature:(const void *data)
psglDestroyContext	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglDestroyContext (void *data);$/;"	p	signature:(void *data)
psglDestroyContext	ps3/rgl/src/rgl_ps3.cpp	/^void RGL_EXPORT psglDestroyContext (void *data)$/;"	f	signature:(void *data)
psglDestroyDevice	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglDestroyDevice (void *data);$/;"	p	signature:(void *data)
psglDestroyDevice	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT void psglDestroyDevice (void *data)$/;"	f	signature:(void *data)
psglExit	ps3/rgl/include/export/RGL/rgl.h	/^extern PSGL_EXPORT void	psglExit (void);$/;"	p	signature:(void)
psglExit	ps3/rgl/src/rgl_ps3.cpp	/^void psglExit(void)$/;"	f	signature:(void)
psglGetCurrentContext	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT PSGLcontext* psglGetCurrentContext (void);$/;"	p	signature:(void)
psglGetCurrentContext	ps3/rgl/src/rgl_ps3.cpp	/^RGLcontext *psglGetCurrentContext(void)$/;"	f	signature:(void)
psglGetCurrentDevice	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT PSGLdevice* psglGetCurrentDevice (void);$/;"	p	signature:(void)
psglGetCurrentDevice	ps3/rgl/src/rgl_ps3.cpp	/^RGLdevice *psglGetCurrentDevice (void)$/;"	f	signature:(void)
psglGetDeviceAspectRatio	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT GLfloat psglGetDeviceAspectRatio( const PSGLdevice * device );$/;"	p	signature:( const PSGLdevice * device )
psglGetDeviceAspectRatio	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT GLfloat psglGetDeviceAspectRatio (const void *data)$/;"	f	signature:(const void *data)
psglGetDeviceDimensions	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglGetDeviceDimensions( const PSGLdevice * device, GLuint *width, GLuint *height );$/;"	p	signature:( const PSGLdevice * device, GLuint *width, GLuint *height )
psglGetDeviceDimensions	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT void psglGetDeviceDimensions (const RGLdevice * device, GLuint *width, GLuint *height)$/;"	f	signature:(const RGLdevice * device, GLuint *width, GLuint *height)
psglGetRenderBufferDimensions	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglGetRenderBufferDimensions( const PSGLdevice * device, GLuint *width, GLuint *height );$/;"	p	signature:( const PSGLdevice * device, GLuint *width, GLuint *height )
psglGetRenderBufferDimensions	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT void psglGetRenderBufferDimensions (const RGLdevice * device, GLuint *width, GLuint *height)$/;"	f	signature:(const RGLdevice * device, GLuint *width, GLuint *height)
psglInit	ps3/rgl/include/export/RGL/rgl.h	/^extern PSGL_EXPORT void	psglInit (void *data);$/;"	p	signature:(void *data)
psglInit	ps3/rgl/src/rgl_ps3.cpp	/^void psglInit (void *data)$/;"	f	signature:(void *data)
psglMakeCurrent	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglMakeCurrent( PSGLcontext* context, PSGLdevice* device );$/;"	p	signature:( PSGLcontext* context, PSGLdevice* device )
psglMakeCurrent	ps3/rgl/src/rgl_ps3.cpp	/^void RGL_EXPORT psglMakeCurrent (RGLcontext *context, RGLdevice *device)$/;"	f	signature:(RGLcontext *context, RGLdevice *device)
psglRescAdjustAspectRatio	ps3/rgl/include/export/RGL/rgl.h	/^static inline PSGL_EXPORT void psglRescAdjustAspectRatio( const float horizontalScale, const float verticalScale )$/;"	f	signature:( const float horizontalScale, const float verticalScale )
psglResetCurrentContext	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglResetCurrentContext (void);$/;"	p	signature:(void)
psglResetCurrentContext	ps3/rgl/src/rgl_ps3.cpp	/^void RGL_EXPORT psglResetCurrentContext(void)$/;"	f	signature:(void)
psglSwap	ps3/rgl/include/export/RGL/rgl.h	/^PSGL_EXPORT void psglSwap (void);$/;"	p	signature:(void)
psglSwap	ps3/rgl/src/rgl_ps3.cpp	/^GLAPI void RGL_EXPORT psglSwap (void)$/;"	f	signature:(void)
psize	general.h	/^      void (*psize)(unsigned *width, unsigned *height);$/;"	m	struct:global::__anon237	access:public
psp1_video	psp1/psp1_video.c	/^typedef struct psp1_video$/;"	s	file:
psp1_video::rgb32	psp1/psp1_video.c	/^   bool rgb32;$/;"	m	struct:psp1_video	file:	access:public
psp1_video::tex_h	psp1/psp1_video.c	/^   unsigned tex_h;$/;"	m	struct:psp1_video	file:	access:public
psp1_video::tex_w	psp1/psp1_video.c	/^   unsigned tex_w;$/;"	m	struct:psp1_video	file:	access:public
psp1_video_t	psp1/psp1_video.c	/^} psp1_video_t;$/;"	t	typeref:struct:psp1_video	file:
psp_alive	psp1/psp1_video.c	/^static bool psp_alive(void *data)$/;"	f	file:	signature:(void *data)
psp_focus	psp1/psp1_video.c	/^static bool psp_focus(void *data)$/;"	f	file:	signature:(void *data)
psp_frame	psp1/psp1_video.c	/^static bool psp_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
psp_free	psp1/psp1_video.c	/^static void psp_free(void *data)$/;"	f	file:	signature:(void *data)
psp_init	psp1/psp1_video.c	/^static void *psp_init(const video_info_t *video,$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
psp_input_free_input	psp/psp_input.c	/^static void psp_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
psp_input_get_capabilities	psp/psp_input.c	/^static uint64_t psp_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
psp_input_initialize	psp/psp_input.c	/^static void* psp_input_initialize(void)$/;"	f	file:	signature:(void)
psp_input_key_pressed	psp/psp_input.c	/^static bool psp_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
psp_input_poll	psp/psp_input.c	/^static void psp_input_poll(void *data)$/;"	f	file:	signature:(void *data)
psp_input_set_keybinds	psp/psp_input.c	/^static void psp_input_set_keybinds(void *data, unsigned device, unsigned port,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
psp_input_state	psp/psp_input.c	/^static int16_t psp_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
psp_restart	psp1/psp1_video.c	/^static void psp_restart(void) {}$/;"	f	file:	signature:(void)
psp_set_nonblock_state	psp1/psp1_video.c	/^static void psp_set_nonblock_state(void *data, bool toggle)$/;"	f	file:	signature:(void *data, bool toggle)
psp_set_rotation	psp1/psp1_video.c	/^static void psp_set_rotation(void *data, unsigned rotation)$/;"	f	file:	signature:(void *data, unsigned rotation)
pthread_attr_t	thread/gx_pthread.h	/^typedef int pthread_attr_t;$/;"	t
pthread_cond_broadcast	thread/gx_pthread.h	/^static inline int pthread_cond_broadcast(pthread_cond_t *cond)$/;"	f	signature:(pthread_cond_t *cond)
pthread_cond_destroy	thread/gx_pthread.h	/^static inline int pthread_cond_destroy(pthread_cond_t *cond)$/;"	f	signature:(pthread_cond_t *cond)
pthread_cond_init	thread/gx_pthread.h	/^static inline int pthread_cond_init(pthread_cond_t *cond, const pthread_condattr_t *attr)$/;"	f	signature:(pthread_cond_t *cond, const pthread_condattr_t *attr)
pthread_cond_signal	thread/gx_pthread.h	/^static inline int pthread_cond_signal(pthread_cond_t *cond)$/;"	f	signature:(pthread_cond_t *cond)
pthread_cond_t	thread/gx_pthread.h	/^typedef cond_t pthread_cond_t;$/;"	t
pthread_cond_timedwait	thread/gx_pthread.h	/^static inline int pthread_cond_timedwait(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime)$/;"	f	signature:(pthread_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *abstime)
pthread_cond_wait	thread/gx_pthread.h	/^static inline int pthread_cond_wait(pthread_cond_t *cond, pthread_mutex_t *mutex)$/;"	f	signature:(pthread_cond_t *cond, pthread_mutex_t *mutex)
pthread_condattr_t	thread/gx_pthread.h	/^typedef cond_t pthread_condattr_t;$/;"	t
pthread_create	thread/gx_pthread.h	/^static inline int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void*), void *arg)$/;"	f	signature:(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void*), void *arg)
pthread_detach	thread/gx_pthread.h	/^static inline int pthread_detach(pthread_t thread)$/;"	f	signature:(pthread_t thread)
pthread_exit	thread/gx_pthread.h	/^static inline void pthread_exit(void *retval)$/;"	f	signature:(void *retval)
pthread_join	thread/gx_pthread.h	/^static inline int pthread_join(pthread_t thread, void **retval)$/;"	f	signature:(pthread_t thread, void **retval)
pthread_mutex_destroy	thread/gx_pthread.h	/^static inline int pthread_mutex_destroy(pthread_mutex_t *mutex)$/;"	f	signature:(pthread_mutex_t *mutex)
pthread_mutex_init	thread/gx_pthread.h	/^static inline int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)$/;"	f	signature:(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr)
pthread_mutex_lock	thread/gx_pthread.h	/^static inline int pthread_mutex_lock(pthread_mutex_t *mutex)$/;"	f	signature:(pthread_mutex_t *mutex)
pthread_mutex_t	thread/gx_pthread.h	/^typedef mutex_t pthread_mutex_t;$/;"	t
pthread_mutex_trylock	thread/gx_pthread.h	/^static inline int pthread_mutex_trylock(pthread_mutex_t *mutex)$/;"	f	signature:(pthread_mutex_t *mutex)
pthread_mutex_unlock	thread/gx_pthread.h	/^static inline int pthread_mutex_unlock(pthread_mutex_t *mutex)$/;"	f	signature:(pthread_mutex_t *mutex)
pthread_mutexattr_t	thread/gx_pthread.h	/^typedef void* pthread_mutexattr_t;$/;"	t
pthread_t	thread/gx_pthread.h	/^typedef lwp_t pthread_t;$/;"	t
ptr	audio/sinc.c	/^   unsigned ptr;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
ptr	cheats.c	/^   unsigned ptr;$/;"	m	struct:cheat_manager	file:	access:public
ptr	general.h	/^      size_t ptr;$/;"	m	struct:global::__anon241	access:public
ptr	gfx/d3d9/render_chain.hpp	/^         unsigned ptr;$/;"	m	struct:RenderChain::__anon224	access:public
ptr	gfx/glsym/glsym_es2.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
ptr	gfx/glsym/glsym_gl.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
ptr	gfx/state_tracker.c	/^   const uint8_t *ptr;$/;"	m	struct:state_tracker_internal	file:	access:public
ptr	input/keyboard_line.c	/^   size_t ptr;$/;"	m	struct:input_keyboard_line	file:	access:public
ptr	message_queue.c	/^   size_t ptr;$/;"	m	struct:msg_queue	file:	access:public
ptrdiff_t	ps3/altivec_mem.h	64;"	d
pulse	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	_pulse pulse;$/;"	m	union:__anon96	access:public
pulse_buffer_size	audio/pulse.c	/^static size_t pulse_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
pulse_free	audio/pulse.c	/^static void pulse_free(void *data)$/;"	f	file:	signature:(void *data)
pulse_init	audio/pulse.c	/^static void *pulse_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
pulse_set_nonblock_state	audio/pulse.c	/^static void pulse_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
pulse_start	audio/pulse.c	/^static bool pulse_start(void *data)$/;"	f	file:	signature:(void *data)
pulse_stop	audio/pulse.c	/^static bool pulse_stop(void *data)$/;"	f	file:	signature:(void *data)
pulse_use_float	audio/pulse.c	/^static bool pulse_use_float(void *data)$/;"	f	file:	signature:(void *data)
pulse_write	audio/pulse.c	/^static ssize_t pulse_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
pulse_write_avail	audio/pulse.c	/^static size_t pulse_write_avail(void *data)$/;"	f	file:	signature:(void *data)
purge_xml_comments	compat/rxml/rxml.c	/^static char *purge_xml_comments(const char *str)$/;"	f	file:	signature:(const char *str)
pushBack	ps3/rgl/include/RGL/Base.h	/^      inline unsigned int pushBack( const T &element )$/;"	f	class:RGL::Vector	access:public	signature:( const T &element )
pushBufferPointer	ps3/rgl/include/Cg/CgCommon.h	/^   void *pushBufferPointer;$/;"	m	struct:CgRuntimeParameter	access:public
pushBufferPointers	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned short *pushBufferPointers;$/;"	m	struct:_CGprogram	access:public
pushBufferPtr	ps3/rgl/include/Cg/CgCommon.h	/^   void *pushBufferPtr;$/;"	m	struct:_CgUniform	access:public
push_start_screen	frontend/menu/menu_common.h	/^   bool push_start_screen;$/;"	m	struct:__anon25	access:public
pushbackUnsignedShort	ps3/rgl/src/rgl_ps3_cg.cpp	/^static void pushbackUnsignedShort(std::vector<char> &parameterResources, unsigned short value)$/;"	f	file:	signature:(std::vector<char> &parameterResources, unsigned short value)
put_pixel_argb8888	gfx/omap_gfx.c	/^static inline void put_pixel_argb8888(uint32_t *p, unsigned r, unsigned g, unsigned b) {$/;"	f	file:	signature:(uint32_t *p, unsigned r, unsigned g, unsigned b)
put_pixel_rgb565	gfx/omap_gfx.c	/^static inline void put_pixel_rgb565(uint16_t *p, unsigned r, unsigned g, unsigned b) {$/;"	f	file:	signature:(uint16_t *p, unsigned r, unsigned g, unsigned b)
pvgCreateEGLImageTargetKHR	gfx/vg.c	/^static PFNVGCREATEEGLIMAGETARGETKHRPROC pvgCreateEGLImageTargetKHR;$/;"	v	file:
py	gfx/state_tracker.c	/^   py_state_t *py;$/;"	m	struct:state_tracker	file:	access:public
py	gfx/state_tracker.c	/^   py_state_t *py;$/;"	m	struct:state_tracker_internal	file:	access:public
py_binds	gfx/py_state/py_state.c	/^static const struct retro_keybind *py_binds[MAX_PLAYERS] = {$/;"	v	typeref:struct:retro_keybind	file:
py_read_analog	gfx/py_state/py_state.c	/^static PyObject *py_read_analog(PyObject *self, PyObject *args)$/;"	f	file:	signature:(PyObject *self, PyObject *args)
py_read_input	gfx/py_state/py_state.c	/^static PyObject *py_read_input(PyObject *self, PyObject *args)$/;"	f	file:	signature:(PyObject *self, PyObject *args)
py_read_vram	gfx/py_state/py_state.c	/^static PyObject* py_read_vram(PyObject *self, PyObject *args)$/;"	f	file:	signature:(PyObject *self, PyObject *args)
py_read_wram	gfx/py_state/py_state.c	/^static PyObject* py_read_wram(PyObject *self, PyObject *args)$/;"	f	file:	signature:(PyObject *self, PyObject *args)
py_set_attrs	gfx/py_state/py_state.c	/^static void py_set_attrs(PyObject *mod)$/;"	f	file:	signature:(PyObject *mod)
py_state	gfx/py_state/py_state.c	/^struct py_state$/;"	s	file:
py_state::dict	gfx/py_state/py_state.c	/^   PyObject *dict;$/;"	m	struct:py_state	file:	access:public
py_state::inst	gfx/py_state/py_state.c	/^   PyObject *inst;$/;"	m	struct:py_state	file:	access:public
py_state::main	gfx/py_state/py_state.c	/^   PyObject *main;$/;"	m	struct:py_state	file:	access:public
py_state::warned_ret	gfx/py_state/py_state.c	/^   bool warned_ret;$/;"	m	struct:py_state	file:	access:public
py_state::warned_type	gfx/py_state/py_state.c	/^   bool warned_type;$/;"	m	struct:py_state	file:	access:public
py_state_free	gfx/py_state/py_state.c	/^void py_state_free(py_state_t *handle)$/;"	f	signature:(py_state_t *handle)
py_state_free	gfx/py_state/py_state.h	/^void py_state_free(py_state_t *handle);$/;"	p	signature:(py_state_t *handle)
py_state_get	gfx/py_state/py_state.c	/^float py_state_get(py_state_t *handle, const char *id,$/;"	f	signature:(py_state_t *handle, const char *id, unsigned frame_count)
py_state_get	gfx/py_state/py_state.h	/^float py_state_get(py_state_t *handle, $/;"	p	signature:(py_state_t *handle, const char *id, unsigned frame_count)
py_state_new	gfx/py_state/py_state.c	/^py_state_t *py_state_new(const char *script, unsigned is_file, const char *pyclass)$/;"	f	signature:(const char *script, unsigned is_file, const char *pyclass)
py_state_new	gfx/py_state/py_state.h	/^py_state_t *py_state_new(const char *program, unsigned is_file, const char *pyclass);$/;"	p	signature:(const char *program, unsigned is_file, const char *pyclass)
py_state_t	gfx/py_state/py_state.h	/^typedef struct py_state py_state_t;$/;"	t	typeref:struct:py_state
qnx_input_autodetect_gamepad	blackberry-qnx/qnx_input.c	/^static void qnx_input_autodetect_gamepad(input_device_t* controller)$/;"	f	file:	signature:(input_device_t* controller)
qnx_input_autodetect_gamepad	blackberry-qnx/qnx_input.c	/^static void qnx_input_autodetect_gamepad(input_device_t* controller);$/;"	p	file:	signature:(input_device_t* controller)
qnx_input_free_input	blackberry-qnx/qnx_input.c	/^static void qnx_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
qnx_input_get_capabilities	blackberry-qnx/qnx_input.c	/^static uint64_t qnx_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
qnx_input_init	blackberry-qnx/qnx_input.c	/^static void *qnx_input_init(void)$/;"	f	file:	signature:(void)
qnx_input_key_pressed	blackberry-qnx/qnx_input.c	/^static bool qnx_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
qnx_input_poll	blackberry-qnx/qnx_input.c	/^static void qnx_input_poll(void *data)$/;"	f	file:	signature:(void *data)
qnx_input_set_keybinds	blackberry-qnx/qnx_input.c	/^static void qnx_input_set_keybinds(void *data, unsigned device, unsigned port,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
qnx_input_state	blackberry-qnx/qnx_input.c	/^static int16_t qnx_input_state(void *data, const struct retro_keybind **retro_keybinds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **retro_keybinds, unsigned port, unsigned device, unsigned index, unsigned id)
qstrcmp_dir	file_path.c	/^static int qstrcmp_dir(const void *a_, const void *b_)$/;"	f	file:	signature:(const void *a_, const void *b_)
qstrcmp_plain	file_path.c	/^static int qstrcmp_plain(const void *a_, const void *b_)$/;"	f	file:	signature:(const void *a_, const void *b_)
quality	ps3/sdk_defines.h	306;"	d
query_pad	input/input_common.h	/^   bool (*query_pad)(unsigned);$/;"	m	struct:rarch_joypad_driver	access:public
queue_elem	message_queue.c	/^struct queue_elem$/;"	s	file:
queue_elem::duration	message_queue.c	/^   unsigned duration;$/;"	m	struct:queue_elem	file:	access:public
queue_elem::msg	message_queue.c	/^   char *msg;$/;"	m	struct:queue_elem	file:	access:public
queue_elem::prio	message_queue.c	/^   unsigned prio;$/;"	m	struct:queue_elem	file:	access:public
queue_flip	gfx/context/drm_egl_ctx.c	/^static void queue_flip(void)$/;"	f	file:	signature:(void)
quit	autosave.c	/^   volatile bool quit;$/;"	m	struct:autosave	file:	access:public
quit	gfx/d3d9/d3d9.cpp	/^   static bool quit = false;$/;"	m	namespace:Callback	file:
quit_atom	gfx/xvideo.c	/^   Atom quit_atom;$/;"	m	struct:xv	file:	access:public
quit_thread	ps3/ps3_audio.c	/^   volatile bool quit_thread;$/;"	m	struct:__anon78	file:	access:public
quitting	gfx/gl_common.h	/^   bool quitting;$/;"	m	struct:gl	access:public
quitting	gfx/lima_gfx.c	/^   bool quitting;$/;"	m	struct:lima_video	file:	access:public
quitting	gfx/sdl_gfx.c	/^   bool quitting;$/;"	m	struct:sdl_video	file:	access:public
quitting	xdk/xdk_d3d.h	/^   bool quitting;$/;"	m	struct:xdk_d3d_video	access:public
r	gfx/d3d9/render_chain.hpp	/^   float r, g, b, a;$/;"	m	struct:Vertex	access:public
r	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
r_addend	ps3/rgl/src/libelf/elf.h	/^   int32_t	r_addend;		\/* Addend *\/$/;"	m	struct:__anon45	access:public
r_addend	ps3/rgl/src/libelf/elf.h	/^   int64_t	r_addend;		\/* Addend *\/$/;"	m	struct:__anon46	access:public
r_addend	wii/app_booter/elf_abi.h	/^	Elf32_Sword	r_addend;$/;"	m	struct:__anon5	access:public
r_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon43	access:public
r_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon45	access:public
r_info	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon44	access:public
r_info	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_info;			\/* Relocation type and symbol index *\/$/;"	m	struct:__anon46	access:public
r_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	r_info;		\/* symbol table index and type *\/$/;"	m	struct:__anon4	access:public
r_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	r_info;		\/* symbol table index and type *\/$/;"	m	struct:__anon5	access:public
r_offset	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon43	access:public
r_offset	ps3/rgl/src/libelf/elf.h	/^   uint32_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon45	access:public
r_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon44	access:public
r_offset	ps3/rgl/src/libelf/elf.h	/^   uint64_t	r_offset;		\/* Address *\/$/;"	m	struct:__anon46	access:public
r_offset	wii/app_booter/elf_abi.h	/^	Elf32_Addr	r_offset;	\/* offset of relocation *\/$/;"	m	struct:__anon4	access:public
r_offset	wii/app_booter/elf_abi.h	/^	Elf32_Addr	r_offset;	\/* offset of relocation *\/$/;"	m	struct:__anon5	access:public
r_shoulder	apple/common/hidpad/wiimote.h	/^		float r_shoulder;				\/**< right shoulder button (range 0-1)		*\/$/;"	m	struct:classic_ctrl_t	access:public
ra_buffer_size	audio/rwebaudio.c	/^static size_t ra_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
ra_free	audio/roar.c	/^static void ra_free(void *data)$/;"	f	file:	signature:(void *data)
ra_free	audio/rwebaudio.c	/^static void ra_free(void *data)$/;"	f	file:	signature:(void *data)
ra_init	audio/roar.c	/^static void *ra_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
ra_init	audio/rwebaudio.c	/^static void *ra_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
ra_preinited	frontend/frontend.c	155;"	d	file:
ra_preinited	frontend/frontend.c	157;"	d	file:
ra_set_nonblock_state	audio/roar.c	/^static void ra_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
ra_set_nonblock_state	audio/rwebaudio.c	/^static void ra_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
ra_start	audio/roar.c	/^static bool ra_start(void *data)$/;"	f	file:	signature:(void *data)
ra_start	audio/rwebaudio.c	/^static bool ra_start(void *data)$/;"	f	file:	signature:(void *data)
ra_stop	audio/roar.c	/^static bool ra_stop(void *data)$/;"	f	file:	signature:(void *data)
ra_stop	audio/rwebaudio.c	/^static bool ra_stop(void *data)$/;"	f	file:	signature:(void *data)
ra_use_float	audio/rwebaudio.c	/^static bool ra_use_float(void *data)$/;"	f	file:	signature:(void *data)
ra_write	audio/roar.c	/^static ssize_t ra_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
ra_write	audio/rwebaudio.c	/^static ssize_t ra_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
ra_write_avail	audio/rwebaudio.c	/^static size_t ra_write_avail(void *data)$/;"	f	file:	signature:(void *data)
ram_type	gfx/state_tracker.h	/^   enum state_ram_type ram_type;$/;"	m	struct:state_tracker_uniform_info	typeref:enum:state_tracker_uniform_info::state_ram_type	access:public
ramtype2str	file.c	/^static const char *ramtype2str(int type)$/;"	f	file:	signature:(int type)
range_is_space	compat/rxml/rxml.c	/^static bool range_is_space(const char *begin, const char *end)$/;"	f	file:	signature:(const char *begin, const char *end)
range_mod	input/overlay.c	/^   float range_mod;$/;"	m	struct:overlay_desc	file:	access:public
range_x	input/overlay.c	/^   float range_x, range_y;$/;"	m	struct:overlay_desc	file:	access:public
range_x_mod	input/overlay.c	/^   float range_x_mod, range_y_mod;$/;"	m	struct:overlay_desc	file:	access:public
range_y	input/overlay.c	/^   float range_x, range_y;$/;"	m	struct:overlay_desc	file:	access:public
range_y_mod	input/overlay.c	/^   float range_x_mod, range_y_mod;$/;"	m	struct:overlay_desc	file:	access:public
rarch_assert	miscellaneous.h	53;"	d
rarch_bits_t	miscellaneous.h	/^} rarch_bits_t;$/;"	t	typeref:struct:__anon139
rarch_check_block_hotkey	general.h	/^void rarch_check_block_hotkey(void);$/;"	p	signature:(void)
rarch_check_block_hotkey	retroarch.c	/^void rarch_check_block_hotkey(void)$/;"	f	signature:(void)
rarch_check_overlay	general.h	/^void rarch_check_overlay(void);$/;"	p	signature:(void)
rarch_check_overlay	retroarch.c	/^void rarch_check_overlay(void)$/;"	f	signature:(void)
rarch_cmd	command.c	/^struct rarch_cmd$/;"	s	file:
rarch_cmd::net_fd	command.c	/^   int net_fd;$/;"	m	struct:rarch_cmd	file:	access:public
rarch_cmd::state	command.c	/^   bool state[RARCH_BIND_LIST_END];$/;"	m	struct:rarch_cmd	file:	access:public
rarch_cmd::stdin_buf	command.c	/^   char stdin_buf[STDIN_BUF_SIZE];$/;"	m	struct:rarch_cmd	file:	access:public
rarch_cmd::stdin_buf_ptr	command.c	/^   size_t stdin_buf_ptr;$/;"	m	struct:rarch_cmd	file:	access:public
rarch_cmd::stdin_enable	command.c	/^   bool stdin_enable;$/;"	m	struct:rarch_cmd	file:	access:public
rarch_cmd_free	command.c	/^void rarch_cmd_free(rarch_cmd_t *handle)$/;"	f	signature:(rarch_cmd_t *handle)
rarch_cmd_free	command.h	/^void rarch_cmd_free(rarch_cmd_t *handle);$/;"	p	signature:(rarch_cmd_t *handle)
rarch_cmd_get	command.c	/^bool rarch_cmd_get(rarch_cmd_t *handle, unsigned id)$/;"	f	signature:(rarch_cmd_t *handle, unsigned id)
rarch_cmd_get	command.h	/^bool rarch_cmd_get(rarch_cmd_t *handle, unsigned id);$/;"	p	signature:(rarch_cmd_t *handle, unsigned id)
rarch_cmd_new	command.c	/^rarch_cmd_t *rarch_cmd_new(bool stdin_enable, bool network_enable, uint16_t port)$/;"	f	signature:(bool stdin_enable, bool network_enable, uint16_t port)
rarch_cmd_new	command.h	/^rarch_cmd_t *rarch_cmd_new(bool stdin_enable, bool network_enable, uint16_t port);$/;"	p	signature:(bool stdin_enable, bool network_enable, uint16_t port)
rarch_cmd_pre_frame	command.c	/^void rarch_cmd_pre_frame(rarch_cmd_t *handle)$/;"	f	signature:(rarch_cmd_t *handle)
rarch_cmd_pre_frame	command.h	/^void rarch_cmd_pre_frame(rarch_cmd_t *handle);$/;"	p	signature:(rarch_cmd_t *handle)
rarch_cmd_set	command.c	/^void rarch_cmd_set(rarch_cmd_t *handle, unsigned id)$/;"	f	signature:(rarch_cmd_t *handle, unsigned id)
rarch_cmd_set	command.h	/^void rarch_cmd_set(rarch_cmd_t *handle, unsigned id);$/;"	p	signature:(rarch_cmd_t *handle, unsigned id)
rarch_cmd_t	command.h	/^typedef struct rarch_cmd rarch_cmd_t;$/;"	t	typeref:struct:rarch_cmd
rarch_deinit_autosave	general.h	/^void rarch_deinit_autosave(void);$/;"	p	signature:(void)
rarch_deinit_autosave	retroarch.c	/^void rarch_deinit_autosave(void)$/;"	f	signature:(void)
rarch_deinit_msg_queue	general.h	/^void rarch_deinit_msg_queue(void);$/;"	p	signature:(void)
rarch_deinit_msg_queue	retroarch.c	/^void rarch_deinit_msg_queue(void)$/;"	f	signature:(void)
rarch_deinit_rewind	general.h	/^void rarch_deinit_rewind(void);$/;"	p	signature:(void)
rarch_deinit_rewind	retroarch.c	/^void rarch_deinit_rewind(void)$/;"	f	signature:(void)
rarch_disk_control_append_image	general.h	/^void rarch_disk_control_append_image(const char *path);$/;"	p	signature:(const char *path)
rarch_disk_control_append_image	retroarch.c	/^void rarch_disk_control_append_image(const char *path)$/;"	f	signature:(const char *path)
rarch_disk_control_set_eject	general.h	/^void rarch_disk_control_set_eject(bool state, bool log);$/;"	p	signature:(bool state, bool log)
rarch_disk_control_set_eject	retroarch.c	/^void rarch_disk_control_set_eject(bool new_state, bool log)$/;"	f	signature:(bool new_state, bool log)
rarch_disk_control_set_index	general.h	/^void rarch_disk_control_set_index(unsigned index);$/;"	p	signature:(unsigned index)
rarch_disk_control_set_index	retroarch.c	/^void rarch_disk_control_set_index(unsigned next_index)$/;"	f	signature:(unsigned next_index)
rarch_display_type	driver.h	/^enum rarch_display_type$/;"	g
rarch_dsp_info	audio/ext/rarch_dsp.h	/^typedef struct rarch_dsp_info$/;"	s
rarch_dsp_info::input_rate	audio/ext/rarch_dsp.h	/^   float input_rate;$/;"	m	struct:rarch_dsp_info	access:public
rarch_dsp_info_t	audio/ext/rarch_dsp.h	/^} rarch_dsp_info_t;$/;"	t	typeref:struct:rarch_dsp_info
rarch_dsp_input	audio/ext/rarch_dsp.h	/^typedef struct rarch_dsp_input$/;"	s
rarch_dsp_input::frames	audio/ext/rarch_dsp.h	/^   unsigned frames;$/;"	m	struct:rarch_dsp_input	access:public
rarch_dsp_input::samples	audio/ext/rarch_dsp.h	/^   const float *samples;$/;"	m	struct:rarch_dsp_input	access:public
rarch_dsp_input_t	audio/ext/rarch_dsp.h	/^} rarch_dsp_input_t;$/;"	t	typeref:struct:rarch_dsp_input
rarch_dsp_output	audio/ext/rarch_dsp.h	/^typedef struct rarch_dsp_output$/;"	s
rarch_dsp_output::frames	audio/ext/rarch_dsp.h	/^   unsigned frames;$/;"	m	struct:rarch_dsp_output	access:public
rarch_dsp_output::samples	audio/ext/rarch_dsp.h	/^   const float *samples;$/;"	m	struct:rarch_dsp_output	access:public
rarch_dsp_output_t	audio/ext/rarch_dsp.h	/^} rarch_dsp_output_t;$/;"	t	typeref:struct:rarch_dsp_output
rarch_dsp_plugin	audio/ext/rarch_dsp.h	/^typedef struct rarch_dsp_plugin$/;"	s
rarch_dsp_plugin::api_version	audio/ext/rarch_dsp.h	/^   int api_version;$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::config	audio/ext/rarch_dsp.h	/^   void (*config)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::events	audio/ext/rarch_dsp.h	/^   void (*events)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::free	audio/ext/rarch_dsp.h	/^   void (*free)(void *data);$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::ident	audio/ext/rarch_dsp.h	/^   const char *ident;$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::init	audio/ext/rarch_dsp.h	/^   void *(*init)(const rarch_dsp_info_t *info);$/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin::process	audio/ext/rarch_dsp.h	/^   void (*process)(void *data, rarch_dsp_output_t *output, $/;"	m	struct:rarch_dsp_plugin	access:public
rarch_dsp_plugin_init	audio/ext/rarch_dsp.h	/^   rarch_dsp_plugin_init(void);$/;"	p	signature:(void)
rarch_dsp_plugin_t	audio/ext/rarch_dsp.h	/^} rarch_dsp_plugin_t;$/;"	t	typeref:struct:rarch_dsp_plugin
rarch_environment_cb	dynamic.c	/^bool rarch_environment_cb(unsigned cmd, void *data)$/;"	f	signature:(unsigned cmd, void *data)
rarch_environment_cb	dynamic.h	/^extern bool rarch_environment_cb(unsigned cmd, void *data);$/;"	p	signature:(unsigned cmd, void *data)
rarch_fail	general.h	/^static inline void rarch_fail(int error_code, const char *error)$/;"	f	signature:(int error_code, const char *error)
rarch_game_reset	general.h	/^void rarch_game_reset(void);$/;"	p	signature:(void)
rarch_game_reset	retroarch.c	/^void rarch_game_reset(void)$/;"	f	signature:(void)
rarch_game_type	general.h	/^enum rarch_game_type$/;"	g
rarch_get_cpu_features	performance.c	/^uint64_t rarch_get_cpu_features(void)$/;"	f	signature:(void)
rarch_get_cpu_features	performance.h	/^uint64_t rarch_get_cpu_features(void);$/;"	p	signature:(void)
rarch_get_environment_console	frontend/frontend.c	/^static void rarch_get_environment_console(void)$/;"	f	file:	signature:(void)
rarch_get_environment_console	frontend/frontend.c	179;"	d	file:
rarch_get_perf_counter	performance.c	/^retro_perf_tick_t rarch_get_perf_counter(void)$/;"	f	signature:(void)
rarch_get_perf_counter	performance.h	/^retro_perf_tick_t rarch_get_perf_counter(void);$/;"	p	signature:(void)
rarch_get_time_usec	performance.c	/^retro_time_t rarch_get_time_usec(void)$/;"	f	signature:(void)
rarch_get_time_usec	performance.h	/^retro_time_t rarch_get_time_usec(void);$/;"	p	signature:(void)
rarch_init_autosave	general.h	/^void rarch_init_autosave(void);$/;"	p	signature:(void)
rarch_init_autosave	retroarch.c	/^void rarch_init_autosave(void)$/;"	f	signature:(void)
rarch_init_msg_queue	general.h	/^void rarch_init_msg_queue(void);$/;"	p	signature:(void)
rarch_init_msg_queue	retroarch.c	/^void rarch_init_msg_queue(void)$/;"	f	signature:(void)
rarch_init_msg_queue	tools/retrolaunch/main.c	/^void rarch_init_msg_queue(void) {}$/;"	f	signature:(void)
rarch_init_rewind	general.h	/^void rarch_init_rewind(void);$/;"	p	signature:(void)
rarch_init_rewind	retroarch.c	/^void rarch_init_rewind(void)$/;"	f	signature:(void)
rarch_init_system_info	general.h	/^void rarch_init_system_info(void);$/;"	p	signature:(void)
rarch_init_system_info	retroarch.c	/^void rarch_init_system_info(void)$/;"	f	signature:(void)
rarch_input_poll	general.h	/^void rarch_input_poll(void);$/;"	p	signature:(void)
rarch_input_poll	retroarch.c	/^void rarch_input_poll(void)$/;"	f	signature:(void)
rarch_isblank__	compat/compat.c	/^int rarch_isblank__(int c)$/;"	f	signature:(int c)
rarch_joypad_driver	input/input_common.h	/^struct rarch_joypad_driver$/;"	s
rarch_joypad_driver::axis	input/input_common.h	/^   int16_t (*axis)(unsigned, uint32_t);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::button	input/input_common.h	/^   bool (*button)(unsigned, uint16_t);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::destroy	input/input_common.h	/^   void (*destroy)(void);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::ident	input/input_common.h	/^   const char *ident;$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::init	input/input_common.h	/^   bool (*init)(void);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::name	input/input_common.h	/^   const char *(*name)(unsigned);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::poll	input/input_common.h	/^   void (*poll)(void);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::query_pad	input/input_common.h	/^   bool (*query_pad)(unsigned);$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver::set_rumble	input/input_common.h	/^   bool (*set_rumble)(unsigned, enum retro_rumble_effect, uint16_t); \/\/ Optional$/;"	m	struct:rarch_joypad_driver	access:public
rarch_joypad_driver_t	driver.h	/^typedef struct rarch_joypad_driver rarch_joypad_driver_t;$/;"	t	typeref:struct:rarch_joypad_driver
rarch_key_map	input/input_common.h	/^struct rarch_key_map$/;"	s
rarch_key_map::rk	input/input_common.h	/^   enum retro_key rk;$/;"	m	struct:rarch_key_map	typeref:enum:rarch_key_map::retro_key	access:public
rarch_key_map::sym	input/input_common.h	/^   unsigned sym;$/;"	m	struct:rarch_key_map	access:public
rarch_key_map_dinput	input/input_common.c	/^const struct rarch_key_map rarch_key_map_dinput[] = {$/;"	v	typeref:struct:rarch_key_map
rarch_key_map_linux	input/input_common.c	/^const struct rarch_key_map rarch_key_map_linux[] = {$/;"	v	typeref:struct:rarch_key_map
rarch_key_map_rwebinput	input/input_common.c	/^const struct rarch_key_map rarch_key_map_rwebinput[] = {$/;"	v	typeref:struct:rarch_key_map
rarch_key_map_sdl	input/input_common.c	/^const struct rarch_key_map rarch_key_map_sdl[] = {$/;"	v	typeref:struct:rarch_key_map
rarch_key_map_x11	input/input_common.c	/^const struct rarch_key_map rarch_key_map_x11[] = {$/;"	v	typeref:struct:rarch_key_map
rarch_keysym_lut	input/input_common.c	/^static enum retro_key rarch_keysym_lut[RETROK_LAST];$/;"	v	typeref:enum:retro_key	file:
rarch_load_state	general.h	/^void rarch_load_state(void);$/;"	p	signature:(void)
rarch_load_state	retroarch.c	/^void rarch_load_state(void)$/;"	f	signature:(void)
rarch_log_libretro	dynamic.c	/^static void rarch_log_libretro(enum retro_log_level level, const char *fmt, ...)$/;"	f	file:	signature:(enum retro_log_level level, const char *fmt, ...)
rarch_main	console/test.c	/^int rarch_main(int argc, char *argv[]);$/;"	p	file:	signature:(int argc, char *argv[])
rarch_main	frontend/frontend_xenon.c	/^int rarch_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
rarch_main	general.h	/^int rarch_main(int argc, char *argv[]);$/;"	p	signature:(int argc, char *argv[])
rarch_main_clear_state	general.h	/^void rarch_main_clear_state(void);$/;"	p	signature:(void)
rarch_main_clear_state	retroarch.c	/^void rarch_main_clear_state(void)$/;"	f	signature:(void)
rarch_main_deinit	general.h	/^void rarch_main_deinit(void);$/;"	p	signature:(void)
rarch_main_deinit	retroarch.c	/^void rarch_main_deinit(void)$/;"	f	signature:(void)
rarch_main_idle_iterate	general.h	/^bool rarch_main_idle_iterate(void);$/;"	p	signature:(void)
rarch_main_idle_iterate	retroarch.c	/^bool rarch_main_idle_iterate(void)$/;"	f	signature:(void)
rarch_main_init	general.h	/^int rarch_main_init(int argc, char *argv[]);$/;"	p	signature:(int argc, char *argv[])
rarch_main_init	retroarch.c	/^int rarch_main_init(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
rarch_main_init_wrap	general.h	/^int rarch_main_init_wrap(const struct rarch_main_wrap *args);$/;"	p	signature:(const struct rarch_main_wrap *args)
rarch_main_init_wrap	retroarch.c	/^int rarch_main_init_wrap(const struct rarch_main_wrap *args)$/;"	f	signature:(const struct rarch_main_wrap *args)
rarch_main_iterate	general.h	/^bool rarch_main_iterate(void);$/;"	p	signature:(void)
rarch_main_iterate	retroarch.c	/^bool rarch_main_iterate(void)$/;"	f	signature:(void)
rarch_main_spring	apple/common/apple_export.h	/^extern void *rarch_main_spring(void* args);$/;"	p	signature:(void* args)
rarch_main_spring	frontend/platform/platform_apple.c	/^void *rarch_main_spring(void* args)$/;"	f	signature:(void* args)
rarch_main_wrap	general.h	/^struct rarch_main_wrap$/;"	s
rarch_main_wrap::config_path	general.h	/^   const char *config_path;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::libretro_path	general.h	/^   const char *libretro_path;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::no_rom	general.h	/^   bool no_rom;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::rom_path	general.h	/^   const char *rom_path;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::sram_path	general.h	/^   const char *sram_path;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::state_path	general.h	/^   const char *state_path;$/;"	m	struct:rarch_main_wrap	access:public
rarch_main_wrap::verbose	general.h	/^   bool verbose;$/;"	m	struct:rarch_main_wrap	access:public
rarch_movie_type	movie.h	/^enum rarch_movie_type$/;"	g
rarch_perf_log	performance.c	/^void rarch_perf_log(void)$/;"	f	signature:(void)
rarch_perf_log	performance.h	/^void rarch_perf_log(void);$/;"	p	signature:(void)
rarch_perf_register	performance.c	/^void rarch_perf_register(struct retro_perf_counter *perf)$/;"	f	signature:(struct retro_perf_counter *perf)
rarch_perf_register	performance.h	/^void rarch_perf_register(struct retro_perf_counter *perf);$/;"	p	signature:(struct retro_perf_counter *perf)
rarch_perf_start	performance.h	/^static inline void rarch_perf_start(struct retro_perf_counter *perf)$/;"	f	signature:(struct retro_perf_counter *perf)
rarch_perf_stop	performance.h	/^static inline void rarch_perf_stop(struct retro_perf_counter *perf)$/;"	f	signature:(struct retro_perf_counter *perf)
rarch_render_cached_frame	general.h	/^void rarch_render_cached_frame(void);$/;"	p	signature:(void)
rarch_render_cached_frame	retroarch.c	/^void rarch_render_cached_frame(void)$/;"	f	signature:(void)
rarch_resampler	audio/resampler.h	/^typedef struct rarch_resampler$/;"	s
rarch_resampler::free	audio/resampler.h	/^   void (*free)(void *re);$/;"	m	struct:rarch_resampler	access:public
rarch_resampler::ident	audio/resampler.h	/^   const char *ident;$/;"	m	struct:rarch_resampler	access:public
rarch_resampler::init	audio/resampler.h	/^   void *(*init)(double bandwidth_mod); \/\/ Bandwidth factor. Will be < 1.0 for downsampling, > 1.0 for upsamling. Corresponds to expected resampling ratio.$/;"	m	struct:rarch_resampler	access:public
rarch_resampler::process	audio/resampler.h	/^   void (*process)(void *re, struct resampler_data *data);$/;"	m	struct:rarch_resampler	access:public
rarch_resampler_freep	audio/resampler.h	61;"	d
rarch_resampler_process	audio/resampler.h	69;"	d
rarch_resampler_process	audio/resampler.h	71;"	d
rarch_resampler_realloc	audio/resampler.c	/^bool rarch_resampler_realloc(void **re, const rarch_resampler_t **backend, const char *ident, double bw_ratio)$/;"	f	signature:(void **re, const rarch_resampler_t **backend, const char *ident, double bw_ratio)
rarch_resampler_realloc	audio/resampler.h	/^bool rarch_resampler_realloc(void **re, const rarch_resampler_t **backend, const char *ident, double bw_ratio);$/;"	p	signature:(void **re, const rarch_resampler_t **backend, const char *ident, double bw_ratio)
rarch_resampler_t	audio/resampler.h	/^} rarch_resampler_t;$/;"	t	typeref:struct:rarch_resampler
rarch_resolution	general.h	/^typedef struct rarch_resolution$/;"	s
rarch_resolution::id	general.h	/^   unsigned id;$/;"	m	struct:rarch_resolution	access:public
rarch_resolution::idx	general.h	/^   unsigned idx;$/;"	m	struct:rarch_resolution	access:public
rarch_resolution_t	general.h	/^} rarch_resolution_t;$/;"	t	typeref:struct:rarch_resolution
rarch_rsound_start	audio/utils.c	/^bool rarch_rsound_start(const char *ip)$/;"	f	signature:(const char *ip)
rarch_rsound_start	audio/utils.h	/^bool rarch_rsound_start(const char *ip);$/;"	p	signature:(const char *ip)
rarch_rsound_stop	audio/utils.c	/^void rarch_rsound_stop(void)$/;"	f	signature:(void)
rarch_rsound_stop	audio/utils.h	/^void rarch_rsound_stop(void);$/;"	p	signature:(void)
rarch_save_state	general.h	/^void rarch_save_state(void);$/;"	p	signature:(void)
rarch_save_state	retroarch.c	/^void rarch_save_state(void)$/;"	f	signature:(void)
rarch_set_fullscreen	general.h	/^void rarch_set_fullscreen(bool fullscreen);$/;"	p	signature:(bool fullscreen)
rarch_set_fullscreen	retroarch.c	/^void rarch_set_fullscreen(bool fullscreen)$/;"	f	signature:(bool fullscreen)
rarch_set_rumble_state	general.h	/^bool rarch_set_rumble_state(unsigned port, enum retro_rumble_effect effect, bool enable);$/;"	p	signature:(unsigned port, enum retro_rumble_effect effect, bool enable)
rarch_setting_t	apple/common/setting_data.h	/^}  rarch_setting_t;$/;"	t	typeref:struct:__anon161
rarch_shader_type	driver.h	/^enum rarch_shader_type$/;"	g
rarch_sinc_resampler	audio/sinc.c	/^typedef struct rarch_sinc_resampler$/;"	s	file:
rarch_sinc_resampler::buffer_l	audio/sinc.c	/^   float *buffer_l;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::buffer_r	audio/sinc.c	/^   float *buffer_r;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::main_buffer	audio/sinc.c	/^   float *main_buffer;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::phase_table	audio/sinc.c	/^   float *phase_table;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::ptr	audio/sinc.c	/^   unsigned ptr;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::taps	audio/sinc.c	/^   unsigned taps;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler::time	audio/sinc.c	/^   uint32_t time;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
rarch_sinc_resampler_t	audio/sinc.c	/^} rarch_sinc_resampler_t;$/;"	t	typeref:struct:rarch_sinc_resampler	file:
rarch_sleep	miscellaneous.h	/^static inline void rarch_sleep(unsigned msec)$/;"	f	signature:(unsigned msec)
rarch_state_slot_decrease	general.h	/^void rarch_state_slot_decrease(void);$/;"	p	signature:(void)
rarch_state_slot_decrease	retroarch.c	/^void rarch_state_slot_decrease(void)$/;"	f	signature:(void)
rarch_state_slot_increase	general.h	/^void rarch_state_slot_increase(void);$/;"	p	signature:(void)
rarch_state_slot_increase	retroarch.c	/^void rarch_state_slot_increase(void)$/;"	f	signature:(void)
rarch_strcasecmp__	compat/compat.c	/^int rarch_strcasecmp__(const char *a, const char *b)$/;"	f	signature:(const char *a, const char *b)
rarch_strdup__	compat/compat.c	/^char *rarch_strdup__(const char *orig)$/;"	f	signature:(const char *orig)
rarch_strtok_r__	compat/compat.c	/^char *rarch_strtok_r__(char *str, const char *delim, char **saveptr)$/;"	f	signature:(char *str, const char *delim, char **saveptr)
rarch_take_screenshot	general.h	/^void rarch_take_screenshot(void);$/;"	p	signature:(void)
rarch_take_screenshot	retroarch.c	/^void rarch_take_screenshot(void)$/;"	f	signature:(void)
rarch_threaded_audio_init	audio/thread_wrapper.c	/^bool rarch_threaded_audio_init(const audio_driver_t **out_driver, void **out_data,$/;"	f	signature:(const audio_driver_t **out_driver, void **out_data, const char *device, unsigned out_rate, unsigned latency, const audio_driver_t *driver)
rarch_threaded_audio_init	audio/thread_wrapper.h	/^bool rarch_threaded_audio_init(const audio_driver_t **out_driver, void **out_data,$/;"	p	signature:(const audio_driver_t **out_driver, void **out_data, const char *device, unsigned out_rate, unsigned latency, const audio_driver_t *driver)
rarch_threaded_video_init	gfx/thread_wrapper.c	/^bool rarch_threaded_video_init(const video_driver_t **out_driver, void **out_data,$/;"	f	signature:(const video_driver_t **out_driver, void **out_data, const input_driver_t **input, void **input_data, const video_driver_t *driver, const video_info_t *info)
rarch_threaded_video_init	gfx/thread_wrapper.h	/^bool rarch_threaded_video_init(const video_driver_t **out_driver, void **out_data,$/;"	p	signature:(const video_driver_t **out_driver, void **out_data, const input_driver_t **input, void **input_data, const video_driver_t *driver, const video_info_t *info)
rarch_viewport	general.h	/^typedef struct rarch_viewport$/;"	s
rarch_viewport::full_height	general.h	/^   unsigned full_height;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport::full_width	general.h	/^   unsigned full_width;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport::height	general.h	/^   unsigned height;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport::width	general.h	/^   unsigned width;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport::x	general.h	/^   int x;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport::y	general.h	/^   int y;$/;"	m	struct:rarch_viewport	access:public
rarch_viewport_t	general.h	/^} rarch_viewport_t;$/;"	t	typeref:struct:rarch_viewport
rasterDriver	ps3/rgl/include/RGL/Types.h	/^      GLvoid*			rasterDriver;$/;"	m	struct:RGLdevice	access:public
rate	audio/openal.c	/^   int rate;$/;"	m	struct:al	file:	access:public
rate	audio/rsound.h	/^      uint32_t rate;$/;"	m	struct:rsound	access:public
rate_control	config.def.h	/^static const bool rate_control = false;$/;"	v
rate_control	config.def.h	/^static const bool rate_control = true;$/;"	v
rate_control	general.h	/^      bool rate_control; $/;"	m	struct:global::__anon235	access:public
rate_control	general.h	/^      bool rate_control;$/;"	m	struct:settings::__anon231	access:public
rate_control_delta	config.def.h	/^static const float rate_control_delta = 0.000;$/;"	v
rate_control_delta	config.def.h	/^static const float rate_control_delta = 0.005;$/;"	v
rate_control_delta	general.h	/^      float rate_control_delta;$/;"	m	struct:settings::__anon231	access:public
ratio	audio/resampler.h	/^   double ratio;$/;"	m	struct:resampler_data	access:public
ratio	record/ffemu.c	/^   double ratio;$/;"	m	struct:ff_audio_info	file:	access:public
raw	deps/minizip/unzip.c	/^    int   raw;$/;"	m	struct:__anon110	file:	access:public
rbo_color	libretro-test-gl/libretro-test.c	/^static GLuint rbo_color, rbo_depth_stencil;$/;"	v	file:
rbo_depth_stencil	libretro-test-gl/libretro-test.c	/^static GLuint rbo_color, rbo_depth_stencil;$/;"	v	file:
rd	audio/rsound.c	/^   rsound_t *rd;$/;"	m	struct:rsd	file:	access:public
rdtsc	performance.c	138;"	d	file:
readCPUInfo	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static String readCPUInfo()$/;"	m	class:UserPreferences	access:public	signature:()
readElfFromFile	ps3/rgl/src/libelf/readelf.h	/^   ELF_t* readElfFromFile(const char* filename);$/;"	p	signature:(const char* filename)
readElfFromMemory	ps3/rgl/src/libelf/readelf.h	/^   ELF_t* readElfFromMemory(const char* memory,unsigned int size);$/;"	p	signature:(const char* memory,unsigned int size)
read_buffer	deps/minizip/unzip.c	/^    char  *read_buffer;         \/* internal buffer for compressed data *\/$/;"	m	struct:__anon110	file:	access:public
read_chunk_header	gfx/rpng/rpng.c	/^static bool read_chunk_header(FILE *file, struct png_chunk *chunk)$/;"	f	file:	signature:(FILE *file, struct png_chunk *chunk)
read_file	file_path.c	/^ssize_t read_file(const char *path, void **buf)$/;"	f	signature:(const char *path, void **buf)
read_file	file_path.h	/^ssize_t read_file(const char *path, void **buf);$/;"	p	signature:(const char *path, void **buf)
read_file_func	deps/minizip/unzip.c	/^typedef uLong (*read_file_func) (voidpf opaque, voidpf stream, void* buf, uLong size);$/;"	t	file:
read_file_string	file_path.c	/^bool read_file_string(const char *path, char **buf)$/;"	f	signature:(const char *path, char **buf)
read_file_string	file_path.h	/^bool read_file_string(const char *path, char **buf);$/;"	p	signature:(const char *path, char **buf)
read_frame_count	netplay.c	/^   uint32_t read_frame_count;$/;"	m	struct:netplay	file:	access:public
read_keybinds_axis	settings.c	/^static void read_keybinds_axis(config_file_t *conf, unsigned player, unsigned index,$/;"	f	file:	signature:(config_file_t *conf, unsigned player, unsigned index, struct retro_keybind *bind)
read_keybinds_button	settings.c	/^static void read_keybinds_button(config_file_t *conf, unsigned player, unsigned index,$/;"	f	file:	signature:(config_file_t *conf, unsigned player, unsigned index, struct retro_keybind *bind)
read_keybinds_keyboard	settings.c	/^static void read_keybinds_keyboard(config_file_t *conf, unsigned player, unsigned index,$/;"	f	file:	signature:(config_file_t *conf, unsigned player, unsigned index, struct retro_keybind *bind)
read_keybinds_player	settings.c	/^static void read_keybinds_player(config_file_t *conf, unsigned player)$/;"	f	file:	signature:(config_file_t *conf, unsigned player)
read_launch_conf	tools/retrolaunch/main.c	/^static int read_launch_conf(struct RunInfo *info, const char *game_name)$/;"	f	file:	signature:(struct RunInfo *info, const char *game_name)
read_le	file_extract.c	/^static uint32_t read_le(const uint8_t *data, unsigned size)$/;"	f	file:	signature:(const uint8_t *data, unsigned size)
read_position	apple/iOS/bluetooth/btpad_queue.c	/^static uint32_t read_position;$/;"	v	file:
read_ptr	netplay.c	/^   size_t read_ptr; \/\/ Ptr to where we are reading. Generally, other_ptr <= read_ptr <= self_ptr.$/;"	m	struct:netplay	file:	access:public
read_rom_file	file.c	/^static ssize_t read_rom_file(const char *path, void **buf)$/;"	f	file:	signature:(const char *path, void **buf)
read_stdin	command.c	/^static size_t read_stdin(char *buf, size_t size)$/;"	f	file:	signature:(char *buf, size_t size)
read_sysfs	gfx/omap_gfx.c	/^static int read_sysfs(const char *fname, char *buff, size_t size) {$/;"	f	file:	signature:(const char *fname, char *buff, size_t size)
read_viewport	driver.h	/^   bool (*read_viewport)(void *data, uint8_t *buffer);$/;"	m	struct:video_driver	access:public
read_viewport	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::read_viewport(uint8_t *buffer)$/;"	f	class:D3DVideo	signature:(uint8_t *buffer)
read_viewport	gfx/d3d9/d3d9.hpp	/^      bool read_viewport(uint8_t *buffer);$/;"	p	class:D3DVideo	access:public	signature:(uint8_t *buffer)
read_vp	gfx/thread_wrapper.c	/^   struct rarch_viewport read_vp; \/\/ Last viewport reported to caller.$/;"	m	struct:thread_video	typeref:struct:thread_video::rarch_viewport	file:	access:public
readbackBool	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackBool(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
readbackConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static void readbackConfigFile(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
readbackDouble	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackDouble(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
readbackString	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static void readbackString(ConfigFile cfg, SharedPreferences.Editor edit, String key)$/;"	m	class:UserPreferences	file:	access:private	signature:(ConfigFile cfg, SharedPreferences.Editor edit, String key)
readjust_audio_input_rate	retroarch.c	/^static void readjust_audio_input_rate(void)$/;"	f	file:	signature:(void)
readonly	conf/config_file.c	/^   bool readonly; \/\/ If we got this from an #include, do not allow write.$/;"	m	struct:config_entry_list	file:	access:public
ready	camera/video4linux2.c	/^   bool ready;$/;"	m	struct:video4linux	file:	access:public
ready_for_data	audio/rsound.h	/^      volatile int ready_for_data;$/;"	m	struct:rsound	access:public
real_device	xenon/xenon360_video.c	/^   struct XenosDevice real_device;$/;"	m	struct:gl	typeref:struct:gl::XenosDevice	file:	access:public
real_input_state	netplay.c	/^   uint16_t real_input_state;$/;"	m	struct:delta_frame	file:	access:public
reallocArray	ps3/rgl/include/RGL/Base.h	/^      inline void reallocArray( unsigned int newCapacity )$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int newCapacity )
reason	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t reason;$/;"	m	struct:btpad_queue_command::__anon142::__anon144	file:	access:public
reassign_bottom	rewind.c	/^static void reassign_bottom(state_manager_t *state)$/;"	f	file:	signature:(state_manager_t *state)
rec	general.h	/^   ffemu_t *rec;$/;"	m	struct:global	access:public
receive_data	netplay.c	/^static bool receive_data(netplay_t *handle, uint32_t *buffer, size_t size)$/;"	f	file:	signature:(netplay_t *handle, uint32_t *buffer, size_t size)
recompute_pass_sizes	gfx/d3d9/d3d9.cpp	/^void D3DVideo::recompute_pass_sizes()$/;"	f	class:D3DVideo	signature:()
recompute_pass_sizes	gfx/d3d9/d3d9.hpp	/^      void recompute_pass_sizes();$/;"	p	class:D3DVideo	access:private	signature:()
record_config	general.h	/^   char record_config[PATH_MAX];$/;"	m	struct:global	access:public
record_gpu_buffer	general.h	/^   uint8_t *record_gpu_buffer;$/;"	m	struct:global	access:public
record_gpu_height	general.h	/^   size_t record_gpu_height;$/;"	m	struct:global	access:public
record_gpu_width	general.h	/^   size_t record_gpu_width;$/;"	m	struct:global	access:public
record_height	general.h	/^   unsigned record_height;$/;"	m	struct:global	access:public
record_path	general.h	/^   char record_path[PATH_MAX];$/;"	m	struct:global	access:public
record_width	general.h	/^   unsigned record_width;$/;"	m	struct:global	access:public
recording	general.h	/^   bool recording;$/;"	m	struct:global	access:public
recording_dump_frame	retroarch.c	/^static void recording_dump_frame(const void *data, unsigned width, unsigned height, size_t pitch)$/;"	f	file:	signature:(const void *data, unsigned width, unsigned height, size_t pitch)
rect	gfx/thread_wrapper.c	/^      } rect;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon217	file:	access:public
recv_all	netplay.c	/^static bool recv_all(int fd, void *data_, size_t size)$/;"	f	file:	signature:(int fd, void *data_, size_t size)
recv_msg	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^} recv_msg;$/;"	t	typeref:union:__anon96
red	gfx/context/sunxi_disp_ioctl.h	/^	__u8 red;$/;"	m	struct:__anon164	access:public
red_match_rule	gfx/context/sunxi_disp_ioctl.h	/^	__u32 red_match_rule;$/;"	m	struct:__anon188	access:public
refCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   int refCount; \/\/total number of program refCounted$/;"	m	struct:_CGprogramGroup	access:public
refCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^   int refCount;$/;"	m	struct:_CGnamedProgram	access:public
refCount	ps3/rgl/include/RGL/Types.h	/^      GLuint refCount;$/;"	m	struct:rglBufferObject	access:public
ref_count_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            mutable ptrdiff_t	ref_count_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
reference	libretro.h	/^   retro_usec_t reference; \/\/ Represents the time of one frame. It is computed as 1000000 \/ fps, but the implementation will resolve the rounding to ensure that framestepping, etc is exact.$/;"	m	struct:retro_frame_time_callback	access:public
reference	ps3/rgl/src/cg/nvbi.hpp	/^               reference() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
reference	ps3/rgl/src/cg/nvbiimpl.hpp	/^               reference() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
reference	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::reference() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
referenceBuffer	ps3/rgl/include/RGL/Types.h	/^      rglBufferObject *referenceBuffer;$/;"	m	struct:__anon63	access:public
refreshButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^void ButtonMap::refreshButtonMap(int player)$/;"	f	class:ButtonMap	signature:(int player)
refreshButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^   Q_INVOKABLE void refreshButtonMap(int player);$/;"	p	class:ButtonMap	access:public	signature:(int player)
refresh_rate	config.def.h	/^static const float refresh_rate = 59.94; $/;"	v
refresh_rate	config.def.h	/^static const float refresh_rate = 59.95; $/;"	v
refresh_rate	config.def.h	/^static const float refresh_rate = 59.98;$/;"	v
refresh_rate	general.h	/^      float refresh_rate;$/;"	m	struct:settings::__anon227	access:public
region	ps3/rgl/src/rgl_ps3.cpp	/^   rglTiledRegion region[RGLGCM_MAX_TILED_REGIONS];$/;"	m	struct:__anon29	file:	access:public
registerCount	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned char registerCount;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
registerCount	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned int registerCount;$/;"	m	struct:CgProgramHeader::__anon74::__anon75	access:public
registerCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned char registerCount;            \/\/ R registers count$/;"	m	struct:CgBinaryFragmentProgram	access:public
registerCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int  registerCount;            \/\/ R registers count$/;"	m	struct:CgBinaryVertexProgram	access:public
register_sha1_callback	ps3/ps3py/crypt.c	/^static PyObject *register_sha1_callback(PyObject *self, PyObject *args) {$/;"	f	file:	signature:(PyObject *self, PyObject *args)
registered	libretro.h	/^   bool registered;$/;"	m	struct:retro_perf_counter	access:public
relative	ps3/rgl/src/libelf/readelf.h	/^      unsigned int relative;$/;"	m	struct:__anon36	access:public
release	ps3/rgl/src/cg/nvbi.hpp	/^               release() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
release	ps3/rgl/src/cg/nvbiimpl.hpp	/^               release() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
release	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::release() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
release_region	audio/dsound.c	/^static inline void release_region(dsound_t *ds, const struct audio_lock *region)$/;"	f	file:	signature:(dsound_t *ds, const struct audio_lock *region)
relocatable	ps3/rgl/src/libelf/readelf.h	/^      unsigned int relocatable;$/;"	m	struct:_ELF_t	access:public
relocateSymbols	ps3/rgl/src/libelf/readelf.h	/^   int relocateSymbols(ELF_t* elf,unsigned int origin);$/;"	p	signature:(ELF_t* elf,unsigned int origin)
remove	ps3/rgl/include/RGL/Base.h	/^      inline void remove( unsigned int index )$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int index )
removeElement	ps3/rgl/include/RGL/Base.h	/^      inline void removeElement( const T &element )$/;"	f	class:RGL::Vector	access:public	signature:( const T &element )
remove_comments	tools/cg2glsl.py	/^def remove_comments(source_lines):$/;"	f	access:public
remove_device	input/udev_input.c	/^static void remove_device(udev_input_t *udev, const char *devnode)$/;"	f	file:	signature:(udev_input_t *udev, const char *devnode)
remove_device	input/udev_joypad.c	/^static void remove_device(const char *path)$/;"	f	file:	signature:(const char *path)
remove_device	input/udev_joypad.c	/^static void remove_device(const char *path);$/;"	p	file:	signature:(const char *path)
render	frontend/menu/menu_context.h	/^   void  (*render)(void*);$/;"	m	struct:menu_ctx_driver	access:public
render	gfx/d3d9/render_chain.cpp	/^bool RenderChain::render(const void *data,$/;"	f	class:RenderChain	signature:(const void *data, unsigned width, unsigned height, unsigned pitch, unsigned rotation)
render	gfx/d3d9/render_chain.hpp	/^      bool render(const void *data,$/;"	p	class:RenderChain	access:public	signature:(const void *data, unsigned width, unsigned height, unsigned pitch, unsigned rotation)
render16_uyvy	gfx/xvideo.c	/^static void render16_uyvy(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)
render16_yuy2	gfx/xvideo.c	/^static void render16_yuy2(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)
render32_uyvy	gfx/xvideo.c	/^static void render32_uyvy(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)
render32_yuy2	gfx/xvideo.c	/^static void render32_yuy2(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(xv_t *xv, const void *input_, unsigned width, unsigned height, unsigned pitch)
renderHeight	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint renderHeight;$/;"	m	struct:__anon72	access:public
renderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTarget       renderTarget;$/;"	m	struct:rglGcmState	access:public
renderWidth	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint renderWidth;$/;"	m	struct:__anon72	access:public
render_16	gfx/xvideo.c	/^   void (*render_16)(xv_t *xv, const void *input,$/;"	m	struct:format_desc	file:	access:public
render_32	gfx/xvideo.c	/^   void (*render_32)(xv_t *xv, const void *input,$/;"	m	struct:format_desc	file:	access:public
render_audio	libretro-test/libretro-test.c	/^static void render_audio(void)$/;"	f	file:	signature:(void)
render_background	frontend/menu/disp/rgui.c	/^static void render_background(rgui_handle_t *rgui)$/;"	f	file:	signature:(rgui_handle_t *rgui)
render_background	frontend/menu/disp/rmenu.c	/^static void render_background(rgui_handle_t *rgui)$/;"	f	file:	signature:(rgui_handle_t *rgui)
render_checkered	libretro-test/libretro-test.c	/^static void render_checkered(void)$/;"	f	file:	signature:(void)
render_func	gfx/xvideo.c	/^   void (*render_func)(struct xv*, const void *frame, unsigned width, unsigned height, unsigned pitch);$/;"	m	struct:xv	file:	access:public
render_messagebox	frontend/menu/menu_context.h	/^   void  (*render_messagebox)(void*, const char*);$/;"	m	struct:menu_ctx_driver	access:public
render_msg	gfx/d3d9/d3d9.cpp	/^void D3DVideo::render_msg(const char *msg, font_params_t *params)$/;"	f	class:D3DVideo	signature:(const char *msg, font_params_t *params)
render_msg	gfx/d3d9/d3d9.hpp	/^      void render_msg(const char *msg, font_params_t *params = nullptr);$/;"	p	class:D3DVideo	access:public	signature:(const char *msg, font_params_t *params = nullptr)
render_msg	gfx/fonts/d3d_font.h	/^   void (*render_msg)(void *data, const char *msg, void *parms);$/;"	m	struct:d3d_font_renderer	access:public
render_msg	gfx/fonts/fonts.h	/^   void (*render_msg)(void *data, const char *msg, struct font_output_list *output);$/;"	m	struct:font_renderer_driver	access:public
render_msg	gfx/fonts/gl_font.h	/^   void (*render_msg)(void *data, const char *msg, void *parms);$/;"	m	struct:gl_font_renderer	access:public
render_normal	frontend/menu/disp/rmenu.c	/^static bool render_normal = true;$/;"	v	file:
render_pass	gfx/d3d9/render_chain.cpp	/^void RenderChain::render_pass(Pass &pass, unsigned pass_index)$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned pass_index)
render_pass	gfx/d3d9/render_chain.hpp	/^      void render_pass(Pass &pass, unsigned pass_index);$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned pass_index)
replace_global_fragment	tools/cg2glsl.py	/^def replace_global_fragment(source):$/;"	f	access:public
replace_global_in	tools/cg2glsl.py	/^def replace_global_in(source):$/;"	f	access:public
replace_global_vertex	tools/cg2glsl.py	/^def replace_global_vertex(source):$/;"	f	access:public
replace_image_index	libretro.h	/^   retro_replace_image_index_t replace_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
replace_varyings	tools/cg2glsl.py	/^def replace_varyings(source):$/;"	f	access:public
reply_cmd	gfx/thread_wrapper.c	/^   enum thread_cmd reply_cmd;$/;"	m	struct:thread_video	typeref:enum:thread_video::thread_cmd	file:	access:public
requestButtonMapping	blackberry-qnx/bb10/src/ButtonMap.h	/^    int requestButtonMapping(screen_device_t device, int player, int button);$/;"	p	class:ButtonMap	access:public	signature:(screen_device_t device, int player, int button)
requirePreferenceManager	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    private void requirePreferenceManager()$/;"	m	class:PreferenceListFragment	file:	access:private	signature:()
res	ps3/rgl/include/Cg/cgBinary.h	/^      CGresource                      res;           \/\/ cgGetParameterResource()$/;"	m	struct:CgBinaryParameter	access:public
resIndex	ps3/rgl/include/Cg/cgBinary.h	/^      int                             resIndex;      \/\/ cgGetParameterResourceIndex()$/;"	m	struct:CgBinaryParameter	access:public
resIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^   int resIndex;$/;"	m	struct:__anon47	file:	access:public
res_buf	audio/openal.c	/^   ALuint *res_buf;$/;"	m	struct:al	file:	access:public
res_ptr	audio/openal.c	/^   size_t res_ptr;$/;"	m	struct:al	file:	access:public
resample_out	record/ffemu.c	/^   float *resample_out;$/;"	m	struct:ff_audio_info	file:	access:public
resample_out_frames	record/ffemu.c	/^   size_t resample_out_frames;$/;"	m	struct:ff_audio_info	file:	access:public
resampler	general.h	/^      char resampler[32];$/;"	m	struct:settings::__anon231	access:public
resampler	general.h	/^      const rarch_resampler_t *resampler;$/;"	m	struct:global::__anon235	access:public
resampler	record/ffemu.c	/^   const rarch_resampler_t *resampler;$/;"	m	struct:ff_audio_info	file:	access:public
resampler_data	audio/resampler.h	/^struct resampler_data$/;"	s
resampler_data	general.h	/^      void *resampler_data;$/;"	m	struct:global::__anon235	access:public
resampler_data	record/ffemu.c	/^   void *resampler_data;$/;"	m	struct:ff_audio_info	file:	access:public
resampler_data::data_in	audio/resampler.h	/^   const float *data_in;$/;"	m	struct:resampler_data	access:public
resampler_data::data_out	audio/resampler.h	/^   float *data_out;$/;"	m	struct:resampler_data	access:public
resampler_data::input_frames	audio/resampler.h	/^   size_t input_frames;$/;"	m	struct:resampler_data	access:public
resampler_data::output_frames	audio/resampler.h	/^   size_t output_frames;$/;"	m	struct:resampler_data	access:public
resampler_data::ratio	audio/resampler.h	/^   double ratio;$/;"	m	struct:resampler_data	access:public
resampler_sinc_free	audio/sinc.c	/^static void resampler_sinc_free(void *re)$/;"	f	file:	signature:(void *re)
resampler_sinc_new	audio/sinc.c	/^static void *resampler_sinc_new(double bandwidth_mod)$/;"	f	file:	signature:(double bandwidth_mod)
resampler_sinc_process	audio/sinc.c	/^static void resampler_sinc_process(void *re_, struct resampler_data *data)$/;"	f	file:	signature:(void *re_, struct resampler_data *data)
rescInit	ps3/rgl/src/rgl_ps3.cpp	/^static void rescInit( const RGLdeviceParameters* params, rglGcmDevice *gcmDevice )$/;"	f	file:	signature:( const RGLdeviceParameters* params, rglGcmDevice *gcmDevice )
rescInterlaceMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescInterlaceMode rescInterlaceMode;     \/\/ RESC interlace filter mode: normal bilinear or use the anti-flicker interlace filter$/;"	m	struct:__anon72	access:public
rescIsEnabled	ps3/rgl/src/rgl_ps3.cpp	/^static inline int rescIsEnabled (void *data)$/;"	f	file:	signature:(void *data)
rescPalTemporalMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescPalTemporalMode rescPalTemporalMode; \/\/ RESC pal frame rate conversion mode: none, drop frame, interpolate$/;"	m	struct:__anon72	access:public
rescRatioMode	ps3/rgl/include/export/RGL/rgl.h	/^   RescRatioMode rescRatioMode;             \/\/ RESC aspect ratio rescaling mode: full screen, letterbox, or pan & scan$/;"	m	struct:__anon72	access:public
reserved	apple/iOS/bluetooth/btpad_queue.c	/^         uint8_t reserved;$/;"	m	struct:btpad_queue_command::__anon142::__anon146	file:	access:public
reserved	deps/miniz/zlib.h	/^  mz_ulong reserved;                \/\/ not used$/;"	m	struct:mz_stream_s	access:public
reserved	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short reserved;$/;"	m	struct:_CgParameterSemantic	access:public
reserved	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short reserved;$/;"	m	struct:_CgParameterStructure	access:public
reset_callback	gx/gx_input.c	/^static void reset_callback(void)$/;"	f	file:	signature:(void)
resize	gfx/d3d9/d3d9.cpp	/^void D3DVideo::resize(unsigned new_width, unsigned new_height)$/;"	f	class:D3DVideo	signature:(unsigned new_width, unsigned new_height)
resize	gfx/d3d9/d3d9.hpp	/^      void resize(unsigned new_width, unsigned new_height);$/;"	p	class:D3DVideo	access:public	signature:(unsigned new_width, unsigned new_height)
resolutionId	ps3/sdk_defines.h	478;"	d
resolutions	general.h	/^         } resolutions;$/;"	m	struct:global::__anon242::__anon243	typeref:struct:global::__anon242::__anon243::__anon244	access:public
resolveElf	ps3/rgl/src/libelf/readelf.h	/^   int resolveElf(ELF_t* main_elf,ELF_t* elf);$/;"	p	signature:(ELF_t* main_elf,ELF_t* elf)
resolve_extensions	gfx/gl.c	/^static bool resolve_extensions(gl_t *gl)$/;"	f	file:	signature:(gl_t *gl)
resolved	ps3/rgl/src/libelf/readelf.h	/^      unsigned char resolved;$/;"	m	struct:__anon35	access:public
resource	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short resource;$/;"	m	struct:_CgParameterResource	access:public
resourceId	android/phoenix/src/com/retroarch/browser/IconAdapter.java	/^	private final int resourceId;$/;"	f	class:IconAdapter	file:	access:private
resourceId	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoFragment.java	/^		private final int resourceId;$/;"	f	class:InstalledCoreInfoFragment.CoreInfoAdapter	file:	access:private
resourceId	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoresFragment.java	/^		private final int resourceId;$/;"	f	class:InstalledCoresFragment.InstalledCoresAdapter	file:	access:private
resourceId	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^		private final int resourceId;$/;"	f	class:DetectCoreDirectoryFragment.CoreSelectionAdapter	file:	access:private
resourceTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short resourceTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
resources	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned short *resources;$/;"	m	struct:_CGprogram	access:public
rest_read_compressed	deps/minizip/unzip.c	/^    uLong rest_read_compressed; \/* number of byte to be decompressed *\/$/;"	m	struct:__anon110	file:	access:public
rest_read_uncompressed	deps/minizip/unzip.c	/^    uLong rest_read_uncompressed;\/*number of byte to be obtained after decomp*\/$/;"	m	struct:__anon110	file:	access:public
restart	driver.h	/^   void (*restart)(void);$/;"	m	struct:video_driver	access:public
rested_axes	frontend/menu/menu_common.h	/^   int16_t rested_axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_axis_state	access:public
restore	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::restore()$/;"	f	class:D3DVideo	signature:()
restore	gfx/d3d9/d3d9.hpp	/^      bool restore();$/;"	p	class:D3DVideo	access:public	signature:()
restore_terminal_input	input/udev_input.c	/^static void restore_terminal_input(void)$/;"	f	file:	signature:(void)
restore_terminal_signal	input/udev_input.c	/^static void restore_terminal_signal(int sig)$/;"	f	file:	signature:(int sig)
ret	emscripten/library_rwebcam.js	/^      var ret = 0;$/;"	v
retrace_callback	gx/gx_video.c	/^static void retrace_callback(u32 retrace_count)$/;"	f	file:	signature:(u32 retrace_count)
retro_add_image_index_t	libretro.h	/^typedef bool (*retro_add_image_index_t)(void);$/;"	t
retro_api_version	libretro-test-gl/libretro-test.c	/^unsigned retro_api_version(void)$/;"	f	signature:(void)
retro_api_version	libretro-test/libretro-test.c	/^unsigned retro_api_version(void)$/;"	f	signature:(void)
retro_api_version	libretro.h	/^unsigned retro_api_version(void);$/;"	p	signature:(void)
retro_audio_callback	libretro.h	/^struct retro_audio_callback$/;"	s
retro_audio_callback::callback	libretro.h	/^   retro_audio_callback_t callback;$/;"	m	struct:retro_audio_callback	access:public
retro_audio_callback::set_state	libretro.h	/^   retro_audio_set_state_callback_t set_state;$/;"	m	struct:retro_audio_callback	access:public
retro_audio_callback_t	libretro.h	/^typedef void (*retro_audio_callback_t)(void);$/;"	t
retro_audio_sample_batch_t	libretro.h	/^typedef size_t (*retro_audio_sample_batch_t)(const int16_t *data, size_t frames);$/;"	t
retro_audio_sample_t	libretro.h	/^typedef void (*retro_audio_sample_t)(int16_t left, int16_t right);$/;"	t
retro_audio_set_state_callback_t	libretro.h	/^typedef void (*retro_audio_set_state_callback_t)(bool enabled);$/;"	t
retro_buffer	autosave.c	/^   const void *retro_buffer;$/;"	m	struct:autosave	file:	access:public
retro_callbacks	netplay.h	/^struct retro_callbacks$/;"	s
retro_callbacks::frame_cb	netplay.h	/^   retro_video_refresh_t frame_cb;$/;"	m	struct:retro_callbacks	access:public
retro_callbacks::sample_batch_cb	netplay.h	/^   retro_audio_sample_batch_t sample_batch_cb;$/;"	m	struct:retro_callbacks	access:public
retro_callbacks::sample_cb	netplay.h	/^   retro_audio_sample_t sample_cb;$/;"	m	struct:retro_callbacks	access:public
retro_callbacks::state_cb	netplay.h	/^   retro_input_state_t state_cb;$/;"	m	struct:retro_callbacks	access:public
retro_camera_buffer	libretro.h	/^enum retro_camera_buffer$/;"	g
retro_camera_callback	libretro.h	/^struct retro_camera_callback$/;"	s
retro_camera_callback::caps	libretro.h	/^   uint64_t caps; \/\/ Set by libretro core. Example bitmask: caps = (1 << RETRO_CAMERA_BUFFER_OPENGL_TEXTURE) | (1 << RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER).$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::deinitialized	libretro.h	/^   retro_camera_lifetime_status_t deinitialized;$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::frame_opengl_texture	libretro.h	/^   retro_camera_frame_opengl_texture_t frame_opengl_texture; \/\/ Set by libretro core if OpenGL texture callbacks will be used.$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::frame_raw_framebuffer	libretro.h	/^   retro_camera_frame_raw_framebuffer_t frame_raw_framebuffer; \/\/ Set by libretro core if raw framebuffer callbacks will be used.$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::height	libretro.h	/^   unsigned height;$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::initialized	libretro.h	/^   retro_camera_lifetime_status_t initialized;$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::start	libretro.h	/^   retro_camera_start_t start; \/\/ Set by frontend.$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::stop	libretro.h	/^   retro_camera_stop_t stop; \/\/ Set by frontend.$/;"	m	struct:retro_camera_callback	access:public
retro_camera_callback::width	libretro.h	/^   unsigned width; \/\/ Desired resolution for camera. Is only used as a hint.$/;"	m	struct:retro_camera_callback	access:public
retro_camera_frame_opengl_texture_t	libretro.h	/^typedef void (*retro_camera_frame_opengl_texture_t)(unsigned texture_id, unsigned texture_target, const float *affine);$/;"	t
retro_camera_frame_raw_framebuffer_t	libretro.h	/^typedef void (*retro_camera_frame_raw_framebuffer_t)(const uint32_t *buffer, unsigned width, unsigned height, size_t pitch);$/;"	t
retro_camera_lifetime_status_t	libretro.h	/^typedef void (*retro_camera_lifetime_status_t)(void);$/;"	t
retro_camera_start_t	libretro.h	/^typedef bool (*retro_camera_start_t)(void);$/;"	t
retro_camera_stop_t	libretro.h	/^typedef void (*retro_camera_stop_t)(void);$/;"	t
retro_cheat_reset	libretro-test-gl/libretro-test.c	/^void retro_cheat_reset(void)$/;"	f	signature:(void)
retro_cheat_reset	libretro-test/libretro-test.c	/^void retro_cheat_reset(void)$/;"	f	signature:(void)
retro_cheat_reset	libretro.h	/^void retro_cheat_reset(void);$/;"	p	signature:(void)
retro_cheat_set	libretro-test-gl/libretro-test.c	/^void retro_cheat_set(unsigned index, bool enabled, const char *code)$/;"	f	signature:(unsigned index, bool enabled, const char *code)
retro_cheat_set	libretro-test/libretro-test.c	/^void retro_cheat_set(unsigned index, bool enabled, const char *code)$/;"	f	signature:(unsigned index, bool enabled, const char *code)
retro_cheat_set	libretro.h	/^void retro_cheat_set(unsigned index, bool enabled, const char *code);$/;"	p	signature:(unsigned index, bool enabled, const char *code)
retro_deinit	libretro-test-gl/libretro-test.c	/^void retro_deinit(void)$/;"	f	signature:(void)
retro_deinit	libretro-test/libretro-test.c	/^void retro_deinit(void)$/;"	f	signature:(void)
retro_deinit	libretro.h	/^void retro_deinit(void);$/;"	p	signature:(void)
retro_disk_control_callback	libretro.h	/^struct retro_disk_control_callback$/;"	s
retro_disk_control_callback::add_image_index	libretro.h	/^   retro_add_image_index_t add_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::get_eject_state	libretro.h	/^   retro_get_eject_state_t get_eject_state;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::get_image_index	libretro.h	/^   retro_get_image_index_t get_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::get_num_images	libretro.h	/^   retro_get_num_images_t  get_num_images;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::replace_image_index	libretro.h	/^   retro_replace_image_index_t replace_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::set_eject_state	libretro.h	/^   retro_set_eject_state_t set_eject_state;$/;"	m	struct:retro_disk_control_callback	access:public
retro_disk_control_callback::set_image_index	libretro.h	/^   retro_set_image_index_t set_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
retro_environment_t	libretro.h	/^typedef bool (*retro_environment_t)(unsigned cmd, void *data);$/;"	t
retro_frame_time_callback	libretro.h	/^struct retro_frame_time_callback$/;"	s
retro_frame_time_callback::callback	libretro.h	/^   retro_frame_time_callback_t callback;$/;"	m	struct:retro_frame_time_callback	access:public
retro_frame_time_callback::reference	libretro.h	/^   retro_usec_t reference; \/\/ Represents the time of one frame. It is computed as 1000000 \/ fps, but the implementation will resolve the rounding to ensure that framestepping, etc is exact.$/;"	m	struct:retro_frame_time_callback	access:public
retro_frame_time_callback_t	libretro.h	/^typedef void (*retro_frame_time_callback_t)(retro_usec_t usec);$/;"	t
retro_game_geometry	libretro.h	/^struct retro_game_geometry$/;"	s
retro_game_geometry::aspect_ratio	libretro.h	/^   float    aspect_ratio;  \/\/ Nominal aspect ratio of game. If aspect_ratio is <= 0.0,$/;"	m	struct:retro_game_geometry	access:public
retro_game_geometry::base_height	libretro.h	/^   unsigned base_height;   \/\/ Nominal video height of game.$/;"	m	struct:retro_game_geometry	access:public
retro_game_geometry::base_width	libretro.h	/^   unsigned base_width;    \/\/ Nominal video width of game.$/;"	m	struct:retro_game_geometry	access:public
retro_game_geometry::max_height	libretro.h	/^   unsigned max_height;    \/\/ Maximum possible height of game.$/;"	m	struct:retro_game_geometry	access:public
retro_game_geometry::max_width	libretro.h	/^   unsigned max_width;     \/\/ Maximum possible width of game.$/;"	m	struct:retro_game_geometry	access:public
retro_game_info	libretro.h	/^struct retro_game_info$/;"	s
retro_game_info::data	libretro.h	/^   const void *data;       \/\/ Memory buffer of loaded game. Will be NULL if need_fullpath was set.$/;"	m	struct:retro_game_info	access:public
retro_game_info::meta	libretro.h	/^   const char *meta;       \/\/ String of implementation specific meta-data.$/;"	m	struct:retro_game_info	access:public
retro_game_info::path	libretro.h	/^   const char *path;       \/\/ Path to game, UTF-8 encoded. Usually used as a reference.$/;"	m	struct:retro_game_info	access:public
retro_game_info::size	libretro.h	/^   size_t      size;       \/\/ Size of memory buffer.$/;"	m	struct:retro_game_info	access:public
retro_get_cpu_features_t	libretro.h	/^typedef uint64_t (*retro_get_cpu_features_t)(void);$/;"	t
retro_get_eject_state_t	libretro.h	/^typedef bool (*retro_get_eject_state_t)(void);$/;"	t
retro_get_image_index_t	libretro.h	/^typedef unsigned (*retro_get_image_index_t)(void);$/;"	t
retro_get_memory_data	libretro-test-gl/libretro-test.c	/^void *retro_get_memory_data(unsigned id)$/;"	f	signature:(unsigned id)
retro_get_memory_data	libretro-test/libretro-test.c	/^void *retro_get_memory_data(unsigned id)$/;"	f	signature:(unsigned id)
retro_get_memory_data	libretro.h	/^void *retro_get_memory_data(unsigned id);$/;"	p	signature:(unsigned id)
retro_get_memory_size	libretro-test-gl/libretro-test.c	/^size_t retro_get_memory_size(unsigned id)$/;"	f	signature:(unsigned id)
retro_get_memory_size	libretro-test/libretro-test.c	/^size_t retro_get_memory_size(unsigned id)$/;"	f	signature:(unsigned id)
retro_get_memory_size	libretro.h	/^size_t retro_get_memory_size(unsigned id);$/;"	p	signature:(unsigned id)
retro_get_num_images_t	libretro.h	/^typedef unsigned (*retro_get_num_images_t)(void);$/;"	t
retro_get_region	libretro-test-gl/libretro-test.c	/^unsigned retro_get_region(void)$/;"	f	signature:(void)
retro_get_region	libretro-test/libretro-test.c	/^unsigned retro_get_region(void)$/;"	f	signature:(void)
retro_get_region	libretro.h	/^unsigned retro_get_region(void);$/;"	p	signature:(void)
retro_get_system_av_info	libretro-test-gl/libretro-test.c	/^void retro_get_system_av_info(struct retro_system_av_info *info)$/;"	f	signature:(struct retro_system_av_info *info)
retro_get_system_av_info	libretro-test/libretro-test.c	/^void retro_get_system_av_info(struct retro_system_av_info *info)$/;"	f	signature:(struct retro_system_av_info *info)
retro_get_system_av_info	libretro.h	/^void retro_get_system_av_info(struct retro_system_av_info *info);$/;"	p	signature:(struct retro_system_av_info *info)
retro_get_system_info	libretro-test-gl/libretro-test.c	/^void retro_get_system_info(struct retro_system_info *info)$/;"	f	signature:(struct retro_system_info *info)
retro_get_system_info	libretro-test/libretro-test.c	/^void retro_get_system_info(struct retro_system_info *info)$/;"	f	signature:(struct retro_system_info *info)
retro_get_system_info	libretro.h	/^void retro_get_system_info(struct retro_system_info *info);$/;"	p	signature:(struct retro_system_info *info)
retro_hw_context_reset_t	libretro.h	/^typedef void (*retro_hw_context_reset_t)(void);$/;"	t
retro_hw_context_type	libretro.h	/^enum retro_hw_context_type$/;"	g
retro_hw_get_current_framebuffer_t	libretro.h	/^typedef uintptr_t (*retro_hw_get_current_framebuffer_t)(void);$/;"	t
retro_hw_get_proc_address_t	libretro.h	/^typedef retro_proc_address_t (*retro_hw_get_proc_address_t)(const char *sym);$/;"	t
retro_hw_render_callback	libretro.h	/^struct retro_hw_render_callback$/;"	s
retro_hw_render_callback::bottom_left_origin	libretro.h	/^   bool bottom_left_origin; \/\/ Use conventional bottom-left origin convention. Is false, standard libretro top-left origin semantics are used.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::cache_context	libretro.h	/^   bool cache_context; \/\/ If this is true, the frontend will go very far to avoid resetting context in scenarios like toggling fullscreen, etc.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::context_destroy	libretro.h	/^   retro_hw_context_reset_t context_destroy; \/\/ A callback to be called before the context is destroyed. Resources can be deinitialized at this step. This can be set to NULL, in which resources will just be destroyed without any notification.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::context_reset	libretro.h	/^   retro_hw_context_reset_t context_reset; \/\/ Called when a context has been created or when it has been reset.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::context_type	libretro.h	/^   enum retro_hw_context_type context_type; \/\/ Which API to use. Set by libretro core.$/;"	m	struct:retro_hw_render_callback	typeref:enum:retro_hw_render_callback::retro_hw_context_type	access:public
retro_hw_render_callback::debug_context	libretro.h	/^   bool debug_context; \/\/ Creates a debug context.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::depth	libretro.h	/^   bool depth; \/\/ Set if render buffers should have depth component attached.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::get_current_framebuffer	libretro.h	/^   retro_hw_get_current_framebuffer_t get_current_framebuffer; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::get_proc_address	libretro.h	/^   retro_hw_get_proc_address_t get_proc_address; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::stencil	libretro.h	/^   bool stencil; \/\/ Set if stencil buffers should be attached.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::version_major	libretro.h	/^   unsigned version_major; \/\/ Major version number for core GL context.$/;"	m	struct:retro_hw_render_callback	access:public
retro_hw_render_callback::version_minor	libretro.h	/^   unsigned version_minor; \/\/ Minor version number for core GL context.$/;"	m	struct:retro_hw_render_callback	access:public
retro_init	libretro-test-gl/libretro-test.c	/^void retro_init(void)$/;"	f	signature:(void)
retro_init	libretro-test/libretro-test.c	/^void retro_init(void)$/;"	f	signature:(void)
retro_init	libretro.h	/^void retro_init(void);$/;"	p	signature:(void)
retro_input_descriptor	libretro.h	/^struct retro_input_descriptor$/;"	s
retro_input_descriptor::description	libretro.h	/^   const char *description; \/\/ Human readable description for parameters.$/;"	m	struct:retro_input_descriptor	access:public
retro_input_descriptor::device	libretro.h	/^   unsigned device;$/;"	m	struct:retro_input_descriptor	access:public
retro_input_descriptor::id	libretro.h	/^   unsigned id;$/;"	m	struct:retro_input_descriptor	access:public
retro_input_descriptor::index	libretro.h	/^   unsigned index;$/;"	m	struct:retro_input_descriptor	access:public
retro_input_descriptor::port	libretro.h	/^   unsigned port;$/;"	m	struct:retro_input_descriptor	access:public
retro_input_poll_t	libretro.h	/^typedef void (*retro_input_poll_t)(void);$/;"	t
retro_input_state_t	libretro.h	/^typedef int16_t (*retro_input_state_t)(unsigned port, unsigned device, unsigned index, unsigned id);$/;"	t
retro_key	input/input_common.h	/^   unsigned retro_key;$/;"	m	struct:input_bind_map	access:public
retro_key	libretro.h	/^enum retro_key$/;"	g
retro_keybind	driver.h	/^struct retro_keybind$/;"	s
retro_keybind::def_joykey	driver.h	/^   uint64_t def_joykey;$/;"	m	struct:retro_keybind	access:public
retro_keybind::desc	driver.h	/^   const char *desc;$/;"	m	struct:retro_keybind	access:public
retro_keybind::id	driver.h	/^   unsigned id;$/;"	m	struct:retro_keybind	access:public
retro_keybind::joyaxis	driver.h	/^   uint32_t joyaxis;$/;"	m	struct:retro_keybind	access:public
retro_keybind::joykey	driver.h	/^   uint64_t joykey;$/;"	m	struct:retro_keybind	access:public
retro_keybind::key	driver.h	/^   enum retro_key key;$/;"	m	struct:retro_keybind	typeref:enum:retro_keybind::retro_key	access:public
retro_keybind::valid	driver.h	/^   bool valid;$/;"	m	struct:retro_keybind	access:public
retro_keybinds_1	config.def.h	/^static const struct retro_keybind retro_keybinds_1[] = {$/;"	v	typeref:struct:retro_keybind
retro_keybinds_menu	config.def.h	/^static const struct retro_keybind retro_keybinds_menu[] = {$/;"	v	typeref:struct:retro_keybind
retro_keybinds_rest	config.def.h	/^static const struct retro_keybind retro_keybinds_rest[] = {$/;"	v	typeref:struct:retro_keybind
retro_keyboard_callback	libretro.h	/^struct retro_keyboard_callback$/;"	s
retro_keyboard_callback::callback	libretro.h	/^   retro_keyboard_event_t callback;$/;"	m	struct:retro_keyboard_callback	access:public
retro_keyboard_event_t	libretro.h	/^typedef void (*retro_keyboard_event_t)(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers);$/;"	t
retro_load_game	libretro-test-gl/libretro-test.c	/^bool retro_load_game(const struct retro_game_info *info)$/;"	f	signature:(const struct retro_game_info *info)
retro_load_game	libretro-test/libretro-test.c	/^bool retro_load_game(const struct retro_game_info *info)$/;"	f	signature:(const struct retro_game_info *info)
retro_load_game	libretro.h	/^bool retro_load_game(const struct retro_game_info *game);$/;"	p	signature:(const struct retro_game_info *game)
retro_load_game_special	libretro-test-gl/libretro-test.c	/^bool retro_load_game_special(unsigned type, const struct retro_game_info *info, size_t num)$/;"	f	signature:(unsigned type, const struct retro_game_info *info, size_t num)
retro_load_game_special	libretro-test/libretro-test.c	/^bool retro_load_game_special(unsigned type, const struct retro_game_info *info, size_t num)$/;"	f	signature:(unsigned type, const struct retro_game_info *info, size_t num)
retro_load_game_special	libretro.h	/^bool retro_load_game_special($/;"	p	signature:( unsigned game_type, const struct retro_game_info *info, size_t num_info )
retro_location_callback	libretro.h	/^struct retro_location_callback$/;"	s
retro_location_callback::deinitialized	libretro.h	/^   retro_location_lifetime_status_t deinitialized;$/;"	m	struct:retro_location_callback	access:public
retro_location_callback::get_position	libretro.h	/^   retro_location_get_position_t  get_position;$/;"	m	struct:retro_location_callback	access:public
retro_location_callback::initialized	libretro.h	/^   retro_location_lifetime_status_t initialized;$/;"	m	struct:retro_location_callback	access:public
retro_location_callback::set_interval	libretro.h	/^   retro_location_set_interval_t  set_interval; $/;"	m	struct:retro_location_callback	access:public
retro_location_callback::start	libretro.h	/^   retro_location_start_t         start;$/;"	m	struct:retro_location_callback	access:public
retro_location_callback::stop	libretro.h	/^   retro_location_stop_t          stop;$/;"	m	struct:retro_location_callback	access:public
retro_location_get_position_t	libretro.h	/^typedef bool (*retro_location_get_position_t)(double *lat, double *lon, double *horiz_accuracy,$/;"	t
retro_location_lifetime_status_t	libretro.h	/^typedef void (*retro_location_lifetime_status_t)(void);$/;"	t
retro_location_set_interval_t	libretro.h	/^typedef void (*retro_location_set_interval_t)(unsigned interval_ms, unsigned interval_distance);$/;"	t
retro_location_start_t	libretro.h	/^typedef bool (*retro_location_start_t)(void);$/;"	t
retro_location_stop_t	libretro.h	/^typedef void (*retro_location_stop_t)(void);$/;"	t
retro_log_callback	libretro.h	/^struct retro_log_callback$/;"	s
retro_log_callback::log	libretro.h	/^   retro_log_printf_t log;$/;"	m	struct:retro_log_callback	access:public
retro_log_level	libretro.h	/^enum retro_log_level$/;"	g
retro_log_printf_t	libretro.h	/^typedef void (*retro_log_printf_t)(enum retro_log_level level, const char *fmt, ...);$/;"	t
retro_message	libretro.h	/^struct retro_message$/;"	s
retro_message::frames	libretro.h	/^   unsigned    frames;     \/\/ Duration in frames of message.$/;"	m	struct:retro_message	access:public
retro_message::msg	libretro.h	/^   const char *msg;        \/\/ Message to be displayed.$/;"	m	struct:retro_message	access:public
retro_mod	libretro.h	/^enum retro_mod$/;"	g
retro_perf_callback	libretro.h	/^struct retro_perf_callback$/;"	s
retro_perf_callback::get_cpu_features	libretro.h	/^   retro_get_cpu_features_t      get_cpu_features;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::get_perf_counter	libretro.h	/^   retro_perf_get_counter_t      get_perf_counter;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::get_time_usec	libretro.h	/^   retro_perf_get_time_usec_t    get_time_usec;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::perf_log	libretro.h	/^   retro_perf_log_t              perf_log;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::perf_register	libretro.h	/^   retro_perf_register_t         perf_register;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::perf_start	libretro.h	/^   retro_perf_start_t            perf_start;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_callback::perf_stop	libretro.h	/^   retro_perf_stop_t             perf_stop;$/;"	m	struct:retro_perf_callback	access:public
retro_perf_clear	performance.c	/^void retro_perf_clear(void)$/;"	f	signature:(void)
retro_perf_clear	performance.h	/^void retro_perf_clear(void);$/;"	p	signature:(void)
retro_perf_counter	libretro.h	/^struct retro_perf_counter$/;"	s
retro_perf_counter::call_cnt	libretro.h	/^   retro_perf_tick_t call_cnt;$/;"	m	struct:retro_perf_counter	access:public
retro_perf_counter::ident	libretro.h	/^   const char *ident;$/;"	m	struct:retro_perf_counter	access:public
retro_perf_counter::registered	libretro.h	/^   bool registered;$/;"	m	struct:retro_perf_counter	access:public
retro_perf_counter::start	libretro.h	/^   retro_perf_tick_t start;$/;"	m	struct:retro_perf_counter	access:public
retro_perf_counter::total	libretro.h	/^   retro_perf_tick_t total;$/;"	m	struct:retro_perf_counter	access:public
retro_perf_get_counter_t	libretro.h	/^typedef retro_perf_tick_t (*retro_perf_get_counter_t)(void);$/;"	t
retro_perf_get_time_usec_t	libretro.h	/^typedef retro_time_t (*retro_perf_get_time_usec_t)(void);$/;"	t
retro_perf_log	performance.c	/^void retro_perf_log(void)$/;"	f	signature:(void)
retro_perf_log	performance.h	/^void retro_perf_log(void);$/;"	p	signature:(void)
retro_perf_log_t	libretro.h	/^typedef void (*retro_perf_log_t)(void);$/;"	t
retro_perf_register	performance.c	/^void retro_perf_register(struct retro_perf_counter *perf)$/;"	f	signature:(struct retro_perf_counter *perf)
retro_perf_register	performance.h	/^void retro_perf_register(struct retro_perf_counter *perf); \/\/ Same as rarch_perf_register, just for libretro cores.$/;"	p	signature:(struct retro_perf_counter *perf)
retro_perf_register_t	libretro.h	/^typedef void (*retro_perf_register_t)(struct retro_perf_counter *counter);$/;"	t
retro_perf_start_t	libretro.h	/^typedef void (*retro_perf_start_t)(struct retro_perf_counter *counter);$/;"	t
retro_perf_stop_t	libretro.h	/^typedef void (*retro_perf_stop_t)(struct retro_perf_counter *counter);$/;"	t
retro_perf_tick_t	libretro.h	/^typedef uint64_t retro_perf_tick_t;$/;"	t
retro_pixel_format	libretro.h	/^enum retro_pixel_format$/;"	g
retro_proc_address_t	libretro.h	/^typedef void (*retro_proc_address_t)(void);$/;"	t
retro_replace_image_index_t	libretro.h	/^typedef bool (*retro_replace_image_index_t)(unsigned index, const struct retro_game_info *info);$/;"	t
retro_reset	libretro-test-gl/libretro-test.c	/^void retro_reset(void)$/;"	f	signature:(void)
retro_reset	libretro-test/libretro-test.c	/^void retro_reset(void)$/;"	f	signature:(void)
retro_reset	libretro.h	/^void retro_reset(void);$/;"	p	signature:(void)
retro_rumble_effect	libretro.h	/^enum retro_rumble_effect$/;"	g
retro_rumble_interface	libretro.h	/^struct retro_rumble_interface$/;"	s
retro_rumble_interface::set_rumble_state	libretro.h	/^   retro_set_rumble_state_t set_rumble_state;$/;"	m	struct:retro_rumble_interface	access:public
retro_run	libretro-test-gl/libretro-test.c	/^void retro_run(void)$/;"	f	signature:(void)
retro_run	libretro-test/libretro-test.c	/^void retro_run(void)$/;"	f	signature:(void)
retro_run	libretro.h	/^void retro_run(void);$/;"	p	signature:(void)
retro_sensor_action	libretro.h	/^enum retro_sensor_action$/;"	g
retro_sensor_interface	libretro.h	/^struct retro_sensor_interface$/;"	s
retro_sensor_interface::set_sensor_state	libretro.h	/^   retro_set_sensor_state_t set_sensor_state;$/;"	m	struct:retro_sensor_interface	access:public
retro_serialize	libretro-test-gl/libretro-test.c	/^bool retro_serialize(void *data, size_t size)$/;"	f	signature:(void *data, size_t size)
retro_serialize	libretro-test/libretro-test.c	/^bool retro_serialize(void *data_, size_t size)$/;"	f	signature:(void *data_, size_t size)
retro_serialize	libretro.h	/^bool retro_serialize(void *data, size_t size);$/;"	p	signature:(void *data, size_t size)
retro_serialize_size	libretro-test-gl/libretro-test.c	/^size_t retro_serialize_size(void)$/;"	f	signature:(void)
retro_serialize_size	libretro-test/libretro-test.c	/^size_t retro_serialize_size(void)$/;"	f	signature:(void)
retro_serialize_size	libretro.h	/^size_t retro_serialize_size(void);$/;"	p	signature:(void)
retro_set_audio_sample	libretro-test-gl/libretro-test.c	/^void retro_set_audio_sample(retro_audio_sample_t cb)$/;"	f	signature:(retro_audio_sample_t cb)
retro_set_audio_sample	libretro-test/libretro-test.c	/^void retro_set_audio_sample(retro_audio_sample_t cb)$/;"	f	signature:(retro_audio_sample_t cb)
retro_set_audio_sample	libretro.h	/^void retro_set_audio_sample(retro_audio_sample_t);$/;"	p	signature:(retro_audio_sample_t)
retro_set_audio_sample_batch	libretro-test-gl/libretro-test.c	/^void retro_set_audio_sample_batch(retro_audio_sample_batch_t cb)$/;"	f	signature:(retro_audio_sample_batch_t cb)
retro_set_audio_sample_batch	libretro-test/libretro-test.c	/^void retro_set_audio_sample_batch(retro_audio_sample_batch_t cb)$/;"	f	signature:(retro_audio_sample_batch_t cb)
retro_set_audio_sample_batch	libretro.h	/^void retro_set_audio_sample_batch(retro_audio_sample_batch_t);$/;"	p	signature:(retro_audio_sample_batch_t)
retro_set_controller_port_device	libretro-test-gl/libretro-test.c	/^void retro_set_controller_port_device(unsigned port, unsigned device)$/;"	f	signature:(unsigned port, unsigned device)
retro_set_controller_port_device	libretro-test/libretro-test.c	/^void retro_set_controller_port_device(unsigned port, unsigned device)$/;"	f	signature:(unsigned port, unsigned device)
retro_set_controller_port_device	libretro.h	/^void retro_set_controller_port_device(unsigned port, unsigned device);$/;"	p	signature:(unsigned port, unsigned device)
retro_set_eject_state_t	libretro.h	/^typedef bool (*retro_set_eject_state_t)(bool ejected);$/;"	t
retro_set_environment	libretro-test-gl/libretro-test.c	/^void retro_set_environment(retro_environment_t cb)$/;"	f	signature:(retro_environment_t cb)
retro_set_environment	libretro-test/libretro-test.c	/^void retro_set_environment(retro_environment_t cb)$/;"	f	signature:(retro_environment_t cb)
retro_set_environment	libretro.h	/^void retro_set_environment(retro_environment_t);$/;"	p	signature:(retro_environment_t)
retro_set_image_index_t	libretro.h	/^typedef bool (*retro_set_image_index_t)(unsigned index);$/;"	t
retro_set_input_poll	libretro-test-gl/libretro-test.c	/^void retro_set_input_poll(retro_input_poll_t cb)$/;"	f	signature:(retro_input_poll_t cb)
retro_set_input_poll	libretro-test/libretro-test.c	/^void retro_set_input_poll(retro_input_poll_t cb)$/;"	f	signature:(retro_input_poll_t cb)
retro_set_input_poll	libretro.h	/^void retro_set_input_poll(retro_input_poll_t);$/;"	p	signature:(retro_input_poll_t)
retro_set_input_state	libretro-test-gl/libretro-test.c	/^void retro_set_input_state(retro_input_state_t cb)$/;"	f	signature:(retro_input_state_t cb)
retro_set_input_state	libretro-test/libretro-test.c	/^void retro_set_input_state(retro_input_state_t cb)$/;"	f	signature:(retro_input_state_t cb)
retro_set_input_state	libretro.h	/^void retro_set_input_state(retro_input_state_t);$/;"	p	signature:(retro_input_state_t)
retro_set_rumble_state_t	libretro.h	/^typedef bool (*retro_set_rumble_state_t)(unsigned port, enum retro_rumble_effect effect, uint16_t strength);$/;"	t
retro_set_sensor_state_t	libretro.h	/^typedef bool (*retro_set_sensor_state_t)(unsigned port, enum retro_sensor_action action, unsigned rate);$/;"	t
retro_set_video_refresh	libretro-test-gl/libretro-test.c	/^void retro_set_video_refresh(retro_video_refresh_t cb)$/;"	f	signature:(retro_video_refresh_t cb)
retro_set_video_refresh	libretro-test/libretro-test.c	/^void retro_set_video_refresh(retro_video_refresh_t cb)$/;"	f	signature:(retro_video_refresh_t cb)
retro_set_video_refresh	libretro.h	/^void retro_set_video_refresh(retro_video_refresh_t);$/;"	p	signature:(retro_video_refresh_t)
retro_system_av_info	libretro.h	/^struct retro_system_av_info$/;"	s
retro_system_av_info::geometry	libretro.h	/^   struct retro_game_geometry geometry;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_game_geometry	access:public
retro_system_av_info::timing	libretro.h	/^   struct retro_system_timing timing;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_system_timing	access:public
retro_system_info	libretro.h	/^struct retro_system_info$/;"	s
retro_system_info::block_extract	libretro.h	/^   bool        block_extract;     \/\/ If true, the frontend is not allowed to extract any archives before loading the real ROM.$/;"	m	struct:retro_system_info	access:public
retro_system_info::library_name	libretro.h	/^   const char *library_name;      \/\/ Descriptive name of library. Should not contain any version numbers, etc.$/;"	m	struct:retro_system_info	access:public
retro_system_info::library_version	libretro.h	/^   const char *library_version;   \/\/ Descriptive version of core.$/;"	m	struct:retro_system_info	access:public
retro_system_info::need_fullpath	libretro.h	/^   bool        need_fullpath;     \/\/ If true, retro_load_game() is guaranteed to provide a valid pathname in retro_game_info::path.$/;"	m	struct:retro_system_info	access:public
retro_system_info::valid_extensions	libretro.h	/^   const char *valid_extensions;  \/\/ A string listing probably rom extensions the core will be able to load, separated with pipe.$/;"	m	struct:retro_system_info	access:public
retro_system_timing	libretro.h	/^struct retro_system_timing$/;"	s
retro_system_timing::fps	libretro.h	/^   double fps;             \/\/ FPS of video content.$/;"	m	struct:retro_system_timing	access:public
retro_system_timing::sample_rate	libretro.h	/^   double sample_rate;     \/\/ Sampling rate of audio.$/;"	m	struct:retro_system_timing	access:public
retro_time_t	libretro.h	/^typedef int64_t retro_time_t;$/;"	t
retro_unload_game	libretro-test-gl/libretro-test.c	/^void retro_unload_game(void)$/;"	f	signature:(void)
retro_unload_game	libretro-test/libretro-test.c	/^void retro_unload_game(void)$/;"	f	signature:(void)
retro_unload_game	libretro.h	/^void retro_unload_game(void);$/;"	p	signature:(void)
retro_unserialize	libretro-test-gl/libretro-test.c	/^bool retro_unserialize(const void *data, size_t size)$/;"	f	signature:(const void *data, size_t size)
retro_unserialize	libretro-test/libretro-test.c	/^bool retro_unserialize(const void *data_, size_t size)$/;"	f	signature:(const void *data_, size_t size)
retro_unserialize	libretro.h	/^bool retro_unserialize(const void *data, size_t size);$/;"	p	signature:(const void *data, size_t size)
retro_usec_t	libretro.h	/^typedef int64_t retro_usec_t;$/;"	t
retro_variable	libretro.h	/^struct retro_variable$/;"	s
retro_variable::key	libretro.h	/^   const char *key;        \/\/ Variable to query in RETRO_ENVIRONMENT_GET_VARIABLE.$/;"	m	struct:retro_variable	access:public
retro_variable::value	libretro.h	/^   const char *value;      \/\/ Value to be obtained. If key does not exist, it is set to NULL.$/;"	m	struct:retro_variable	access:public
retro_video_refresh_t	libretro.h	/^typedef void (*retro_video_refresh_t)(const void *data, unsigned width, unsigned height, size_t pitch);$/;"	t
returnBackStackImmediate	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private boolean returnBackStackImmediate(FragmentManager fm)$/;"	m	class:CoreManagerActivity	file:	access:private	signature:(FragmentManager fm)
return_negative	frontend/frontend.c	113;"	d	file:
return_negative	frontend/frontend.c	128;"	d	file:
return_negative	frontend/frontend.c	143;"	d	file:
return_negative	frontend/frontend.c	98;"	d	file:
return_var	frontend/frontend.c	114;"	d	file:
return_var	frontend/frontend.c	129;"	d	file:
return_var	frontend/frontend.c	144;"	d	file:
return_var	frontend/frontend.c	99;"	d	file:
returnfunc	frontend/frontend.c	111;"	d	file:
returnfunc	frontend/frontend.c	126;"	d	file:
returnfunc	frontend/frontend.c	141;"	d	file:
returnfunc	frontend/frontend.c	96;"	d	file:
returnfunc_oneshot	frontend/frontend.c	112;"	d	file:
returnfunc_oneshot	frontend/frontend.c	127;"	d	file:
returnfunc_oneshot	frontend/frontend.c	142;"	d	file:
returnfunc_oneshot	frontend/frontend.c	97;"	d	file:
returntype	frontend/frontend.c	109;"	d	file:
returntype	frontend/frontend.c	124;"	d	file:
returntype	frontend/frontend.c	139;"	d	file:
returntype	frontend/frontend.c	94;"	d	file:
revalidate	ps3/rgl/include/RGL/Types.h	/^      GLuint revalidate;$/;"	m	struct:__anon63	access:public
revision	ps3/rgl/src/cg/nvbi.hpp	/^               revision() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
revision	ps3/rgl/src/cg/nvbiimpl.hpp	/^               revision() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
revision	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::revision() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
rewind_buf	general.h	/^      int16_t *rewind_buf;$/;"	m	struct:global::__anon235	access:public
rewind_buffer_size	config.def.h	/^static const unsigned rewind_buffer_size = 20 << 20; \/\/ 20MiB$/;"	v
rewind_buffer_size	general.h	/^   size_t rewind_buffer_size;$/;"	m	struct:settings	access:public
rewind_enable	config.def.h	/^static const bool rewind_enable = false;$/;"	v
rewind_enable	general.h	/^   bool rewind_enable;$/;"	m	struct:settings	access:public
rewind_granularity	config.def.h	/^static const unsigned rewind_granularity = 1;$/;"	v
rewind_granularity	general.h	/^   unsigned rewind_granularity;$/;"	m	struct:settings	access:public
rewind_ptr	general.h	/^      size_t rewind_ptr;$/;"	m	struct:global::__anon235	access:public
rewind_size	general.h	/^      size_t rewind_size;$/;"	m	struct:global::__anon235	access:public
rgb32	driver.h	/^   bool rgb32; \/\/ Use 32-bit RGBA rather than native XBGR1555.$/;"	m	struct:video_info	access:public
rgb32	gfx/thread_wrapper.c	/^      bool rgb32;$/;"	m	struct:thread_video::__anon214	file:	access:public
rgb32	gx/gx_video.h	/^   bool rgb32;$/;"	m	struct:gx_video	access:public
rgb32	psp1/psp1_video.c	/^   bool rgb32;$/;"	m	struct:psp1_video	file:	access:public
rglAdvanceParameter	ps3/rgl/src/rgl_ps3_cg.cpp	/^static CGparameter rglAdvanceParameter( CGparameter param, int distance )$/;"	f	file:	signature:( CGparameter param, int distance )
rglAllocateTexture	ps3/rgl/src/rgl_ps3.cpp	/^static rglTexture *rglAllocateTexture(void)$/;"	f	file:	signature:(void)
rglAttribute	ps3/rgl/include/RGL/Types.h	/^   } ALIGN16 rglAttribute;$/;"	t	typeref:struct:__anon68
rglAttributeState	ps3/rgl/include/RGL/Types.h	/^   } ALIGN16 rglAttributeState;$/;"	t	typeref:struct:__anon69
rglBindTextureInternal	ps3/rgl/include/RGL/private.h	/^RGL_EXPORT void rglBindTextureInternal (void *data, GLuint name, GLenum target);$/;"	p	signature:(void *data, GLuint name, GLenum target)
rglBindTextureInternal	ps3/rgl/src/rgl_ps3.cpp	/^void rglBindTextureInternal (void *data, GLuint name, GLenum target )$/;"	f	signature:(void *data, GLuint name, GLenum target )
rglBufferObject	ps3/rgl/include/RGL/Types.h	/^   struct rglBufferObject$/;"	s
rglBufferObject	ps3/rgl/include/RGL/Types.h	/^   typedef struct rglBufferObject rglBufferObject;$/;"	t	typeref:struct:rglBufferObject
rglBufferObject::height	ps3/rgl/include/RGL/Types.h	/^      GLuint height;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::internalFormat	ps3/rgl/include/RGL/Types.h	/^      GLenum internalFormat;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::mapped	ps3/rgl/include/RGL/Types.h	/^      GLboolean mapped;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::platformBufferObject	ps3/rgl/include/RGL/Types.h	/^      void *platformBufferObject[];$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::refCount	ps3/rgl/include/RGL/Types.h	/^      GLuint refCount;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::size	ps3/rgl/include/RGL/Types.h	/^      GLsizeiptr size;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::textureReferences	ps3/rgl/include/RGL/Types.h	/^      RGL::Vector<rglTexture *> textureReferences;$/;"	m	struct:rglBufferObject	access:public
rglBufferObject::width	ps3/rgl/include/RGL/Types.h	/^      GLuint width;$/;"	m	struct:rglBufferObject	access:public
rglCgContextPushFront	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgContextPushFront( _CGcontext* ctx )$/;"	f	signature:( _CGcontext* ctx )
rglCgCreateProgram	ps3/rgl/src/rgl_cg.h	/^extern CGprogram rglCgCreateProgram( CGcontext ctx, CGprofile profile, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues );$/;"	p	signature:( CGcontext ctx, CGprofile profile, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglCgCreateProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGprogram rglCgCreateProgram( CGcontext ctx, CGprofile profile, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )$/;"	f	signature:( CGcontext ctx, CGprofile profile, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglCgCreateProgramChecks	ps3/rgl/src/rgl_ps3_cg.cpp	/^bool rglCgCreateProgramChecks( CGcontext ctx, CGprofile profile, CGenum program_type )$/;"	f	signature:( CGcontext ctx, CGprofile profile, CGenum program_type )
rglCgCreateProgramGroup	ps3/rgl/include/Cg/CgProgramGroup.h	/^CGprogramGroup rglCgCreateProgramGroup( CGcontext ctx, const char *name, void *ptr, int size );$/;"	p	signature:( CGcontext ctx, const char *name, void *ptr, int size )
rglCgCreateProgramGroup	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGprogramGroup rglCgCreateProgramGroup( CGcontext ctx,  const char *name, void *ptr, int size )$/;"	f	signature:( CGcontext ctx, const char *name, void *ptr, int size )
rglCgCreateProgramGroupFromFile	ps3/rgl/src/rgl_ps3_cg.cpp	/^static CGprogramGroup rglCgCreateProgramGroupFromFile( CGcontext ctx, const char *group_file )$/;"	f	file:	signature:( CGcontext ctx, const char *group_file )
rglCgDestroyContextParam	ps3/rgl/include/Cg/CgCommon.h	/^extern void rglCgDestroyContextParam( CgRuntimeParameter* p );$/;"	p	signature:( CgRuntimeParameter* p )
rglCgDestroyContextParam	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgDestroyContextParam( CgRuntimeParameter* ptr )$/;"	f	signature:( CgRuntimeParameter* ptr )
rglCgDestroyProgramGroup	ps3/rgl/include/Cg/CgProgramGroup.h	/^void rglCgDestroyProgramGroup( CGprogramGroup group );$/;"	p	signature:( CGprogramGroup group )
rglCgDestroyProgramGroup	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgDestroyProgramGroup( CGprogramGroup group )$/;"	f	signature:( CGprogramGroup group )
rglCgGLTestParameter	ps3/rgl/include/Cg/CgCommon.h	/^inline static CgRuntimeParameter* rglCgGLTestParameter( CGparameter param )$/;"	f	signature:( CGparameter param )
rglCgGetProgram	ps3/rgl/include/Cg/CgProgramGroup.h	/^CGprogram rglCgGetProgram( CGprogramGroup group, const char *name );$/;"	p	signature:( CGprogramGroup group, const char *name )
rglCgGetProgramAtIndex	ps3/rgl/include/Cg/CgProgramGroup.h	/^CGprogram rglCgGetProgramAtIndex( CGprogramGroup group, unsigned int index );$/;"	p	signature:( CGprogramGroup group, unsigned int index )
rglCgGetProgramCount	ps3/rgl/include/Cg/CgProgramGroup.h	/^int rglCgGetProgramCount( CGprogramGroup group );$/;"	p	signature:( CGprogramGroup group )
rglCgGetProgramGroupName	ps3/rgl/include/Cg/CgProgramGroup.h	/^const char *rglCgGetProgramGroupName( CGprogramGroup group );$/;"	p	signature:( CGprogramGroup group )
rglCgGetProgramGroupName	ps3/rgl/src/rgl_ps3_cg.cpp	/^const char *rglCgGetProgramGroupName (CGprogramGroup group)$/;"	f	signature:(CGprogramGroup group)
rglCgGetProgramIndex	ps3/rgl/include/Cg/CgProgramGroup.h	/^int rglCgGetProgramIndex( CGprogramGroup group, const char *name );$/;"	p	signature:( CGprogramGroup group, const char *name )
rglCgGetProgramIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^int rglCgGetProgramIndex (CGprogramGroup group, const char *name)$/;"	f	signature:(CGprogramGroup group, const char *name)
rglCgGetSamplerGLTypeFromCgType	ps3/rgl/include/Cg/CgCommon.h	/^static inline GLenum rglCgGetSamplerGLTypeFromCgType( CGtype type )$/;"	f	signature:( CGtype type )
rglCgProgramDestroyAll	ps3/rgl/include/Cg/CgCommon.h	/^extern void rglCgProgramDestroyAll( _CGcontext* c );$/;"	p	signature:( _CGcontext* c )
rglCgProgramDestroyAll	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgProgramDestroyAll( _CGcontext* ctx )$/;"	f	signature:( _CGcontext* ctx )
rglCgProgramErase	ps3/rgl/include/Cg/CgCommon.h	/^RGL_EXPORT void rglCgProgramErase( _CGprogram* prog );$/;"	p	signature:( _CGprogram* prog )
rglCgProgramErase	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgProgramErase( _CGprogram* prog )$/;"	f	signature:( _CGprogram* prog )
rglCgProgramEraseAfter	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgProgramEraseAfter( _CGprogram* prog )$/;"	f	signature:( _CGprogram* prog )
rglCgProgramEraseAndFree	ps3/rgl/src/rgl_ps3_cg.cpp	/^inline void rglCgProgramEraseAndFree( _CGprogram* prog )$/;"	f	signature:( _CGprogram* prog )
rglCgProgramFindPrev	ps3/rgl/src/rgl_ps3_cg.cpp	/^_CGprogram* rglCgProgramFindPrev( _CGcontext* ctx, _CGprogram* prog )$/;"	f	signature:( _CGcontext* ctx, _CGprogram* prog )
rglCgProgramPushFront	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgProgramPushFront( _CGcontext* ctx, _CGprogram* prog )$/;"	f	signature:( _CGcontext* ctx, _CGprogram* prog )
rglCgRaiseError	ps3/rgl/include/Cg/CgCommon.h	/^RGL_EXPORT void rglCgRaiseError( CGerror error );$/;"	p	signature:( CGerror error )
rglCgRaiseError	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglCgRaiseError( CGerror error )$/;"	f	signature:( CGerror error )
rglClampf	ps3/rgl/include/RGL/Utils.h	/^   static inline float rglClampf( const float value )$/;"	f	signature:( const float value )
rglColorRGBAf	ps3/rgl/include/RGL/Types.h	/^   } rglColorRGBAf;$/;"	t	typeref:struct:__anon59
rglContextCreate	ps3/rgl/include/RGL/private.h	/^extern RGLcontext*	rglContextCreate();$/;"	p	signature:()
rglContextCreateHook	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLcontextHookFunction rglContextCreateHook = NULL;$/;"	v
rglContextDestroyHook	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLcontextHookFunction rglContextDestroyHook = NULL;$/;"	v
rglContextFree	ps3/rgl/include/RGL/private.h	/^extern void		rglContextFree( RGLcontext* LContext );$/;"	p	signature:( RGLcontext* LContext )
rglCountFloatsInCgType	ps3/rgl/include/Cg/CgCommon.h	/^unsigned int rglCountFloatsInCgType( CGtype type );$/;"	p	signature:( CGtype type )
rglCountFloatsInCgType	ps3/rgl/src/rgl_ps3_cg.cpp	/^unsigned int rglCountFloatsInCgType( CGtype type )$/;"	f	signature:( CGtype type )
rglCreateBufferObject	ps3/rgl/src/rgl_ps3.cpp	/^static rglBufferObject *rglCreateBufferObject (void)$/;"	f	file:	signature:(void)
rglCreateFramebuffer	ps3/rgl/include/RGL/private.h	/^rglFramebuffer *rglCreateFramebuffer( void );$/;"	p	signature:( void )
rglCreateFramebuffer	ps3/rgl/src/rgl_ps3_raster.cpp	/^rglFramebuffer* rglCreateFramebuffer (void)$/;"	f	signature:(void)
rglCreateName	ps3/rgl/include/RGL/Utils.h	/^   RGL_EXPORT unsigned int rglCreateName (void *data, void* object);$/;"	p	signature:(void *data, void* object)
rglCreateName	ps3/rgl/src/rgl_ps3.cpp	/^unsigned int rglCreateName(void *data, void* object)$/;"	f	signature:(void *data, void* object)
rglCreatePushBuffer	ps3/rgl/src/include/rgl-externs.h	/^void rglCreatePushBuffer (void *data);$/;"	p	signature:(void *data)
rglCreatePushBuffer	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglCreatePushBuffer(void *data)$/;"	f	signature:(void *data)
rglDeallocateBuffer	ps3/rgl/src/include/rgl-inline.h	122;"	d
rglDestroyFramebuffer	ps3/rgl/include/RGL/private.h	/^void rglDestroyFramebuffer (void *data);$/;"	p	signature:(void *data)
rglDestroyFramebuffer	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglDestroyFramebuffer (void *data)$/;"	f	signature:(void *data)
rglDetachContext	ps3/rgl/include/RGL/private.h	/^void rglDetachContext( RGLdevice *device, RGLcontext* context );$/;"	p	signature:( RGLdevice *device, RGLcontext* context )
rglDetectVideoMode	ps3/rgl/src/rgl_ps3.cpp	/^const VideoMode *rglDetectVideoMode(void)$/;"	f	signature:(void)
rglDeviceExit	ps3/rgl/include/RGL/private.h	/^extern void rglDeviceExit (void);$/;"	p	signature:(void)
rglDeviceExit	ps3/rgl/src/rgl_ps3.cpp	/^void rglDeviceExit(void)$/;"	f	signature:(void)
rglDeviceInit	ps3/rgl/include/RGL/private.h	/^extern void rglDeviceInit (void *data);$/;"	p	signature:(void *data)
rglDeviceInit	ps3/rgl/src/rgl_ps3.cpp	/^void rglDeviceInit (void *data)$/;"	f	signature:(void *data)
rglDisableVertexAttribArrayNV	ps3/rgl/include/RGL/private.h	/^void rglDisableVertexAttribArrayNV( GLuint index );$/;"	p	signature:( GLuint index )
rglDisableVertexAttribArrayNV	ps3/rgl/src/rgl_ps3.cpp	/^void rglDisableVertexAttribArrayNV (GLuint index)$/;"	f	signature:(GLuint index)
rglDisableVertexAttribArrayNVInline	ps3/rgl/src/include/rgl-inline.h	169;"	d
rglDrawParams	ps3/rgl/include/RGL/Types.h	/^   } rglDrawParams;$/;"	t	typeref:struct:__anon67
rglDumpFifo	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglDumpFifo (char *name);$/;"	p	file:	signature:(char *name)
rglDuringDestroyDevice	ps3/rgl/src/rgl_ps3.cpp	/^static GLboolean rglDuringDestroyDevice = GL_FALSE;$/;"	v	file:
rglELEMENTS_IN_MATRIX	ps3/rgl/include/RGL/Types.h	320;"	d
rglEnableVertexAttribArrayNV	ps3/rgl/include/RGL/private.h	/^void rglEnableVertexAttribArrayNV( GLuint index );$/;"	p	signature:( GLuint index )
rglEnableVertexAttribArrayNV	ps3/rgl/src/rgl_ps3.cpp	/^void rglEnableVertexAttribArrayNV (GLuint index)$/;"	f	signature:(GLuint index)
rglEnableVertexAttribArrayNVInline	ps3/rgl/src/include/rgl-inline.h	173;"	d
rglEraseName	ps3/rgl/include/RGL/Utils.h	/^   RGL_EXPORT void rglEraseName (void *data, unsigned int name);$/;"	p	signature:(void *data, unsigned int name)
rglEraseName	ps3/rgl/src/rgl_ps3.cpp	/^void rglEraseName(void *data, unsigned int name )$/;"	f	signature:(void *data, unsigned int name )
rglExtensionsString	ps3/rgl/src/rgl_ps3.cpp	/^static char* rglExtensionsString = "GL_ARB_texture_float";$/;"	v	file:
rglFenceObject	ps3/rgl/include/RGL/Types.h	/^   } rglFenceObject;$/;"	t	typeref:struct:__anon64
rglFixedToFloat	ps3/rgl/include/RGL/TypeUtils.h	82;"	d
rglFlipCallbackFunction	ps3/rgl/src/rgl_ps3.cpp	/^static void rglFlipCallbackFunction(const uint32_t head)$/;"	f	file:	signature:(const uint32_t head)
rglFloatFrom_GL_FLOAT	ps3/rgl/src/rgl_ps3.cpp	3392;"	d	file:
rglFloatFrom_GL_HALF_FLOAT_ARB	ps3/rgl/src/rgl_ps3.cpp	3394;"	d	file:
rglFloatToFixed	ps3/rgl/include/RGL/TypeUtils.h	83;"	d
rglFloatToHalf	ps3/rgl/include/RGL/TypeUtils.h	/^static inline GLhalfARB rglFloatToHalf( float v )$/;"	f	signature:( float v )
rglFloatTo_GL_FLOAT	ps3/rgl/src/rgl_ps3.cpp	3391;"	d	file:
rglFloatTo_GL_HALF_FLOAT_ARB	ps3/rgl/src/rgl_ps3.cpp	3393;"	d	file:
rglFramebuffer	ps3/rgl/include/RGL/Types.h	/^   rglFramebuffer(): needValidate( GL_TRUE )$/;"	f	struct:rglFramebuffer	access:public	signature:()
rglFramebuffer	ps3/rgl/include/RGL/Types.h	/^struct rglFramebuffer$/;"	s
rglFramebuffer::color	ps3/rgl/include/RGL/Types.h	/^   rglFramebufferAttachment color[RGL_MAX_COLOR_ATTACHMENTS];$/;"	m	struct:rglFramebuffer	access:public
rglFramebuffer::needValidate	ps3/rgl/include/RGL/Types.h	/^   GLboolean needValidate;$/;"	m	struct:rglFramebuffer	access:public
rglFramebuffer::rglFramebuffer	ps3/rgl/include/RGL/Types.h	/^   rglFramebuffer(): needValidate( GL_TRUE )$/;"	f	struct:rglFramebuffer	access:public	signature:()
rglFramebuffer::~rglFramebuffer	ps3/rgl/include/RGL/Types.h	/^   virtual ~rglFramebuffer()$/;"	f	struct:rglFramebuffer	access:public	signature:()
rglFramebufferAttachment	ps3/rgl/include/RGL/Types.h	/^   rglFramebufferAttachment(): type( GL_NONE ), name( 0 ), textureTarget( GL_NONE )$/;"	f	struct:rglFramebufferAttachment	access:public	signature:()
rglFramebufferAttachment	ps3/rgl/include/RGL/Types.h	/^struct rglFramebufferAttachment$/;"	s
rglFramebufferAttachment::name	ps3/rgl/include/RGL/Types.h	/^   GLuint name;$/;"	m	struct:rglFramebufferAttachment	access:public
rglFramebufferAttachment::rglFramebufferAttachment	ps3/rgl/include/RGL/Types.h	/^   rglFramebufferAttachment(): type( GL_NONE ), name( 0 ), textureTarget( GL_NONE )$/;"	f	struct:rglFramebufferAttachment	access:public	signature:()
rglFramebufferAttachment::textureTarget	ps3/rgl/include/RGL/Types.h	/^   GLenum textureTarget;$/;"	m	struct:rglFramebufferAttachment	access:public
rglFramebufferAttachment::type	ps3/rgl/include/RGL/Types.h	/^   GLenum type;	\/\/ renderbuffer or texture$/;"	m	struct:rglFramebufferAttachment	access:public
rglFramebufferGetAttachment	ps3/rgl/src/rgl_ps3.cpp	/^rglFramebufferAttachment* rglFramebufferGetAttachment(void *data, GLenum attachment)$/;"	f	signature:(void *data, GLenum attachment)
rglFramebufferGetAttachmentTexture	ps3/rgl/include/RGL/private.h	/^void rglFramebufferGetAttachmentTexture( RGLcontext* LContext, const rglFramebufferAttachment* attachment, rglTexture** texture, GLuint* face );$/;"	p	signature:( RGLcontext* LContext, const rglFramebufferAttachment* attachment, rglTexture** texture, GLuint* face )
rglFramebufferGetAttachmentTexture	ps3/rgl/src/rgl_ps3.cpp	/^void rglFramebufferGetAttachmentTexture($/;"	f	signature:( RGLcontext* LContext, const rglFramebufferAttachment* attachment, rglTexture** texture, GLuint* face )
rglFreeBufferObject	ps3/rgl/src/rgl_ps3.cpp	/^static void rglFreeBufferObject (void *data)$/;"	f	file:	signature:(void *data)
rglFreeNameSpace	ps3/rgl/src/rgl_ps3.cpp	/^static void rglFreeNameSpace(void *data)$/;"	f	file:	signature:(void *data)
rglFreeTexture	ps3/rgl/src/rgl_ps3.cpp	/^static void rglFreeTexture (void *data)$/;"	f	file:	signature:(void *data)
rglGcmAllocCreateRegion	ps3/rgl/src/rgl_ps3.cpp	/^GLuint rglGcmAllocCreateRegion($/;"	f	signature:( GLuint size, GLint tag, void* data )
rglGcmAllocDestroy	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmAllocDestroy()$/;"	f	signature:()
rglGcmAllocateColorSurface	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglGcmAllocateColorSurface($/;"	f	signature:( GLuint width, GLuint height, GLuint bitsPerPixel, GLuint scanoutSupported, GLuint antiAliasing, GLuint *id, GLuint *pitchAllocated, GLuint *bytesAllocated )
rglGcmAllocateTiledSurface	ps3/rgl/src/rgl_ps3.cpp	/^static void rglGcmAllocateTiledSurface($/;"	f	file:	signature:( rglTiledMemoryManager* mm, GLuint width, GLuint height, GLuint bitsPerPixel, GLuint antiAliasing, GLuint* id, GLuint* pitchAllocated, GLuint* bytesAllocated )
rglGcmBlendState	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmBlendState$/;"	s
rglGcmBlendState	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmBlendState rglGcmBlendState;$/;"	t	typeref:struct:rglGcmBlendState
rglGcmBlendState::a	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBlendState::alphaFunc	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint alphaFunc;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBlendState::alphaRef	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat alphaRef;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBlendState::b	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBlendState::g	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBlendState::r	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat r, g, b, a;$/;"	m	struct:rglGcmBlendState	access:public
rglGcmBufferObject	ps3/rgl/src/include/rgl-typedefs.h	/^rglGcmBufferObject;$/;"	t	typeref:struct:__anon55
rglGcmCachedState	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmCachedState$/;"	s
rglGcmCachedState	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmCachedState rglGcmCachedState;$/;"	t	typeref:struct:rglGcmCachedState
rglGcmCachedState::blend	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmBlendState blend;$/;"	m	struct:rglGcmCachedState	access:public
rglGcmCachedState::interpolant	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmInterpolantState interpolant;$/;"	m	struct:rglGcmCachedState	access:public
rglGcmCachedState::viewport	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmViewportState viewport;$/;"	m	struct:rglGcmCachedState	access:public
rglGcmControlDma	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmControlDma;$/;"	t	typeref:struct:__anon54
rglGcmDestroy	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmDestroy(void)$/;"	f	signature:(void)
rglGcmDestroyRM	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmDestroyRM( rglGcmResource* gcmResource )$/;"	f	signature:( rglGcmResource* gcmResource )
rglGcmDevice	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmDevice;$/;"	t	typeref:struct:__anon50
rglGcmDriver	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmDriver;$/;"	t	typeref:struct:rglGcmDriver_
rglGcmDriver_	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmDriver_$/;"	s
rglGcmDriver_::flushBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint flushBufferCount;	\/\/ # of mapped buffer objects in bounce buffer$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::fpLoadProgramId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fpLoadProgramId; \/\/ address of the currently bound fragment program$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::fpLoadProgramOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fpLoadProgramOffset;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::invalidateVertexCache	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean invalidateVertexCache;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::rtValid	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean rtValid;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::sharedFPConstantsId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint sharedFPConstantsId;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::sharedVPConstants	ps3/rgl/src/include/rgl-typedefs.h	/^   char *sharedVPConstants;$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::xSuperSampling	ps3/rgl/src/include/rgl-typedefs.h	/^   int xSuperSampling; \/\/ supersampling factor in X$/;"	m	struct:rglGcmDriver_	access:public
rglGcmDriver_::ySuperSampling	ps3/rgl/src/include/rgl-typedefs.h	/^   int ySuperSampling; \/\/ supersampling factor in Y$/;"	m	struct:rglGcmDriver_	access:public
rglGcmEnum	ps3/rgl/src/include/rgl-constants.h	/^typedef enum rglGcmEnum$/;"	g
rglGcmEnum	ps3/rgl/src/include/rgl-constants.h	/^} rglGcmEnum;$/;"	t	typeref:enum:rglGcmEnum
rglGcmFifo	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmFifo$/;"	s
rglGcmFifo::ctx	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmContextData ctx;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaControl	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmControlDma *dmaControl;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaPushBufferBegin	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferBegin;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaPushBufferEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferEnd;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaPushBufferGPU	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *dmaPushBufferGPU;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaPushBufferOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned long dmaPushBufferOffset;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::dmaPushBufferSizeInWords	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint dmaPushBufferSizeInWords;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::fifoBlockSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  fifoBlockSize;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::lastGetRead	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *lastGetRead;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::lastHWReferenceRead	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastHWReferenceRead;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::lastPutWritten	ps3/rgl/src/include/rgl-typedefs.h	/^   uint32_t *lastPutWritten;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::lastSWReferenceFlushed	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastSWReferenceFlushed;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::lastSWReferenceWritten	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint lastSWReferenceWritten;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifo::spuid	ps3/rgl/src/include/rgl-typedefs.h	/^   int spuid;$/;"	m	struct:rglGcmFifo	access:public
rglGcmFifoFinish	ps3/rgl/src/include/rgl-inline.h	415;"	d
rglGcmFifoFlush	ps3/rgl/src/include/rgl-inline.h	422;"	d
rglGcmFifoGlSetRenderTarget	ps3/rgl/src/include/rgl-externs.h	/^void rglGcmFifoGlSetRenderTarget (const void *args);$/;"	p	signature:(const void *args)
rglGcmFifoGlSetRenderTarget	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglGcmFifoGlSetRenderTarget (const void *data)$/;"	f	signature:(const void *data)
rglGcmFifoGlViewport	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmFifoGlViewport(void *data, GLclampf zNear, GLclampf zFar)$/;"	f	signature:(void *data, GLclampf zNear, GLclampf zFar)
rglGcmFifoInit	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmFifoInit (void *data, void *dmaControl, unsigned long dmaPushBufferOffset, uint32_t*dmaPushBuffer,$/;"	f	signature:(void *data, void *dmaControl, unsigned long dmaPushBufferOffset, uint32_t*dmaPushBuffer, GLuint dmaPushBufferSize )
rglGcmFifoPutReference	ps3/rgl/src/include/rgl-externs.h	/^GLuint rglGcmFifoPutReference (void *data);$/;"	p	signature:(void *data)
rglGcmFifoPutReference	ps3/rgl/src/rgl_ps3.cpp	/^GLuint rglGcmFifoPutReference (void *data)$/;"	f	signature:(void *data)
rglGcmFifoReadReference	ps3/rgl/src/include/rgl-inline.h	420;"	d
rglGcmFifoReferenceInUse	ps3/rgl/src/include/rgl-externs.h	/^GLboolean rglGcmFifoReferenceInUse (void *data, GLuint reference);$/;"	p	signature:(void *data, GLuint reference)
rglGcmFifoReferenceInUse	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglGcmFifoReferenceInUse (void *data, GLuint reference)$/;"	f	signature:(void *data, GLuint reference)
rglGcmFlush	ps3/rgl/src/include/rgl-inline.h	429;"	d
rglGcmFreeTiledSurface	ps3/rgl/src/include/rgl-externs.h	/^void rglGcmFreeTiledSurface (GLuint bufferId);$/;"	p	signature:(GLuint bufferId)
rglGcmFreeTiledSurface	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmFreeTiledSurface( GLuint bufferId )$/;"	f	signature:( GLuint bufferId )
rglGcmGenerateProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int rglGcmGenerateProgram (void *data, int profileIndex, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader,$/;"	f	file:	signature:(void *data, int profileIndex, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const CgParameterEntry *parameterEntries, const char *stringTable, const float *defaultValues )
rglGcmGetGraphicsClock	ps3/rgl/src/rgl_ps3.cpp	/^GLuint rglGcmGetGraphicsClock(void)$/;"	f	signature:(void)
rglGcmGetMemoryClock	ps3/rgl/src/rgl_ps3.cpp	/^GLuint rglGcmGetMemoryClock(void)$/;"	f	signature:(void)
rglGcmGetTileRegionInfo	ps3/rgl/src/include/rgl-externs.h	/^void rglGcmGetTileRegionInfo (void *data, GLuint *address, GLuint *size);$/;"	p	signature:(void *data, GLuint *address, GLuint *size)
rglGcmGetTileRegionInfo	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmGetTileRegionInfo( void* data, GLuint *address, GLuint *size )$/;"	f	signature:( void* data, GLuint *address, GLuint *size )
rglGcmInit	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglGcmInit (void *opt_data, void *res_data)$/;"	f	signature:(void *opt_data, void *res_data)
rglGcmInitFromRM	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglGcmInitFromRM( rglGcmResource *rmResource )$/;"	f	signature:( rglGcmResource *rmResource )
rglGcmInitRM	ps3/rgl/src/rgl_ps3.cpp	/^static int rglGcmInitRM( rglGcmResource *gcmResource, int inSysMem, unsigned int dmaPushBufferSize )$/;"	f	file:	signature:( rglGcmResource *gcmResource, int inSysMem, unsigned int dmaPushBufferSize )
rglGcmInlineTransfer	ps3/rgl/src/include/rgl-inline.h	265;"	d
rglGcmInterpolantState	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmInterpolantState$/;"	s
rglGcmInterpolantState	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmInterpolantState rglGcmInterpolantState;$/;"	t	typeref:struct:rglGcmInterpolantState
rglGcmInterpolantState::fragmentProgramAttribMask	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint fragmentProgramAttribMask;$/;"	m	struct:rglGcmInterpolantState	access:public
rglGcmInterpolantState::vertexProgramAttribMask	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint vertexProgramAttribMask;$/;"	m	struct:rglGcmInterpolantState	access:public
rglGcmMapMinTextureFilter	ps3/rgl/src/include/rgl-inline.h	/^static inline GLuint rglGcmMapMinTextureFilter( GLenum filter )$/;"	f	signature:( GLenum filter )
rglGcmMapWrapMode	ps3/rgl/src/include/rgl-inline.h	/^static inline GLuint rglGcmMapWrapMode( GLuint mode )$/;"	f	signature:( GLuint mode )
rglGcmRenderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmRenderTarget$/;"	s
rglGcmRenderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmRenderTarget rglGcmRenderTarget;$/;"	t	typeref:struct:rglGcmRenderTarget
rglGcmRenderTarget::colorBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  colorBufferCount;$/;"	m	struct:rglGcmRenderTarget	access:public
rglGcmRenderTarget::colorFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  colorFormat;$/;"	m	struct:rglGcmRenderTarget	access:public
rglGcmRenderTarget::gcmRenderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmSurface  gcmRenderTarget;$/;"	m	struct:rglGcmRenderTarget	access:public
rglGcmRenderTarget::yInverted	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  yInverted;$/;"	m	struct:rglGcmRenderTarget	access:public
rglGcmRenderTargetEx	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmRenderTargetEx$/;"	s
rglGcmRenderTargetEx	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmRenderTargetEx rglGcmRenderTargetEx;$/;"	t	typeref:struct:rglGcmRenderTargetEx
rglGcmRenderTargetEx::colorBufferCount	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorBufferCount;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::colorFormat	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmEnum   colorFormat;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::colorId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorId[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::colorIdOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorIdOffset[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::colorPitch	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      colorPitch[RGLGCM_SETRENDERTARGET_MAXCOUNT];$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::height	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      height;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::width	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      width;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::xOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      xOffset;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::yInverted	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean   yInverted;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmRenderTargetEx::yOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      yOffset;$/;"	m	struct:rglGcmRenderTargetEx	access:public
rglGcmResource	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmResource$/;"	s
rglGcmResource	ps3/rgl/src/rgl_ps3.cpp	/^static rglGcmResource rglGcmResource;$/;"	v	file:
rglGcmResource::GraphicsClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint GraphicsClock;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::MemoryClock	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint MemoryClock;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::dmaControl	ps3/rgl/src/include/rgl-typedefs.h	/^   void*   dmaControl;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::dmaPushBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   char *  dmaPushBuffer;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::dmaPushBufferOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned long dmaPushBufferOffset;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::dmaPushBufferSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  dmaPushBufferSize;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::hostMemoryBase	ps3/rgl/src/include/rgl-typedefs.h	/^   char *  hostMemoryBase;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::hostMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  hostMemorySize;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::linearMemory	ps3/rgl/src/include/rgl-typedefs.h	/^   char  * linearMemory;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::localAddress	ps3/rgl/src/include/rgl-typedefs.h	/^   char *localAddress;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::localSize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint localSize;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::persistentMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int persistentMemorySize;$/;"	m	struct:rglGcmResource	access:public
rglGcmResource::semaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphoreMemory    *semaphores;$/;"	m	struct:rglGcmResource	access:public
rglGcmSemaphore	ps3/rgl/src/include/rgl-typedefs.h	/^struct  rglGcmSemaphore$/;"	s
rglGcmSemaphore::pad0	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad0;$/;"	m	struct:rglGcmSemaphore	access:public
rglGcmSemaphore::pad1	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad1;$/;"	m	struct:rglGcmSemaphore	access:public
rglGcmSemaphore::pad2	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint pad2;$/;"	m	struct:rglGcmSemaphore	access:public
rglGcmSemaphore::val	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint val;$/;"	m	struct:rglGcmSemaphore	access:public
rglGcmSemaphoreMemory	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmSemaphoreMemory$/;"	s
rglGcmSemaphoreMemory::userSemaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphore userSemaphores[RGLGCM_MAX_USER_SEMAPHORES];$/;"	m	struct:rglGcmSemaphoreMemory	access:public
rglGcmSend	ps3/rgl/src/include/rgl-inline.h	476;"	d
rglGcmSetAntiAliasingControl	ps3/rgl/src/include/rgl-inline.h	410;"	d
rglGcmSetBlendColor	ps3/rgl/src/include/rgl-inline.h	487;"	d
rglGcmSetBlendEnable	ps3/rgl/src/include/rgl-inline.h	301;"	d
rglGcmSetBlendEnableMrt	ps3/rgl/src/include/rgl-inline.h	317;"	d
rglGcmSetBlendEquation	ps3/rgl/src/include/rgl-inline.h	322;"	d
rglGcmSetBlendFunc	ps3/rgl/src/include/rgl-inline.h	327;"	d
rglGcmSetClearColor	ps3/rgl/src/include/rgl-inline.h	271;"	d
rglGcmSetClearSurface	ps3/rgl/src/include/rgl-inline.h	242;"	d
rglGcmSetDitherEnable	ps3/rgl/src/include/rgl-inline.h	385;"	d
rglGcmSetDrawArrays	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetDrawArrays(struct CellGcmContextData *thisContext, uint8_t mode,$/;"	f	signature:(struct CellGcmContextData *thisContext, uint8_t mode, uint32_t first, uint32_t count)
rglGcmSetDrawArraysSlow	ps3/rgl/src/include/rgl-inline.h	/^static void rglGcmSetDrawArraysSlow(struct CellGcmContextData *thisContext, uint8_t mode,$/;"	f	signature:(struct CellGcmContextData *thisContext, uint8_t mode, uint32_t first, uint32_t count)
rglGcmSetFragmentProgramLoad	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetFragmentProgramLoad(struct CellGcmContextData *thisContext, const CellCgbFragmentProgramConfiguration *conf, const uint32_t location)$/;"	f	signature:(struct CellGcmContextData *thisContext, const CellCgbFragmentProgramConfiguration *conf, const uint32_t location)
rglGcmSetInlineTransfer	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetInlineTransfer(struct CellGcmContextData *thisContext,$/;"	f	signature:(struct CellGcmContextData *thisContext, const uint32_t dstOffset, const void *srcAdr, const uint32_t sizeInWords)
rglGcmSetInlineTransferPointer	ps3/rgl/src/include/rgl-inline.h	194;"	d
rglGcmSetInvalidateTextureCache	ps3/rgl/src/include/rgl-inline.h	338;"	d
rglGcmSetInvalidateVertexCache	ps3/rgl/src/include/rgl-inline.h	228;"	d
rglGcmSetJumpCommand	ps3/rgl/src/include/rgl-inline.h	182;"	d
rglGcmSetJumpCommand	ps3/rgl/src/include/rgl-inline.h	297;"	d
rglGcmSetNopCommand	ps3/rgl/src/include/rgl-inline.h	405;"	d
rglGcmSetReferenceCommand	ps3/rgl/src/include/rgl-inline.h	390;"	d
rglGcmSetReferenceCommandInline	ps3/rgl/src/include/rgl-inline.h	148;"	d
rglGcmSetSurface	ps3/rgl/src/include/rgl-inline.h	431;"	d
rglGcmSetTextureAddress	ps3/rgl/src/include/rgl-inline.h	128;"	d
rglGcmSetTextureBorder	ps3/rgl/src/include/rgl-inline.h	276;"	d
rglGcmSetTextureBorderColor	ps3/rgl/src/include/rgl-inline.h	164;"	d
rglGcmSetTextureControl	ps3/rgl/src/include/rgl-inline.h	250;"	d
rglGcmSetTextureFilter	ps3/rgl/src/include/rgl-inline.h	133;"	d
rglGcmSetTextureRemap	ps3/rgl/src/include/rgl-inline.h	255;"	d
rglGcmSetTransferImage	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetTransferImage(struct CellGcmContextData *thisContext, uint8_t mode, uint32_t dstOffset, uint32_t dstPitch, uint32_t dstX, uint32_t dstY, uint32_t srcOffset, uint32_t srcPitch, uint32_t srcX, uint32_t srcY, uint32_t width, uint32_t height, uint32_t bytesPerPixel)$/;"	f	signature:(struct CellGcmContextData *thisContext, uint8_t mode, uint32_t dstOffset, uint32_t dstPitch, uint32_t dstX, uint32_t dstY, uint32_t srcOffset, uint32_t srcPitch, uint32_t srcX, uint32_t srcY, uint32_t width, uint32_t height, uint32_t bytesPerPixel)
rglGcmSetTransferLocation	ps3/rgl/src/include/rgl-inline.h	260;"	d
rglGcmSetUpdateFragmentProgramParameter	ps3/rgl/src/include/rgl-inline.h	482;"	d
rglGcmSetUserClipPlaneControl	ps3/rgl/src/include/rgl-inline.h	333;"	d
rglGcmSetVertexAttribOutputMask	ps3/rgl/src/include/rgl-inline.h	400;"	d
rglGcmSetVertexData4f	ps3/rgl/src/include/rgl-inline.h	177;"	d
rglGcmSetVertexDataArray	ps3/rgl/src/include/rgl-inline.h	186;"	d
rglGcmSetVertexProgramLoad	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetVertexProgramLoad(struct CellGcmContextData *thisContext, const CellCgbVertexProgramConfiguration *conf, const void *ucode)$/;"	f	signature:(struct CellGcmContextData *thisContext, const CellCgbVertexProgramConfiguration *conf, const void *ucode)
rglGcmSetVertexProgramParameterBlock	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmSetVertexProgramParameterBlock(struct CellGcmContextData *thisContext, uint32_t baseConst,$/;"	f	signature:(struct CellGcmContextData *thisContext, uint32_t baseConst, uint32_t constCount, const float * __restrict value)
rglGcmSetViewport	ps3/rgl/src/include/rgl-inline.h	343;"	d
rglGcmSetWaitLabel	ps3/rgl/src/include/rgl-inline.h	220;"	d
rglGcmSetWriteBackEndLabel	ps3/rgl/src/include/rgl-inline.h	212;"	d
rglGcmSetZMinMaxControl	ps3/rgl/src/include/rgl-inline.h	395;"	d
rglGcmShader	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmShader;$/;"	t	typeref:struct:rglGcmShader_
rglGcmShader_	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmShader_$/;"	s
rglGcmShader_::loadAddressId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint loadAddressId;$/;"	m	struct:rglGcmShader_	access:public
rglGcmShader_::program	ps3/rgl/src/include/rgl-typedefs.h	/^   CgBinaryProgram __attribute__(( aligned( 16 ) ) ) program;$/;"	m	struct:rglGcmShader_	access:public
rglGcmState	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmState$/;"	s
rglGcmState::config	ps3/rgl/src/include/rgl-typedefs.h	/^   CellGcmConfig config;$/;"	m	struct:rglGcmState	access:public
rglGcmState::fifo	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmFifo               fifo;$/;"	m	struct:rglGcmState	access:public
rglGcmState::hostMemoryBase	ps3/rgl/src/include/rgl-typedefs.h	/^   void 						*hostMemoryBase;$/;"	m	struct:rglGcmState	access:public
rglGcmState::hostMemorySize	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 						hostMemorySize;$/;"	m	struct:rglGcmState	access:public
rglGcmState::labelValue	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint			labelValue; $/;"	m	struct:rglGcmState	access:public
rglGcmState::localAddress	ps3/rgl/src/include/rgl-typedefs.h	/^   char *localAddress;$/;"	m	struct:rglGcmState	access:public
rglGcmState::renderTarget	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTarget       renderTarget;$/;"	m	struct:rglGcmState	access:public
rglGcmState::semaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphoreMemory        *semaphores;$/;"	m	struct:rglGcmState	access:public
rglGcmState::state	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmCachedState        state;$/;"	m	struct:rglGcmState	access:public
rglGcmState_i	ps3/rgl/src/rgl_ps3.cpp	/^rglGcmState rglGcmState_i;$/;"	v
rglGcmSurface	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmSurface;$/;"	t	typeref:struct:__anon49
rglGcmSwap16Float32	ps3/rgl/src/include/rgl-inline.h	110;"	d
rglGcmTexture	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmTexture;$/;"	t	typeref:struct:__anon53
rglGcmTextureAddress	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmTextureAddress$/;"	s
rglGcmTextureAddress::gamma	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint gamma;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureAddress::unsignedRemap	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint unsignedRemap;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureAddress::wrapR	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapR;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureAddress::wrapS	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapS;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureAddress::wrapT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapT;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureAddress::zfunc	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint zfunc;$/;"	m	struct:rglGcmTextureAddress	access:public
rglGcmTextureControl0	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmTextureControl0$/;"	s
rglGcmTextureControl0::maxAniso	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint maxAniso;$/;"	m	struct:rglGcmTextureControl0	access:public
rglGcmTextureControl0::maxLOD	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint maxLOD;$/;"	m	struct:rglGcmTextureControl0	access:public
rglGcmTextureControl0::minLOD	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint minLOD;$/;"	m	struct:rglGcmTextureControl0	access:public
rglGcmTextureFilter	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmTextureFilter$/;"	s
rglGcmTextureFilter::bias	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint  bias;$/;"	m	struct:rglGcmTextureFilter	access:public
rglGcmTextureFilter::conv	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	conv;$/;"	m	struct:rglGcmTextureFilter	access:public
rglGcmTextureFilter::mag	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	mag;$/;"	m	struct:rglGcmTextureFilter	access:public
rglGcmTextureFilter::min	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint 	min;$/;"	m	struct:rglGcmTextureFilter	access:public
rglGcmTextureLayout	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmTextureLayout;$/;"	t	typeref:struct:__anon52
rglGcmTextureMethodParams	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmTextureMethodParams$/;"	s
rglGcmTextureMethodParams::address	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureAddress  address;$/;"	m	struct:rglGcmTextureMethodParams	access:public
rglGcmTextureMethodParams::borderColor	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint borderColor; \/\/ texture border color$/;"	m	struct:rglGcmTextureMethodParams	access:public
rglGcmTextureMethodParams::control0	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureControl0 control0;$/;"	m	struct:rglGcmTextureMethodParams	access:public
rglGcmTextureMethodParams::filter	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmTextureFilter   filter;$/;"	m	struct:rglGcmTextureMethodParams	access:public
rglGcmTextureMethods	ps3/rgl/src/include/rgl-typedefs.h	/^} rglGcmTextureMethods;$/;"	t	typeref:struct:__anon51
rglGcmTiledMemoryInit	ps3/rgl/src/rgl_ps3.cpp	/^void rglGcmTiledMemoryInit( void )$/;"	f	signature:( void )
rglGcmTiledMemoryManager	ps3/rgl/src/rgl_ps3.cpp	/^static rglTiledMemoryManager rglGcmTiledMemoryManager;$/;"	v	file:
rglGcmTransferData	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmTransferData$/;"	f	signature:( GLuint dstId, GLuint dstIdOffset, GLint dstPitch, GLuint srcId, GLuint srcIdOffset, GLint srcPitch, GLint bytesPerRow, GLint rowCount )
rglGcmTryResizeTileRegion	ps3/rgl/src/include/rgl-externs.h	/^GLboolean rglGcmTryResizeTileRegion( GLuint address, GLuint size, void *data);$/;"	p	signature:( GLuint address, GLuint size, void *data)
rglGcmTryResizeTileRegion	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglGcmTryResizeTileRegion( GLuint address, GLuint size, void* data )$/;"	f	signature:( GLuint address, GLuint size, void* data )
rglGcmUtilWaitForIdle	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglGcmUtilWaitForIdle (void)$/;"	f	signature:(void)
rglGcmViewportState	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglGcmViewportState$/;"	s
rglGcmViewportState	ps3/rgl/src/include/rgl-typedefs.h	/^typedef struct rglGcmViewportState rglGcmViewportState;$/;"	t	typeref:struct:rglGcmViewportState
rglGcmViewportState::h	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::w	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::x	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::xCenter	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat xScale, xCenter;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::xScale	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat xScale, xCenter;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::y	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::yCenter	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat yScale, yCenter;$/;"	m	struct:rglGcmViewportState	access:public
rglGcmViewportState::yScale	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat yScale, yCenter;$/;"	m	struct:rglGcmViewportState	access:public
rglGetComponentCount	ps3/rgl/src/rgl_ps3.cpp	/^static inline int rglGetComponentCount (GLenum format)$/;"	f	file:	signature:(GLenum format)
rglGetCurrentTexture	ps3/rgl/include/RGL/private.h	/^extern rglTexture *rglGetCurrentTexture (const void *data, GLenum target);$/;"	p	signature:(const void *data, GLenum target)
rglGetCurrentTexture	ps3/rgl/src/rgl_ps3.cpp	/^rglTexture *rglGetCurrentTexture (const void *data, GLenum target)$/;"	f	signature:(const void *data, GLenum target)
rglGetFramebuffer	ps3/rgl/include/RGL/private.h	/^static inline rglFramebuffer *rglGetFramebuffer( RGLcontext *LContext, GLuint name )$/;"	f	signature:( RGLcontext *LContext, GLuint name )
rglGetFramebuffer	ps3/rgl/include/RGL/private.h	/^static inline rglFramebuffer *rglGetFramebuffer( RGLcontext *LContext, GLuint name );$/;"	p	signature:( RGLcontext *LContext, GLuint name )
rglGetFramebufferSafe	ps3/rgl/include/RGL/private.h	/^static inline rglFramebuffer *rglGetFramebufferSafe( RGLcontext *LContext, GLuint name )$/;"	f	signature:( RGLcontext *LContext, GLuint name )
rglGetGcmTextureSize	ps3/rgl/src/rgl_ps3_raster.cpp	/^static GLuint rglGetGcmTextureSize (void *data)$/;"	f	file:	signature:(void *data)
rglGetImage	ps3/rgl/src/rgl_ps3.cpp	/^static void rglGetImage( GLenum target, GLint level, rglTexture **texture, rglImage **image, GLsizei reallocateSize )$/;"	f	file:	signature:( GLenum target, GLint level, rglTexture **texture, rglImage **image, GLsizei reallocateSize )
rglGetNamedValue	ps3/rgl/include/RGL/Utils.h	/^   static inline void *rglGetNamedValue(void *data, unsigned int name )$/;"	f	signature:(void *data, unsigned int name )
rglGetParameterArray	ps3/rgl/include/Cg/CgCommon.h	/^static inline const CgParameterArray *rglGetParameterArray (const void *data, const CgParameterEntry *entry)$/;"	f	signature:(const void *data, const CgParameterEntry *entry)
rglGetParameterCGtype	ps3/rgl/include/Cg/CgCommon.h	/^static inline CGtype rglGetParameterCGtype (const void *data, const CgParameterEntry *entry)$/;"	f	signature:(const void *data, const CgParameterEntry *entry)
rglGetParameterResource	ps3/rgl/include/Cg/CgCommon.h	/^static inline const CgParameterResource *rglGetParameterResource (const void *data, const CgParameterEntry *entry )$/;"	f	signature:(const void *data, const CgParameterEntry *entry )
rglGetParameterStructure	ps3/rgl/include/Cg/CgCommon.h	/^static inline const CgParameterStructure *rglGetParameterStructure (const void *data, const CgParameterEntry *entry )$/;"	f	signature:(const void *data, const CgParameterEntry *entry )
rglGetPixelSize	ps3/rgl/include/RGL/private.h	/^extern int	rglGetPixelSize( GLenum format, GLenum type );$/;"	p	signature:( GLenum format, GLenum type )
rglGetPixelSize	ps3/rgl/src/rgl_ps3.cpp	/^int rglGetPixelSize( GLenum format, GLenum type )$/;"	f	signature:( GLenum format, GLenum type )
rglGetProgramProfileIndex	ps3/rgl/include/Cg/CgCommon.h	/^inline int rglGetProgramProfileIndex( CGprofile profile )$/;"	f	signature:( CGprofile profile )
rglGetSizeofSubArray	ps3/rgl/include/Cg/CgCommon.h	/^static inline int rglGetSizeofSubArray( const unsigned short *dimensions, unsigned short count )$/;"	f	signature:( const unsigned short *dimensions, unsigned short count )
rglGetSizeofSubArray	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int rglGetSizeofSubArray( const short *dimensions, int count )$/;"	f	file:	signature:( const short *dimensions, int count )
rglGetTextureSafe	ps3/rgl/include/RGL/private.h	/^static inline rglTexture* rglGetTextureSafe (RGLcontext *LContext, GLuint name)$/;"	f	signature:(RGLcontext *LContext, GLuint name)
rglGetTypeColCount	ps3/rgl/include/Cg/CgCommon.h	/^unsigned int rglGetTypeColCount( CGtype parameterType );$/;"	p	signature:( CGtype parameterType )
rglGetTypeColCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^unsigned int rglGetTypeColCount( CGtype parameterType )$/;"	f	signature:( CGtype parameterType )
rglGetTypeResource	ps3/rgl/src/rgl_ps3_raster.cpp	/^int rglGetTypeResource( _CGprogram* program, unsigned short typeIndex, short *resourceIndex );$/;"	p	file:	signature:( _CGprogram* program, unsigned short typeIndex, short *resourceIndex )
rglGetTypeResourceID	ps3/rgl/src/rgl_ps3_raster.cpp	/^int rglGetTypeResourceID( _CGprogram* program, unsigned short typeIndex );$/;"	p	file:	signature:( _CGprogram* program, unsigned short typeIndex )
rglGetTypeResourceRegisterCountVP	ps3/rgl/src/rgl_ps3_raster.cpp	/^int rglGetTypeResourceRegisterCountVP( _CGprogram* program, short resourceIndex, int resourceCount, unsigned short *resource );$/;"	p	file:	signature:( _CGprogram* program, short resourceIndex, int resourceCount, unsigned short *resource )
rglGetTypeRowCount	ps3/rgl/include/Cg/CgCommon.h	/^unsigned int rglGetTypeRowCount( CGtype parameterType );$/;"	p	signature:( CGtype parameterType )
rglGetTypeRowCount	ps3/rgl/src/rgl_ps3_cg.cpp	/^unsigned int rglGetTypeRowCount( CGtype parameterType )$/;"	f	signature:( CGtype parameterType )
rglGetTypeSize	ps3/rgl/src/rgl_ps3.cpp	/^static inline int rglGetTypeSize( GLenum type )$/;"	f	file:	signature:( GLenum type )
rglHalfToFloat	ps3/rgl/include/RGL/TypeUtils.h	/^static inline float rglHalfToFloat( GLhalfARB v )$/;"	f	signature:( GLhalfARB v )
rglImage	ps3/rgl/include/RGL/Types.h	/^   rglImage;$/;"	t	typeref:struct:rglImage_
rglImageAllocCPUStorage	ps3/rgl/include/RGL/private.h	/^void rglImageAllocCPUStorage (void *data);$/;"	p	signature:(void *data)
rglImageAllocCPUStorage	ps3/rgl/src/rgl_ps3.cpp	/^void rglImageAllocCPUStorage (void *data)$/;"	f	signature:(void *data)
rglImageFreeCPUStorage	ps3/rgl/include/RGL/private.h	/^void rglImageFreeCPUStorage (void *data);$/;"	p	signature:(void *data)
rglImageFreeCPUStorage	ps3/rgl/src/rgl_ps3.cpp	/^void rglImageFreeCPUStorage(void *data)$/;"	f	signature:(void *data)
rglImage_	ps3/rgl/include/RGL/Types.h	/^   typedef struct rglImage_$/;"	s
rglImage_::alignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei	alignment;$/;"	m	struct:rglImage_	access:public
rglImage_::data	ps3/rgl/include/RGL/Types.h	/^      char *data;$/;"	m	struct:rglImage_	access:public
rglImage_::dataState	ps3/rgl/include/RGL/Types.h	/^      GLenum dataState;	\/\/ valid data location (see enum above)$/;"	m	struct:rglImage_	access:public
rglImage_::depth	ps3/rgl/include/RGL/Types.h	/^      GLsizei depth;$/;"	m	struct:rglImage_	access:public
rglImage_::format	ps3/rgl/include/RGL/Types.h	/^      GLenum format;$/;"	m	struct:rglImage_	access:public
rglImage_::height	ps3/rgl/include/RGL/Types.h	/^      GLsizei height;$/;"	m	struct:rglImage_	access:public
rglImage_::internalFormat	ps3/rgl/include/RGL/Types.h	/^      GLenum internalFormat;$/;"	m	struct:rglImage_	access:public
rglImage_::isSet	ps3/rgl/include/RGL/Types.h	/^      GLboolean isSet;$/;"	m	struct:rglImage_	access:public
rglImage_::mallocData	ps3/rgl/include/RGL/Types.h	/^      char *mallocData;$/;"	m	struct:rglImage_	access:public
rglImage_::mallocStorageSize	ps3/rgl/include/RGL/Types.h	/^      GLsizei mallocStorageSize;$/;"	m	struct:rglImage_	access:public
rglImage_::storageSize	ps3/rgl/include/RGL/Types.h	/^      GLsizei storageSize;				\/\/ minimum allocation$/;"	m	struct:rglImage_	access:public
rglImage_::type	ps3/rgl/include/RGL/Types.h	/^      GLenum type;$/;"	m	struct:rglImage_	access:public
rglImage_::width	ps3/rgl/include/RGL/Types.h	/^      GLsizei width;$/;"	m	struct:rglImage_	access:public
rglImage_::xblk	ps3/rgl/include/RGL/Types.h	/^      GLuint xblk, yblk;			\/\/ block storage size$/;"	m	struct:rglImage_	access:public
rglImage_::xstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
rglImage_::yblk	ps3/rgl/include/RGL/Types.h	/^      GLuint xblk, yblk;			\/\/ block storage size$/;"	m	struct:rglImage_	access:public
rglImage_::ystride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
rglImage_::zstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
rglInfinity	ps3/rgl/include/RGL/TypeUtils.h	/^static const rglIntAndFloat rglInfinity = {i: 0x7f800000U};$/;"	v
rglInitCompleted	ps3/rgl/src/rgl_ps3.cpp	/^static int rglInitCompleted = 0;$/;"	v	file:
rglInitNameSpace	ps3/rgl/src/rgl_ps3.cpp	/^static void rglInitNameSpace(void *data)$/;"	f	file:	signature:(void *data)
rglIntAndFloat	ps3/rgl/include/RGL/TypeUtils.h	/^} rglIntAndFloat;$/;"	t	typeref:union:__anon71
rglInvalidateAttributes	ps3/rgl/include/RGL/private.h	/^void	rglInvalidateAttributes (void);$/;"	p	signature:(void)
rglIsFormat	ps3/rgl/include/RGL/private.h	/^GLboolean rglIsFormat( GLenum format );$/;"	p	signature:( GLenum format )
rglIsName	ps3/rgl/include/RGL/Utils.h	/^   RGL_EXPORT unsigned int rglIsName( void *data, unsigned int name);$/;"	p	signature:( void *data, unsigned int name)
rglIsName	ps3/rgl/src/rgl_ps3.cpp	/^unsigned int rglIsName (void *data, unsigned int name )$/;"	f	signature:(void *data, unsigned int name )
rglIsPow2	ps3/rgl/include/RGL/Utils.h	/^   static inline int rglIsPow2( unsigned int i )$/;"	f	signature:( unsigned int i )
rglIsType	ps3/rgl/include/RGL/private.h	/^GLboolean rglIsType( GLenum type );$/;"	p	signature:( GLenum type )
rglIsValidPair	ps3/rgl/include/RGL/private.h	/^GLboolean rglIsValidPair( GLenum format, GLenum type );$/;"	p	signature:( GLenum format, GLenum type )
rglLog2	ps3/rgl/include/RGL/Utils.h	/^   static inline int rglLog2( unsigned int i )$/;"	f	signature:( unsigned int i )
rglNameSpace	ps3/rgl/include/RGL/Types.h	/^   typedef struct rglNameSpace$/;"	s
rglNameSpace	ps3/rgl/include/RGL/Types.h	/^   } rglNameSpace;$/;"	t	typeref:struct:rglNameSpace
rglNameSpace::capacity	ps3/rgl/include/RGL/Types.h	/^      unsigned long capacity;$/;"	m	struct:rglNameSpace	access:public
rglNameSpace::data	ps3/rgl/include/RGL/Types.h	/^      void** data;$/;"	m	struct:rglNameSpace	access:public
rglNameSpace::firstFree	ps3/rgl/include/RGL/Types.h	/^      void** firstFree;$/;"	m	struct:rglNameSpace	access:public
rglNan	ps3/rgl/include/RGL/TypeUtils.h	/^static const rglIntAndFloat rglNan = {i: 0x7fc00000U};$/;"	v
rglOutOfSpaceCallback	ps3/rgl/src/include/rgl-externs.h	/^int32_t rglOutOfSpaceCallback (void *data, uint32_t spaceInWords);$/;"	p	signature:(void *data, uint32_t spaceInWords)
rglOutOfSpaceCallback	ps3/rgl/src/rgl_ps3.cpp	/^int32_t rglOutOfSpaceCallback (void *data, uint32_t spaceInWords)$/;"	f	signature:(void *data, uint32_t spaceInWords)
rglPad	ps3/rgl/include/RGL/Utils.h	/^   static inline unsigned long rglPad( unsigned long x, unsigned long pad )$/;"	f	signature:( unsigned long x, unsigned long pad )
rglPadPtr	ps3/rgl/include/RGL/Utils.h	/^   static inline char* rglPadPtr( const char* p, unsigned int pad )$/;"	f	signature:( const char* p, unsigned int pad )
rglPlatformBufferObjectMap	ps3/rgl/include/RGL/private.h	/^char *rglPlatformBufferObjectMap (void *data, GLenum access );$/;"	p	signature:(void *data, GLenum access )
rglPlatformBufferObjectMap	ps3/rgl/src/rgl_ps3_raster.cpp	/^char *rglPlatformBufferObjectMap (void *data, GLenum access)$/;"	f	signature:(void *data, GLenum access)
rglPlatformBufferObjectMapTextureReference	ps3/rgl/src/rgl.h	/^char *rglPlatformBufferObjectMapTextureReference(void *data, GLenum access);$/;"	p	signature:(void *data, GLenum access)
rglPlatformBufferObjectMapTextureReference	ps3/rgl/src/rgl_ps3_raster.cpp	/^char *rglPlatformBufferObjectMapTextureReference(void *data, GLenum access)$/;"	f	signature:(void *data, GLenum access)
rglPlatformBufferObjectSetData	ps3/rgl/include/RGL/private.h	/^void rglPlatformBufferObjectSetData (void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy );$/;"	p	signature:(void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy )
rglPlatformBufferObjectSetData	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformBufferObjectSetData(void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy)$/;"	f	signature:(void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy)
rglPlatformBufferObjectSetDataTextureReference	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void rglPlatformBufferObjectSetDataTextureReference(void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy)$/;"	f	file:	signature:(void *buf_data, GLintptr offset, GLsizeiptr size, const GLvoid *data, GLboolean tryImmediateCopy)
rglPlatformBufferObjectSize	ps3/rgl/include/RGL/private.h	/^int rglPlatformBufferObjectSize (void);$/;"	p	signature:(void)
rglPlatformBufferObjectUnmap	ps3/rgl/include/RGL/private.h	/^GLboolean rglPlatformBufferObjectUnmap (void *data);$/;"	p	signature:(void *data)
rglPlatformBufferObjectUnmap	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLboolean rglPlatformBufferObjectUnmap (void *data)$/;"	f	signature:(void *data)
rglPlatformBufferObjectUnmapTextureReference	ps3/rgl/src/rgl.h	/^GLboolean rglPlatformBufferObjectUnmapTextureReference (void *data);$/;"	p	signature:(void *data)
rglPlatformBufferObjectUnmapTextureReference	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLboolean rglPlatformBufferObjectUnmapTextureReference (void *data)$/;"	f	signature:(void *data)
rglPlatformChooseInternalStorage	ps3/rgl/include/RGL/private.h	/^extern GLenum rglPlatformChooseInternalStorage (void *data, GLenum internalformat);$/;"	p	signature:(void *data, GLenum internalformat)
rglPlatformChooseInternalStorage	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLenum rglPlatformChooseInternalStorage (void *data, GLenum internalFormat )$/;"	f	signature:(void *data, GLenum internalFormat )
rglPlatformCopyProgram	ps3/rgl/include/Cg/CgCommon.h	/^int rglPlatformCopyProgram( _CGprogram* source, _CGprogram* destination );$/;"	p	signature:( _CGprogram* source, _CGprogram* destination )
rglPlatformCopyTexSubImage3D	ps3/rgl/include/RGL/private.h	/^extern void rglPlatformCopyTexSubImage3D( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height );$/;"	p	signature:( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height )
rglPlatformCreateBufferObject	ps3/rgl/include/RGL/private.h	/^GLboolean rglPlatformCreateBufferObject( rglBufferObject* bufferObject );$/;"	p	signature:( rglBufferObject* bufferObject )
rglPlatformCreateDevice	ps3/rgl/include/RGL/private.h	/^extern int		rglPlatformCreateDevice (void *data);$/;"	p	signature:(void *data)
rglPlatformCreateDevice	ps3/rgl/src/rgl_ps3.cpp	/^int rglPlatformCreateDevice (void *data)$/;"	f	signature:(void *data)
rglPlatformCreateDeviceAuto	ps3/rgl/src/rgl.h	/^RGL_EXPORT RGLdevice*	rglPlatformCreateDeviceAuto( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode );$/;"	p	signature:( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )
rglPlatformCreateDeviceAuto	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLdevice*	rglPlatformCreateDeviceAuto( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )$/;"	f	signature:( GLenum colorFormat, GLenum depthFormat, GLenum multisamplingMode )
rglPlatformCreateDeviceExtended	ps3/rgl/src/rgl.h	/^RGL_EXPORT RGLdevice*	rglPlatformCreateDeviceExtended (const void *data);$/;"	p	signature:(const void *data)
rglPlatformCreateDeviceExtended	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT RGLdevice*	rglPlatformCreateDeviceExtended (const void *data)$/;"	f	signature:(const void *data)
rglPlatformCreateTexture	ps3/rgl/include/RGL/private.h	/^extern void	rglPlatformCreateTexture (void *data);$/;"	p	signature:(void *data)
rglPlatformCreateTexture	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformCreateTexture (void *data)$/;"	f	signature:(void *data)
rglPlatformDestroyBufferObject	ps3/rgl/include/RGL/private.h	/^void rglPlatformDestroyBufferObject (void *data);$/;"	p	signature:(void *data)
rglPlatformDestroyBufferObject	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformDestroyBufferObject (void *data)$/;"	f	signature:(void *data)
rglPlatformDestroyDevice	ps3/rgl/include/RGL/private.h	/^extern void		rglPlatformDestroyDevice (void *data);$/;"	p	signature:(void *data)
rglPlatformDestroyDevice	ps3/rgl/src/rgl_ps3.cpp	/^void rglPlatformDestroyDevice (void *data)$/;"	f	signature:(void *data)
rglPlatformDestroyTexture	ps3/rgl/include/RGL/private.h	/^extern void	rglPlatformDestroyTexture (void *data);$/;"	p	signature:(void *data)
rglPlatformDestroyTexture	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformDestroyTexture (void *data)$/;"	f	signature:(void *data)
rglPlatformDeviceExit	ps3/rgl/include/RGL/private.h	/^extern void		rglPlatformDeviceExit (void);$/;"	p	signature:(void)
rglPlatformDeviceExit	ps3/rgl/src/rgl_ps3.cpp	/^void rglPlatformDeviceExit (void)$/;"	f	signature:(void)
rglPlatformDeviceInit	ps3/rgl/include/RGL/private.h	/^extern GLboolean rglPlatformDeviceInit (void *data);$/;"	p	signature:(void *data)
rglPlatformDeviceInit	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglPlatformDeviceInit (void *data)$/;"	f	signature:(void *data)
rglPlatformDropTexture	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformDropTexture (void *data)$/;"	f	signature:(void *data)
rglPlatformFramebuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   rglPlatformFramebuffer(): rglFramebuffer()$/;"	f	struct:rglPlatformFramebuffer	access:public	signature:()
rglPlatformFramebuffer	ps3/rgl/src/include/rgl-typedefs.h	/^struct rglPlatformFramebuffer: public rglFramebuffer$/;"	s	inherits:rglFramebuffer
rglPlatformFramebuffer::complete	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean complete;$/;"	m	struct:rglPlatformFramebuffer	access:public
rglPlatformFramebuffer::rglPlatformFramebuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   rglPlatformFramebuffer(): rglFramebuffer()$/;"	f	struct:rglPlatformFramebuffer	access:public	signature:()
rglPlatformFramebuffer::rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:rglPlatformFramebuffer	access:public
rglPlatformFramebuffer::validate	ps3/rgl/src/include/rgl-typedefs.h	/^   void validate (void *data);$/;"	p	struct:rglPlatformFramebuffer	access:public	signature:(void *data)
rglPlatformFramebuffer::validate	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformFramebuffer::validate (void *data)$/;"	f	class:rglPlatformFramebuffer	signature:(void *data)
rglPlatformFramebuffer::~rglPlatformFramebuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   virtual ~rglPlatformFramebuffer() {};$/;"	f	struct:rglPlatformFramebuffer	access:public	signature:()
rglPlatformFramebufferCheckStatus	ps3/rgl/include/RGL/private.h	/^GLenum rglPlatformFramebufferCheckStatus (void *data);$/;"	p	signature:(void *data)
rglPlatformFramebufferCheckStatus	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLenum rglPlatformFramebufferCheckStatus (void *data)$/;"	f	signature:(void *data)
rglPlatformFramebufferGetParameteriv	ps3/rgl/include/RGL/private.h	/^void rglPlatformFramebufferGetParameteriv( GLenum pname, GLint* params );$/;"	p	signature:( GLenum pname, GLint* params )
rglPlatformFreeGcmTexture	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void rglPlatformFreeGcmTexture (void *data)$/;"	f	file:	signature:(void *data)
rglPlatformGenerateFragmentProgram	ps3/rgl/include/Cg/CgCommon.h	/^int rglPlatformGenerateFragmentProgram (void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues );$/;"	p	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglPlatformGenerateVertexProgram	ps3/rgl/include/Cg/CgCommon.h	/^int rglPlatformGenerateVertexProgram (void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues );$/;"	p	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglPlatformGetBitsPerPixel	ps3/rgl/src/include/rgl-inline.h	/^static inline GLuint rglPlatformGetBitsPerPixel (GLenum internalFormat)$/;"	f	signature:(GLenum internalFormat)
rglPlatformGetBufferParameteriv	ps3/rgl/include/RGL/private.h	/^void rglPlatformGetBufferParameteriv( rglBufferObject *bufferObject, GLenum pname, int *params );$/;"	p	signature:( rglBufferObject *bufferObject, GLenum pname, int *params )
rglPlatformGetDeviceAspectRatio	ps3/rgl/src/rgl.h	/^RGL_EXPORT GLfloat rglPlatformGetDeviceAspectRatio (const void *data);$/;"	p	signature:(const void *data)
rglPlatformGetDeviceAspectRatio	ps3/rgl/src/rgl_ps3.cpp	/^RGL_EXPORT GLfloat rglPlatformGetDeviceAspectRatio (const void *data)$/;"	f	signature:(const void *data)
rglPlatformGetImageData	ps3/rgl/include/RGL/private.h	/^void rglPlatformGetImageData( GLenum target, GLint level, rglTexture *texture, rglImage *image );$/;"	p	signature:( GLenum target, GLint level, rglTexture *texture, rglImage *image )
rglPlatformGetLatestProfile	ps3/rgl/include/Cg/CgCommon.h	/^CGprofile rglPlatformGetLatestProfile( CGGLenum profile_type );$/;"	p	signature:( CGGLenum profile_type )
rglPlatformGetProcAddress	ps3/rgl/include/RGL/private.h	/^extern const GLvoid*	rglPlatformGetProcAddress (const char *funcName);$/;"	p	signature:(const char *funcName)
rglPlatformNeedsConversion	ps3/rgl/include/RGL/private.h	/^GLboolean rglPlatformNeedsConversion (const rglAttributeState* as, GLuint index);$/;"	p	signature:(const rglAttributeState* as, GLuint index)
rglPlatformProgramErase	ps3/rgl/include/Cg/CgCommon.h	/^void rglPlatformProgramErase (void *data);$/;"	p	signature:(void *data)
rglPlatformRasterDestroyResources	ps3/rgl/include/RGL/private.h	/^void	rglPlatformRasterDestroyResources (void);$/;"	p	signature:(void)
rglPlatformRasterExit	ps3/rgl/include/RGL/private.h	/^void	rglPlatformRasterExit (void* data);$/;"	p	signature:(void* data)
rglPlatformRasterExit	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformRasterExit (void *data)$/;"	f	signature:(void *data)
rglPlatformRasterGetIntegerv	ps3/rgl/include/RGL/private.h	/^void rglPlatformRasterGetIntegerv( GLenum pname, GLint* params );$/;"	p	signature:( GLenum pname, GLint* params )
rglPlatformRasterInit	ps3/rgl/include/RGL/private.h	/^void*	rglPlatformRasterInit (void);$/;"	p	signature:(void)
rglPlatformRasterInit	ps3/rgl/src/rgl_ps3_raster.cpp	/^void *rglPlatformRasterInit (void)$/;"	f	signature:(void)
rglPlatformReadPBOPixels	ps3/rgl/include/RGL/private.h	/^extern GLboolean rglPlatformReadPBOPixels( GLint x, GLint y, GLsizei width, GLsizei height, GLboolean flip, GLenum format, GLenum type, GLvoid *pixels );$/;"	p	signature:( GLint x, GLint y, GLsizei width, GLsizei height, GLboolean flip, GLenum format, GLenum type, GLvoid *pixels )
rglPlatformReadPixels	ps3/rgl/include/RGL/private.h	/^extern void rglPlatformReadPixels( GLint x, GLint y, GLsizei width, GLsizei height, GLboolean flip, GLenum format, GLenum type, GLvoid *pixels );$/;"	p	signature:( GLint x, GLint y, GLsizei width, GLsizei height, GLboolean flip, GLenum format, GLenum type, GLvoid *pixels )
rglPlatformRequiresSlowPath	ps3/rgl/include/RGL/private.h	/^GLboolean rglPlatformRequiresSlowPath (void *data, const GLenum indexType, uint32_t indexCount);$/;"	p	signature:(void *data, const GLenum indexType, uint32_t indexCount)
rglPlatformRequiresSlowPath	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLboolean rglPlatformRequiresSlowPath (void *data, const GLenum indexType, uint32_t indexCount)$/;"	f	signature:(void *data, const GLenum indexType, uint32_t indexCount)
rglPlatformSupportsFragmentProgram	ps3/rgl/include/Cg/CgCommon.h	/^CGbool rglPlatformSupportsFragmentProgram ( CGprofile p );$/;"	p	signature:( CGprofile p )
rglPlatformSupportsVertexProgram	ps3/rgl/include/Cg/CgCommon.h	/^CGbool rglPlatformSupportsVertexProgram ( CGprofile p );$/;"	p	signature:( CGprofile p )
rglPlatformSwapBuffers	ps3/rgl/include/RGL/private.h	/^extern void		rglPlatformSwapBuffers (void *data);$/;"	p	signature:(void *data)
rglPlatformValidateTextureResources	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void rglPlatformValidateTextureResources (void *data)$/;"	f	file:	signature:(void *data)
rglPlatformValidateTextureResources	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void rglPlatformValidateTextureResources (void *data);$/;"	p	file:	signature:(void *data)
rglPlatformValidateVertexTextures	ps3/rgl/include/RGL/private.h	/^void rglPlatformValidateVertexTextures (void);$/;"	p	signature:(void)
rglPrependString	ps3/rgl/src/rgl_ps3_cg.cpp	/^static bool rglPrependString( char *dst, const char *src, size_t size )$/;"	f	file:	signature:( char *dst, const char *src, size_t size )
rglPrintFifoFromGet	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglPrintFifoFromGet( unsigned int numWords ) $/;"	f	signature:( unsigned int numWords )
rglPrintFifoFromPut	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglPrintFifoFromPut( unsigned int numWords ) $/;"	f	signature:( unsigned int numWords )
rglPrintIt	ps3/rgl/src/include/rgl-inline.h	/^static inline void rglPrintIt (unsigned int v)$/;"	f	signature:(unsigned int v)
rglPsglPlatformExit	ps3/rgl/src/rgl.h	/^void rglPsglPlatformExit (void);$/;"	p	signature:(void)
rglPsglPlatformExit	ps3/rgl/src/rgl_ps3.cpp	/^void rglPsglPlatformExit(void)$/;"	f	signature:(void)
rglPsglPlatformInit	ps3/rgl/src/rgl.h	/^void rglPsglPlatformInit (void *data);$/;"	p	signature:(void *data)
rglPsglPlatformInit	ps3/rgl/src/rgl_ps3.cpp	/^void rglPsglPlatformInit (void *data)$/;"	f	signature:(void *data)
rglRaster	ps3/rgl/include/RGL/Types.h	/^   } rglRaster;$/;"	t	typeref:struct:__anon62
rglRawRasterToImage	ps3/rgl/src/rgl_ps3.cpp	/^static void rglRawRasterToImage(const void *in_data,$/;"	f	file:	signature:(const void *in_data, void *out_data, GLuint x, GLuint y, GLuint z )
rglReallocateImages	ps3/rgl/include/RGL/private.h	/^void rglReallocateImages (void *data, GLint level, GLsizei dimension);$/;"	p	signature:(void *data, GLint level, GLsizei dimension)
rglReallocateImages	ps3/rgl/src/rgl_ps3.cpp	/^void rglReallocateImages (void *data, GLint level, GLsizei dimension )$/;"	f	signature:(void *data, GLint level, GLsizei dimension )
rglRendererString	ps3/rgl/src/rgl_ps3.cpp	/^static char* rglRendererString = "RGL";$/;"	v	file:
rglRescVblankCallbackFunction	ps3/rgl/src/rgl_ps3.cpp	/^static void rglRescVblankCallbackFunction(const uint32_t head)$/;"	f	file:	signature:(const uint32_t head)
rglResetContext	ps3/rgl/src/rgl_ps3.cpp	/^static void rglResetContext (void *data)$/;"	f	file:	signature:(void *data)
rglSetDisplayMode	ps3/rgl/src/rgl_ps3.cpp	/^static void rglSetDisplayMode( const VideoMode *vm, GLushort bitsPerPixel, GLuint pitch )$/;"	f	file:	signature:( const VideoMode *vm, GLushort bitsPerPixel, GLuint pitch )
rglSetError	ps3/rgl/include/RGL/private.h	/^extern void		rglSetError( GLenum error );$/;"	p	signature:( GLenum error )
rglSetError	ps3/rgl/src/rgl_ps3.cpp	/^void rglSetError( GLenum error )$/;"	f	signature:( GLenum error )
rglSetFlipHandler	ps3/rgl/include/RGL/private.h	/^void rglSetFlipHandler(void (*handler)(const GLuint head), RGLdevice *device);$/;"	p	signature:(void (*handler)(const GLuint head), RGLdevice *device)
rglSetImage	ps3/rgl/src/rgl_ps3.cpp	/^static void rglSetImage(void *data, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei alignment, GLenum format, GLenum type, const void *pixels )$/;"	f	file:	signature:(void *data, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei alignment, GLenum format, GLenum type, const void *pixels )
rglSetVBlankHandler	ps3/rgl/include/RGL/private.h	/^void rglSetVBlankHandler(void (*handler)(const GLuint head), RGLdevice *device);$/;"	p	signature:(void (*handler)(const GLuint head), RGLdevice *device)
rglShadowDeviceParameters	ps3/rgl/include/RGL/private.h	/^extern PSGLdeviceParameters * rglShadowDeviceParameters (void);$/;"	p	signature:(void)
rglTexNameSpace	ps3/rgl/include/RGL/Types.h	/^   typedef struct rglTexNameSpace$/;"	s
rglTexNameSpace	ps3/rgl/include/RGL/Types.h	/^   } rglTexNameSpace;$/;"	t	typeref:struct:rglTexNameSpace
rglTexNameSpace::capacity	ps3/rgl/include/RGL/Types.h	/^      GLuint capacity;$/;"	m	struct:rglTexNameSpace	access:public
rglTexNameSpace::create	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpaceCreateFunction create;$/;"	m	struct:rglTexNameSpace	access:public
rglTexNameSpace::data	ps3/rgl/include/RGL/Types.h	/^      void** data;$/;"	m	struct:rglTexNameSpace	access:public
rglTexNameSpace::destroy	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpaceDestroyFunction destroy;$/;"	m	struct:rglTexNameSpace	access:public
rglTexNameSpaceCreateFunction	ps3/rgl/include/RGL/Types.h	/^   typedef void *( *rglTexNameSpaceCreateFunction )( void );$/;"	t
rglTexNameSpaceCreateNameLazy	ps3/rgl/include/RGL/Utils.h	/^   GLboolean rglTexNameSpaceCreateNameLazy(void *data, GLuint name );$/;"	p	signature:(void *data, GLuint name )
rglTexNameSpaceCreateNameLazy	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglTexNameSpaceCreateNameLazy(void *data, GLuint name )$/;"	f	signature:(void *data, GLuint name )
rglTexNameSpaceDeleteNames	ps3/rgl/include/RGL/Utils.h	/^   void rglTexNameSpaceDeleteNames(void *data, GLsizei n, const GLuint *names );$/;"	p	signature:(void *data, GLsizei n, const GLuint *names )
rglTexNameSpaceDeleteNames	ps3/rgl/src/rgl_ps3.cpp	/^void rglTexNameSpaceDeleteNames(void *data, GLsizei n, const GLuint *names )$/;"	f	signature:(void *data, GLsizei n, const GLuint *names )
rglTexNameSpaceDestroyFunction	ps3/rgl/include/RGL/Types.h	/^   typedef void( *rglTexNameSpaceDestroyFunction )( void * );$/;"	t
rglTexNameSpaceFree	ps3/rgl/src/rgl_ps3.cpp	/^static void rglTexNameSpaceFree(void *data)$/;"	f	file:	signature:(void *data)
rglTexNameSpaceGenNames	ps3/rgl/src/rgl_ps3.cpp	/^static void rglTexNameSpaceGenNames(void *data, GLsizei n, GLuint *names )$/;"	f	file:	signature:(void *data, GLsizei n, GLuint *names )
rglTexNameSpaceGetFree	ps3/rgl/src/rgl_ps3.cpp	/^static GLuint rglTexNameSpaceGetFree(void *data)$/;"	f	file:	signature:(void *data)
rglTexNameSpaceInit	ps3/rgl/src/rgl_ps3.cpp	/^static void rglTexNameSpaceInit(void *data,$/;"	f	file:	signature:(void *data, rglTexNameSpaceCreateFunction create, rglTexNameSpaceDestroyFunction destroy)
rglTexNameSpaceIsName	ps3/rgl/include/RGL/Utils.h	/^   GLboolean rglTexNameSpaceIsName(void *data, GLuint name );$/;"	p	signature:(void *data, GLuint name )
rglTexNameSpaceIsName	ps3/rgl/src/rgl_ps3.cpp	/^GLboolean rglTexNameSpaceIsName(void *data, GLuint name )$/;"	f	signature:(void *data, GLuint name )
rglTexNameSpaceReinit	ps3/rgl/include/RGL/Utils.h	/^   void rglTexNameSpaceReinit(void *saved, void *active);$/;"	p	signature:(void *saved, void *active)
rglTexNameSpaceResetNames	ps3/rgl/include/RGL/Utils.h	/^   void rglTexNameSpaceResetNames(void *data);$/;"	p	signature:(void *data)
rglTexNameSpaceResetNames	ps3/rgl/src/rgl_ps3.cpp	/^void rglTexNameSpaceResetNames(void *data)$/;"	f	signature:(void *data)
rglTexture	ps3/rgl/include/RGL/Types.h	/^   } rglTexture;$/;"	t	typeref:struct:__anon63
rglTextureDelete	ps3/rgl/include/RGL/private.h	/^extern void	rglTextureDelete( RGLcontext* context, GLuint name );$/;"	p	signature:( RGLcontext* context, GLuint name )
rglTextureHasValidLevels	ps3/rgl/include/RGL/private.h	/^extern GLboolean rglTextureHasValidLevels( const rglTexture *texture, int levels, int width, int height, int depth, GLenum format, GLenum type, GLenum internalFormat );$/;"	p	signature:( const rglTexture *texture, int levels, int width, int height, int depth, GLenum format, GLenum type, GLenum internalFormat )
rglTextureImageUnit	ps3/rgl/include/RGL/Types.h	/^   } rglTextureImageUnit;$/;"	t	typeref:struct:__anon65
rglTextureInit	ps3/rgl/include/RGL/private.h	/^extern int	rglTextureInit( RGLcontext* context, GLuint name );$/;"	p	signature:( RGLcontext* context, GLuint name )
rglTextureTouchFBOs	ps3/rgl/include/RGL/private.h	/^static inline void rglTextureTouchFBOs (void *data)$/;"	f	signature:(void *data)
rglTiledMemoryManager	ps3/rgl/src/rgl_ps3.cpp	/^} rglTiledMemoryManager;$/;"	t	typeref:struct:__anon29	file:
rglTiledRegion	ps3/rgl/src/rgl_ps3.cpp	/^} rglTiledRegion;$/;"	t	typeref:struct:__anon28	file:
rglVblankCallbackFunction	ps3/rgl/src/rgl_ps3.cpp	/^static void rglVblankCallbackFunction(const uint32_t head)$/;"	f	file:	signature:(const uint32_t head)
rglVendorString	ps3/rgl/src/rgl_ps3.cpp	/^static char* rglVendorString = "RetroArch";$/;"	v	file:
rglVersion	ps3/rgl/src/rgl_ps3.cpp	/^char* rglVersion = "2.00";$/;"	v
rglVersionNumber	ps3/rgl/src/rgl_ps3.cpp	/^static char* rglVersionNumber = "2.00";$/;"	v	file:
rglVertexAttribPointerNV	ps3/rgl/include/RGL/private.h	/^void rglVertexAttribPointerNV( GLuint index, GLint fsize, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer );$/;"	p	signature:( GLuint index, GLint fsize, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer )
rglVertexAttribPointerNV	ps3/rgl/src/rgl_ps3.cpp	/^void rglVertexAttribPointerNV($/;"	f	signature:( GLuint index, GLint fsize, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer)
rglViewPort	ps3/rgl/include/RGL/Types.h	/^   } rglViewPort;$/;"	t	typeref:struct:__anon60
rglgen_func_t	gfx/glsym/rglgen.h	/^typedef void (*rglgen_func_t)(void);$/;"	t
rglgen_proc_address_t	gfx/glsym/rglgen.h	/^typedef rglgen_func_t (*rglgen_proc_address_t)(const char*);$/;"	t
rglgen_resolve_symbols	gfx/glsym/rglgen.c	/^void rglgen_resolve_symbols(rglgen_proc_address_t proc)$/;"	f	signature:(rglgen_proc_address_t proc)
rglgen_resolve_symbols	gfx/glsym/rglgen.h	/^void rglgen_resolve_symbols(rglgen_proc_address_t proc);$/;"	p	signature:(rglgen_proc_address_t proc)
rglgen_resolve_symbols_custom	gfx/glsym/rglgen.c	/^void rglgen_resolve_symbols_custom(rglgen_proc_address_t proc,$/;"	f	signature:(rglgen_proc_address_t proc, const struct rglgen_sym_map *map)
rglgen_resolve_symbols_custom	gfx/glsym/rglgen.h	/^void rglgen_resolve_symbols_custom(rglgen_proc_address_t proc,$/;"	p	signature:(rglgen_proc_address_t proc, const struct rglgen_sym_map *map)
rglgen_sym_map	gfx/glsym/glsym_es2.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	s
rglgen_sym_map	gfx/glsym/glsym_gl.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	s
rglgen_sym_map::ptr	gfx/glsym/glsym_es2.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
rglgen_sym_map::ptr	gfx/glsym/glsym_gl.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
rglgen_sym_map::sym	gfx/glsym/glsym_es2.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
rglgen_sym_map::sym	gfx/glsym/glsym_gl.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
rglgen_symbol_map	gfx/glsym/glsym_es2.c	/^const struct rglgen_sym_map rglgen_symbol_map[] = {$/;"	v	typeref:struct:rglgen_sym_map
rglgen_symbol_map	gfx/glsym/glsym_gl.c	/^const struct rglgen_sym_map rglgen_symbol_map[] = {$/;"	v	typeref:struct:rglgen_sym_map
rglpCgUpdateProgramAtIndex	ps3/rgl/src/rgl_cg.h	/^extern CGprogram rglpCgUpdateProgramAtIndex( CGprogramGroup group, int index,$/;"	p	signature:( CGprogramGroup group, int index, int refcount )
rglpCgUpdateProgramAtIndex	ps3/rgl/src/rgl_ps3_cg.cpp	/^CGprogram rglpCgUpdateProgramAtIndex( CGprogramGroup group, int index, int refcount )$/;"	f	signature:( CGprogramGroup group, int index, int refcount )
rglpCopyProgram	ps3/rgl/src/rgl_cg.h	/^extern int rglpCopyProgram (void *src_data, void *dst_data);$/;"	p	signature:(void *src_data, void *dst_data)
rglpCopyProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^int rglpCopyProgram (void *src_data, void *dst_data)$/;"	f	signature:(void *src_data, void *dst_data)
rglpCreateBufferObject	ps3/rgl/src/rgl_ps3_raster.cpp	/^GLboolean rglpCreateBufferObject (void *data)$/;"	f	signature:(void *data)
rglpCreateBufferObject	ps3/rgl/src/rglp.h	/^extern GLboolean rglpCreateBufferObject (void *data);$/;"	p	signature:(void *data)
rglpGenerateFragmentProgram	ps3/rgl/src/rgl_cg.h	/^extern int rglpGenerateFragmentProgram (void *data,$/;"	p	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglpGenerateFragmentProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^int rglpGenerateFragmentProgram (void *data, const CgProgramHeader *programHeader, const void *ucode,$/;"	f	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglpGenerateVertexProgram	ps3/rgl/src/rgl_cg.h	/^extern int rglpGenerateVertexProgram (void *data,$/;"	p	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglpGenerateVertexProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^int rglpGenerateVertexProgram (void *data, const CgProgramHeader *programHeader,$/;"	f	signature:(void *data, const CgProgramHeader *programHeader, const void *ucode, const CgParameterTableHeader *parameterHeader, const char *stringTable, const float *defaultValues )
rglpGetLatestProfile	ps3/rgl/src/rgl_ps3_cg.cpp	/^static CGprofile rglpGetLatestProfile( CGGLenum profile_type )$/;"	f	file:	signature:( CGGLenum profile_type )
rglpProgramErase	ps3/rgl/src/rgl_cg.h	/^extern void rglpProgramErase (void *data);$/;"	p	signature:(void *data)
rglpProgramErase	ps3/rgl/src/rgl_ps3_cg.cpp	/^void rglpProgramErase (void *data)$/;"	f	signature:(void *data)
rglpSupportsFragmentProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^static CGbool rglpSupportsFragmentProgram( CGprofile p )$/;"	f	file:	signature:( CGprofile p )
rglpSupportsVertexProgram	ps3/rgl/src/rgl_ps3_cg.cpp	/^static CGbool rglpSupportsVertexProgram( CGprofile p )$/;"	f	file:	signature:( CGprofile p )
rglpsAllocateBuffer	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void rglpsAllocateBuffer (void *data)$/;"	f	file:	signature:(void *data)
rgui	frontend/menu/menu_common.c	/^rgui_handle_t *rgui;$/;"	v
rgui	gfx/d3d9/d3d9.hpp	/^      overlay_t rgui;$/;"	m	class:D3DVideo	access:private
rgui_action_t	frontend/menu/menu_common.h	/^} rgui_action_t;$/;"	t	typeref:enum:__anon23
rgui_bind_axis_state	frontend/menu/menu_common.h	/^struct rgui_bind_axis_state$/;"	s
rgui_bind_axis_state::locked_axes	frontend/menu/menu_common.h	/^   int16_t locked_axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_axis_state	access:public
rgui_bind_axis_state::rested_axes	frontend/menu/menu_common.h	/^   int16_t rested_axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_axis_state	access:public
rgui_bind_state	frontend/menu/menu_common.h	/^struct rgui_bind_state$/;"	s
rgui_bind_state::axis_state	frontend/menu/menu_common.h	/^   struct rgui_bind_axis_state axis_state[MAX_PLAYERS];$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::rgui_bind_axis_state	access:public
rgui_bind_state::begin	frontend/menu/menu_common.h	/^   unsigned begin;$/;"	m	struct:rgui_bind_state	access:public
rgui_bind_state::last	frontend/menu/menu_common.h	/^   unsigned last;$/;"	m	struct:rgui_bind_state	access:public
rgui_bind_state::player	frontend/menu/menu_common.h	/^   unsigned player;$/;"	m	struct:rgui_bind_state	access:public
rgui_bind_state::skip	frontend/menu/menu_common.h	/^   bool skip;$/;"	m	struct:rgui_bind_state	access:public
rgui_bind_state::state	frontend/menu/menu_common.h	/^   struct rgui_bind_state_port state[MAX_PLAYERS];$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::rgui_bind_state_port	access:public
rgui_bind_state::target	frontend/menu/menu_common.h	/^   struct retro_keybind *target;$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::retro_keybind	access:public
rgui_bind_state_port	frontend/menu/menu_common.h	/^struct rgui_bind_state_port$/;"	s
rgui_bind_state_port::axes	frontend/menu/menu_common.h	/^   int16_t axes[RGUI_MAX_AXES];$/;"	m	struct:rgui_bind_state_port	access:public
rgui_bind_state_port::buttons	frontend/menu/menu_common.h	/^   bool buttons[RGUI_MAX_BUTTONS];$/;"	m	struct:rgui_bind_state_port	access:public
rgui_bind_state_port::hats	frontend/menu/menu_common.h	/^   uint16_t hats[RGUI_MAX_HATS];$/;"	m	struct:rgui_bind_state_port	access:public
rgui_browser_directory	general.h	/^   char rgui_browser_directory[PATH_MAX];$/;"	m	struct:settings	access:public
rgui_buffer	gfx/lima_gfx.c	/^static void *rgui_buffer = NULL;$/;"	v	file:
rgui_buffer	gfx/sdl_gfx.c	/^static void *rgui_buffer = NULL;$/;"	v	file:
rgui_config_directory	general.h	/^   char rgui_config_directory[PATH_MAX];$/;"	m	struct:settings	access:public
rgui_copy_glyph	frontend/menu/disp/rgui.c	/^static void rgui_copy_glyph(uint8_t *glyph, const uint8_t *buf)$/;"	f	file:	signature:(uint8_t *glyph, const uint8_t *buf)
rgui_current_gx_resolution	frontend/menu/menu_settings.c	/^static unsigned rgui_current_gx_resolution = GX_RESOLUTIONS_640_480;$/;"	v	file:
rgui_file_type_t	frontend/menu/menu_common.h	/^} rgui_file_type_t;$/;"	t	typeref:enum:__anon22
rgui_free	frontend/menu/disp/rgui.c	/^static void rgui_free(void *data)$/;"	f	file:	signature:(void *data)
rgui_gx_resolutions	frontend/menu/menu_settings.c	/^static unsigned rgui_gx_resolutions[GX_RESOLUTIONS_LAST][2] = {$/;"	v	file:
rgui_handle_t	frontend/menu/menu_common.h	/^} rgui_handle_t;$/;"	t	typeref:struct:__anon25
rgui_init	frontend/menu/disp/rgui.c	/^static void *rgui_init(void)$/;"	f	file:	signature:(void)
rgui_input_postprocess	frontend/menu/disp/rgui.c	/^int rgui_input_postprocess(void *data, uint64_t old_state)$/;"	f	signature:(void *data, uint64_t old_state)
rgui_input_postprocess	frontend/menu/disp/rmenu.c	/^int rgui_input_postprocess(void *data, uint64_t old_state)$/;"	f	signature:(void *data, uint64_t old_state)
rgui_input_postprocess	frontend/menu/menu_common.h	/^int rgui_input_postprocess(void *data, uint64_t old_state);$/;"	p	signature:(void *data, uint64_t old_state)
rgui_render	frontend/menu/disp/rgui.c	/^static void rgui_render(void *data)$/;"	f	file:	signature:(void *data)
rgui_render_messagebox	frontend/menu/disp/rgui.c	/^static void rgui_render_messagebox(void *data, const char *message)$/;"	f	file:	signature:(void *data, const char *message)
rgui_set_texture	frontend/menu/disp/rgui.c	/^void rgui_set_texture(void *data, bool enable)$/;"	f	signature:(void *data, bool enable)
rgui_show_start_screen	config.def.h	/^static const bool rgui_show_start_screen = true;$/;"	v
rgui_show_start_screen	general.h	/^   bool rgui_show_start_screen;$/;"	m	struct:settings	access:public
rgui_texture	gfx/gl_common.h	/^   GLuint rgui_texture;$/;"	m	struct:gl	access:public
rgui_texture_alpha	gfx/gl_common.h	/^   GLfloat rgui_texture_alpha;$/;"	m	struct:gl	access:public
rgui_texture_enable	gfx/gl_common.h	/^   bool rgui_texture_enable;$/;"	m	struct:gl	access:public
rgui_texture_enable	gx/gx_video.h	/^   bool rgui_texture_enable;$/;"	m	struct:gx_video	access:public
rgui_texture_enable	xdk/xdk_d3d.h	/^   bool rgui_texture_enable;$/;"	m	struct:xdk_d3d_video	access:public
rgui_texture_full_screen	gfx/gl_common.h	/^   bool rgui_texture_full_screen;$/;"	m	struct:gl	access:public
rgui_texture_full_screen	xdk/xdk_d3d.h	/^   bool rgui_texture_full_screen;$/;"	m	struct:xdk_d3d_video	access:public
rguidisp_init_font	frontend/menu/disp/rgui.c	/^static bool rguidisp_init_font(void *data)$/;"	f	file:	signature:(void *data)
rhw	xdk/xdk_d3d.h	/^   float rhw;$/;"	m	struct:DrawVerticeFormats	access:public
right	gfx/gl_common.h	/^   GLfloat right;$/;"	m	struct:gl_ortho	access:public
rightBuffer	emscripten/library_rwebaudio.js	/^         var rightBuffer = RA.buffers[RA.bufIndex].getChannelData(1);$/;"	v
rjs	apple/common/hidpad/wiimote.h	/^		struct joystick_t rjs;			\/**< right joystick calibration				*\/$/;"	m	struct:classic_ctrl_t	typeref:struct:classic_ctrl_t::joystick_t	access:public
rk	input/input_common.h	/^   enum retro_key rk;$/;"	m	struct:rarch_key_map	typeref:enum:rarch_key_map::retro_key	access:public
rl_fnmatch	tools/retrolaunch/rl_fnmatch.c	/^int rl_fnmatch(const char *pattern, const char *string, int flags) {$/;"	f	signature:(const char *pattern, const char *string, int flags)
rl_fnmatch	tools/retrolaunch/rl_fnmatch.h	/^int rl_fnmatch(const char *pattern, const char *string, int flags);$/;"	p	signature:(const char *pattern, const char *string, int flags)
rmenu_free	frontend/menu/disp/rmenu.c	/^static void rmenu_free(void *data)$/;"	f	file:	signature:(void *data)
rmenu_free_assets	frontend/menu/disp/rmenu.c	/^static void rmenu_free_assets(void *data)$/;"	f	file:	signature:(void *data)
rmenu_init	frontend/menu/disp/rmenu.c	/^static void *rmenu_init(void)$/;"	f	file:	signature:(void)
rmenu_init_assets	frontend/menu/disp/rmenu.c	/^static void rmenu_init_assets(void *data)$/;"	f	file:	signature:(void *data)
rmenu_render	frontend/menu/disp/rmenu.c	/^static void rmenu_render(void *data)$/;"	f	file:	signature:(void *data)
rmenu_render_messagebox	frontend/menu/disp/rmenu.c	/^static void rmenu_render_messagebox(void *data, const char *message)$/;"	f	file:	signature:(void *data, const char *message)
rmenu_set_texture	frontend/menu/disp/rmenu.c	/^void rmenu_set_texture(void *data, bool enable)$/;"	f	signature:(void *data, bool enable)
rmenu_xui_free	frontend/menu/rmenu_xui.cpp	/^static void rmenu_xui_free(void *data)$/;"	f	file:	signature:(void *data)
rmenu_xui_init	frontend/menu/rmenu_xui.cpp	/^static void* rmenu_xui_init (void)$/;"	f	file:	signature:(void)
rmenu_xui_input_postprocess	frontend/menu/rmenu_xui.cpp	/^int rmenu_xui_input_postprocess(void *data, uint64_t old_state)$/;"	f	signature:(void *data, uint64_t old_state)
rmenu_xui_iterate	frontend/menu/menu_common.h	/^int rmenu_xui_iterate(void *data, unsigned action);$/;"	p	signature:(void *data, unsigned action)
rmenu_xui_iterate	frontend/menu/rmenu_xui.cpp	/^int rmenu_xui_iterate(void *data, unsigned action)$/;"	f	signature:(void *data, unsigned action)
rmenu_xui_populate_entries	frontend/menu/rmenu_xui.cpp	/^static void rmenu_xui_populate_entries(void *data, unsigned menu_type)$/;"	f	file:	signature:(void *data, unsigned menu_type)
roar_t	audio/roar.c	/^} roar_t;$/;"	t	typeref:struct:__anon103	file:
rom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    QString rom;$/;"	m	class:RetroArch	access:private
romChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void romChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
romExtensions	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	QString romExtensions;$/;"	m	class:RetroArch	access:private
romExtensionsChanged	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void romExtensionsChanged(QString);$/;"	p	class:RetroArch	access:public	signature:(QString)
rom_file_temporary	general.h	/^   bool rom_file_temporary;$/;"	m	struct:global	access:public
rom_history	frontend/menu/history.c	/^struct rom_history$/;"	s	file:
rom_history::cap	frontend/menu/history.c	/^   size_t cap;$/;"	m	struct:rom_history	file:	access:public
rom_history::conf_path	frontend/menu/history.c	/^   char *conf_path;$/;"	m	struct:rom_history	file:	access:public
rom_history::entries	frontend/menu/history.c	/^   struct rom_history_entry *entries;$/;"	m	struct:rom_history	typeref:struct:rom_history::rom_history_entry	file:	access:public
rom_history::size	frontend/menu/history.c	/^   size_t size;$/;"	m	struct:rom_history	file:	access:public
rom_history_clear	frontend/menu/history.c	/^void rom_history_clear(rom_history_t *hist)$/;"	f	signature:(rom_history_t *hist)
rom_history_clear	frontend/menu/history.h	/^void rom_history_clear(rom_history_t *hist);$/;"	p	signature:(rom_history_t *hist)
rom_history_entry	frontend/menu/history.c	/^struct rom_history_entry$/;"	s	file:
rom_history_entry::core_name	frontend/menu/history.c	/^   char *core_name;$/;"	m	struct:rom_history_entry	file:	access:public
rom_history_entry::core_path	frontend/menu/history.c	/^   char *core_path;$/;"	m	struct:rom_history_entry	file:	access:public
rom_history_entry::path	frontend/menu/history.c	/^   char *path;$/;"	m	struct:rom_history_entry	file:	access:public
rom_history_free	frontend/menu/history.c	/^void rom_history_free(rom_history_t *hist)$/;"	f	signature:(rom_history_t *hist)
rom_history_free	frontend/menu/history.h	/^void rom_history_free(rom_history_t *hist);$/;"	p	signature:(rom_history_t *hist)
rom_history_free_entry	frontend/menu/history.c	/^static void rom_history_free_entry(struct rom_history_entry *entry)$/;"	f	file:	signature:(struct rom_history_entry *entry)
rom_history_get_index	frontend/menu/history.c	/^void rom_history_get_index(rom_history_t *hist,$/;"	f	signature:(rom_history_t *hist, size_t index, const char **path, const char **core_path, const char **core_name)
rom_history_get_index	frontend/menu/history.h	/^void rom_history_get_index(rom_history_t *hist,$/;"	p	signature:(rom_history_t *hist, size_t index, const char **path, const char **core_path, const char **core_name)
rom_history_init	frontend/menu/history.c	/^rom_history_t *rom_history_init(const char *path, size_t size)$/;"	f	signature:(const char *path, size_t size)
rom_history_init	frontend/menu/history.h	/^rom_history_t *rom_history_init(const char *path, size_t size);$/;"	p	signature:(const char *path, size_t size)
rom_history_push	frontend/menu/history.c	/^void rom_history_push(rom_history_t *hist,$/;"	f	signature:(rom_history_t *hist, const char *path, const char *core_path, const char *core_name)
rom_history_push	frontend/menu/history.h	/^void rom_history_push(rom_history_t *hist,$/;"	p	signature:(rom_history_t *hist, const char *path, const char *core_path, const char *core_name)
rom_history_read_file	frontend/menu/history.c	/^static bool rom_history_read_file(rom_history_t *hist, const char *path)$/;"	f	file:	signature:(rom_history_t *hist, const char *path)
rom_history_size	frontend/menu/history.c	/^size_t rom_history_size(rom_history_t *hist)$/;"	f	signature:(rom_history_t *hist)
rom_history_size	frontend/menu/history.h	/^size_t rom_history_size(rom_history_t *hist);$/;"	p	signature:(rom_history_t *hist)
rom_history_t	frontend/menu/history.h	/^typedef struct rom_history rom_history_t;$/;"	t	typeref:struct:rom_history
rom_history_write_file	frontend/menu/history.c	/^static void rom_history_write_file(rom_history_t *hist)$/;"	f	file:	signature:(rom_history_t *hist)
rom_path	general.h	/^   const char *rom_path;$/;"	m	struct:rarch_main_wrap	access:public
root_menu	frontend/menu/rmenu_xui.cpp	/^HXUIOBJ root_menu;$/;"	v
root_node	compat/rxml/rxml.c	/^   struct rxml_node *root_node;$/;"	m	struct:rxml_document	typeref:struct:rxml_document::rxml_node	file:	access:public
rotate	gfx/lima_gfx.c	/^static int rotate = 0;$/;"	v	file:
rotate	gfx/sdl_gfx.c	/^static int rotate = 0;$/;"	v	file:
rotation	general.h	/^      unsigned rotation;$/;"	m	struct:global::__anon234	access:public
rotation	general.h	/^      unsigned rotation;$/;"	m	struct:settings::__anon227	access:public
rotation	gfx/d3d9/d3d9.hpp	/^      unsigned rotation;$/;"	m	class:D3DVideo	access:private
rotation	gfx/gfx_common.h	/^enum rotation$/;"	g
rotation	gfx/gl_common.h	/^   unsigned rotation;$/;"	m	struct:gl	access:public
rotation_lut	gfx/gfx_common.c	/^char rotation_lut[4][32] =$/;"	v
roundf	msvc/msvc_compat.h	53;"	d
rows	ps3/rgl/src/rgl_ps3_cg.cpp	/^static int rows[] = {$/;"	v	file:
rpng_load_image_argb	gfx/rpng/rpng.c	/^bool rpng_load_image_argb(const char *path, uint32_t **data, unsigned *width, unsigned *height)$/;"	f	signature:(const char *path, uint32_t **data, unsigned *width, unsigned *height)
rpng_load_image_argb	gfx/rpng/rpng.h	/^bool rpng_load_image_argb(const char *path, uint32_t **data, unsigned *width, unsigned *height);$/;"	p	signature:(const char *path, uint32_t **data, unsigned *width, unsigned *height)
rpng_save_image	gfx/rpng/rpng.c	/^static bool rpng_save_image(const char *path, const uint8_t *data,$/;"	f	file:	signature:(const char *path, const uint8_t *data, unsigned width, unsigned height, unsigned pitch, unsigned bpp)
rpng_save_image_argb	gfx/rpng/rpng.c	/^bool rpng_save_image_argb(const char *path, const uint32_t *data,$/;"	f	signature:(const char *path, const uint32_t *data, unsigned width, unsigned height, unsigned pitch)
rpng_save_image_argb	gfx/rpng/rpng.h	/^bool rpng_save_image_argb(const char *path, const uint32_t *data,$/;"	p	signature:(const char *path, const uint32_t *data, unsigned width, unsigned height, unsigned pitch)
rpng_save_image_bgr24	gfx/rpng/rpng.c	/^bool rpng_save_image_bgr24(const char *path, const uint8_t *data,$/;"	f	signature:(const char *path, const uint8_t *data, unsigned width, unsigned height, unsigned pitch)
rpng_save_image_bgr24	gfx/rpng/rpng.h	/^bool rpng_save_image_bgr24(const char *path, const uint8_t *data,$/;"	p	signature:(const char *path, const uint8_t *data, unsigned width, unsigned height, unsigned pitch)
rs_buffer_size	audio/rsound.c	/^static size_t rs_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
rs_free	audio/rsound.c	/^static void rs_free(void *data)$/;"	f	file:	signature:(void *data)
rs_init	audio/rsound.c	/^static void *rs_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
rs_set_nonblock_state	audio/rsound.c	/^static void rs_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
rs_start	audio/rsound.c	/^static bool rs_start(void *data)$/;"	f	file:	signature:(void *data)
rs_stop	audio/rsound.c	/^static bool rs_stop(void *data)$/;"	f	file:	signature:(void *data)
rs_write	audio/rsound.c	/^static ssize_t rs_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
rs_write_avail	audio/rsound.c	/^static size_t rs_write_avail(void *data)$/;"	f	file:	signature:(void *data)
rsd	audio/rsound.c	/^typedef struct rsd$/;"	s	file:
rsd::buffer	audio/rsound.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:rsd	file:	access:public
rsd::cond	audio/rsound.c	/^   scond_t *cond;$/;"	m	struct:rsd	file:	access:public
rsd::cond_lock	audio/rsound.c	/^   slock_t *cond_lock;$/;"	m	struct:rsd	file:	access:public
rsd::has_error	audio/rsound.c	/^   volatile bool has_error;$/;"	m	struct:rsd	file:	access:public
rsd::nonblock	audio/rsound.c	/^   bool nonblock;$/;"	m	struct:rsd	file:	access:public
rsd::rd	audio/rsound.c	/^   rsound_t *rd;$/;"	m	struct:rsd	file:	access:public
rsd_audio_callback_t	audio/rsound.h	/^   typedef ssize_t (*rsd_audio_callback_t)(void *data, size_t bytes, void *userdata);$/;"	t
rsd_callback_lock	audio/librsound.c	/^void rsd_callback_lock(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_callback_lock	audio/rsound.h	/^   void rsd_callback_lock (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_callback_unlock	audio/librsound.c	/^void rsd_callback_unlock(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_callback_unlock	audio/rsound.h	/^   void rsd_callback_unlock (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_conn_type	audio/librsound.c	/^enum rsd_conn_type$/;"	g	file:
rsd_delay	audio/librsound.c	/^size_t rsd_delay(rsound_t *rd)$/;"	f	signature:(rsound_t *rd)
rsd_delay	audio/rsound.h	/^   size_t rsd_delay (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_delay_ms	audio/librsound.c	/^size_t rsd_delay_ms(rsound_t* rd)$/;"	f	signature:(rsound_t* rd)
rsd_delay_ms	audio/rsound.h	/^   size_t rsd_delay_ms (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_delay_wait	audio/librsound.c	/^void rsd_delay_wait(rsound_t *rd)$/;"	f	signature:(rsound_t *rd)
rsd_delay_wait	audio/rsound.h	/^   void rsd_delay_wait(rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_error_callback_t	audio/rsound.h	/^   typedef void (*rsd_error_callback_t)(void *userdata);$/;"	t
rsd_exec	audio/librsound.c	/^int rsd_exec(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_exec	audio/rsound.h	/^   int rsd_exec (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_format	audio/rsound.h	/^   enum rsd_format$/;"	g
rsd_free	audio/librsound.c	/^int rsd_free(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_free	audio/rsound.h	/^   int rsd_free (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_get_avail	audio/librsound.c	/^size_t rsd_get_avail(rsound_t *rd)$/;"	f	signature:(rsound_t *rd)
rsd_get_avail	audio/rsound.h	/^   size_t rsd_get_avail (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_init	audio/librsound.c	/^int rsd_init(rsound_t** rsound)$/;"	f	signature:(rsound_t** rsound)
rsd_init	audio/rsound.h	/^   int rsd_init (rsound_t **rd);$/;"	p	signature:(rsound_t **rd)
rsd_logtype	audio/librsound.c	/^enum rsd_logtype$/;"	g	file:
rsd_pause	audio/librsound.c	/^int rsd_pause(rsound_t* rsound, int enable)$/;"	f	signature:(rsound_t* rsound, int enable)
rsd_pause	audio/rsound.h	/^   int rsd_pause (rsound_t *rd, int enable);$/;"	p	signature:(rsound_t *rd, int enable)
rsd_pointer	audio/librsound.c	/^size_t rsd_pointer(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_pointer	audio/rsound.h	/^   size_t rsd_pointer (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_samplesize	audio/librsound.c	/^int rsd_samplesize( rsound_t *rd )$/;"	f	signature:( rsound_t *rd )
rsd_samplesize	audio/rsound.h	/^   int rsd_samplesize(rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_set_callback	audio/librsound.c	/^void rsd_set_callback(rsound_t *rsound, rsd_audio_callback_t audio_cb, rsd_error_callback_t err_cb, size_t max_size, void *userdata)$/;"	f	signature:(rsound_t *rsound, rsd_audio_callback_t audio_cb, rsd_error_callback_t err_cb, size_t max_size, void *userdata)
rsd_set_callback	audio/rsound.h	/^   void rsd_set_callback (rsound_t *rd, rsd_audio_callback_t callback, rsd_error_callback_t err_callback, size_t max_size, void *userdata);$/;"	p	signature:(rsound_t *rd, rsd_audio_callback_t callback, rsd_error_callback_t err_callback, size_t max_size, void *userdata)
rsd_set_param	audio/librsound.c	/^int rsd_set_param(rsound_t *rd, enum rsd_settings option, void* param)$/;"	f	signature:(rsound_t *rd, enum rsd_settings option, void* param)
rsd_set_param	audio/rsound.h	/^   int rsd_set_param (rsound_t *rd, enum rsd_settings option, void* param);$/;"	p	signature:(rsound_t *rd, enum rsd_settings option, void* param)
rsd_settings	audio/rsound.h	/^   enum rsd_settings$/;"	g
rsd_simple_start	audio/librsound.c	/^int rsd_simple_start(rsound_t** rsound, const char* host, const char* port, const char* ident,$/;"	f	signature:(rsound_t** rsound, const char* host, const char* port, const char* ident, int rate, int channels, enum rsd_format format)
rsd_simple_start	audio/rsound.h	/^   int rsd_simple_start (rsound_t **rd, const char* host, const char* port, const char* ident,$/;"	p	signature:(rsound_t **rd, const char* host, const char* port, const char* ident, int rate, int channels, enum rsd_format format)
rsd_start	audio/librsound.c	/^int rsd_start(rsound_t *rsound)$/;"	f	signature:(rsound_t *rsound)
rsd_start	audio/rsound.h	/^   int rsd_start (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_stop	audio/librsound.c	/^int rsd_stop(rsound_t *rd)$/;"	f	signature:(rsound_t *rd)
rsd_stop	audio/rsound.h	/^   int rsd_stop (rsound_t *rd);$/;"	p	signature:(rsound_t *rd)
rsd_t	audio/rsound.c	/^} rsd_t;$/;"	t	typeref:struct:rsd	file:
rsd_write	audio/librsound.c	/^size_t rsd_write( rsound_t *rsound, const void* buf, size_t size)$/;"	f	signature:( rsound_t *rsound, const void* buf, size_t size)
rsd_write	audio/rsound.h	/^   size_t rsd_write (rsound_t *rd, const void* buf, size_t size);$/;"	p	signature:(rsound_t *rd, const void* buf, size_t size)
rsnd_cb_thread	audio/librsound.c	/^static void rsnd_cb_thread(void *thread_data)$/;"	f	file:	signature:(void *thread_data)
rsnd_cb_thread	audio/librsound.c	/^static void rsnd_cb_thread(void *thread_data);$/;"	p	file:	signature:(void *thread_data)
rsnd_close_ctl	audio/librsound.c	/^static int rsnd_close_ctl(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_close_ctl	audio/librsound.c	/^static int rsnd_close_ctl(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_connect_server	audio/librsound.c	/^static int rsnd_connect_server( rsound_t *rd )$/;"	f	file:	signature:( rsound_t *rd )
rsnd_create_connection	audio/librsound.c	/^static int rsnd_create_connection(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_drain	audio/librsound.c	/^static void rsnd_drain(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_fill_buffer	audio/librsound.c	/^static size_t rsnd_fill_buffer(rsound_t *rd, const char *buf, size_t size)$/;"	f	file:	signature:(rsound_t *rd, const char *buf, size_t size)
rsnd_format_to_samplesize	audio/librsound.c	/^static inline int rsnd_format_to_samplesize ( uint16_t fmt )$/;"	f	file:	signature:( uint16_t fmt )
rsnd_get_backend_info	audio/librsound.c	/^static int rsnd_get_backend_info ( rsound_t *rd )$/;"	f	file:	signature:( rsound_t *rd )
rsnd_get_delay	audio/librsound.c	/^static size_t rsnd_get_delay(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_get_delay	audio/librsound.c	/^static size_t rsnd_get_delay(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_get_ptr	audio/librsound.c	/^static size_t rsnd_get_ptr(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_get_ptr	audio/librsound.c	/^static size_t rsnd_get_ptr(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_get_time_usec	audio/librsound.c	/^static int64_t rsnd_get_time_usec(void)$/;"	f	file:	signature:(void)
rsnd_is_little_endian	audio/librsound.c	/^static inline int rsnd_is_little_endian(void)$/;"	f	file:	signature:(void)
rsnd_poll	audio/librsound.c	/^static int rsnd_poll(struct pollfd *fd, int numfd, int timeout)$/;"	f	file:	signature:(struct pollfd *fd, int numfd, int timeout)
rsnd_poll	audio/librsound.c	/^static int rsnd_poll(struct pollfd *fd, int numfd, int timeout);$/;"	p	file:	signature:(struct pollfd *fd, int numfd, int timeout)
rsnd_recv_chunk	audio/librsound.c	/^static ssize_t rsnd_recv_chunk(int socket, void *buf, size_t size, int blocking)$/;"	f	file:	signature:(int socket, void *buf, size_t size, int blocking)
rsnd_recv_chunk	audio/librsound.c	/^static ssize_t rsnd_recv_chunk(int socket, void *buf, size_t size, int blocking);$/;"	p	file:	signature:(int socket, void *buf, size_t size, int blocking)
rsnd_reset	audio/librsound.c	/^static int rsnd_reset(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_reset	audio/librsound.c	/^static int rsnd_reset(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_send_chunk	audio/librsound.c	/^static ssize_t rsnd_send_chunk(int socket, const void *buf, size_t size, int blocking);$/;"	p	file:	signature:(int socket, const void *buf, size_t size, int blocking)
rsnd_send_chunk	audio/librsound.c	/^static ssize_t rsnd_send_chunk(int socket, const void* buf, size_t size, int blocking)$/;"	f	file:	signature:(int socket, const void* buf, size_t size, int blocking)
rsnd_send_header_info	audio/librsound.c	/^static int rsnd_send_header_info(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_send_identity_info	audio/librsound.c	/^static int rsnd_send_identity_info(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_send_identity_info	audio/librsound.c	/^static int rsnd_send_identity_info(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_send_info_query	audio/librsound.c	/^static int rsnd_send_info_query(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_send_info_query	audio/librsound.c	/^static int rsnd_send_info_query(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_sleep	audio/librsound.c	/^static void rsnd_sleep(int msec)$/;"	f	file:	signature:(int msec)
rsnd_sleep	audio/librsound.c	/^static void rsnd_sleep(int msec);$/;"	p	file:	signature:(int msec)
rsnd_start_thread	audio/librsound.c	/^static int rsnd_start_thread(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_start_thread	audio/librsound.c	/^static int rsnd_start_thread(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_stop_thread	audio/librsound.c	/^static int rsnd_stop_thread(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_stop_thread	audio/librsound.c	/^static int rsnd_stop_thread(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsnd_swap_endian_16	audio/librsound.c	/^static inline void rsnd_swap_endian_16 ( uint16_t * x )$/;"	f	file:	signature:( uint16_t * x )
rsnd_swap_endian_32	audio/librsound.c	/^static inline void rsnd_swap_endian_32 ( uint32_t * x )$/;"	f	file:	signature:( uint32_t * x )
rsnd_thread	audio/librsound.c	/^static void rsnd_thread ( void * thread_data )$/;"	f	file:	signature:( void * thread_data )
rsnd_thread	audio/librsound.c	/^static void rsnd_thread(void *thread_data);$/;"	p	file:	signature:(void *thread_data)
rsnd_update_server_info	audio/librsound.c	/^static int rsnd_update_server_info(rsound_t *rd)$/;"	f	file:	signature:(rsound_t *rd)
rsnd_update_server_info	audio/librsound.c	/^static int rsnd_update_server_info(rsound_t *rd);$/;"	p	file:	signature:(rsound_t *rd)
rsound	audio/rsound.h	/^   typedef struct rsound$/;"	s
rsound::__anon104::ctl_socket	audio/rsound.h	/^         volatile int ctl_socket;$/;"	m	struct:rsound::__anon104	access:public
rsound::__anon104::socket	audio/rsound.h	/^         volatile int socket;$/;"	m	struct:rsound::__anon104	access:public
rsound::__anon105::chunk_size	audio/rsound.h	/^         uint32_t chunk_size;$/;"	m	struct:rsound::__anon105	access:public
rsound::__anon105::latency	audio/rsound.h	/^         uint32_t latency;$/;"	m	struct:rsound::__anon105	access:public
rsound::__anon106::cond	audio/rsound.h	/^         scond_t *cond;$/;"	m	struct:rsound::__anon106	access:public
rsound::__anon106::cond_mutex	audio/rsound.h	/^         slock_t *cond_mutex;$/;"	m	struct:rsound::__anon106	access:public
rsound::__anon106::mutex	audio/rsound.h	/^         slock_t *mutex;$/;"	m	struct:rsound::__anon106	access:public
rsound::__anon106::thread	audio/rsound.h	/^         sthread_t *thread;$/;"	m	struct:rsound::__anon106	access:public
rsound::audio_callback	audio/rsound.h	/^      rsd_audio_callback_t audio_callback;$/;"	m	struct:rsound	access:public
rsound::backend_info	audio/rsound.h	/^      } backend_info;$/;"	m	struct:rsound	typeref:struct:rsound::__anon105	access:public
rsound::buffer	audio/rsound.h	/^      char *buffer; \/* Obsolete, but kept for backwards header compatibility. *\/$/;"	m	struct:rsound	access:public
rsound::buffer_pointer	audio/rsound.h	/^      volatile int buffer_pointer; \/* Obsolete, but kept for backwards header compatibility. *\/$/;"	m	struct:rsound	access:public
rsound::buffer_size	audio/rsound.h	/^      size_t buffer_size; $/;"	m	struct:rsound	access:public
rsound::bytes_in_buffer	audio/rsound.h	/^      int bytes_in_buffer;$/;"	m	struct:rsound	access:public
rsound::cb_data	audio/rsound.h	/^      void *cb_data;$/;"	m	struct:rsound	access:public
rsound::cb_lock	audio/rsound.h	/^      slock_t *cb_lock;$/;"	m	struct:rsound	access:public
rsound::cb_max_size	audio/rsound.h	/^      size_t cb_max_size;$/;"	m	struct:rsound	access:public
rsound::channels	audio/rsound.h	/^      uint32_t channels;$/;"	m	struct:rsound	access:public
rsound::conn	audio/rsound.h	/^      } conn;$/;"	m	struct:rsound	typeref:struct:rsound::__anon104	access:public
rsound::conn_type	audio/rsound.h	/^      int conn_type;$/;"	m	struct:rsound	access:public
rsound::delay_offset	audio/rsound.h	/^      int delay_offset;$/;"	m	struct:rsound	access:public
rsound::error_callback	audio/rsound.h	/^      rsd_error_callback_t error_callback;$/;"	m	struct:rsound	access:public
rsound::fifo_buffer	audio/rsound.h	/^      fifo_buffer_t *fifo_buffer;$/;"	m	struct:rsound	access:public
rsound::format	audio/rsound.h	/^      uint16_t format;$/;"	m	struct:rsound	access:public
rsound::has_written	audio/rsound.h	/^      volatile int has_written;$/;"	m	struct:rsound	access:public
rsound::host	audio/rsound.h	/^      char *host;$/;"	m	struct:rsound	access:public
rsound::identity	audio/rsound.h	/^      char identity[256];$/;"	m	struct:rsound	access:public
rsound::max_latency	audio/rsound.h	/^      int max_latency;$/;"	m	struct:rsound	access:public
rsound::port	audio/rsound.h	/^      char *port;$/;"	m	struct:rsound	access:public
rsound::rate	audio/rsound.h	/^      uint32_t rate;$/;"	m	struct:rsound	access:public
rsound::ready_for_data	audio/rsound.h	/^      volatile int ready_for_data;$/;"	m	struct:rsound	access:public
rsound::samplesize	audio/rsound.h	/^      int samplesize;$/;"	m	struct:rsound	access:public
rsound::start_time	audio/rsound.h	/^      int64_t start_time;$/;"	m	struct:rsound	access:public
rsound::thread	audio/rsound.h	/^      } thread;$/;"	m	struct:rsound	typeref:struct:rsound::__anon106	access:public
rsound::thread_active	audio/rsound.h	/^      volatile int thread_active;$/;"	m	struct:rsound	access:public
rsound::total_written	audio/rsound.h	/^      int64_t total_written;$/;"	m	struct:rsound	access:public
rsound_audio_cb	audio/rsound.c	/^static ssize_t rsound_audio_cb(void *data, size_t bytes, void *userdata)$/;"	f	file:	signature:(void *data, size_t bytes, void *userdata)
rsound_t	audio/rsound.h	/^   } rsound_t;$/;"	t	typeref:struct:rsound
rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:__anon50	access:public
rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:rglGcmDriver_	access:public
rt	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmRenderTargetEx rt;$/;"	m	struct:rglPlatformFramebuffer	access:public
rtParametersCount	ps3/rgl/include/Cg/CgCommon.h	/^   int rtParametersCount;$/;"	m	struct:_CGprogram	access:public
rtValid	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean rtValid;$/;"	m	struct:rglGcmDriver_	access:public
rumble	libretro-test/libretro-test.c	/^static struct retro_rumble_interface rumble;$/;"	v	typeref:struct:retro_rumble_interface	file:
run	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::run()$/;"	f	class:RetroArch	signature:()
run	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void run();$/;"	p	class:RetroArch	access:private	signature:()
runEmulator	emscripten/template.html	/^      function runEmulator(files){$/;"	f
run_loop_add_data_source	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_add_data_source(data_source_t *dataSource);$/;"	p	signature:(data_source_t *dataSource)
run_loop_add_timer	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_add_timer(timer_source_t *timer); $/;"	p	signature:(timer_source_t *timer)
run_loop_execute	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_execute(void);$/;"	p	signature:(void)
run_loop_execute_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT void (*run_loop_execute_ptr)();$/;"	v
run_loop_init	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_init(RUN_LOOP_TYPE type);$/;"	p	signature:(RUN_LOOP_TYPE type)
run_loop_init_ptr	apple/iOS/bluetooth/btdynamic.h	/^BTDIMPORT void (*run_loop_init_ptr)(RUN_LOOP_TYPE type);$/;"	v
run_loop_remove_data_source	apple/iOS/bluetooth/btstack/run_loop.h	/^int  run_loop_remove_data_source(data_source_t *dataSource);$/;"	p	signature:(data_source_t *dataSource)
run_loop_remove_timer	apple/iOS/bluetooth/btstack/run_loop.h	/^int  run_loop_remove_timer(timer_source_t *timer);$/;"	p	signature:(timer_source_t *timer)
run_loop_set_data_source_handler	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_set_data_source_handler(data_source_t *ds, int (*process)(data_source_t *_ds));$/;"	p	signature:(data_source_t *ds, int (*process)(data_source_t *_ds))
run_loop_set_timer	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_set_timer(timer_source_t *a, uint32_t timeout_in_ms);$/;"	p	signature:(timer_source_t *a, uint32_t timeout_in_ms)
run_loop_set_timer_handler	apple/iOS/bluetooth/btstack/run_loop.h	/^void run_loop_set_timer_handler(timer_source_t *ts, void (*process)(timer_source_t *_ts));$/;"	p	signature:(timer_source_t *ts, void (*process)(timer_source_t *_ts))
run_retroarch	tools/retrolaunch/main.c	/^static int run_retroarch(const char *path, const struct RunInfo *info)$/;"	f	file:	signature:(const char *path, const struct RunInfo *info)
running	frontend/platform/platform_android.h	/^   int running;$/;"	m	struct:android_app	access:public
runtimeElf	ps3/rgl/include/Cg/CgCommon.h	/^   void *runtimeElf;$/;"	m	struct:_CGprogram	access:public
runtimeParameters	ps3/rgl/include/Cg/CgCommon.h	/^   CgRuntimeParameter *runtimeParameters;$/;"	m	struct:_CGprogram	access:public
rwebcam_free	camera/rwebcam.c	/^static void rwebcam_free(void *data)$/;"	f	file:	signature:(void *data)
rwebcam_init	camera/rwebcam.c	/^static void *rwebcam_init(const char *device, uint64_t caps, unsigned width, unsigned height)$/;"	f	file:	signature:(const char *device, uint64_t caps, unsigned width, unsigned height)
rwebcam_poll	camera/rwebcam.c	/^static bool rwebcam_poll(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb,$/;"	f	file:	signature:(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb, retro_camera_frame_opengl_texture_t frame_gl_cb)
rwebcam_start	camera/rwebcam.c	/^static bool rwebcam_start(void *data)$/;"	f	file:	signature:(void *data)
rwebcam_stop	camera/rwebcam.c	/^static void rwebcam_stop(void *data)$/;"	f	file:	signature:(void *data)
rwebinput_bind_button_pressed	input/rwebinput_input.c	/^static bool rwebinput_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
rwebinput_get_capabilities	input/rwebinput_input.c	/^static uint64_t rwebinput_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
rwebinput_grab_mouse	input/rwebinput_input.c	/^static void rwebinput_grab_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
rwebinput_input	input/rwebinput_input.c	/^typedef struct rwebinput_input$/;"	s	file:
rwebinput_input::context	input/rwebinput_input.c	/^   int context;$/;"	m	struct:rwebinput_input	file:	access:public
rwebinput_input::state	input/rwebinput_input.c	/^   rwebinput_state_t state;$/;"	m	struct:rwebinput_input	file:	access:public
rwebinput_input_free	input/rwebinput_input.c	/^static void rwebinput_input_free(void *data)$/;"	f	file:	signature:(void *data)
rwebinput_input_init	input/rwebinput_input.c	/^static void *rwebinput_input_init(void)$/;"	f	file:	signature:(void)
rwebinput_input_poll	input/rwebinput_input.c	/^static void rwebinput_input_poll(void *data)$/;"	f	file:	signature:(void *data)
rwebinput_input_state	input/rwebinput_input.c	/^static int16_t rwebinput_input_state(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
rwebinput_input_t	input/rwebinput_input.c	/^} rwebinput_input_t;$/;"	t	typeref:struct:rwebinput_input	file:
rwebinput_is_pressed	input/rwebinput_input.c	/^static bool rwebinput_is_pressed(rwebinput_input_t *rwebinput, const struct retro_keybind *binds, unsigned id)$/;"	f	file:	signature:(rwebinput_input_t *rwebinput, const struct retro_keybind *binds, unsigned id)
rwebinput_key_pressed	input/rwebinput_input.c	/^static bool rwebinput_key_pressed(rwebinput_input_t *rwebinput, int key)$/;"	f	file:	signature:(rwebinput_input_t *rwebinput, int key)
rwebinput_mouse_state	input/rwebinput_input.c	/^static int16_t rwebinput_mouse_state(rwebinput_input_t *rwebinput, unsigned id)$/;"	f	file:	signature:(rwebinput_input_t *rwebinput, unsigned id)
rwebinput_state	emscripten/RWebInput.h	/^typedef struct rwebinput_state$/;"	s
rwebinput_state::keys	emscripten/RWebInput.h	/^   char keys[32];$/;"	m	struct:rwebinput_state	access:public
rwebinput_state::mouse_l	emscripten/RWebInput.h	/^   char mouse_l;$/;"	m	struct:rwebinput_state	access:public
rwebinput_state::mouse_r	emscripten/RWebInput.h	/^   char mouse_r;$/;"	m	struct:rwebinput_state	access:public
rwebinput_state::mouse_x	emscripten/RWebInput.h	/^   int mouse_x;$/;"	m	struct:rwebinput_state	access:public
rwebinput_state::mouse_y	emscripten/RWebInput.h	/^   int mouse_y;$/;"	m	struct:rwebinput_state	access:public
rwebinput_state_t	emscripten/RWebInput.h	/^} rwebinput_state_t;$/;"	t	typeref:struct:rwebinput_state
rx	android/native/jni/input_android.c	/^   int16_t rx, ry;$/;"	m	struct:__anon79	file:	access:public
rx	apple/common/hidpad/wiimote.h	/^		float rx, ry;$/;"	m	struct:joystick_t	access:public
rxml_attrib_node	compat/rxml/rxml.h	/^struct rxml_attrib_node$/;"	s
rxml_attrib_node::attrib	compat/rxml/rxml.h	/^   char *attrib;$/;"	m	struct:rxml_attrib_node	access:public
rxml_attrib_node::next	compat/rxml/rxml.h	/^   struct rxml_attrib_node *next;$/;"	m	struct:rxml_attrib_node	typeref:struct:rxml_attrib_node::rxml_attrib_node	access:public
rxml_attrib_node::value	compat/rxml/rxml.h	/^   char *value;$/;"	m	struct:rxml_attrib_node	access:public
rxml_document	compat/rxml/rxml.c	/^struct rxml_document$/;"	s	file:
rxml_document::root_node	compat/rxml/rxml.c	/^   struct rxml_node *root_node;$/;"	m	struct:rxml_document	typeref:struct:rxml_document::rxml_node	file:	access:public
rxml_document_t	compat/rxml/rxml.h	/^typedef struct rxml_document rxml_document_t;$/;"	t	typeref:struct:rxml_document
rxml_free_document	compat/rxml/rxml.c	/^void rxml_free_document(rxml_document_t *doc)$/;"	f	signature:(rxml_document_t *doc)
rxml_free_document	compat/rxml/rxml.h	/^void rxml_free_document(rxml_document_t *doc);$/;"	p	signature:(rxml_document_t *doc)
rxml_free_node	compat/rxml/rxml.c	/^static void rxml_free_node(struct rxml_node *node)$/;"	f	file:	signature:(struct rxml_node *node)
rxml_load_document	compat/rxml/rxml.c	/^rxml_document_t *rxml_load_document(const char *path)$/;"	f	signature:(const char *path)
rxml_load_document	compat/rxml/rxml.h	/^rxml_document_t *rxml_load_document(const char *path);$/;"	p	signature:(const char *path)
rxml_log_document	compat/rxml/rxml_test.c	/^static void rxml_log_document(const char *path)$/;"	f	file:	signature:(const char *path)
rxml_node	compat/rxml/rxml.h	/^struct rxml_node$/;"	s
rxml_node::attrib	compat/rxml/rxml.h	/^   struct rxml_attrib_node *attrib;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_attrib_node	access:public
rxml_node::children	compat/rxml/rxml.h	/^   struct rxml_node *children;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_node	access:public
rxml_node::data	compat/rxml/rxml.h	/^   char *data;$/;"	m	struct:rxml_node	access:public
rxml_node::name	compat/rxml/rxml.h	/^   char *name;$/;"	m	struct:rxml_node	access:public
rxml_node::next	compat/rxml/rxml.h	/^   struct rxml_node *next;$/;"	m	struct:rxml_node	typeref:struct:rxml_node::rxml_node	access:public
rxml_node::type	compat/rxml/rxml.h	/^   int type; \/\/ Dummy. Used by libxml2 compat. Is always set to 0, so XML_ELEMENT_NODE check goes through.$/;"	m	struct:rxml_node	access:public
rxml_node_attrib	compat/rxml/rxml.c	/^char *rxml_node_attrib(struct rxml_node *node, const char *attrib)$/;"	f	signature:(struct rxml_node *node, const char *attrib)
rxml_node_attrib	compat/rxml/rxml.h	/^char *rxml_node_attrib(struct rxml_node *node, const char *attrib);$/;"	p	signature:(struct rxml_node *node, const char *attrib)
rxml_parse_attrs	compat/rxml/rxml.c	/^static struct rxml_attrib_node *rxml_parse_attrs(const char *str)$/;"	f	file:	signature:(const char *str)
rxml_parse_node	compat/rxml/rxml.c	/^static struct rxml_node *rxml_parse_node(const char **ptr_)$/;"	f	file:	signature:(const char **ptr_)
rxml_parse_tag	compat/rxml/rxml.c	/^static bool rxml_parse_tag(struct rxml_node *node, const char *str)$/;"	f	file:	signature:(struct rxml_node *node, const char *str)
rxml_root_node	compat/rxml/rxml.c	/^struct rxml_node *rxml_root_node(rxml_document_t *doc)$/;"	f	signature:(rxml_document_t *doc)
rxml_root_node	compat/rxml/rxml.h	/^struct rxml_node *rxml_root_node(rxml_document_t *doc);$/;"	p	signature:(rxml_document_t *doc)
ry	android/native/jni/input_android.c	/^   int16_t rx, ry;$/;"	m	struct:__anon79	file:	access:public
ry	apple/common/hidpad/wiimote.h	/^		float rx, ry;$/;"	m	struct:joystick_t	access:public
s	console/logger/psl1ght_logger.c	/^int s;$/;"	v
sThumbLX	input/winxinput_joypad.c	/^   int16_t  sThumbLX;$/;"	m	struct:__anon86	file:	access:public
sThumbLY	input/winxinput_joypad.c	/^   int16_t  sThumbLY;$/;"	m	struct:__anon86	file:	access:public
sThumbRX	input/winxinput_joypad.c	/^   int16_t  sThumbRX;$/;"	m	struct:__anon86	file:	access:public
sThumbRY	input/winxinput_joypad.c	/^   int16_t  sThumbRY;$/;"	m	struct:__anon86	file:	access:public
s_FontLocals	gfx/fonts/xdk360_fonts.cpp	/^static Font_Locals_t s_FontLocals;$/;"	v	file:
s_dparams_buff	ps3/rgl/src/rgl_ps3_raster.cpp	/^static uint8_t s_dparams_buff[ c_rounded_size_ofrglDrawParams ] __attribute__((aligned(128)));$/;"	v	file:
s_tdefl_large_dist_extra	deps/miniz/miniz.c	/^static const mz_uint8 s_tdefl_large_dist_extra[128] = {$/;"	v	file:
s_tdefl_large_dist_sym	deps/miniz/miniz.c	/^static const mz_uint8 s_tdefl_large_dist_sym[128] = {$/;"	v	file:
s_tdefl_len_extra	deps/miniz/miniz.c	/^static const mz_uint8 s_tdefl_len_extra[256] = {$/;"	v	file:
s_tdefl_len_sym	deps/miniz/miniz.c	/^static const mz_uint16 s_tdefl_len_sym[256] = {$/;"	v	file:
s_tdefl_num_probes	deps/miniz/miniz.c	/^static const mz_uint s_tdefl_num_probes[11] = { 0, 1, 6, 32,  16, 32, 128, 256,  512, 768, 1500 };$/;"	v	file:
s_tdefl_packed_code_size_syms_swizzle	deps/miniz/miniz.c	/^static mz_uint8 s_tdefl_packed_code_size_syms_swizzle[] = { 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 };$/;"	v	file:
s_tdefl_small_dist_extra	deps/miniz/miniz.c	/^static const mz_uint8 s_tdefl_small_dist_extra[512] = {$/;"	v	file:
s_tdefl_small_dist_sym	deps/miniz/miniz.c	/^static const mz_uint8 s_tdefl_small_dist_sym[512] = {$/;"	v	file:
salamander_init_settings	frontend/platform/platform_gx.c	/^static void salamander_init_settings(void)$/;"	f	file:	signature:(void)
salamander_init_settings	frontend/platform/platform_ps3.c	/^static void salamander_init_settings(void)$/;"	f	file:	signature:(void)
salamander_init_settings	frontend/platform/platform_xdk.c	/^static void salamander_init_settings(void)$/;"	f	file:	signature:(void)
sample_batch_cb	netplay.h	/^   retro_audio_sample_batch_t sample_batch_cb;$/;"	m	struct:retro_callbacks	access:public
sample_cb	netplay.h	/^   retro_audio_sample_t sample_cb;$/;"	m	struct:retro_callbacks	access:public
sample_rate	libretro.h	/^   double sample_rate;     \/\/ Sampling rate of audio.$/;"	m	struct:retro_system_timing	access:public
sample_rate	record/ffemu.c	/^   unsigned sample_rate;$/;"	m	struct:ff_config_param	file:	access:public
sample_size	record/ffemu.c	/^   unsigned sample_size;$/;"	m	struct:ff_audio_info	file:	access:public
samplerCount	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int         samplerCount;$/;"	m	struct:_CGprogram	access:public
samplerIndices	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *       samplerIndices;$/;"	m	struct:_CGprogram	access:public
samplerSetter	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction samplerSetter;$/;"	m	struct:CgRuntimeParameter	access:public
samplerUnits	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *       samplerUnits;$/;"	m	struct:_CGprogram	access:public
samplerValuesLocation	ps3/rgl/include/Cg/CgCommon.h	/^   unsigned int *samplerValuesLocation;$/;"	m	struct:_CGprogram	access:public
samplerate	record/ffemu.h	/^   double samplerate;$/;"	m	struct:ffemu_params	access:public
samples	audio/ext/rarch_dsp.h	/^   const float *samples;$/;"	m	struct:rarch_dsp_input	access:public
samples	audio/ext/rarch_dsp.h	/^   const float *samples;$/;"	m	struct:rarch_dsp_output	access:public
samples	emscripten/library_rwebaudio.js	/^      var samples = size \/ 8;$/;"	v
samplesize	audio/rsound.h	/^      int samplesize;$/;"	m	struct:rsound	access:public
sanitizeLibretroPath	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	private static String sanitizeLibretroPath(String path)$/;"	m	class:UserPreferences	file:	access:private	signature:(String path)
saveDLctx	gx/gx_video_inl.h	/^	u8 saveDLctx;$/;"	m	struct:__gx_regdef	access:public
save_auto_state	retroarch.c	/^static void save_auto_state(void)$/;"	f	file:	signature:(void)
save_files	retroarch.c	/^static inline void save_files(void)$/;"	f	file:	signature:(void)
save_keybind	settings.c	/^static void save_keybind(config_file_t *conf, const char *prefix, const char *base,$/;"	f	file:	signature:(config_file_t *conf, const char *prefix, const char *base, const struct retro_keybind *bind)
save_keybind_axis	settings.c	/^static void save_keybind_axis(config_file_t *conf, const char *prefix, const char *base,$/;"	f	file:	signature:(config_file_t *conf, const char *prefix, const char *base, const struct retro_keybind *bind)
save_keybind_hat	settings.c	/^static void save_keybind_hat(config_file_t *conf, const char *key, const struct retro_keybind *bind)$/;"	f	file:	signature:(config_file_t *conf, const char *key, const struct retro_keybind *bind)
save_keybind_joykey	settings.c	/^static void save_keybind_joykey(config_file_t *conf, const char *prefix, const char *base,$/;"	f	file:	signature:(config_file_t *conf, const char *prefix, const char *base, const struct retro_keybind *bind)
save_keybind_key	settings.c	/^static void save_keybind_key(config_file_t *conf, const char *prefix, const char *base,$/;"	f	file:	signature:(config_file_t *conf, const char *prefix, const char *base, const struct retro_keybind *bind)
save_keybinds_player	settings.c	/^static void save_keybinds_player(config_file_t *conf, unsigned player)$/;"	f	file:	signature:(config_file_t *conf, unsigned player)
save_ram_file	file.c	/^void save_ram_file(const char *path, int type)$/;"	f	signature:(const char *path, int type)
save_ram_file	file.h	/^void save_ram_file(const char *path, int type);$/;"	p	signature:(const char *path, int type)
save_state	file.c	/^bool save_state(const char *path)$/;"	f	signature:(const char *path)
save_state	file.h	/^bool save_state(const char *path);$/;"	p	signature:(const char *path)
saved_state	gfx/omap_gfx.c	/^  omapfb_state_t* saved_state;$/;"	m	struct:omapfb_data	file:	access:public
savefile_dir	general.h	/^   char savefile_dir[PATH_MAX];$/;"	m	struct:global	access:public
savefile_name_asrm	general.h	/^   char savefile_name_asrm[PATH_MAX];$/;"	m	struct:global	access:public
savefile_name_bsrm	general.h	/^   char savefile_name_bsrm[PATH_MAX];$/;"	m	struct:global	access:public
savefile_name_psrm	general.h	/^   char savefile_name_psrm[PATH_MAX];$/;"	m	struct:global	access:public
savefile_name_rtc	general.h	/^   char savefile_name_rtc[PATH_MAX]; \/\/ Make sure that fill_pathname has space.$/;"	m	struct:global	access:public
savefile_name_srm	general.h	/^   char savefile_name_srm[PATH_MAX];$/;"	m	struct:global	access:public
savestate_auto_index	config.def.h	/^static const bool savestate_auto_index = false;$/;"	v
savestate_auto_index	general.h	/^   bool savestate_auto_index;$/;"	m	struct:settings	access:public
savestate_auto_load	config.def.h	/^static const bool savestate_auto_load = true;$/;"	v
savestate_auto_load	general.h	/^   bool savestate_auto_load;$/;"	m	struct:settings	access:public
savestate_auto_save	config.def.h	/^static const bool savestate_auto_save = false;$/;"	v
savestate_auto_save	general.h	/^   bool savestate_auto_save;$/;"	m	struct:settings	access:public
savestate_dir	console/rarch_console.h	/^   char savestate_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
savestate_dir	general.h	/^   char savestate_dir[PATH_MAX];$/;"	m	struct:global	access:public
savestate_name	general.h	/^   char savestate_name[PATH_MAX];$/;"	m	struct:global	access:public
sbyte	apple/common/hidpad/wiimote.h	/^	typedef char sbyte;$/;"	t
scale	general.h	/^      unsigned scale;$/;"	m	struct:global::__anon237	access:public
scale	gfx/gfx_common.h	/^   float scale;$/;"	m	struct:__anon204	access:public
scale	gx/gx_video.h	/^   unsigned scale;$/;"	m	struct:gx_video	access:public
scale	input/overlay.c	/^   float scale;$/;"	m	struct:overlay	file:	access:public
scale_factor	gfx/fonts/bitmapfont.c	/^   unsigned scale_factor;$/;"	m	struct:font_renderer	file:	access:public
scale_factor	record/ffemu.c	/^   unsigned scale_factor;$/;"	m	struct:ff_config_param	file:	access:public
scale_integer	config.def.h	/^static const bool scale_integer = false;$/;"	v
scale_integer	general.h	/^      bool scale_integer;$/;"	m	struct:settings::__anon227	access:public
scale_type_to_str	gfx/shader_parse.c	/^static const char *scale_type_to_str(enum gfx_scale_type type)$/;"	f	file:	signature:(enum gfx_scale_type type)
scale_x	gfx/shader_parse.h	/^   float scale_x;$/;"	m	struct:gfx_fbo_scale	access:public
scale_y	gfx/shader_parse.h	/^   float scale_y;$/;"	m	struct:gfx_fbo_scale	access:public
scaled	gfx/scaler/scaler.h	/^   } scaled;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon210	access:public
scaler	camera/video4linux2.c	/^   struct scaler_ctx scaler;$/;"	m	struct:video4linux	typeref:struct:video4linux::scaler_ctx	file:	access:public
scaler	driver.h	/^   struct scaler_ctx scaler;$/;"	m	struct:driver	typeref:struct:driver::scaler_ctx	access:public
scaler	general.h	/^      struct scaler_ctx scaler;$/;"	m	struct:global::__anon237	typeref:struct:global::__anon237::scaler_ctx	access:public
scaler	gfx/gl_common.h	/^   struct scaler_ctx scaler;$/;"	m	struct:gl	typeref:struct:gl::scaler_ctx	access:public
scaler	gfx/lima_gfx.c	/^   struct scaler_ctx scaler;$/;"	m	struct:lima_video	typeref:struct:lima_video::scaler_ctx	file:	access:public
scaler	gfx/sdl_gfx.c	/^   struct scaler_ctx scaler;$/;"	m	struct:sdl_video	typeref:struct:sdl_video::scaler_ctx	file:	access:public
scaler	record/ffemu.c	/^   struct scaler_ctx scaler;$/;"	m	struct:ff_video_info	typeref:struct:ff_video_info::scaler_ctx	file:	access:public
scaler_alloc	gfx/scaler/scaler.c	/^void *scaler_alloc(size_t elem_size, size_t size)$/;"	f	signature:(size_t elem_size, size_t size)
scaler_alloc	gfx/scaler/scaler.h	/^void *scaler_alloc(size_t elem_size, size_t size);$/;"	p	signature:(size_t elem_size, size_t size)
scaler_argb8888_horiz	gfx/scaler/scaler_int.c	/^void scaler_argb8888_horiz(const struct scaler_ctx *ctx, const void *input_, int stride)$/;"	f	signature:(const struct scaler_ctx *ctx, const void *input_, int stride)
scaler_argb8888_horiz	gfx/scaler/scaler_int.h	/^void scaler_argb8888_horiz(const struct scaler_ctx *ctx, const void *input, int stride);$/;"	p	signature:(const struct scaler_ctx *ctx, const void *input, int stride)
scaler_argb8888_point_special	gfx/scaler/scaler_int.c	/^void scaler_argb8888_point_special(const struct scaler_ctx *ctx,$/;"	f	signature:(const struct scaler_ctx *ctx, void *output_, const void *input_, int out_width, int out_height, int in_width, int in_height, int out_stride, int in_stride)
scaler_argb8888_point_special	gfx/scaler/scaler_int.h	/^void scaler_argb8888_point_special(const struct scaler_ctx *ctx,$/;"	p	signature:(const struct scaler_ctx *ctx, void *output, const void *input, int out_width, int out_height, int in_width, int in_height, int out_stride, int in_stride)
scaler_argb8888_vert	gfx/scaler/scaler_int.c	/^void scaler_argb8888_vert(const struct scaler_ctx *ctx, void *output_, int stride)$/;"	f	signature:(const struct scaler_ctx *ctx, void *output_, int stride)
scaler_argb8888_vert	gfx/scaler/scaler_int.h	/^void scaler_argb8888_vert(const struct scaler_ctx *ctx, void *output, int stride);$/;"	p	signature:(const struct scaler_ctx *ctx, void *output, int stride)
scaler_ctx	gfx/scaler/scaler.h	/^struct scaler_ctx$/;"	s
scaler_ctx::__anon209::frame	gfx/scaler/scaler.h	/^      uint32_t *frame;$/;"	m	struct:scaler_ctx::__anon209	access:public
scaler_ctx::__anon209::stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon209	access:public
scaler_ctx::__anon210::frame	gfx/scaler/scaler.h	/^      uint64_t *frame;$/;"	m	struct:scaler_ctx::__anon210	access:public
scaler_ctx::__anon210::height	gfx/scaler/scaler.h	/^      int height;$/;"	m	struct:scaler_ctx::__anon210	access:public
scaler_ctx::__anon210::stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon210	access:public
scaler_ctx::__anon210::width	gfx/scaler/scaler.h	/^      int width;$/;"	m	struct:scaler_ctx::__anon210	access:public
scaler_ctx::__anon211::frame	gfx/scaler/scaler.h	/^      uint32_t *frame;$/;"	m	struct:scaler_ctx::__anon211	access:public
scaler_ctx::__anon211::stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon211	access:public
scaler_ctx::direct_pixconv	gfx/scaler/scaler.h	/^   void (*direct_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::horiz	gfx/scaler/scaler.h	/^   struct scaler_filter horiz, vert;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::scaler_filter	access:public
scaler_ctx::in_fmt	gfx/scaler/scaler.h	/^   enum scaler_pix_fmt in_fmt;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_pix_fmt	access:public
scaler_ctx::in_height	gfx/scaler/scaler.h	/^   int in_height;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::in_pixconv	gfx/scaler/scaler.h	/^   void (*in_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::in_stride	gfx/scaler/scaler.h	/^   int in_stride;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::in_width	gfx/scaler/scaler.h	/^   int in_width;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::input	gfx/scaler/scaler.h	/^   } input;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon209	access:public
scaler_ctx::out_fmt	gfx/scaler/scaler.h	/^   enum scaler_pix_fmt out_fmt;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_pix_fmt	access:public
scaler_ctx::out_height	gfx/scaler/scaler.h	/^   int out_height;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::out_pixconv	gfx/scaler/scaler.h	/^   void (*out_pixconv)(void*, const void*, int, int, int, int);$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::out_stride	gfx/scaler/scaler.h	/^   int out_stride;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::out_width	gfx/scaler/scaler.h	/^   int out_width;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::output	gfx/scaler/scaler.h	/^   } output;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon211	access:public
scaler_ctx::scaled	gfx/scaler/scaler.h	/^   } scaled;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::__anon210	access:public
scaler_ctx::scaler_horiz	gfx/scaler/scaler.h	/^   void (*scaler_horiz)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::scaler_special	gfx/scaler/scaler.h	/^   void (*scaler_special)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::scaler_type	gfx/scaler/scaler.h	/^   enum scaler_type scaler_type;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_type	access:public
scaler_ctx::scaler_vert	gfx/scaler/scaler.h	/^   void (*scaler_vert)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::unscaled	gfx/scaler/scaler.h	/^   bool unscaled;$/;"	m	struct:scaler_ctx	access:public
scaler_ctx::vert	gfx/scaler/scaler.h	/^   struct scaler_filter horiz, vert;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::	access:public
scaler_ctx_gen_filter	gfx/scaler/scaler.c	/^bool scaler_ctx_gen_filter(struct scaler_ctx *ctx)$/;"	f	signature:(struct scaler_ctx *ctx)
scaler_ctx_gen_filter	gfx/scaler/scaler.h	/^bool scaler_ctx_gen_filter(struct scaler_ctx *ctx);$/;"	p	signature:(struct scaler_ctx *ctx)
scaler_ctx_gen_reset	gfx/scaler/scaler.c	/^void scaler_ctx_gen_reset(struct scaler_ctx *ctx)$/;"	f	signature:(struct scaler_ctx *ctx)
scaler_ctx_gen_reset	gfx/scaler/scaler.h	/^void scaler_ctx_gen_reset(struct scaler_ctx *ctx);$/;"	p	signature:(struct scaler_ctx *ctx)
scaler_ctx_scale	gfx/scaler/scaler.c	/^void scaler_ctx_scale(struct scaler_ctx *ctx,$/;"	f	signature:(struct scaler_ctx *ctx, void *output, const void *input)
scaler_ctx_scale	gfx/scaler/scaler.h	/^void scaler_ctx_scale(struct scaler_ctx *ctx,$/;"	p	signature:(struct scaler_ctx *ctx, void *output, const void *input)
scaler_filter	gfx/scaler/scaler.h	/^struct scaler_filter$/;"	s
scaler_filter::filter	gfx/scaler/scaler.h	/^   int16_t *filter;$/;"	m	struct:scaler_filter	access:public
scaler_filter::filter_len	gfx/scaler/scaler.h	/^   int filter_len;$/;"	m	struct:scaler_filter	access:public
scaler_filter::filter_pos	gfx/scaler/scaler.h	/^   int *filter_pos;$/;"	m	struct:scaler_filter	access:public
scaler_filter::filter_stride	gfx/scaler/scaler.h	/^   int filter_stride;$/;"	m	struct:scaler_filter	access:public
scaler_free	gfx/scaler/scaler.c	/^void scaler_free(void *ptr)$/;"	f	signature:(void *ptr)
scaler_free	gfx/scaler/scaler.h	/^void scaler_free(void *ptr);$/;"	p	signature:(void *ptr)
scaler_gen_filter	gfx/scaler/filter.c	/^bool scaler_gen_filter(struct scaler_ctx *ctx)$/;"	f	signature:(struct scaler_ctx *ctx)
scaler_gen_filter	gfx/scaler/filter.h	/^bool scaler_gen_filter(struct scaler_ctx *ctx);$/;"	p	signature:(struct scaler_ctx *ctx)
scaler_horiz	gfx/scaler/scaler.h	/^   void (*scaler_horiz)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaler_mode	gfx/context/sunxi_disp_ioctl.h	/^	__bool scaler_mode[2];$/;"	m	struct:__anon203	access:public
scaler_out	driver.h	/^   void *scaler_out;$/;"	m	struct:driver	access:public
scaler_out	general.h	/^      uint16_t *scaler_out;$/;"	m	struct:global::__anon237	access:public
scaler_pix_fmt	gfx/scaler/scaler.h	/^enum scaler_pix_fmt$/;"	g
scaler_special	gfx/scaler/scaler.h	/^   void (*scaler_special)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaler_type	gfx/scaler/scaler.h	/^   enum scaler_type scaler_type;$/;"	m	struct:scaler_ctx	typeref:enum:scaler_ctx::scaler_type	access:public
scaler_type	gfx/scaler/scaler.h	/^enum scaler_type$/;"	g
scaler_vert	gfx/scaler/scaler.h	/^   void (*scaler_vert)(const struct scaler_ctx*,$/;"	m	struct:scaler_ctx	access:public
scaling_factor	gfx/fonts/fonts.h	/^   unsigned scaling_factor;$/;"	m	struct:font_output	access:public
scanBuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint scanBuffer;	\/\/ 0, 1, or 2$/;"	m	struct:__anon50	access:public
sciBRcorner	gx/gx_video_inl.h	/^	u32 sciBRcorner;$/;"	m	struct:__gx_regdef	access:public
sciTLcorner	gx/gx_video_inl.h	/^	u32 sciTLcorner;$/;"	m	struct:__gx_regdef	access:public
scissor	gfx/vg.c	/^   VGint scissor[4];$/;"	m	struct:__anon225	file:	access:public
scn_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t scn_win; \/*  sceen region *\/$/;"	m	struct:__anon193	access:public
scn_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t scn_win; \/* screen window *\/$/;"	m	struct:__anon187	access:public
scond	thread.c	/^struct scond$/;"	s	file:
scond::cond	thread.c	/^   pthread_cond_t cond;$/;"	m	struct:scond	file:	access:public
scond::event	thread.c	/^   HANDLE event;$/;"	m	struct:scond	file:	access:public
scond_broadcast	thread.c	/^int scond_broadcast(scond_t *cond)$/;"	f	signature:(scond_t *cond)
scond_broadcast	thread.h	/^int scond_broadcast(scond_t *cond);$/;"	p	signature:(scond_t *cond)
scond_free	thread.c	/^void scond_free(scond_t *cond)$/;"	f	signature:(scond_t *cond)
scond_free	thread.h	/^void scond_free(scond_t *cond);$/;"	p	signature:(scond_t *cond)
scond_new	thread.c	/^scond_t *scond_new(void)$/;"	f	signature:(void)
scond_new	thread.h	/^scond_t *scond_new(void);$/;"	p	signature:(void)
scond_signal	thread.c	/^void scond_signal(scond_t *cond)$/;"	f	signature:(scond_t *cond)
scond_signal	thread.h	/^void scond_signal(scond_t *cond);$/;"	p	signature:(scond_t *cond)
scond_t	thread.h	/^typedef struct scond scond_t;$/;"	t	typeref:struct:scond
scond_wait	thread.c	/^void scond_wait(scond_t *cond, slock_t *lock)$/;"	f	signature:(scond_t *cond, slock_t *lock)
scond_wait	thread.h	/^void scond_wait(scond_t *cond, slock_t *lock);$/;"	p	signature:(scond_t *cond, slock_t *lock)
scond_wait_timeout	thread.c	/^bool scond_wait_timeout(scond_t *cond, slock_t *lock, int64_t timeout_us)$/;"	f	signature:(scond_t *cond, slock_t *lock, int64_t timeout_us)
scond_wait_timeout	thread.h	/^bool scond_wait_timeout(scond_t *cond, slock_t *lock, int64_t timeout_us);$/;"	p	signature:(scond_t *cond, slock_t *lock, int64_t timeout_us)
screen	general.h	/^      } screen;$/;"	m	struct:global::__anon242	typeref:struct:global::__anon242::__anon243	access:public
screen	gfx/lima_gfx.c	/^   SDL_Surface *screen;$/;"	m	struct:lima_video	file:	access:public
screen	gfx/sdl_gfx.c	/^   SDL_Surface *screen;$/;"	m	struct:sdl_video	file:	access:public
screen	xenon/xenon360_video.c	/^   unsigned char *screen;$/;"	m	struct:gl	file:	access:public
screen_buf	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_buffer_t screen_buf;$/;"	m	class:ButtonMap	access:private
screen_ctx	gfx/context/bbqnx_ctx.c	/^screen_context_t screen_ctx;$/;"	v
screen_cxt	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_context_t screen_cxt;$/;"	m	class:ButtonMap	access:private
screen_disp	gfx/context/bbqnx_ctx.c	/^static screen_display_t screen_disp;$/;"	v	file:
screen_height	blackberry-qnx/qnx_input.c	/^static unsigned screen_width, screen_height;$/;"	v	file:
screen_height	gfx/d3d9/d3d9.hpp	/^      unsigned screen_height;$/;"	m	class:D3DVideo	access:private
screen_resolution	blackberry-qnx/bb10/src/ButtonMap.h	/^    int screen_resolution[2];$/;"	m	class:ButtonMap	access:private
screen_size	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rectsz_t screen_size;$/;"	m	struct:__anon194	access:public
screen_width	blackberry-qnx/qnx_input.c	/^static unsigned screen_width, screen_height;$/;"	v	file:
screen_width	gfx/d3d9/d3d9.hpp	/^      unsigned screen_width;$/;"	m	class:D3DVideo	access:private
screen_win	blackberry-qnx/bb10/src/ButtonMap.h	/^    screen_window_t screen_win;$/;"	m	class:ButtonMap	access:private
screen_win	gfx/context/bbqnx_ctx.c	/^screen_window_t screen_win;$/;"	v
screen_x	apple/common/apple_input.h	/^   int16_t screen_x, screen_y;$/;"	m	struct:__anon159	access:public
screen_y	apple/common/apple_input.h	/^   int16_t screen_x, screen_y;$/;"	m	struct:__anon159	access:public
screenshot_directory	general.h	/^   char screenshot_directory[PATH_MAX];$/;"	m	struct:settings	access:public
screenshot_dump	screenshot.c	/^bool screenshot_dump(const char *folder, const void *frame,$/;"	f	signature:(const char *folder, const void *frame, unsigned width, unsigned height, int pitch, bool bgr24)
screenshot_dump	screenshot.h	/^bool screenshot_dump(const char *folder, const void *frame, $/;"	p	signature:(const char *folder, const void *frame, unsigned width, unsigned height, int pitch, bool bgr24)
screenshot_dump	xdk/screenshot_xdk1.c	/^bool screenshot_dump(const char *folder, const void *frame,$/;"	f	signature:(const char *folder, const void *frame, unsigned width, unsigned height, int pitch, bool bgr24)
screenshot_generate_filename	screenshot.h	/^void screenshot_generate_filename(char *filename, size_t size);$/;"	p	signature:(char *filename, size_t size)
script	gfx/shader_parse.h	/^   char *script; \/\/ Dynamically allocated. Must be free'd. Only used by XML.$/;"	m	struct:gfx_shader	access:public
script	gfx/state_tracker.h	/^   const char *script;$/;"	m	struct:state_tracker_info	access:public
script_class	gfx/shader_parse.h	/^   char script_class[512];$/;"	m	struct:gfx_shader	access:public
script_class	gfx/state_tracker.h	/^   const char *script_class;$/;"	m	struct:state_tracker_info	access:public
script_is_file	gfx/state_tracker.h	/^   bool script_is_file;$/;"	m	struct:state_tracker_info	access:public
script_path	gfx/shader_parse.h	/^   char script_path[PATH_MAX];$/;"	m	struct:gfx_shader	access:public
scroll_accel	frontend/menu/menu_common.h	/^   unsigned scroll_accel;$/;"	m	struct:__anon25	access:public
scroll_indices	frontend/menu/menu_common.h	/^   size_t scroll_indices[2 * (26 + 2) + 1];$/;"	m	struct:__anon25	access:public
scroll_indices_size	frontend/menu/menu_common.h	/^   unsigned scroll_indices_size;$/;"	m	struct:__anon25	access:public
sdl_analog_device_state	input/sdl_input.c	/^static int16_t sdl_analog_device_state(sdl_input_t *sdl, const struct retro_keybind **binds,$/;"	f	file:	signature:(sdl_input_t *sdl, const struct retro_keybind **binds, unsigned port_num, unsigned index, unsigned id)
sdl_analog_pressed	input/sdl_input.c	/^static int16_t sdl_analog_pressed(sdl_input_t *sdl, const struct retro_keybind *binds,$/;"	f	file:	signature:(sdl_input_t *sdl, const struct retro_keybind *binds, unsigned index, unsigned id)
sdl_apply_state_changes	gfx/sdl_gfx.c	/^static void sdl_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
sdl_audio	audio/sdl_audio.c	/^typedef struct sdl_audio$/;"	s	file:
sdl_audio::buffer	audio/sdl_audio.c	/^   fifo_buffer_t *buffer;$/;"	m	struct:sdl_audio	file:	access:public
sdl_audio::cond	audio/sdl_audio.c	/^   scond_t *cond;$/;"	m	struct:sdl_audio	file:	access:public
sdl_audio::lock	audio/sdl_audio.c	/^   slock_t *lock;$/;"	m	struct:sdl_audio	file:	access:public
sdl_audio::nonblock	audio/sdl_audio.c	/^   bool nonblock;$/;"	m	struct:sdl_audio	file:	access:public
sdl_audio_cb	audio/sdl_audio.c	/^static void sdl_audio_cb(void *data, Uint8 *stream, int len)$/;"	f	file:	signature:(void *data, Uint8 *stream, int len)
sdl_audio_free	audio/sdl_audio.c	/^static void sdl_audio_free(void *data)$/;"	f	file:	signature:(void *data)
sdl_audio_init	audio/sdl_audio.c	/^static void *sdl_audio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
sdl_audio_set_nonblock_state	audio/sdl_audio.c	/^static void sdl_audio_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
sdl_audio_start	audio/sdl_audio.c	/^static bool sdl_audio_start(void *data)$/;"	f	file:	signature:(void *data)
sdl_audio_stop	audio/sdl_audio.c	/^static bool sdl_audio_stop(void *data)$/;"	f	file:	signature:(void *data)
sdl_audio_t	audio/sdl_audio.c	/^} sdl_audio_t;$/;"	t	typeref:struct:sdl_audio	file:
sdl_audio_write	audio/sdl_audio.c	/^static ssize_t sdl_audio_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
sdl_bind_button_pressed	input/sdl_input.c	/^static bool sdl_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
sdl_get_capabilities	input/sdl_input.c	/^static uint64_t sdl_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
sdl_get_joypad_driver	input/sdl_input.c	/^static const rarch_joypad_driver_t *sdl_get_joypad_driver(void *data)$/;"	f	file:	signature:(void *data)
sdl_gfx_alive	gfx/sdl_gfx.c	/^static bool sdl_gfx_alive(void *data)$/;"	f	file:	signature:(void *data)
sdl_gfx_focus	gfx/sdl_gfx.c	/^static bool sdl_gfx_focus(void *data)$/;"	f	file:	signature:(void *data)
sdl_gfx_frame	gfx/sdl_gfx.c	/^static bool sdl_gfx_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
sdl_gfx_free	gfx/sdl_gfx.c	/^static void sdl_gfx_free(void *data)$/;"	f	file:	signature:(void *data)
sdl_gfx_get_poke_interface	gfx/sdl_gfx.c	/^static void sdl_gfx_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
sdl_gfx_get_poke_interface	gfx/sdl_gfx.c	/^static void sdl_gfx_get_poke_interface(void *data, const video_poke_interface_t **iface);$/;"	p	file:	signature:(void *data, const video_poke_interface_t **iface)
sdl_gfx_init	gfx/sdl_gfx.c	/^static void *sdl_gfx_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
sdl_gfx_set_handles	gfx/sdl_gfx.c	/^static void sdl_gfx_set_handles(void)$/;"	f	file:	signature:(void)
sdl_gfx_set_nonblock_state	gfx/sdl_gfx.c	/^static void sdl_gfx_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
sdl_gfx_viewport_info	gfx/sdl_gfx.c	/^static void sdl_gfx_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
sdl_init_font	gfx/sdl_gfx.c	/^static void sdl_init_font(sdl_video_t *vid, const char *font_path, unsigned font_size)$/;"	f	file:	signature:(sdl_video_t *vid, const char *font_path, unsigned font_size)
sdl_input	input/sdl_input.c	/^typedef struct sdl_input$/;"	s	file:
sdl_input::joypad	input/sdl_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_abs_x	input/sdl_input.c	/^   int mouse_abs_x, mouse_abs_y;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_abs_y	input/sdl_input.c	/^   int mouse_abs_x, mouse_abs_y;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_l	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_m	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_r	input/sdl_input.c	/^   int mouse_l, mouse_r, mouse_m;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_x	input/sdl_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:sdl_input	file:	access:public
sdl_input::mouse_y	input/sdl_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:sdl_input	file:	access:public
sdl_input_free	input/sdl_input.c	/^static void sdl_input_free(void *data)$/;"	f	file:	signature:(void *data)
sdl_input_init	input/sdl_input.c	/^static void *sdl_input_init(void)$/;"	f	file:	signature:(void)
sdl_input_poll	input/sdl_input.c	/^static void sdl_input_poll(void *data)$/;"	f	file:	signature:(void *data)
sdl_input_state	input/sdl_input.c	/^static int16_t sdl_input_state(void *data_, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data_, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
sdl_input_t	input/sdl_input.c	/^} sdl_input_t;$/;"	t	typeref:struct:sdl_input	file:
sdl_is_pressed	input/sdl_input.c	/^static bool sdl_is_pressed(sdl_input_t *sdl, unsigned port_num, const struct retro_keybind *binds, unsigned key)$/;"	f	file:	signature:(sdl_input_t *sdl, unsigned port_num, const struct retro_keybind *binds, unsigned key)
sdl_joypad	input/sdl_joypad.c	/^const rarch_joypad_driver_t sdl_joypad = {$/;"	v
sdl_joypad	input/sdl_joypad.c	/^struct sdl_joypad$/;"	s	file:
sdl_joypad::joypad	input/sdl_joypad.c	/^   SDL_Joystick *joypad;$/;"	m	struct:sdl_joypad	file:	access:public
sdl_joypad::num_axes	input/sdl_joypad.c	/^   unsigned num_axes;$/;"	m	struct:sdl_joypad	file:	access:public
sdl_joypad::num_buttons	input/sdl_joypad.c	/^   unsigned num_buttons;$/;"	m	struct:sdl_joypad	file:	access:public
sdl_joypad::num_hats	input/sdl_joypad.c	/^   unsigned num_hats;$/;"	m	struct:sdl_joypad	file:	access:public
sdl_joypad_axis	input/sdl_joypad.c	/^static int16_t sdl_joypad_axis(unsigned port, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port, uint32_t joyaxis)
sdl_joypad_button	input/sdl_joypad.c	/^static bool sdl_joypad_button(unsigned port, uint16_t joykey)$/;"	f	file:	signature:(unsigned port, uint16_t joykey)
sdl_joypad_destroy	input/sdl_joypad.c	/^static void sdl_joypad_destroy(void)$/;"	f	file:	signature:(void)
sdl_joypad_device_state	input/sdl_input.c	/^static int16_t sdl_joypad_device_state(sdl_input_t *sdl, const struct retro_keybind **binds_, $/;"	f	file:	signature:(sdl_input_t *sdl, const struct retro_keybind **binds_, unsigned port_num, unsigned id)
sdl_joypad_init	input/sdl_joypad.c	/^static bool sdl_joypad_init(void)$/;"	f	file:	signature:(void)
sdl_joypad_name	input/sdl_joypad.c	/^static const char *sdl_joypad_name(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
sdl_joypad_poll	input/sdl_joypad.c	/^static void sdl_joypad_poll(void)$/;"	f	file:	signature:(void)
sdl_joypad_query_pad	input/sdl_joypad.c	/^static bool sdl_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
sdl_key_pressed	input/sdl_input.c	/^static bool sdl_key_pressed(int key)$/;"	f	file:	signature:(int key)
sdl_keyboard_device_state	input/sdl_input.c	/^static int16_t sdl_keyboard_device_state(sdl_input_t *sdl, unsigned id)$/;"	f	file:	signature:(sdl_input_t *sdl, unsigned id)
sdl_lightgun_device_state	input/sdl_input.c	/^static int16_t sdl_lightgun_device_state(sdl_input_t *sdl, unsigned id)$/;"	f	file:	signature:(sdl_input_t *sdl, unsigned id)
sdl_mouse_device_state	input/sdl_input.c	/^static int16_t sdl_mouse_device_state(sdl_input_t *sdl, unsigned id)$/;"	f	file:	signature:(sdl_input_t *sdl, unsigned id)
sdl_pointer_device_state	input/sdl_input.c	/^static int16_t sdl_pointer_device_state(sdl_input_t *sdl, unsigned index, unsigned id, bool screen)$/;"	f	file:	signature:(sdl_input_t *sdl, unsigned index, unsigned id, bool screen)
sdl_poke_interface	gfx/sdl_gfx.c	/^static const video_poke_interface_t sdl_poke_interface = {$/;"	v	file:
sdl_poll_mouse	input/sdl_input.c	/^static void sdl_poll_mouse(sdl_input_t *sdl)$/;"	f	file:	signature:(sdl_input_t *sdl)
sdl_render_msg	gfx/sdl_gfx.c	/^static void sdl_render_msg(sdl_video_t *vid, SDL_Surface *buffer,$/;"	f	file:	signature:(sdl_video_t *vid, SDL_Surface *buffer, const char *msg, unsigned width, unsigned height, const SDL_PixelFormat *fmt)
sdl_set_aspect_ratio	gfx/sdl_gfx.c	/^static void sdl_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
sdl_set_osd_msg	gfx/sdl_gfx.c	/^static void sdl_set_osd_msg(void *data, const char *msg, void *userdata)$/;"	f	file:	signature:(void *data, const char *msg, void *userdata)
sdl_set_rumble	input/sdl_input.c	/^static bool sdl_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
sdl_set_texture_enable	gfx/sdl_gfx.c	/^static void sdl_set_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
sdl_set_texture_frame	gfx/sdl_gfx.c	/^static void sdl_set_texture_frame(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
sdl_set_texture_frame	gfx/sdl_gfx.c	/^static void sdl_set_texture_frame(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha);$/;"	p	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
sdl_show_mouse	gfx/sdl_gfx.c	/^static void sdl_show_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
sdl_video	gfx/sdl_gfx.c	/^typedef struct sdl_video$/;"	s	file:
sdl_video::font	gfx/sdl_gfx.c	/^   void *font;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::font_b	gfx/sdl_gfx.c	/^   uint8_t font_b;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::font_driver	gfx/sdl_gfx.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::font_g	gfx/sdl_gfx.c	/^   uint8_t font_g;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::font_r	gfx/sdl_gfx.c	/^   uint8_t font_r;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::last_height	gfx/sdl_gfx.c	/^   unsigned last_height;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::last_width	gfx/sdl_gfx.c	/^   unsigned last_width;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::quitting	gfx/sdl_gfx.c	/^   bool quitting;$/;"	m	struct:sdl_video	file:	access:public
sdl_video::scaler	gfx/sdl_gfx.c	/^   struct scaler_ctx scaler;$/;"	m	struct:sdl_video	typeref:struct:sdl_video::scaler_ctx	file:	access:public
sdl_video::screen	gfx/sdl_gfx.c	/^   SDL_Surface *screen;$/;"	m	struct:sdl_video	file:	access:public
sdl_video_t	gfx/sdl_gfx.c	/^} sdl_video_t;$/;"	t	typeref:struct:sdl_video	file:
sdp_append_attributes_in_attributeIDList	apple/iOS/bluetooth/btstack/sdp_util.h	/^uint16_t  sdp_append_attributes_in_attributeIDList(uint8_t *record, uint8_t *attributeIDList, uint16_t startOffset, uint16_t maxBytes, uint8_t *buffer);$/;"	p	signature:(uint8_t *record, uint8_t *attributeIDList, uint16_t startOffset, uint16_t maxBytes, uint8_t *buffer)
sdp_create_spp_service	apple/iOS/bluetooth/btstack/sdp_util.h	/^void      sdp_create_spp_service(uint8_t *service, int service_id, const char *name);$/;"	p	signature:(uint8_t *service, int service_id, const char *name)
sdp_filter_attributes_in_attributeIDList	apple/iOS/bluetooth/btstack/sdp_util.h	/^int       sdp_filter_attributes_in_attributeIDList(uint8_t *record, uint8_t *attributeIDList, uint16_t startOffset, uint16_t maxBytes, uint16_t *usedBytes, uint8_t *buffer);  $/;"	p	signature:(uint8_t *record, uint8_t *attributeIDList, uint16_t startOffset, uint16_t maxBytes, uint16_t *usedBytes, uint8_t *buffer)
sdp_get_attribute_value_for_attribute_id	apple/iOS/bluetooth/btstack/sdp_util.h	/^uint8_t * sdp_get_attribute_value_for_attribute_id(uint8_t * record, uint16_t attributeID);$/;"	p	signature:(uint8_t * record, uint16_t attributeID)
sdp_record_matches_service_search_pattern	apple/iOS/bluetooth/btstack/sdp_util.h	/^int       sdp_record_matches_service_search_pattern(uint8_t *record, uint8_t *serviceSearchPattern);$/;"	p	signature:(uint8_t *record, uint8_t *serviceSearchPattern)
sdp_set_attribute_value_for_attribute_id	apple/iOS/bluetooth/btstack/sdp_util.h	/^uint8_t   sdp_set_attribute_value_for_attribute_id(uint8_t * record, uint16_t attributeID, uint32_t value);$/;"	p	signature:(uint8_t * record, uint16_t attributeID, uint32_t value)
section	ps3/rgl/src/libelf/readelf.h	/^      int section;$/;"	m	struct:__anon35	access:public
sectionCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int sectionCount;$/;"	m	struct:_ELF_t	access:public
sections	apple/iOS/menu.h	/^@property (nonatomic) NSMutableArray* sections;$/;"	v
sections	ps3/rgl/src/libelf/readelf.h	/^      ELF_section_t* sections;$/;"	m	struct:_ELF_t	access:public
seek_file_func	deps/minizip/unzip.c	/^typedef long (*seek_file_func) (voidpf opaque, voidpf stream, uLong offset, int origin);$/;"	t	file:
seek_value	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private float seek_value;$/;"	f	class:SeekbarPreference	file:	access:private
segmentCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int segmentCount;$/;"	m	struct:_ELF_t	access:public
segments	ps3/rgl/src/libelf/readelf.h	/^      ELF_segment_t* segments;$/;"	m	struct:_ELF_t	access:public
select	netplay_compat.h	71;"	d
select_core	tools/retrolaunch/main.c	/^static int select_core(char *core_path, size_t max_len,$/;"	f	file:	signature:(char *core_path, size_t max_len, const struct RunInfo *info)
selectedItem	apple/iOS/views.h	/^@property (nonatomic, weak) RADirectoryItem* selectedItem;$/;"	v
selection_buf	frontend/menu/menu_common.h	/^   file_list_t *selection_buf;$/;"	m	struct:__anon25	access:public
selection_ptr	frontend/menu/menu_common.h	/^   size_t selection_ptr;$/;"	m	struct:__anon25	access:public
self_ptr	netplay.c	/^   size_t self_ptr; \/\/ Ptr where we are now.$/;"	m	struct:netplay	file:	access:public
self_state	netplay.c	/^   uint16_t self_state;$/;"	m	struct:delta_frame	file:	access:public
semaValue	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint semaValue;$/;"	m	struct:__anon50	access:public
semantic	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryStringOffset            semantic;      \/\/ cgGetParameterSemantic()$/;"	m	struct:CgBinaryParameter	access:public
semanticCount	ps3/rgl/include/Cg/CgCommon.h	/^   int semanticCount;$/;"	m	struct:_CGprogram	access:public
semanticIndexCount	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short semanticIndexCount;$/;"	m	struct:_CgParameterTableHeader	access:public
semanticIndexTableOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short semanticIndexTableOffset;$/;"	m	struct:_CgParameterTableHeader	access:public
semanticIndices	ps3/rgl/include/Cg/CgCommon.h	/^   const CgParameterSemantic *semanticIndices;$/;"	m	struct:_CGprogram	access:public
semanticOffset	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned int semanticOffset;$/;"	m	struct:_CgParameterSemantic	access:public
semaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphoreMemory        *semaphores;$/;"	m	struct:rglGcmState	access:public
semaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphoreMemory    *semaphores;$/;"	m	struct:rglGcmResource	access:public
send_all	netplay.c	/^static bool send_all(int fd, const void *data_, size_t size)$/;"	f	file:	signature:(int fd, const void *data_, size_t size)
send_chunk	netplay.c	/^static bool send_chunk(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
send_cmd	gfx/thread_wrapper.c	/^   enum thread_cmd send_cmd;$/;"	m	struct:thread_video	typeref:enum:thread_video::thread_cmd	file:	access:public
send_info	netplay.c	/^static bool send_info(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
send_nickname	netplay.c	/^static bool send_nickname(netplay_t *handle, int fd)$/;"	f	file:	signature:(netplay_t *handle, int fd)
send_udp_packet	command.c	/^static bool send_udp_packet(const char *host, uint16_t port, const char *msg)$/;"	f	file:	signature:(const char *host, uint16_t port, const char *msg)
sendbuf	console/logger/logger.c	/^static char sendbuf[4096];$/;"	v	file:
sendto	console/logger/logger.c	57;"	d	file:
sensorEventQueue	android/native/jni/input_android.c	/^   ASensorEventQueue* sensorEventQueue;$/;"	m	struct:android_input	file:	access:public
sensorManager	android/native/jni/input_android.c	/^   ASensorManager* sensorManager;$/;"	m	struct:android_input	file:	access:public
sensor_state_mask	frontend/platform/platform_android.h	/^   uint64_t sensor_state_mask;$/;"	m	struct:android_app	access:public
sensor_t	android/native/jni/input_android.c	/^} sensor_t;$/;"	t	typeref:struct:__anon80	file:
sensor_t	ps3/ps3_input.c	/^} sensor_t;$/;"	t	typeref:struct:__anon77	file:
seq	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_seq_t seq;$/;"	m	struct:__anon186	access:public
seq	gfx/context/sunxi_disp_ioctl.h	/^	__disp_pixel_seq_t seq[2];$/;"	m	struct:__anon203	access:public
server	console/logger/psl1ght_logger.c	/^struct sockaddr_in server;$/;"	v	typeref:struct:sockaddr_in
setAttribConstantIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void setAttribConstantIndex (void *data, const void* __restrict v, const int ) \/\/ index$/;"	f	file:	signature:(void *data, const void* __restrict v, const int )
setBoolean	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setBoolean(String key, boolean value)$/;"	m	class:ConfigFile	access:public	signature:(String key, boolean value)
setBoundPreference	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	public void setBoundPreference(KeyBindPreference pref)$/;"	m	class:KeyBindEditText	access:public	signature:(KeyBindPreference pref)
setContextNum	ps3/ps3py/pkg.py	/^def setContextNum(key, tmpnum):$/;"	f	access:public
setCore	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::setCore(QString core)$/;"	f	class:RetroArch	signature:(QString core)
setCore	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	void setCore(QString core);$/;"	p	class:RetroArch	access:private	signature:(QString core)
setCoreTitle	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void setCoreTitle(String core_name)$/;"	m	class:MainMenuActivity	access:public	signature:(String core_name)
setDouble	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setDouble(String key, double value)$/;"	m	class:ConfigFile	access:public	signature:(String key, double value)
setFPSSetting	android/phoenix/src/com/retroarch/browser/DisplayRefreshRateTest.java	/^		private void setFPSSetting(double fps) {$/;"	m	class:DisplayRefreshRateTest.Renderer	file:	access:private	signature:(double fps)
setFloat	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setFloat(String key, float value)$/;"	m	class:ConfigFile	access:public	signature:(String key, float value)
setFragment	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void setFragment(PreferenceManager manager, PreferenceListFragment fragment)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, PreferenceListFragment fragment)
setIncrement	ps3/rgl/include/RGL/Base.h	/^      inline void setIncrement( unsigned int i ) { increment = i; }$/;"	f	class:RGL::Vector	access:public	signature:( unsigned int i )
setInt	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setInt(String key, int value)$/;"	m	class:ConfigFile	access:public	signature:(String key, int value)
setIsDirectoryTarget	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setIsDirectoryTarget(boolean enable)$/;"	m	class:DirectoryFragment	access:public	signature:(boolean enable)
setKey	android/phoenix/src/com/retroarch/browser/preferences/util/KeyBindPreference.java	/^	private void setKey(int keyCode, boolean force)$/;"	m	class:KeyBindPreference	file:	access:private	signature:(int keyCode, boolean force)
setMatrixTypeIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^static _cgSetArrayIndexFunction setMatrixTypeIndex[2][2][2][4][4][2] =$/;"	v	file:
setMatrixfpIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^template <int ROWS, int COLS, int ORDER> static void setMatrixfpIndex (void *data, const void* __restrict v, const int \/*index*\/ )$/;"	f	file:	signature:(void *data, const void* __restrict v, const int )
setMatrixfpIndexArray	ps3/rgl/src/rgl_ps3_raster.cpp	/^template <int ROWS, int COLS, int ORDER> static void setMatrixfpIndexArray (void *data, const void* __restrict v, const int index )$/;"	f	file:	signature:(void *data, const void* __restrict v, const int index )
setMatrixvpIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^template <int ROWS, int COLS, int ORDER> static void setMatrixvpIndex (void *data, const void* __restrict v, const int index )$/;"	f	file:	signature:(void *data, const void* __restrict v, const int index )
setMatrixvpIndexArray	ps3/rgl/src/rgl_ps3_raster.cpp	/^template <int ROWS, int COLS, int ORDER> static void setMatrixvpIndexArray (void *data, const void* __restrict v, const int index )$/;"	f	file:	signature:(void *data, const void* __restrict v, const int index )
setModule	android/phoenix/src/com/retroarch/browser/mainmenu/MainMenuActivity.java	/^	public void setModule(String core_path, String core_name)$/;"	m	class:MainMenuActivity	access:public	signature:(String core_path, String core_name)
setOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean setOffset;$/;"	m	struct:__anon50	access:public
setOnDirectoryFragmentClosedListener	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setOnDirectoryFragmentClosedListener(OnDirectoryFragmentClosedListener onClosedListener)$/;"	m	class:DirectoryFragment	access:public	signature:(OnDirectoryFragmentClosedListener onClosedListener)
setOnPreferenceTreeClickListener	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static void setOnPreferenceTreeClickListener(PreferenceManager manager, final OnPreferenceTreeClickListener listener)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, final OnPreferenceTreeClickListener listener)
setPathSettingKey	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setPathSettingKey(String key)$/;"	m	class:DirectoryFragment	access:public	signature:(String key)
setPreferenceScreen	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceListFragment.java	/^    public void setPreferenceScreen(PreferenceScreen preferenceScreen)$/;"	m	class:PreferenceListFragment	access:public	signature:(PreferenceScreen preferenceScreen)
setPreferences	android/phoenix/src/com/retroarch/browser/preferences/fragments/util/PreferenceManagerCompat.java	/^    static boolean setPreferences(PreferenceManager manager, PreferenceScreen screen)$/;"	m	class:PreferenceManagerCompat	access:default	signature:(PreferenceManager manager, PreferenceScreen screen)
setRom	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::setRom(QString rom)$/;"	f	class:RetroArch	signature:(QString rom)
setRom	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    void setRom(QString rom);$/;"	p	class:RetroArch	access:private	signature:(QString rom)
setSamplerfp	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void setSamplerfp (void *data, const void*v, int \/* index *\/)$/;"	f	file:	signature:(void *data, const void*v, int )
setSamplervp	ps3/rgl/src/rgl_ps3_raster.cpp	/^static void setSamplervp (void *data, const void*v, int \/* index *\/)$/;"	f	file:	signature:(void *data, const void*v, int )
setStartDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	public void setStartDirectory(String path)$/;"	m	class:DirectoryFragment	access:public	signature:(String path)
setString	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void setString(String key, String value)$/;"	m	class:ConfigFile	access:public	signature:(String key, String value)
setVectorTypeIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^static _cgSetArrayIndexFunction setVectorTypeIndex[2][1][2][4] =$/;"	v	file:
setVectorTypefp	ps3/rgl/src/rgl_ps3_raster.cpp	/^template<int SIZE> static void setVectorTypefp( void *dat, const void* __restrict v )$/;"	f	file:	signature:( void *dat, const void* __restrict v )
setVectorTypefpIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^template<int SIZE, bool isIndex> static void setVectorTypefpIndex (void *dat, const void *v, const int index)$/;"	f	file:	signature:(void *dat, const void *v, const int index)
setVectorTypevpIndex	ps3/rgl/src/rgl_ps3_raster.cpp	/^template <int SIZE, bool isIndex> static void setVectorTypevpIndex (void *data, const void* __restrict v, const int index )$/;"	f	file:	signature:(void *data, const void* __restrict v, const int index )
set_alias_power	audio/test/snr.c	/^static void set_alias_power(struct snr_result *res, unsigned freq, double power)$/;"	f	file:	signature:(struct snr_result *res, unsigned freq, double power)
set_alpha	driver.h	/^   void (*set_alpha)(void *data, unsigned image, float mod);$/;"	m	struct:video_overlay_interface	access:public
set_aspect_ratio	driver.h	/^   void (*set_aspect_ratio)(void *data, unsigned aspectratio_index);$/;"	m	struct:video_poke_interface	access:public
set_basename	retroarch.c	/^static void set_basename(const char *path)$/;"	f	file:	signature:(const char *path)
set_bit	input/udev_input.c	/^static inline void set_bit(uint8_t *buf, unsigned bit)$/;"	f	file:	signature:(uint8_t *buf, unsigned bit)
set_cg_mvp	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_cg_mvp(CGprogram &vPrg,$/;"	f	class:RenderChain	signature:(CGprogram &vPrg, unsigned vp_width, unsigned vp_height, unsigned rotation)
set_cg_mvp	gfx/d3d9/render_chain.hpp	/^      void set_cg_mvp(CGprogram &vPrg,$/;"	p	class:RenderChain	access:private	signature:(CGprogram &vPrg, unsigned vp_width, unsigned vp_height, unsigned rotation)
set_cg_param	gfx/d3d9/render_chain.cpp	/^static void set_cg_param(CGprogram prog, const char *param,$/;"	f	file:	signature:(CGprogram prog, const char *param, const T& val)
set_cg_params	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_cg_params(Pass &pass,$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned video_w, unsigned video_h, unsigned tex_w, unsigned tex_h, unsigned viewport_w, unsigned viewport_h)
set_cg_params	gfx/d3d9/render_chain.hpp	/^      void set_cg_params(Pass &pass,$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned input_w, unsigned input_h, unsigned tex_w, unsigned tex_h, unsigned vp_w, unsigned vp_h)
set_coords	gfx/shader_common.h	/^   bool (*set_coords)(const struct gl_coords *coords);$/;"	m	struct:gl_shader_backend	access:public
set_direct_pix_conv	gfx/scaler/scaler.c	/^static bool set_direct_pix_conv(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
set_dpad_emulation_label	frontend/menu/rmenu_xui.cpp	/^static void set_dpad_emulation_label(unsigned port, char *str, size_t sizeof_str)$/;"	f	file:	signature:(unsigned port, char *str, size_t sizeof_str)
set_eject_state	libretro.h	/^   retro_set_eject_state_t set_eject_state;$/;"	m	struct:retro_disk_control_callback	access:public
set_filtering	driver.h	/^   void (*set_filtering)(void *data, unsigned index, bool smooth);$/;"	m	struct:video_poke_interface	access:public
set_filtering	gfx/d3d9/d3d9.hpp	/^      void set_filtering(unsigned index, bool smooth);$/;"	p	class:D3DVideo	access:public	signature:(unsigned index, bool smooth)
set_final_viewport	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_final_viewport(const D3DVIEWPORT9& final_viewport)$/;"	f	class:RenderChain	signature:(const D3DVIEWPORT9& final_viewport)
set_final_viewport	gfx/d3d9/render_chain.hpp	/^      void set_final_viewport(const D3DVIEWPORT9 &final_viewport);$/;"	p	class:RenderChain	access:public	signature:(const D3DVIEWPORT9 &final_viewport)
set_font_rect	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_font_rect(font_params_t *params)$/;"	f	class:D3DVideo	signature:(font_params_t *params)
set_font_rect	gfx/d3d9/d3d9.hpp	/^      void set_font_rect(font_params_t *params);$/;"	p	class:D3DVideo	access:public	signature:(font_params_t *params)
set_fullscreen	gfx/context/wgl_ctx.c	/^static bool set_fullscreen(unsigned width, unsigned height, char *dev_name)$/;"	f	file:	signature:(unsigned width, unsigned height, char *dev_name)
set_image_index	libretro.h	/^   retro_set_image_index_t set_image_index;$/;"	m	struct:retro_disk_control_callback	access:public
set_interval	driver.h	/^   void (*set_interval)(void *data, unsigned interval_msecs, unsigned interval_distance);$/;"	m	struct:location_driver	access:public
set_interval	libretro.h	/^   retro_location_set_interval_t  set_interval; $/;"	m	struct:retro_location_callback	access:public
set_keybinds	driver.h	/^   void (*set_keybinds)(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action);$/;"	m	struct:input_driver	access:public
set_list_readonly	conf/config_file.c	/^static void set_list_readonly(struct config_entry_list *list)$/;"	f	file:	signature:(struct config_entry_list *list)
set_mvp	gfx/shader_common.h	/^   bool (*set_mvp)(const math_matrix *mat);$/;"	m	struct:gl_shader_backend	access:public
set_nonblock_state	driver.h	/^   void (*set_nonblock_state)(void *data, bool toggle); \/\/ Should we care about blocking in audio thread? Fast forwarding.$/;"	m	struct:audio_driver	access:public
set_nonblock_state	driver.h	/^   void (*set_nonblock_state)(void *data, bool toggle); \/\/ Should we care about syncing to vblank? Fast forwarding.$/;"	m	struct:video_driver	access:public
set_nonblock_state	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_nonblock_state(bool state)$/;"	f	class:D3DVideo	signature:(bool state)
set_nonblock_state	gfx/d3d9/d3d9.hpp	/^      void set_nonblock_state(bool state);$/;"	p	class:D3DVideo	access:public	signature:(bool state)
set_osd_msg	driver.h	/^   void (*set_osd_msg)(void *data, const char *msg, void *userdata);$/;"	m	struct:video_poke_interface	access:public
set_param_1f	gfx/shader_cg.c	193;"	d	file:
set_param_1f	gfx/shader_hlsl.c	100;"	d	file:
set_param_2f	gfx/shader_cg.c	191;"	d	file:
set_param_2f	gfx/shader_hlsl.c	98;"	d	file:
set_params	gfx/shader_common.h	/^   void (*set_params)(unsigned width, unsigned height, $/;"	m	struct:gl_shader_backend	access:public
set_pass_attrib	gfx/shader_cg.c	/^static void set_pass_attrib(struct cg_program *prg, struct cg_fbo_params *fbo,$/;"	f	file:	signature:(struct cg_program *prg, struct cg_fbo_params *fbo, const char *attr)
set_pass_size	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_pass_size(unsigned pass_index, unsigned width, unsigned height)$/;"	f	class:RenderChain	signature:(unsigned pass_index, unsigned width, unsigned height)
set_pass_size	gfx/d3d9/render_chain.hpp	/^      void set_pass_size(unsigned pass, unsigned width, unsigned height);$/;"	p	class:RenderChain	access:public	signature:(unsigned pass, unsigned width, unsigned height)
set_paths	retroarch.c	/^static void set_paths(const char *path)$/;"	f	file:	signature:(const char *path)
set_pix_conv	gfx/scaler/scaler.c	/^static bool set_pix_conv(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
set_program_attributes	gfx/shader_cg.c	/^static void set_program_attributes(unsigned i)$/;"	f	file:	signature:(unsigned i)
set_program_attributes	gfx/shader_hlsl.c	/^static void set_program_attributes(unsigned i)$/;"	f	file:	signature:(unsigned i)
set_program_base_attrib	gfx/shader_cg.c	/^static void set_program_base_attrib(unsigned i)$/;"	f	file:	signature:(unsigned i)
set_program_base_attrib	gfx/shader_cg.c	/^static void set_program_base_attrib(unsigned i);$/;"	p	file:	signature:(unsigned i)
set_resize	gfx/gfx_context.h	/^   void (*set_resize)(unsigned, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
set_rgui_texture_enable	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rgui_texture_enable(bool state, bool fullscreen)$/;"	f	class:D3DVideo	signature:(bool state, bool fullscreen)
set_rgui_texture_enable	gfx/d3d9/d3d9.hpp	/^      void set_rgui_texture_enable(bool state, bool fullscreen);$/;"	p	class:D3DVideo	access:public	signature:(bool state, bool fullscreen)
set_rgui_texture_frame	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rgui_texture_frame(const void *frame,$/;"	f	class:D3DVideo	signature:(const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
set_rgui_texture_frame	gfx/d3d9/d3d9.hpp	/^      void set_rgui_texture_frame(const void *frame,$/;"	p	class:D3DVideo	access:public	signature:(const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
set_rotation	driver.h	/^   void (*set_rotation)(void *data, unsigned rotation);$/;"	m	struct:video_driver	access:public
set_rotation	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_rotation(unsigned rot)$/;"	f	class:D3DVideo	signature:(unsigned rot)
set_rotation	gfx/d3d9/d3d9.hpp	/^      void set_rotation(unsigned rot);$/;"	p	class:D3DVideo	access:public	signature:(unsigned rot)
set_rumble	apple/common/apple_input.h	/^   void (*set_rumble)(void* device, enum retro_rumble_effect effect, uint16_t strength);$/;"	m	struct:apple_pad_interface	access:public
set_rumble	driver.h	/^   bool (*set_rumble)(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t state);$/;"	m	struct:input_driver	access:public
set_rumble	input/input_common.h	/^   bool (*set_rumble)(unsigned, enum retro_rumble_effect, uint16_t); \/\/ Optional$/;"	m	struct:rarch_joypad_driver	access:public
set_rumble_state	libretro.h	/^   retro_set_rumble_state_t set_rumble_state;$/;"	m	struct:retro_rumble_interface	access:public
set_savestate_auto_index	retroarch.c	/^static void set_savestate_auto_index(void)$/;"	f	file:	signature:(void)
set_sensor_state	driver.h	/^   bool (*set_sensor_state)(void *data, unsigned port, enum retro_sensor_action action, unsigned rate);$/;"	m	struct:input_driver	access:public
set_sensor_state	libretro.h	/^   retro_set_sensor_state_t set_sensor_state;$/;"	m	struct:retro_sensor_interface	access:public
set_shader	driver.h	/^   bool (*set_shader)(void *data, enum rarch_shader_type type, const char *path); \/\/ Sets shader. Might not be implemented. Will be moved to poke_interface later.$/;"	m	struct:video_driver	access:public
set_shader	gfx/d3d9/d3d9.cpp	/^bool D3DVideo::set_shader(const std::string &path)$/;"	f	class:D3DVideo	signature:(const std::string &path)
set_shader	gfx/d3d9/d3d9.hpp	/^      bool set_shader(const std::string &path);$/;"	p	class:D3DVideo	access:public	signature:(const std::string &path)
set_shader	gfx/thread_wrapper.c	/^      } set_shader;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon216	file:	access:public
set_shaders	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_shaders(CGprogram &fPrg, CGprogram &vPrg)$/;"	f	class:RenderChain	signature:(CGprogram &fPrg, CGprogram &vPrg)
set_shaders	gfx/d3d9/render_chain.hpp	/^      void set_shaders(CGprogram &fPrg, CGprogram &vPrg);$/;"	p	class:RenderChain	access:private	signature:(CGprogram &fPrg, CGprogram &vPrg)
set_state	libretro.h	/^   retro_audio_set_state_callback_t set_state;$/;"	m	struct:retro_audio_callback	access:public
set_texture	frontend/menu/menu_context.h	/^   void  (*set_texture)(void*, bool);$/;"	m	struct:menu_ctx_driver	access:public
set_texture_coords	gfx/gl.c	/^static inline void set_texture_coords(GLfloat *coords, GLfloat xamt, GLfloat yamt)$/;"	f	file:	signature:(GLfloat *coords, GLfloat xamt, GLfloat yamt)
set_texture_enable	driver.h	/^   void (*set_texture_enable)(void *data, bool enable, bool full_screen); \/\/ Enable\/disable rendering.$/;"	m	struct:video_poke_interface	access:public
set_texture_frame	driver.h	/^   void (*set_texture_frame)(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha); \/\/ Update texture.$/;"	m	struct:video_poke_interface	access:public
set_vertices	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_vertices(Pass &pass,$/;"	f	class:RenderChain	signature:(Pass &pass, unsigned width, unsigned height, unsigned out_width, unsigned out_height, unsigned vp_width, unsigned vp_height, unsigned rotation)
set_vertices	gfx/d3d9/render_chain.hpp	/^      void set_vertices(Pass &pass,$/;"	p	class:RenderChain	access:private	signature:(Pass &pass, unsigned width, unsigned height, unsigned out_width, unsigned out_height, unsigned vp_width, unsigned vp_height, unsigned rotation)
set_video_mode	gfx/gfx_context.h	/^   bool (*set_video_mode)(unsigned, unsigned, bool);$/;"	m	struct:gfx_ctx_driver	access:public
set_viewport	gfx/d3d9/d3d9.cpp	/^void D3DVideo::set_viewport(int x, int y, unsigned width, unsigned height)$/;"	f	class:D3DVideo	signature:(int x, int y, unsigned width, unsigned height)
set_viewport	gfx/d3d9/d3d9.hpp	/^      void set_viewport(int x, int y, unsigned width, unsigned height);$/;"	p	class:D3DVideo	access:private	signature:(int x, int y, unsigned width, unsigned height)
set_viewport	gfx/d3d9/render_chain.cpp	/^void RenderChain::set_viewport(const D3DVIEWPORT9 &vp)$/;"	f	class:RenderChain	signature:(const D3DVIEWPORT9 &vp)
set_viewport	gfx/d3d9/render_chain.hpp	/^      void set_viewport(const D3DVIEWPORT9 &vp);$/;"	p	class:RenderChain	access:private	signature:(const D3DVIEWPORT9 &vp)
setmode	file.c	33;"	d	file:
setmode	file_path.c	40;"	d	file:
setsockopt	audio/librsound.c	118;"	d	file:
setterIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction  setterIndex;$/;"	m	struct:CgRuntimeParameter	access:public
settercIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction settercIndex;$/;"	m	struct:CgRuntimeParameter	access:public
setterrIndex	ps3/rgl/include/Cg/CgCommon.h	/^   _cgSetArrayIndexFunction setterrIndex;$/;"	m	struct:CgRuntimeParameter	access:public
setting	apple/iOS/menu.h	/^@property (nonatomic) const rarch_setting_t* setting;$/;"	v
setting_data_bind_setting	apple/common/setting_data.c	/^rarch_setting_t setting_data_bind_setting(const char* name, const char* description, struct retro_keybind* target, uint32_t index,$/;"	f	signature:(const char* name, const char* description, struct retro_keybind* target, uint32_t index, const struct retro_keybind* default_value)
setting_data_bind_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_bind_setting(const char* name, const char* description, struct retro_keybind* target, uint32_t index,$/;"	p	signature:(const char* name, const char* description, struct retro_keybind* target, uint32_t index, const struct retro_keybind* default_value)
setting_data_bool_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_bool_setting(const char* name, const char* description, bool* target, bool default_value);$/;"	p	signature:(const char* name, const char* description, bool* target, bool default_value)
setting_data_find_setting	apple/common/setting_data.c	/^const rarch_setting_t* setting_data_find_setting(const rarch_setting_t* settings, const char* name)$/;"	f	signature:(const rarch_setting_t* settings, const char* name)
setting_data_find_setting	apple/common/setting_data.h	/^const rarch_setting_t* setting_data_find_setting(const rarch_setting_t* settings, const char* name);$/;"	p	signature:(const rarch_setting_t* settings, const char* name)
setting_data_float_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_float_setting(const char* name, const char* description, float* target, float default_value);$/;"	p	signature:(const char* name, const char* description, float* target, float default_value)
setting_data_get_list	apple/common/setting_data.c	/^const rarch_setting_t* setting_data_get_list()$/;"	f
setting_data_get_list	apple/common/setting_data.h	/^const rarch_setting_t* setting_data_get_list();$/;"	p	signature:()
setting_data_get_string_representation	apple/common/setting_data.c	/^const char* setting_data_get_string_representation(const rarch_setting_t* setting, char* buffer, size_t length)$/;"	f	signature:(const rarch_setting_t* setting, char* buffer, size_t length)
setting_data_get_string_representation	apple/common/setting_data.h	/^const char* setting_data_get_string_representation(const rarch_setting_t* setting, char* buffer, size_t length);$/;"	p	signature:(const rarch_setting_t* setting, char* buffer, size_t length)
setting_data_group_setting	apple/common/setting_data.c	/^rarch_setting_t setting_data_group_setting(enum setting_type type, const char* name)$/;"	f	signature:(enum setting_type type, const char* name)
setting_data_group_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_group_setting(enum setting_type type, const char* name);$/;"	p	signature:(enum setting_type type, const char* name)
setting_data_int_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_int_setting(const char* name, const char* description, int* target, int default_value);$/;"	p	signature:(const char* name, const char* description, int* target, int default_value)
setting_data_load_config	apple/common/setting_data.c	/^bool setting_data_load_config(const rarch_setting_t* settings, config_file_t* config)$/;"	f	signature:(const rarch_setting_t* settings, config_file_t* config)
setting_data_load_config	apple/common/setting_data.h	/^bool setting_data_load_config(const rarch_setting_t* settings, config_file_t* config);$/;"	p	signature:(const rarch_setting_t* settings, config_file_t* config)
setting_data_load_config_path	apple/common/setting_data.c	/^bool setting_data_load_config_path(const rarch_setting_t* settings, const char* path)$/;"	f	signature:(const rarch_setting_t* settings, const char* path)
setting_data_load_config_path	apple/common/setting_data.h	/^bool setting_data_load_config_path(const rarch_setting_t* settings, const char* path);$/;"	p	signature:(const rarch_setting_t* settings, const char* path)
setting_data_load_current	apple/common/setting_data.c	/^void setting_data_load_current()$/;"	f
setting_data_load_current	apple/common/setting_data.h	/^void setting_data_load_current();$/;"	p	signature:()
setting_data_reset	apple/common/setting_data.c	/^void setting_data_reset(const rarch_setting_t* settings)$/;"	f	signature:(const rarch_setting_t* settings)
setting_data_reset	apple/common/setting_data.h	/^void setting_data_reset(const rarch_setting_t* settings);$/;"	p	signature:(const rarch_setting_t* settings)
setting_data_save_config	apple/common/setting_data.c	/^bool setting_data_save_config(const rarch_setting_t* settings, config_file_t* config)$/;"	f	signature:(const rarch_setting_t* settings, config_file_t* config)
setting_data_save_config	apple/common/setting_data.h	/^bool setting_data_save_config(const rarch_setting_t* settings, config_file_t* config);$/;"	p	signature:(const rarch_setting_t* settings, config_file_t* config)
setting_data_save_config_path	apple/common/setting_data.c	/^bool setting_data_save_config_path(const rarch_setting_t* settings, const char* path)$/;"	f	signature:(const rarch_setting_t* settings, const char* path)
setting_data_save_config_path	apple/common/setting_data.h	/^bool setting_data_save_config_path(const rarch_setting_t* settings, const char* path);$/;"	p	signature:(const rarch_setting_t* settings, const char* path)
setting_data_set_with_string_representation	apple/common/setting_data.c	/^void setting_data_set_with_string_representation(const rarch_setting_t* setting, const char* value)$/;"	f	signature:(const rarch_setting_t* setting, const char* value)
setting_data_set_with_string_representation	apple/common/setting_data.h	/^void setting_data_set_with_string_representation(const rarch_setting_t* setting, const char* value);$/;"	p	signature:(const rarch_setting_t* setting, const char* value)
setting_data_string_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_string_setting(enum setting_type type, const char* name, const char* description, char* target, unsigned size, char* default_value);$/;"	p	signature:(enum setting_type type, const char* name, const char* description, char* target, unsigned size, char* default_value)
setting_data_uint_setting	apple/common/setting_data.h	/^rarch_setting_t setting_data_uint_setting(const char* name, const char* description, unsigned int* target, unsigned int default_value);$/;"	p	signature:(const char* name, const char* description, unsigned int* target, unsigned int default_value)
setting_features	apple/common/setting_data.h	/^enum setting_features$/;"	g
setting_flags	apple/common/setting_data.h	/^enum setting_flags$/;"	g
setting_type	apple/common/setting_data.h	/^enum setting_type { ST_NONE, ST_BOOL, ST_INT, ST_UINT, ST_FLOAT, ST_PATH, ST_STRING, ST_HEX, ST_BIND,$/;"	g
settings	general.h	/^struct settings$/;"	s
settings::__anon227::allow_rotate	general.h	/^      bool allow_rotate;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::aspect_ratio	general.h	/^      float aspect_ratio;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::aspect_ratio_auto	general.h	/^      bool aspect_ratio_auto;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::aspect_ratio_idx	general.h	/^      unsigned aspect_ratio_idx;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::black_frame_insertion	general.h	/^      bool black_frame_insertion;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::crop_overscan	general.h	/^      bool crop_overscan;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::disable_composition	general.h	/^      bool disable_composition;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::filter_path	general.h	/^      char filter_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::font_enable	general.h	/^      bool font_enable;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::font_path	general.h	/^      char font_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::font_scale	general.h	/^      bool font_scale;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::font_size	general.h	/^      float font_size;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::force_aspect	general.h	/^      bool force_aspect;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::fullscreen	general.h	/^      bool fullscreen;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::fullscreen_x	general.h	/^      unsigned fullscreen_x;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::fullscreen_y	general.h	/^      unsigned fullscreen_y;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::gl_context	general.h	/^      char gl_context[32];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::gpu_record	general.h	/^      bool gpu_record;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::gpu_screenshot	general.h	/^      bool gpu_screenshot;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::hard_sync	general.h	/^      bool hard_sync;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::hard_sync_frames	general.h	/^      unsigned hard_sync_frames;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::monitor_index	general.h	/^      unsigned monitor_index;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::msg_color_b	general.h	/^      float msg_color_b;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::msg_color_g	general.h	/^      float msg_color_g;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::msg_color_r	general.h	/^      float msg_color_r;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::msg_pos_x	general.h	/^      float msg_pos_x;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::msg_pos_y	general.h	/^      float msg_pos_y;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::post_filter_record	general.h	/^      bool post_filter_record;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::refresh_rate	general.h	/^      float refresh_rate;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::rotation	general.h	/^      unsigned rotation;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::scale_integer	general.h	/^      bool scale_integer;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::shader_dir	general.h	/^      char shader_dir[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::shader_enable	general.h	/^      bool shader_enable;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::shader_path	general.h	/^      char shader_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::smooth	general.h	/^      bool smooth;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::swap_interval	general.h	/^      unsigned swap_interval;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::threaded	general.h	/^      bool threaded;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::vsync	general.h	/^      bool vsync;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::windowed_fullscreen	general.h	/^      bool windowed_fullscreen;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::xscale	general.h	/^      float xscale;$/;"	m	struct:settings::__anon227	access:public
settings::__anon227::yscale	general.h	/^      float yscale;$/;"	m	struct:settings::__anon227	access:public
settings::__anon228::device	general.h	/^      char device[PATH_MAX];$/;"	m	struct:settings::__anon228	access:public
settings::__anon228::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon228	access:public
settings::__anon228::height	general.h	/^      unsigned height;$/;"	m	struct:settings::__anon228	access:public
settings::__anon228::width	general.h	/^      unsigned width;$/;"	m	struct:settings::__anon228	access:public
settings::__anon229::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon229	access:public
settings::__anon229::update_interval_distance	general.h	/^      int update_interval_distance;$/;"	m	struct:settings::__anon229	access:public
settings::__anon229::update_interval_ms	general.h	/^      int update_interval_ms;$/;"	m	struct:settings::__anon229	access:public
settings::__anon230::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon230	access:public
settings::__anon231::block_frames	general.h	/^      unsigned block_frames;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::device	general.h	/^      char device[PATH_MAX];$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::dsp_plugin	general.h	/^      char dsp_plugin[PATH_MAX];$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::enable	general.h	/^      bool enable;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::in_rate	general.h	/^      float in_rate;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::latency	general.h	/^      unsigned latency;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::out_rate	general.h	/^      unsigned out_rate;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::rate_control	general.h	/^      bool rate_control;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::rate_control_delta	general.h	/^      float rate_control_delta;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::resampler	general.h	/^      char resampler[32];$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::sync	general.h	/^      bool sync;$/;"	m	struct:settings::__anon231	access:public
settings::__anon231::volume	general.h	/^      float volume; \/\/ dB scale$/;"	m	struct:settings::__anon231	access:public
settings::__anon232::autoconf_binds	general.h	/^      struct retro_keybind autoconf_binds[MAX_PLAYERS][RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
settings::__anon232::autoconfig_dir	general.h	/^      char autoconfig_dir[PATH_MAX];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::autoconfigured	general.h	/^      bool autoconfigured[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::autodetect_enable	general.h	/^      bool autodetect_enable;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::axis_threshold	general.h	/^      float axis_threshold;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::back_behavior	general.h	/^      unsigned back_behavior;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::binds	general.h	/^      struct retro_keybind binds[MAX_PLAYERS][RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
settings::__anon232::debug_enable	general.h	/^      bool debug_enable;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::device	general.h	/^      unsigned device[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::device_names	general.h	/^      char device_names[MAX_PLAYERS][64];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::driver	general.h	/^      char driver[32];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::icade_count	general.h	/^      unsigned icade_count;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::icade_profile	general.h	/^      unsigned icade_profile[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::joypad_driver	general.h	/^      char joypad_driver[32];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::joypad_map	general.h	/^      int joypad_map[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::keyboard_layout	general.h	/^      char keyboard_layout[64];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::libretro_device	general.h	/^      unsigned libretro_device[MAX_PLAYERS];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::menu_binds	general.h	/^      struct retro_keybind menu_binds[RARCH_BIND_LIST_END];$/;"	m	struct:settings::__anon232	typeref:struct:settings::__anon232::retro_keybind	access:public
settings::__anon232::netplay_client_swap_input	general.h	/^      bool netplay_client_swap_input;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::overlay	general.h	/^      char overlay[PATH_MAX];$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::overlay_opacity	general.h	/^      float overlay_opacity;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::overlay_scale	general.h	/^      float overlay_scale;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::turbo_duty_cycle	general.h	/^      unsigned turbo_duty_cycle;$/;"	m	struct:settings::__anon232	access:public
settings::__anon232::turbo_period	general.h	/^      unsigned turbo_period;$/;"	m	struct:settings::__anon232	access:public
settings::audio	general.h	/^   } audio;$/;"	m	struct:settings	typeref:struct:settings::__anon231	access:public
settings::autosave_interval	general.h	/^   unsigned autosave_interval;$/;"	m	struct:settings	access:public
settings::block_sram_overwrite	general.h	/^   bool block_sram_overwrite;$/;"	m	struct:settings	access:public
settings::camera	general.h	/^   } camera;$/;"	m	struct:settings	typeref:struct:settings::__anon228	access:public
settings::cheat_database	general.h	/^   char cheat_database[PATH_MAX];$/;"	m	struct:settings	access:public
settings::cheat_settings_path	general.h	/^   char cheat_settings_path[PATH_MAX];$/;"	m	struct:settings	access:public
settings::core_options_path	general.h	/^   char core_options_path[PATH_MAX];$/;"	m	struct:settings	access:public
settings::fastforward_ratio	general.h	/^   float fastforward_ratio;$/;"	m	struct:settings	access:public
settings::fps_show	general.h	/^   bool fps_show;$/;"	m	struct:settings	access:public
settings::game_history_path	general.h	/^   char game_history_path[PATH_MAX];$/;"	m	struct:settings	access:public
settings::game_history_size	general.h	/^   unsigned game_history_size;$/;"	m	struct:settings	access:public
settings::input	general.h	/^   } input;$/;"	m	struct:settings	typeref:struct:settings::__anon232	access:public
settings::libretro	general.h	/^   char libretro[PATH_MAX];$/;"	m	struct:settings	access:public
settings::libretro_info_path	general.h	/^   char libretro_info_path[PATH_MAX];$/;"	m	struct:settings	access:public
settings::location	general.h	/^   } location;$/;"	m	struct:settings	typeref:struct:settings::__anon229	access:public
settings::network_cmd_enable	general.h	/^   bool network_cmd_enable;$/;"	m	struct:settings	access:public
settings::network_cmd_port	general.h	/^   uint16_t network_cmd_port;$/;"	m	struct:settings	access:public
settings::osk	general.h	/^   } osk;$/;"	m	struct:settings	typeref:struct:settings::__anon230	access:public
settings::pause_nonactive	general.h	/^   bool pause_nonactive;$/;"	m	struct:settings	access:public
settings::rewind_buffer_size	general.h	/^   size_t rewind_buffer_size;$/;"	m	struct:settings	access:public
settings::rewind_enable	general.h	/^   bool rewind_enable;$/;"	m	struct:settings	access:public
settings::rewind_granularity	general.h	/^   unsigned rewind_granularity;$/;"	m	struct:settings	access:public
settings::rgui_browser_directory	general.h	/^   char rgui_browser_directory[PATH_MAX];$/;"	m	struct:settings	access:public
settings::rgui_config_directory	general.h	/^   char rgui_config_directory[PATH_MAX];$/;"	m	struct:settings	access:public
settings::rgui_show_start_screen	general.h	/^   bool rgui_show_start_screen;$/;"	m	struct:settings	access:public
settings::savestate_auto_index	general.h	/^   bool savestate_auto_index;$/;"	m	struct:settings	access:public
settings::savestate_auto_load	general.h	/^   bool savestate_auto_load;$/;"	m	struct:settings	access:public
settings::savestate_auto_save	general.h	/^   bool savestate_auto_save;$/;"	m	struct:settings	access:public
settings::screenshot_directory	general.h	/^   char screenshot_directory[PATH_MAX];$/;"	m	struct:settings	access:public
settings::slowmotion_ratio	general.h	/^   float slowmotion_ratio;$/;"	m	struct:settings	access:public
settings::stdin_cmd_enable	general.h	/^   bool stdin_cmd_enable;$/;"	m	struct:settings	access:public
settings::system_directory	general.h	/^   char system_directory[PATH_MAX];$/;"	m	struct:settings	access:public
settings::video	general.h	/^   } video;$/;"	m	struct:settings	typeref:struct:settings::__anon227	access:public
setup_callback	frontend/platform/platform_psp.c	/^static int setup_callback(void)$/;"	f	file:	signature:(void)
setup_font	gfx/fonts/gl_raster_font.c	/^static void setup_font(void *data, const char *msg, GLfloat scale, GLfloat pos_x, GLfloat pos_y)$/;"	f	file:	signature:(void *data, const char *msg, GLfloat scale, GLfloat pos_x, GLfloat pos_y)
setup_pixel_format	gfx/context/wgl_ctx.c	/^static void setup_pixel_format(HDC hdc)$/;"	f	file:	signature:(HDC hdc)
setup_rewind_audio	retroarch.c	/^static inline void setup_rewind_audio(void)$/;"	f	file:	signature:(void)
setup_vao	libretro-test-gl/libretro-test.c	/^static void setup_vao(void)$/;"	f	file:	signature:(void)
setup_video_mode	gx/gx_video.c	/^static void setup_video_mode(void *data)$/;"	f	file:	signature:(void *data)
sh_addr	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_addr;$/;"	m	struct:__anon41	access:public
sh_addr	wii/app_booter/elf_abi.h	/^	Elf32_Addr	sh_addr;	\/* address *\/$/;"	m	struct:__anon3	access:public
sh_addralign	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_addralign;$/;"	m	struct:__anon41	access:public
sh_addralign	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_addralign;	\/* address alignment *\/$/;"	m	struct:__anon3	access:public
sh_entsize	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_entsize;$/;"	m	struct:__anon41	access:public
sh_entsize	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_entsize;	\/* section entry size *\/$/;"	m	struct:__anon3	access:public
sh_flags	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_flags;$/;"	m	struct:__anon41	access:public
sh_flags	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_flags;	\/* flags *\/$/;"	m	struct:__anon3	access:public
sh_info	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_info;$/;"	m	struct:__anon41	access:public
sh_info	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_info;	\/* extra information *\/$/;"	m	struct:__anon3	access:public
sh_link	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_link;$/;"	m	struct:__anon41	access:public
sh_link	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_link;	\/* section header table index link *\/$/;"	m	struct:__anon3	access:public
sh_name	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_name;$/;"	m	struct:__anon41	access:public
sh_name	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_name;	\/* name - index into section header$/;"	m	struct:__anon3	access:public
sh_offset	ps3/rgl/src/libelf/elf.h	/^   int32_t	sh_offset;$/;"	m	struct:__anon41	access:public
sh_offset	wii/app_booter/elf_abi.h	/^	Elf32_Off	sh_offset;	\/* file offset *\/$/;"	m	struct:__anon3	access:public
sh_size	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_size;$/;"	m	struct:__anon41	access:public
sh_size	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_size;	\/* section size *\/$/;"	m	struct:__anon3	access:public
sh_type	ps3/rgl/src/libelf/elf.h	/^   uint32_t	sh_type;$/;"	m	struct:__anon41	access:public
sh_type	wii/app_booter/elf_abi.h	/^	Elf32_Word	sh_type;	\/* type *\/$/;"	m	struct:__anon3	access:public
sha1_callback	ps3/ps3py/crypt.c	/^static PyObject *sha1_callback = NULL;$/;"	v	file:
sha256	general.h	/^   char sha256[64 + 1];$/;"	m	struct:global	access:public
sha256_block	hash.c	/^static void sha256_block(struct sha256_ctx *p) $/;"	f	file:	signature:(struct sha256_ctx *p)
sha256_chunk	hash.c	/^static void sha256_chunk(struct sha256_ctx *p, const uint8_t *s, unsigned len) $/;"	f	file:	signature:(struct sha256_ctx *p, const uint8_t *s, unsigned len)
sha256_ctx	hash.c	/^struct sha256_ctx $/;"	s	file:
sha256_ctx::__anon93::u32	hash.c	/^      uint32_t u32[16];$/;"	m	union:sha256_ctx::__anon93	file:	access:public
sha256_ctx::__anon93::u8	hash.c	/^      uint8_t u8[64];$/;"	m	union:sha256_ctx::__anon93	file:	access:public
sha256_ctx::h	hash.c	/^   uint32_t h[8];$/;"	m	struct:sha256_ctx	file:	access:public
sha256_ctx::in	hash.c	/^   } in;$/;"	m	struct:sha256_ctx	typeref:union:sha256_ctx::__anon93	file:	access:public
sha256_ctx::inlen	hash.c	/^   unsigned inlen;$/;"	m	struct:sha256_ctx	file:	access:public
sha256_ctx::len	hash.c	/^   uint64_t len;$/;"	m	struct:sha256_ctx	file:	access:public
sha256_ctx::w	hash.c	/^   uint32_t w[64];$/;"	m	struct:sha256_ctx	file:	access:public
sha256_final	hash.c	/^static void sha256_final(struct sha256_ctx *p) $/;"	f	file:	signature:(struct sha256_ctx *p)
sha256_hash	hash.c	/^void sha256_hash(char *out, const uint8_t *in, size_t size)$/;"	f	signature:(char *out, const uint8_t *in, size_t size)
sha256_hash	hash.h	/^void sha256_hash(char *out, const uint8_t *in, size_t size);$/;"	p	signature:(char *out, const uint8_t *in, size_t size)
sha256_init	hash.c	/^static void sha256_init(struct sha256_ctx *p) $/;"	f	file:	signature:(struct sha256_ctx *p)
sha256_subhash	hash.c	/^static void sha256_subhash(struct sha256_ctx *p, uint32_t *t) $/;"	f	file:	signature:(struct sha256_ctx *p, uint32_t *t)
shader	frontend/menu/menu_common.h	/^   struct gfx_shader shader;$/;"	m	struct:__anon25	typeref:struct:__anon25::gfx_shader	access:public
shader	gfx/d3d9/d3d9.hpp	/^      struct gfx_shader shader;$/;"	m	class:D3DVideo	typeref:struct:D3DVideo::gfx_shader	access:private
shader	gfx/gl_common.h	/^   const gl_shader_backend_t *shader;$/;"	m	struct:gl	access:public
shader	xdk/xdk_d3d.h	/^   const gl_shader_backend_t *shader;$/;"	m	struct:xdk_d3d_video	access:public
shader_dir	general.h	/^      char shader_dir[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
shader_dir	general.h	/^   } shader_dir;$/;"	m	struct:global	typeref:struct:global::__anon241	access:public
shader_enable	config.def.h	/^static const bool shader_enable = false;$/;"	v
shader_enable	config.def.h	/^static const bool shader_enable = true;$/;"	v
shader_enable	general.h	/^      bool shader_enable;$/;"	m	struct:settings::__anon227	access:public
shader_manager_get_str	frontend/menu/menu_common.c	/^void shader_manager_get_str(struct gfx_shader *shader,$/;"	f	signature:(struct gfx_shader *shader, char *type_str, size_t type_str_size, unsigned type)
shader_manager_get_str	frontend/menu/menu_common.h	/^void shader_manager_get_str(struct gfx_shader *shader,$/;"	p	signature:(struct gfx_shader *shader, char *type_str, size_t type_str_size, unsigned type)
shader_manager_get_type	frontend/menu/menu_settings.c	/^static enum rarch_shader_type shader_manager_get_type(const struct gfx_shader *shader)$/;"	f	file:	signature:(const struct gfx_shader *shader)
shader_manager_init	frontend/menu/menu_common.c	/^void shader_manager_init(void *data)$/;"	f	signature:(void *data)
shader_manager_init	frontend/menu/menu_common.h	/^void shader_manager_init(void *data);$/;"	p	signature:(void *data)
shader_manager_set_preset	frontend/menu/menu_common.c	/^void shader_manager_set_preset(struct gfx_shader *shader, enum rarch_shader_type type, const char *path)$/;"	f	signature:(struct gfx_shader *shader, enum rarch_shader_type type, const char *path)
shader_manager_set_preset	frontend/menu/menu_common.h	/^void shader_manager_set_preset(struct gfx_shader *shader,$/;"	p	signature:(struct gfx_shader *shader, enum rarch_shader_type type, const char *path)
shader_manager_toggle_setting	frontend/menu/menu_settings.c	/^static int shader_manager_toggle_setting(void *data, unsigned setting, unsigned action)$/;"	f	file:	signature:(void *data, unsigned setting, unsigned action)
shader_parse_imports	gfx/shader_parse.c	/^static bool shader_parse_imports(config_file_t *conf, struct gfx_shader *shader)$/;"	f	file:	signature:(config_file_t *conf, struct gfx_shader *shader)
shader_parse_pass	gfx/shader_parse.c	/^static bool shader_parse_pass(config_file_t *conf, struct gfx_shader_pass *pass, unsigned i)$/;"	f	file:	signature:(config_file_t *conf, struct gfx_shader_pass *pass, unsigned i)
shader_parse_textures	gfx/shader_parse.c	/^static bool shader_parse_textures(config_file_t *conf, struct gfx_shader *shader)$/;"	f	file:	signature:(config_file_t *conf, struct gfx_shader *shader)
shader_path	general.h	/^      char shader_path[PATH_MAX];$/;"	m	struct:settings::__anon227	access:public
shader_scale	gfx/shader_common.h	/^   void (*shader_scale)(unsigned index, struct gfx_fbo_scale *scale);$/;"	m	struct:gl_shader_backend	access:public
shader_uniforms	gfx/shader_glsl.c	/^struct shader_uniforms$/;"	s	file:
shader_uniforms::color	gfx/shader_glsl.c	/^   int color;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::frame_count	gfx/shader_glsl.c	/^   int frame_count;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::frame_count_mod	gfx/shader_glsl.c	/^   unsigned frame_count_mod;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::frame_direction	gfx/shader_glsl.c	/^   int frame_direction;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::input_size	gfx/shader_glsl.c	/^   int input_size;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::lut_tex_coord	gfx/shader_glsl.c	/^   int lut_tex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::lut_texture	gfx/shader_glsl.c	/^   int lut_texture[GFX_MAX_TEXTURES];$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::mvp	gfx/shader_glsl.c	/^   int mvp;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::orig	gfx/shader_glsl.c	/^   struct shader_uniforms_frame orig;$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
shader_uniforms::output_size	gfx/shader_glsl.c	/^   int output_size;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::pass	gfx/shader_glsl.c	/^   struct shader_uniforms_frame pass[GFX_MAX_SHADERS];$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
shader_uniforms::prev	gfx/shader_glsl.c	/^   struct shader_uniforms_frame prev[PREV_TEXTURES];$/;"	m	struct:shader_uniforms	typeref:struct:shader_uniforms::shader_uniforms_frame	file:	access:public
shader_uniforms::tex_coord	gfx/shader_glsl.c	/^   int tex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::texture_size	gfx/shader_glsl.c	/^   int texture_size;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms::vertex_coord	gfx/shader_glsl.c	/^   int vertex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
shader_uniforms_frame	gfx/shader_glsl.c	/^struct shader_uniforms_frame$/;"	s	file:
shader_uniforms_frame::input_size	gfx/shader_glsl.c	/^   int input_size;$/;"	m	struct:shader_uniforms_frame	file:	access:public
shader_uniforms_frame::tex_coord	gfx/shader_glsl.c	/^   int tex_coord;$/;"	m	struct:shader_uniforms_frame	file:	access:public
shader_uniforms_frame::texture	gfx/shader_glsl.c	/^   int texture;$/;"	m	struct:shader_uniforms_frame	file:	access:public
shader_uniforms_frame::texture_size	gfx/shader_glsl.c	/^   int texture_size;$/;"	m	struct:shader_uniforms_frame	file:	access:public
shader_write_fbo	gfx/shader_parse.c	/^static void shader_write_fbo(config_file_t *conf, const struct gfx_fbo_scale *fbo, unsigned i)$/;"	f	file:	signature:(config_file_t *conf, const struct gfx_fbo_scale *fbo, unsigned i)
shader_write_scale_dim	gfx/shader_parse.c	/^static void shader_write_scale_dim(config_file_t *conf, const char *dim,$/;"	f	file:	signature:(config_file_t *conf, const char *dim, enum gfx_scale_type type, float scale, unsigned abs, unsigned i)
shader_write_variable	gfx/shader_parse.c	/^static void shader_write_variable(config_file_t *conf, const struct state_tracker_uniform_info *info)$/;"	f	file:	signature:(config_file_t *conf, const struct state_tracker_uniform_info *info)
shadertab	ps3/rgl/src/rgl_cg.h	/^   const char* shadertab;$/;"	m	struct:__anon31	access:public
shadertabSize	ps3/rgl/src/rgl_cg.h	/^   size_t shadertabSize;$/;"	m	struct:__anon31	access:public
sharedFPConstantsId	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint sharedFPConstantsId;$/;"	m	struct:rglGcmDriver_	access:public
sharedVPConstants	ps3/rgl/src/include/rgl-typedefs.h	/^   char *sharedVPConstants;$/;"	m	struct:rglGcmDriver_	access:public
shift	ps3/rgl/src/libelf/readelf.h	/^      unsigned int shift;$/;"	m	struct:__anon36	access:public
shminfo	gfx/xvideo.c	/^   XShmSegmentInfo shminfo;$/;"	m	struct:xv	file:	access:public
short_description	apple/common/setting_data.h	/^   const char* short_description;$/;"	m	struct:__anon161	access:public
should_resize	gfx/d3d9/d3d9.hpp	/^      bool should_resize;$/;"	m	class:D3DVideo	access:public
should_resize	gfx/gl_common.h	/^   bool should_resize;$/;"	m	struct:gl	access:public
should_resize	gfx/vg.c	/^   bool should_resize;$/;"	m	struct:__anon225	file:	access:public
should_resize	gx/gx_video.h	/^   bool should_resize;$/;"	m	struct:gx_video	access:public
should_resize	xdk/xdk_d3d.h	/^   bool should_resize;$/;"	m	struct:xdk_d3d_video	access:public
show_cursor	gfx/context/wgl_ctx.c	/^static void show_cursor(bool show)$/;"	f	file:	signature:(bool show)
show_cursor	gfx/d3d9/d3d9.cpp	/^static void show_cursor(bool show)$/;"	f	file:	signature:(bool show)
show_mouse	driver.h	/^   void (*show_mouse)(void *data, bool state);$/;"	m	struct:video_poke_interface	access:public
show_mouse	gfx/gfx_context.h	/^   void (*show_mouse)(bool state);$/;"	m	struct:gfx_ctx_driver	access:public
shuffle_block	compat/compat.c	/^static void shuffle_block(char **begin, char **last, char **end)$/;"	f	file:	signature:(char **begin, char **last, char **end)
shutdown	audio/jack.c	/^   volatile bool shutdown;$/;"	m	struct:jack	file:	access:public
shutdown	frontend/frontend_context.h	/^   void (*shutdown)(bool);$/;"	m	struct:frontend_ctx_driver	access:public
shutdown	general.h	/^      bool shutdown;$/;"	m	struct:global::__anon234	access:public
shutdown_cb	audio/jack.c	/^static void shutdown_cb(void *data)$/;"	f	file:	signature:(void *data)
si	gfx/omap_gfx.c	/^  struct fb_var_screeninfo si;$/;"	m	struct:omapfb_state	typeref:struct:omapfb_state::fb_var_screeninfo	file:	access:public
sighandler	gfx/context/drm_egl_ctx.c	/^static void sighandler(int sig)$/;"	f	file:	signature:(int sig)
sighandler	gfx/context/glx_ctx.c	/^static void sighandler(int sig)$/;"	f	file:	signature:(int sig)
sighandler	gfx/context/vc_egl_ctx.c	/^static void sighandler(int sig)$/;"	f	file:	signature:(int sig)
sighandler	gfx/context/xegl_ctx.c	/^static void sighandler(int sig)$/;"	f	file:	signature:(int sig)
sighandler	gfx/xvideo.c	/^static void sighandler(int sig)$/;"	f	file:	signature:(int sig)
signal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean signal;$/;"	m	struct:__anon50	access:public
signature	frontend/frontend.c	/^returntype main_entry(signature())$/;"	f
signature	frontend/frontend.c	110;"	d	file:
signature	frontend/frontend.c	125;"	d	file:
signature	frontend/frontend.c	140;"	d	file:
signature	frontend/frontend.c	95;"	d	file:
simdpacket_set_from_byte	ps3/altivec_mem.h	/^static inline __vector unsigned char simdpacket_set_from_byte(const uint8_t c)$/;"	f	signature:(const uint8_t c)
simulate_input	netplay.c	/^static void simulate_input(netplay_t *handle)$/;"	f	file:	signature:(netplay_t *handle)
simulated_input_state	netplay.c	/^   uint16_t simulated_input_state;$/;"	m	struct:delta_frame	file:	access:public
sinc	audio/sinc.c	/^static inline double sinc(double val)$/;"	f	file:	signature:(double val)
sinc_resampler	audio/sinc.c	/^const rarch_resampler_t sinc_resampler = {$/;"	v
size	apple/common/setting_data.h	/^   uint32_t size;$/;"	m	struct:__anon161	access:public
size	cheats.c	/^   unsigned size;$/;"	m	struct:cheat_manager	file:	access:public
size	core_options.c	/^   size_t size;$/;"	m	struct:core_option_manager	file:	access:public
size	file_extract.c	/^   size_t (*size)(void *handle);$/;"	m	struct:zlib_file_backend	file:	access:public
size	file_extract.c	/^   size_t size;$/;"	m	struct:__anon108	file:	access:public
size	file_extract.c	/^   size_t size;$/;"	m	struct:__anon109	file:	access:public
size	file_list.h	/^   size_t size;$/;"	m	struct:file_list	access:public
size	file_path.h	/^   size_t size;$/;"	m	struct:string_list	access:public
size	frontend/menu/history.c	/^   size_t size;$/;"	m	struct:rom_history	file:	access:public
size	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rectsz_t size; \/* unit is pixel *\/$/;"	m	struct:__anon186	access:public
size	gfx/rpng/rpng.c	/^   size_t size;$/;"	m	struct:idat_buffer	file:	access:public
size	gfx/rpng/rpng.c	/^   uint32_t size;$/;"	m	struct:png_chunk	file:	access:public
size	gfx/shader_glsl.c	/^   GLsizei size;$/;"	m	struct:glsl_attrib	file:	access:public
size	input/keyboard_line.c	/^   size_t size;$/;"	m	struct:input_keyboard_line	file:	access:public
size	input/overlay.c	/^   size_t size;$/;"	m	struct:input_overlay	file:	access:public
size	input/overlay.c	/^   size_t size;$/;"	m	struct:overlay	file:	access:public
size	libretro.h	/^   size_t      size;       \/\/ Size of memory buffer.$/;"	m	struct:retro_game_info	access:public
size	message_queue.c	/^   size_t size;$/;"	m	struct:msg_queue	file:	access:public
size	ps3/rgl/include/RGL/Types.h	/^      GLsizeiptr size;$/;"	m	struct:rglBufferObject	access:public
size	ps3/rgl/src/cg/nvbi.hpp	/^               size() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
size	ps3/rgl/src/cg/nvbiimpl.hpp	/^               size() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
size	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    size;$/;"	m	struct:GmmAllocator	access:public
size	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    size;$/;"	m	struct:GmmBaseBlock	access:public
size	ps3/rgl/src/libelf/readelf.h	/^      unsigned int size;$/;"	m	struct:__anon35	access:public
size	ps3/rgl/src/libelf/readelf.h	/^      unsigned int size;$/;"	m	struct:__anon36	access:public
size	ps3/rgl/src/rgl_ps3.cpp	/^   GLuint size;        \/\/ 0 size indicates an unused tile$/;"	m	struct:__anon28	file:	access:public
size	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::size() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
size1	audio/dsound.c	/^   DWORD size1;$/;"	m	struct:audio_lock	file:	access:public
size2	audio/dsound.c	/^   DWORD size2;$/;"	m	struct:audio_lock	file:	access:public
size_central_dir	deps/minizip/unzip.c	/^    uLong size_central_dir;     \/* size of the central directory  *\/$/;"	m	struct:__anon111	file:	access:public
size_comment	deps/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info64_s	access:public
size_comment	deps/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info_s	access:public
size_file_comment	deps/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
size_file_comment	deps/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
size_file_extra	deps/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
size_file_extra	deps/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
size_filename	deps/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
size_filename	deps/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
size_local_extrafield	deps/minizip/unzip.c	/^    uInt  size_local_extrafield;\/* size of the local extra field *\/$/;"	m	struct:__anon110	file:	access:public
size_primary	gfx/shader_glsl.c	/^   size_t size_primary;$/;"	m	struct:cache_vbo	file:	access:public
size_secondary	gfx/shader_glsl.c	/^   size_t size_secondary;$/;"	m	struct:cache_vbo	file:	access:public
skip	frontend/menu/menu_common.h	/^   bool skip;$/;"	m	struct:rgui_bind_state	access:public
skipFirstVsync	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean skipFirstVsync;$/;"	m	struct:__anon50	access:public
skip_spaces	compat/rxml/rxml.c	/^static void skip_spaces(const char **ptr_)$/;"	f	file:	signature:(const char **ptr_)
sl	audio/opensl.c	/^typedef struct sl$/;"	s	file:
sl::buf_count	audio/opensl.c	/^   unsigned buf_count;$/;"	m	struct:sl	file:	access:public
sl::buf_size	audio/opensl.c	/^   unsigned buf_size;$/;"	m	struct:sl	file:	access:public
sl::buffer	audio/opensl.c	/^   uint8_t **buffer;$/;"	m	struct:sl	file:	access:public
sl::buffer_chunk	audio/opensl.c	/^   uint8_t *buffer_chunk;$/;"	m	struct:sl	file:	access:public
sl::buffer_index	audio/opensl.c	/^   unsigned buffer_index;$/;"	m	struct:sl	file:	access:public
sl::buffer_ptr	audio/opensl.c	/^   unsigned buffer_ptr;$/;"	m	struct:sl	file:	access:public
sl::buffer_queue	audio/opensl.c	/^   SLAndroidSimpleBufferQueueItf buffer_queue;$/;"	m	struct:sl	file:	access:public
sl::buffer_queue_object	audio/opensl.c	/^   SLObjectItf buffer_queue_object;$/;"	m	struct:sl	file:	access:public
sl::buffered_blocks	audio/opensl.c	/^   volatile unsigned buffered_blocks;$/;"	m	struct:sl	file:	access:public
sl::cond	audio/opensl.c	/^   scond_t *cond;$/;"	m	struct:sl	file:	access:public
sl::engine	audio/opensl.c	/^   SLEngineItf engine;$/;"	m	struct:sl	file:	access:public
sl::engine_object	audio/opensl.c	/^   SLObjectItf engine_object;$/;"	m	struct:sl	file:	access:public
sl::lock	audio/opensl.c	/^   slock_t *lock;$/;"	m	struct:sl	file:	access:public
sl::nonblock	audio/opensl.c	/^   bool nonblock;$/;"	m	struct:sl	file:	access:public
sl::output_mix	audio/opensl.c	/^   SLObjectItf output_mix;$/;"	m	struct:sl	file:	access:public
sl::player	audio/opensl.c	/^   SLPlayItf player;$/;"	m	struct:sl	file:	access:public
sl_buffer_size	audio/opensl.c	/^static size_t sl_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
sl_free	audio/opensl.c	/^static void sl_free(void *data)$/;"	f	file:	signature:(void *data)
sl_init	audio/opensl.c	/^static void *sl_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
sl_set_nonblock_state	audio/opensl.c	/^static void sl_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
sl_start	audio/opensl.c	/^static bool sl_start(void *data)$/;"	f	file:	signature:(void *data)
sl_stop	audio/opensl.c	/^static bool sl_stop(void *data)$/;"	f	file:	signature:(void *data)
sl_t	audio/opensl.c	/^} sl_t;$/;"	t	typeref:struct:sl	file:
sl_use_float	audio/opensl.c	/^static bool sl_use_float(void *data)$/;"	f	file:	signature:(void *data)
sl_write	audio/opensl.c	/^static ssize_t sl_write(void *data, const void *buf_, size_t size)$/;"	f	file:	signature:(void *data, const void *buf_, size_t size)
sl_write_avail	audio/opensl.c	/^static size_t sl_write_avail(void *data)$/;"	f	file:	signature:(void *data)
slock	thread.c	/^struct slock$/;"	s	file:
slock::lock	thread.c	/^   CRITICAL_SECTION lock;$/;"	m	struct:slock	file:	access:public
slock::lock	thread.c	/^   pthread_mutex_t lock;$/;"	m	struct:slock	file:	access:public
slock_free	thread.c	/^void slock_free(slock_t *lock)$/;"	f	signature:(slock_t *lock)
slock_free	thread.h	/^void slock_free(slock_t *lock);$/;"	p	signature:(slock_t *lock)
slock_lock	thread.c	/^void slock_lock(slock_t *lock)$/;"	f	signature:(slock_t *lock)
slock_lock	thread.h	/^void slock_lock(slock_t *lock);$/;"	p	signature:(slock_t *lock)
slock_new	thread.c	/^slock_t *slock_new(void)$/;"	f	signature:(void)
slock_new	thread.h	/^slock_t *slock_new(void);$/;"	p	signature:(void)
slock_t	thread.h	/^typedef struct slock slock_t;$/;"	t	typeref:struct:slock
slock_unlock	thread.c	/^void slock_unlock(slock_t *lock)$/;"	f	signature:(slock_t *lock)
slock_unlock	thread.h	/^void slock_unlock(slock_t *lock);$/;"	p	signature:(slock_t *lock)
slot	apple/OSX/hid_pad.c	/^   uint32_t slot;$/;"	m	struct:apple_pad_connection	file:	access:public
slot	apple/common/hidpad/apple_ps3_pad.c	/^   uint32_t slot;$/;"	m	struct:hidpad_ps3_data	file:	access:public
slot	apple/iOS/bluetooth/btpad.c	/^   uint32_t slot;$/;"	m	struct:apple_pad_connection	file:	access:public
slots	apple/common/apple_joypad.c	/^static joypad_slot_t slots[MAX_PLAYERS];$/;"	v	file:
slowmotion_ratio	config.def.h	/^static const float slowmotion_ratio = 3.0;$/;"	v
slowmotion_ratio	general.h	/^   float slowmotion_ratio;$/;"	m	struct:settings	access:public
smem_len	gfx/context/sunxi_disp_ioctl.h	/^	__u32 smem_len;$/;"	m	struct:__anon201	access:public
smooth	driver.h	/^   bool smooth;$/;"	m	struct:video_info	access:public
smooth	general.h	/^      bool smooth;$/;"	m	struct:settings::__anon227	access:public
smooth	gfx/d3d9/render_chain.hpp	/^         bool smooth;$/;"	m	struct:RenderChain::lut_info	access:public
smooth	gfx/thread_wrapper.c	/^         bool smooth;$/;"	m	struct:thread_video::__anon215::__anon220	file:	access:public
snprintf	msvc/msvc_compat.h	36;"	d
snr	audio/test/snr.c	/^   double snr;$/;"	m	struct:snr_result	file:	access:public
snr_result	audio/test/snr.c	/^struct snr_result$/;"	s	file:
snr_result::alias_freq	audio/test/snr.c	/^   unsigned alias_freq[3];$/;"	m	struct:snr_result	file:	access:public
snr_result::alias_power	audio/test/snr.c	/^   double alias_power[3];$/;"	m	struct:snr_result	file:	access:public
snr_result::gain	audio/test/snr.c	/^   double gain;$/;"	m	struct:snr_result	file:	access:public
snr_result::snr	audio/test/snr.c	/^   double snr;$/;"	m	struct:snr_result	file:	access:public
sock	console/logger/logger.c	/^static int sock;$/;"	v	file:
sockaddr_storage	netplay.c	1467;"	d	file:
sockaddr_storage	netplay_compat.h	81;"	d
socket	audio/rsound.h	/^         volatile int socket;$/;"	m	struct:rsound::__anon104	access:public
socket	console/logger/logger.c	58;"	d	file:
socket_nonblock	command.c	/^static bool socket_nonblock(int fd)$/;"	f	file:	signature:(int fd)
socketclose	ps3/sdk_defines.h	594;"	d
socketpoll	audio/librsound.c	113;"	d	file:
socketpoll	audio/librsound.c	128;"	d	file:
socketselect	ps3/sdk_defines.h	593;"	d
socklen_t	netplay_compat.h	55;"	d
soft_filter_index	general.h	/^         unsigned char soft_filter_index;$/;"	m	struct:global::__anon242::__anon243	access:public
sound	general.h	/^      } sound;$/;"	m	struct:global::__anon242	typeref:struct:global::__anon242::__anon246	access:public
sound_mode_enums	general.h	/^enum sound_mode_enums$/;"	g
source	audio/openal.c	/^   ALuint source;$/;"	m	struct:al	file:	access:public
source	gfx/shader_parse.h	/^   } source;$/;"	m	struct:gfx_shader_pass	typeref:struct:gfx_shader_pass::__anon212	access:public
source	ps3/rgl/src/include/rgl-typedefs.h	/^   GLenum source;	\/\/ device, texture, renderbuffer$/;"	m	struct:__anon49	access:public
source_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
source_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
source_data	patch.c	/^   const uint8_t *modify_data, *source_data; $/;"	m	struct:bps_data	file:	access:public
source_data	patch.c	/^   const uint8_t *patch_data, *source_data; $/;"	m	struct:ups_data	file:	access:public
source_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
source_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
source_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
source_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
source_regn	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t source_regn;$/;"	m	struct:__anon192	access:public
source_relative_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
spd_get_filtered_size	apple/iOS/bluetooth/btstack/sdp_util.h	/^int       spd_get_filtered_size(uint8_t *record, uint8_t *attributeIDList);$/;"	p	signature:(uint8_t *record, uint8_t *attributeIDList)
spectate	netplay.c	/^   bool spectate;$/;"	m	struct:netplay	file:	access:public
spectate_client	netplay.c	/^   bool spectate_client;$/;"	m	struct:netplay	file:	access:public
spectate_fds	netplay.c	/^   int spectate_fds[MAX_SPECTATORS];$/;"	m	struct:netplay	file:	access:public
spectate_input	netplay.c	/^   uint16_t *spectate_input;$/;"	m	struct:netplay	file:	access:public
spectate_input_ptr	netplay.c	/^   size_t spectate_input_ptr;$/;"	m	struct:netplay	file:	access:public
spectate_input_size	netplay.c	/^   size_t spectate_input_size;$/;"	m	struct:netplay	file:	access:public
spuDoRelocations	ps3/rgl/src/libelf/readelf.h	/^   void spuDoRelocations(ELF_t* elf,char* memory,int memorySize,int origin);$/;"	p	signature:(ELF_t* elf,char* memory,int memorySize,int origin)
spu_enable	ps3/sdk_defines.h	243;"	d
spu_enable	ps3/sdk_defines.h	289;"	d
spu_prio	ps3/sdk_defines.h	291;"	d
spuid	ps3/rgl/src/include/rgl-typedefs.h	/^   int spuid;$/;"	m	struct:rglGcmFifo	access:public
sram_dir	console/rarch_console.h	/^   char sram_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
sram_load_disable	general.h	/^   bool sram_load_disable;$/;"	m	struct:global	access:public
sram_path	general.h	/^   const char *sram_path;$/;"	m	struct:rarch_main_wrap	access:public
sram_save_disable	general.h	/^   bool sram_save_disable;$/;"	m	struct:global	access:public
src_ratio	general.h	/^      double src_ratio;$/;"	m	struct:global::__anon235	access:public
src_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t src_win;$/;"	m	struct:__anon187	access:public
src_win	gfx/context/sunxi_disp_ioctl.h	/^	__disp_rect_t src_win;$/;"	m	struct:__anon193	access:public
sscan_bd_addr	apple/iOS/bluetooth/btstack/utils.h	/^int sscan_bd_addr(uint8_t * addr_string, bd_addr_t addr);$/;"	p	signature:(uint8_t * addr_string, bd_addr_t addr)
ssize_t	msvc/msvc_compat.h	/^typedef __int64 ssize_t;$/;"	t
ssize_t	msvc/msvc_compat.h	/^typedef int ssize_t;$/;"	t
st_info	ps3/rgl/src/libelf/elf.h	/^   unsigned char	st_info;$/;"	m	struct:__anon42	access:public
st_info	wii/app_booter/elf_abi.h	/^	unsigned char	st_info;	\/* type and binding *\/$/;"	m	struct:elf32_sym	access:public
st_name	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_name;$/;"	m	struct:__anon42	access:public
st_name	wii/app_booter/elf_abi.h	/^	Elf32_Word	st_name;	\/* name - index into string table *\/$/;"	m	struct:elf32_sym	access:public
st_other	ps3/rgl/src/libelf/elf.h	/^   unsigned char	st_other;$/;"	m	struct:__anon42	access:public
st_other	wii/app_booter/elf_abi.h	/^	unsigned char	st_other;	\/* 0 - no defined meaning *\/$/;"	m	struct:elf32_sym	access:public
st_shndx	ps3/rgl/src/libelf/elf.h	/^   uint16_t	st_shndx;$/;"	m	struct:__anon42	access:public
st_shndx	wii/app_booter/elf_abi.h	/^	Elf32_Half	st_shndx;	\/* section header index *\/$/;"	m	struct:elf32_sym	access:public
st_size	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_size;$/;"	m	struct:__anon42	access:public
st_size	wii/app_booter/elf_abi.h	/^	Elf32_Word	st_size;	\/* symbol size *\/$/;"	m	struct:elf32_sym	access:public
st_value	ps3/rgl/src/libelf/elf.h	/^   uint32_t	st_value;$/;"	m	struct:__anon42	access:public
st_value	wii/app_booter/elf_abi.h	/^	Elf32_Addr	st_value;	\/* symbol value *\/$/;"	m	struct:elf32_sym	access:public
start	camera/video4linux2.c	/^   void *start;$/;"	m	struct:buffer	file:	access:public
start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:audio_driver	access:public
start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:camera_driver	access:public
start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:input_osk_driver	access:public
start	driver.h	/^   bool (*start)(void *data);$/;"	m	struct:location_driver	access:public
start	libretro.h	/^   retro_camera_start_t start; \/\/ Set by frontend.$/;"	m	struct:retro_camera_callback	access:public
start	libretro.h	/^   retro_location_start_t         start;$/;"	m	struct:retro_location_callback	access:public
start	libretro.h	/^   retro_perf_tick_t start;$/;"	m	struct:retro_perf_counter	access:public
startAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    startAddress;$/;"	m	struct:GmmAllocator	access:public
startDirectory	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected String startDirectory;$/;"	f	class:DirectoryFragment	access:protected
startEmulator	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^void RetroArch::startEmulator()$/;"	f	class:RetroArch	signature:()
startEmulator	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    Q_INVOKABLE void startEmulator();$/;"	p	class:RetroArch	access:public	signature:()
startTime	emscripten/library_rwebaudio.js	/^         var startTime;$/;"	v
start_delay	gfx/context/sunxi_disp_ioctl.h	/^	__u32 start_delay; \/* not need to config for user *\/$/;"	m	struct:__anon196	access:public
start_rarch	frontend/frontend_xenon.c	/^static void start_rarch(const char *path)$/;"	f	file:	signature:(const char *path)
start_render	gfx/d3d9/render_chain.cpp	/^void RenderChain::start_render()$/;"	f	class:RenderChain	signature:()
start_render	gfx/d3d9/render_chain.hpp	/^      void start_render();$/;"	p	class:RenderChain	access:private	signature:()
start_time	audio/rsound.h	/^      int64_t start_time;$/;"	m	struct:rsound	access:public
stasis_mutex	frontend/platform/platform_apple.c	/^pthread_mutex_t stasis_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
state	android/native/jni/input_android.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
state	apple/common/hidpad/wiimote.h	/^   	    int state;						\/**< various state flags					*\/$/;"	m	struct:wiimote_t	access:public
state	apple/iOS/bluetooth/btpad.c	/^   enum btpad_state state;$/;"	m	struct:apple_pad_connection	typeref:enum:apple_pad_connection::btpad_state	file:	access:public
state	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^	int state;$/;"	m	class:RetroArch	access:private
state	cheats.c	/^   bool state;$/;"	m	struct:cheat	file:	access:public
state	command.c	/^   bool state[RARCH_BIND_LIST_END];$/;"	m	struct:rarch_cmd	file:	access:public
state	deps/miniz/zlib.h	/^  struct mz_internal_state *state;  \/\/ internal state, allocated by zalloc\/zfree$/;"	m	struct:mz_stream_s	typeref:struct:mz_stream_s::mz_internal_state	access:public
state	emscripten/library_rwebinput.js	/^      var state = RI.contexts[context].state;$/;"	v
state	frontend/menu/menu_common.h	/^   struct rgui_bind_state_port state[MAX_PLAYERS];$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::rgui_bind_state_port	access:public
state	gfx/lima_gfx.c	/^static struct limare_state *state;$/;"	v	typeref:struct:limare_state	file:
state	input/dinput.c	/^   uint8_t state[256];$/;"	m	struct:dinput_input	file:	access:public
state	input/linuxraw_input.c	/^   bool state[0x80];$/;"	m	struct:linuxraw_input	file:	access:public
state	input/rwebinput_input.c	/^   rwebinput_state_t state;$/;"	m	struct:rwebinput_input	file:	access:public
state	input/udev_input.c	/^   } state;$/;"	m	struct:input_device	typeref:union:input_device::__anon90	file:	access:public
state	input/x11_input.c	/^   char state[32];$/;"	m	struct:x11_input	file:	access:public
state	movie.c	/^   uint8_t *state;$/;"	m	struct:bsv_movie	file:	access:public
state	netplay.c	/^   void *state;$/;"	m	struct:delta_frame	file:	access:public
state	ps3/ps3_input.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:ps3_input	file:	access:public
state	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmCachedState        state;$/;"	m	struct:rglGcmState	access:public
state	psp/psp_input.c	/^static uint64_t state;$/;"	v	file:
state	xdk/xdk_xinput_input.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
state	xenon/xenon360_input.c	/^static uint64_t state[MAX_PADS];$/;"	v	file:
state_buf	general.h	/^   void *state_buf;$/;"	m	struct:global	access:public
state_cb	netplay.h	/^   retro_input_state_t state_cb;$/;"	m	struct:retro_callbacks	access:public
state_device_ids	android/native/jni/input_android.c	/^   int state_device_ids[MAX_PADS];$/;"	m	struct:android_input	file:	access:public
state_get_uniform	gfx/state_tracker.c	/^unsigned state_get_uniform(state_tracker_t *tracker, struct state_tracker_uniform *uniforms, unsigned elem, unsigned frame_count)$/;"	f	signature:(state_tracker_t *tracker, struct state_tracker_uniform *uniforms, unsigned elem, unsigned frame_count)
state_get_uniform	gfx/state_tracker.h	/^unsigned state_get_uniform(state_tracker_t *tracker, struct state_tracker_uniform *uniforms, unsigned elem, unsigned frame_count);$/;"	p	signature:(state_tracker_t *tracker, struct state_tracker_uniform *uniforms, unsigned elem, unsigned frame_count)
state_manager	general.h	/^   state_manager_t *state_manager;$/;"	m	struct:global	access:public
state_manager	rewind.c	/^struct state_manager$/;"	s	file:
state_manager::bottom_ptr	rewind.c	/^   size_t bottom_ptr;$/;"	m	struct:state_manager	file:	access:public
state_manager::buf_size	rewind.c	/^   size_t buf_size;$/;"	m	struct:state_manager	file:	access:public
state_manager::buf_size_mask	rewind.c	/^   size_t buf_size_mask;$/;"	m	struct:state_manager	file:	access:public
state_manager::buffer	rewind.c	/^   uint64_t *buffer;$/;"	m	struct:state_manager	file:	access:public
state_manager::first_pop	rewind.c	/^   bool first_pop;$/;"	m	struct:state_manager	file:	access:public
state_manager::state_size	rewind.c	/^   size_t state_size;$/;"	m	struct:state_manager	file:	access:public
state_manager::tmp_state	rewind.c	/^   uint32_t *tmp_state;$/;"	m	struct:state_manager	file:	access:public
state_manager::top_ptr	rewind.c	/^   size_t top_ptr;$/;"	m	struct:state_manager	file:	access:public
state_manager_free	rewind.c	/^void state_manager_free(state_manager_t *state)$/;"	f	signature:(state_manager_t *state)
state_manager_free	rewind.h	/^void state_manager_free(state_manager_t *state);$/;"	p	signature:(state_manager_t *state)
state_manager_new	rewind.c	/^state_manager_t *state_manager_new(size_t state_size, size_t buffer_size, void *init_buffer)$/;"	f	signature:(size_t state_size, size_t buffer_size, void *init_buffer)
state_manager_new	rewind.h	/^state_manager_t *state_manager_new(size_t state_size, size_t buffer_size, void *init_buffer);$/;"	p	signature:(size_t state_size, size_t buffer_size, void *init_buffer)
state_manager_pop	rewind.c	/^bool state_manager_pop(state_manager_t *state, void **data)$/;"	f	signature:(state_manager_t *state, void **data)
state_manager_pop	rewind.h	/^bool state_manager_pop(state_manager_t *state, void **data);$/;"	p	signature:(state_manager_t *state, void **data)
state_manager_push	rewind.c	/^bool state_manager_push(state_manager_t *state, const void *data)$/;"	f	signature:(state_manager_t *state, const void *data)
state_manager_push	rewind.h	/^bool state_manager_push(state_manager_t *state, const void *data);$/;"	p	signature:(state_manager_t *state, const void *data)
state_manager_t	rewind.h	/^typedef struct state_manager state_manager_t;$/;"	t	typeref:struct:state_manager
state_path	general.h	/^   const char *state_path;$/;"	m	struct:rarch_main_wrap	access:public
state_ram_type	gfx/state_tracker.h	/^enum state_ram_type$/;"	g
state_size	general.h	/^   size_t state_size;$/;"	m	struct:global	access:public
state_size	movie.c	/^   size_t state_size;$/;"	m	struct:bsv_movie	file:	access:public
state_size	netplay.c	/^   size_t state_size;$/;"	m	struct:netplay	file:	access:public
state_size	rewind.c	/^   size_t state_size;$/;"	m	struct:state_manager	file:	access:public
state_slot	general.h	/^   unsigned state_slot;$/;"	m	struct:global	access:public
state_tracker	gfx/shader_cg.c	/^static state_tracker_t *state_tracker;$/;"	v	file:
state_tracker	gfx/state_tracker.c	/^struct state_tracker$/;"	s	file:
state_tracker::info	gfx/state_tracker.c	/^   struct state_tracker_internal *info;$/;"	m	struct:state_tracker	typeref:struct:state_tracker::state_tracker_internal	file:	access:public
state_tracker::info_elem	gfx/state_tracker.c	/^   unsigned info_elem;$/;"	m	struct:state_tracker	file:	access:public
state_tracker::input_state	gfx/state_tracker.c	/^   uint16_t input_state[2];$/;"	m	struct:state_tracker	file:	access:public
state_tracker::py	gfx/state_tracker.c	/^   py_state_t *py;$/;"	m	struct:state_tracker	file:	access:public
state_tracker_free	gfx/state_tracker.c	/^void state_tracker_free(state_tracker_t *tracker)$/;"	f	signature:(state_tracker_t *tracker)
state_tracker_free	gfx/state_tracker.h	/^void state_tracker_free(state_tracker_t *tracker);$/;"	p	signature:(state_tracker_t *tracker)
state_tracker_info	gfx/state_tracker.h	/^struct state_tracker_info$/;"	s
state_tracker_info::info	gfx/state_tracker.h	/^   const struct state_tracker_uniform_info *info;$/;"	m	struct:state_tracker_info	typeref:struct:state_tracker_info::state_tracker_uniform_info	access:public
state_tracker_info::info_elem	gfx/state_tracker.h	/^   unsigned info_elem;$/;"	m	struct:state_tracker_info	access:public
state_tracker_info::script	gfx/state_tracker.h	/^   const char *script;$/;"	m	struct:state_tracker_info	access:public
state_tracker_info::script_class	gfx/state_tracker.h	/^   const char *script_class;$/;"	m	struct:state_tracker_info	access:public
state_tracker_info::script_is_file	gfx/state_tracker.h	/^   bool script_is_file;$/;"	m	struct:state_tracker_info	access:public
state_tracker_info::wram	gfx/state_tracker.h	/^   const uint8_t *wram;$/;"	m	struct:state_tracker_info	access:public
state_tracker_init	gfx/state_tracker.c	/^state_tracker_t* state_tracker_init(const struct state_tracker_info *info)$/;"	f	signature:(const struct state_tracker_info *info)
state_tracker_init	gfx/state_tracker.h	/^state_tracker_t* state_tracker_init(const struct state_tracker_info *info);$/;"	p	signature:(const struct state_tracker_info *info)
state_tracker_internal	gfx/state_tracker.c	/^struct state_tracker_internal$/;"	s	file:
state_tracker_internal::addr	gfx/state_tracker.c	/^   uint32_t addr;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::equal	gfx/state_tracker.c	/^   uint16_t equal;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::frame_count	gfx/state_tracker.c	/^   int frame_count;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::frame_count_prev	gfx/state_tracker.c	/^   int frame_count_prev;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::id	gfx/state_tracker.c	/^   char id[64];$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::input_ptr	gfx/state_tracker.c	/^   const uint16_t *input_ptr;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::is_input	gfx/state_tracker.c	/^   bool is_input;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::mask	gfx/state_tracker.c	/^   uint16_t mask;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::old_value	gfx/state_tracker.c	/^   uint32_t old_value; $/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::prev	gfx/state_tracker.c	/^   uint32_t prev[2];$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::ptr	gfx/state_tracker.c	/^   const uint8_t *ptr;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::py	gfx/state_tracker.c	/^   py_state_t *py;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::transition_count	gfx/state_tracker.c	/^   int transition_count;$/;"	m	struct:state_tracker_internal	file:	access:public
state_tracker_internal::type	gfx/state_tracker.c	/^   enum state_tracker_type type;$/;"	m	struct:state_tracker_internal	typeref:enum:state_tracker_internal::state_tracker_type	file:	access:public
state_tracker_t	gfx/state_tracker.h	/^typedef struct state_tracker state_tracker_t;$/;"	t	typeref:struct:state_tracker
state_tracker_type	gfx/state_tracker.h	/^enum state_tracker_type$/;"	g
state_tracker_uniform	gfx/state_tracker.h	/^struct state_tracker_uniform$/;"	s
state_tracker_uniform::id	gfx/state_tracker.h	/^   const char *id;$/;"	m	struct:state_tracker_uniform	access:public
state_tracker_uniform::value	gfx/state_tracker.h	/^   float value;$/;"	m	struct:state_tracker_uniform	access:public
state_tracker_uniform_info	gfx/state_tracker.h	/^struct state_tracker_uniform_info$/;"	s
state_tracker_uniform_info::addr	gfx/state_tracker.h	/^   uint32_t addr;$/;"	m	struct:state_tracker_uniform_info	access:public
state_tracker_uniform_info::equal	gfx/state_tracker.h	/^   uint16_t equal;$/;"	m	struct:state_tracker_uniform_info	access:public
state_tracker_uniform_info::id	gfx/state_tracker.h	/^   char id[64];$/;"	m	struct:state_tracker_uniform_info	access:public
state_tracker_uniform_info::mask	gfx/state_tracker.h	/^   uint16_t mask;$/;"	m	struct:state_tracker_uniform_info	access:public
state_tracker_uniform_info::ram_type	gfx/state_tracker.h	/^   enum state_ram_type ram_type;$/;"	m	struct:state_tracker_uniform_info	typeref:enum:state_tracker_uniform_info::state_ram_type	access:public
state_tracker_uniform_info::type	gfx/state_tracker.h	/^   enum state_tracker_type type;$/;"	m	struct:state_tracker_uniform_info	typeref:enum:state_tracker_uniform_info::state_tracker_type	access:public
stderr	apple/iOS/platform.h	/^      int stderr;$/;"	m	struct:__anon154::__anon155	access:public
stdin_buf	command.c	/^   char stdin_buf[STDIN_BUF_SIZE];$/;"	m	struct:rarch_cmd	file:	access:public
stdin_buf_ptr	command.c	/^   size_t stdin_buf_ptr;$/;"	m	struct:rarch_cmd	file:	access:public
stdin_claimed	driver.h	/^   bool stdin_claimed;$/;"	m	struct:driver	access:public
stdin_cmd_enable	config.def.h	/^static const bool stdin_cmd_enable = false;$/;"	v
stdin_cmd_enable	general.h	/^   bool stdin_cmd_enable;$/;"	m	struct:settings	access:public
stdin_cmd_pre_frame	command.c	/^static void stdin_cmd_pre_frame(rarch_cmd_t *handle)$/;"	f	file:	signature:(rarch_cmd_t *handle)
stdin_enable	command.c	/^   bool stdin_enable;$/;"	m	struct:rarch_cmd	file:	access:public
stdout	apple/iOS/platform.h	/^      int stdout;$/;"	m	struct:__anon154::__anon155	access:public
stencil	libretro.h	/^   bool stencil; \/\/ Set if stencil buffers should be attached.$/;"	m	struct:retro_hw_render_callback	access:public
sthread	thread.c	/^struct sthread$/;"	s	file:
sthread::id	thread.c	/^   pthread_t id;$/;"	m	struct:sthread	file:	access:public
sthread::thread	thread.c	/^   HANDLE thread;$/;"	m	struct:sthread	file:	access:public
sthread_create	thread.c	/^sthread_t *sthread_create(void (*thread_func)(void*), void *userdata)$/;"	f	signature:(void (*thread_func)(void*), void *userdata)
sthread_create	thread.h	/^sthread_t *sthread_create(void (*thread_func)(void*), void *userdata);$/;"	p	signature:(void (*thread_func)(void*), void *userdata)
sthread_detach	thread.c	/^int sthread_detach(sthread_t *thread)$/;"	f	signature:(sthread_t *thread)
sthread_detach	thread.h	/^int sthread_detach(sthread_t *thread);$/;"	p	signature:(sthread_t *thread)
sthread_join	thread.c	/^void sthread_join(sthread_t *thread)$/;"	f	signature:(sthread_t *thread)
sthread_join	thread.h	/^void sthread_join(sthread_t *thread);$/;"	p	signature:(sthread_t *thread)
sthread_t	thread.h	/^typedef struct sthread sthread_t;$/;"	t	typeref:struct:sthread
stock_cg_program	gfx/shader_cg.c	/^static const char *stock_cg_program =$/;"	v	file:
stock_fragment_core	gfx/shader_glsl.c	/^static const char *stock_fragment_core =$/;"	v	file:
stock_fragment_core_blend	gfx/shader_glsl.c	/^static const char *stock_fragment_core_blend =$/;"	v	file:
stock_fragment_legacy	gfx/shader_glsl.c	/^static const char *stock_fragment_legacy =$/;"	v	file:
stock_fragment_modern	gfx/shader_glsl.c	/^static const char *stock_fragment_modern =$/;"	v	file:
stock_fragment_modern_blend	gfx/shader_glsl.c	/^static const char *stock_fragment_modern_blend =$/;"	v	file:
stock_hlsl_program	gfx/shader_hlsl.c	/^static const char *stock_hlsl_program =$/;"	v	file:
stock_program	gfx/d3d9/render_chain.cpp	/^   static const char *stock_program =$/;"	m	namespace:Global	file:
stock_vertex_core	gfx/shader_glsl.c	/^static const char *stock_vertex_core =$/;"	v	file:
stock_vertex_core_blend	gfx/shader_glsl.c	/^static const char *stock_vertex_core_blend =$/;"	v	file:
stock_vertex_legacy	gfx/shader_glsl.c	/^static const char *stock_vertex_legacy =$/;"	v	file:
stock_vertex_modern	gfx/shader_glsl.c	/^static const char *stock_vertex_modern =$/;"	v	file:
stock_vertex_modern_blend	gfx/shader_glsl.c	/^static const char *stock_vertex_modern_blend =$/;"	v	file:
stop	driver.h	/^   bool (*stop)(void *data);$/;"	m	struct:audio_driver	access:public
stop	driver.h	/^   void (*stop)(void *data);$/;"	m	struct:camera_driver	access:public
stop	driver.h	/^   void (*stop)(void *data);$/;"	m	struct:location_driver	access:public
stop	libretro.h	/^   retro_camera_stop_t stop; \/\/ Set by frontend.$/;"	m	struct:retro_camera_callback	access:public
stop	libretro.h	/^   retro_location_stop_t          stop;$/;"	m	struct:retro_location_callback	access:public
stopped	audio/thread_wrapper.c	/^   bool stopped;$/;"	m	struct:audio_thread	file:	access:public
storageSize	ps3/rgl/include/RGL/Types.h	/^      GLsizei storageSize;				\/\/ minimum allocation$/;"	m	struct:rglImage_	access:public
store32be	hash.c	/^static inline void store32be(uint32_t *addr, uint32_t data)$/;"	f	file:	signature:(uint32_t *addr, uint32_t data)
store32le	hash.c	/^static inline void store32le(uint32_t *addr, uint32_t data)$/;"	f	file:	signature:(uint32_t *addr, uint32_t data)
store_bgr24_sse2	gfx/scaler/pixconv.c	/^static inline void store_bgr24_sse2(void *output, __m128i a, __m128i b, __m128i c, __m128i d)$/;"	f	file:	signature:(void *output, __m128i a, __m128i b, __m128i c, __m128i d)
str	command.c	/^   const char *str;$/;"	m	struct:cmd_action_map	file:	access:public
str	command.c	/^   const char *str;$/;"	m	struct:cmd_map	file:	access:public
str	gfx/thread_wrapper.c	/^      const char *str;$/;"	m	union:thread_video::__anon215	file:	access:public
str	input/input_common.h	/^   const char *str;$/;"	m	struct:input_key_map	access:public
str	input/overlay.c	/^   const char *str;$/;"	m	struct:str_to_bind_map	file:	access:public
strName	xdk/xdk_resources.h	/^   CHAR* strName;$/;"	m	struct:XBRESOURCE	access:public
strStream_	ps3/rgl/src/cg/nvbiimpl.hpp	/^            bool			strStream_;$/;"	m	class:cgc::bio::nvb_reader_impl	access:private
str_buffer	frontend/menu/rmenu_xui.cpp	/^char str_buffer[PATH_MAX];$/;"	v
str_to_bind	input/overlay.c	/^static const struct str_to_bind_map str_to_bind[] = {$/;"	v	typeref:struct:str_to_bind_map	file:
str_to_bind_map	input/overlay.c	/^struct str_to_bind_map$/;"	s	file:
str_to_bind_map::bind	input/overlay.c	/^   unsigned bind;$/;"	m	struct:str_to_bind_map	file:	access:public
str_to_bind_map::str	input/overlay.c	/^   const char *str;$/;"	m	struct:str_to_bind_map	file:	access:public
strcasecmp	compat/compat.c	277;"	d	file:
strcasecmp	compat/posix_string.h	/^int strcasecmp(const char *a, const char *b);$/;"	p	signature:(const char *a, const char *b)
strcasecmp	compat/posix_string.h	27;"	d
strcasecmp	compat/posix_string.h	31;"	d
strcasecmp	griffin/griffin.c	82;"	d	file:
strcasecmp	msvc/msvc_compat.h	38;"	d
strcasecmp	msvc/msvc_compat.h	39;"	d
strcasestr	compat/strcasestr.h	/^char *strcasestr(const char *haystack, const char *needle);$/;"	p	signature:(const char *haystack, const char *needle)
strcasestr	compat/strcasestr.h	31;"	d
strcasestr_rarch__	compat/compat.c	/^char *strcasestr_rarch__(const char *haystack, const char *needle)$/;"	f	signature:(const char *haystack, const char *needle)
strcat_alloc	cheats.c	/^static char *strcat_alloc(char *dest, const char *input)$/;"	f	file:	signature:(char *dest, const char *input)
strcmpcasenosensitive_internal	deps/minizip/unzip.c	/^static  int strcmpcasenosensitive_internal (const char *fileName1, const char *fileName2)$/;"	f	file:	signature:(const char *fileName1, const char *fileName2)
strdup	compat/compat.c	278;"	d	file:
strdup	compat/posix_string.h	/^char *strdup(const char *orig);$/;"	p	signature:(const char *orig)
strdup	compat/posix_string.h	28;"	d
strdup	compat/posix_string.h	32;"	d
strdup_range	compat/rxml/rxml.c	/^static char *strdup_range(const char *begin, const char *end)$/;"	f	file:	signature:(const char *begin, const char *end)
strdup_range_escape	compat/rxml/rxml.c	/^static char *strdup_range_escape(const char *begin, const char *end)$/;"	f	file:	signature:(const char *begin, const char *end)
stream	audio/pulse.c	/^   pa_stream *stream;$/;"	m	struct:__anon102	file:	access:public
stream	deps/minizip/unzip.c	/^    z_stream stream;            \/* zLib stream structure for inflate *\/$/;"	m	struct:__anon110	file:	access:public
stream_initialised	deps/minizip/unzip.c	/^    uLong stream_initialised;   \/* flag set if stream structure is initialised*\/$/;"	m	struct:__anon110	file:	access:public
stream_latency_update_cb	audio/pulse.c	/^static void stream_latency_update_cb(pa_stream *s, void *data) $/;"	f	file:	signature:(pa_stream *s, void *data)
stream_ptr	ps3/sdk_defines.h	300;"	d
stream_request_cb	audio/pulse.c	/^static void stream_request_cb(pa_stream *s, size_t length, void *data) $/;"	f	file:	signature:(pa_stream *s, size_t length, void *data)
stream_select	ps3/sdk_defines.h	244;"	d
stream_select	ps3/sdk_defines.h	296;"	d
stream_size	ps3/sdk_defines.h	301;"	d
stream_state_cb	audio/pulse.c	/^static void stream_state_cb(pa_stream *s, void *data) $/;"	f	file:	signature:(pa_stream *s, void *data)
stream_success_cb	audio/pulse.c	/^static void stream_success_cb(pa_stream *s, int success, void *data)$/;"	f	file:	signature:(pa_stream *s, int success, void *data)
strength	input/udev_joypad.c	/^   uint16_t strength[2];$/;"	m	struct:udev_joypad	file:	access:public
stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon209	access:public
stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon210	access:public
stride	gfx/scaler/scaler.h	/^      int stride;$/;"	m	struct:scaler_ctx::__anon211	access:public
stride_x	gfx/rpng/rpng.c	/^   unsigned stride_x;$/;"	m	struct:adam7_pass	file:	access:public
stride_y	gfx/rpng/rpng.c	/^   unsigned stride_y;$/;"	m	struct:adam7_pass	file:	access:public
string	apple/common/setting_data.h	/^      char* string;$/;"	m	union:__anon161::__anon163	access:public
string	apple/common/setting_data.h	/^      const char* string;$/;"	m	union:__anon161::__anon162	access:public
string	ps3/ps3py/pkg.py	/^	def string(cls, len, offset=0, encoding=None, stripNulls=False, value=''):$/;"	m	class:Struct	access:public
string	ps3/ps3py/pkg.py	/^	string = classmethod(string)$/;"	v	class:Struct
stringTable	ps3/rgl/include/Cg/CgCommon.h	/^   const char *stringTable;$/;"	m	struct:_CGprogram	access:public
stringTable	ps3/rgl/include/Cg/CgProgramGroup.h	/^   unsigned int *stringTable;$/;"	m	struct:_CGprogramGroup	access:public
stringTableAdd	ps3/rgl/src/rgl_ps3_cg.cpp	/^static unsigned int stringTableAdd( std::vector<char> &stringTable, const char* str )$/;"	f	file:	signature:( std::vector<char> &stringTable, const char* str )
stringTableAddUnique	ps3/rgl/src/rgl_ps3_cg.cpp	/^static unsigned int stringTableAddUnique( std::vector<char> &stringTable, const char* str )$/;"	f	file:	signature:( std::vector<char> &stringTable, const char* str )
stringTableFind	ps3/rgl/src/rgl_ps3_cg.cpp	/^static unsigned int stringTableFind( std::vector<char> &stringTable, const char* str  )$/;"	f	file:	signature:( std::vector<char> &stringTable, const char* str )
string_list	file_path.h	/^struct string_list$/;"	s
string_list::cap	file_path.h	/^   size_t cap;$/;"	m	struct:string_list	access:public
string_list::elems	file_path.h	/^   struct string_list_elem *elems;$/;"	m	struct:string_list	typeref:struct:string_list::string_list_elem	access:public
string_list::size	file_path.h	/^   size_t size;$/;"	m	struct:string_list	access:public
string_list_append	file_path.c	/^bool string_list_append(struct string_list *list, const char *elem, union string_list_elem_attr attr)$/;"	f	signature:(struct string_list *list, const char *elem, union string_list_elem_attr attr)
string_list_append	file_path.h	/^bool string_list_append(struct string_list *list, const char *elem, union string_list_elem_attr attr);$/;"	p	signature:(struct string_list *list, const char *elem, union string_list_elem_attr attr)
string_list_capacity	file_path.c	/^static bool string_list_capacity(struct string_list *list, size_t cap)$/;"	f	file:	signature:(struct string_list *list, size_t cap)
string_list_elem	file_path.h	/^struct string_list_elem$/;"	s
string_list_elem::attr	file_path.h	/^   union string_list_elem_attr attr;$/;"	m	struct:string_list_elem	typeref:union:string_list_elem::string_list_elem_attr	access:public
string_list_elem::data	file_path.h	/^   char *data;$/;"	m	struct:string_list_elem	access:public
string_list_elem_attr	file_path.h	/^union string_list_elem_attr$/;"	u
string_list_elem_attr::b	file_path.h	/^   bool  b;$/;"	m	union:string_list_elem_attr	access:public
string_list_elem_attr::i	file_path.h	/^   int   i;$/;"	m	union:string_list_elem_attr	access:public
string_list_elem_attr::p	file_path.h	/^   void *p;$/;"	m	union:string_list_elem_attr	access:public
string_list_find_elem	file_path.c	/^bool string_list_find_elem(const struct string_list *list, const char *elem)$/;"	f	signature:(const struct string_list *list, const char *elem)
string_list_find_elem	file_path.h	/^bool string_list_find_elem(const struct string_list *list, const char *elem);$/;"	p	signature:(const struct string_list *list, const char *elem)
string_list_find_elem_prefix	file_path.c	/^bool string_list_find_elem_prefix(const struct string_list *list, const char *prefix, const char *elem)$/;"	f	signature:(const struct string_list *list, const char *prefix, const char *elem)
string_list_find_elem_prefix	file_path.h	/^bool string_list_find_elem_prefix(const struct string_list *list, const char *prefix, const char *elem);$/;"	p	signature:(const struct string_list *list, const char *prefix, const char *elem)
string_list_free	file_path.c	/^void string_list_free(struct string_list *list)$/;"	f	signature:(struct string_list *list)
string_list_free	file_path.h	/^void string_list_free(struct string_list *list);$/;"	p	signature:(struct string_list *list)
string_list_new	file_path.c	/^struct string_list *string_list_new(void)$/;"	f	signature:(void)
string_list_new	file_path.h	/^struct string_list *string_list_new(void);$/;"	p	signature:(void)
string_split	file_path.c	/^struct string_list *string_split(const char *str, const char *delim)$/;"	f	signature:(const char *str, const char *delim)
string_split	file_path.h	/^struct string_list *string_split(const char *str, const char *delim);$/;"	p	signature:(const char *str, const char *delim)
strip_comment	conf/config_file.c	/^static char *strip_comment(char *str)$/;"	f	file:	signature:(char *str)
strlcat	audio/rsound.h	/^size_t strlcat(char *dest, const char *source, size_t size);$/;"	p	signature:(char *dest, const char *source, size_t size)
strlcat	audio/rsound.h	330;"	d
strlcat	compat/compat.c	/^size_t strlcat(char *dest, const char *source, size_t size)$/;"	f	signature:(char *dest, const char *source, size_t size)
strlcat	compat/strl.h	/^size_t strlcat(char *dest, const char *source, size_t size);$/;"	p	signature:(char *dest, const char *source, size_t size)
strlcat	compat/strl.h	33;"	d
strlcpy	audio/rsound.h	/^size_t strlcpy(char *dest, const char *source, size_t size);$/;"	p	signature:(char *dest, const char *source, size_t size)
strlcpy	audio/rsound.h	329;"	d
strlcpy	compat/compat.c	/^size_t strlcpy(char *dest, const char *source, size_t size)$/;"	f	signature:(char *dest, const char *source, size_t size)
strlcpy	compat/strl.h	/^size_t strlcpy(char *dest, const char *source, size_t size);$/;"	p	signature:(char *dest, const char *source, size_t size)
strlcpy	compat/strl.h	32;"	d
strncasecmp	msvc/msvc_compat.h	40;"	d
strncasecmp	msvc/msvc_compat.h	41;"	d
strtab	ps3/rgl/src/rgl_cg.h	/^   const char* strtab;$/;"	m	struct:__anon31	access:public
strtabSize	ps3/rgl/src/rgl_cg.h	/^   size_t strtabSize;$/;"	m	struct:__anon31	access:public
strtok_r	compat/compat.c	280;"	d	file:
strtok_r	compat/posix_string.h	/^char *strtok_r(char *str, const char *delim, char **saveptr);$/;"	p	signature:(char *str, const char *delim, char **saveptr)
strtok_r	compat/posix_string.h	30;"	d
strtok_r	compat/posix_string.h	34;"	d
strtoull	msvc/msvc_compat.h	37;"	d
strw_buffer	frontend/menu/rmenu_xui.cpp	/^wchar_t strw_buffer[PATH_MAX];$/;"	v
suSsize	gx/gx_video_inl.h	/^	u32 suSsize[8];$/;"	m	struct:__gx_regdef	access:public
suTsize	gx/gx_video_inl.h	/^	u32 suTsize[8];$/;"	m	struct:__gx_regdef	access:public
subdir	android/phoenix/jni/apk-extract/apk-extract.c	/^   const char *subdir;$/;"	m	struct:userdata	file:	access:public
subroutine_a	media/360/generate_xuis.bat	/^:subroutine_a$/;"	l
subroutine_b	media/360/generate_xuis.bat	/^:subroutine_b$/;"	l
subroutine_c	media/360/generate_xuis.bat	/^:subroutine_c$/;"	l
subroutine_d	media/360/generate_xuis.bat	/^:subroutine_d$/;"	l
subroutine_e	media/360/generate_xuis.bat	/^:subroutine_e$/;"	l
subroutine_f	media/360/generate_xuis.bat	/^:subroutine_f$/;"	l
subroutine_g	media/360/generate_xuis.bat	/^:subroutine_g$/;"	l
subroutine_h	media/360/generate_xuis.bat	/^:subroutine_h$/;"	l
subroutine_i	media/360/generate_xuis.bat	/^:subroutine_i$/;"	l
subtitle	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	private final String subtitle;$/;"	f	class:InstalledCoreInfoItem	file:	access:private
success	audio/pulse.c	/^   bool success;$/;"	m	struct:__anon102	file:	access:public
sufami_rom_path	general.h	/^   char sufami_rom_path[2][PATH_MAX];$/;"	m	struct:global	access:public
support_unpack_row_length	gfx/gl_common.h	/^   bool support_unpack_row_length;$/;"	m	struct:gl	access:public
supportedCorePaths	android/phoenix/src/com/retroarch/browser/dirfragment/DetectCoreDirectoryFragment.java	/^	private ArrayList<String> supportedCorePaths = new ArrayList<String>();$/;"	f	class:DetectCoreDirectoryFragment	file:	access:private
supportedExtensions	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final List<String> supportedExtensions;$/;"	f	class:ModuleWrapper	file:	access:private
supported_extensions	core_info.h	/^   char *supported_extensions;$/;"	m	struct:__anon252	access:public
supported_extensions_list	core_info.h	/^   struct string_list *supported_extensions_list;$/;"	m	struct:__anon252	typeref:struct:__anon252::string_list	access:public
swap16	ps3/rgl/src/rgl_ps3_cg.cpp	3837;"	d	file:
swapFifoRef	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint swapFifoRef;$/;"	m	struct:__anon50	access:public
swapFifoRef2	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint swapFifoRef2; \/\/ Added for supporting Triple buffering [RSTENSON]$/;"	m	struct:__anon50	access:public
swap_buffers	gfx/gfx_context.h	/^   void (*swap_buffers)(void);$/;"	m	struct:gfx_ctx_driver	access:public
swap_if_big16	miscellaneous.h	/^static inline uint16_t swap_if_big16(uint16_t val)$/;"	f	signature:(uint16_t val)
swap_if_big32	miscellaneous.h	/^static inline uint32_t swap_if_big32(uint32_t val)$/;"	f	signature:(uint32_t val)
swap_if_little16	miscellaneous.h	/^static inline uint16_t swap_if_little16(uint16_t val)$/;"	f	signature:(uint16_t val)
swap_if_little32	miscellaneous.h	/^static inline uint32_t swap_if_little32(uint32_t val)$/;"	f	signature:(uint32_t val)
swap_interval	config.def.h	/^static unsigned swap_interval = 1;$/;"	v
swap_interval	general.h	/^      unsigned swap_interval;$/;"	m	struct:settings::__anon227	access:public
swap_interval	gfx/gfx_context.h	/^   void (*swap_interval)(unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
swapandsetfp	ps3/rgl/src/rgl_ps3_raster.cpp	79;"	d	file:
sws	record/ffemu.c	/^   struct SwsContext *sws;$/;"	m	struct:ff_video_info	typeref:struct:ff_video_info::SwsContext	file:	access:public
sym	gfx/glsym/glsym_es2.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
sym	gfx/glsym/glsym_gl.h	/^struct rglgen_sym_map { const char *sym; void *ptr; };$/;"	m	struct:rglgen_sym_map	access:public
sym	input/input_common.h	/^   unsigned sym;$/;"	m	struct:rarch_key_map	access:public
symbolCount	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolCount;$/;"	m	struct:_ELF_t	access:public
symbolCount	ps3/rgl/src/rgl_cg.h	/^   size_t symbolCount;$/;"	m	struct:__anon31	access:public
symbolNamesSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolNamesSection;$/;"	m	struct:_ELF_t	access:public
symbolSize	ps3/rgl/src/rgl_cg.h	/^   size_t symbolSize;$/;"	m	struct:__anon31	access:public
symbols	ps3/rgl/src/libelf/readelf.h	/^      ELF_symbol_t* symbols;$/;"	m	struct:_ELF_t	access:public
symbolsSection	ps3/rgl/src/libelf/readelf.h	/^      unsigned int symbolsSection;$/;"	m	struct:_ELF_t	access:public
symbolstrtab	ps3/rgl/src/rgl_cg.h	/^   const char *symbolstrtab;$/;"	m	struct:__anon31	access:public
symtab	ps3/rgl/src/rgl_cg.h	/^   const char *symtab;$/;"	m	struct:__anon31	access:public
sync	general.h	/^      bool sync;$/;"	m	struct:settings::__anon231	access:public
sync	gfx/omap_gfx.c	/^  bool sync;$/;"	m	struct:omapfb_data	file:	access:public
syncMethod	ps3/rgl/src/include/rgl-typedefs.h	/^   unsigned int syncMethod;$/;"	m	struct:__anon50	access:public
sync_after_write	wii/app_booter/sync.h	/^void sync_after_write(const void *p, u32 len);$/;"	p	signature:(const void *p, u32 len)
sync_before_exec	wii/app_booter/sync.c	/^void sync_before_exec(const void *p, u32 len)$/;"	f	signature:(const void *p, u32 len)
sync_before_exec	wii/app_booter/sync.h	/^void sync_before_exec(const void *p, u32 len);$/;"	p	signature:(const void *p, u32 len)
sync_before_read	wii/app_booter/sync.h	/^void sync_before_read(void *p, u32 len);$/;"	p	signature:(void *p, u32 len)
sys_event_queue_receive	ps3/sdk_defines.h	48;"	d
sys_lwcond_attribute_t	ps3/sdk_defines.h	72;"	d
sys_lwcond_create	ps3/sdk_defines.h	63;"	d
sys_lwcond_destroy	ps3/sdk_defines.h	64;"	d
sys_lwcond_signal	ps3/sdk_defines.h	66;"	d
sys_lwcond_wait	ps3/sdk_defines.h	65;"	d
sys_lwmutex_attribute_t	ps3/sdk_defines.h	71;"	d
sys_lwmutex_create	ps3/sdk_defines.h	57;"	d
sys_lwmutex_destroy	ps3/sdk_defines.h	54;"	d
sys_lwmutex_lock	ps3/sdk_defines.h	55;"	d
sys_lwmutex_unlock	ps3/sdk_defines.h	56;"	d
sys_memory_container_create	ps3/sdk_defines.h	345;"	d
sys_memory_container_destroy	ps3/sdk_defines.h	346;"	d
sys_memory_container_t	ps3/sdk_defines.h	160;"	d
sys_net_initialize_network	ps3/sdk_defines.h	596;"	d
sys_ppu_thread_create	ps3/sdk_defines.h	333;"	d
sys_ppu_thread_exit	ps3/sdk_defines.h	335;"	d
sys_ppu_thread_join	ps3/sdk_defines.h	334;"	d
sys_semaphore_t	ps3/sdk_defines.h	73;"	d
sys_timer_usleep	ps3/sdk_defines.h	324;"	d
system	general.h	/^   } system;$/;"	m	struct:global	typeref:struct:global::__anon234	access:public
system	tools/retrolaunch/main.c	/^	char system[10];$/;"	m	struct:RunInfo	file:	access:public
systemConfigPath	apple/iOS/platform.h	/^@property (nonatomic) NSString* systemConfigPath;   \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch\/frontend.cfg$/;"	v
systemDirectory	apple/iOS/platform.h	/^@property (nonatomic) NSString* systemDirectory;    \/\/ e.g. \/var\/mobile\/Documents\/.RetroArch$/;"	v
systemName	android/phoenix/src/com/retroarch/browser/ModuleWrapper.java	/^	private final String systemName;$/;"	f	class:ModuleWrapper	file:	access:private
system_deinit	frontend/platform/platform_android.c	/^static void system_deinit(void *data)$/;"	f	file:	signature:(void *data)
system_deinit	frontend/platform/platform_android.c	/^static void system_deinit(void *data);$/;"	p	file:	signature:(void *data)
system_deinit	frontend/platform/platform_gx.c	/^static void system_deinit(void *data)$/;"	f	file:	signature:(void *data)
system_deinit	frontend/platform/platform_ps3.c	/^static void system_deinit(void *data)$/;"	f	file:	signature:(void *data)
system_deinit	frontend/platform/platform_psp.c	/^static void system_deinit(void *data)$/;"	f	file:	signature:(void *data)
system_dir	console/rarch_console.h	/^   char system_dir[MAXIMUM_PATH];$/;"	m	struct:__anon85	access:public
system_directory	general.h	/^   char system_directory[PATH_MAX];$/;"	m	struct:settings	access:public
system_exec	frontend/platform/platform_gx.c	/^static void system_exec(const char *path, bool should_load_game)$/;"	f	file:	signature:(const char *path, bool should_load_game)
system_exec	frontend/platform/platform_gx.c	/^static void system_exec(const char *path, bool should_load_game);$/;"	p	file:	signature:(const char *path, bool should_load_game)
system_exec	frontend/platform/platform_ps3.c	/^static void system_exec(const char *path, bool should_load_game)$/;"	f	file:	signature:(const char *path, bool should_load_game)
system_exec	frontend/platform/platform_ps3.c	/^static void system_exec(const char *path, bool should_load_game);$/;"	p	file:	signature:(const char *path, bool should_load_game)
system_exec	frontend/platform/platform_xdk.c	/^static void system_exec(const char *path, bool should_load_game)$/;"	f	file:	signature:(const char *path, bool should_load_game)
system_exec	frontend/platform/platform_xdk.c	/^static void system_exec(const char *path, bool should_load_game);$/;"	p	file:	signature:(const char *path, bool should_load_game)
system_exec_wii	frontend/platform/platform_gx.c	/^extern void system_exec_wii(const char *path, bool should_load_game);$/;"	p	file:	signature:(const char *path, bool should_load_game)
system_exec_wii	frontend/platform/platform_wii.c	/^void system_exec_wii(const char *path, bool should_load_game)$/;"	f	signature:(const char *path, bool should_load_game)
system_exitspawn	frontend/platform/platform_gx.c	/^static void system_exitspawn(void)$/;"	f	file:	signature:(void)
system_exitspawn	frontend/platform/platform_ps3.c	/^static void system_exitspawn(void)$/;"	f	file:	signature:(void)
system_exitspawn	frontend/platform/platform_xdk.c	/^static void system_exitspawn(void)$/;"	f	file:	signature:(void)
system_init	frontend/platform/platform_android.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_init	frontend/platform/platform_gx.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_init	frontend/platform/platform_ps3.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_init	frontend/platform/platform_psp.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_init	frontend/platform/platform_qnx.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_init	frontend/platform/platform_xdk.c	/^static void system_init(void *data)$/;"	f	file:	signature:(void *data)
system_name	tools/retrolaunch/cd_detect.c	/^    const char* system_name;$/;"	m	struct:MagicEntry	file:	access:public
system_platform	wii/app_booter/Makefile	/^   system_platform = osx$/;"	m
system_platform	wii/app_booter/Makefile	/^   system_platform = win$/;"	m
system_platform	wii/app_booter/Makefile	/^system_platform = unix$/;"	m
system_process_args	frontend/platform/platform_gx.c	/^static int system_process_args(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
system_process_args	frontend/platform/platform_ps3.c	/^static int system_process_args(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
system_process_args	frontend/platform/platform_xdk.c	/^static int system_process_args(int argc, char *argv[], void *args)$/;"	f	file:	signature:(int argc, char *argv[], void *args)
system_shutdown	frontend/platform/platform_android.c	/^static void system_shutdown(bool unused)$/;"	f	file:	signature:(bool unused)
system_shutdown	frontend/platform/platform_android.c	/^static void system_shutdown(bool unused);$/;"	p	file:	signature:(bool unused)
system_shutdown	frontend/platform/platform_apple.c	/^static void system_shutdown(bool force)$/;"	f	file:	signature:(bool force)
system_shutdown	frontend/platform/platform_qnx.c	/^static void system_shutdown(void)$/;"	f	file:	signature:(void)
sysutilModeCount	ps3/rgl/src/rgl_ps3.cpp	/^static const int sysutilModeCount = sizeof( sysutilModes ) \/ sizeof( sysutilModes[0] );$/;"	v	file:
sysutilModes	ps3/rgl/src/rgl_ps3.cpp	/^static const VideoMode sysutilModes[] =$/;"	v	file:
tag_DISP_CMD	gfx/context/sunxi_disp_ioctl.h	/^typedef enum tag_DISP_CMD {$/;"	g
tail	conf/config_file.c	/^   struct config_entry_list *tail;$/;"	m	struct:config_file	typeref:struct:config_file::config_entry_list	file:	access:public
take_screenshot_raw	retroarch.c	/^static bool take_screenshot_raw(void)$/;"	f	file:	signature:(void)
take_screenshot_viewport	retroarch.c	/^static bool take_screenshot_viewport(void)$/;"	f	file:	signature:(void)
taps	audio/sinc.c	/^   unsigned taps;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
target	apple/iOS/bluetooth/btdynamic.c	/^   void** target;$/;"	m	struct:__anon141	file:	access:public
target	console/logger/logger.c	/^static struct sockaddr_in target;$/;"	v	typeref:struct:sockaddr_in	file:
target	frontend/menu/menu_common.h	/^   struct retro_keybind *target;$/;"	m	struct:rgui_bind_state	typeref:struct:rgui_bind_state::retro_keybind	access:public
target	ps3/rgl/include/RGL/Types.h	/^      GLuint target;$/;"	m	struct:__anon63	access:public
target_checksum	patch.c	/^   uint32_t modify_checksum, source_checksum, target_checksum;$/;"	m	struct:bps_data	file:	access:public
target_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
target_data	patch.c	/^   uint8_t *target_data;$/;"	m	struct:bps_data	file:	access:public
target_data	patch.c	/^   uint8_t *target_data;$/;"	m	struct:ups_data	file:	access:public
target_frame_time	gfx/thread_wrapper.c	/^   retro_time_t target_frame_time;$/;"	m	struct:thread_video	file:	access:public
target_length	patch.c	/^   size_t modify_length, source_length, target_length;$/;"	m	struct:bps_data	file:	access:public
target_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
target_offset	patch.c	/^   size_t modify_offset, source_offset, target_offset;$/;"	m	struct:bps_data	file:	access:public
target_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
target_relative_offset	patch.c	/^   size_t source_relative_offset, target_relative_offset, output_offset;$/;"	m	struct:bps_data	file:	access:public
tcon_index	gfx/context/sunxi_disp_ioctl.h	/^	__u32 tcon_index; \/* not need to config for user *\/$/;"	m	struct:__anon196	access:public
tdefl_calculate_minimum_redundancy	deps/miniz/miniz.c	/^static void tdefl_calculate_minimum_redundancy(tdefl_sym_freq *A, int n)$/;"	f	file:	signature:(tdefl_sym_freq *A, int n)
tdefl_compress	deps/miniz/miniz.c	/^tdefl_status tdefl_compress(tdefl_compressor *d, const void *pIn_buf, size_t *pIn_buf_size, void *pOut_buf, size_t *pOut_buf_size, tdefl_flush flush)$/;"	f	signature:(tdefl_compressor *d, const void *pIn_buf, size_t *pIn_buf_size, void *pOut_buf, size_t *pOut_buf_size, tdefl_flush flush)
tdefl_compress	deps/miniz/zlib.h	/^tdefl_status tdefl_compress(tdefl_compressor *d, const void *pIn_buf, size_t *pIn_buf_size, void *pOut_buf, size_t *pOut_buf_size, tdefl_flush flush);$/;"	p	signature:(tdefl_compressor *d, const void *pIn_buf, size_t *pIn_buf_size, void *pOut_buf, size_t *pOut_buf_size, tdefl_flush flush)
tdefl_compress_block	deps/miniz/miniz.c	/^static mz_bool tdefl_compress_block(tdefl_compressor *d, mz_bool static_block)$/;"	f	file:	signature:(tdefl_compressor *d, mz_bool static_block)
tdefl_compress_buffer	deps/miniz/miniz.c	/^tdefl_status tdefl_compress_buffer(tdefl_compressor *d, const void *pIn_buf, size_t in_buf_size, tdefl_flush flush)$/;"	f	signature:(tdefl_compressor *d, const void *pIn_buf, size_t in_buf_size, tdefl_flush flush)
tdefl_compress_buffer	deps/miniz/zlib.h	/^tdefl_status tdefl_compress_buffer(tdefl_compressor *d, const void *pIn_buf, size_t in_buf_size, tdefl_flush flush);$/;"	p	signature:(tdefl_compressor *d, const void *pIn_buf, size_t in_buf_size, tdefl_flush flush)
tdefl_compress_fast	deps/miniz/miniz.c	/^static mz_bool tdefl_compress_fast(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_compress_lz_codes	deps/miniz/miniz.c	/^static mz_bool tdefl_compress_lz_codes(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_compress_mem_to_heap	deps/miniz/miniz.c	/^void *tdefl_compress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)$/;"	f	signature:(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)
tdefl_compress_mem_to_heap	deps/miniz/zlib.h	/^void *tdefl_compress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags);$/;"	p	signature:(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)
tdefl_compress_mem_to_mem	deps/miniz/miniz.c	/^size_t tdefl_compress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)$/;"	f	signature:(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)
tdefl_compress_mem_to_mem	deps/miniz/zlib.h	/^size_t tdefl_compress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags);$/;"	p	signature:(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)
tdefl_compress_mem_to_output	deps/miniz/miniz.c	/^mz_bool tdefl_compress_mem_to_output(const void *pBuf, size_t buf_len, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f	signature:(const void *pBuf, size_t buf_len, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tdefl_compress_mem_to_output	deps/miniz/zlib.h	/^mz_bool tdefl_compress_mem_to_output(const void *pBuf, size_t buf_len, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags);$/;"	p	signature:(const void *pBuf, size_t buf_len, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tdefl_compress_normal	deps/miniz/miniz.c	/^static mz_bool tdefl_compress_normal(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_compressor	deps/miniz/zlib.h	/^} tdefl_compressor;$/;"	t	typeref:struct:__anon132
tdefl_create_comp_flags_from_zip_params	deps/miniz/miniz.c	/^mz_uint tdefl_create_comp_flags_from_zip_params(int level, int window_bits, int strategy)$/;"	f	signature:(int level, int window_bits, int strategy)
tdefl_create_comp_flags_from_zip_params	deps/miniz/zlib.h	/^mz_uint tdefl_create_comp_flags_from_zip_params(int level, int window_bits, int strategy);$/;"	p	signature:(int level, int window_bits, int strategy)
tdefl_find_match	deps/miniz/miniz.c	/^static MZ_FORCEINLINE void tdefl_find_match(tdefl_compressor *d, mz_uint lookahead_pos, mz_uint max_dist, mz_uint max_match_len, mz_uint *pMatch_dist, mz_uint *pMatch_len)$/;"	f	file:	signature:(tdefl_compressor *d, mz_uint lookahead_pos, mz_uint max_dist, mz_uint max_match_len, mz_uint *pMatch_dist, mz_uint *pMatch_len)
tdefl_flush	deps/miniz/zlib.h	/^} tdefl_flush;$/;"	t	typeref:enum:__anon131
tdefl_flush_block	deps/miniz/miniz.c	/^static int tdefl_flush_block(tdefl_compressor *d, int flush)$/;"	f	file:	signature:(tdefl_compressor *d, int flush)
tdefl_flush_output_buffer	deps/miniz/miniz.c	/^static tdefl_status tdefl_flush_output_buffer(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_get_adler32	deps/miniz/miniz.c	/^mz_uint32 tdefl_get_adler32(tdefl_compressor *d)$/;"	f	signature:(tdefl_compressor *d)
tdefl_get_adler32	deps/miniz/zlib.h	/^mz_uint32 tdefl_get_adler32(tdefl_compressor *d);$/;"	p	signature:(tdefl_compressor *d)
tdefl_get_prev_return_status	deps/miniz/miniz.c	/^tdefl_status tdefl_get_prev_return_status(tdefl_compressor *d)$/;"	f	signature:(tdefl_compressor *d)
tdefl_get_prev_return_status	deps/miniz/zlib.h	/^tdefl_status tdefl_get_prev_return_status(tdefl_compressor *d);$/;"	p	signature:(tdefl_compressor *d)
tdefl_huffman_enforce_max_code_size	deps/miniz/miniz.c	/^static void tdefl_huffman_enforce_max_code_size(int *pNum_codes, int code_list_len, int max_code_size)$/;"	f	file:	signature:(int *pNum_codes, int code_list_len, int max_code_size)
tdefl_init	deps/miniz/miniz.c	/^tdefl_status tdefl_init(tdefl_compressor *d, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f	signature:(tdefl_compressor *d, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tdefl_init	deps/miniz/zlib.h	/^tdefl_status tdefl_init(tdefl_compressor *d, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags);$/;"	p	signature:(tdefl_compressor *d, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tdefl_optimize_huffman_table	deps/miniz/miniz.c	/^static void tdefl_optimize_huffman_table(tdefl_compressor *d, int table_num, int table_len, int code_size_limit, int static_table)$/;"	f	file:	signature:(tdefl_compressor *d, int table_num, int table_len, int code_size_limit, int static_table)
tdefl_output_buffer	deps/miniz/miniz.c	/^} tdefl_output_buffer;$/;"	t	typeref:struct:__anon136	file:
tdefl_output_buffer_putter	deps/miniz/miniz.c	/^static mz_bool tdefl_output_buffer_putter(const void *pBuf, int len, void *pUser)$/;"	f	file:	signature:(const void *pBuf, int len, void *pUser)
tdefl_put_buf_func_ptr	deps/miniz/zlib.h	/^typedef mz_bool (*tdefl_put_buf_func_ptr)(const void* pBuf, int len, void *pUser);$/;"	t
tdefl_radix_sort_syms	deps/miniz/miniz.c	/^static tdefl_sym_freq* tdefl_radix_sort_syms(mz_uint num_syms, tdefl_sym_freq* pSyms0, tdefl_sym_freq* pSyms1)$/;"	f	file:	signature:(mz_uint num_syms, tdefl_sym_freq* pSyms0, tdefl_sym_freq* pSyms1)
tdefl_record_literal	deps/miniz/miniz.c	/^static MZ_FORCEINLINE void tdefl_record_literal(tdefl_compressor *d, mz_uint8 lit)$/;"	f	file:	signature:(tdefl_compressor *d, mz_uint8 lit)
tdefl_record_match	deps/miniz/miniz.c	/^static MZ_FORCEINLINE void tdefl_record_match(tdefl_compressor *d, mz_uint match_len, mz_uint match_dist)$/;"	f	file:	signature:(tdefl_compressor *d, mz_uint match_len, mz_uint match_dist)
tdefl_start_dynamic_block	deps/miniz/miniz.c	/^static void tdefl_start_dynamic_block(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_start_static_block	deps/miniz/miniz.c	/^static void tdefl_start_static_block(tdefl_compressor *d)$/;"	f	file:	signature:(tdefl_compressor *d)
tdefl_status	deps/miniz/zlib.h	/^} tdefl_status;$/;"	t	typeref:enum:__anon130
tdefl_sym_freq	deps/miniz/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	t	typeref:struct:__anon134	file:
tdefl_write_image_to_png_file_in_memory	deps/miniz/miniz.c	/^void *tdefl_write_image_to_png_file_in_memory(const void *pImage, int w, int h, int num_chans, size_t *pLen_out)$/;"	f	signature:(const void *pImage, int w, int h, int num_chans, size_t *pLen_out)
tdefl_write_image_to_png_file_in_memory	deps/miniz/zlib.h	/^void *tdefl_write_image_to_png_file_in_memory(const void *pImage, int w, int h, int num_chans, size_t *pLen_out);$/;"	p	signature:(const void *pImage, int w, int h, int num_chans, size_t *pLen_out)
tdefl_write_image_to_png_file_in_memory_ex	deps/miniz/miniz.c	/^void *tdefl_write_image_to_png_file_in_memory_ex(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip)$/;"	f	signature:(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip)
tdefl_write_image_to_png_file_in_memory_ex	deps/miniz/zlib.h	/^void *tdefl_write_image_to_png_file_in_memory_ex(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip);$/;"	p	signature:(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip)
tell_file_func	deps/minizip/unzip.c	/^typedef long (*tell_file_func) (voidpf opaque, voidpf stream);$/;"	t	file:
test_bit	input/udev_joypad.c	252;"	d	file:
test_fft	audio/test/snr.c	/^static void test_fft(void)$/;"	f	file:	signature:(void)
test_linked_list	apple/iOS/bluetooth/btstack/linked_list.h	/^void test_linked_list(void);$/;"	p	signature:(void)
testerror_file_func	deps/minizip/unzip.c	/^typedef int (*testerror_file_func) (voidpf opaque, voidpf stream);$/;"	t	file:
tevAlphaEnv	gx/gx_video_inl.h	/^	u32 tevAlphaEnv[16];$/;"	m	struct:__gx_regdef	access:public
tevColorEnv	gx/gx_video_inl.h	/^	u32 tevColorEnv[16];$/;"	m	struct:__gx_regdef	access:public
tevIndMask	gx/gx_video_inl.h	/^	u32 tevIndMask;$/;"	m	struct:__gx_regdef	access:public
tevRasOrder	gx/gx_video_inl.h	/^	u32 tevRasOrder[11];$/;"	m	struct:__gx_regdef	access:public
tevSwapModeTable	gx/gx_video_inl.h	/^	u32 tevSwapModeTable[8];$/;"	m	struct:__gx_regdef	access:public
tevTexCoordEnable	gx/gx_video_inl.h	/^	u32 tevTexCoordEnable;$/;"	m	struct:__gx_regdef	access:public
tevTexMap	gx/gx_video_inl.h	/^	u32 tevTexMap[16];$/;"	m	struct:__gx_regdef	access:public
tex	camera/android.c	/^   GLuint tex;$/;"	m	struct:android_camera	file:	access:public
tex	gfx/d3d9/d3d9.hpp	/^   IDirect3DTexture9 *tex;$/;"	m	struct:__anon222	access:public
tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex;$/;"	m	struct:RenderChain::Pass	access:public
tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex;$/;"	m	struct:RenderChain::lut_info	access:public
tex	gfx/d3d9/render_chain.hpp	/^         IDirect3DTexture9 *tex[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
tex	gfx/gl_common.h	/^   GLuint tex;$/;"	m	struct:gl_overlay_data	access:public
tex	gfx/gl_common.h	/^   GLuint tex;$/;"	m	struct:gl_tex_info	access:public
tex	gfx/shader_cg.c	/^   CGparameter tex;$/;"	m	struct:cg_fbo_params	file:	access:public
tex	gfx/shader_cg.c	/^   CGparameter tex;$/;"	m	struct:cg_program	file:	access:public
texCoordGen	gx/gx_video_inl.h	/^	u32 texCoordGen[8];$/;"	m	struct:__gx_regdef	access:public
texCoordGen2	gx/gx_video_inl.h	/^	u32 texCoordGen2[8];$/;"	m	struct:__gx_regdef	access:public
texCoordManually	gx/gx_video_inl.h	/^	u32 texCoordManually;$/;"	m	struct:__gx_regdef	access:public
texCoords2D	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoords2D;             \/\/ tex coords that are 2d        (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
texCoordsCentroid	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoordsCentroid;       \/\/ tex coords that are centroid  (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
texCoordsInputMask	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned short texCoordsInputMask;      \/\/ tex coords used by frag prog. (tex<n> is bit n)$/;"	m	struct:CgBinaryFragmentProgram	access:public
texCopyCntrl	gx/gx_video_inl.h	/^	u32 texCopyCntrl;$/;"	m	struct:__gx_regdef	access:public
texCopyDst	gx/gx_video_inl.h	/^	u32 texCopyDst;$/;"	m	struct:__gx_regdef	access:public
texCopyTL	gx/gx_video_inl.h	/^	u32 texCopyTL;$/;"	m	struct:__gx_regdef	access:public
texCopyWH	gx/gx_video_inl.h	/^	u32 texCopyWH;$/;"	m	struct:__gx_regdef	access:public
texCopyZTex	gx/gx_video_inl.h	/^	u8 texCopyZTex;$/;"	m	struct:__gx_regdef	access:public
texMapSize	gx/gx_video_inl.h	/^	u32 texMapSize[8];$/;"	m	struct:__gx_regdef	access:public
texMapWrap	gx/gx_video_inl.h	/^	u32 texMapWrap[8];$/;"	m	struct:__gx_regdef	access:public
texRegion	gx/gx_video_inl.h	/^	GXTexRegion texRegion[24];$/;"	m	struct:__gx_regdef	access:public
tex_coord	gfx/gl_common.h	/^   GLfloat tex_coord[8];$/;"	m	struct:gl_overlay_data	access:public
tex_coord	gfx/gl_common.h	/^   const GLfloat *tex_coord;$/;"	m	struct:gl_coords	access:public
tex_coord	gfx/shader_glsl.c	/^   int tex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
tex_coord	gfx/shader_glsl.c	/^   int tex_coord;$/;"	m	struct:shader_uniforms_frame	file:	access:public
tex_coords	gfx/d3d9/d3d9.hpp	/^   Coords tex_coords;$/;"	m	struct:__anon222	access:public
tex_coords	gfx/gl.c	/^static const GLfloat tex_coords[] = {$/;"	v	file:
tex_coords	gfx/gl_common.h	/^   GLfloat tex_coords[8];$/;"	m	struct:gl	access:public
tex_filt	gx/gx_video_inl.h	/^	u32 tex_filt;$/;"	m	struct:__gx_texobj	access:public
tex_filter	gfx/gl_common.h	/^   GLuint tex_filter;$/;"	m	struct:gl	access:public
tex_flag	gx/gx_video_inl.h	/^	u8 tex_flag;$/;"	m	struct:__gx_texobj	access:public
tex_fmt	gx/gx_video_inl.h	/^	u32 tex_fmt;$/;"	m	struct:__gx_texobj	access:public
tex_geom	driver.h	/^   void (*tex_geom)(void *data, unsigned image, float x, float y, float w, float h);$/;"	m	struct:video_overlay_interface	access:public
tex_h	gfx/d3d9/d3d9.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:__anon222	access:public
tex_h	gfx/d3d9/render_chain.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:LinkInfo	access:public
tex_h	gfx/gl_common.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:gl	access:public
tex_h	psp1/psp1_video.c	/^   unsigned tex_h;$/;"	m	struct:psp1_video	file:	access:public
tex_h	xdk/xdk_d3d.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:xdk_d3d_video	access:public
tex_index	gfx/gl_common.h	/^   unsigned tex_index; \/\/ For use with PREV.$/;"	m	struct:gl	access:public
tex_lod	gx/gx_video_inl.h	/^	u32 tex_lod;$/;"	m	struct:__gx_texobj	access:public
tex_maddr	gx/gx_video_inl.h	/^	u32 tex_maddr;$/;"	m	struct:__gx_texobj	access:public
tex_size	gfx/gl_common.h	/^   GLfloat tex_size[2];$/;"	m	struct:gl_tex_info	access:public
tex_size	gx/gx_video_inl.h	/^	u32 tex_size;$/;"	m	struct:__gx_texobj	access:public
tex_size_f	gfx/shader_cg.c	/^   CGparameter tex_size_f;$/;"	m	struct:cg_fbo_params	file:	access:public
tex_size_f	gfx/shader_cg.c	/^   CGparameter tex_size_f;$/;"	m	struct:cg_program	file:	access:public
tex_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	tex_size_f;$/;"	m	struct:hlsl_program	file:	access:public
tex_size_v	gfx/shader_cg.c	/^   CGparameter tex_size_v;$/;"	m	struct:cg_fbo_params	file:	access:public
tex_size_v	gfx/shader_cg.c	/^   CGparameter tex_size_v;$/;"	m	struct:cg_program	file:	access:public
tex_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	tex_size_v;$/;"	m	struct:hlsl_program	file:	access:public
tex_tile_cnt	gx/gx_video_inl.h	/^	u16 tex_tile_cnt;$/;"	m	struct:__gx_texobj	access:public
tex_tile_type	gx/gx_video_inl.h	/^	u8 tex_tile_type;$/;"	m	struct:__gx_texobj	access:public
tex_tlut	gx/gx_video_inl.h	/^	u32 tex_tlut;$/;"	m	struct:__gx_texobj	access:public
tex_w	gfx/d3d9/d3d9.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:__anon222	access:public
tex_w	gfx/d3d9/render_chain.hpp	/^   unsigned tex_w, tex_h;$/;"	m	struct:LinkInfo	access:public
tex_w	gfx/gl_common.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:gl	access:public
tex_w	psp1/psp1_video.c	/^   unsigned tex_w;$/;"	m	struct:psp1_video	file:	access:public
tex_w	xdk/xdk_d3d.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:xdk_d3d_video	access:public
texcoord2d	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoord2d;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
texcoordCentroid	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoordCentroid;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
texcoordInputMask	ps3/rgl/include/Cg/CgInternal.h	/^            unsigned short texcoordInputMask;$/;"	m	struct:CgProgramHeader::__anon74::__anon76	access:public
text	android/phoenix/src/com/retroarch/browser/preferences/util/SeekbarPreference.java	/^	private TextView text;$/;"	f	class:SeekbarPreference	file:	access:private
text_buf	ps3/ps3_input_osk.c	/^   wchar_t text_buf[CELL_OSKDIALOG_STRING_SIZE + 1];$/;"	m	struct:ps3_osk	file:	access:public
text_pos	wii/app_booter/dolloader.c	/^	u32 text_pos[7];$/;"	m	struct:_dolheader	file:	access:public
text_size	wii/app_booter/dolloader.c	/^	u32 text_size[7];$/;"	m	struct:_dolheader	file:	access:public
text_start	wii/app_booter/dolloader.c	/^	u32 text_start[7];$/;"	m	struct:_dolheader	file:	access:public
texttab	ps3/rgl/src/rgl_cg.h	/^   const char *texttab;$/;"	m	struct:__anon32	access:public
texttabSize	ps3/rgl/src/rgl_cg.h	/^   size_t texttabSize;$/;"	m	struct:__anon32	access:public
texture	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private SurfaceTexture texture;$/;"	f	class:RetroActivityCamera	file:	access:private
texture	gfx/gl_common.h	/^   GLuint texture[MAX_TEXTURES];$/;"	m	struct:gl	access:public
texture	gfx/shader_glsl.c	/^   int texture;$/;"	m	struct:shader_uniforms_frame	file:	access:public
texture	gfx/thread_wrapper.c	/^   } texture;$/;"	m	struct:thread_video	typeref:struct:thread_video::__anon214	file:	access:public
textureNameSpace	ps3/rgl/include/RGL/Types.h	/^      rglTexNameSpace textureNameSpace;$/;"	m	struct:RGLcontext	access:public
textureReferences	ps3/rgl/include/RGL/Types.h	/^      RGL::Vector<rglTexture *> textureReferences;$/;"	m	struct:rglBufferObject	access:public
textureTarget	ps3/rgl/include/RGL/Types.h	/^   GLenum textureTarget;$/;"	m	struct:rglFramebufferAttachment	access:public
texture_fmt	gfx/gl_common.h	/^   GLenum texture_fmt;$/;"	m	struct:gl	access:public
texture_fmt	xdk/xdk_d3d.h	/^   D3DFORMAT texture_fmt;$/;"	m	struct:xdk_d3d_video	access:public
texture_image	gfx/image.h	/^struct texture_image$/;"	s
texture_image::height	gfx/image.h	/^   unsigned height;$/;"	m	struct:texture_image	access:public
texture_image::pixels	gfx/image.h	/^   LPDIRECT3DTEXTURE pixels;$/;"	m	struct:texture_image	access:public
texture_image::pixels	gfx/image.h	/^   uint32_t *pixels;$/;"	m	struct:texture_image	access:public
texture_image::vertex_buf	gfx/image.h	/^   LPDIRECT3DVERTEXBUFFER vertex_buf;$/;"	m	struct:texture_image	access:public
texture_image::width	gfx/image.h	/^   unsigned width;$/;"	m	struct:texture_image	access:public
texture_image::x	gfx/image.h	/^   unsigned x;$/;"	m	struct:texture_image	access:public
texture_image::y	gfx/image.h	/^   unsigned y;$/;"	m	struct:texture_image	access:public
texture_image_load	gfx/image.c	/^bool texture_image_load(const char *path, struct texture_image *out_img)$/;"	f	signature:(const char *path, struct texture_image *out_img)
texture_image_load	gfx/image.h	/^bool texture_image_load(const char *path, struct texture_image* img);$/;"	p	signature:(const char *path, struct texture_image* img)
texture_image_load	ps3/image.c	/^bool texture_image_load(const char *path, struct texture_image *out_img)$/;"	f	signature:(const char *path, struct texture_image *out_img)
texture_image_load	xdk/image.c	/^bool texture_image_load(const char *path, struct texture_image *out_img)$/;"	f	signature:(const char *path, struct texture_image *out_img)
texture_image_load_argb_shift	gfx/image.c	/^bool texture_image_load_argb_shift(const char *path, struct texture_image *out_img,$/;"	f	signature:(const char *path, struct texture_image *out_img, unsigned a_shift, unsigned r_shift, unsigned g_shift, unsigned b_shift)
texture_image_load_tga_shift	gfx/image.c	/^static bool texture_image_load_tga_shift(const char *path, struct texture_image *out_img,$/;"	f	file:	signature:(const char *path, struct texture_image *out_img, unsigned a_shift, unsigned r_shift, unsigned g_shift, unsigned b_shift)
texture_image_render	xdk/xdk_d3d.cpp	/^static bool texture_image_render(struct texture_image *out_img,$/;"	f	file:	signature:(struct texture_image *out_img, int x, int y, int w, int h, bool force_fullscreen)
texture_image_render	xdk/xdk_d3d.h	/^extern bool texture_image_render(struct texture_image *out_img);$/;"	p	signature:(struct texture_image *out_img)
texture_size	gfx/shader_glsl.c	/^   int texture_size;$/;"	m	struct:shader_uniforms	file:	access:public
texture_size	gfx/shader_glsl.c	/^   int texture_size;$/;"	m	struct:shader_uniforms_frame	file:	access:public
texture_type	gfx/gl_common.h	/^   GLenum texture_type; \/\/ RGB565 or ARGB$/;"	m	struct:gl	access:public
textures	gfx/gl_common.h	/^   unsigned textures;$/;"	m	struct:gl	access:public
their_addr	netplay.c	/^   struct sockaddr_storage their_addr;$/;"	m	struct:netplay	typeref:struct:netplay::sockaddr_storage	file:	access:public
thread	audio/dsound.c	/^   HANDLE thread;$/;"	m	struct:dsound	file:	access:public
thread	audio/rsound.h	/^         sthread_t *thread;$/;"	m	struct:rsound::__anon106	access:public
thread	audio/rsound.h	/^      } thread;$/;"	m	struct:rsound	typeref:struct:rsound::__anon106	access:public
thread	audio/thread_wrapper.c	/^   sthread_t *thread;$/;"	m	struct:audio_thread	file:	access:public
thread	autosave.c	/^   sthread_t *thread;$/;"	m	struct:autosave	file:	access:public
thread	frontend/platform/platform_android.h	/^   sthread_t *thread;$/;"	m	struct:android_app	access:public
thread	gfx/thread_wrapper.c	/^   sthread_t *thread;$/;"	m	struct:thread_video	file:	access:public
thread	ps3/ps3_audio.c	/^   sys_ppu_thread_t thread;$/;"	m	struct:__anon78	file:	access:public
thread	record/ffemu.c	/^   sthread_t *thread;$/;"	m	struct:ffemu	file:	access:public
thread	thread.c	/^   HANDLE thread;$/;"	m	struct:sthread	file:	access:public
thread_active	audio/rsound.h	/^      volatile int thread_active;$/;"	m	struct:rsound	access:public
thread_alive	audio/dsound.c	/^   volatile bool thread_alive;$/;"	m	struct:dsound	file:	access:public
thread_alive	gfx/thread_wrapper.c	/^static bool thread_alive(void *data)$/;"	f	file:	signature:(void *data)
thread_apply_state_changes	gfx/thread_wrapper.c	/^static void thread_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
thread_cmd	gfx/thread_wrapper.c	/^enum thread_cmd$/;"	g	file:
thread_data	thread.c	/^struct thread_data$/;"	s	file:
thread_data::func	thread.c	/^   void (*func)(void*);$/;"	m	struct:thread_data	file:	access:public
thread_data::userdata	thread.c	/^   void *userdata;$/;"	m	struct:thread_data	file:	access:public
thread_dead	audio/alsathread.c	/^   volatile bool thread_dead;$/;"	m	struct:alsa_thread	file:	access:public
thread_focus	gfx/thread_wrapper.c	/^static bool thread_focus(void *data)$/;"	f	file:	signature:(void *data)
thread_frame	gfx/thread_wrapper.c	/^static bool thread_frame(void *data, const void *frame_,$/;"	f	file:	signature:(void *data, const void *frame_, unsigned width, unsigned height, unsigned pitch, const char *msg)
thread_free	gfx/thread_wrapper.c	/^static void thread_free(void *data)$/;"	f	file:	signature:(void *data)
thread_get_overlay_interface	gfx/thread_wrapper.c	/^static void thread_get_overlay_interface(void *data, const video_overlay_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_overlay_interface_t **iface)
thread_get_poke_interface	gfx/thread_wrapper.c	/^static void thread_get_poke_interface(void *data, const video_poke_interface_t **iface)$/;"	f	file:	signature:(void *data, const video_poke_interface_t **iface)
thread_init	gfx/thread_wrapper.c	/^static bool thread_init(thread_video_t *thr, const video_info_t *info, const input_driver_t **input,$/;"	f	file:	signature:(thread_video_t *thr, const video_info_t *info, const input_driver_t **input, void **input_data)
thread_init_never_call	gfx/thread_wrapper.c	/^static void *thread_init_never_call(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
thread_key	frontend/platform/platform_android.c	/^static pthread_key_t thread_key;$/;"	v	file:
thread_loop	gfx/thread_wrapper.c	/^static void thread_loop(void *data)$/;"	f	file:	signature:(void *data)
thread_overlay	gfx/thread_wrapper.c	/^static const video_overlay_interface_t thread_overlay = {$/;"	v	file:
thread_overlay_enable	gfx/thread_wrapper.c	/^static void thread_overlay_enable(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
thread_overlay_full_screen	gfx/thread_wrapper.c	/^static void thread_overlay_full_screen(void *data, bool enable)$/;"	f	file:	signature:(void *data, bool enable)
thread_overlay_load	gfx/thread_wrapper.c	/^static bool thread_overlay_load(void *data, const struct video_overlay_image *images, unsigned num_images)$/;"	f	file:	signature:(void *data, const struct video_overlay_image *images, unsigned num_images)
thread_overlay_set_alpha	gfx/thread_wrapper.c	/^static void thread_overlay_set_alpha(void *data, unsigned index, float mod)$/;"	f	file:	signature:(void *data, unsigned index, float mod)
thread_overlay_tex_geom	gfx/thread_wrapper.c	/^static void thread_overlay_tex_geom(void *data, unsigned index, float x, float y, float w, float h)$/;"	f	file:	signature:(void *data, unsigned index, float x, float y, float w, float h)
thread_overlay_vertex_geom	gfx/thread_wrapper.c	/^static void thread_overlay_vertex_geom(void *data, unsigned index, float x, float y, float w, float h)$/;"	f	file:	signature:(void *data, unsigned index, float x, float y, float w, float h)
thread_poke	gfx/thread_wrapper.c	/^static const video_poke_interface_t thread_poke = {$/;"	v	file:
thread_read_viewport	gfx/thread_wrapper.c	/^static bool thread_read_viewport(void *data, uint8_t *buffer)$/;"	f	file:	signature:(void *data, uint8_t *buffer)
thread_reply	gfx/thread_wrapper.c	/^static void thread_reply(thread_video_t *thr, enum thread_cmd cmd)$/;"	f	file:	signature:(thread_video_t *thr, enum thread_cmd cmd)
thread_restart	gfx/thread_wrapper.c	/^static void thread_restart(void) {}$/;"	f	file:	signature:(void)
thread_send_cmd	gfx/thread_wrapper.c	/^static void thread_send_cmd(thread_video_t *thr, enum thread_cmd cmd)$/;"	f	file:	signature:(thread_video_t *thr, enum thread_cmd cmd)
thread_set_aspect_ratio	gfx/thread_wrapper.c	/^static void thread_set_aspect_ratio(void *data, unsigned aspectratio_index)$/;"	f	file:	signature:(void *data, unsigned aspectratio_index)
thread_set_callbacks	gfx/thread_wrapper.c	/^static void thread_set_callbacks(thread_video_t *thr, const video_driver_t *driver)$/;"	f	file:	signature:(thread_video_t *thr, const video_driver_t *driver)
thread_set_filtering	gfx/thread_wrapper.c	/^static void thread_set_filtering(void *data, unsigned index, bool smooth)$/;"	f	file:	signature:(void *data, unsigned index, bool smooth)
thread_set_nonblock_state	gfx/thread_wrapper.c	/^static void thread_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
thread_set_rotation	gfx/thread_wrapper.c	/^static void thread_set_rotation(void *data, unsigned rotation)$/;"	f	file:	signature:(void *data, unsigned rotation)
thread_set_shader	gfx/thread_wrapper.c	/^static bool thread_set_shader(void *data, enum rarch_shader_type type, const char *path)$/;"	f	file:	signature:(void *data, enum rarch_shader_type type, const char *path)
thread_set_texture_enable	gfx/thread_wrapper.c	/^static void thread_set_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
thread_set_texture_frame	gfx/thread_wrapper.c	/^static void thread_set_texture_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
thread_video	gfx/thread_wrapper.c	/^typedef struct thread_video$/;"	s	file:
thread_video::__anon214::alpha	gfx/thread_wrapper.c	/^      float alpha;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::enable	gfx/thread_wrapper.c	/^      bool enable;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::frame	gfx/thread_wrapper.c	/^      void *frame;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::frame_cap	gfx/thread_wrapper.c	/^      size_t frame_cap;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::frame_updated	gfx/thread_wrapper.c	/^      bool frame_updated;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::full_screen	gfx/thread_wrapper.c	/^      bool full_screen;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::height	gfx/thread_wrapper.c	/^      unsigned height;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::rgb32	gfx/thread_wrapper.c	/^      bool rgb32;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon214::width	gfx/thread_wrapper.c	/^      unsigned width;$/;"	m	struct:thread_video::__anon214	file:	access:public
thread_video::__anon215::__anon216::path	gfx/thread_wrapper.c	/^         const char *path;$/;"	m	struct:thread_video::__anon215::__anon216	file:	access:public
thread_video::__anon215::__anon216::type	gfx/thread_wrapper.c	/^         enum rarch_shader_type type;$/;"	m	struct:thread_video::__anon215::__anon216	typeref:enum:thread_video::__anon215::__anon216::rarch_shader_type	file:	access:public
thread_video::__anon215::__anon217::h	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::__anon217::index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::__anon217::w	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::__anon217::x	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::__anon217::y	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::__anon218::index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon218	file:	access:public
thread_video::__anon215::__anon218::mod	gfx/thread_wrapper.c	/^         float mod;$/;"	m	struct:thread_video::__anon215::__anon218	file:	access:public
thread_video::__anon215::__anon219::data	gfx/thread_wrapper.c	/^         const struct video_overlay_image *data;$/;"	m	struct:thread_video::__anon215::__anon219	typeref:struct:thread_video::__anon215::__anon219::video_overlay_image	file:	access:public
thread_video::__anon215::__anon219::num	gfx/thread_wrapper.c	/^         unsigned num;$/;"	m	struct:thread_video::__anon215::__anon219	file:	access:public
thread_video::__anon215::__anon220::index	gfx/thread_wrapper.c	/^         unsigned index;$/;"	m	struct:thread_video::__anon215::__anon220	file:	access:public
thread_video::__anon215::__anon220::smooth	gfx/thread_wrapper.c	/^         bool smooth;$/;"	m	struct:thread_video::__anon215::__anon220	file:	access:public
thread_video::__anon215::alpha	gfx/thread_wrapper.c	/^      } alpha;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon218	file:	access:public
thread_video::__anon215::b	gfx/thread_wrapper.c	/^      bool b;$/;"	m	union:thread_video::__anon215	file:	access:public
thread_video::__anon215::f	gfx/thread_wrapper.c	/^      float f;$/;"	m	union:thread_video::__anon215	file:	access:public
thread_video::__anon215::filtering	gfx/thread_wrapper.c	/^      } filtering;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon220	file:	access:public
thread_video::__anon215::i	gfx/thread_wrapper.c	/^      int i;$/;"	m	union:thread_video::__anon215	file:	access:public
thread_video::__anon215::image	gfx/thread_wrapper.c	/^      } image;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon219	file:	access:public
thread_video::__anon215::rect	gfx/thread_wrapper.c	/^      } rect;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon217	file:	access:public
thread_video::__anon215::set_shader	gfx/thread_wrapper.c	/^      } set_shader;$/;"	m	union:thread_video::__anon215	typeref:struct:thread_video::__anon215::__anon216	file:	access:public
thread_video::__anon215::str	gfx/thread_wrapper.c	/^      const char *str;$/;"	m	union:thread_video::__anon215	file:	access:public
thread_video::__anon215::v	gfx/thread_wrapper.c	/^      void *v;$/;"	m	union:thread_video::__anon215	file:	access:public
thread_video::__anon221::buffer	gfx/thread_wrapper.c	/^      uint8_t *buffer;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::height	gfx/thread_wrapper.c	/^      unsigned height;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::lock	gfx/thread_wrapper.c	/^      slock_t *lock;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::msg	gfx/thread_wrapper.c	/^      char msg[1024];$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::pitch	gfx/thread_wrapper.c	/^      unsigned pitch;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::updated	gfx/thread_wrapper.c	/^      bool updated;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::__anon221::width	gfx/thread_wrapper.c	/^      unsigned width;$/;"	m	struct:thread_video::__anon221	file:	access:public
thread_video::alive	gfx/thread_wrapper.c	/^   bool alive;$/;"	m	struct:thread_video	file:	access:public
thread_video::apply_state_changes	gfx/thread_wrapper.c	/^   bool apply_state_changes;$/;"	m	struct:thread_video	file:	access:public
thread_video::cmd_data	gfx/thread_wrapper.c	/^   } cmd_data;$/;"	m	struct:thread_video	typeref:union:thread_video::__anon215	file:	access:public
thread_video::cond_cmd	gfx/thread_wrapper.c	/^   scond_t *cond_cmd;$/;"	m	struct:thread_video	file:	access:public
thread_video::cond_thread	gfx/thread_wrapper.c	/^   scond_t *cond_thread;$/;"	m	struct:thread_video	file:	access:public
thread_video::driver	gfx/thread_wrapper.c	/^   const video_driver_t *driver;$/;"	m	struct:thread_video	file:	access:public
thread_video::driver_data	gfx/thread_wrapper.c	/^   void *driver_data;$/;"	m	struct:thread_video	file:	access:public
thread_video::focus	gfx/thread_wrapper.c	/^   bool focus;$/;"	m	struct:thread_video	file:	access:public
thread_video::frame	gfx/thread_wrapper.c	/^   } frame;$/;"	m	struct:thread_video	typeref:struct:thread_video::__anon221	file:	access:public
thread_video::hit_count	gfx/thread_wrapper.c	/^   unsigned hit_count;$/;"	m	struct:thread_video	file:	access:public
thread_video::info	gfx/thread_wrapper.c	/^   video_info_t info;$/;"	m	struct:thread_video	file:	access:public
thread_video::input	gfx/thread_wrapper.c	/^   const input_driver_t **input;$/;"	m	struct:thread_video	file:	access:public
thread_video::input_data	gfx/thread_wrapper.c	/^   void **input_data;$/;"	m	struct:thread_video	file:	access:public
thread_video::last_time	gfx/thread_wrapper.c	/^   retro_time_t last_time;$/;"	m	struct:thread_video	file:	access:public
thread_video::lock	gfx/thread_wrapper.c	/^   slock_t *lock;$/;"	m	struct:thread_video	file:	access:public
thread_video::miss_count	gfx/thread_wrapper.c	/^   unsigned miss_count;$/;"	m	struct:thread_video	file:	access:public
thread_video::nonblock	gfx/thread_wrapper.c	/^   bool nonblock;$/;"	m	struct:thread_video	file:	access:public
thread_video::overlay	gfx/thread_wrapper.c	/^   const video_overlay_interface_t *overlay;$/;"	m	struct:thread_video	file:	access:public
thread_video::poke	gfx/thread_wrapper.c	/^   const video_poke_interface_t *poke;$/;"	m	struct:thread_video	file:	access:public
thread_video::read_vp	gfx/thread_wrapper.c	/^   struct rarch_viewport read_vp; \/\/ Last viewport reported to caller.$/;"	m	struct:thread_video	typeref:struct:thread_video::rarch_viewport	file:	access:public
thread_video::reply_cmd	gfx/thread_wrapper.c	/^   enum thread_cmd reply_cmd;$/;"	m	struct:thread_video	typeref:enum:thread_video::thread_cmd	file:	access:public
thread_video::send_cmd	gfx/thread_wrapper.c	/^   enum thread_cmd send_cmd;$/;"	m	struct:thread_video	typeref:enum:thread_video::thread_cmd	file:	access:public
thread_video::target_frame_time	gfx/thread_wrapper.c	/^   retro_time_t target_frame_time;$/;"	m	struct:thread_video	file:	access:public
thread_video::texture	gfx/thread_wrapper.c	/^   } texture;$/;"	m	struct:thread_video	typeref:struct:thread_video::__anon214	file:	access:public
thread_video::thread	gfx/thread_wrapper.c	/^   sthread_t *thread;$/;"	m	struct:thread_video	file:	access:public
thread_video::video_thread	gfx/thread_wrapper.c	/^   video_driver_t video_thread;$/;"	m	struct:thread_video	file:	access:public
thread_video::vp	gfx/thread_wrapper.c	/^   struct rarch_viewport vp;$/;"	m	struct:thread_video	typeref:struct:thread_video::rarch_viewport	file:	access:public
thread_video_t	gfx/thread_wrapper.c	/^} thread_video_t;$/;"	t	typeref:struct:thread_video	file:
thread_viewport_info	gfx/thread_wrapper.c	/^static void thread_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
thread_wait_reply	gfx/thread_wrapper.c	/^static void thread_wait_reply(thread_video_t *thr, enum thread_cmd cmd)$/;"	f	file:	signature:(thread_video_t *thr, enum thread_cmd cmd)
thread_wrap	thread.c	/^static DWORD CALLBACK thread_wrap(void *data_)$/;"	f	file:	signature:(void *data_)
thread_wrap	thread.c	/^static void *thread_wrap(void *data_)$/;"	f	file:	signature:(void *data_)
threaded	general.h	/^      bool threaded;$/;"	m	struct:settings::__anon227	access:public
threaded_video	driver.h	/^   bool threaded_video;$/;"	m	struct:driver	access:public
threads	record/ffemu.c	/^   unsigned threads;$/;"	m	struct:ff_config_param	file:	access:public
tileSize	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileSize;$/;"	m	struct:GmmAllocator	access:public
tileStartAddress	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileStartAddress;$/;"	m	struct:GmmAllocator	access:public
tileTag	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    tileTag;$/;"	m	struct:GmmTileBlock	access:public
time	audio/sinc.c	/^   uint32_t time;$/;"	m	struct:rarch_sinc_resampler	file:	access:public
time_to_fps	gfx/gfx_common.c	/^static inline float time_to_fps(retro_time_t last_time, retro_time_t new_time, int frames)$/;"	f	file:	signature:(retro_time_t last_time, retro_time_t new_time, int frames)
timeout	apple/iOS/bluetooth/btstack/run_loop.h	/^    struct timeval timeout;                  \/\/ <-- next timeout$/;"	m	struct:timer	typeref:struct:timer::timeval	access:public
timeout	apple/iOS/bluetooth/btstack/run_loop.h	/^    uint32_t timeout;                       \/\/ timeout in system ticks$/;"	m	struct:timer	access:public
timeout_cnt	netplay.c	/^   unsigned timeout_cnt;$/;"	m	struct:netplay	file:	access:public
timer	apple/iOS/bluetooth/btstack/run_loop.h	/^typedef struct timer {$/;"	s
timer::item	apple/iOS/bluetooth/btstack/run_loop.h	/^    linked_item_t item; $/;"	m	struct:timer	access:public
timer::process	apple/iOS/bluetooth/btstack/run_loop.h	/^    void  (*process)(struct timer *ts);      \/\/ <-- do processing$/;"	m	struct:timer	access:public
timer::timeout	apple/iOS/bluetooth/btstack/run_loop.h	/^    struct timeval timeout;                  \/\/ <-- next timeout$/;"	m	struct:timer	typeref:struct:timer::timeval	access:public
timer::timeout	apple/iOS/bluetooth/btstack/run_loop.h	/^    uint32_t timeout;                       \/\/ timeout in system ticks$/;"	m	struct:timer	access:public
timer_source_t	apple/iOS/bluetooth/btstack/run_loop.h	/^} timer_source_t;$/;"	t	typeref:struct:timer
timing	libretro.h	/^   struct retro_system_timing timing;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_system_timing	access:public
tinfl_bit_buf_t	deps/miniz/zlib.h	/^  typedef mz_uint32 tinfl_bit_buf_t;$/;"	t
tinfl_bit_buf_t	deps/miniz/zlib.h	/^  typedef mz_uint64 tinfl_bit_buf_t;$/;"	t
tinfl_decompress	deps/miniz/miniz.c	/^tinfl_status tinfl_decompress(tinfl_decompressor *r, const mz_uint8 *pIn_buf_next, size_t *pIn_buf_size, mz_uint8 *pOut_buf_start, mz_uint8 *pOut_buf_next, size_t *pOut_buf_size, const mz_uint32 decomp_flags)$/;"	f	signature:(tinfl_decompressor *r, const mz_uint8 *pIn_buf_next, size_t *pIn_buf_size, mz_uint8 *pOut_buf_start, mz_uint8 *pOut_buf_next, size_t *pOut_buf_size, const mz_uint32 decomp_flags)
tinfl_decompress	deps/miniz/zlib.h	/^tinfl_status tinfl_decompress(tinfl_decompressor *r, const mz_uint8 *pIn_buf_next, size_t *pIn_buf_size, mz_uint8 *pOut_buf_start, mz_uint8 *pOut_buf_next, size_t *pOut_buf_size, const mz_uint32 decomp_flags);$/;"	p	signature:(tinfl_decompressor *r, const mz_uint8 *pIn_buf_next, size_t *pIn_buf_size, mz_uint8 *pOut_buf_start, mz_uint8 *pOut_buf_next, size_t *pOut_buf_size, const mz_uint32 decomp_flags)
tinfl_decompress_mem_to_callback	deps/miniz/miniz.c	/^int tinfl_decompress_mem_to_callback(const void *pIn_buf, size_t *pIn_buf_size, tinfl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f	signature:(const void *pIn_buf, size_t *pIn_buf_size, tinfl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tinfl_decompress_mem_to_callback	deps/miniz/zlib.h	/^int tinfl_decompress_mem_to_callback(const void *pIn_buf, size_t *pIn_buf_size, tinfl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags);$/;"	p	signature:(const void *pIn_buf, size_t *pIn_buf_size, tinfl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)
tinfl_decompress_mem_to_heap	deps/miniz/miniz.c	/^void *tinfl_decompress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)$/;"	f	signature:(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)
tinfl_decompress_mem_to_heap	deps/miniz/zlib.h	/^void *tinfl_decompress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags);$/;"	p	signature:(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)
tinfl_decompress_mem_to_mem	deps/miniz/miniz.c	/^size_t tinfl_decompress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)$/;"	f	signature:(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)
tinfl_decompress_mem_to_mem	deps/miniz/zlib.h	/^size_t tinfl_decompress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags);$/;"	p	signature:(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)
tinfl_decompressor	deps/miniz/zlib.h	/^struct tinfl_decompressor_tag; typedef struct tinfl_decompressor_tag tinfl_decompressor;$/;"	t	typeref:struct:tinfl_decompressor_tag
tinfl_decompressor_tag	deps/miniz/zlib.h	/^struct tinfl_decompressor_tag$/;"	s
tinfl_decompressor_tag::m_bit_buf	deps/miniz/zlib.h	/^  tinfl_bit_buf_t m_bit_buf;$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_check_adler32	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_counter	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_dist	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_dist_from_out_buf_start	deps/miniz/zlib.h	/^  size_t m_dist_from_out_buf_start;$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_final	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_len_codes	deps/miniz/zlib.h	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_num_bits	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_num_extra	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_raw_header	deps/miniz/zlib.h	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_state	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_table_sizes	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_tables	deps/miniz/zlib.h	/^  tinfl_huff_table m_tables[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_type	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_z_adler32	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_zhdr0	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_decompressor_tag::m_zhdr1	deps/miniz/zlib.h	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	access:public
tinfl_get_adler32	deps/miniz/zlib.h	581;"	d
tinfl_huff_table	deps/miniz/zlib.h	/^} tinfl_huff_table;$/;"	t	typeref:struct:__anon124
tinfl_init	deps/miniz/zlib.h	580;"	d
tinfl_put_buf_func_ptr	deps/miniz/zlib.h	/^typedef int (*tinfl_put_buf_func_ptr)(const void* pBuf, int len, void *pUser);$/;"	t
tinfl_status	deps/miniz/zlib.h	/^} tinfl_status;$/;"	t	typeref:enum:__anon122
title	android/phoenix/src/com/retroarch/browser/coremanager/fragments/InstalledCoreInfoItem.java	/^	private final String title;$/;"	f	class:InstalledCoreInfoItem	file:	access:private
title_buf	general.h	/^   char title_buf[64];$/;"	m	struct:global	access:public
tlutRegion	gx/gx_video_inl.h	/^	GXTlutRegion tlutRegion[20];$/;"	m	struct:__gx_regdef	access:public
tm_hour	deps/minizip/unzip.h	/^    uInt tm_hour;           \/* hours since midnight - [0,23] *\/$/;"	m	struct:tm_unz_s	access:public
tm_mday	deps/minizip/unzip.h	/^    uInt tm_mday;           \/* day of the month - [1,31] *\/$/;"	m	struct:tm_unz_s	access:public
tm_min	deps/minizip/unzip.h	/^    uInt tm_min;            \/* minutes after the hour - [0,59] *\/$/;"	m	struct:tm_unz_s	access:public
tm_mon	deps/minizip/unzip.h	/^    uInt tm_mon;            \/* months since January - [0,11] *\/$/;"	m	struct:tm_unz_s	access:public
tm_sec	deps/minizip/unzip.h	/^    uInt tm_sec;            \/* seconds after the minute - [0,59] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz	deps/minizip/unzip.h	/^} tm_unz;$/;"	t	typeref:struct:tm_unz_s
tm_unz_s	deps/minizip/unzip.h	/^typedef struct tm_unz_s$/;"	s
tm_unz_s::tm_hour	deps/minizip/unzip.h	/^    uInt tm_hour;           \/* hours since midnight - [0,23] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz_s::tm_mday	deps/minizip/unzip.h	/^    uInt tm_mday;           \/* day of the month - [1,31] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz_s::tm_min	deps/minizip/unzip.h	/^    uInt tm_min;            \/* minutes after the hour - [0,59] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz_s::tm_mon	deps/minizip/unzip.h	/^    uInt tm_mon;            \/* months since January - [0,11] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz_s::tm_sec	deps/minizip/unzip.h	/^    uInt tm_sec;            \/* seconds after the minute - [0,59] *\/$/;"	m	struct:tm_unz_s	access:public
tm_unz_s::tm_year	deps/minizip/unzip.h	/^    uInt tm_year;           \/* years - [1980..2044] *\/$/;"	m	struct:tm_unz_s	access:public
tm_year	deps/minizip/unzip.h	/^    uInt tm_year;           \/* years - [1980..2044] *\/$/;"	m	struct:tm_unz_s	access:public
tmp_frame_count	netplay.c	/^   uint32_t tmp_frame_count;$/;"	m	struct:netplay	file:	access:public
tmp_msg	message_queue.c	/^   char *tmp_msg;$/;"	m	struct:msg_queue	file:	access:public
tmp_ptr	netplay.c	/^   size_t tmp_ptr; \/\/ A temporary pointer used on replay.$/;"	m	struct:netplay	file:	access:public
tmp_state	rewind.c	/^   uint32_t *tmp_state;$/;"	m	struct:state_manager	file:	access:public
tmpbuf	audio/openal.c	/^   uint8_t tmpbuf[BUFSIZE];$/;"	m	struct:al	file:	access:public
tmpbuf_ptr	audio/openal.c	/^   size_t tmpbuf_ptr;$/;"	m	struct:al	file:	access:public
tmu_date	deps/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info64_s	access:public
tmu_date	deps/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info_s	access:public
top	gfx/gl_common.h	/^   GLfloat top;$/;"	m	struct:gl_ortho	access:public
top_field_first	gfx/context/sunxi_disp_ioctl.h	/^	__bool top_field_first;$/;"	m	struct:__anon189	access:public
top_ptr	rewind.c	/^   size_t top_ptr;$/;"	m	struct:state_manager	file:	access:public
total	libretro.h	/^   retro_perf_tick_t total;$/;"	m	struct:retro_perf_counter	access:public
totalSize	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int totalSize;$/;"	m	struct:CgBinaryProgram	access:public
totalSize	ps3/rgl/src/include/GmmAlloc.h	/^   uint32_t    totalSize;		\/\/ == size + tileSize$/;"	m	struct:GmmAllocator	access:public
total_count	audio/dsound.c	/^   unsigned total_count;$/;"	m	struct:dsound_dev	file:	access:public
total_in	deps/miniz/zlib.h	/^  mz_ulong total_in;                \/\/ total number of bytes consumed so far$/;"	m	struct:mz_stream_s	access:public
total_out	deps/miniz/zlib.h	/^  mz_ulong total_out;               \/\/ total number of bytes produced so far$/;"	m	struct:mz_stream_s	access:public
total_written	audio/rsound.h	/^      int64_t total_written;$/;"	m	struct:rsound	access:public
touch	blackberry-qnx/qnx_input.c	/^static struct touches touch[MAX_TOUCH];$/;"	v	typeref:struct:touches	file:
touch	input/udev_input.c	/^         bool touch;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
touch_count	apple/common/apple_input.h	/^   uint32_t touch_count;$/;"	m	struct:__anon160	access:public
touch_count	blackberry-qnx/qnx_input.c	/^static unsigned touch_count;$/;"	v	file:
touch_map	blackberry-qnx/qnx_input.c	/^static int touch_map[MAX_TOUCH];$/;"	v	file:
touches	apple/common/apple_input.h	/^   apple_touch_data_t touches[MAX_TOUCHES];$/;"	m	struct:__anon160	access:public
touches	blackberry-qnx/qnx_input.c	/^struct touches$/;"	s	file:
touches::contact_id	blackberry-qnx/qnx_input.c	/^   int contact_id;$/;"	m	struct:touches	file:	access:public
touches::full_x	blackberry-qnx/qnx_input.c	/^   int16_t full_x, full_y;$/;"	m	struct:touches	file:	access:public
touches::full_y	blackberry-qnx/qnx_input.c	/^   int16_t full_x, full_y;$/;"	m	struct:touches	file:	access:public
touches::map	blackberry-qnx/qnx_input.c	/^   int map;$/;"	m	struct:touches	file:	access:public
touches::x	blackberry-qnx/qnx_input.c	/^   int16_t x, y;$/;"	m	struct:touches	file:	access:public
touches::y	blackberry-qnx/qnx_input.c	/^   int16_t x, y;$/;"	m	struct:touches	file:	access:public
touchpad	input/udev_input.c	/^      } touchpad;$/;"	m	union:input_device::__anon90	typeref:struct:input_device::__anon90::__anon91	file:	access:public
tracker	gfx/d3d9/render_chain.hpp	/^      std::shared_ptr<state_tracker_t> tracker;$/;"	m	class:RenderChain	access:private
transientMemorySize	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint			transientMemorySize;$/;"	m	struct:PSGLinitOptions	access:public
transition_count	gfx/state_tracker.c	/^   int transition_count;$/;"	m	struct:state_tracker_internal	file:	access:public
translate_aspect	gfx/gfx_context.h	/^   float (*translate_aspect)(unsigned, unsigned);$/;"	m	struct:gfx_ctx_driver	access:public
translate_filter	gfx/d3d9/render_chain.cpp	/^D3DTEXTUREFILTERTYPE RenderChain::translate_filter(bool smooth)$/;"	f	class:RenderChain	signature:(bool smooth)
translate_filter	gfx/d3d9/render_chain.cpp	/^D3DTEXTUREFILTERTYPE RenderChain::translate_filter(enum gfx_filter_type type)$/;"	f	class:RenderChain	signature:(enum gfx_filter_type type)
translate_filter	gfx/d3d9/render_chain.hpp	/^      D3DTEXTUREFILTERTYPE translate_filter(bool smooth);$/;"	p	class:RenderChain	access:private	signature:(bool smooth)
translate_filter	gfx/d3d9/render_chain.hpp	/^      D3DTEXTUREFILTERTYPE translate_filter(enum gfx_filter_type type);$/;"	p	class:RenderChain	access:private	signature:(enum gfx_filter_type type)
translate_texture	tools/cg2glsl.py	/^def translate_texture(cg):$/;"	f	access:public
translate_texture_size	tools/cg2glsl.py	/^def translate_texture_size(cg):$/;"	f	access:public
translate_varying	tools/cg2glsl.py	/^def translate_varying(cg):$/;"	f	access:public
translate_varyings	tools/cg2glsl.py	/^def translate_varyings(varyings, source, direction):$/;"	f	access:public
trd_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_3d_src_mode_t trd_mode;$/;"	m	struct:__anon186	access:public
trd_right_addr	gfx/context/sunxi_disp_ioctl.h	/^	__u32 trd_right_addr[3]; \/* used when in frame packing 3d mode *\/$/;"	m	struct:__anon186	access:public
trigger_state	frontend/menu/menu_common.h	/^   uint64_t trigger_state;$/;"	m	struct:__anon25	access:public
true	libretro.h	36;"	d
tu1	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
tu2	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
turbo_count	general.h	/^   unsigned turbo_count;$/;"	m	struct:global	access:public
turbo_duty_cycle	config.def.h	/^static const unsigned turbo_duty_cycle = 3;$/;"	v
turbo_duty_cycle	general.h	/^      unsigned turbo_duty_cycle;$/;"	m	struct:settings::__anon232	access:public
turbo_enable	general.h	/^   uint16_t turbo_enable[MAX_PLAYERS];$/;"	m	struct:global	access:public
turbo_frame_enable	general.h	/^   bool turbo_frame_enable[MAX_PLAYERS];$/;"	m	struct:global	access:public
turbo_period	config.def.h	/^static const unsigned turbo_period = 6;$/;"	v
turbo_period	general.h	/^      unsigned turbo_period;$/;"	m	struct:settings::__anon232	access:public
tv1	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
tv2	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short tu1, tv1, tu2, tv2;   \/\/ Texture coordinates for the image$/;"	m	struct:GLYPH_ATTR	file:	access:public
tv_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_tv_mode_t tv_mode[2];$/;"	m	struct:__anon203	access:public
type	apple/common/hidpad/wiimote.h	/^		int type;						\/**< type of expansion attached				*\/$/;"	m	struct:expansion_t	access:public
type	apple/common/setting_data.h	/^   enum setting_type type;$/;"	m	struct:__anon161	typeref:enum:__anon161::setting_type	access:public
type	blackberry-qnx/frontend_qnx.h	/^    int type;$/;"	m	struct:__anon94	access:public
type	compat/rxml/rxml.h	/^   int type; \/\/ Dummy. Used by libxml2 compat. Is always set to 0, so XML_ELEMENT_NODE check goes through.$/;"	m	struct:rxml_node	access:public
type	file_list.c	/^   unsigned type;$/;"	m	struct:item_file	file:	access:public
type	gfx/rpng/rpng.c	/^   char type[4];$/;"	m	struct:png_chunk	file:	access:public
type	gfx/rpng/rpng.c	/^   enum png_chunk_type type;$/;"	m	struct:__anon226	typeref:enum:__anon226::png_chunk_type	file:	access:public
type	gfx/shader_common.h	/^   enum rarch_shader_type type;$/;"	m	struct:gl_shader_backend	typeref:enum:gl_shader_backend::rarch_shader_type	access:public
type	gfx/shader_parse.h	/^   enum rarch_shader_type type;$/;"	m	struct:gfx_shader	typeref:enum:gfx_shader::rarch_shader_type	access:public
type	gfx/state_tracker.c	/^   enum state_tracker_type type;$/;"	m	struct:state_tracker_internal	typeref:enum:state_tracker_internal::state_tracker_type	file:	access:public
type	gfx/state_tracker.h	/^   enum state_tracker_type type;$/;"	m	struct:state_tracker_uniform_info	typeref:enum:state_tracker_uniform_info::state_tracker_type	access:public
type	gfx/thread_wrapper.c	/^         enum rarch_shader_type type;$/;"	m	struct:thread_video::__anon215::__anon216	typeref:enum:thread_video::__anon215::__anon216::rarch_shader_type	file:	access:public
type	input/overlay.c	/^   enum overlay_type type;$/;"	m	struct:overlay_desc	typeref:enum:overlay_desc::overlay_type	file:	access:public
type	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short type;$/;"	m	struct:_CgParameterResource	access:public
type	ps3/rgl/include/Cg/cgBinary.h	/^      CGtype                          type;          \/\/ cgGetParameterType()$/;"	m	struct:CgBinaryParameter	access:public
type	ps3/rgl/include/RGL/Types.h	/^      GLenum type;$/;"	m	struct:__anon62	access:public
type	ps3/rgl/include/RGL/Types.h	/^      GLenum type;$/;"	m	struct:rglImage_	access:public
type	ps3/rgl/include/RGL/Types.h	/^   GLenum type;	\/\/ renderbuffer or texture$/;"	m	struct:rglFramebufferAttachment	access:public
typeIndex	android/phoenix/src/com/retroarch/browser/FileWrapper.java	/^	private final int typeIndex;$/;"	f	class:FileWrapper	file:	access:private
typeIndex	ps3/rgl/include/Cg/CgInternal.h	/^      unsigned short typeIndex;$/;"	m	struct:_CgParameterEntry	access:public
type_GL_FLOAT	ps3/rgl/src/rgl_ps3.cpp	/^typedef GLfloat type_GL_FLOAT;$/;"	t	file:
type_GL_HALF_FLOAT_ARB	ps3/rgl/src/rgl_ps3.cpp	/^typedef GLhalfARB type_GL_HALF_FLOAT_ARB;$/;"	t	file:
type_x	gfx/shader_parse.h	/^   enum gfx_scale_type type_x;$/;"	m	struct:gfx_fbo_scale	typeref:enum:gfx_fbo_scale::gfx_scale_type	access:public
type_y	gfx/shader_parse.h	/^   enum gfx_scale_type type_y;$/;"	m	struct:gfx_fbo_scale	typeref:enum:gfx_fbo_scale::gfx_scale_type	access:public
typeof	android/native/jni/input_android.c	/^static typeof(AMotionEvent_getAxisValue) *p_AMotionEvent_getAxisValue;$/;"	p	file:
u	gfx/d3d9/render_chain.hpp	/^   float u, v;$/;"	m	struct:Vertex	access:public
u	xdk/xdk_d3d.h	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	access:public
u	xenon/xenon360_video.c	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	file:	access:public
u32	hash.c	/^      uint32_t u32[16];$/;"	m	union:sha256_ctx::__anon93	file:	access:public
u8	hash.c	/^      uint8_t u8[64];$/;"	m	union:sha256_ctx::__anon93	file:	access:public
uInt	deps/miniz/zlib.h	/^  typedef unsigned int uInt;$/;"	t
uIntf	deps/miniz/zlib.h	/^  typedef uInt uIntf;$/;"	t
uLong	deps/miniz/zlib.h	/^  typedef mz_ulong uLong;$/;"	t
uLongf	deps/miniz/zlib.h	/^  typedef uLong uLongf;$/;"	t
u_index	gfx/xvideo.c	/^   unsigned u_index;$/;"	m	struct:format_desc	file:	access:public
ucode	ps3/rgl/include/Cg/CgCommon.h	/^   const void *ucode;$/;"	m	struct:_CGprogram	access:public
ucode	ps3/rgl/include/Cg/cgBinary.h	/^      CgBinaryOffset  ucode;$/;"	m	struct:CgBinaryProgram	access:public
ucode	ps3/rgl/src/cg/nvbi.hpp	/^               ucode() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
ucode	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ucode() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
ucode	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::ucode() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
ucodeCount	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int ucodeCount;       \/\/ occurances$/;"	m	struct:CgBinaryEmbeddedConstant	access:public
ucodeOffset	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int ucodeOffset[1];   \/\/ offsets that need to be patched follow$/;"	m	struct:CgBinaryEmbeddedConstant	access:public
ucodeSize	ps3/rgl/include/Cg/cgBinary.h	/^      unsigned int    ucodeSize;$/;"	m	struct:CgBinaryProgram	access:public
ucode_size	ps3/rgl/src/cg/nvbi.hpp	/^               ucode_size() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
ucode_size	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ucode_size() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
ucode_size	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::ucode_size() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
udelay	wii/vi_encoder.c	/^extern void udelay(int us);$/;"	p	file:	signature:(int us)
udev	input/udev_input.c	/^   struct udev *udev;$/;"	m	struct:udev_input	typeref:struct:udev_input::udev	file:	access:public
udev_analog_pressed	input/udev_input.c	/^static int16_t udev_analog_pressed(udev_input_t *udev,$/;"	f	file:	signature:(udev_input_t *udev, const struct retro_keybind *binds, unsigned index, unsigned id)
udev_bind_button_pressed	input/udev_input.c	/^static bool udev_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
udev_handle_keyboard	input/udev_input.c	/^static void udev_handle_keyboard(udev_input_t *udev, const struct input_event *event, struct input_device *dev)$/;"	f	file:	signature:(udev_input_t *udev, const struct input_event *event, struct input_device *dev)
udev_handle_mouse	input/udev_input.c	/^static void udev_handle_mouse(udev_input_t *udev, const struct input_event *event, struct input_device *dev)$/;"	f	file:	signature:(udev_input_t *udev, const struct input_event *event, struct input_device *dev)
udev_handle_touchpad	input/udev_input.c	/^static void udev_handle_touchpad(udev_input_t *udev, const struct input_event *event, struct input_device *dev)$/;"	f	file:	signature:(udev_input_t *udev, const struct input_event *event, struct input_device *dev)
udev_input	input/udev_input.c	/^struct udev_input$/;"	s	file:
udev_input::__anon92::bit	input/udev_input.c	/^      uint16_t bit;$/;"	m	struct:udev_input::__anon92	file:	access:public
udev_input::__anon92::index	input/udev_input.c	/^      xkb_mod_index_t index;$/;"	m	struct:udev_input::__anon92	file:	access:public
udev_input::devices	input/udev_input.c	/^   struct input_device **devices;$/;"	m	struct:udev_input	typeref:struct:udev_input::input_device	file:	access:public
udev_input::epfd	input/udev_input.c	/^   int epfd;$/;"	m	struct:udev_input	file:	access:public
udev_input::joypad	input/udev_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:udev_input	file:	access:public
udev_input::key_state	input/udev_input.c	/^   uint8_t key_state[(KEY_MAX + 7) \/ 8];$/;"	m	struct:udev_input	file:	access:public
udev_input::mod_map	input/udev_input.c	/^   } mod_map[5];$/;"	m	struct:udev_input	typeref:struct:udev_input::__anon92	file:	access:public
udev_input::monitor	input/udev_input.c	/^   struct udev_monitor *monitor;$/;"	m	struct:udev_input	typeref:struct:udev_input::udev_monitor	file:	access:public
udev_input::mouse_l	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
udev_input::mouse_m	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
udev_input::mouse_r	input/udev_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:udev_input	file:	access:public
udev_input::mouse_x	input/udev_input.c	/^   int16_t mouse_x;$/;"	m	struct:udev_input	file:	access:public
udev_input::mouse_y	input/udev_input.c	/^   int16_t mouse_y;$/;"	m	struct:udev_input	file:	access:public
udev_input::num_devices	input/udev_input.c	/^   unsigned num_devices;$/;"	m	struct:udev_input	file:	access:public
udev_input::udev	input/udev_input.c	/^   struct udev *udev;$/;"	m	struct:udev_input	typeref:struct:udev_input::udev	file:	access:public
udev_input::xkb_ctx	input/udev_input.c	/^   struct xkb_context *xkb_ctx;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_context	file:	access:public
udev_input::xkb_map	input/udev_input.c	/^   struct xkb_keymap *xkb_map;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_keymap	file:	access:public
udev_input::xkb_state	input/udev_input.c	/^   struct xkb_state *xkb_state;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_state	file:	access:public
udev_input_free	input/udev_input.c	/^static void udev_input_free(void *data)$/;"	f	file:	signature:(void *data)
udev_input_get_capabilities	input/udev_input.c	/^static uint64_t udev_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
udev_input_get_joypad_driver	input/udev_input.c	/^static const rarch_joypad_driver_t *udev_input_get_joypad_driver(void *data)$/;"	f	file:	signature:(void *data)
udev_input_grab_mouse	input/udev_input.c	/^static void udev_input_grab_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
udev_input_init	input/udev_input.c	/^static void *udev_input_init(void)$/;"	f	file:	signature:(void)
udev_input_poll	input/udev_input.c	/^static void udev_input_poll(void *data)$/;"	f	file:	signature:(void *data)
udev_input_set_rumble	input/udev_input.c	/^static bool udev_input_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
udev_input_state	input/udev_input.c	/^static int16_t udev_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
udev_input_t	input/udev_input.c	/^typedef struct udev_input udev_input_t;$/;"	t	typeref:struct:udev_input	file:
udev_is_pressed	input/udev_input.c	/^static bool udev_is_pressed(udev_input_t *udev, const struct retro_keybind *binds, unsigned id)$/;"	f	file:	signature:(udev_input_t *udev, const struct retro_keybind *binds, unsigned id)
udev_joypad	input/udev_joypad.c	/^const rarch_joypad_driver_t udev_joypad = {$/;"	v
udev_joypad	input/udev_joypad.c	/^struct udev_joypad$/;"	s	file:
udev_joypad::absinfo	input/udev_joypad.c	/^   struct input_absinfo absinfo[NUM_AXES];$/;"	m	struct:udev_joypad	typeref:struct:udev_joypad::input_absinfo	file:	access:public
udev_joypad::axes	input/udev_joypad.c	/^   int16_t axes[NUM_AXES];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::axes_bind	input/udev_joypad.c	/^   uint8_t axes_bind[ABS_MAX];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::button_bind	input/udev_joypad.c	/^   uint8_t button_bind[KEY_MAX];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::buttons	input/udev_joypad.c	/^   bool buttons[NUM_BUTTONS];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::configured_strength	input/udev_joypad.c	/^   uint16_t configured_strength[2];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::device	input/udev_joypad.c	/^   dev_t device;$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::effects	input/udev_joypad.c	/^   int effects[2]; \/\/ [0] - strong, [1] - weak $/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::fd	input/udev_joypad.c	/^   int fd;$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::has_set_ff	input/udev_joypad.c	/^   bool has_set_ff[2];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::hats	input/udev_joypad.c	/^   int8_t hats[NUM_HATS][2];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::ident	input/udev_joypad.c	/^   char *ident;$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::num_effects	input/udev_joypad.c	/^   int num_effects;$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::path	input/udev_joypad.c	/^   char *path;$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad::strength	input/udev_joypad.c	/^   uint16_t strength[2];$/;"	m	struct:udev_joypad	file:	access:public
udev_joypad_axis	input/udev_joypad.c	/^static int16_t udev_joypad_axis(unsigned port, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port, uint32_t joyaxis)
udev_joypad_button	input/udev_joypad.c	/^static bool udev_joypad_button(unsigned port, uint16_t joykey)$/;"	f	file:	signature:(unsigned port, uint16_t joykey)
udev_joypad_destroy	input/udev_joypad.c	/^static void udev_joypad_destroy(void)$/;"	f	file:	signature:(void)
udev_joypad_hat	input/udev_joypad.c	/^static bool udev_joypad_hat(const struct udev_joypad *pad, uint16_t hat)$/;"	f	file:	signature:(const struct udev_joypad *pad, uint16_t hat)
udev_joypad_init	input/udev_joypad.c	/^static bool udev_joypad_init(void)$/;"	f	file:	signature:(void)
udev_joypad_name	input/udev_joypad.c	/^static const char *udev_joypad_name(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
udev_joypad_poll	input/udev_joypad.c	/^static void udev_joypad_poll(void)$/;"	f	file:	signature:(void)
udev_joypad_query_pad	input/udev_joypad.c	/^static bool udev_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
udev_lightgun_state	input/udev_input.c	/^static int16_t udev_lightgun_state(udev_input_t *udev, unsigned id)$/;"	f	file:	signature:(udev_input_t *udev, unsigned id)
udev_mouse_state	input/udev_input.c	/^static int16_t udev_mouse_state(udev_input_t *udev, unsigned id)$/;"	f	file:	signature:(udev_input_t *udev, unsigned id)
udev_set_rumble	input/udev_joypad.c	/^static bool udev_set_rumble(unsigned i, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(unsigned i, enum retro_rumble_effect effect, uint16_t strength)
udp_fd	netplay.c	/^   int udp_fd; \/\/ UDP connection for game state updates.$/;"	m	struct:netplay	file:	access:public
uint16	ps3/ps3py/pkg.py	/^	uint16 = StructType(('H', 2))$/;"	v	class:Struct
uint16_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32	ps3/ps3py/pkg.py	/^	uint32 = StructType(('L', 4))$/;"	v	class:Struct
uint32_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64	ps3/ps3py/pkg.py	/^	uint64 = StructType(('Q', 8))$/;"	v	class:Struct
uint64_t	msvc/msvc-2010/GL/glext.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	msvc/msvc-2010/GL/glext.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	msvc/msvc-2010/GL/glext.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	msvc/msvc-stdint/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8	ps3/ps3py/pkg.py	/^	uint8 = StructType(('B', 1))$/;"	v	class:Struct
uint8_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	msvc/msvc-stdint/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	msvc/msvc-stdint/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	msvc/msvc-stdint/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	msvc/msvc-stdint/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	msvc/msvc-stdint/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	msvc/msvc-stdint/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	msvc/msvc-stdint/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	msvc/msvc-stdint/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	msvc/msvc-stdint/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	msvc/msvc-stdint/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	msvc/msvc-stdint/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
unbind_all	gfx/d3d9/render_chain.cpp	/^void RenderChain::unbind_all()$/;"	f	class:RenderChain	signature:()
unbind_all	gfx/d3d9/render_chain.hpp	/^      void unbind_all();$/;"	p	class:RenderChain	access:private	signature:()
uncompress	deps/miniz/miniz.c	/^int uncompress(Bytef *pDest, uLongf *pDest_len, const Bytef *pSource, uLong source_len)$/;"	f	signature:(Bytef *pDest, uLongf *pDest_len, const Bytef *pSource, uLong source_len)
uncompress	deps/miniz/zlib.h	/^int uncompress(Bytef *pDest, uLongf *pDest_len, const Bytef *pSource, uLong source_len);$/;"	p	signature:(Bytef *pDest, uLongf *pDest_len, const Bytef *pSource, uLong source_len)
uncompressed_size	deps/minizip/unzip.h	/^    uLong uncompressed_size;    \/* uncompressed size               4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
uncompressed_size	deps/minizip/unzip.h	/^    uLong uncompressed_size; \/* uncompressed size               8 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
underrun_update_cb	audio/pulse.c	/^static void underrun_update_cb(pa_stream *s, void *data)$/;"	f	file:	signature:(pa_stream *s, void *data)
unid	apple/common/hidpad/wiimote.h	/^		int unid;						\/**< user specified id						*\/$/;"	m	struct:wiimote_t	access:public
uniform_cnt	gfx/d3d9/render_chain.hpp	/^      unsigned uniform_cnt;$/;"	m	class:RenderChain	access:private
uniform_info	gfx/d3d9/render_chain.hpp	/^      struct state_tracker_uniform uniform_info[MAX_VARIABLES];$/;"	m	class:RenderChain	typeref:struct:RenderChain::state_tracker_uniform	access:private
uninit_audio	driver.c	/^void uninit_audio(void)$/;"	f	signature:(void)
uninit_audio	driver.h	/^void uninit_audio(void);$/;"	p	signature:(void)
uninit_camera	driver.c	/^void uninit_camera(void)$/;"	f	signature:(void)
uninit_camera	driver.h	/^void uninit_camera(void);$/;"	p	signature:(void)
uninit_drivers	driver.c	/^void uninit_drivers(void)$/;"	f	signature:(void)
uninit_drivers	driver.h	/^void uninit_drivers(void);$/;"	p	signature:(void)
uninit_libretro_sym	dynamic.c	/^void uninit_libretro_sym(void)$/;"	f	signature:(void)
uninit_libretro_sym	dynamic.h	/^void uninit_libretro_sym(void);$/;"	p	signature:(void)
uninit_location	driver.c	/^void uninit_location(void)$/;"	f	signature:(void)
uninit_location	driver.h	/^void uninit_location(void);$/;"	p	signature:(void)
uninit_osk	driver.c	/^void uninit_osk(void)$/;"	f	signature:(void)
uninit_video_input	driver.c	/^void uninit_video_input(void)$/;"	f	signature:(void)
uninit_video_input	driver.h	/^void uninit_video_input(void);$/;"	p	signature:(void)
uninited	input/rwebinput_input.c	/^static bool uninited = false;$/;"	v	file:
unknown	frontend/platform/platform_xdk.h	/^	BYTE unknown[0x18];$/;"	m	struct:_KTHREAD	access:public
unknown2	frontend/platform/platform_xdk.h	/^	BYTE unknown2[0x100];$/;"	m	struct:_KTHREAD	access:public
unknown2	frontend/platform/platform_xdk.h	/^	BYTE unknown2[0x1C];$/;"	m	struct:_FS_STRUCTURE	access:public
unknown3	frontend/platform/platform_xdk.h	/^	BYTE unknown3[0x100];$/;"	m	struct:_FS_STRUCTURE	access:public
unlock_autosave	autosave.c	/^void unlock_autosave(void)$/;"	f	signature:(void)
unlock_autosave	autosave.h	/^void unlock_autosave(void);$/;"	p	signature:(void)
unpack	ps3/ps3py/pkg.py	/^	def unpack(self, data, pos=0):$/;"	m	class:Struct	access:public
unpackAlignment	ps3/rgl/include/RGL/Types.h	/^      GLsizei		unpackAlignment;$/;"	m	struct:RGLcontext	access:public
unscaled	gfx/scaler/scaler.h	/^   bool unscaled;$/;"	m	struct:scaler_ctx	access:public
unsignedRemap	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint unsignedRemap;$/;"	m	struct:rglGcmTextureAddress	access:public
unsigned_integer	apple/common/setting_data.h	/^      unsigned int unsigned_integer;$/;"	m	union:__anon161::__anon162	access:public
unsigned_integer	apple/common/setting_data.h	/^      unsigned int* unsigned_integer;$/;"	m	union:__anon161::__anon163	access:public
unused	deps/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	m	struct:TagunzFile__	access:public
unused	ps3/rgl/src/cg/cgbtypes.h	/^   unsigned char unused;$/;"	m	struct:_Elf32_cgParameter	access:public
unzClose	deps/minizip/unzip.c	/^int unzClose (unzFile file)$/;"	f	signature:(unzFile file)
unzCloseCurrentFile	deps/minizip/unzip.c	/^int unzCloseCurrentFile (unzFile file)$/;"	f	signature:(unzFile file)
unzCloseCurrentFile	deps/minizip/unzip.c	/^int unzCloseCurrentFile (unzFile file);$/;"	p	file:	signature:(unzFile file)
unzFile	deps/minizip/unzip.h	/^typedef unzFile__ *unzFile;$/;"	t
unzFile	deps/minizip/unzip.h	/^typedef voidp unzFile;$/;"	t
unzFile__	deps/minizip/unzip.h	/^typedef struct TagunzFile__ { int unused; } unzFile__;$/;"	t	typeref:struct:TagunzFile__
unzGetCurrentFileInfo	deps/minizip/unzip.c	/^int unzGetCurrentFileInfo (unzFile file, unz_file_info * pfile_info,$/;"	f	signature:(unzFile file, unz_file_info * pfile_info, char * szFileName, uLong fileNameBufferSize, void *extraField, uLong extraFieldBufferSize, char *szComment, uLong commentBufferSize)
unzGetFilePos	deps/minizip/unzip.c	/^int unzGetFilePos(unzFile file, unz_file_pos *file_pos)$/;"	f	signature:(unzFile file, unz_file_pos *file_pos)
unzGetGlobalComment	deps/minizip/unzip.c	/^int unzGetGlobalComment (unzFile file, char *szComment, uLong uSizeBuf)$/;"	f	signature:(unzFile file, char *szComment, uLong uSizeBuf)
unzGetGlobalInfo	deps/minizip/unzip.c	/^int unzGetGlobalInfo (unzFile file, unz_global_info *pglobal_info)$/;"	f	signature:(unzFile file, unz_global_info *pglobal_info)
unzGetLocalExtrafield	deps/minizip/unzip.c	/^int unzGetLocalExtrafield (unzFile file, voidpf buf, unsigned len)$/;"	f	signature:(unzFile file, voidpf buf, unsigned len)
unzGetOffset	deps/minizip/unzip.c	/^uLong unzGetOffset (unzFile file)$/;"	f	signature:(unzFile file)
unzGetOffset	deps/minizip/unzip.h	/^extern uLong unzGetOffset (unzFile file);$/;"	p	signature:(unzFile file)
unzGetOffset64	deps/minizip/unzip.h	/^extern uLong unzGetOffset64 (unzFile file);$/;"	p	signature:(unzFile file)
unzGoToFilePos	deps/minizip/unzip.c	/^int unzGoToFilePos(unzFile file, unz_file_pos *file_pos)$/;"	f	signature:(unzFile file, unz_file_pos *file_pos)
unzGoToFirstFile	deps/minizip/unzip.c	/^int unzGoToFirstFile (unzFile file)$/;"	f	signature:(unzFile file)
unzGoToNextFile	deps/minizip/unzip.c	/^int unzGoToNextFile (unzFile file)$/;"	f	signature:(unzFile file)
unzLocateFile	deps/minizip/unzip.c	/^int unzLocateFile (unzFile file, const char *szFileName, int iCaseSensitivity)$/;"	f	signature:(unzFile file, const char *szFileName, int iCaseSensitivity)
unzOpen	deps/minizip/unzip.c	/^unzFile unzOpen (const char *path)$/;"	f	signature:(const char *path)
unzOpen2	deps/minizip/unzip.c	/^unzFile unzOpen2 (const char *path, zlib_filefunc_def *pzlib_filefunc_def)$/;"	f	signature:(const char *path, zlib_filefunc_def *pzlib_filefunc_def)
unzOpenCurrentFile	deps/minizip/unzip.c	/^int unzOpenCurrentFile (unzFile file)$/;"	f	signature:(unzFile file)
unzOpenCurrentFile2	deps/minizip/unzip.c	/^int unzOpenCurrentFile2 (unzFile file, int *method,int *level, int raw)$/;"	f	signature:(unzFile file, int *method,int *level, int raw)
unzOpenCurrentFile3	deps/minizip/unzip.c	/^int unzOpenCurrentFile3 (unzFile file, int *method, int *level, int raw, const char *password)$/;"	f	signature:(unzFile file, int *method, int *level, int raw, const char *password)
unzOpenCurrentFilePassword	deps/minizip/unzip.c	/^int unzOpenCurrentFilePassword (unzFile file, const char *password)$/;"	f	signature:(unzFile file, const char *password)
unzReadCurrentFile	deps/minizip/unzip.c	/^int unzReadCurrentFile  (unzFile file, voidpf buf, unsigned len)$/;"	f	signature:(unzFile file, voidpf buf, unsigned len)
unzSetOffset	deps/minizip/unzip.c	/^int unzSetOffset (unzFile file, uLong pos)$/;"	f	signature:(unzFile file, uLong pos)
unzSetOffset	deps/minizip/unzip.h	/^extern int unzSetOffset (unzFile file, uLong pos);$/;"	p	signature:(unzFile file, uLong pos)
unzSetOffset64	deps/minizip/unzip.h	/^extern int unzSetOffset64 (unzFile file, uLong pos);$/;"	p	signature:(unzFile file, uLong pos)
unzStringFileNameCompare	deps/minizip/unzip.c	/^int unzStringFileNameCompare (const char *fileName1, const char *fileName2, int iCaseSensitivity)$/;"	f	signature:(const char *fileName1, const char *fileName2, int iCaseSensitivity)
unz_copyright	deps/minizip/unzip.c	/^const char unz_copyright[] =$/;"	v
unz_file_info	deps/minizip/unzip.h	/^} unz_file_info;$/;"	t	typeref:struct:unz_file_info_s
unz_file_info64	deps/minizip/unzip.h	/^} unz_file_info64;$/;"	t	typeref:struct:unz_file_info64_s
unz_file_info64_s	deps/minizip/unzip.h	/^typedef struct unz_file_info64_s$/;"	s
unz_file_info64_s::compressed_size	deps/minizip/unzip.h	/^    uLong compressed_size;   \/* compressed size                 8 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::compression_method	deps/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::crc	deps/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::disk_num_start	deps/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::dosDate	deps/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::external_fa	deps/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::flag	deps/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::internal_fa	deps/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::size_file_comment	deps/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::size_file_extra	deps/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::size_filename	deps/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::tmu_date	deps/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::uncompressed_size	deps/minizip/unzip.h	/^    uLong uncompressed_size; \/* uncompressed size               8 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::version	deps/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info64_s::version_needed	deps/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
unz_file_info_internal	deps/minizip/unzip.c	/^} unz_file_info_internal;$/;"	t	typeref:struct:unz_file_info_internal_s	file:
unz_file_info_internal_s	deps/minizip/unzip.c	/^typedef struct unz_file_info_internal_s$/;"	s	file:
unz_file_info_internal_s::offset_curfile	deps/minizip/unzip.c	/^    uLong offset_curfile;\/* relative offset of local header 4 bytes *\/$/;"	m	struct:unz_file_info_internal_s	file:	access:public
unz_file_info_s	deps/minizip/unzip.h	/^typedef struct unz_file_info_s$/;"	s
unz_file_info_s::compressed_size	deps/minizip/unzip.h	/^    uLong compressed_size;      \/* compressed size                 4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::compression_method	deps/minizip/unzip.h	/^    uLong compression_method;   \/* compression method              2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::crc	deps/minizip/unzip.h	/^    uLong crc;                  \/* crc-32                          4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::disk_num_start	deps/minizip/unzip.h	/^    uLong disk_num_start;       \/* disk number start               2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::dosDate	deps/minizip/unzip.h	/^    uLong dosDate;              \/* last mod file date in Dos fmt   4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::external_fa	deps/minizip/unzip.h	/^    uLong external_fa;          \/* external file attributes        4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::flag	deps/minizip/unzip.h	/^    uLong flag;                 \/* general purpose bit flag        2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::internal_fa	deps/minizip/unzip.h	/^    uLong internal_fa;          \/* internal file attributes        2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::size_file_comment	deps/minizip/unzip.h	/^    uLong size_file_comment;    \/* file comment length             2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::size_file_extra	deps/minizip/unzip.h	/^    uLong size_file_extra;      \/* extra field length              2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::size_filename	deps/minizip/unzip.h	/^    uLong size_filename;        \/* filename length                 2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::tmu_date	deps/minizip/unzip.h	/^    tm_unz tmu_date;$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::uncompressed_size	deps/minizip/unzip.h	/^    uLong uncompressed_size;    \/* uncompressed size               4 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::version	deps/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_info_s::version_needed	deps/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
unz_file_pos	deps/minizip/unzip.c	/^} unz_file_pos;$/;"	t	typeref:struct:unz_file_pos_s	file:
unz_file_pos_s	deps/minizip/unzip.c	/^typedef struct unz_file_pos_s$/;"	s	file:
unz_file_pos_s::num_of_file	deps/minizip/unzip.c	/^    uLong num_of_file;            \/\/ # of file$/;"	m	struct:unz_file_pos_s	file:	access:public
unz_file_pos_s::pos_in_zip_directory	deps/minizip/unzip.c	/^    uLong pos_in_zip_directory;   \/\/ offset in file$/;"	m	struct:unz_file_pos_s	file:	access:public
unz_global_info	deps/minizip/unzip.h	/^} unz_global_info;$/;"	t	typeref:struct:unz_global_info_s
unz_global_info64	deps/minizip/unzip.h	/^} unz_global_info64;$/;"	t	typeref:struct:unz_global_info64_s
unz_global_info64_s	deps/minizip/unzip.h	/^typedef struct unz_global_info64_s$/;"	s
unz_global_info64_s::number_entry	deps/minizip/unzip.h	/^    uLong number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info64_s	access:public
unz_global_info64_s::size_comment	deps/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info64_s	access:public
unz_global_info_s	deps/minizip/unzip.h	/^typedef struct unz_global_info_s$/;"	s
unz_global_info_s::number_entry	deps/minizip/unzip.h	/^    uLong number_entry;         \/* total number of entries in$/;"	m	struct:unz_global_info_s	access:public
unz_global_info_s::size_comment	deps/minizip/unzip.h	/^    uLong size_comment;         \/* size of the global comment of the zipfile *\/$/;"	m	struct:unz_global_info_s	access:public
unz_s	deps/minizip/unzip.c	/^} unz_s;$/;"	t	typeref:struct:__anon111	file:
unzeof	deps/minizip/unzip.c	/^int unzeof (unzFile file)$/;"	f	signature:(unzFile file)
unzlocal_CheckCurrentFileCoherencyHeader	deps/minizip/unzip.c	/^static int unzlocal_CheckCurrentFileCoherencyHeader (unz_s *s,$/;"	f	file:	signature:(unz_s *s, uInt *piSizeVar, uLong *poffset_local_extrafield, uInt *psize_local_extrafield)
unzlocal_DosDateToTmuDate	deps/minizip/unzip.c	/^static void unzlocal_DosDateToTmuDate (uLong ulDosDate, tm_unz *ptm)$/;"	f	file:	signature:(uLong ulDosDate, tm_unz *ptm)
unzlocal_GetCurrentFileInfoInternal	deps/minizip/unzip.c	/^static int unzlocal_GetCurrentFileInfoInternal (unzFile file,$/;"	f	file:	signature:(unzFile file, unz_file_info *pfile_info, unz_file_info_internal *pfile_info_internal, char *szFileName, uLong fileNameBufferSize, void *extraField, uLong extraFieldBufferSize, char *szComment, uLong commentBufferSize)
unzlocal_SearchCentralDir	deps/minizip/unzip.c	/^static uLong unzlocal_SearchCentralDir(voidpf filestream)$/;"	f	file:	signature:(voidpf filestream)
unzlocal_getByte	deps/minizip/unzip.c	/^static int unzlocal_getByte (voidpf filestream, int *pi)$/;"	f	file:	signature:(voidpf filestream, int *pi)
unzlocal_getLong	deps/minizip/unzip.c	/^static int unzlocal_getLong (voidpf filestream, uLong *pX)$/;"	f	file:	signature:(voidpf filestream, uLong *pX)
unzlocal_getShort	deps/minizip/unzip.c	/^static int unzlocal_getShort (voidpf filestream, uLong *pX)$/;"	f	file:	signature:(voidpf filestream, uLong *pX)
unztell	deps/minizip/unzip.c	/^z_off_t unztell (unzFile file)$/;"	f	signature:(unzFile file)
updateConfigFile	android/phoenix/src/com/retroarch/browser/preferences/util/UserPreferences.java	/^	public static void updateConfigFile(Context ctx)$/;"	m	class:UserPreferences	access:public	signature:(Context ctx)
updateSurface	android/phoenix/src/com/retroarch/browser/retroactivity/RetroActivityCamera.java	/^	private boolean updateSurface = true;$/;"	f	class:RetroActivityCamera	file:	access:private
update_element	gfx/state_tracker.c	/^static void update_element($/;"	f	file:	signature:( struct state_tracker_uniform *uniform, struct state_tracker_internal *info, unsigned frame_count)
update_frame_time	retroarch.c	/^static inline void update_frame_time(void)$/;"	f	file:	signature:(void)
update_input	gfx/state_tracker.c	/^static void update_input(state_tracker_t *tracker)$/;"	f	file:	signature:(state_tracker_t *tracker)
update_input	libretro-test/libretro-test.c	/^static void update_input(void)$/;"	f	file:	signature:(void)
update_interval_distance	general.h	/^      int update_interval_distance;$/;"	m	struct:settings::__anon229	access:public
update_interval_ms	general.h	/^      int update_interval_ms;$/;"	m	struct:settings::__anon229	access:public
update_texture_asm	gx/gx_video.c	/^static void update_texture_asm(const uint32_t *src, const uint32_t *dst,$/;"	f	file:	signature:(const uint32_t *src, const uint32_t *dst, unsigned width, unsigned height, unsigned pitch)
update_title	gfx/d3d9/d3d9.cpp	/^void D3DVideo::update_title()$/;"	f	class:D3DVideo	signature:()
update_title	gfx/d3d9/d3d9.hpp	/^      void update_title();$/;"	p	class:D3DVideo	access:private	signature:()
update_variables	libretro-test-gl/libretro-test.c	/^static void update_variables(void)$/;"	f	file:	signature:(void)
update_window_title	gfx/gfx_context.h	/^   void (*update_window_title)(void);$/;"	m	struct:gfx_ctx_driver	access:public
updated	core_options.c	/^   bool updated;$/;"	m	struct:core_option_manager	file:	access:public
updated	gfx/thread_wrapper.c	/^      bool updated;$/;"	m	struct:thread_video::__anon221	file:	access:public
ups_apply_patch	patch.c	/^patch_error_t ups_apply_patch($/;"	f	signature:( const uint8_t *patchdata, size_t patchlength, const uint8_t *sourcedata, size_t sourcelength, uint8_t *targetdata, size_t *targetlength)
ups_apply_patch	patch.h	/^patch_error_t ups_apply_patch($/;"	p	signature:( const uint8_t *patch_data, size_t patch_length, const uint8_t *source_data, size_t source_length, uint8_t *target_data, size_t *target_length)
ups_data	patch.c	/^struct ups_data$/;"	s	file:
ups_data::patch_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
ups_data::patch_data	patch.c	/^   const uint8_t *patch_data, *source_data; $/;"	m	struct:ups_data	file:	access:public
ups_data::patch_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
ups_data::patch_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
ups_data::source_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
ups_data::source_data	patch.c	/^   const uint8_t *patch_data, *source_data; $/;"	m	struct:ups_data	file:	access:public
ups_data::source_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
ups_data::source_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
ups_data::target_checksum	patch.c	/^   unsigned patch_checksum, source_checksum, target_checksum;$/;"	m	struct:ups_data	file:	access:public
ups_data::target_data	patch.c	/^   uint8_t *target_data;$/;"	m	struct:ups_data	file:	access:public
ups_data::target_length	patch.c	/^   unsigned patch_length, source_length, target_length;$/;"	m	struct:ups_data	file:	access:public
ups_data::target_offset	patch.c	/^   unsigned patch_offset, source_offset, target_offset;$/;"	m	struct:ups_data	file:	access:public
ups_decode	patch.c	/^static uint64_t ups_decode(struct ups_data *data) $/;"	f	file:	signature:(struct ups_data *data)
ups_name	general.h	/^   char ups_name[PATH_MAX];$/;"	m	struct:global	access:public
ups_patch_read	patch.c	/^static uint8_t ups_patch_read(struct ups_data *data) $/;"	f	file:	signature:(struct ups_data *data)
ups_pref	general.h	/^   bool ups_pref;$/;"	m	struct:global	access:public
ups_source_read	patch.c	/^static uint8_t ups_source_read(struct ups_data *data) $/;"	f	file:	signature:(struct ups_data *data)
ups_target_write	patch.c	/^static void ups_target_write(struct ups_data *data, uint8_t n) $/;"	f	file:	signature:(struct ups_data *data, uint8_t n)
usage	ps3/ps3py/pkg.py	/^def usage():$/;"	f	access:public
usage	ps3/rgl/include/RGL/Types.h	/^      GLenum usage;$/;"	m	struct:__anon63	access:public
use	gfx/shader_common.h	/^   void (*use)(unsigned index);$/;"	m	struct:gl_shader_backend	access:public
use_float	driver.h	/^   bool (*use_float)(void *data); \/\/ Defines if driver will take standard floating point samples, or int16_t samples.$/;"	m	struct:audio_driver	access:public
use_float	general.h	/^      bool use_float;$/;"	m	struct:global::__anon235	access:public
use_float	record/ffemu.c	/^   bool use_float;$/;"	m	struct:ff_audio_info	file:	access:public
use_sram	general.h	/^   bool use_sram;$/;"	m	struct:global	access:public
use_sws	record/ffemu.c	/^   bool use_sws;$/;"	m	struct:ff_video_info	file:	access:public
used	apple/common/apple_joypad.c	/^   bool used;$/;"	m	struct:__anon156	file:	access:public
used	gfx/omap_gfx.c	/^  bool used;$/;"	m	struct:omapfb_page	file:	access:public
used_real	netplay.c	/^   bool used_real;$/;"	m	struct:delta_frame	file:	access:public
userCreated	ps3/rgl/include/Cg/CgProgramGroup.h	/^   bool userCreated;$/;"	m	struct:_CGprogramGroup	access:public
userSemaphores	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmSemaphore userSemaphores[RGLGCM_MAX_USER_SEMAPHORES];$/;"	m	struct:rglGcmSemaphoreMemory	access:public
user_data	apple/iOS/bluetooth/btstack/linked_list.h	/^    void *user_data;          \/\/ <-- pointer to struct base$/;"	m	struct:linked_item	access:public
userdata	android/phoenix/jni/apk-extract/apk-extract.c	/^struct userdata$/;"	s	file:
userdata	apple/iOS/menu.h	/^@property (copy) NSString* (^detail)(id userdata);$/;"	v
userdata	apple/iOS/menu.h	/^@property (copy) void (^action)(id userdata);$/;"	v
userdata	apple/iOS/menu.h	/^@property (nonatomic) id userdata;$/;"	v
userdata	frontend/platform/platform_apple.c	/^   void* userdata;$/;"	m	struct:__anon14	file:	access:public
userdata	input/keyboard_line.c	/^   void *userdata;$/;"	m	struct:input_keyboard_line	file:	access:public
userdata	thread.c	/^   void *userdata;$/;"	m	struct:thread_data	file:	access:public
userdata::dest	android/phoenix/jni/apk-extract/apk-extract.c	/^   const char *dest;$/;"	m	struct:userdata	file:	access:public
userdata::subdir	android/phoenix/jni/apk-extract/apk-extract.c	/^   const char *subdir;$/;"	m	struct:userdata	file:	access:public
usr_data	gx/gx_video_inl.h	/^	u32 usr_data;$/;"	m	struct:__gx_texobj	access:public
utable	gfx/xvideo.c	/^   uint8_t *utable;$/;"	m	struct:xv	file:	access:public
v	gfx/d3d9/render_chain.hpp	/^   float u, v;$/;"	m	struct:Vertex	access:public
v	gfx/thread_wrapper.c	/^      void *v;$/;"	m	union:thread_video::__anon215	file:	access:public
v	xdk/xdk_d3d.h	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	access:public
v	xenon/xenon360_video.c	/^   float u, v;$/;"	m	struct:DrawVerticeFormats	file:	access:public
v4l_free	camera/video4linux2.c	/^static void v4l_free(void *data)$/;"	f	file:	signature:(void *data)
v4l_init	camera/video4linux2.c	/^static void *v4l_init(const char *device, uint64_t caps, unsigned width, unsigned height)$/;"	f	file:	signature:(const char *device, uint64_t caps, unsigned width, unsigned height)
v4l_poll	camera/video4linux2.c	/^static bool v4l_poll(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb,$/;"	f	file:	signature:(void *data, retro_camera_frame_raw_framebuffer_t frame_raw_cb, retro_camera_frame_opengl_texture_t frame_gl_cb)
v4l_start	camera/video4linux2.c	/^static bool v4l_start(void *data)$/;"	f	file:	signature:(void *data)
v4l_stop	camera/video4linux2.c	/^static void v4l_stop(void *data)$/;"	f	file:	signature:(void *data)
vPrg	gfx/d3d9/render_chain.hpp	/^         CGprogram vPrg, fPrg;$/;"	m	struct:RenderChain::Pass	access:public
vStock	gfx/d3d9/render_chain.hpp	/^      CGprogram vStock, fStock;$/;"	m	class:RenderChain	access:private
v_ctable	gfx/shader_hlsl.c	/^   LPD3DXCONSTANTTABLE v_ctable;$/;"	m	struct:hlsl_program	file:	access:public
v_decl	xdk/xdk_d3d.h	/^   IDirect3DVertexDeclaration9* v_decl;$/;"	m	struct:xdk_d3d_video	access:public
v_index	gfx/xvideo.c	/^   unsigned v_index;$/;"	m	struct:format_desc	file:	access:public
val	compat/getopt_rarch.h	/^   int val;$/;"	m	struct:option	access:public
val	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint val;$/;"	m	struct:rglGcmSemaphore	access:public
valid	driver.h	/^   bool valid;$/;"	m	struct:retro_keybind	access:public
valid	gfx/shader_parse.h	/^   bool valid;$/;"	m	struct:gfx_fbo_scale	access:public
valid	input/input_common.h	/^   bool valid;$/;"	m	struct:input_bind_map	access:public
validPitch	ps3/rgl/src/rgl_ps3.cpp	/^static unsigned int validPitch[] =$/;"	v	file:
validPitchCount	ps3/rgl/src/rgl_ps3.cpp	/^static const unsigned int validPitchCount = sizeof( validPitch ) \/ sizeof( validPitch[0] );$/;"	v	file:
valid_elf_image	wii/app_booter/elfloader.c	/^s32 valid_elf_image (void *addr)$/;"	f	signature:(void *addr)
valid_elf_image	wii/app_booter/elfloader.h	/^s32 valid_elf_image (void *addr);$/;"	p	signature:(void *addr)
valid_extensions	general.h	/^      char valid_extensions[PATH_MAX];$/;"	m	struct:global::__anon234	access:public
valid_extensions	libretro.h	/^   const char *valid_extensions;  \/\/ A string listing probably rom extensions the core will be able to load, separated with pipe.$/;"	m	struct:retro_system_info	access:public
validate	ps3/rgl/src/include/rgl-typedefs.h	/^   void validate (void *data);$/;"	p	struct:rglPlatformFramebuffer	access:public	signature:(void *data)
validate	ps3/rgl/src/rgl_ps3_raster.cpp	/^void rglPlatformFramebuffer::validate (void *data)$/;"	f	class:rglPlatformFramebuffer	signature:(void *data)
validate_cpu_features	retroarch.c	/^static void validate_cpu_features(void)$/;"	f	file:	signature:(void)
validate_filter	gfx/scaler/filter.c	/^static bool validate_filter(struct scaler_ctx *ctx)$/;"	f	file:	signature:(struct scaler_ctx *ctx)
validate_header	compat/rxml/rxml.c	/^static bool validate_header(const char **ptr)$/;"	f	file:	signature:(const char **ptr)
validate_param_name	gfx/d3d9/render_chain.cpp	/^static inline bool validate_param_name(const char *name)$/;"	f	file:	signature:(const char *name)
validate_shader	tools/cg2glsl.py	/^def validate_shader(source, target):$/;"	f	access:public
vals	core_options.c	/^   struct string_list *vals;$/;"	m	struct:core_option	typeref:struct:core_option::string_list	file:	access:public
value	apple/common/setting_data.h	/^   } value;$/;"	m	struct:__anon161	typeref:union:__anon161::__anon163	access:public
value	compat/rxml/rxml.h	/^   char *value;$/;"	m	struct:rxml_attrib_node	access:public
value	conf/config_file.c	/^   char *value;$/;"	m	struct:config_entry_list	file:	access:public
value	conf/config_file.h	/^   const char *value;$/;"	m	struct:config_file_entry	access:public
value	gfx/gfx_common.h	/^   float value;$/;"	m	struct:aspect_ratio_elem	access:public
value	gfx/state_tracker.h	/^   float value;$/;"	m	struct:state_tracker_uniform	access:public
value	libretro.h	/^   const char *value;      \/\/ Value to be obtained. If key does not exist, it is set to NULL.$/;"	m	struct:retro_variable	access:public
value	ps3/rgl/include/RGL/Types.h	/^      GLfloat	value[4];     \/\/ constant attribute value$/;"	m	struct:__anon68	access:public
values	apple/common/setting_data.h	/^   const char* values;$/;"	m	struct:__anon161	access:public
vao	gfx/gl_common.h	/^   GLuint vao;$/;"	m	struct:gl	access:public
vao	libretro-test-gl/libretro-test.c	/^static GLuint vao;$/;"	v	file:
var	ps3/rgl/include/Cg/cgBinary.h	/^      CGenum                          var;           \/\/ cgGetParameterVariability()$/;"	m	struct:CgBinaryParameter	access:public
var_table	ps3/rgl/src/rgl_ps3_cg.cpp	/^static const CGenum var_table[] = {CG_VARYING, CG_UNIFORM, CG_CONSTANT, CG_MIXED};$/;"	v	file:
variable	gfx/shader_parse.h	/^   struct state_tracker_uniform_info variable[GFX_MAX_VARIABLES];$/;"	m	struct:gfx_shader	typeref:struct:gfx_shader::state_tracker_uniform_info	access:public
variables	gfx/shader_parse.h	/^   unsigned variables;$/;"	m	struct:gfx_shader	access:public
vb	xenon/xenon360_video.c	/^   struct XenosVertexBuffer *vb;$/;"	m	struct:gl	typeref:struct:gl::XenosVertexBuffer	file:	access:public
vbo	libretro-test-gl/libretro-test.c	/^static GLuint vbo;$/;"	v	file:
vbo_primary	gfx/shader_glsl.c	/^   GLuint vbo_primary;$/;"	m	struct:cache_vbo	file:	access:public
vbo_secondary	gfx/shader_glsl.c	/^   GLuint vbo_secondary;$/;"	m	struct:cache_vbo	file:	access:public
vcdClear	gx/gx_video_inl.h	/^	u32 vcdClear;$/;"	m	struct:__gx_regdef	access:public
vcdHi	gx/gx_video_inl.h	/^	u32 vcdHi;$/;"	m	struct:__gx_regdef	access:public
vcdLo	gx/gx_video_inl.h	/^	u32 vcdLo;$/;"	m	struct:__gx_regdef	access:public
vcdNrms	gx/gx_video_inl.h	/^	u32 vcdNrms;$/;"	m	struct:__gx_regdef	access:public
vcodec	record/ffemu.c	/^   char vcodec[64];$/;"	m	struct:ff_config_param	file:	access:public
vec2b_t	apple/common/hidpad/wiimote.h	/^	typedef struct vec2b_t {$/;"	s
vec2b_t	apple/common/hidpad/wiimote.h	/^	} vec2b_t;$/;"	t	typeref:struct:vec2b_t
vec2b_t::x	apple/common/hidpad/wiimote.h	/^		byte x, y;$/;"	m	struct:vec2b_t	access:public
vec2b_t::y	apple/common/hidpad/wiimote.h	/^		byte x, y;$/;"	m	struct:vec2b_t	access:public
vec_memcpy	ps3/altivec_mem.c	/^void *vec_memcpy(void *dstpp, const void *srcpp, size_t len)$/;"	f	signature:(void *dstpp, const void *srcpp, size_t len)
vec_memcpy	ps3/altivec_mem.h	/^extern void *vec_memcpy(void *dstpp, const void *srcpp, size_t len);$/;"	p	signature:(void *dstpp, const void *srcpp, size_t len)
vec_memcpy_aligned	ps3/altivec_mem.c	/^void *vec_memcpy_aligned(void *dstpp, const void *srcpp, size_t len)$/;"	f	signature:(void *dstpp, const void *srcpp, size_t len)
vec_memcpy_aligned	ps3/altivec_mem.h	/^extern void *vec_memcpy_aligned(void *dstpp, const void *srcpp, size_t len);$/;"	p	signature:(void *dstpp, const void *srcpp, size_t len)
vec_memset	ps3/altivec_mem.c	/^void *vec_memset(void *s, int p, size_t len)$/;"	f	signature:(void *s, int p, size_t len)
vec_memset	ps3/altivec_mem.h	/^extern void *vec_memset(void *s, int p, size_t len);$/;"	p	signature:(void *s, int p, size_t len)
vendor	blackberry-qnx/frontend_qnx.h	/^    char vendor[64];$/;"	m	struct:__anon94	access:public
verbose	general.h	/^   bool verbose;$/;"	m	struct:global	access:public
verbose	general.h	/^   bool verbose;$/;"	m	struct:rarch_main_wrap	access:public
verify_api_version	retroarch.c	/^static void verify_api_version(void)$/;"	f	file:	signature:(void)
verify_command	command.c	/^static bool verify_command(const char *cmd)$/;"	f	file:	signature:(const char *cmd)
version	deps/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
version	deps/minizip/unzip.h	/^    uLong version;              \/* version made by                 2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
version	ps3/ps3py/pkg.py	/^def version():$/;"	f	access:public
version	ps3/ps3py/setup.py	/^       version = '1.0',$/;"	v
version	ps3/rgl/include/Cg/CgCommon.h	/^   int version; \/\/contained a boolean indicating if the structure pointers have been patched or not$/;"	m	struct:_CGprogram	access:public
version_major	libretro.h	/^   unsigned version_major; \/\/ Major version number for core GL context.$/;"	m	struct:retro_hw_render_callback	access:public
version_minor	libretro.h	/^   unsigned version_minor; \/\/ Minor version number for core GL context.$/;"	m	struct:retro_hw_render_callback	access:public
version_needed	deps/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info64_s	access:public
version_needed	deps/minizip/unzip.h	/^    uLong version_needed;       \/* version needed to extract       2 bytes *\/$/;"	m	struct:unz_file_info_s	access:public
vert	gfx/scaler/scaler.h	/^   struct scaler_filter horiz, vert;$/;"	m	struct:scaler_ctx	typeref:struct:scaler_ctx::	access:public
vert_buf	gfx/d3d9/d3d9.hpp	/^   IDirect3DVertexBuffer9 *vert_buf;$/;"	m	struct:__anon222	access:public
vert_coords	gfx/d3d9/d3d9.hpp	/^   Coords vert_coords;$/;"	m	struct:__anon222	access:public
vertex	gfx/gl_common.h	/^   const GLfloat *vertex;$/;"	m	struct:gl_coords	access:public
vertex	gfx/shader_cg.c	/^   CGparameter vertex;$/;"	m	struct:cg_program	file:	access:public
vertex	gfx/shader_parse.h	/^         char *vertex; \/\/ Dynamically allocated. Must be free'd.$/;"	m	struct:gfx_shader_pass::__anon212::__anon213	access:public
vertexCount	ps3/rgl/include/RGL/Types.h	/^      GLsizei	vertexCount;$/;"	m	struct:__anon67	access:public
vertexEnable	ps3/rgl/include/RGL/Types.h	/^      GLboolean vertexEnable;$/;"	m	struct:__anon63	access:public
vertexProgram	ps3/rgl/include/Cg/CgInternal.h	/^         vertexProgram;$/;"	m	union:CgProgramHeader::__anon74	typeref:struct:CgProgramHeader::__anon74::__anon75	access:public
vertexProgramAttribMask	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint vertexProgramAttribMask;$/;"	m	struct:rglGcmInterpolantState	access:public
vertex_buf	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexBuffer9 *vertex_buf;$/;"	m	struct:RenderChain::Pass	access:public
vertex_buf	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexBuffer9 *vertex_buf[Textures];$/;"	m	struct:RenderChain::__anon224	access:public
vertex_buf	gfx/image.h	/^   LPDIRECT3DVERTEXBUFFER vertex_buf;$/;"	m	struct:texture_image	access:public
vertex_buf	xdk/xdk_d3d.h	/^   LPDIRECT3DVERTEXBUFFER vertex_buf;$/;"	m	struct:xdk_d3d_video	access:public
vertex_coord	gfx/gl_common.h	/^   GLfloat vertex_coord[8];$/;"	m	struct:gl_overlay_data	access:public
vertex_coord	gfx/shader_glsl.c	/^   int vertex_coord;$/;"	m	struct:shader_uniforms	file:	access:public
vertex_data	libretro-test-gl/libretro-test.c	/^static const GLfloat vertex_data[] = {$/;"	v	file:
vertex_decl	gfx/d3d9/render_chain.hpp	/^         IDirect3DVertexDeclaration9 *vertex_decl;$/;"	m	struct:RenderChain::Pass	access:public
vertex_geom	driver.h	/^   void (*vertex_geom)(void *data, unsigned image, float x, float y, float w, float h);$/;"	m	struct:video_overlay_interface	access:public
vertex_program	ps3/rgl/src/cg/nvbi.hpp	/^               vertex_program() const = 0;$/;"	p	class:cgc::bio::nvb_reader	access:public	signature:() const
vertex_program	ps3/rgl/src/cg/nvbiimpl.hpp	/^               vertex_program() const;$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:() const
vertex_program	ps3/rgl/src/rgl_ps3_cg.cpp	/^         nvb_reader_impl::vertex_program() const$/;"	f	class:cgc::bio::nvb_reader_impl	signature:() const
vertex_ptr	gfx/gl_common.h	/^   const GLfloat *vertex_ptr;$/;"	m	struct:gl	access:public
vertex_shader	libretro-test-gl/libretro-test.c	/^static const char *vertex_shader[] = {$/;"	v	file:
vertexes	gfx/gl.c	/^static const GLfloat vertexes[] = {$/;"	v	file:
vertexes_flipped	gfx/gl.c	/^static const GLfloat vertexes_flipped[] = {$/;"	v	file:
verticalScale	ps3/rgl/include/export/RGL/rgl.h	/^   GLfloat verticalScale;$/;"	m	struct:__anon72	access:public
vertices	gfx/lima_gfx.c	/^float vertices[4][3] =$/;"	v
vg_alive	gfx/vg.c	/^static bool vg_alive(void *data)$/;"	f	file:	signature:(void *data)
vg_calculate_quad	gfx/vg.c	/^static void vg_calculate_quad(vg_t *vg)$/;"	f	file:	signature:(vg_t *vg)
vg_copy_frame	gfx/vg.c	/^static void vg_copy_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch)
vg_draw_message	gfx/vg.c	/^static void vg_draw_message(vg_t *vg, const char *msg)$/;"	f	file:	signature:(vg_t *vg, const char *msg)
vg_focus	gfx/vg.c	/^static bool vg_focus(void *data)$/;"	f	file:	signature:(void *data)
vg_frame	gfx/vg.c	/^static bool vg_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
vg_free	gfx/vg.c	/^static void vg_free(void *data)$/;"	f	file:	signature:(void *data)
vg_init	gfx/vg.c	/^static void *vg_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
vg_query_extension	gfx/vg.c	/^static inline bool vg_query_extension(const char *ext)$/;"	f	file:	signature:(const char *ext)
vg_render_message	gfx/vg.c	/^static void vg_render_message(vg_t *vg, const char *msg)$/;"	f	file:	signature:(vg_t *vg, const char *msg)
vg_set_nonblock_state	gfx/vg.c	/^static void vg_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
vg_t	gfx/vg.c	/^} vg_t;$/;"	t	typeref:struct:__anon225	file:
vga_mode	gfx/context/sunxi_disp_ioctl.h	/^	__disp_vga_mode_t vga_mode[2];$/;"	m	struct:__anon203	access:public
vid_size_f	gfx/shader_cg.c	/^   CGparameter vid_size_f;$/;"	m	struct:cg_fbo_params	file:	access:public
vid_size_f	gfx/shader_cg.c	/^   CGparameter vid_size_f;$/;"	m	struct:cg_program	file:	access:public
vid_size_f	gfx/shader_hlsl.c	/^   D3DXHANDLE	vid_size_f;$/;"	m	struct:hlsl_program	file:	access:public
vid_size_v	gfx/shader_cg.c	/^   CGparameter vid_size_v;$/;"	m	struct:cg_fbo_params	file:	access:public
vid_size_v	gfx/shader_cg.c	/^   CGparameter vid_size_v;$/;"	m	struct:cg_program	file:	access:public
vid_size_v	gfx/shader_hlsl.c	/^   D3DXHANDLE	vid_size_v;$/;"	m	struct:hlsl_program	file:	access:public
video	driver.h	/^   const video_driver_t *video;$/;"	m	struct:driver	access:public
video	general.h	/^   } video;$/;"	m	struct:settings	typeref:struct:settings::__anon227	access:public
video	record/ffemu.c	/^   struct ff_video_info video;$/;"	m	struct:ffemu	typeref:struct:ffemu::ff_video_info	file:	access:public
video4linux	camera/video4linux2.c	/^typedef struct video4linux$/;"	s	file:
video4linux::buffer_output	camera/video4linux2.c	/^   uint32_t *buffer_output;$/;"	m	struct:video4linux	file:	access:public
video4linux::buffers	camera/video4linux2.c	/^   struct buffer *buffers;$/;"	m	struct:video4linux	typeref:struct:video4linux::buffer	file:	access:public
video4linux::dev_name	camera/video4linux2.c	/^   char dev_name[PATH_MAX];$/;"	m	struct:video4linux	file:	access:public
video4linux::fd	camera/video4linux2.c	/^   int fd;$/;"	m	struct:video4linux	file:	access:public
video4linux::height	camera/video4linux2.c	/^   unsigned height;$/;"	m	struct:video4linux	file:	access:public
video4linux::n_buffers	camera/video4linux2.c	/^   unsigned n_buffers;$/;"	m	struct:video4linux	file:	access:public
video4linux::pitch	camera/video4linux2.c	/^   size_t pitch;$/;"	m	struct:video4linux	file:	access:public
video4linux::ready	camera/video4linux2.c	/^   bool ready;$/;"	m	struct:video4linux	file:	access:public
video4linux::scaler	camera/video4linux2.c	/^   struct scaler_ctx scaler;$/;"	m	struct:video4linux	typeref:struct:video4linux::scaler_ctx	file:	access:public
video4linux::width	camera/video4linux2.c	/^   unsigned width;$/;"	m	struct:video4linux	file:	access:public
video4linux_t	camera/video4linux2.c	/^} video4linux_t;$/;"	t	typeref:struct:video4linux	file:
video_active	general.h	/^   bool video_active;$/;"	m	struct:global	access:public
video_alive_func	driver_funcs.h	42;"	d
video_cache_context	driver.h	/^   bool video_cache_context;$/;"	m	struct:driver	access:public
video_cache_context_ack	driver.h	/^   bool video_cache_context_ack; \/\/ Set to true by driver if context caching succeeded.$/;"	m	struct:driver	access:public
video_cb	libretro-test-gl/libretro-test.c	/^static retro_video_refresh_t video_cb;$/;"	v	file:
video_cb	libretro-test/libretro-test.c	/^static retro_video_refresh_t video_cb;$/;"	v	file:
video_d3d9	gfx/d3d9/d3d9.cpp	/^const video_driver_t video_d3d9 = {$/;"	v
video_data	driver.h	/^   void *video_data;$/;"	m	struct:driver	access:public
video_data_own	driver.h	/^   bool video_data_own;$/;"	m	struct:driver	access:public
video_display	driver.h	/^   uintptr_t video_display;$/;"	m	struct:driver	access:public
video_driver	driver.h	/^typedef struct video_driver$/;"	s
video_driver::alive	driver.h	/^   bool (*alive)(void *data);$/;"	m	struct:video_driver	access:public
video_driver::focus	driver.h	/^   bool (*focus)(void *data); \/\/ Does the window have focus?$/;"	m	struct:video_driver	access:public
video_driver::frame	driver.h	/^   bool (*frame)(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg); \/\/ msg is for showing a message on the screen along with the video frame.$/;"	m	struct:video_driver	access:public
video_driver::free	driver.h	/^   void (*free)(void *data);$/;"	m	struct:video_driver	access:public
video_driver::ident	driver.h	/^   const char *ident;$/;"	m	struct:video_driver	access:public
video_driver::init	driver.h	/^   void *(*init)(const video_info_t *video, const input_driver_t **input, void **input_data); $/;"	m	struct:video_driver	access:public
video_driver::overlay_interface	driver.h	/^   void (*overlay_interface)(void *data, const video_overlay_interface_t **iface);$/;"	m	struct:video_driver	access:public
video_driver::poke_interface	driver.h	/^   void (*poke_interface)(void *data, const video_poke_interface_t **iface);$/;"	m	struct:video_driver	access:public
video_driver::read_viewport	driver.h	/^   bool (*read_viewport)(void *data, uint8_t *buffer);$/;"	m	struct:video_driver	access:public
video_driver::restart	driver.h	/^   void (*restart)(void);$/;"	m	struct:video_driver	access:public
video_driver::set_nonblock_state	driver.h	/^   void (*set_nonblock_state)(void *data, bool toggle); \/\/ Should we care about syncing to vblank? Fast forwarding.$/;"	m	struct:video_driver	access:public
video_driver::set_rotation	driver.h	/^   void (*set_rotation)(void *data, unsigned rotation);$/;"	m	struct:video_driver	access:public
video_driver::set_shader	driver.h	/^   bool (*set_shader)(void *data, enum rarch_shader_type type, const char *path); \/\/ Sets shader. Might not be implemented. Will be moved to poke_interface later.$/;"	m	struct:video_driver	access:public
video_driver::viewport_info	driver.h	/^   void (*viewport_info)(void *data, struct rarch_viewport *vp);$/;"	m	struct:video_driver	access:public
video_driver_t	driver.h	/^} video_driver_t;$/;"	t	typeref:struct:video_driver
video_drivers	driver.c	/^static const video_driver_t *video_drivers[] = {$/;"	v	file:
video_fifo	record/ffemu.c	/^   fifo_buffer_t *video_fifo;$/;"	m	struct:ffemu	file:	access:public
video_focus_func	driver_funcs.h	43;"	d
video_frame	retroarch.c	/^static void video_frame(const void *data, unsigned width, unsigned height, size_t pitch)$/;"	f	file:	signature:(const void *data, unsigned width, unsigned height, size_t pitch)
video_frame_func	driver_funcs.h	39;"	d
video_frame_net	netplay.c	/^void video_frame_net(const void *data, unsigned width, unsigned height, size_t pitch)$/;"	f	signature:(const void *data, unsigned width, unsigned height, size_t pitch)
video_frame_net	netplay.h	/^void video_frame_net(const void *data, unsigned width, unsigned height, size_t pitch);$/;"	p	signature:(const void *data, unsigned width, unsigned height, size_t pitch)
video_free_func	driver_funcs.h	50;"	d
video_gl	gfx/gl.c	/^const video_driver_t video_gl = {$/;"	v
video_gx	gx/gx_video.c	/^const video_driver_t video_gx = {$/;"	v
video_info	driver.h	/^typedef struct video_info$/;"	s
video_info	gfx/d3d9/d3d9.hpp	/^      video_info_t video_info;$/;"	m	class:D3DVideo	access:private
video_info	gfx/d3d9/render_chain.hpp	/^      const video_info_t &video_info;$/;"	m	class:RenderChain	access:private
video_info	gfx/gl_common.h	/^   video_info_t video_info;$/;"	m	struct:gl	access:public
video_info::force_aspect	driver.h	/^   bool force_aspect;$/;"	m	struct:video_info	access:public
video_info::fullscreen	driver.h	/^   bool fullscreen;$/;"	m	struct:video_info	access:public
video_info::height	driver.h	/^   unsigned height;$/;"	m	struct:video_info	access:public
video_info::input_scale	driver.h	/^   unsigned input_scale; \/\/ Maximum input size: RARCH_SCALE_BASE * input_scale$/;"	m	struct:video_info	access:public
video_info::rgb32	driver.h	/^   bool rgb32; \/\/ Use 32-bit RGBA rather than native XBGR1555.$/;"	m	struct:video_info	access:public
video_info::smooth	driver.h	/^   bool smooth;$/;"	m	struct:video_info	access:public
video_info::vsync	driver.h	/^   bool vsync;$/;"	m	struct:video_info	access:public
video_info::width	driver.h	/^   unsigned width;$/;"	m	struct:video_info	access:public
video_info_t	driver.h	/^} video_info_t;$/;"	t	typeref:struct:video_info
video_init_func	driver_funcs.h	37;"	d
video_lima	gfx/lima_gfx.c	/^const video_driver_t video_lima = {$/;"	v
video_null	gfx/null.c	/^const video_driver_t video_null = {$/;"	v
video_omap	gfx/omap_gfx.c	/^const video_driver_t video_omap = {$/;"	v
video_opts	record/ffemu.c	/^   AVDictionary *video_opts;$/;"	m	struct:ff_config_param	file:	access:public
video_overlay_image	driver.h	/^struct video_overlay_image$/;"	s
video_overlay_image::height	driver.h	/^   unsigned height;$/;"	m	struct:video_overlay_image	access:public
video_overlay_image::image	driver.h	/^   const uint32_t *image;$/;"	m	struct:video_overlay_image	access:public
video_overlay_image::width	driver.h	/^   unsigned width;$/;"	m	struct:video_overlay_image	access:public
video_overlay_interface	driver.h	/^typedef struct video_overlay_interface$/;"	s
video_overlay_interface::enable	driver.h	/^   void (*enable)(void *data, bool state);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface::full_screen	driver.h	/^   void (*full_screen)(void *data, bool enable);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface::load	driver.h	/^   bool (*load)(void *data, const struct video_overlay_image *images, unsigned num_images);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface::set_alpha	driver.h	/^   void (*set_alpha)(void *data, unsigned image, float mod);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface::tex_geom	driver.h	/^   void (*tex_geom)(void *data, unsigned image, float x, float y, float w, float h);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface::vertex_geom	driver.h	/^   void (*vertex_geom)(void *data, unsigned image, float x, float y, float w, float h);$/;"	m	struct:video_overlay_interface	access:public
video_overlay_interface_func	driver_funcs.h	49;"	d
video_overlay_interface_t	driver.h	/^} video_overlay_interface_t;$/;"	t	typeref:struct:video_overlay_interface
video_poke	driver.h	/^   const video_poke_interface_t *video_poke;$/;"	m	struct:driver	access:public
video_poke_interface	driver.h	/^typedef struct video_poke_interface$/;"	s
video_poke_interface::apply_state_changes	driver.h	/^   void (*apply_state_changes)(void *data);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::get_current_framebuffer	driver.h	/^   uintptr_t (*get_current_framebuffer)(void *data);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::get_proc_address	driver.h	/^   retro_proc_address_t (*get_proc_address)(void *data, const char *sym);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::grab_mouse_toggle	driver.h	/^   void (*grab_mouse_toggle)(void *data);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::set_aspect_ratio	driver.h	/^   void (*set_aspect_ratio)(void *data, unsigned aspectratio_index);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::set_filtering	driver.h	/^   void (*set_filtering)(void *data, unsigned index, bool smooth);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::set_osd_msg	driver.h	/^   void (*set_osd_msg)(void *data, const char *msg, void *userdata);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::set_texture_enable	driver.h	/^   void (*set_texture_enable)(void *data, bool enable, bool full_screen); \/\/ Enable\/disable rendering.$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::set_texture_frame	driver.h	/^   void (*set_texture_frame)(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha); \/\/ Update texture.$/;"	m	struct:video_poke_interface	access:public
video_poke_interface::show_mouse	driver.h	/^   void (*show_mouse)(void *data, bool state);$/;"	m	struct:video_poke_interface	access:public
video_poke_interface_t	driver.h	/^} video_poke_interface_t;$/;"	t	typeref:struct:video_poke_interface
video_psp1	psp1/psp1_video.c	/^const video_driver_t video_psp1 = {$/;"	v
video_read_viewport_func	driver_funcs.h	48;"	d
video_sdl	gfx/sdl_gfx.c	/^const video_driver_t video_sdl = {$/;"	v
video_set_aspect_ratio_func	driver_funcs.h	46;"	d
video_set_nonblock_state_func	driver_funcs.h	41;"	d
video_set_rotation_func	driver_funcs.h	45;"	d
video_set_shader_func	driver_funcs.h	44;"	d
video_smooth	config.def.h	/^static const bool video_smooth = true;$/;"	v
video_thread	gfx/thread_wrapper.c	/^   video_driver_t video_thread;$/;"	m	struct:thread_video	file:	access:public
video_thread	gfx/thread_wrapper.c	/^static const video_driver_t video_thread = {$/;"	v	file:
video_threaded	config.def.h	/^static const bool video_threaded = false;$/;"	v
video_vg	gfx/vg.c	/^const video_driver_t video_vg = {$/;"	v
video_viewport_info_func	driver_funcs.h	47;"	d
video_window	driver.h	/^   uintptr_t video_window;$/;"	m	struct:driver	access:public
video_xdk_d3d	xdk/xdk_d3d.cpp	/^const video_driver_t video_xdk_d3d = {$/;"	v
video_xenon360	xenon/xenon360_video.c	/^const video_driver_t video_xenon360 = {$/;"	v
video_xvideo	gfx/xvideo.c	/^const video_driver_t video_xvideo = {$/;"	v
viewPager	android/phoenix/src/com/retroarch/browser/coremanager/CoreManagerActivity.java	/^	private ViewPager viewPager;$/;"	f	class:CoreManagerActivity	file:	access:private
viewPager	android/phoenix/src/com/retroarch/browser/preferences/PreferenceActivity.java	/^	private ViewPager viewPager;$/;"	f	class:PreferenceActivity	file:	access:private
viewport	ps3/rgl/src/include/rgl-typedefs.h	/^   rglGcmViewportState viewport;$/;"	m	struct:rglGcmCachedState	access:public
viewport_info	driver.h	/^   void (*viewport_info)(void *data, struct rarch_viewport *vp);$/;"	m	struct:video_driver	access:public
viewport_info	gfx/d3d9/d3d9.cpp	/^void D3DVideo::viewport_info(rarch_viewport &vp)$/;"	f	class:D3DVideo	signature:(rarch_viewport &vp)
viewport_info	gfx/d3d9/d3d9.hpp	/^      void viewport_info(rarch_viewport &vp);$/;"	p	class:D3DVideo	access:public	signature:(rarch_viewport &vp)
viewports	general.h	/^         } viewports;$/;"	m	struct:global::__anon242::__anon243	typeref:struct:global::__anon242::__anon243::__anon245	access:public
visualid	gfx/xvideo.c	/^   int visualid;$/;"	m	struct:xv	file:	access:public
vma	ps3/rgl/src/libelf/readelf.h	/^      unsigned int vma;$/;"	m	struct:__anon35	access:public
voidp	deps/miniz/zlib.h	/^  typedef void *voidp;$/;"	t
voidpc	deps/miniz/zlib.h	/^  typedef void *const voidpc;$/;"	t
voidpf	deps/miniz/zlib.h	/^  typedef void *voidpf;$/;"	t
volume	general.h	/^      float volume; \/\/ dB scale$/;"	m	struct:settings::__anon231	access:public
volume_db	general.h	/^      float volume_db;$/;"	m	struct:global::__anon235	access:public
volume_gain	general.h	/^      float volume_gain;$/;"	m	struct:global::__anon235	access:public
volume_level	general.h	/^         unsigned volume_level;$/;"	m	struct:global::__anon242::__anon246	access:public
vp	gfx/gl_common.h	/^   struct rarch_viewport vp;$/;"	m	struct:gl	typeref:struct:gl::rarch_viewport	access:public
vp	gfx/thread_wrapper.c	/^   struct rarch_viewport vp;$/;"	m	struct:thread_video	typeref:struct:thread_video::rarch_viewport	file:	access:public
vp	gfx/xvideo.c	/^   struct rarch_viewport vp;$/;"	m	struct:xv	typeref:struct:xv::rarch_viewport	file:	access:public
vp	gx/gx_video.h	/^   rarch_viewport_t vp;$/;"	m	struct:gx_video	access:public
vp_out_height	gfx/gl_common.h	/^   unsigned vp_out_height;$/;"	m	struct:gl	access:public
vp_out_width	gfx/gl_common.h	/^   unsigned vp_out_width;$/;"	m	struct:gl	access:public
vprg	gfx/shader_cg.c	/^   CGprogram vprg;$/;"	m	struct:cg_program	file:	access:public
vprg	gfx/shader_hlsl.c	/^   IDirect3DVertexShader9 *vprg;$/;"	m	struct:hlsl_program	file:	access:public
vss	audio/roar.c	/^   roar_vs_t *vss;$/;"	m	struct:__anon103	file:	access:public
vstream	record/ffemu.c	/^   AVStream *vstream;$/;"	m	struct:ff_muxer_info	file:	access:public
vsync	config.def.h	/^static const bool vsync = true;$/;"	v
vsync	driver.h	/^   bool vsync;$/;"	m	struct:video_info	access:public
vsync	general.h	/^      bool vsync;$/;"	m	struct:settings::__anon227	access:public
vsync	gfx/gl_common.h	/^   bool vsync;$/;"	m	struct:gl	access:public
vsync	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean vsync;$/;"	m	struct:__anon50	access:public
vsync	xdk/xdk_d3d.h	/^   bool vsync;$/;"	m	struct:xdk_d3d_video	access:public
vtable	gfx/xvideo.c	/^   uint8_t *vtable;$/;"	m	struct:xv	file:	access:public
w	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
w	gfx/lima_gfx.c	/^	int w, h;$/;"	m	struct:LIMA_Surface	file:	access:public
w	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
w	hash.c	/^   uint32_t w[64];$/;"	m	struct:sha256_ctx	file:	access:public
w	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
w	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
w	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
wAdvance	gfx/fonts/xdk360_fonts.cpp	/^   short wAdvance;                      \/\/ Pixels to advance after the glyph$/;"	m	struct:GLYPH_ATTR	file:	access:public
wButtons	input/winxinput_joypad.c	/^   uint16_t wButtons;$/;"	m	struct:__anon86	file:	access:public
wHSyncPolarity	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHSyncPolarity;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizBlankEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizBlankEnd;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizBlankStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizBlankStart;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizSyncEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizSyncEnd;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizSyncStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizSyncStart;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizTotal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizTotal;$/;"	m	struct:_tagMODESTRUC	access:public
wHorizVisible	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wHorizVisible;$/;"	m	struct:_tagMODESTRUC	access:public
wInterlacedMode	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wInterlacedMode;$/;"	m	struct:_tagMODESTRUC	access:public
wLeftMotorSpeed	input/winxinput_joypad.c	/^   uint16_t wLeftMotorSpeed;$/;"	m	struct:__anon88	file:	access:public
wMask	gfx/fonts/xdk360_fonts.cpp	/^   unsigned short wMask;$/;"	m	struct:GLYPH_ATTR	file:	access:public
wOffset	gfx/fonts/xdk360_fonts.cpp	/^   short wOffset;                       \/\/ Pixel offset for glyph start$/;"	m	struct:GLYPH_ATTR	file:	access:public
wRefresh	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wRefresh;$/;"	m	struct:_tagMODESTRUC	access:public
wRightMotorSpeed	input/winxinput_joypad.c	/^   uint16_t wRightMotorSpeed;$/;"	m	struct:__anon88	file:	access:public
wVSyncPolarity	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVSyncPolarity;$/;"	m	struct:_tagMODESTRUC	access:public
wVertBlankEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertBlankEnd;$/;"	m	struct:_tagMODESTRUC	access:public
wVertBlankStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertBlankStart;$/;"	m	struct:_tagMODESTRUC	access:public
wVertSyncEnd	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertSyncEnd;$/;"	m	struct:_tagMODESTRUC	access:public
wVertSyncStart	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertSyncStart;$/;"	m	struct:_tagMODESTRUC	access:public
wVertTotal	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertTotal;$/;"	m	struct:_tagMODESTRUC	access:public
wVertVisible	ps3/rgl/src/include/rgl-typedefs.h	/^   GLushort  wVertVisible;$/;"	m	struct:_tagMODESTRUC	access:public
wWidth	gfx/fonts/xdk360_fonts.cpp	/^   short wWidth;                        \/\/ Pixel width of the glyph$/;"	m	struct:GLYPH_ATTR	file:	access:public
wait_flip	gfx/context/drm_egl_ctx.c	/^static void wait_flip(bool block)$/;"	f	file:	signature:(bool block)
waiting_for_flip	gfx/context/drm_egl_ctx.c	/^static bool waiting_for_flip;$/;"	v	file:
warn_hangup	netplay.c	/^static void warn_hangup(void)$/;"	f	file:	signature:(void)
warned_ret	gfx/py_state/py_state.c	/^   bool warned_ret;$/;"	m	struct:py_state	file:	access:public
warned_type	gfx/py_state/py_state.c	/^   bool warned_type;$/;"	m	struct:py_state	file:	access:public
wglCreateContextAttribsProc	gfx/context/wgl_ctx.c	/^typedef HGLRC (APIENTRY *wglCreateContextAttribsProc)(HDC, HGLRC, const int*);$/;"	t	file:
while_cond	frontend/frontend.c	105;"	d	file:
while_cond	frontend/frontend.c	120;"	d	file:
while_cond	frontend/frontend.c	135;"	d	file:
while_cond	frontend/frontend.c	150;"	d	file:
while_iter	frontend/frontend.c	104;"	d	file:
while_iter	frontend/frontend.c	119;"	d	file:
while_iter	frontend/frontend.c	134;"	d	file:
while_iter	frontend/frontend.c	149;"	d	file:
white_color	gfx/gl.c	/^static const GLfloat white_color[] = {$/;"	v	file:
white_color_ptr	gfx/gl_common.h	/^   const GLfloat *white_color_ptr;$/;"	m	struct:gl	access:public
width	camera/video4linux2.c	/^   unsigned width;$/;"	m	struct:video4linux	file:	access:public
width	driver.h	/^   unsigned width;$/;"	m	struct:video_info	access:public
width	driver.h	/^   unsigned width;$/;"	m	struct:video_overlay_image	access:public
width	frontend/menu/menu_common.h	/^   unsigned width;$/;"	m	struct:__anon25	access:public
width	general.h	/^      unsigned width;$/;"	m	struct:global::__anon240	access:public
width	general.h	/^      unsigned width;$/;"	m	struct:settings::__anon228	access:public
width	general.h	/^   unsigned width;$/;"	m	struct:rarch_viewport	access:public
width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon165	access:public
width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon166	access:public
width	gfx/context/sunxi_disp_ioctl.h	/^	__u32 width;$/;"	m	struct:__anon201	access:public
width	gfx/fonts/fonts.h	/^   unsigned width, height, pitch;$/;"	m	struct:font_output	access:public
width	gfx/fonts/gl_raster_font.c	/^   int width, height;$/;"	m	struct:font_rect	file:	access:public
width	gfx/gl_common.h	/^   unsigned width;$/;"	m	struct:gl_fbo_rect	access:public
width	gfx/image.h	/^   unsigned width;$/;"	m	struct:texture_image	access:public
width	gfx/omap_gfx.c	/^  unsigned width;$/;"	m	struct:omap_video	file:	access:public
width	gfx/rpng/rpng.c	/^   uint32_t width;$/;"	m	struct:png_ihdr	file:	access:public
width	gfx/scaler/scaler.h	/^      int width;$/;"	m	struct:scaler_ctx::__anon210	access:public
width	gfx/thread_wrapper.c	/^      unsigned width;$/;"	m	struct:thread_video::__anon214	file:	access:public
width	gfx/thread_wrapper.c	/^      unsigned width;$/;"	m	struct:thread_video::__anon221	file:	access:public
width	gfx/xvideo.c	/^   unsigned width;$/;"	m	struct:xv	file:	access:public
width	libretro-test-gl/libretro-test.c	/^static unsigned width = BASE_WIDTH;$/;"	v	file:
width	libretro.h	/^   unsigned width; \/\/ Desired resolution for camera. Is only used as a hint.$/;"	m	struct:retro_camera_callback	access:public
width	ps3/rgl/include/RGL/Types.h	/^      GLsizei width;$/;"	m	struct:__anon62	access:public
width	ps3/rgl/include/RGL/Types.h	/^      GLsizei width;$/;"	m	struct:rglImage_	access:public
width	ps3/rgl/include/RGL/Types.h	/^      GLuint width;$/;"	m	struct:rglBufferObject	access:public
width	ps3/rgl/include/export/RGL/rgl.h	/^   GLuint width;   \/\/ dimensions of display device (scanout buffer)$/;"	m	struct:__anon72	access:public
width	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      width;$/;"	m	struct:rglGcmRenderTargetEx	access:public
width	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint width, height;$/;"	m	struct:__anon49	access:public
width	ps3/rgl/src/rgl_ps3.cpp	/^   int width;$/;"	m	struct:__anon30	file:	access:public
width	record/ffemu.h	/^   unsigned width;$/;"	m	struct:ffemu_video_data	access:public
wiimote	apple/common/hidpad/wiimote.h	/^	} wiimote;$/;"	t	typeref:struct:wiimote_t
wiimote_data_report	apple/common/hidpad/wiimote.c	/^void wiimote_data_report(struct wiimote_t* wm, byte type) {$/;"	f	signature:(struct wiimote_t* wm, byte type)
wiimote_data_report	apple/common/hidpad/wiimote.h	/^void wiimote_data_report(struct wiimote_t* wm, byte type);$/;"	p	signature:(struct wiimote_t* wm, byte type)
wiimote_handle_expansion	apple/common/hidpad/wiimote.c	/^void wiimote_handle_expansion(struct wiimote_t* wm, byte* msg) {$/;"	f	signature:(struct wiimote_t* wm, byte* msg)
wiimote_handle_expansion	apple/common/hidpad/wiimote.h	/^void wiimote_handle_expansion(struct wiimote_t* wm, byte* msg);$/;"	p	signature:(struct wiimote_t* wm, byte* msg)
wiimote_handshake	apple/common/hidpad/wiimote.c	/^int wiimote_handshake(struct wiimote_t* wm,  byte event, byte* data, unsigned short len) {$/;"	f	signature:(struct wiimote_t* wm, byte event, byte* data, unsigned short len)
wiimote_handshake	apple/common/hidpad/wiimote.h	/^int  wiimote_handshake(struct wiimote_t* wm,  byte event, byte* data, unsigned short len);$/;"	p	signature:(struct wiimote_t* wm, byte event, byte* data, unsigned short len)
wiimote_pressed_buttons	apple/common/hidpad/wiimote.c	/^void wiimote_pressed_buttons(struct wiimote_t* wm, byte* msg) {$/;"	f	signature:(struct wiimote_t* wm, byte* msg)
wiimote_pressed_buttons	apple/common/hidpad/wiimote.h	/^void wiimote_pressed_buttons(struct wiimote_t* wm, byte* msg);$/;"	p	signature:(struct wiimote_t* wm, byte* msg)
wiimote_read_data	apple/common/hidpad/wiimote.c	/^int wiimote_read_data(struct wiimote_t* wm, unsigned int addr, unsigned short len) {$/;"	f	signature:(struct wiimote_t* wm, unsigned int addr, unsigned short len)
wiimote_read_data	apple/common/hidpad/wiimote.c	/^int wiimote_read_data(struct wiimote_t* wm, unsigned int addr, unsigned short len);$/;"	p	file:	signature:(struct wiimote_t* wm, unsigned int addr, unsigned short len)
wiimote_send	apple/common/hidpad/wiimote.c	/^int wiimote_send(struct wiimote_t* wm, byte report_type, byte* msg, int len)$/;"	f	signature:(struct wiimote_t* wm, byte report_type, byte* msg, int len)
wiimote_send	apple/common/hidpad/wiimote.c	/^int wiimote_send(struct wiimote_t* wm, byte report_type, byte* msg, int len);$/;"	p	file:	signature:(struct wiimote_t* wm, byte report_type, byte* msg, int len)
wiimote_set_leds	apple/common/hidpad/wiimote.c	/^void wiimote_set_leds(struct wiimote_t* wm, int leds) {$/;"	f	signature:(struct wiimote_t* wm, int leds)
wiimote_set_leds	apple/common/hidpad/wiimote.c	/^void wiimote_set_leds(struct wiimote_t* wm, int leds);$/;"	p	file:	signature:(struct wiimote_t* wm, int leds)
wiimote_status	apple/common/hidpad/wiimote.c	/^void wiimote_status(struct wiimote_t* wm)$/;"	f	signature:(struct wiimote_t* wm)
wiimote_status	apple/common/hidpad/wiimote.h	/^void wiimote_status(struct wiimote_t* wm);$/;"	p	signature:(struct wiimote_t* wm)
wiimote_t	apple/common/hidpad/wiimote.h	/^	typedef struct wiimote_t {$/;"	s
wiimote_t::battery_level	apple/common/hidpad/wiimote.h	/^		float battery_level;				\/**< battery level							*\/$/;"	m	struct:wiimote_t	access:public
wiimote_t::btns	apple/common/hidpad/wiimote.h	/^		unsigned short btns;				\/**< what buttons have just been pressed	*\/$/;"	m	struct:wiimote_t	access:public
wiimote_t::connection	apple/common/hidpad/wiimote.h	/^      struct apple_pad_connection* connection;$/;"	m	struct:wiimote_t	typeref:struct:wiimote_t::apple_pad_connection	access:public
wiimote_t::exp	apple/common/hidpad/wiimote.h	/^		struct expansion_t exp;			\/**< wiimote expansion device				*\/$/;"	m	struct:wiimote_t	typeref:struct:wiimote_t::expansion_t	access:public
wiimote_t::handshake_state	apple/common/hidpad/wiimote.h	/^		byte handshake_state;			\/**< the state of the connection handshake	*\/$/;"	m	struct:wiimote_t	access:public
wiimote_t::leds	apple/common/hidpad/wiimote.h	/^		byte leds;						\/**< currently lit leds						*\/$/;"	m	struct:wiimote_t	access:public
wiimote_t::state	apple/common/hidpad/wiimote.h	/^   	    int state;						\/**< various state flags					*\/$/;"	m	struct:wiimote_t	access:public
wiimote_t::unid	apple/common/hidpad/wiimote.h	/^		int unid;						\/**< user specified id						*\/$/;"	m	struct:wiimote_t	access:public
wiimote_write_data	apple/common/hidpad/wiimote.c	/^int wiimote_write_data(struct wiimote_t* wm, unsigned int addr, byte* data, byte len) {$/;"	f	signature:(struct wiimote_t* wm, unsigned int addr, byte* data, byte len)
wiimote_write_data	apple/common/hidpad/wiimote.c	/^int wiimote_write_data(struct wiimote_t* wm, unsigned int addr, byte* data, byte len);$/;"	p	file:	signature:(struct wiimote_t* wm, unsigned int addr, byte* data, byte len)
win	input/x11_input.c	/^   Window win;$/;"	m	struct:x11_input	file:	access:public
win32_handle_keyboard_event	gfx/context/win32_common.c	/^LRESULT win32_handle_keyboard_event(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam)$/;"	f	signature:(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam)
win32_handle_keyboard_event	gfx/context/win32_common.h	/^LRESULT win32_handle_keyboard_event(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam);$/;"	p	signature:(HWND hwnd, UINT message, WPARAM wparam, LPARAM lparam)
win_height	gfx/gl_common.h	/^   unsigned win_height;$/;"	m	struct:gl	access:public
win_height	xdk/xdk_d3d.h	/^   unsigned win_height;$/;"	m	struct:xdk_d3d_video	access:public
win_width	gfx/gl_common.h	/^   unsigned win_width;$/;"	m	struct:gl	access:public
win_width	xdk/xdk_d3d.h	/^   unsigned win_width;$/;"	m	struct:xdk_d3d_video	access:public
window	apple/OSX/platform.h	/^@property (nonatomic, retain) NSWindow IBOutlet* window;$/;"	v
window	frontend/platform/platform_android.h	/^   ANativeWindow* window;$/;"	m	struct:android_app	access:public
window	gfx/xvideo.c	/^   Window window;$/;"	m	struct:xv	file:	access:public
windowClass	gfx/d3d9/d3d9.hpp	/^      WNDCLASSEX windowClass;$/;"	m	class:D3DVideo	access:private
window_function	audio/sinc.c	/^static inline double window_function(double index)$/;"	f	file:	signature:(double index)
windowed_fullscreen	config.def.h	/^static const bool windowed_fullscreen = true;  \/\/ To use windowed mode or not when going fullscreen.$/;"	v
windowed_fullscreen	general.h	/^      bool windowed_fullscreen;$/;"	m	struct:settings::__anon227	access:public
winxinput_joypad	input/winxinput_joypad.c	/^const rarch_joypad_driver_t winxinput_joypad = {$/;"	v
winxinput_joypad_axis	input/winxinput_joypad.c	/^static int16_t winxinput_joypad_axis (unsigned port_num, uint32_t joyaxis)$/;"	f	file:	signature:(unsigned port_num, uint32_t joyaxis)
winxinput_joypad_button	input/winxinput_joypad.c	/^static bool winxinput_joypad_button (unsigned port_num, uint16_t joykey)$/;"	f	file:	signature:(unsigned port_num, uint16_t joykey)
winxinput_joypad_destroy	input/winxinput_joypad.c	/^static void winxinput_joypad_destroy(void)$/;"	f	file:	signature:(void)
winxinput_joypad_init	input/winxinput_joypad.c	/^static bool winxinput_joypad_init(void)$/;"	f	file:	signature:(void)
winxinput_joypad_name	input/winxinput_joypad.c	/^const char* winxinput_joypad_name (unsigned pad)$/;"	f	signature:(unsigned pad)
winxinput_joypad_poll	input/winxinput_joypad.c	/^static void winxinput_joypad_poll(void)$/;"	f	file:	signature:(void)
winxinput_joypad_query_pad	input/winxinput_joypad.c	/^static bool winxinput_joypad_query_pad(unsigned pad)$/;"	f	file:	signature:(unsigned pad)
winxinput_joypad_rumble	input/winxinput_joypad.c	/^static bool winxinput_joypad_rumble(unsigned pad, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(unsigned pad, enum retro_rumble_effect effect, uint16_t strength)
winxinput_joypad_state	input/winxinput_joypad.c	/^} winxinput_joypad_state;$/;"	t	typeref:struct:__anon89	file:
word_t	ps3/altivec_mem.h	101;"	d
word_t	ps3/altivec_mem.h	231;"	d
worker_thread	audio/alsathread.c	/^   sthread_t *worker_thread;$/;"	m	struct:alsa_thread	file:	access:public
wram	gfx/state_tracker.h	/^   const uint8_t *wram;$/;"	m	struct:state_tracker_info	access:public
wrap	gfx/shader_parse.h	/^   enum gfx_wrap_type wrap;$/;"	m	struct:gfx_shader_lut	typeref:enum:gfx_shader_lut::gfx_wrap_type	access:public
wrap	gfx/shader_parse.h	/^   enum gfx_wrap_type wrap;$/;"	m	struct:gfx_shader_pass	typeref:enum:gfx_shader_pass::gfx_wrap_type	access:public
wrapFiles	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^	protected void wrapFiles()$/;"	m	class:DirectoryFragment	access:protected	signature:()
wrapR	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapR;$/;"	m	struct:__anon63	access:public
wrapR	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapR;$/;"	m	struct:rglGcmTextureAddress	access:public
wrapS	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapS;$/;"	m	struct:__anon63	access:public
wrapS	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapS;$/;"	m	struct:rglGcmTextureAddress	access:public
wrapT	ps3/rgl/include/RGL/Types.h	/^      GLuint wrapT;$/;"	m	struct:__anon63	access:public
wrapT	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint wrapT;$/;"	m	struct:rglGcmTextureAddress	access:public
wrap_mode	gfx/gl_common.h	/^   GLenum wrap_mode;$/;"	m	struct:gl	access:public
wrap_mode_to_str	gfx/shader_parse.c	/^static const char *wrap_mode_to_str(enum gfx_wrap_type type)$/;"	f	file:	signature:(enum gfx_wrap_type type)
wrap_str_to_mode	gfx/shader_parse.c	/^static enum gfx_wrap_type wrap_str_to_mode(const char *wrap_mode)$/;"	f	file:	signature:(const char *wrap_mode)
wrap_type	gfx/shader_common.h	/^   enum gfx_wrap_type (*wrap_type)(unsigned index);$/;"	m	struct:gl_shader_backend	typeref:enum:gl_shader_backend::wrap_type	access:public
write	android/phoenix/src/com/retroarch/browser/preferences/util/ConfigFile.java	/^	public void write(String path) throws IOException$/;"	m	class:ConfigFile	access:public	signature:(String path)
write	driver.h	/^   ssize_t (*write)(void *data, const void *buf, size_t size);$/;"	m	struct:audio_driver	access:public
writeToParcel	android/phoenix/src/com/retroarch/browser/dirfragment/DirectoryFragment.java	/^		public void writeToParcel(Parcel out, int flags)$/;"	m	class:DirectoryFragment.BackStackItem	access:public	signature:(Parcel out, int flags)
write_avail	audio/dsound.c	/^static inline unsigned write_avail(unsigned read_ptr, unsigned write_ptr, unsigned buffer_size)$/;"	f	file:	signature:(unsigned read_ptr, unsigned write_ptr, unsigned buffer_size)
write_avail	driver.h	/^   size_t (*write_avail)(void *data); \/\/ Optional$/;"	m	struct:audio_driver	access:public
write_buffer	audio/jack.c	/^static size_t write_buffer(jack_t *jd, const float *buf, size_t size)$/;"	f	file:	signature:(jack_t *jd, const float *buf, size_t size)
write_buffer	audio/xaudio-c/xaudio-c.cpp	/^   unsigned write_buffer;$/;"	m	struct:xaudio2	file:	access:public
write_egl_image	gfx/gfx_context.h	/^   bool (*write_egl_image)(const void *frame, unsigned width, unsigned height, unsigned pitch, bool rgb32, unsigned index, void **image_handle);$/;"	m	struct:gfx_ctx_driver	access:public
write_file	file_path.c	/^bool write_file(const char *path, const void *data, size_t size)$/;"	f	signature:(const char *path, const void *data, size_t size)
write_file	file_path.h	/^bool write_file(const char *path, const void *buf, size_t size);$/;"	p	signature:(const char *path, const void *buf, size_t size)
write_file_func	deps/minizip/unzip.c	/^typedef uLong (*write_file_func) (voidpf opaque, voidpf stream, const void* buf, uLong size);$/;"	t	file:
write_header_bmp	screenshot.c	/^static bool write_header_bmp(FILE *file, unsigned width, unsigned height)$/;"	f	file:	signature:(FILE *file, unsigned width, unsigned height)
write_initial_msg	driver.h	/^   void (*write_initial_msg)(void *data, const void *msg);$/;"	m	struct:input_osk_driver	access:public
write_msg	driver.h	/^   void (*write_msg)(void *data, const void *msg);$/;"	m	struct:input_osk_driver	access:public
write_ptr	gx/gx_audio.c	/^   size_t write_ptr;$/;"	m	struct:__anon247	file:	access:public
x	android/native/jni/input_android.c	/^   float x;$/;"	m	struct:__anon80	file:	access:public
x	android/native/jni/input_android.c	/^   int16_t x, y;$/;"	m	struct:input_pointer	file:	access:public
x	apple/common/hidpad/wiimote.h	/^		byte x, y;$/;"	m	struct:vec2b_t	access:public
x	blackberry-qnx/qnx_input.c	/^   int16_t x, y;$/;"	m	struct:touches	file:	access:public
x	general.h	/^   int x;$/;"	m	struct:rarch_viewport	access:public
x	gfx/context/sunxi_disp_ioctl.h	/^	__s32 x;$/;"	m	struct:__anon165	access:public
x	gfx/context/sunxi_disp_ioctl.h	/^	__s32 x;$/;"	m	struct:__anon167	access:public
x	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
x	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
x	gfx/fonts/gl_raster_font.c	/^   int x, y;$/;"	m	struct:font_rect	file:	access:public
x	gfx/gfx_common.h	/^   float x;$/;"	m	struct:__anon204	access:public
x	gfx/image.h	/^   unsigned x;$/;"	m	struct:texture_image	access:public
x	gfx/lima_gfx.c	/^	float x,y;$/;"	m	struct:_point2	file:	access:public
x	gfx/rpng/rpng.c	/^   unsigned x;$/;"	m	struct:adam7_pass	file:	access:public
x	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
x	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
x	input/overlay.c	/^   float x;$/;"	m	struct:overlay_desc	file:	access:public
x	input/udev_input.c	/^         float x, y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
x	ps3/ps3_input.c	/^   float x;$/;"	m	struct:__anon77	file:	access:public
x	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
x	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
x	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
x1	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
x11_create_input_context	gfx/context/x11_common.c	/^bool x11_create_input_context(Display *dpy, Window win, XIM *xim, XIC *xic)$/;"	f	signature:(Display *dpy, Window win, XIM *xim, XIC *xic)
x11_create_input_context	gfx/context/x11_common.h	/^bool x11_create_input_context(Display *dpy, Window win, XIM *xim, XIC *xic);$/;"	p	signature:(Display *dpy, Window win, XIM *xim, XIC *xic)
x11_destroy_input_context	gfx/context/x11_common.c	/^void x11_destroy_input_context(XIM *xim, XIC *xic)$/;"	f	signature:(XIM *xim, XIC *xic)
x11_destroy_input_context	gfx/context/x11_common.h	/^void x11_destroy_input_context(XIM *xim, XIC *xic);$/;"	p	signature:(XIM *xim, XIC *xic)
x11_enter_fullscreen	gfx/context/x11_common.c	/^bool x11_enter_fullscreen(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *desktop_mode)$/;"	f	signature:(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *desktop_mode)
x11_enter_fullscreen	gfx/context/x11_common.h	/^bool x11_enter_fullscreen(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *desktop_mode);$/;"	p	signature:(Display *dpy, unsigned width, unsigned height, XF86VidModeModeInfo *desktop_mode)
x11_exit_fullscreen	gfx/context/x11_common.c	/^void x11_exit_fullscreen(Display *dpy, XF86VidModeModeInfo *desktop_mode)$/;"	f	signature:(Display *dpy, XF86VidModeModeInfo *desktop_mode)
x11_exit_fullscreen	gfx/context/x11_common.h	/^void x11_exit_fullscreen(Display *dpy, XF86VidModeModeInfo *desktop_mode);$/;"	p	signature:(Display *dpy, XF86VidModeModeInfo *desktop_mode)
x11_get_xinerama_coord	gfx/context/x11_common.c	/^bool x11_get_xinerama_coord(Display *dpy, int screen,$/;"	f	signature:(Display *dpy, int screen, int *x, int *y, unsigned *w, unsigned *h)
x11_get_xinerama_coord	gfx/context/x11_common.h	/^bool x11_get_xinerama_coord(Display *dpy, int screen,$/;"	p	signature:(Display *dpy, int screen, int *x, int *y, unsigned *w, unsigned *h)
x11_get_xinerama_monitor	gfx/context/x11_common.c	/^unsigned x11_get_xinerama_monitor(Display *dpy, int x, int y,$/;"	f	signature:(Display *dpy, int x, int y, int w, int h)
x11_get_xinerama_monitor	gfx/context/x11_common.h	/^unsigned x11_get_xinerama_monitor(Display *dpy,$/;"	p	signature:(Display *dpy, int x, int y, int w, int h)
x11_handle_key_event	gfx/context/x11_common.c	/^void x11_handle_key_event(XEvent *event, XIC ic, bool filter)$/;"	f	signature:(XEvent *event, XIC ic, bool filter)
x11_handle_key_event	gfx/context/x11_common.h	/^void x11_handle_key_event(XEvent *event, XIC ic, bool filter);$/;"	p	signature:(XEvent *event, XIC ic, bool filter)
x11_hide_mouse	gfx/context/x11_common.c	/^static void x11_hide_mouse(Display *dpy, Window win)$/;"	f	file:	signature:(Display *dpy, Window win)
x11_input	input/x11_input.c	/^typedef struct x11_input$/;"	s	file:
x11_input::display	input/x11_input.c	/^   Display *display;$/;"	m	struct:x11_input	file:	access:public
x11_input::grab_mouse	input/x11_input.c	/^   bool grab_mouse;$/;"	m	struct:x11_input	file:	access:public
x11_input::joypad	input/x11_input.c	/^   const rarch_joypad_driver_t *joypad;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_l	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_last_x	input/x11_input.c	/^   int mouse_last_x, mouse_last_y;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_last_y	input/x11_input.c	/^   int mouse_last_x, mouse_last_y;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_m	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_r	input/x11_input.c	/^   bool mouse_l, mouse_r, mouse_m;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_x	input/x11_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:x11_input	file:	access:public
x11_input::mouse_y	input/x11_input.c	/^   int mouse_x, mouse_y;$/;"	m	struct:x11_input	file:	access:public
x11_input::state	input/x11_input.c	/^   char state[32];$/;"	m	struct:x11_input	file:	access:public
x11_input::win	input/x11_input.c	/^   Window win;$/;"	m	struct:x11_input	file:	access:public
x11_input_t	input/x11_input.c	/^} x11_input_t;$/;"	t	typeref:struct:x11_input	file:
x11_move_window	gfx/context/x11_common.c	/^void x11_move_window(Display *dpy, Window win, int x, int y,$/;"	f	signature:(Display *dpy, Window win, int x, int y, unsigned width, unsigned height)
x11_move_window	gfx/context/x11_common.h	/^void x11_move_window(Display *dpy, Window win, int x, int y, unsigned width, unsigned height);$/;"	p	signature:(Display *dpy, Window win, int x, int y, unsigned width, unsigned height)
x11_query_screens	gfx/context/x11_common.c	/^static XineramaScreenInfo *x11_query_screens(Display *dpy, int *num_screens)$/;"	f	file:	signature:(Display *dpy, int *num_screens)
x11_set_window_attr	gfx/context/x11_common.c	/^void x11_set_window_attr(Display *dpy, Window win)$/;"	f	signature:(Display *dpy, Window win)
x11_set_window_attr	gfx/context/x11_common.h	/^void x11_set_window_attr(Display *dpy, Window win);$/;"	p	signature:(Display *dpy, Window win)
x11_set_window_class	gfx/context/x11_common.c	/^static void x11_set_window_class(Display *dpy, Window win)$/;"	f	file:	signature:(Display *dpy, Window win)
x11_show_mouse	gfx/context/x11_common.c	/^void x11_show_mouse(Display *dpy, Window win, bool state)$/;"	f	signature:(Display *dpy, Window win, bool state)
x11_show_mouse	gfx/context/x11_common.h	/^void x11_show_mouse(Display *dpy, Window win, bool state);$/;"	p	signature:(Display *dpy, Window win, bool state)
x11_suspend_screensaver	gfx/context/x11_common.c	/^void x11_suspend_screensaver(Window wnd)$/;"	f	signature:(Window wnd)
x11_suspend_screensaver	gfx/context/x11_common.h	/^void x11_suspend_screensaver(Window win);$/;"	p	signature:(Window win)
x11_windowed_fullscreen	gfx/context/x11_common.c	/^void x11_windowed_fullscreen(Display *dpy, Window win)$/;"	f	signature:(Display *dpy, Window win)
x11_windowed_fullscreen	gfx/context/x11_common.h	/^void x11_windowed_fullscreen(Display *dpy, Window win);$/;"	p	signature:(Display *dpy, Window win)
x2	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
x86_cpuid	performance.c	/^static void x86_cpuid(int func, int flags[4])$/;"	f	file:	signature:(int func, int flags[4])
xCenter	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat xScale, xCenter;$/;"	m	struct:rglGcmViewportState	access:public
xOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      xOffset;$/;"	m	struct:rglGcmRenderTargetEx	access:public
xScale	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat xScale, xCenter;$/;"	m	struct:rglGcmViewportState	access:public
xSuperSampling	ps3/rgl/src/include/rgl-typedefs.h	/^   int xSuperSampling; \/\/ supersampling factor in X$/;"	m	struct:rglGcmDriver_	access:public
x_bind_button_pressed	input/x11_input.c	/^static bool x_bind_button_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
x_coord	libretro-test/libretro-test.c	/^static unsigned x_coord;$/;"	v	file:
x_get_joypad_driver	input/x11_input.c	/^static const rarch_joypad_driver_t *x_get_joypad_driver(void *data)$/;"	f	file:	signature:(void *data)
x_grab_mouse	input/x11_input.c	/^static void x_grab_mouse(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
x_input_free	input/x11_input.c	/^static void x_input_free(void *data)$/;"	f	file:	signature:(void *data)
x_input_get_capabilities	input/x11_input.c	/^static uint64_t x_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
x_input_init	input/x11_input.c	/^static void *x_input_init(void)$/;"	f	file:	signature:(void)
x_input_poll	input/x11_input.c	/^static void x_input_poll(void *data)$/;"	f	file:	signature:(void *data)
x_input_poll_mouse	input/x11_input.c	/^static void x_input_poll_mouse(x11_input_t *x11)$/;"	f	file:	signature:(x11_input_t *x11)
x_input_state	input/x11_input.c	/^static int16_t x_input_state(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
x_is_pressed	input/x11_input.c	/^static bool x_is_pressed(x11_input_t *x11, const struct retro_keybind *binds, unsigned id)$/;"	f	file:	signature:(x11_input_t *x11, const struct retro_keybind *binds, unsigned id)
x_key_pressed	input/x11_input.c	/^static bool x_key_pressed(x11_input_t *x11, int key)$/;"	f	file:	signature:(x11_input_t *x11, int key)
x_lightgun_state	input/x11_input.c	/^static int16_t x_lightgun_state(x11_input_t *x11, unsigned id)$/;"	f	file:	signature:(x11_input_t *x11, unsigned id)
x_mouse_state	input/x11_input.c	/^static int16_t x_mouse_state(x11_input_t *x11, unsigned id)$/;"	f	file:	signature:(x11_input_t *x11, unsigned id)
x_pointer_state	input/x11_input.c	/^static int16_t x_pointer_state(x11_input_t *x11, unsigned index, unsigned id, bool screen)$/;"	f	file:	signature:(x11_input_t *x11, unsigned index, unsigned id, bool screen)
x_pressed_analog	input/x11_input.c	/^static int16_t x_pressed_analog(x11_input_t *x11, const struct retro_keybind *binds, unsigned index, unsigned id)$/;"	f	file:	signature:(x11_input_t *x11, const struct retro_keybind *binds, unsigned index, unsigned id)
x_set_rumble	input/x11_input.c	/^static bool x_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
xa	audio/xaudio.c	/^   xaudio2_t *xa;$/;"	m	struct:__anon101	file:	access:public
xa_buffer_size	audio/xaudio.c	/^static size_t xa_buffer_size(void *data)$/;"	f	file:	signature:(void *data)
xa_free	audio/xaudio.c	/^static void xa_free(void *data)$/;"	f	file:	signature:(void *data)
xa_init	audio/xaudio.c	/^static void *xa_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
xa_set_nonblock_state	audio/xaudio.c	/^static void xa_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
xa_start	audio/xaudio.c	/^static bool xa_start(void *data)$/;"	f	file:	signature:(void *data)
xa_stop	audio/xaudio.c	/^static bool xa_stop(void *data)$/;"	f	file:	signature:(void *data)
xa_t	audio/xaudio.c	/^} xa_t;$/;"	t	typeref:struct:__anon101	file:
xa_use_float	audio/xaudio.c	/^static bool xa_use_float(void *data)$/;"	f	file:	signature:(void *data)
xa_write	audio/xaudio.c	/^static ssize_t xa_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
xa_write_avail	audio/xaudio.c	/^static size_t xa_write_avail(void *data)$/;"	f	file:	signature:(void *data)
xaudio2	audio/xaudio-c/xaudio-c.cpp	/^   xaudio2() :$/;"	f	struct:xaudio2	access:public	signature:()
xaudio2	audio/xaudio-c/xaudio-c.cpp	/^struct xaudio2 : public IXAudio2VoiceCallback$/;"	s	file:	inherits:IXAudio2VoiceCallback
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnBufferEnd) (void *) $/;"	f	struct:xaudio2	access:public	signature:(void, OnBufferEnd)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnBufferStart) (void *) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnBufferStart)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnLoopEnd) (void *) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnLoopEnd)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnStreamEnd) () {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnStreamEnd)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceError) (void *, HRESULT) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceError)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceProcessingPassEnd) () {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceProcessingPassEnd)
xaudio2::STDMETHOD_	audio/xaudio-c/xaudio-c.cpp	/^   STDMETHOD_(void, OnVoiceProcessingPassStart) (UINT32) {}$/;"	f	struct:xaudio2	access:public	signature:(void, OnVoiceProcessingPassStart)
xaudio2::buf	audio/xaudio-c/xaudio-c.cpp	/^   uint8_t *buf;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::buffers	audio/xaudio-c/xaudio-c.cpp	/^   volatile long buffers;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::bufptr	audio/xaudio-c/xaudio-c.cpp	/^   unsigned bufptr;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::bufsize	audio/xaudio-c/xaudio-c.cpp	/^   unsigned bufsize;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::hEvent	audio/xaudio-c/xaudio-c.cpp	/^   HANDLE hEvent;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::pMasterVoice	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2MasteringVoice *pMasterVoice;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::pSourceVoice	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2SourceVoice *pSourceVoice;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::pXAudio2	audio/xaudio-c/xaudio-c.cpp	/^   IXAudio2 *pXAudio2;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::write_buffer	audio/xaudio-c/xaudio-c.cpp	/^   unsigned write_buffer;$/;"	m	struct:xaudio2	file:	access:public
xaudio2::xaudio2	audio/xaudio-c/xaudio-c.cpp	/^   xaudio2() :$/;"	f	struct:xaudio2	access:public	signature:()
xaudio2::~xaudio2	audio/xaudio-c/xaudio-c.cpp	/^   virtual ~xaudio2() {}$/;"	f	struct:xaudio2	access:public	signature:()
xaudio2_enumerate_devices	audio/xaudio-c/xaudio-c.cpp	/^void xaudio2_enumerate_devices(xaudio2_t *xa)$/;"	f	signature:(xaudio2_t *xa)
xaudio2_enumerate_devices	audio/xaudio-c/xaudio-c.h	/^void xaudio2_enumerate_devices(xaudio2_t *handle);$/;"	p	signature:(xaudio2_t *handle)
xaudio2_free	audio/xaudio-c/xaudio-c.cpp	/^void xaudio2_free(xaudio2_t *handle)$/;"	f	signature:(xaudio2_t *handle)
xaudio2_free	audio/xaudio-c/xaudio-c.h	/^void xaudio2_free(xaudio2_t *handle);$/;"	p	signature:(xaudio2_t *handle)
xaudio2_new	audio/xaudio-c/xaudio-c.cpp	/^xaudio2_t *xaudio2_new(unsigned samplerate, unsigned channels,$/;"	f	signature:(unsigned samplerate, unsigned channels, size_t size, unsigned device)
xaudio2_new	audio/xaudio-c/xaudio-c.h	/^xaudio2_t* xaudio2_new(unsigned samplerate, unsigned channels, size_t bufsize, unsigned device);$/;"	p	signature:(unsigned samplerate, unsigned channels, size_t bufsize, unsigned device)
xaudio2_set_wavefmt	audio/xaudio-c/xaudio-c.cpp	/^static void xaudio2_set_wavefmt(WAVEFORMATEX *wfx,$/;"	f	file:	signature:(WAVEFORMATEX *wfx, unsigned channels, unsigned samplerate)
xaudio2_t	audio/xaudio-c/xaudio-c.h	/^typedef struct xaudio2 xaudio2_t;$/;"	t	typeref:struct:xaudio2
xaudio2_write	audio/xaudio-c/xaudio-c.cpp	/^size_t xaudio2_write(xaudio2_t *handle, const void *buf, size_t bytes_)$/;"	f	signature:(xaudio2_t *handle, const void *buf, size_t bytes_)
xaudio2_write	audio/xaudio-c/xaudio-c.h	/^size_t xaudio2_write(xaudio2_t *handle, const void *data, size_t bytes);$/;"	p	signature:(xaudio2_t *handle, const void *data, size_t bytes)
xaudio2_write_avail	audio/xaudio-c/xaudio-c.cpp	/^size_t xaudio2_write_avail(xaudio2_t *handle)$/;"	f	signature:(xaudio2_t *handle)
xaudio2_write_avail	audio/xaudio-c/xaudio-c.h	/^size_t xaudio2_write_avail(xaudio2_t *handle);$/;"	p	signature:(xaudio2_t *handle)
xblk	ps3/rgl/include/RGL/Types.h	/^      GLuint xblk, yblk;			\/\/ block storage size$/;"	m	struct:rglImage_	access:public
xbox_io_mount	frontend/platform/platform_xdk.c	/^static HRESULT xbox_io_mount(char *szDrive, char *szDevice)$/;"	f	file:	signature:(char *szDrive, char *szDevice)
xbox_io_unmount	frontend/platform/platform_xdk.c	/^static HRESULT xbox_io_unmount(char *szDrive)$/;"	f	file:	signature:(char *szDrive)
xdk360_video_font_create_shaders	gfx/fonts/xdk360_fonts.cpp	/^static HRESULT xdk360_video_font_create_shaders (xdk360_video_font_t * font)$/;"	f	file:	signature:(xdk360_video_font_t * font)
xdk360_video_font_t	gfx/fonts/xdk360_fonts.cpp	/^} xdk360_video_font_t;$/;"	t	typeref:struct:__anon205	file:
xdk_convert_texture_to_as16_srgb	xdk/xdk_d3d.cpp	/^static void xdk_convert_texture_to_as16_srgb( D3DTexture *pTexture )$/;"	f	file:	signature:( D3DTexture *pTexture )
xdk_d3d_alive	xdk/xdk_d3d.cpp	/^static bool xdk_d3d_alive(void *data)$/;"	f	file:	signature:(void *data)
xdk_d3d_apply_state_changes	xdk/xdk_d3d.cpp	/^static void xdk_d3d_apply_state_changes(void *data)$/;"	f	file:	signature:(void *data)
xdk_d3d_deinit_fbo	xdk/xdk_d3d.cpp	/^void xdk_d3d_deinit_fbo(void *data)$/;"	f	signature:(void *data)
xdk_d3d_draw_texture	xdk/xdk_d3d.cpp	/^static inline void xdk_d3d_draw_texture(void *data)$/;"	f	file:	signature:(void *data)
xdk_d3d_focus	xdk/xdk_d3d.cpp	/^static bool xdk_d3d_focus(void *data)$/;"	f	file:	signature:(void *data)
xdk_d3d_frame	xdk/xdk_d3d.cpp	/^static bool xdk_d3d_frame(void *data, const void *frame,$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
xdk_d3d_free	xdk/xdk_d3d.cpp	/^static void xdk_d3d_free(void *data)$/;"	f	file:	signature:(void *data)
xdk_d3d_generate_pp	xdk/xdk_d3d.cpp	/^void xdk_d3d_generate_pp(D3DPRESENT_PARAMETERS *d3dpp, const video_info_t *video)$/;"	f	signature:(D3DPRESENT_PARAMETERS *d3dpp, const video_info_t *video)
xdk_d3d_generate_pp	xdk/xdk_d3d.h	/^extern void xdk_d3d_generate_pp(D3DPRESENT_PARAMETERS *d3dpp, const video_info_t *video);$/;"	p	signature:(D3DPRESENT_PARAMETERS *d3dpp, const video_info_t *video)
xdk_d3d_init	xdk/xdk_d3d.cpp	/^static void *xdk_d3d_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
xdk_d3d_init_fbo	xdk/xdk_d3d.cpp	/^void xdk_d3d_init_fbo(void *data)$/;"	f	signature:(void *data)
xdk_d3d_init_textures	xdk/xdk_d3d.cpp	/^static void xdk_d3d_init_textures(void *data, const video_info_t *video)$/;"	f	file:	signature:(void *data, const video_info_t *video)
xdk_d3d_reinit_textures	xdk/xdk_d3d.cpp	/^static void xdk_d3d_reinit_textures(void *data, const video_info_t *video)$/;"	f	file:	signature:(void *data, const video_info_t *video)
xdk_d3d_restart	xdk/xdk_d3d.cpp	/^static void xdk_d3d_restart(void)$/;"	f	file:	signature:(void)
xdk_d3d_set_aspect_ratio	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_aspect_ratio(void *data, unsigned aspect_ratio_idx)$/;"	f	file:	signature:(void *data, unsigned aspect_ratio_idx)
xdk_d3d_set_filtering	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_filtering(void *data, unsigned index, bool set_smooth) { }$/;"	f	file:	signature:(void *data, unsigned index, bool set_smooth)
xdk_d3d_set_nonblock_state	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
xdk_d3d_set_osd_msg	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_osd_msg(void *data, const char *msg, void *userdata)$/;"	f	file:	signature:(void *data, const char *msg, void *userdata)
xdk_d3d_set_rotation	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_rotation(void *data, unsigned orientation)$/;"	f	file:	signature:(void *data, unsigned orientation)
xdk_d3d_set_shader	xdk/xdk_d3d.cpp	/^static bool xdk_d3d_set_shader(void *data, enum rarch_shader_type type, const char *path)$/;"	f	file:	signature:(void *data, enum rarch_shader_type type, const char *path)
xdk_d3d_set_texture_enable	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_texture_enable(void *data, bool state, bool full_screen)$/;"	f	file:	signature:(void *data, bool state, bool full_screen)
xdk_d3d_set_texture_frame	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_texture_frame(void *data,$/;"	f	file:	signature:(void *data, const void *frame, bool rgb32, unsigned width, unsigned height, float alpha)
xdk_d3d_set_viewport	xdk/xdk_d3d.cpp	/^static void xdk_d3d_set_viewport(bool force_full)$/;"	f	file:	signature:(bool force_full)
xdk_d3d_video	xdk/xdk_d3d.h	/^typedef struct xdk_d3d_video$/;"	s
xdk_d3d_video::base_size	xdk/xdk_d3d.h	/^   unsigned base_size;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::ctx_driver	xdk/xdk_d3d.h	/^   const gfx_ctx_driver_t *ctx_driver;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::d3d_device	xdk/xdk_d3d.h	/^   LPDIRECT3D d3d_device;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::d3d_render_device	xdk/xdk_d3d.h	/^   LPDIRECT3DDEVICE d3d_render_device;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::fbo_inited	xdk/xdk_d3d.h	/^   bool fbo_inited;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::font_ctx	xdk/xdk_d3d.h	/^   const d3d_font_renderer_t *font_ctx;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::internal_fmt	xdk/xdk_d3d.h	/^   D3DFORMAT internal_fmt;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::last_height	xdk/xdk_d3d.h	/^   unsigned last_height;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::last_width	xdk/xdk_d3d.h	/^   unsigned last_width;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::lpSurface	xdk/xdk_d3d.h	/^   LPDIRECT3DSURFACE lpSurface;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::lpTexture	xdk/xdk_d3d.h	/^   LPDIRECT3DTEXTURE lpTexture;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::lpTexture_ot	xdk/xdk_d3d.h	/^   LPDIRECT3DTEXTURE lpTexture_ot;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::lpTexture_ot_as16srgb	xdk/xdk_d3d.h	/^   D3DTexture lpTexture_ot_as16srgb;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::quitting	xdk/xdk_d3d.h	/^   bool quitting;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::rgui_texture_enable	xdk/xdk_d3d.h	/^   bool rgui_texture_enable;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::rgui_texture_full_screen	xdk/xdk_d3d.h	/^   bool rgui_texture_full_screen;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::shader	xdk/xdk_d3d.h	/^   const gl_shader_backend_t *shader;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::should_resize	xdk/xdk_d3d.h	/^   bool should_resize;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::tex_h	xdk/xdk_d3d.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::tex_w	xdk/xdk_d3d.h	/^   unsigned tex_w, tex_h;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::texture_fmt	xdk/xdk_d3d.h	/^   D3DFORMAT texture_fmt;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::v_decl	xdk/xdk_d3d.h	/^   IDirect3DVertexDeclaration9* v_decl;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::vertex_buf	xdk/xdk_d3d.h	/^   LPDIRECT3DVERTEXBUFFER vertex_buf;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::vsync	xdk/xdk_d3d.h	/^   bool vsync;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::win_height	xdk/xdk_d3d.h	/^   unsigned win_height;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video::win_width	xdk/xdk_d3d.h	/^   unsigned win_width;$/;"	m	struct:xdk_d3d_video	access:public
xdk_d3d_video_t	xdk/xdk_d3d.h	/^} xdk_d3d_video_t;$/;"	t	typeref:struct:xdk_d3d_video
xdk_deinit_font	gfx/fonts/xdk360_fonts.cpp	/^static void xdk_deinit_font(void *data)$/;"	f	file:	signature:(void *data)
xdk_init_font	gfx/fonts/xdk360_fonts.cpp	/^static bool xdk_init_font(void *data, const char *font_path, unsigned font_size)$/;"	f	file:	signature:(void *data, const char *font_path, unsigned font_size)
xdk_input	xdk/xdk_xinput_input.c	/^typedef struct xdk_input$/;"	s	file:
xdk_input::bInserted	xdk/xdk_xinput_input.c	/^   bool bInserted[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
xdk_input::bRemoved	xdk/xdk_xinput_input.c	/^   bool bRemoved[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
xdk_input::dwDeviceMask	xdk/xdk_xinput_input.c	/^   DWORD dwDeviceMask;$/;"	m	struct:xdk_input	file:	access:public
xdk_input::gamepads	xdk/xdk_xinput_input.c	/^   HANDLE gamepads[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
xdk_input::state	xdk/xdk_xinput_input.c	/^   uint64_t state[MAX_PADS];$/;"	m	struct:xdk_input	file:	access:public
xdk_input_free_input	xdk/xdk_xinput_input.c	/^static void xdk_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
xdk_input_get_capabilities	xdk/xdk_xinput_input.c	/^static uint64_t xdk_input_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
xdk_input_init	xdk/xdk_xinput_input.c	/^static void *xdk_input_init(void)$/;"	f	file:	signature:(void)
xdk_input_key_pressed	xdk/xdk_xinput_input.c	/^static bool xdk_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
xdk_input_poll	xdk/xdk_xinput_input.c	/^static void xdk_input_poll(void *data)$/;"	f	file:	signature:(void *data)
xdk_input_set_keybinds	xdk/xdk_xinput_input.c	/^static void xdk_input_set_keybinds(void *data, unsigned device,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
xdk_input_set_rumble	xdk/xdk_xinput_input.c	/^static bool xdk_input_set_rumble(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)$/;"	f	file:	signature:(void *data, unsigned port, enum retro_rumble_effect effect, uint16_t strength)
xdk_input_state	xdk/xdk_xinput_input.c	/^static int16_t xdk_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, unsigned port, unsigned device, unsigned index, unsigned id)
xdk_input_t	xdk/xdk_xinput_input.c	/^} xdk_input_t;$/;"	t	typeref:struct:xdk_input	file:
xdk_render_msg	gfx/fonts/xdk360_fonts.cpp	/^static void xdk_render_msg(void *driver, const char *str_msg, void *parms)$/;"	f	file:	signature:(void *driver, const char *str_msg, void *parms)
xdk_render_msg_post	gfx/fonts/xdk360_fonts.cpp	/^void xdk_render_msg_post(xdk360_video_font_t * font)$/;"	f	signature:(xdk360_video_font_t * font)
xdk_render_msg_pre	gfx/fonts/xdk360_fonts.cpp	/^static void xdk_render_msg_pre(xdk360_video_font_t * font)$/;"	f	file:	signature:(xdk360_video_font_t * font)
xdk_video_font_draw_text	gfx/fonts/xdk360_fonts.cpp	/^static void xdk_video_font_draw_text(xdk360_video_font_t *font, $/;"	f	file:	signature:(xdk360_video_font_t *font, float x, float y, const wchar_t * strText)
xenon360_audio_free	xenon/xenon360_audio.c	/^static void xenon360_audio_free(void *data)$/;"	f	file:	signature:(void *data)
xenon360_audio_init	xenon/xenon360_audio.c	/^static void *xenon360_audio_init(const char *device, unsigned rate, unsigned latency)$/;"	f	file:	signature:(const char *device, unsigned rate, unsigned latency)
xenon360_audio_set_nonblock_state	xenon/xenon360_audio.c	/^static void xenon360_audio_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
xenon360_audio_start	xenon/xenon360_audio.c	/^static bool xenon360_audio_start(void *data)$/;"	f	file:	signature:(void *data)
xenon360_audio_stop	xenon/xenon360_audio.c	/^static bool xenon360_audio_stop(void *data)$/;"	f	file:	signature:(void *data)
xenon360_audio_write	xenon/xenon360_audio.c	/^static ssize_t xenon360_audio_write(void *data, const void *buf, size_t size)$/;"	f	file:	signature:(void *data, const void *buf, size_t size)
xenon360_get_capabilities	xenon/xenon360_input.c	/^static uint64_t xenon360_get_capabilities(void *data)$/;"	f	file:	signature:(void *data)
xenon360_gfx_alive	xenon/xenon360_video.c	/^static bool xenon360_gfx_alive(void *data)$/;"	f	file:	signature:(void *data)
xenon360_gfx_focus	xenon/xenon360_video.c	/^static bool xenon360_gfx_focus(void *data)$/;"	f	file:	signature:(void *data)
xenon360_gfx_frame	xenon/xenon360_video.c	/^static bool xenon360_gfx_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
xenon360_gfx_free	xenon/xenon360_video.c	/^static void xenon360_gfx_free(void *data)$/;"	f	file:	signature:(void *data)
xenon360_gfx_init	xenon/xenon360_video.c	/^static void *xenon360_gfx_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
xenon360_gfx_set_nonblock_state	xenon/xenon360_video.c	/^static void xenon360_gfx_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
xenon360_gfx_set_rotation	xenon/xenon360_video.c	/^static void xenon360_gfx_set_rotation(void *data, unsigned rotation)$/;"	f	file:	signature:(void *data, unsigned rotation)
xenon360_input_free_input	xenon/xenon360_input.c	/^static void xenon360_input_free_input(void *data)$/;"	f	file:	signature:(void *data)
xenon360_input_init	xenon/xenon360_input.c	/^static void* xenon360_input_init(void)$/;"	f	file:	signature:(void)
xenon360_input_key_pressed	xenon/xenon360_input.c	/^static bool xenon360_input_key_pressed(void *data, int key)$/;"	f	file:	signature:(void *data, int key)
xenon360_input_poll	xenon/xenon360_input.c	/^static void xenon360_input_poll(void *data)$/;"	f	file:	signature:(void *data)
xenon360_input_set_keybinds	xenon/xenon360_input.c	/^static void xenon360_input_set_keybinds(void *data, unsigned device,$/;"	f	file:	signature:(void *data, unsigned device, unsigned port, unsigned id, unsigned keybind_action)
xenon360_input_state	xenon/xenon360_input.c	/^static int16_t xenon360_input_state(void *data, const struct retro_keybind **binds,$/;"	f	file:	signature:(void *data, const struct retro_keybind **binds, bool port, unsigned device, unsigned index, unsigned id)
xenon360_video_t	xenon/xenon360_video.c	/^typedef struct xenon360_video xenon360_video_t;$/;"	t	typeref:struct:xenon360_video	file:
xenon_audio_t	xenon/xenon360_audio.c	/^} xenon_audio_t;$/;"	t	typeref:struct:__anon2	file:
xfFlush	gx/gx_video_inl.h	/^	u16 xfFlush;$/;"	m	struct:__gx_regdef	access:public
xfFlushExp	gx/gx_video_inl.h	/^	u16 xfFlushExp;$/;"	m	struct:__gx_regdef	access:public
xfFlushSafe	gx/gx_video_inl.h	/^	u16 xfFlushSafe;$/;"	m	struct:__gx_regdef	access:public
xferTotalSize	ps3/rgl/include/RGL/Types.h	/^      GLuint	xferTotalSize;$/;"	m	struct:__anon67	access:public
xfonts_deinit_font	gfx/fonts/xdk1_xfonts.c	/^static void xfonts_deinit_font(void *data)$/;"	f	file:	signature:(void *data)
xfonts_init_font	gfx/fonts/xdk1_xfonts.c	/^static bool xfonts_init_font(void *data, const char *font_path, unsigned font_size)$/;"	f	file:	signature:(void *data, const char *font_path, unsigned font_size)
xfonts_render_msg	gfx/fonts/xdk1_xfonts.c	/^static void xfonts_render_msg(void *data, const char *msg, void *parms)$/;"	f	file:	signature:(void *data, const char *msg, void *parms)
xic	gfx/xvideo.c	/^   XIC xic;$/;"	m	struct:xv	file:	access:public
xim	gfx/xvideo.c	/^   XIM xim;$/;"	m	struct:xv	file:	access:public
xioctl	camera/video4linux2.c	/^static int xioctl(int fd, int request, void *args)$/;"	f	file:	signature:(int fd, int request, void *args)
xkb_ctx	input/udev_input.c	/^   struct xkb_context *xkb_ctx;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_context	file:	access:public
xkb_map	input/udev_input.c	/^   struct xkb_keymap *xkb_map;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_keymap	file:	access:public
xkb_state	input/udev_input.c	/^   struct xkb_state *xkb_state;$/;"	m	struct:udev_input	typeref:struct:udev_input::xkb_state	file:	access:public
xml	gfx/shader_parse.h	/^      } xml;$/;"	m	struct:gfx_shader_pass::__anon212	typeref:struct:gfx_shader_pass::__anon212::__anon213	access:public
xmlChar	compat/rxml/rxml.h	/^typedef char xmlChar; \/\/ It's really unsigned char, but it doesn't matter.$/;"	t
xmlCtxtReadFile	compat/rxml/rxml.h	71;"	d
xmlDocGetRootElement	compat/rxml/rxml.h	75;"	d
xmlDocPtr	compat/rxml/rxml.h	/^typedef rxml_document_t *xmlDocPtr;$/;"	t
xmlFree	compat/rxml/rxml.h	73;"	d
xmlFreeDoc	compat/rxml/rxml.h	76;"	d
xmlFreeParserCtxt	compat/rxml/rxml.h	77;"	d
xmlGetProp	compat/rxml/rxml.h	72;"	d
xmlNewParserCtxt	compat/rxml/rxml.h	70;"	d
xmlNodeGetContent	compat/rxml/rxml.h	74;"	d
xmlNodePtr	compat/rxml/rxml.h	/^typedef struct rxml_node *xmlNodePtr;$/;"	t	typeref:struct:rxml_node
xmlParserCtxtPtr	compat/rxml/rxml.h	/^typedef void *xmlParserCtxtPtr;$/;"	t
xml_get_content	gfx/shader_parse.c	/^static char *xml_get_content(xmlNodePtr node)$/;"	f	file:	signature:(xmlNodePtr node)
xml_get_prop	gfx/shader_parse.c	/^static bool xml_get_prop(char *buf, size_t size, xmlNodePtr node, const char *prop)$/;"	f	file:	signature:(char *buf, size_t size, xmlNodePtr node, const char *prop)
xml_grab_cheat	cheats.c	/^static bool xml_grab_cheat(struct cheat *cht, xmlNodePtr ptr)$/;"	f	file:	signature:(struct cheat *cht, xmlNodePtr ptr)
xml_grab_cheats	cheats.c	/^static bool xml_grab_cheats(cheat_manager_t *handle, xmlNodePtr ptr)$/;"	f	file:	signature:(cheat_manager_t *handle, xmlNodePtr ptr)
xml_name	general.h	/^   char xml_name[PATH_MAX];$/;"	m	struct:global	access:public
xml_replace_if_file	gfx/shader_parse.c	/^static char *xml_replace_if_file(char *content, const char *path, xmlNodePtr node, const char *src_prop)$/;"	f	file:	signature:(char *content, const char *path, xmlNodePtr node, const char *src_prop)
xscale	config.def.h	/^static const float xscale = 3.0; \/\/ Real x res = aspect * base_size * xscale$/;"	v
xscale	general.h	/^      float xscale;$/;"	m	struct:settings::__anon227	access:public
xstate	input/winxinput_joypad.c	/^   XINPUT_STATE xstate;$/;"	m	struct:__anon89	file:	access:public
xstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
xstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride;$/;"	m	struct:__anon62	access:public
xui_input_to_rmenu_xui_action	frontend/menu/rmenu_xui.cpp	/^static unsigned xui_input_to_rmenu_xui_action(unsigned input)$/;"	f	file:	signature:(unsigned input)
xv	gfx/xvideo.c	/^typedef struct xv$/;"	s	file:
xv::chroma_u_index	gfx/xvideo.c	/^   unsigned chroma_u_index;$/;"	m	struct:xv	file:	access:public
xv::chroma_v_index	gfx/xvideo.c	/^   unsigned chroma_v_index;$/;"	m	struct:xv	file:	access:public
xv::colormap	gfx/xvideo.c	/^   Colormap colormap;$/;"	m	struct:xv	file:	access:public
xv::depth	gfx/xvideo.c	/^   int depth;$/;"	m	struct:xv	file:	access:public
xv::display	gfx/xvideo.c	/^   Display *display;$/;"	m	struct:xv	file:	access:public
xv::focus	gfx/xvideo.c	/^   bool focus;$/;"	m	struct:xv	file:	access:public
xv::font	gfx/xvideo.c	/^   void *font;$/;"	m	struct:xv	file:	access:public
xv::font_driver	gfx/xvideo.c	/^   const font_renderer_driver_t *font_driver;$/;"	m	struct:xv	file:	access:public
xv::font_u	gfx/xvideo.c	/^   uint8_t font_u;$/;"	m	struct:xv	file:	access:public
xv::font_v	gfx/xvideo.c	/^   uint8_t font_v;$/;"	m	struct:xv	file:	access:public
xv::font_y	gfx/xvideo.c	/^   uint8_t font_y;$/;"	m	struct:xv	file:	access:public
xv::fourcc	gfx/xvideo.c	/^   uint32_t fourcc;$/;"	m	struct:xv	file:	access:public
xv::gc	gfx/xvideo.c	/^   GC gc;$/;"	m	struct:xv	file:	access:public
xv::height	gfx/xvideo.c	/^   unsigned height;$/;"	m	struct:xv	file:	access:public
xv::image	gfx/xvideo.c	/^   XvImage *image;$/;"	m	struct:xv	file:	access:public
xv::keep_aspect	gfx/xvideo.c	/^   bool keep_aspect;$/;"	m	struct:xv	file:	access:public
xv::luma_index	gfx/xvideo.c	/^   unsigned luma_index[2];$/;"	m	struct:xv	file:	access:public
xv::port	gfx/xvideo.c	/^   XvPortID port;$/;"	m	struct:xv	file:	access:public
xv::quit_atom	gfx/xvideo.c	/^   Atom quit_atom;$/;"	m	struct:xv	file:	access:public
xv::render_func	gfx/xvideo.c	/^   void (*render_func)(struct xv*, const void *frame, unsigned width, unsigned height, unsigned pitch);$/;"	m	struct:xv	file:	access:public
xv::shminfo	gfx/xvideo.c	/^   XShmSegmentInfo shminfo;$/;"	m	struct:xv	file:	access:public
xv::utable	gfx/xvideo.c	/^   uint8_t *utable;$/;"	m	struct:xv	file:	access:public
xv::visualid	gfx/xvideo.c	/^   int visualid;$/;"	m	struct:xv	file:	access:public
xv::vp	gfx/xvideo.c	/^   struct rarch_viewport vp;$/;"	m	struct:xv	typeref:struct:xv::rarch_viewport	file:	access:public
xv::vtable	gfx/xvideo.c	/^   uint8_t *vtable;$/;"	m	struct:xv	file:	access:public
xv::width	gfx/xvideo.c	/^   unsigned width;$/;"	m	struct:xv	file:	access:public
xv::window	gfx/xvideo.c	/^   Window window;$/;"	m	struct:xv	file:	access:public
xv::xic	gfx/xvideo.c	/^   XIC xic;$/;"	m	struct:xv	file:	access:public
xv::xim	gfx/xvideo.c	/^   XIM xim;$/;"	m	struct:xv	file:	access:public
xv::ytable	gfx/xvideo.c	/^   uint8_t *ytable;$/;"	m	struct:xv	file:	access:public
xv_alive	gfx/xvideo.c	/^static bool xv_alive(void *data)$/;"	f	file:	signature:(void *data)
xv_focus	gfx/xvideo.c	/^static bool xv_focus(void *data)$/;"	f	file:	signature:(void *data)
xv_frame	gfx/xvideo.c	/^static bool xv_frame(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)$/;"	f	file:	signature:(void *data, const void *frame, unsigned width, unsigned height, unsigned pitch, const char *msg)
xv_free	gfx/xvideo.c	/^static void xv_free(void *data)$/;"	f	file:	signature:(void *data)
xv_init	gfx/xvideo.c	/^static void *xv_init(const video_info_t *video, const input_driver_t **input, void **input_data)$/;"	f	file:	signature:(const video_info_t *video, const input_driver_t **input, void **input_data)
xv_init_font	gfx/xvideo.c	/^static void xv_init_font(xv_t *xv, const char *font_path, unsigned font_size)$/;"	f	file:	signature:(xv_t *xv, const char *font_path, unsigned font_size)
xv_render_msg	gfx/xvideo.c	/^static void xv_render_msg(xv_t *xv, const char *msg, unsigned width, unsigned height)$/;"	f	file:	signature:(xv_t *xv, const char *msg, unsigned width, unsigned height)
xv_set_nonblock_state	gfx/xvideo.c	/^static void xv_set_nonblock_state(void *data, bool state)$/;"	f	file:	signature:(void *data, bool state)
xv_t	gfx/xvideo.c	/^} xv_t;$/;"	t	typeref:struct:xv	file:
xv_viewport_info	gfx/xvideo.c	/^static void xv_viewport_info(void *data, struct rarch_viewport *vp)$/;"	f	file:	signature:(void *data, struct rarch_viewport *vp)
y	android/native/jni/input_android.c	/^   float y;$/;"	m	struct:__anon80	file:	access:public
y	android/native/jni/input_android.c	/^   int16_t x, y;$/;"	m	struct:input_pointer	file:	access:public
y	apple/common/hidpad/wiimote.h	/^		byte x, y;$/;"	m	struct:vec2b_t	access:public
y	blackberry-qnx/qnx_input.c	/^   int16_t x, y;$/;"	m	struct:touches	file:	access:public
y	general.h	/^   int y;$/;"	m	struct:rarch_viewport	access:public
y	gfx/context/sunxi_disp_ioctl.h	/^	__s32 y;$/;"	m	struct:__anon165	access:public
y	gfx/context/sunxi_disp_ioctl.h	/^	__s32 y;$/;"	m	struct:__anon167	access:public
y	gfx/d3d9/d3d9.hpp	/^      float x, y, w, h;$/;"	m	struct:__anon222::Coords	access:public
y	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
y	gfx/fonts/gl_raster_font.c	/^   int x, y;$/;"	m	struct:font_rect	file:	access:public
y	gfx/gfx_common.h	/^   float y;$/;"	m	struct:__anon204	access:public
y	gfx/image.h	/^   unsigned y;$/;"	m	struct:texture_image	access:public
y	gfx/lima_gfx.c	/^	float x,y;$/;"	m	struct:_point2	file:	access:public
y	gfx/rpng/rpng.c	/^   unsigned y;$/;"	m	struct:adam7_pass	file:	access:public
y	gfx/thread_wrapper.c	/^         float x, y, w, h;$/;"	m	struct:thread_video::__anon215::__anon217	file:	access:public
y	input/overlay.c	/^   float x, y, w, h;$/;"	m	struct:overlay	file:	access:public
y	input/overlay.c	/^   float y;$/;"	m	struct:overlay_desc	file:	access:public
y	input/udev_input.c	/^         float x, y;$/;"	m	struct:input_device::__anon90::__anon91	file:	access:public
y	ps3/ps3_input.c	/^   float y;$/;"	m	struct:__anon77	file:	access:public
y	ps3/rgl/src/include/rgl-typedefs.h	/^   GLint x, y, w, h;$/;"	m	struct:rglGcmViewportState	access:public
y	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
y	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
y1	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
y2	gfx/vg.c	/^   unsigned x1, y1, x2, y2;$/;"	m	struct:__anon225	file:	access:public
yCenter	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat yScale, yCenter;$/;"	m	struct:rglGcmViewportState	access:public
yInverted	ps3/rgl/src/include/rgl-typedefs.h	/^   GLboolean   yInverted;$/;"	m	struct:rglGcmRenderTargetEx	access:public
yInverted	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint  yInverted;$/;"	m	struct:rglGcmRenderTarget	access:public
yOffset	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint      yOffset;$/;"	m	struct:rglGcmRenderTargetEx	access:public
yScale	ps3/rgl/src/include/rgl-typedefs.h	/^   GLfloat yScale, yCenter;$/;"	m	struct:rglGcmViewportState	access:public
ySuperSampling	ps3/rgl/src/include/rgl-typedefs.h	/^   int ySuperSampling; \/\/ supersampling factor in Y$/;"	m	struct:rglGcmDriver_	access:public
y_coord	libretro-test/libretro-test.c	/^static unsigned y_coord;$/;"	v	file:
yblk	ps3/rgl/include/RGL/Types.h	/^      GLuint xblk, yblk;			\/\/ block storage size$/;"	m	struct:rglImage_	access:public
yoffset	gfx/omap_gfx.c	/^  unsigned yoffset;$/;"	m	struct:omapfb_page	file:	access:public
yscale	config.def.h	/^static const float yscale = 3.0; \/\/ Real y res = base_size * yscale$/;"	v
yscale	general.h	/^      float yscale;$/;"	m	struct:settings::__anon227	access:public
ystride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
ystride	ps3/rgl/include/RGL/Types.h	/^      GLsizei ystride;$/;"	m	struct:__anon62	access:public
ytable	gfx/xvideo.c	/^   uint8_t *ytable;$/;"	m	struct:xv	file:	access:public
z	android/native/jni/input_android.c	/^   float z;$/;"	m	struct:__anon80	file:	access:public
z	gfx/d3d9/render_chain.hpp	/^   float x, y, z;$/;"	m	struct:Vertex	access:public
z	ps3/ps3_input.c	/^   float z;$/;"	m	struct:__anon77	file:	access:public
z	xdk/xdk_d3d.h	/^   float x, y, z;$/;"	m	struct:DrawVerticeFormats	access:public
z	xenon/xenon360_video.c	/^   float x, y, z, w;$/;"	m	struct:DrawVerticeFormats	file:	access:public
zError	deps/miniz/zlib.h	397;"	d
z_filefunc	deps/minizip/unzip.c	/^    zlib_filefunc_def z_filefunc;$/;"	m	struct:__anon110	file:	access:public
z_filefunc	deps/minizip/unzip.c	/^    zlib_filefunc_def z_filefunc;$/;"	m	struct:__anon111	file:	access:public
z_off_t	deps/minizip/unzip.h	56;"	d
z_stream	deps/miniz/zlib.h	384;"	d
z_streamp	deps/miniz/zlib.h	/^typedef z_stream *z_streamp;$/;"	t
zclose_file	deps/minizip/unzip.c	/^    close_file_func zclose_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zerror_file	deps/minizip/unzip.c	/^    testerror_file_func zerror_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zeus_id	android/native/jni/input_android.c	/^int zeus_id = -1;$/;"	v
zeus_port	android/native/jni/input_android.c	/^unsigned zeus_port;$/;"	v
zeus_second_id	android/native/jni/input_android.c	/^int zeus_second_id = -1;$/;"	v
zfar	gfx/gl_common.h	/^   GLfloat zfar;$/;"	m	struct:gl_ortho	access:public
zfunc	ps3/rgl/src/include/rgl-typedefs.h	/^   GLuint zfunc;$/;"	m	struct:rglGcmTextureAddress	access:public
zip_extract_cb	file_extract.c	/^static bool zip_extract_cb(const char *name, const uint8_t *cdata, unsigned cmode, uint32_t csize, uint32_t size,$/;"	f	file:	signature:(const char *name, const uint8_t *cdata, unsigned cmode, uint32_t csize, uint32_t size, uint32_t crc32, void *userdata)
zip_extract_userdata	file_extract.c	/^struct zip_extract_userdata$/;"	s	file:
zip_extract_userdata::ext	file_extract.c	/^   struct string_list *ext;$/;"	m	struct:zip_extract_userdata	typeref:struct:zip_extract_userdata::string_list	file:	access:public
zip_extract_userdata::found_rom	file_extract.c	/^   bool found_rom;$/;"	m	struct:zip_extract_userdata	file:	access:public
zip_extract_userdata::zip_path	file_extract.c	/^   char *zip_path;$/;"	m	struct:zip_extract_userdata	file:	access:public
zip_extract_userdata::zip_path_size	file_extract.c	/^   size_t zip_path_size;$/;"	m	struct:zip_extract_userdata	file:	access:public
zip_path	file_extract.c	/^   char *zip_path;$/;"	m	struct:zip_extract_userdata	file:	access:public
zip_path_size	file_extract.c	/^   size_t zip_path_size;$/;"	m	struct:zip_extract_userdata	file:	access:public
zlibVersion	deps/miniz/zlib.h	404;"	d
zlib_backend	file_extract.c	/^static const struct zlib_file_backend zlib_backend = {$/;"	v	typeref:struct:zlib_file_backend	file:
zlib_cb	android/phoenix/jni/apk-extract/apk-extract.c	/^static bool zlib_cb(const char *name, const uint8_t *cdata, unsigned cmode, uint32_t csize, uint32_t size,$/;"	f	file:	signature:(const char *name, const uint8_t *cdata, unsigned cmode, uint32_t csize, uint32_t size, uint32_t crc32, void *userdata)
zlib_extract_first_rom	file_extract.c	/^bool zlib_extract_first_rom(char *zip_path, size_t zip_path_size, const char *valid_exts)$/;"	f	signature:(char *zip_path, size_t zip_path_size, const char *valid_exts)
zlib_extract_first_rom	file_extract.h	/^bool zlib_extract_first_rom(char *zip_path, size_t zip_path_size, const char *valid_exts);$/;"	p	signature:(char *zip_path, size_t zip_path_size, const char *valid_exts)
zlib_file_backend	file_extract.c	/^struct zlib_file_backend$/;"	s	file:
zlib_file_backend::data	file_extract.c	/^   const uint8_t *(*data)(void *handle);$/;"	m	struct:zlib_file_backend	file:	access:public
zlib_file_backend::free	file_extract.c	/^   void (*free)(void *handle); \/\/ Closes, unmaps and frees.$/;"	m	struct:zlib_file_backend	file:	access:public
zlib_file_backend::open	file_extract.c	/^   void *(*open)(const char *path);$/;"	m	struct:zlib_file_backend	file:	access:public
zlib_file_backend::size	file_extract.c	/^   size_t (*size)(void *handle);$/;"	m	struct:zlib_file_backend	file:	access:public
zlib_file_cb	file_extract.h	/^typedef bool (*zlib_file_cb)(const char *name,$/;"	t
zlib_file_data	file_extract.c	/^static const uint8_t *zlib_file_data(void *handle)$/;"	f	file:	signature:(void *handle)
zlib_file_data_t	file_extract.c	/^} zlib_file_data_t;$/;"	t	typeref:struct:__anon108	file:
zlib_file_data_t	file_extract.c	/^} zlib_file_data_t;$/;"	t	typeref:struct:__anon109	file:
zlib_file_free	file_extract.c	/^static void zlib_file_free(void *handle)$/;"	f	file:	signature:(void *handle)
zlib_file_open	file_extract.c	/^static void *zlib_file_open(const char *path)$/;"	f	file:	signature:(const char *path)
zlib_file_size	file_extract.c	/^static size_t zlib_file_size(void *handle)$/;"	f	file:	signature:(void *handle)
zlib_filefunc_def	deps/minizip/unzip.c	/^} zlib_filefunc_def;$/;"	t	typeref:struct:zlib_filefunc_def_s	file:
zlib_filefunc_def_s	deps/minizip/unzip.c	/^typedef struct zlib_filefunc_def_s$/;"	s	file:
zlib_filefunc_def_s::opaque	deps/minizip/unzip.c	/^    voidpf opaque;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zclose_file	deps/minizip/unzip.c	/^    close_file_func zclose_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zerror_file	deps/minizip/unzip.c	/^    testerror_file_func zerror_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zopen_file	deps/minizip/unzip.c	/^    open_file_func zopen_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zread_file	deps/minizip/unzip.c	/^    read_file_func zread_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zseek_file	deps/minizip/unzip.c	/^    seek_file_func zseek_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::ztell_file	deps/minizip/unzip.c	/^    tell_file_func ztell_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_filefunc_def_s::zwrite_file	deps/minizip/unzip.c	/^    write_file_func zwrite_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zlib_get_default_file_backend	file_extract.c	/^const struct zlib_file_backend *zlib_get_default_file_backend(void)$/;"	f	signature:(void)
zlib_get_file_list	file_extract.c	/^struct string_list *zlib_get_file_list(const char *path)$/;"	f	signature:(const char *path)
zlib_get_file_list	file_extract.h	/^struct string_list *zlib_get_file_list(const char *path);$/;"	p	signature:(const char *path)
zlib_get_file_list_cb	file_extract.c	/^static bool zlib_get_file_list_cb(const char *path, const uint8_t *cdata, unsigned cmode,$/;"	f	file:	signature:(const char *path, const uint8_t *cdata, unsigned cmode, uint32_t csize, uint32_t size, uint32_t crc32, void *userdata)
zlib_inflate_data_to_file	file_extract.c	/^bool zlib_inflate_data_to_file(const char *path, const uint8_t *cdata,$/;"	f	signature:(const char *path, const uint8_t *cdata, uint32_t csize, uint32_t size, uint32_t crc32)
zlib_inflate_data_to_file	file_extract.h	/^bool zlib_inflate_data_to_file(const char *path, const uint8_t *data,$/;"	p	signature:(const char *path, const uint8_t *data, uint32_t csize, uint32_t size, uint32_t crc32)
zlib_parse_file	file_extract.c	/^bool zlib_parse_file(const char *file, zlib_file_cb file_cb, void *userdata)$/;"	f	signature:(const char *file, zlib_file_cb file_cb, void *userdata)
zlib_parse_file	file_extract.h	/^bool zlib_parse_file(const char *file, zlib_file_cb file_cb, void *userdata);$/;"	p	signature:(const char *file, zlib_file_cb file_cb, void *userdata)
zlib_version	deps/miniz/zlib.h	405;"	d
znear	gfx/gl_common.h	/^   GLfloat znear;$/;"	m	struct:gl_ortho	access:public
zopen_file	deps/minizip/unzip.c	/^    open_file_func zopen_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zread_file	deps/minizip/unzip.c	/^    read_file_func zread_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zseek_file	deps/minizip/unzip.c	/^    seek_file_func zseek_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei xstride, ystride, zstride;	\/\/ strides$/;"	m	struct:rglImage_	access:public
zstride	ps3/rgl/include/RGL/Types.h	/^      GLsizei zstride;$/;"	m	struct:__anon62	access:public
ztell_file	deps/minizip/unzip.c	/^    tell_file_func ztell_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
zwrite_file	deps/minizip/unzip.c	/^    write_file_func zwrite_file;$/;"	m	struct:zlib_filefunc_def_s	file:	access:public
~ButtonMap	blackberry-qnx/bb10/src/ButtonMap.cpp	/^ButtonMap::~ButtonMap()$/;"	f	class:ButtonMap	signature:()
~ButtonMap	blackberry-qnx/bb10/src/ButtonMap.h	/^    ~ ButtonMap();$/;"	p	class:ButtonMap	access:public	signature:()
~CgArrayType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgArrayType()$/;"	f	class:CgArrayType	access:public	signature:()
~CgBaseType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgBaseType() {}$/;"	f	class:CgBaseType	access:public	signature:()
~CgStructureType	ps3/rgl/src/rgl_ps3_cg.cpp	/^      virtual ~CgStructureType()$/;"	f	class:CgStructureType	access:public	signature:()
~D3DVideo	gfx/d3d9/d3d9.cpp	/^D3DVideo::~D3DVideo()$/;"	f	class:D3DVideo	signature:()
~D3DVideo	gfx/d3d9/d3d9.hpp	/^      ~D3DVideo();$/;"	p	class:D3DVideo	access:public	signature:()
~PackedResource	xdk/xdk_resources.cpp	/^PackedResource::~PackedResource()$/;"	f	class:PackedResource	signature:()
~PackedResource	xdk/xdk_resources.h	/^      ~PackedResource();$/;"	p	class:PackedResource	access:public	signature:()
~RenderChain	gfx/d3d9/render_chain.cpp	/^RenderChain::~RenderChain()$/;"	f	class:RenderChain	signature:()
~RenderChain	gfx/d3d9/render_chain.hpp	/^      ~RenderChain();$/;"	p	class:RenderChain	access:public	signature:()
~RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.cpp	/^RetroArch::~RetroArch()$/;"	f	class:RetroArch	signature:()
~RetroArch	blackberry-qnx/bb10/src/RetroArch-Cascades.h	/^    ~ RetroArch();$/;"	p	class:RetroArch	access:public	signature:()
~Vector	ps3/rgl/include/RGL/Base.h	/^      ~Vector() { clear(); reallocArray( 0 ); }$/;"	f	class:RGL::Vector	access:public	signature:()
~nvb_reader	ps3/rgl/src/cg/nvbi.hpp	/^            virtual ~nvb_reader() {}$/;"	f	class:cgc::bio::nvb_reader	access:public	signature:()
~nvb_reader_impl	ps3/rgl/src/cg/nvbiimpl.hpp	/^               ~nvb_reader_impl();$/;"	p	class:cgc::bio::nvb_reader_impl	access:public	signature:()
~nvb_reader_impl	ps3/rgl/src/rgl_ps3_cg.cpp	/^      nvb_reader_impl::~nvb_reader_impl()$/;"	f	class:cgc::bio::nvb_reader_impl	signature:()
~rglFramebuffer	ps3/rgl/include/RGL/Types.h	/^   virtual ~rglFramebuffer()$/;"	f	struct:rglFramebuffer	access:public	signature:()
~rglPlatformFramebuffer	ps3/rgl/src/include/rgl-typedefs.h	/^   virtual ~rglPlatformFramebuffer() {};$/;"	f	struct:rglPlatformFramebuffer	access:public	signature:()
~xaudio2	audio/xaudio-c/xaudio-c.cpp	/^   virtual ~xaudio2() {}$/;"	f	struct:xaudio2	access:public	signature:()
